<Type Name="HttpListener" FullName="System.Net.HttpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f991291f719da3b2389d059c7533baa7d1e345a0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36472517" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListener sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="35e3b-101">Provides a simple, programmatically controlled HTTP protocol listener.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35e3b-101">Provides a simple, programmatically controlled HTTP protocol listener.</span>
      </span>
      <span data-ttu-id="35e3b-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="35e3b-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-103">使用して、<xref:System.Net.HttpListener>クラス、HTTP 要求に応答する単純な HTTP プロトコル リスナーを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-103">Using the <xref:System.Net.HttpListener> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</span></span> <span data-ttu-id="35e3b-104">有効期間は、リスナーはアクティブ、<xref:System.Net.HttpListener>オブジェクトとそのアクセス許可を使用してアプリケーション内で実行されます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-104">The listener is active for the lifetime of the <xref:System.Net.HttpListener> object and runs within your application with its permissions.</span></span>
   
 <span data-ttu-id="35e3b-105">使用する<xref:System.Net.HttpListener>を使用して、クラスの新しいインスタンスを作成、<xref:System.Net.HttpListener>コンス トラクターと使用、<xref:System.Net.HttpListener.Prefixes%2A>どの Uniform Resource Identifier () を指定する文字列を保持するコレクションにアクセスするためにプロパティの前に、 <xref:System.Net.HttpListener>処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="35e3b-105">To use <xref:System.Net.HttpListener>, create a new instance of the class using the <xref:System.Net.HttpListener> constructor and use the <xref:System.Net.HttpListener.Prefixes%2A> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <xref:System.Net.HttpListener> should process.</span></span>
  
 <span data-ttu-id="35e3b-106">URI のプレフィックス文字列は、スキーム (http または https)、ホスト、任意のポート、および省略可能なパスで構成されます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-106">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</span></span> <span data-ttu-id="35e3b-107">完全なプレフィックス文字列の例は* http://www.contoso.com:8080/customerData/* です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-107">An example of a complete prefix string is *http://www.contoso.com:8080/customerData/*.</span></span> <span data-ttu-id="35e3b-108">プレフィックスは、スラッシュ (「/」) で終了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="35e3b-108">Prefixes must end in a forward slash ("/").</span></span> <span data-ttu-id="35e3b-109"><xref:System.Net.HttpListener>要求 URI に最も一致するプレフィックスを持つオブジェクトが要求に応答します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-109">The <xref:System.Net.HttpListener> object with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="35e3b-110">複数<xref:System.Net.HttpListener>オブジェクトが同一のプレフィックスを追加できません;<xref:System.ComponentModel.Win32Exception>例外がスローされます、<xref:System.Net.HttpListener>で使用されるプレフィックスは既にを追加します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-110">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix; a <xref:System.ComponentModel.Win32Exception> exception is thrown if a <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>
  
 <span data-ttu-id="35e3b-111">ホストの要素を置き換えることが、ポートを指定すると、"\*"ことを示す、<xref:System.Net.HttpListener>要求された URI が他のプレフィックスと一致しない場合、ポートに送信された要求を受け入れます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-111">When a port is specified, the host element can be replaced with "\*" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="35e3b-112">たとえば、すべての要求を受信するポート 8080 が要求された URI がいずれかで処理されないときに送信<xref:System.Net.HttpListener>、プレフィックスは*http://\*: 8080/* です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-112">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <xref:System.Net.HttpListener>, the prefix is *http://\*:8080/*.</span></span> <span data-ttu-id="35e3b-113">同様に、ことを指定する、<xref:System.Net.HttpListener>ポートに送信されたすべての要求を受け付ける「+」文字で、ホストの要素を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-113">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "+" character.</span></span> <span data-ttu-id="35e3b-114">たとえば、*https://+:8080* です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-114">For example, *https://+:8080*.</span></span> <span data-ttu-id="35e3b-115">"\*"と「+」文字のパスを含むプレフィックスに使用できます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-115">The "\*" and "+" characters can be present in prefixes that include paths.</span></span>
  
 <span data-ttu-id="35e3b-116">.NET Core 2.0 または Windows 10 での .NET Framework 4.6 から始めてで管理されている URI プレフィックスでサブドメインをワイルドカードはサポートされて、<xref:System.Net.HttpListener>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="35e3b-116">Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="35e3b-117">ワイルドカードのサブドメインを指定する、"\*"URI プレフィックスのホスト名の一部として文字です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-117">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix.</span></span> <span data-ttu-id="35e3b-118">たとえば、 *http://\*.foo.com/* です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-118">For example, *http://\*.foo.com/*.</span></span> <span data-ttu-id="35e3b-119">引数として渡す、<xref:System.Net.HttpListenerPrefixCollection.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-119">Pass this as the argument to the <xref:System.Net.HttpListenerPrefixCollection.Add%2A> method.</span></span> <span data-ttu-id="35e3b-120">.NET Core 2.0 または Windows 10 以外の .NET Framework 4.6 の時点でこの動作します。以前のバージョンが生成されます、<xref:System.Net.HttpListenerException>です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-120">This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <xref:System.Net.HttpListenerException>.</span></span>

 > [!WARNING]
 > <span data-ttu-id="35e3b-121">最上位のワイルドカードのバインディング (*http://\*: 8080/* と\* http://+:8080 \*) する必要があります**いない**使用します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-121">Top-level wildcard bindings (*http://\*:8080/* and *http://+:8080*) should **not** be used.</span></span> <span data-ttu-id="35e3b-122">最上位のワイルドカードのバインドは、セキュリティの脆弱性に対してアプリを切り開くことができます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-122">Top-level wildcard bindings can open up your app to security vulnerabilities.</span></span> <span data-ttu-id="35e3b-123">これは、強力と脆弱の両方のワイルドカードに適用されます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-123">This applies to both strong and weak wildcards.</span></span> <span data-ttu-id="35e3b-124">ワイルドカードではなく、明示的なホスト名を使用します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-124">Use explicit host names rather than wildcards.</span></span> <span data-ttu-id="35e3b-125">全体の親ドメインを制御する場合、サブドメイン ワイルドカード バインド (たとえば、`*.mysub.com`) にこのセキュリティ リスクはありません (脆弱である `*.com` とは対照的)。</span><span class="sxs-lookup"><span data-stu-id="35e3b-125">Subdomain wildcard binding (for example, `*.mysub.com`) doesn't have this security risk if you control the entire parent domain (as opposed to `*.com`, which is vulnerable).</span></span> <span data-ttu-id="35e3b-126">詳細については、[rfc7230 セクション-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="35e3b-126">See [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) for more information.</span></span>
  
 <span data-ttu-id="35e3b-127">クライアントからの要求のリッスンを開始するには、呼び出し、コレクションに URI プレフィックスを追加、<xref:System.Net.HttpListener.Start%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-127">To begin listening for requests from clients, add the URI prefixes to the collection and call the <xref:System.Net.HttpListener.Start%2A> method.</span></span> <span data-ttu-id="35e3b-128"><xref:System.Net.HttpListener> クライアント要求を処理するための同期および非同期の両方のモデルを提供します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-128"><xref:System.Net.HttpListener> offers both synchronous and asynchronous models for processing client requests.</span></span> <span data-ttu-id="35e3b-129">要求とその関連付けられた応答を使用してアクセス、<xref:System.Net.HttpListenerContext>によって返されるオブジェクト、<xref:System.Net.HttpListener.GetContext%2A>メソッドまたは対応する非同期、<xref:System.Net.HttpListener.BeginGetContext%2A>と<xref:System.Net.HttpListener.EndGetContext%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-129">Requests and their associated responses are accessed using the <xref:System.Net.HttpListenerContext> object returned by the <xref:System.Net.HttpListener.GetContext%2A> method or its asynchronous counterparts, the <xref:System.Net.HttpListener.BeginGetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods.</span></span>
  
 <span data-ttu-id="35e3b-130">同期のモデルは、一度に 1 つの要求を処理する場合と、クライアントの要求の待機中に、アプリケーションをブロックする場合に適しています。</span><span class="sxs-lookup"><span data-stu-id="35e3b-130">The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</span></span> <span data-ttu-id="35e3b-131">同期モデルを使用して、呼び出し、<xref:System.Net.HttpListener.GetContext%2A>メソッドで、クライアントが要求を送信するを待機します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-131">Using the synchronous model, call the <xref:System.Net.HttpListener.GetContext%2A> method, which waits for a client to send a request.</span></span> <span data-ttu-id="35e3b-132">このメソッドを返します、<xref:System.Net.HttpListenerContext>が発生するときに 1 つを処理するオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="35e3b-132">The method returns an <xref:System.Net.HttpListenerContext> object to you for processing when one occurs.</span></span>
  
 <span data-ttu-id="35e3b-133">モデルより複雑な非同期、独自の実行スレッドで処理が要求や各要求の待機中に、アプリはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="35e3b-133">In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</span></span> <span data-ttu-id="35e3b-134">使用して、<xref:System.Net.HttpListener.BeginGetContext%2A>受信要求ごとに呼び出されるアプリケーション定義のメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-134">Use the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify an application-defined method to be called for each incoming request.</span></span> <span data-ttu-id="35e3b-135">そのメソッドの呼び出し、<xref:System.Net.HttpListener.EndGetContext%2A>要求を取得する、処理、および対応するメソッド。</span><span class="sxs-lookup"><span data-stu-id="35e3b-135">Within that method, call the <xref:System.Net.HttpListener.EndGetContext%2A> method to obtain the request, process it, and respond.</span></span>
  
 <span data-ttu-id="35e3b-136">どちらのモデルでは、受信要求を使用してアクセス、<xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType>によって表されるプロパティであり、<xref:System.Net.HttpListenerRequest>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="35e3b-136">In either model, incoming requests are accessed using the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerRequest> objects.</span></span> <span data-ttu-id="35e3b-137">同様に、応答を使用してアクセス、<xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType>によって表されるプロパティであり、<xref:System.Net.HttpListenerResponse>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="35e3b-137">Similarly, responses are accessed using the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerResponse> objects.</span></span> <span data-ttu-id="35e3b-138">これらのオブジェクトの一部の機能を共有する、<xref:System.Net.HttpWebRequest>と<xref:System.Net.HttpWebResponse>オブジェクトではなく、後者のオブジェクトを組み合わせて使用することはできません<xref:System.Net.HttpListener>クライアント、ありませんサーバー、動作を実装しているためです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-138">These objects share some functionality with the <xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> objects, but the latter objects cannot be used in conjunction with <xref:System.Net.HttpListener> because they implement client, not server, behaviors.</span></span>
  
 <span data-ttu-id="35e3b-139"><xref:System.Net.HttpListener>クライアント認証を要求できます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-139">An <xref:System.Net.HttpListener> can require client authentication.</span></span> <span data-ttu-id="35e3b-140">、認証を使用する特定の方式は、いずれかを指定するか、使用するスキームを決定するデリゲートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-140">You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</span></span> <span data-ttu-id="35e3b-141">クライアントの id に関する情報を取得する認証の何らかの形式を要求する必要があります。</span><span class="sxs-lookup"><span data-stu-id="35e3b-141">You must require some form of authentication to obtain information about the client's identity.</span></span> <span data-ttu-id="35e3b-142">詳細については、次を参照してください。、 <xref:System.Net.HttpListenerContext.User%2A>、 <xref:System.Net.HttpListener.AuthenticationSchemes%2A>、および<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-142">For additional information, see the <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, and <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> properties.</span></span>
  
> [!NOTE]
> <span data-ttu-id="35e3b-143">作成する場合、 <xref:System.Net.HttpListener> https を使用する必要がありますサーバー証明書を選択そのリスナーです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-143">If you create an <xref:System.Net.HttpListener> using https, you must select a Server Certificate for that listener.</span></span> <span data-ttu-id="35e3b-144">それ以外の場合、<xref:System.Net.HttpWebRequest>このクエリ<xref:System.Net.HttpListener>は接続の予期しない終了で失敗します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-144">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span>
  
> [!NOTE]
> <span data-ttu-id="35e3b-145">ネットワーク シェル (netsh.exe) を使用して、サーバー証明書とその他のリスナー オプションを構成できます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-145">You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</span></span> <span data-ttu-id="35e3b-146">参照してください[ネットワーク シェル (Netsh)](/windows-server/networking/technologies/netsh/netsh)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="35e3b-146">See [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) for more details.</span></span> <span data-ttu-id="35e3b-147">実行可能ファイルは、Windows Server 2008 および Windows Vista での配布を開始しました。</span><span class="sxs-lookup"><span data-stu-id="35e3b-147">The executable began shipping with Windows Server 2008 and Windows Vista.</span></span>
  
> [!NOTE]
> <span data-ttu-id="35e3b-148">複数の認証スキームを指定する場合、 <xref:System.Net.HttpListener>、リスナーは、次の順序でクライアントをチャレンジ: `Negotiate`、 `NTLM`、 `Digest`、し`Basic`です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-148">If you specify multiple authentication schemes for the <xref:System.Net.HttpListener>, the listener will challenge clients in the following order: `Negotiate`, `NTLM`, `Digest`, and then `Basic`.</span></span>
  
   
  
## Examples
 <span data-ttu-id="35e3b-149">次のコード例では、使用方法を示します、<xref:System.Net.HttpListener>です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-149">The following code example demonstrates using a <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-151">このコンス トラクターによって返されるインスタンスを使用する前に呼び出す必要があります、<xref:System.Net.HttpListener.Start%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-151">Before using the instance returned by this constructor, you must invoke its <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-152">次のコード例では、使用方法を示します、<xref:System.Net.HttpListener>を新規作成するコンス トラクター<xref:System.Net.HttpListener>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="35e3b-152">The following code example demonstrates using the <xref:System.Net.HttpListener> constructor to create a new <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="35e3b-153">完全な例については、<xref:System.Net.HttpListener>クラスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="35e3b-153">For the complete example, see the <xref:System.Net.HttpListener> class topic.</span></span>  
  
 [!code-csharp[Net_listener_Basic#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="35e3b-154">This class cannot be used on the current operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-154">This class cannot be used on the current operating system.</span>
          </span>
          <span data-ttu-id="35e3b-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="35e3b-156">
            <para>注: このメンバーは、アプリケーションでネットワーク トレースを有効にする場合にトレース情報を出力します。詳細については、[ネットワークのトレースで .NET Framework](~/docs/framework/network-programming/network-tracing.md) を参照してください。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-156">
              <para>Note: This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpListener.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-157">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-157">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-158">このメソッドは、このリスナーで保持されているすべてのリソースを破棄します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-158">This method disposes of all resources held by this listener.</span></span> <span data-ttu-id="35e3b-159">保留中の要求が完了することができます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-159">Any pending requests are unable to complete.</span></span>  
  
 <span data-ttu-id="35e3b-160">このメソッドを呼び出した後に表示されます、<xref:System.ObjectDisposedException>これを使用しようとすると<xref:System.Net.HttpListener>です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-160">After calling this method, you will receive an <xref:System.ObjectDisposedException> if you attempt to use this <xref:System.Net.HttpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-161">次のコード例では、このメソッドを呼び出すことを示します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-161">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="35e3b-162">
            <para>このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。詳細については、[ネットワークのトレースで .NET Framework](~/docs/framework/network-programming/network-tracing.md) を参照してください。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-162">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationSchemes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemes" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemes As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationSchemes { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemes : System.Net.AuthenticationSchemes with get, set" Usage="System.Net.HttpListener.AuthenticationSchemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-163">Gets or sets the scheme used to authenticate clients.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-163">Gets or sets the scheme used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-164">クライアントの認証方法を示す <see cref="T:System.Net.AuthenticationSchemes" /> 列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-164">A bitwise combination of <see cref="T:System.Net.AuthenticationSchemes" /> enumeration values that indicates how clients are to be authenticated.</span>
          </span>
          <span data-ttu-id="35e3b-165">既定値は <see cref="F:System.Net.AuthenticationSchemes.Anonymous" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-165">The default value is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-166"><xref:System.Net.HttpListener>指定されたスキームを使用してすべての着信要求を認証します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-166">The <xref:System.Net.HttpListener> uses the specified scheme to authenticate all incoming requests.</span></span> <span data-ttu-id="35e3b-167"><xref:System.Net.HttpListener.GetContext%2A>と<xref:System.Net.HttpListener.EndGetContext%2A>場合にのみ、メソッドは、受信クライアント要求を返す、<xref:System.Net.HttpListener>が正常に要求を認証します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-167">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming client request only if the <xref:System.Net.HttpListener> successfully authenticates the request.</span></span>  
  
 <span data-ttu-id="35e3b-168">使用して正常に認証されたクライアントの id を問い合わせることができます、<xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-168">You can interrogate the identity of a successfully authenticated client by using the <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="35e3b-169">場合は、 <xref:System.Net.HttpListener> 、受け取った要求の特性に基づいて、異なる認証メカニズムを使用するオブジェクト (たとえば、要求の<xref:System.Net.HttpListenerRequest.Url%2A>または<xref:System.Net.HttpListenerRequest.UserHostName%2A>プロパティ)、選択したメソッドを実装する必要があります、認証方式です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-169">If you want an <xref:System.Net.HttpListener> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostName%2A> property), you must implement a method that chooses the authentication scheme.</span></span> <span data-ttu-id="35e3b-170">これを行う方法については、次を参照してください。、<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>プロパティの説明。</span><span class="sxs-lookup"><span data-stu-id="35e3b-170">For instructions about how to do this, see the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35e3b-171">ダイジェストを有効にするには、このプロパティを設定するには、NTLM、またはネゴシエートが必要です、 <xref:System.Security.Permissions.SecurityPermission>、<xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-171">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-172">次のコード例では、使用方法を示します、<xref:System.Net.HttpListener.AuthenticationSchemes%2A>プロパティの認証方式を指定します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-172">The following code example demonstrates using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property to specify an authentication scheme.</span></span>  
  
 [!code-csharp[Net_listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-173">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-173">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemeSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemeSelectorDelegate As AuthenticationSchemeSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemeSelector ^ AuthenticationSchemeSelectorDelegate { System::Net::AuthenticationSchemeSelector ^ get(); void set(System::Net::AuthenticationSchemeSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemeSelectorDelegate : System.Net.AuthenticationSchemeSelector with get, set" Usage="System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemeSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-174">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-174">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-175">認証プロトコルの選択に使用されるメソッドを呼び出す <see cref="T:System.Net.AuthenticationSchemeSelector" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-175">An <see cref="T:System.Net.AuthenticationSchemeSelector" /> delegate that invokes the method used to select an authentication protocol.</span>
          </span>
          <span data-ttu-id="35e3b-176">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-176">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="35e3b-177">場合は、同じ認証プロトコルの特定のインスタンスによって処理されるすべての要求に使用する<xref:System.Net.HttpListener>、このプロパティを設定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="35e3b-177">If you want the same authentication protocol to be used for all requests handled by a particular instance of <xref:System.Net.HttpListener>, you do not need to set this property.</span></span> <span data-ttu-id="35e3b-178">すべてのクライアント要求に使用するプロトコルを指定するには、<xref:System.Net.HttpListener.AuthenticationSchemes%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-178">To specify a protocol to be used for all client requests, use the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property.</span></span>  
  
 <span data-ttu-id="35e3b-179">クライアントがそのヘッダー内に認証情報が指定されていない場合、<xref:System.Net.HttpListener>を決定する、存在する場合、プロトコル、クライアントの認証を使用して認証されていない受信要求ごとに指定されたデリゲートを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-179">If the client has not specified authentication information in its headers, the <xref:System.Net.HttpListener> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</span></span> <span data-ttu-id="35e3b-180"><xref:System.Net.HttpListener.GetContext%2A>と<xref:System.Net.HttpListener.EndGetContext%2A>メソッドが、着信要求場合にのみを返す、<xref:System.Net.HttpListener>要求を正常に認証します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-180">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming request only if the <xref:System.Net.HttpListener> successfully authenticated the request.</span></span> <span data-ttu-id="35e3b-181">要求を認証できない場合、 <xref:System.Net.HttpListener> 401 応答を送信が自動的にバックアップします。</span><span class="sxs-lookup"><span data-stu-id="35e3b-181">If a request cannot be authenticated, the <xref:System.Net.HttpListener> automatically sends back a 401 response.</span></span> <span data-ttu-id="35e3b-182">使用して正常に認証されたクライアントの id を取得することができます、<xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-182">You can get the identity of a successfully authenticated client using the <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="35e3b-183">アプリケーション固有のメソッドに認証プロトコルの選択を委任することのインスタンスを作成する場合に役立ちます<xref:System.Net.HttpListener>(の受信要求の特性に応じて、異なる認証プロトコルを使用するには。たとえば、要求の<xref:System.Net.HttpListenerRequest.Url%2A>または<xref:System.Net.HttpListenerRequest.UserHostAddress%2A>プロパティ)。</span><span class="sxs-lookup"><span data-stu-id="35e3b-183">The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <xref:System.Net.HttpListener> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35e3b-184">ダイジェストを有効にするには、このプロパティを設定するには、NTLM、またはネゴシエートが必要です、 <xref:System.Security.Permissions.SecurityPermission>、<xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-184">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-185">次のコード例では、このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-185">The following code example sets the value of this property.</span></span>  
  
 [!code-csharp[NclListener#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#2)]
 [!code-vb[NclListener#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#2)]  
  
 <span data-ttu-id="35e3b-186">次のコード例は、によって呼び出されるメソッドの実装を提供する<xref:System.Net.AuthenticationSchemeSelector>を委任します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-186">The following code example provides an implementation of a method invoked by an <xref:System.Net.AuthenticationSchemeSelector> delegate.</span></span>  
  
 [!code-csharp[NclListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#1)]
 [!code-vb[NclListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-187">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-187">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetContext">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetContext (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetContext(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetContext (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetContext(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetContext : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListener.BeginGetContext (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="35e3b-188">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-188">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="35e3b-189">A user-defined object that contains information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-189">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="35e3b-190">This object is passed to the <c>callback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-190">This object is passed to the <c>callback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35e3b-191">Begins asynchronously retrieving an incoming request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-191">Begins asynchronously retrieving an incoming request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35e3b-192">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-192">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-193"><xref:System.Net.HttpListener.BeginGetContext%2A>メソッドは、受信クライアント要求を受信する非同期 (非ブロッキング) 呼び出しを開始します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-193">The <xref:System.Net.HttpListener.BeginGetContext%2A> method begins an asynchronous (non-blocking) call to receive incoming client requests.</span></span> <span data-ttu-id="35e3b-194">このメソッドを呼び出す前に呼び出す必要があります、<xref:System.Net.HttpListener.Start%2A>メソッドのために、URI 文字列を追加することでリッスンするには、少なくとも 1 つの (Uniform Resource Identifier) プレフィックスを追加し、<xref:System.Net.HttpListenerPrefixCollection>によって返される、<xref:System.Net.HttpListener.Prefixes%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-194">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="35e3b-195">呼び出して、非同期操作を完了する必要があります、<xref:System.Net.HttpListener.EndGetContext%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-195">The asynchronous operation must be completed by calling the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span> <span data-ttu-id="35e3b-196">通常、このメソッドはによって、`callback`を委任します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-196">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="35e3b-197">このメソッドは、操作が完了するにはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="35e3b-197">This method does not block while the operation completes.</span></span> <span data-ttu-id="35e3b-198">操作が完了するまでに、入力方向の要求とブロックを取得する、<xref:System.Net.HttpListener.GetContext%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-198">To get an incoming request and block until the operation completes, call the <xref:System.Net.HttpListener.GetContext%2A> method.</span></span>  
  
 <span data-ttu-id="35e3b-199">詳細については、非同期プログラミング モデルを使用して、次を参照してください[同期のメソッドを非同期に呼び出す。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="35e3b-199">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-200">次のコード例では、使用方法を示します、<xref:System.Net.HttpListener.BeginGetContext%2A>着信クライアント要求を処理するコールバック メソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-200">The following code example demonstrates using the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify a callback method that will handle incoming client requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 <span data-ttu-id="35e3b-201">次のコード例では、コールバック メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-201">The following code example implements a callback method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="35e3b-202">A Win32 function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-202">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="35e3b-203">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-203">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35e3b-204">This object has not been started or is currently stopped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-204">This object has not been started or is currently stopped.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-205">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-205">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="35e3b-206">
            <para>このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。詳細については、[ネットワークのトレースで .NET Framework](~/docs/framework/network-programming/network-tracing.md) を参照してください。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-206">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="httpListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-207">Shuts down the <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-207">Shuts down the <see cref="T:System.Net.HttpListener" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-208">このメソッドを呼び出した後、使用できなくなります、<xref:System.Net.HttpListener>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="35e3b-208">After calling this method, you can no longer use the <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="35e3b-209">一時的に停止する<xref:System.Net.HttpListener>オブジェクトを使用して、<xref:System.Net.HttpListener.Stop%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-209">To temporarily pause an <xref:System.Net.HttpListener> object, use the <xref:System.Net.HttpListener.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="35e3b-210">このメソッドがシャット ダウン、<xref:System.Net.HttpListener>キューに置かれた要求を処理することがなくオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="35e3b-210">This method shut downs the <xref:System.Net.HttpListener> object without processing queued requests.</span></span> <span data-ttu-id="35e3b-211">保留中の要求が完了することができます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-211">Any pending requests are unable to complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-212">次のコード例では、このメソッドを呼び出すことを示します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-212">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="35e3b-213">
            <para>このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。詳細については、[ネットワークのトレースで .NET Framework](~/docs/framework/network-programming/network-tracing.md) を参照してください。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-213">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultServiceNames">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.DefaultServiceNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultServiceNames As ServiceNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ DefaultServiceNames { System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultServiceNames : System.Security.Authentication.ExtendedProtection.ServiceNameCollection" Usage="System.Net.HttpListener.DefaultServiceNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ServiceNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-214">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-214">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-215">SPN の一覧を格納している <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-215">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains a list of SPNs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-216"><xref:System.Net.HttpListener.DefaultServiceNames%2A>プロパティは拡張保護を提供する統合 Windows 認証で使用します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-216">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="35e3b-217">Spn のリストが初期化される、<xref:System.Net.HttpListener.Prefixes%2A>プロパティ アクセスし、する新しいプレフィックスが追加されると、クリア、<xref:System.Net.HttpListener.Prefixes%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-217">The list of SPNs is initialized from the <xref:System.Net.HttpListener.Prefixes%2A> property when accessed and cleared when new prefixes are added to the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="35e3b-218"><xref:System.Net.HttpListener.DefaultServiceNames%2A>プロパティには、アプリケーションが設定されていない場合、使用、<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A>拡張保護ポリシーのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-218">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used if an application doesn't set the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> property on its extended protection policy.</span></span>  
  
 <span data-ttu-id="35e3b-219"><xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection>で取得した、<xref:System.Net.HttpListener.DefaultServiceNames%2A>からプロパティを構築、<xref:System.Net.HttpListener.Prefixes%2A>次の規則に従ってプロパティ。</span><span class="sxs-lookup"><span data-stu-id="35e3b-219">The <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> that is retrieved with the <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is built from the <xref:System.Net.HttpListener.Prefixes%2A> property according to the following rules:</span></span>  
  
1.  <span data-ttu-id="35e3b-220">場合は、ホスト名が「+」、"*"、または IPv4 または IPv6 リテラル (に相当"\*"特定のローカル インターフェイスには制限付き)、次の SPN が追加されます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-220">If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "\*" but restricted to a specific local interface), the following SPN is added:</span></span>  
  
 <span data-ttu-id="35e3b-221">`"HTTP/"` さらに、コンピューターの完全修飾ドメイン名。</span><span class="sxs-lookup"><span data-stu-id="35e3b-221">`"HTTP/"` plus the fully qualified domain name of the computer.</span></span>  
  
1.  <span data-ttu-id="35e3b-222">DNS を使用して、完全修飾ドメイン名を解決しようとは、ホスト名にドット (ドメインまたはサブドメイン) が含まれていない場合 (によって使用される動作は同じ<xref:System.Net.HttpWebRequest>)。</span><span class="sxs-lookup"><span data-stu-id="35e3b-222">If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <xref:System.Net.HttpWebRequest>).</span></span> <span data-ttu-id="35e3b-223">完全修飾ドメイン名を解決できる場合は、次のような Spn が追加されます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-223">If the fully-qualified domain name can be resolved, the following SPNs are added:</span></span>  
  
 <span data-ttu-id="35e3b-224">`"HTTP/"` さらに、ホスト名 (短い名前)。</span><span class="sxs-lookup"><span data-stu-id="35e3b-224">`"HTTP/"` plus the hostname (the short name).</span></span>  
  
 <span data-ttu-id="35e3b-225">`"HTTP/"` さらに、ホスト名の完全修飾ドメイン名。</span><span class="sxs-lookup"><span data-stu-id="35e3b-225">`"HTTP/"` plus the fully qualified domain name for the hostname.</span></span>  
  
1.  <span data-ttu-id="35e3b-226">ホスト名には (ドメインまたはサブドメイン) をドットが含まれています、完全修飾ドメイン名を解決できない場合は、以下の SPN が追加されます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-226">If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</span></span>  
  
 <span data-ttu-id="35e3b-227">`"HTTP/"` さらに、ホスト名。</span><span class="sxs-lookup"><span data-stu-id="35e3b-227">`"HTTP/"` plus the hostname.</span></span>  
  
1.  <span data-ttu-id="35e3b-228">ホスト名にドット (ドメインまたはサブドメイン) が含まれている場合は、以下の SPN が追加されます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-228">If the hostname contains dots (domains or subdomains), the following SPN is added:</span></span>  
  
 <span data-ttu-id="35e3b-229">`"HTTP/"` さらに、ホスト名。</span><span class="sxs-lookup"><span data-stu-id="35e3b-229">`"HTTP/"` plus the hostname.</span></span>  
  
 <span data-ttu-id="35e3b-230"><xref:System.Net.HttpListener.DefaultServiceNames%2A>プロパティは、カスタム リストが指定されていない場合、認証に使用される既定の Spn の一覧を確認するアプリケーションで使用できます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-230">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</span></span> <span data-ttu-id="35e3b-231">アプリケーションがのいずれかでを追加できる他の Spn が必要な場合は、<xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-231">If other SPNs are needed, an application can add them using one of the <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> methods.</span></span>  
  
 <span data-ttu-id="35e3b-232">拡張保護を使用してこれを偽装することができますので、要求された URL に基づくポリシー意思決定を行うときに、安全ではありません。</span><span class="sxs-lookup"><span data-stu-id="35e3b-232">It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</span></span> <span data-ttu-id="35e3b-233">代わりに、アプリケーションが依存して、<xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>または<xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>このようなポリシーを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-233">Rather, applications should rely on the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> or <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> properties to make such policy decisions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EndGetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext EndGetContext (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext EndGetContext(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetContext (asyncResult As IAsyncResult) As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ EndGetContext(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetContext : IAsyncResult -&gt; System.Net.HttpListenerContext" Usage="httpListener.EndGetContext asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="35e3b-234">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-234">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="35e3b-235">Completes an asynchronous operation to retrieve an incoming client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-235">Completes an asynchronous operation to retrieve an incoming client request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35e3b-236">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-236">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-237"><xref:System.Net.HttpListener.EndGetContext%2A>メソッドは、通常を取得する、デリゲートによって呼び出されてアプリケーション定義のコールバック メソッド内で、<xref:System.Net.HttpListenerContext>受信クライアント要求とその関連する応答を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="35e3b-237">The <xref:System.Net.HttpListener.EndGetContext%2A> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <xref:System.Net.HttpListenerContext> object that contains an incoming client request and its associated response.</span></span> <span data-ttu-id="35e3b-238">このメソッドは、以前の呼び出しによって開始された操作を完了すると、<xref:System.Net.HttpListener.BeginGetContext%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-238">This method completes an operation previously started by calling the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="35e3b-239">操作が完了していない場合、このメソッドはそれまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="35e3b-239">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="35e3b-240">呼び出すため、<xref:System.Net.HttpListener.EndGetContext%2A>メソッドが必要な<xref:System.Net.HttpListener>オブジェクトをこのオブジェクトは、通常に渡されたでコールバック メソッドに渡される状態オブジェクトを使用して、<xref:System.Net.HttpListener.BeginGetContext%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-240">Because calling the <xref:System.Net.HttpListener.EndGetContext%2A> method requires the <xref:System.Net.HttpListener> object, this object is typically passed into a callback method by using the state object passed into the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="35e3b-241">使用してこの状態オブジェクトを取得することができます、<xref:System.IAsyncResult.AsyncState%2A>のプロパティ、`asyncResult`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="35e3b-241">You can obtain this state object by using the <xref:System.IAsyncResult.AsyncState%2A> property of the `asyncResult` object.</span></span>  
  
 <span data-ttu-id="35e3b-242">詳細については、非同期プログラミング モデルを使用して、次を参照してください[同期のメソッドを非同期に呼び出す。](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="35e3b-242">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-243">次のコード例が呼び出すコールバック メソッドの実装を示しています、<xref:System.Net.HttpListener.EndGetContext%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-243">The following code example shows the implementation of a callback method that calls the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35e3b-244">
            <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-244">
              <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35e3b-245">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-245">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35e3b-246">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-246">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-247">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-247">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="35e3b-248">
            <para>このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。詳細については、[ネットワークのトレースで .NET Framework](~/docs/framework/network-programming/network-tracing.md) を参照してください。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-248">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionPolicy : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy with get, set" Usage="System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("not used anywhere in the implementation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-249">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-249">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-250">拡張保護に使用するポリシーを指定する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-250">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-251"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>プロパティは拡張保護を提供する統合 Windows 認証で使用します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-251">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="35e3b-252"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>プロパティでは、全体の拡張保護ポリシーの構成<xref:System.Net.HttpListener>セッションです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-252">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="35e3b-253"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A>プロパティが個々 の要求の拡張保護ポリシーの構成を使用します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-253">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy for each individual request.</span></span>  
  
 <span data-ttu-id="35e3b-254"><xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A>プロパティである必要があります`null`です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-254">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="35e3b-255"><xref:System.Net.HttpListener>インスタンスが 1 つを使用する必要がある場合に、独自の TLS セッションから直接、チャネル バインディング トークン (CBT) を取得します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-255">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35e3b-256">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-256">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35e3b-257">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-257">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35e3b-258">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-258">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-259">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-259">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="35e3b-260">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-260">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener.ExtendedProtectionSelector ExtendedProtectionSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener/ExtendedProtectionSelector ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionSelectorDelegate As HttpListener.ExtendedProtectionSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener::ExtendedProtectionSelector ^ ExtendedProtectionSelectorDelegate { System::Net::HttpListener::ExtendedProtectionSelector ^ get(); void set(System::Net::HttpListener::ExtendedProtectionSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionSelectorDelegate : System.Net.HttpListener.ExtendedProtectionSelector with get, set" Usage="System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener+ExtendedProtectionSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-261">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-261">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-262">拡張保護に使用するポリシーを指定する <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-262">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-263"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>プロパティは拡張保護を提供する統合 Windows 認証で使用します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-263">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="35e3b-264"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>プロパティでは、全体の拡張保護ポリシーの構成<xref:System.Net.HttpListener>セッションです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-264">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="35e3b-265"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A>プロパティが個々 の要求ごとに、拡張保護ポリシーの構成を使用します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-265">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy per individual request.</span></span>  
  
 <span data-ttu-id="35e3b-266"><xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A>プロパティである必要があります`null`です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-266">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="35e3b-267"><xref:System.Net.HttpListener>インスタンスが 1 つを使用する必要がある場合に、独自の TLS セッションから直接、チャネル バインディング トークン (CBT) を取得します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-267">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 <span data-ttu-id="35e3b-268">要求ごとに、デリゲートを選択できます、設定を<xref:System.Net.HttpListener>インスタンスを使用して拡張保護を提供します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-268">For each request, the delegate can choose the settings that the <xref:System.Net.HttpListener> instance will use to provide extended protection.</span></span>  
  
 <span data-ttu-id="35e3b-269">デリゲートを返す場合`null`このプロパティは、これを表します、<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy>を<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>プロパティに設定<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-269">If a delegate returns `null` for this property, this represents a <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> which the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> property set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="35e3b-270">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-270">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="35e3b-271">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-271">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35e3b-272">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-272">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-273">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-273">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="35e3b-274">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-274">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ GetContext();" />
      <MemberSignature Language="F#" Value="member this.GetContext : unit -&gt; System.Net.HttpListenerContext" Usage="httpListener.GetContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-275">Waits for an incoming request and returns when one is received.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-275">Waits for an incoming request and returns when one is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35e3b-276">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-276">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-277">このメソッドを呼び出す前に呼び出す必要があります、<xref:System.Net.HttpListener.Start%2A>メソッドのために、URI 文字列を追加することでリッスンするには、少なくとも 1 つの URI プレフィックスを追加し、<xref:System.Net.HttpListenerPrefixCollection>によって返される、<xref:System.Net.HttpListener.Prefixes%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-277">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="35e3b-278">プレフィックスの詳細については、次を参照してください。、<xref:System.Net.HttpListener>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-278">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 <span data-ttu-id="35e3b-279">このメソッドは、受信要求の待機中にブロックしています。</span><span class="sxs-lookup"><span data-stu-id="35e3b-279">This method blocks while waiting for an incoming request.</span></span> <span data-ttu-id="35e3b-280">アプリケーションがブロックされないように、非同期的に (別のスレッド) で処理される着信要求を実行する場合に、使用、<xref:System.Net.HttpListener.BeginGetContext%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-280">If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-281">次のコード例では、このメソッドを呼び出すことを示します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-281">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="35e3b-282">A Win32 function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-282">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="35e3b-283">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-283">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="35e3b-284">This object has not been started or is currently stopped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-284">This object has not been started or is currently stopped.</span>
          </span>
          <span data-ttu-id="35e3b-285">-or-  The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-285">-or-  The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-286">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-286">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="35e3b-287">
            <para>このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。詳細については、[ネットワークのトレースで .NET Framework](~/docs/framework/network-programming/network-tracing.md) を参照してください。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-287">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetContextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt; GetContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.HttpListenerContext&gt; GetContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextAsync () As Task(Of HttpListenerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::HttpListenerContext ^&gt; ^ GetContextAsync();" />
      <MemberSignature Language="F#" Value="member this.GetContextAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;" Usage="httpListener.GetContextAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-288">Waits for an incoming request as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-288">Waits for an incoming request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="35e3b-289">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-289">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="35e3b-290">The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-290">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="35e3b-291">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-291">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-292">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="35e3b-292">This operation will not block.</span></span> <span data-ttu-id="35e3b-293">返された<xref:System.Threading.Tasks.Task%601>オブジェクトは、入力方向の要求を受け取ったときに完了します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-293">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the incoming request has been received.</span></span>  
  
 <span data-ttu-id="35e3b-294">このメソッドを呼び出す前に呼び出す必要があります、<xref:System.Net.HttpListener.Start%2A>メソッドのために、URI 文字列を追加することでリッスンするには、少なくとも 1 つの URI プレフィックスを追加し、<xref:System.Net.HttpListenerPrefixCollection>によって返される、<xref:System.Net.HttpListener.Prefixes%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-294">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="35e3b-295">プレフィックスの詳細については、次を参照してください。、<xref:System.Net.HttpListener>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-295">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListenerContext" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWriteExceptions">
      <MemberSignature Language="C#" Value="public bool IgnoreWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWriteExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWriteExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWriteExceptions : bool with get, set" Usage="System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-296">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-296">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-297">この <see cref="T:System.Net.HttpListener" /> が、クライアントに応答を送信したときに発生する例外を返さない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-297">
              <see langword="true" /> if this <see cref="T:System.Net.HttpListener" /> should not return exceptions that occur when sending the response to the client; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="35e3b-298">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-298">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-299">このプロパティを設定`true`かどうか、アプリケーションに必要ありません、応答が各クライアントに正常に送信されることです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-299">Set this property to `true` if your application does not require that a response is successfully sent to each client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-300">次のコード例では、このプロパティの設定を示しています。</span><span class="sxs-lookup"><span data-stu-id="35e3b-300">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-301">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-301">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsListening" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsListening { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsListening : bool" Usage="System.Net.HttpListener.IsListening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-302">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-302">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-303">
            <see cref="T:System.Net.HttpListener" /> が開始されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-303">
              <see langword="true" /> if the <see cref="T:System.Net.HttpListener" /> was started; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-304">開始する、<xref:System.Net.HttpListener>を呼び出し、<xref:System.Net.HttpListener.Start%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-304">To start an <xref:System.Net.HttpListener>, call the <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-305">次のコード例では、このプロパティを使用して、インスタンスの待機状態を確認するを示します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-305">The following code example demonstrates using this property to determine the listening state of an instance.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Net.HttpListener.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-306">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-306">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-307">
            <see cref="T:System.Net.HttpListener" /> がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-307">
              <see langword="true" /> if <see cref="T:System.Net.HttpListener" /> is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-308">このクラスは、Windows XP SP2 または Windows Server 2003 オペレーティング システムを実行しているコンピューターでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-308">This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-309">使用を次のコード例に示します、<xref:System.Net.HttpListener.IsSupported%2A>プロパティを検出するかどうか、<xref:System.Net.HttpListener>オブジェクトは、現在のオペレーティング システムで使用できます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-309">The following code example demonstrates the use of the <xref:System.Net.HttpListener.IsSupported%2A> property to detect whether an <xref:System.Net.HttpListener> object can be used with the current operating system.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefixes">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerPrefixCollection Prefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerPrefixCollection Prefixes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Prefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefixes As HttpListenerPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerPrefixCollection ^ Prefixes { System::Net::HttpListenerPrefixCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefixes : System.Net.HttpListenerPrefixCollection" Usage="System.Net.HttpListener.Prefixes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-310">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-310">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-311">この <see cref="T:System.Net.HttpListener" /> オブジェクトで処理するように構成されている URI プレフィックスが格納された <see cref="T:System.Net.HttpListenerPrefixCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-311">An <see cref="T:System.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes that this <see cref="T:System.Net.HttpListener" /> object is configured to handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-312">プレフィックスは、正規の形式です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-312">The prefixes are in canonical form.</span></span> <span data-ttu-id="35e3b-313">プレフィックスの詳細については、次を参照してください。、<xref:System.Net.HttpListener>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-313">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-314">次のコード例では、使用方法を示します、<xref:System.Net.HttpListener.Prefixes%2A>プロパティを取得し、処理される URI プレフィックスを印刷します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-314">The following code example demonstrates using the <xref:System.Net.HttpListener.Prefixes%2A> property to obtain and print the URI prefixes that are handled.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-315">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-315">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.Net.HttpListener.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-316">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-316">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-317">
            <see cref="T:System.String" /> オブジェクトに関連付けられているレルムの名前が格納された <see cref="T:System.Net.HttpListener" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-317">A <see cref="T:System.String" /> value that contains the name of the realm associated with the <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-318">サーバーでは、レルムを使用して; の保護されたリソースをパーティション分割各パーティションには、独自の認証方式と承認データベースを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-318">Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</span></span> <span data-ttu-id="35e3b-319">レルムは、基本認証およびダイジェスト認証だけに使用されます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-319">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="35e3b-320">クライアントが正常に認証されると、その認証は特定のレルムのすべてのリソースに対して有効となります。</span><span class="sxs-lookup"><span data-stu-id="35e3b-320">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="35e3b-321">レルムの詳細についてでの RFC 2617 を参照してください。 [ https://www.ietf.org/](https://www.ietf.org/)です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-321">For a detailed description of realms, see RFC 2617 at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="35e3b-322">インスタンス<xref:System.Net.HttpListener>が関連付けられている領域の 1 つだけです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-322">An instance of <xref:System.Net.HttpListener> has only one associated realm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-323">次のコード例は、設定を示します、<xref:System.Net.HttpListener.Realm%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-323">The following code example demonstrates setting the <xref:System.Net.HttpListener.Realm%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-324">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-324">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="httpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-325">Allows this instance to receive incoming requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-325">Allows this instance to receive incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-326">呼び出す前に、このメソッドを呼び出す必要があります、<xref:System.Net.HttpListener.GetContext%2A>または<xref:System.Net.HttpListener.BeginGetContext%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="35e3b-326">This method must be called before you call the <xref:System.Net.HttpListener.GetContext%2A> or <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
 <span data-ttu-id="35e3b-327">起動した後、<xref:System.Net.HttpListener>オブジェクトを使用する、<xref:System.Net.HttpListener.Stop%2A>メソッドを停止します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-327">After you have started an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Stop%2A> method to stop it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35e3b-328">このリスナー インスタンスは、https を使用する場合をインストールして、サーバー証明書を選択する必要があります。</span><span class="sxs-lookup"><span data-stu-id="35e3b-328">If this listener instance uses https, you must install and select a Server Certificate.</span></span> <span data-ttu-id="35e3b-329">それ以外の場合、<xref:System.Net.HttpWebRequest>このクエリ<xref:System.Net.HttpListener>は接続の予期しない終了で失敗します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-329">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span> <span data-ttu-id="35e3b-330">HttpCfg.exe を使用して、サーバー証明書とその他のリスナー オプションを構成できます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-330">You can configure Server Certificates and other listener options by using HttpCfg.exe.</span></span> <span data-ttu-id="35e3b-331">参照してください[ http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="35e3b-331">See [http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) for more details.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-332">次のコード例では、使用方法を示します、<xref:System.Net.HttpListener.Start%2A>メソッドを受信した要求の処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-332">The following code example demonstrates using the <xref:System.Net.HttpListener.Start%2A> method to begin processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="35e3b-333">A Win32 function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-333">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="35e3b-334">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-334">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-335">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-335">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="35e3b-336">
            <para>このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。詳細については、[ネットワークのトレースで .NET Framework](~/docs/framework/network-programming/network-tracing.md) を参照してください。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-336">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="httpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-337">Causes this instance to stop receiving incoming requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-337">Causes this instance to stop receiving incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-338">このインスタンスは既に停止されている場合は、このメソッドを呼び出しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="35e3b-338">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 <span data-ttu-id="35e3b-339">停止した後、<xref:System.Net.HttpListener>オブジェクトを使用する、<xref:System.Net.HttpListener.Start%2A>再起動する方法です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-339">After you have stopped an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Start%2A> method to restart it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-340">次のコード例では、使用方法を示します、<xref:System.Net.HttpListener.Stop%2A>メソッドの受信要求の処理を停止します。</span><span class="sxs-lookup"><span data-stu-id="35e3b-340">The following code example demonstrates using the <xref:System.Net.HttpListener.Stop%2A> method to stop processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-341">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-341">This object has been closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="35e3b-342">
            <para>このメンバーは、アプリケーションでネットワーク トレースを有効にすると、トレース情報を出力します。詳細については、[ネットワークのトレースで .NET Framework](~/docs/framework/network-programming/network-tracing.md) を参照してください。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-342">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-343">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-343">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-344">アプリケーションを使用する必要があります、<xref:System.Net.HttpListener.Close%2A>代わりに、このメソッドを呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="35e3b-344">Applications should use the <xref:System.Net.HttpListener.Close%2A> method instead of calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutManager">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerTimeoutManager TimeoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerTimeoutManager TimeoutManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.TimeoutManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutManager As HttpListenerTimeoutManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerTimeoutManager ^ TimeoutManager { System::Net::HttpListenerTimeoutManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutManager : System.Net.HttpListenerTimeoutManager" Usage="System.Net.HttpListener.TimeoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerTimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-345">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-345">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-346">
            <see cref="T:System.Net.HttpListenerTimeoutManager" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-346">Returns <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          </span>
          <span data-ttu-id="35e3b-347">この <see cref="T:System.Net.HttpListener" /> インスタンスのタイムアウト マネージャーです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-347">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-348">タイムアウト マネージャーは、この接続のタイムアウト制限を定義<xref:System.Net.HttpListener>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="35e3b-348">The timeout manager defines the connection timeout limits for this <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnsafeConnectionNtlmAuthentication : bool with get, set" Usage="System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Support for NTLM needs some loving.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="35e3b-349">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-349">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="35e3b-350">最初の要求の <see cref="T:System.Security.Principal.IIdentity" /> が同じ接続でなされる後続の要求に使用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-350">
              <see langword="true" /> if the <see cref="T:System.Security.Principal.IIdentity" /> of the first request will be used for subsequent requests on the same connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="35e3b-351">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-351">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35e3b-352">このプロパティに設定するときに`true`NTLM を使用して特定の TCP 接続での最初の要求が認証されると、認証情報を使用して同じ TCP 接続の後続の要求が処理されます (<xref:System.Security.Principal.IIdentity>)、最初の要求。</span><span class="sxs-lookup"><span data-stu-id="35e3b-352">When this property is set to `true` and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<xref:System.Security.Principal.IIdentity>) of the initial request.</span></span>  
  
 <span data-ttu-id="35e3b-353">NTLM が認証プロトコルではない場合、このプロパティは無効です。</span><span class="sxs-lookup"><span data-stu-id="35e3b-353">This property has no effect when NTLM is not the authentication protocol.</span></span> <span data-ttu-id="35e3b-354">Negotiate 認証プロトコルとして指定すると、NTLM が認証に使用される実際のプロトコルである場合にのみ、このプロパティは、特殊効果を持ちます。</span><span class="sxs-lookup"><span data-stu-id="35e3b-354">When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="35e3b-355">このプロパティを設定中に`true`ためパフォーマンスが向上、<xref:System.Net.HttpListener>いない送信追加の NTLM 認証チャレンジには、認証情報を提供するすべての要求を必要としないでセキュリティ上のリスクがあります。</span><span class="sxs-lookup"><span data-stu-id="35e3b-355">While setting this property to `true` increases performance because the <xref:System.Net.HttpListener> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="35e3b-356">パフォーマンスの向上がリスクよりも重要であるかどうかを判断する必要があります。</span><span class="sxs-lookup"><span data-stu-id="35e3b-356">You must determine whether the increase in performance is worth this risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="35e3b-357">次のコード例では、このプロパティの設定を示しています。</span><span class="sxs-lookup"><span data-stu-id="35e3b-357">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="35e3b-358">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="35e3b-358">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>