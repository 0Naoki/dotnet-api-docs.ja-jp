<Type Name="AuthenticationManager" FullName="System.Net.AuthenticationManager">
  <TypeSignature Language="C#" Value="public class AuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.AuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationManager" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a48c2-101">クライアント認証プロセス中に呼び出される認証モジュールを管理します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-101">Manages the authentication modules called during the client authentication process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a48c2-102"><xref:System.Net.AuthenticationManager> アプリケーションが使用する認証モジュールを管理する静的クラスです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-102"><xref:System.Net.AuthenticationManager> is a static class that manages the authentication modules that an application uses.</span></span> <span data-ttu-id="a48c2-103">リソース、保護されている場合、要求が行われる、<xref:System.Net.AuthenticationManager>呼び出し、<xref:System.Net.AuthenticationManager.Authenticate%2A>取得するメソッド、<xref:System.Net.Authorization>後続の要求で使用するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="a48c2-103">When a request is made to protected resources, the <xref:System.Net.AuthenticationManager> calls the <xref:System.Net.AuthenticationManager.Authenticate%2A> method to get an <xref:System.Net.Authorization> instance to use in subsequent requests.</span></span>  
  
 <span data-ttu-id="a48c2-104"><xref:System.Net.AuthenticationManager>各登録済みの認証モジュールを呼び出すことによってクエリ、<xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType>各モジュールのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-104">The <xref:System.Net.AuthenticationManager> queries each registered authentication module by calling the <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> method for each module.</span></span> <span data-ttu-id="a48c2-105">1 つ目の認証モジュールを返す、<xref:System.Net.Authorization>のインスタンスが要求の認証に使用します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-105">The first authentication module to return an <xref:System.Net.Authorization> instance is used to authenticate the request.</span></span>  
  
 <span data-ttu-id="a48c2-106">、基本、ダイジェストを提供するモジュールのネゴシエート、NTLM、Kerberos 認証の種類が登録されると、<xref:System.Net.AuthenticationManager>既定です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-106">Modules that provide the basic, digest, negotiate, NTLM, and Kerberos authentication types are registered with the <xref:System.Net.AuthenticationManager> by default.</span></span> <span data-ttu-id="a48c2-107">実装する追加の認証モジュール、<xref:System.Net.IAuthenticationModule>を使用してインターフェイスを追加することができます、<xref:System.Net.AuthenticationManager.Register%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-107">Additional authentication modules that implement the <xref:System.Net.IAuthenticationModule> interface can be added using the <xref:System.Net.AuthenticationManager.Register%2A> method.</span></span> <span data-ttu-id="a48c2-108">認証モジュールは、一覧に追加された順序で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a48c2-108">Authentication modules are called in the order in which they were added to the list.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a48c2-109">Kerberos ネゴシエーションと認証の種類は Windows 95/98 または Windows NT 4.0 ではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a48c2-109">The Kerberos and negotiate authentication type is not supported on Windows 95/98 or Windows NT 4.0.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Authentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#1)]
 [!code-csharp[System.Net.Authentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#1)]
 [!code-vb[System.Net.Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge"><span data-ttu-id="a48c2-110">インターネット リソースが返すチャレンジ。</span><span class="sxs-lookup"><span data-stu-id="a48c2-110">The challenge returned by the Internet resource.</span></span></param>
        <param name="request"><span data-ttu-id="a48c2-111">認証チャレンジを開始した <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="a48c2-111">The <see cref="T:System.Net.WebRequest" /> that initiated the authentication challenge.</span></span></param>
        <param name="credentials"><span data-ttu-id="a48c2-112">この要求と関連付けられている <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="a48c2-112">The <see cref="T:System.Net.ICredentials" /> associated with this request.</span></span></param>
        <summary><span data-ttu-id="a48c2-113">認証要求に応答できる最初のモジュールを検出するには、各登録済み認証モジュールを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-113">Calls each registered authentication module to find the first module that can respond to the authentication request.</span></span></summary>
        <returns><span data-ttu-id="a48c2-114">承認試行の結果を格納する <see cref="T:System.Net.Authorization" /> クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="a48c2-114">An instance of the <see cref="T:System.Net.Authorization" /> class containing the result of the authorization attempt.</span></span> <span data-ttu-id="a48c2-115">チャレンジに応答する認証モジュールがない場合、このメソッドは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-115">If there is no authentication module to respond to the challenge, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a48c2-116"><xref:System.Net.AuthenticationManager.Authenticate%2A>メソッドの呼び出し、<xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType>メソッドで、モジュールのいずれかが応答するまでは、各登録済みの認証モジュールを<xref:System.Net.Authorization>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="a48c2-116">The <xref:System.Net.AuthenticationManager.Authenticate%2A> method calls the <xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType> method on each registered authentication module until one of the module responds with an <xref:System.Net.Authorization> instance.</span></span>  
  
 <span data-ttu-id="a48c2-117">最初の<xref:System.Net.Authorization>返されたインスタンスは、要求を認証に使用します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-117">The first <xref:System.Net.Authorization> instance returned is used to authenticate the request.</span></span> <span data-ttu-id="a48c2-118">認証モジュールは、要求を認証できるではない場合、<xref:System.Net.AuthenticationManager.Authenticate%2A>メソッドを返します。`null`です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-118">If no authentication module can authenticate the request, the <xref:System.Net.AuthenticationManager.Authenticate%2A> method returns `null`.</span></span>  
  
 <span data-ttu-id="a48c2-119">登録されている順序での認証モジュールが呼び出される、<xref:System.Net.AuthenticationManager>です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-119">Authentication modules are called in the order in which they are registered with the <xref:System.Net.AuthenticationManager>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a48c2-120"><paramref name="challenge" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-120"><paramref name="challenge" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a48c2-121">- または -</span><span class="sxs-lookup"><span data-stu-id="a48c2-121">-or-</span></span>  
  
 <span data-ttu-id="a48c2-122"><paramref name="request" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-122"><paramref name="request" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a48c2-123">- または -</span><span class="sxs-lookup"><span data-stu-id="a48c2-123">-or-</span></span>  
  
 <span data-ttu-id="a48c2-124"><paramref name="credentials" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-124"><paramref name="credentials" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CredentialPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentialPolicy CredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CredentialPolicy As ICredentialPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentialPolicy ^ CredentialPolicy { System::Net::ICredentialPolicy ^ get(); void set(System::Net::ICredentialPolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a48c2-125"><see cref="T:System.Net.HttpWebRequest" /> クラスを使用して行われるリソース要求に使用される資格情報ポリシーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-125">Gets or sets the credential policy to be used for resource requests made using the <see cref="T:System.Net.HttpWebRequest" /> class.</span></span></summary>
        <value><span data-ttu-id="a48c2-126">要求と共に資格情報が送信されるかどうかを決定する <see cref="T:System.Net.ICredentialPolicy" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a48c2-126">An object that implements the <see cref="T:System.Net.ICredentialPolicy" /> interface that determines whether credentials are sent with requests.</span></span> <span data-ttu-id="a48c2-127">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-127">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a48c2-128">資格情報のポリシーでは、Web ページの内容などのネットワーク リソースに対する要求を送信するときに資格情報を送信するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-128">The credential policy determines whether to send credentials when sending a request for a network resource, such as the content of a Web page.</span></span> <span data-ttu-id="a48c2-129">資格情報が送信される場合は、クライアント認証を必要とするサーバーがクライアントの資格情報が必要であることを示す応答を送信する代わりに、要求が受信したときに、クライアントの認証を試行できます。</span><span class="sxs-lookup"><span data-stu-id="a48c2-129">If credentials are sent, servers that require client authentication can attempt to authenticate the client when the request is received instead of sending a response indicating that the client's credentials are required.</span></span> <span data-ttu-id="a48c2-130">これによりサーバーへのラウンド トリップを削減できますが、これがネットワーク経由で資格情報を送信する際に固有のセキュリティ リスクに対する分散する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a48c2-130">While this saves a round trip to the server, this must be balanced against the security risk inherent in sending credentials across the network.</span></span> <span data-ttu-id="a48c2-131">移行先サーバーにクライアント認証が必要としない場合は、資格情報を送信することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="a48c2-131">When the destination server does not require client authentication it is best to not send credentials.</span></span>  
  
 <span data-ttu-id="a48c2-132">資格情報のポリシーが使用または資格情報を指定した要求に対してのみ呼び出される、<xref:System.Net.WebProxy>資格情報を指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a48c2-132">The credential policy will be called only for requests that specify credentials or use a <xref:System.Net.WebProxy> object that specifies credentials.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a48c2-133">次のコード例では、資格情報のポリシー設定を示しています。</span><span class="sxs-lookup"><span data-stu-id="a48c2-133">The following code example demonstrates setting the credential policy.</span></span>  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTargetNameDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CustomTargetNameDictionary As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::StringDictionary ^ CustomTargetNameDictionary { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a48c2-134"><see cref="T:System.Net.WebRequest" /> およびその派生クラスを使用して行われた要求に対する Kerberos 認証中にホストを識別するために使用されるサービス プリンシパル名 (SPN) を格納したディクショナリを取得します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-134">Gets the dictionary that contains Service Principal Names (SPNs) that are used to identify hosts during Kerberos authentication for requests made using <see cref="T:System.Net.WebRequest" /> and its derived classes.</span></span></summary>
        <value><span data-ttu-id="a48c2-135">ホスト情報で構成されているキーの SPN 値を格納している書き込み可能な <see cref="T:System.Collections.Specialized.StringDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="a48c2-135">A writable <see cref="T:System.Collections.Specialized.StringDictionary" /> that contains the SPN values for keys composed of host information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a48c2-136">SPN は、クライアント一意に識別するサービスまたはアプリケーションの相互認証の目的で、サーバー上のインスタンスの名前です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-136">An SPN is a name by which a client uniquely identifies an instance of a service or application on a server for purposes of mutual authentication.</span></span> <span data-ttu-id="a48c2-137">既定では、相互認証が要求され、設定することを要求できます<xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType>に<xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired>を要求します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-137">Mutual authentication is requested by default, and you can require it by setting <xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType> to <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> in your request.</span></span>  
  
 <span data-ttu-id="a48c2-138">ときに、<xref:System.Net.WebRequest>クライアントが、変換先を指定する必要があります、SPN の相互認証が必要です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-138">When a <xref:System.Net.WebRequest> requires mutual authentication, the SPN for the destination must be supplied by the client.</span></span> <span data-ttu-id="a48c2-139">SPN がわかっている場合を追加、<xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>要求を送信する前にします。</span><span class="sxs-lookup"><span data-stu-id="a48c2-139">If you know the SPN, you can add it to the <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> before sending the request.</span></span> <span data-ttu-id="a48c2-140">このディクショナリに SPN の情報を追加していない場合、<xref:System.Net.AuthenticationManager>を使用して、<xref:System.Net.WebRequest.RequestUri%2A>メソッドです。 最も可能性の高い、SPN を作成するただし、これは、計算された値であり適切でない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a48c2-140">If you have not added SPN information to this dictionary, the <xref:System.Net.AuthenticationManager> uses the <xref:System.Net.WebRequest.RequestUri%2A> method to compose the most likely SPN; however, this is a computed value and might be incorrect.</span></span> <span data-ttu-id="a48c2-141">相互認証が試行され、失敗した場合は、計算の SPN を決定するディクショナリを確認できます。</span><span class="sxs-lookup"><span data-stu-id="a48c2-141">If mutual authentication is attempted and fails, you can check the dictionary to determine the computed SPN.</span></span> <span data-ttu-id="a48c2-142">コンソール アプリケーションは、認証プロトコルが相互認証をサポートしていない場合、ディクショナリに、SPN は入力されません。</span><span class="sxs-lookup"><span data-stu-id="a48c2-142">No SPN is entered into the dictionary if the authentication protocol does not support mutual authentication.</span></span>  
  
 <span data-ttu-id="a48c2-143">このディクショナリには、SPN 値を追加するには、使用、<xref:System.Uri.AbsoluteUri%2A>の<xref:System.Net.WebRequest.RequestUri%2A>キーとして。</span><span class="sxs-lookup"><span data-stu-id="a48c2-143">To add an SPN value to this dictionary, use the <xref:System.Uri.AbsoluteUri%2A> of the <xref:System.Net.WebRequest.RequestUri%2A> as the key.</span></span> <span data-ttu-id="a48c2-144">キーが含まれるように切り捨ては内部的には、 <xref:System.Uri.Scheme%2A>、 <xref:System.Uri.Host%2A>、および<xref:System.Uri.Port%2A>場合は、既定のポートではありません。</span><span class="sxs-lookup"><span data-stu-id="a48c2-144">Internally, the key is truncated to include the <xref:System.Uri.Scheme%2A>, <xref:System.Uri.Host%2A>, and the <xref:System.Uri.Port%2A> if it is not the default port.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a48c2-145">メソッドとプロパティにアクセスする、<xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>必要があります無制限<xref:System.Net.WebPermission>です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-145">Accessing the methods and properties of the <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> requires unrestricted <xref:System.Net.WebPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a48c2-146">プロキシ経由の Kerberos 認証が実行されると、プロキシと最終的なホスト名の両方を SPN を解決する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a48c2-146">When Kerberos authentication is performed through a proxy, both the proxy and the ultimate host name need to be resolved to an SPN.</span></span> <span data-ttu-id="a48c2-147">プロキシの名前解決は、タイムアウトによって保護されます。</span><span class="sxs-lookup"><span data-stu-id="a48c2-147">The proxy name resolution is protected by a timeout.</span></span> <span data-ttu-id="a48c2-148">SPN を最終的なホスト名の解決 DNS 参照が必要ですし、この操作に直接関連付けられているタイムアウトはありません。</span><span class="sxs-lookup"><span data-stu-id="a48c2-148">Resolution of the ultimate host name to a SPN requires a DNS lookup, and there is no timeout associated directly with this operation.</span></span> <span data-ttu-id="a48c2-149">そのため同期操作の時間がかかるタイムアウトにします。</span><span class="sxs-lookup"><span data-stu-id="a48c2-149">Therefore synchronous operations may take longer to timeout.</span></span> <span data-ttu-id="a48c2-150">これをなくすためには、に対して要求を行う前に、SPN のキャッシュに最終的なホストの URI のプレフィックスを追加します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-150">To overcome this, add the ultimate host's URI prefix to the SPN cache prior to making requests to it.</span></span>  
  
 <span data-ttu-id="a48c2-151">Version 3.5 SP1 の既定では、<xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> プロパティが設定されていない場合、NTLM (NT LAN マネージャー) 認証交換の SPN の要求 URL で使用されたホスト名を指定します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-151">Version 3.5 SP1 now defaults to specifying the host name used in the request URL in the SPN in the NTLM (NT LAN Manager) authentication exchange when the <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> property is not set.</span></span> <span data-ttu-id="a48c2-152">要求 URL で使用されたホスト名は、クライアント要求の <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> に指定された Host ヘッダーとは異なる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a48c2-152">The host name used in the request URL may be different from the Host header specified in the <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> in the client request.</span></span> <span data-ttu-id="a48c2-153">要求 URL に使用されているホスト名は、サーバーの実際のホスト名、サーバーのコンピューター名、コンピューターの IP アドレス、またはループバック アドレスとは異なる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="a48c2-153">The host name used in the request URL may be different from the actual host name of the server, the machine name of the server, the computer's IP address, or the loopback address.</span></span> <span data-ttu-id="a48c2-154">このような場合、Windows は認証要求に失敗します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-154">In these cases, Windows will fail the authentication request.</span></span> <span data-ttu-id="a48c2-155">問題に対処する、ホスト名が使用される Windows に通知する必要があります、クライアントで要求の URL ("contoso"、たとえば) の要求は実際には、ローカル コンピューターの代替名です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-155">To address the issue, you may need to notify Windows that the host name used in the request URL in the client request ("contoso", for example) is actually an alternate name for the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a48c2-156">内容を表示する次のコード例に示します、<xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-156">The following code example demonstrates displaying the contents of the <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>.</span></span>  
  
 [!code-cpp[NclCredPolicy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#5)]
 [!code-csharp[NclCredPolicy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="a48c2-157">インターネット リソースへの <see cref="T:System.Net.WebRequest" />。</span><span class="sxs-lookup"><span data-stu-id="a48c2-157">A <see cref="T:System.Net.WebRequest" /> to an Internet resource.</span></span></param>
        <param name="credentials"><span data-ttu-id="a48c2-158">要求に関連付けられている <see cref="T:System.Net.ICredentials" />。</span><span class="sxs-lookup"><span data-stu-id="a48c2-158">The <see cref="T:System.Net.ICredentials" /> associated with the request.</span></span></param>
        <summary><span data-ttu-id="a48c2-159">要求の事前認証を行います。</span><span class="sxs-lookup"><span data-stu-id="a48c2-159">Preauthenticates a request.</span></span></summary>
        <returns><span data-ttu-id="a48c2-160">要求を事前認証できる場合は <see cref="T:System.Net.Authorization" /> クラスのインスタンス、それ以外の場合は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-160">An instance of the <see cref="T:System.Net.Authorization" /> class if the request can be preauthenticated; otherwise, <see langword="null" />.</span></span> <span data-ttu-id="a48c2-161"><paramref name="credentials" /> が <see langword="null" /> の場合、このメソッドは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-161">If <paramref name="credentials" /> is <see langword="null" />, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a48c2-162">認証モジュールは、要求を事前認証ことができる場合、<xref:System.Net.AuthenticationManager.PreAuthenticate%2A>メソッドは認証インスタンスを返し、チャレンジを発行するリソースを待機しているのではなく、プリエンプティブ サーバーに認証情報を送信します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-162">If the authentication module can preauthenticate the request, the <xref:System.Net.AuthenticationManager.PreAuthenticate%2A> method returns an Authentication instance and sends the authorization information to the server preemptively instead of waiting for the resource to issue a challenge.</span></span> <span data-ttu-id="a48c2-163">この動作が RFC 2617 のセクション 3.3 で説明されている (HTTP Authentication: Basic and Digest アクセス Authentication)。</span><span class="sxs-lookup"><span data-stu-id="a48c2-163">This behavior is outlined in section 3.3 of RFC 2617 (HTTP Authentication: Basic and Digest Access Authentication).</span></span> <span data-ttu-id="a48c2-164">事前認証をサポートする認証モジュールを使用すると、クライアント認証チャレンジによる追加のラウンド トリップを回避することで、サーバーの効率性を向上させることです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-164">Authentication modules that support preauthentication allow clients to improve server efficiency by avoiding extra round trips caused by authentication challenges.</span></span>  
  
 <span data-ttu-id="a48c2-165">セットを要求することができますを事前認証の承認モジュール、<xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType>プロパティを`true`です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-165">Authorization modules that can preauthenticate requests set the <xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType> property to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a48c2-166"><paramref name="request" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-166"><paramref name="request" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule"><span data-ttu-id="a48c2-167">認証マネージャーに登録する <see cref="T:System.Net.IAuthenticationModule" />。</span><span class="sxs-lookup"><span data-stu-id="a48c2-167">The <see cref="T:System.Net.IAuthenticationModule" /> to register with the authentication manager.</span></span></param>
        <summary><span data-ttu-id="a48c2-168">認証マネージャーに認証モジュールを登録します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-168">Registers an authentication module with the authentication manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a48c2-169"><xref:System.Net.AuthenticationManager.Register%2A>メソッドによって呼び出されるモジュールの一覧の最後に認証モジュールを追加する、<xref:System.Net.AuthenticationManager.Authenticate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-169">The <xref:System.Net.AuthenticationManager.Register%2A> method adds authentication modules to the end of the list of modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method.</span></span> <span data-ttu-id="a48c2-170">認証モジュールは、一覧に追加された順序で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a48c2-170">Authentication modules are called in the order in which they were added to the list.</span></span> <span data-ttu-id="a48c2-171">場合、同じモジュール<xref:System.Net.IAuthenticationModule.AuthenticationType%2A>は既に登録されている、このメソッドは、登録済みモジュールを削除し、追加`authenticationModule`リストの末尾にします。</span><span class="sxs-lookup"><span data-stu-id="a48c2-171">If a module with the same <xref:System.Net.IAuthenticationModule.AuthenticationType%2A> is already registered, this method removes the registered module and adds `authenticationModule` to the end of the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a48c2-172">次の例では、認証マネージャーでの認証モジュールを登録します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-172">The following example registers an authentication module with the authentication manager.</span></span> <span data-ttu-id="a48c2-173">完全な例を参照してください、<xref:System.Net.AuthenticationManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-173">For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a48c2-174"><paramref name="authenticationModule" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-174"><paramref name="authenticationModule" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a48c2-175">アンマネージ コードを実行します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-175">for executing unmanaged code.</span></span> <span data-ttu-id="a48c2-176"><see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="a48c2-176">Associated enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisteredModules">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator RegisteredModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerator RegisteredModules" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.RegisteredModules" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegisteredModules As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerator ^ RegisteredModules { System::Collections::IEnumerator ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a48c2-177">認証マネージャーに登録されている認証モジュールの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-177">Gets a list of authentication modules that are registered with the authentication manager.</span></span></summary>
        <value><span data-ttu-id="a48c2-178">登録済み認証モジュールの読み取りを有効にする <see cref="T:System.Collections.IEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="a48c2-178">An <see cref="T:System.Collections.IEnumerator" /> that enables the registered authentication modules to be read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a48c2-179"><xref:System.Net.AuthenticationManager.RegisteredModules%2A>プロパティでは、<xref:System.Collections.IEnumerator>の一覧を有効にするインスタンスが読み込まれる認証モジュールを登録します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-179">The <xref:System.Net.AuthenticationManager.RegisteredModules%2A> property provides an <xref:System.Collections.IEnumerator> instance that enables the list of registered authentication modules to be read.</span></span> <span data-ttu-id="a48c2-180"><xref:System.Net.AuthenticationManager.Register%2A>メソッドは、一覧にモジュールを追加し、<xref:System.Net.AuthenticationManager.Unregister%2A>メソッドは、そこからモジュールを削除します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-180">The <xref:System.Net.AuthenticationManager.Register%2A> method adds modules to the list, and the <xref:System.Net.AuthenticationManager.Unregister%2A> method removes modules from it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a48c2-181">次の例では、<xref:System.Net.AuthenticationManager.RegisteredModules%2A>認証マネージャーに登録されている認証モジュールの一覧を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-181">The following example uses the <xref:System.Net.AuthenticationManager.RegisteredModules%2A> property to get a list of authentication modules that are registered with the authentication manager.</span></span> <span data-ttu-id="a48c2-182">完全な例を参照してください、<xref:System.Net.AuthenticationManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-182">For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.</span></span>  
  
 [!code-cpp[System.Net.Authentication#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#8)]
 [!code-csharp[System.Net.Authentication#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#8)]
 [!code-vb[System.Net.Authentication#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unregister">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a48c2-183">登録済みモジュールの一覧から認証モジュールを削除します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-183">Removes authentication modules from the list of registered modules.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule"><span data-ttu-id="a48c2-184">登録されたモジュールの一覧から削除する <see cref="T:System.Net.IAuthenticationModule" />。</span><span class="sxs-lookup"><span data-stu-id="a48c2-184">The <see cref="T:System.Net.IAuthenticationModule" /> to remove from the list of registered modules.</span></span></param>
        <summary><span data-ttu-id="a48c2-185">登録済みモジュールの一覧から指定した認証モジュールを削除します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-185">Removes the specified authentication module from the list of registered modules.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a48c2-186"><xref:System.Net.AuthenticationManager.Unregister%2A>メソッド呼び出された認証モジュールの一覧から、指定された認証モジュールを削除する、<xref:System.Net.AuthenticationManager.Authenticate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-186">The <xref:System.Net.AuthenticationManager.Unregister%2A> method removes the specified authentication module from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method.</span></span> <span data-ttu-id="a48c2-187">モジュールを使用して、一覧に追加する必要があります、<xref:System.Net.AuthenticationManager.Register%2A>メソッドの一覧から削除する前にします。</span><span class="sxs-lookup"><span data-stu-id="a48c2-187">The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a48c2-188">次の例では、<xref:System.Net.AuthenticationManager.Unregister%2A>登録されているモジュールの一覧から、指定された認証モジュールを削除する方法です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-188">The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove the specified authentication module from the list of registered modules.</span></span> <span data-ttu-id="a48c2-189">完全な例を参照してください、<xref:System.Net.AuthenticationManager>クラスです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-189">For a complete example, refer to the <xref:System.Net.AuthenticationManager> class.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a48c2-190"><paramref name="authenticationModule" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-190"><paramref name="authenticationModule" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a48c2-191">指定した <see cref="T:System.Net.IAuthenticationModule" /> は登録されていません。</span><span class="sxs-lookup"><span data-stu-id="a48c2-191">The specified <see cref="T:System.Net.IAuthenticationModule" /> is not registered.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a48c2-192">アンマネージ コードを実行します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-192">for executing unmanaged code.</span></span> <span data-ttu-id="a48c2-193"><see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="a48c2-193">Associated enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationScheme As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ authenticationScheme);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationScheme"><span data-ttu-id="a48c2-194">削除するモジュールの認証方式。</span><span class="sxs-lookup"><span data-stu-id="a48c2-194">The authentication scheme of the module to remove.</span></span></param>
        <summary><span data-ttu-id="a48c2-195">登録済みモジュールの一覧から指定した認証方式の認証モジュールを削除します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-195">Removes authentication modules with the specified authentication scheme from the list of registered modules.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a48c2-196"><xref:System.Net.AuthenticationManager.Unregister%2A>メソッド呼び出された認証モジュールの一覧から、指定された認証方式の認証モジュールを削除する、<xref:System.Net.AuthenticationManager.Authenticate%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a48c2-196">The <xref:System.Net.AuthenticationManager.Unregister%2A> method removes the authentication module with the specified authentication scheme from the list of authentication modules called by the <xref:System.Net.AuthenticationManager.Authenticate%2A> method.</span></span> <span data-ttu-id="a48c2-197">モジュールを使用して、一覧に追加する必要があります、<xref:System.Net.AuthenticationManager.Register%2A>メソッドの一覧から削除する前にします。</span><span class="sxs-lookup"><span data-stu-id="a48c2-197">The module must have been added to the list using the <xref:System.Net.AuthenticationManager.Register%2A> method before it can be removed from the list.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a48c2-198">次の例では、<xref:System.Net.AuthenticationManager.Unregister%2A>登録されているモジュールの一覧から指定された認証方式の認証モジュールを削除する方法です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-198">The following example uses the <xref:System.Net.AuthenticationManager.Unregister%2A> method to remove an authentication module with the specified authentication scheme from the list of registered modules.</span></span>  
  
 [!code-cpp[AuthenticationManager_UnRegister2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CPP/authenticationmanager_unregister2.cpp#2)]
 [!code-csharp[AuthenticationManager_UnRegister2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CS/authenticationmanager_unregister2.cs#2)]
 [!code-vb[AuthenticationManager_UnRegister2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/VB/authenticationmanager_unregister2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a48c2-199"><paramref name="authenticationScheme" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="a48c2-199"><paramref name="authenticationScheme" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a48c2-200">この認証方式のモジュールは登録されていません。</span><span class="sxs-lookup"><span data-stu-id="a48c2-200">A module for this authentication scheme is not registered.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="a48c2-201">アンマネージ コードを実行します。</span><span class="sxs-lookup"><span data-stu-id="a48c2-201">for executing unmanaged code.</span></span> <span data-ttu-id="a48c2-202"><see cref="T:System.Security.Permissions.SecurityPermissionFlag" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="a48c2-202">Associated enumeration: <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>