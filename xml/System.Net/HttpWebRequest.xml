<Type Name="HttpWebRequest" FullName="System.Net.HttpWebRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="082fb61301dba7aa79011277397a1b06e32b6934" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpWebRequest : System.Net.WebRequest, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable HttpWebRequest extends System.Net.WebRequest implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpWebRequest&#xA;Inherits WebRequest&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpWebRequest : System::Net::WebRequest, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ab7fd-101">
        <see cref="T:System.Net.WebRequest" /> クラスの HTTP 固有の実装を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab7fd-101">Provides an HTTP-specific implementation of the <see cref="T:System.Net.WebRequest" /> class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-102"><xref:System.Net.HttpWebRequest>クラスは、プロパティのサポートを提供し、メソッド内で定義<xref:System.Net.WebRequest>と HTTP を使用するサーバーと直接対話するユーザーを有効にするメソッドとプロパティを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-102">The <xref:System.Net.HttpWebRequest> class provides support for the properties and methods defined in <xref:System.Net.WebRequest> and for additional properties and methods that enable the user to interact directly with servers using HTTP.</span></span>  
  
 <span data-ttu-id="ab7fd-103">使用しないで、<xref:System.Net.HttpWebRequest.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-103">Do not use the <xref:System.Net.HttpWebRequest.%23ctor%2A> constructor.</span></span> <span data-ttu-id="ab7fd-104">使用して、<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>新しい初期化するメソッドを<xref:System.Net.HttpWebRequest>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-104">Use the <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType> method to initialize new <xref:System.Net.HttpWebRequest> objects.</span></span> <span data-ttu-id="ab7fd-105">かどうか、パターンの Uniform Resource Identifier () は`http://`または`https://`、<xref:System.Net.WebRequest.Create%2A>を返します、<xref:System.Net.HttpWebRequest>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-105">If the scheme for the Uniform Resource Identifier (URI) is `http://` or `https://`, <xref:System.Net.WebRequest.Create%2A> returns an <xref:System.Net.HttpWebRequest> object.</span></span>  
  
 <span data-ttu-id="ab7fd-106"><xref:System.Net.HttpWebRequest.GetResponse%2A>メソッドに同期要求で指定されたリソースを<xref:System.Net.HttpWebRequest.RequestUri%2A>プロパティを返す、<xref:System.Net.HttpWebResponse>応答オブジェクトを格納しています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-106">The <xref:System.Net.HttpWebRequest.GetResponse%2A> method makes a synchronous request to the resource specified in the <xref:System.Net.HttpWebRequest.RequestUri%2A> property and returns an <xref:System.Net.HttpWebResponse> that contains the response object.</span></span> <span data-ttu-id="ab7fd-107">によって返されたストリームを使用して、応答データが受信される<xref:System.Net.HttpWebResponse.GetResponseStream%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-107">The response data can be received by using the stream returned by <xref:System.Net.HttpWebResponse.GetResponseStream%2A>.</span></span> <span data-ttu-id="ab7fd-108">応答オブジェクトまたは応答のストリームを閉じると、残りのデータが失われます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-108">If the response object or the response stream is closed, remaining data will be forfeited.</span></span> <span data-ttu-id="ab7fd-109">残りのデータが消耗して、次の条件が保持される場合に、応答オブジェクトまたはストリームを閉じるときに、ソケットが後続の要求を再度使用する: keep alive またはパイプライン処理要求は、少量のデータのみを受信する必要がありますか残りのデータは、短い時間間隔で受信されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-109">The remaining data will be drained and the socket will be re-used for subsequent requests when closing the response object or stream if the following conditions hold: it's a keep-alive or pipelined request, only a small amount of data needs to be received, or the remaining data is received in a small time interval.</span></span> <span data-ttu-id="ab7fd-110">保持に説明した条件に該当しないか、ドレインの時間がしきい値を超過、ソケットは閉じられます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-110">If none of the mentioned conditions hold or the drain time is exceeded, the socket will be closed.</span></span> <span data-ttu-id="ab7fd-111">Keep alive またはパイプラインの接続、アプリケーションが EOF までストリームを読み取ることを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-111">For keep-alive or pipelined connections, we strongly recommend that the application reads the streams until EOF.</span></span> <span data-ttu-id="ab7fd-112">これは、結果、ソケットのパフォーマンスが向上しより少ないリソースの使用を結果として得られる後続の要求用に再利用されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-112">This ensures that the socket will be re-used for subsequent requests resulting in better performance and less resources used.</span></span>  
  
 <span data-ttu-id="ab7fd-113">リソースにデータを送信するときに、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>メソッドを返します、<xref:System.IO.Stream>を使用してデータを送信するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-113">When you want to send data to the resource, the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method returns a <xref:System.IO.Stream> object to use to send data.</span></span> <span data-ttu-id="ab7fd-114"><xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>と<xref:System.Net.HttpWebRequest.EndGetRequestStream%2A>メソッドは、送信データ ストリームに非同期アクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-114">The <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> and <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods provide asynchronous access to the send data stream.</span></span>  
  
 <span data-ttu-id="ab7fd-115">クライアントでの認証<xref:System.Net.HttpWebRequest>、クライアント証明書をインストールする必要があります、現在のユーザーの My 証明書ストア。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-115">For client authentication with <xref:System.Net.HttpWebRequest>, the client certificate must be installed in the My certificate store of the current user.</span></span>  
  
 <span data-ttu-id="ab7fd-116"><xref:System.Net.HttpWebRequest>クラスがスローされます、<xref:System.Net.WebException>リソースへのアクセス中にエラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-116">The <xref:System.Net.HttpWebRequest> class throws a <xref:System.Net.WebException> when errors occur while accessing a resource.</span></span> <span data-ttu-id="ab7fd-117"><xref:System.Net.WebException.Status%2A?displayProperty=nameWithType>プロパティが含まれています、<xref:System.Net.WebExceptionStatus>エラーの原因を示す値。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-117">The <xref:System.Net.WebException.Status%2A?displayProperty=nameWithType> property contains a <xref:System.Net.WebExceptionStatus> value that indicates the source of the error.</span></span> <span data-ttu-id="ab7fd-118">ときに<xref:System.Net.WebException.Status%2A?displayProperty=nameWithType>は<xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>、<xref:System.Net.WebException.Response%2A>プロパティが含まれています、<xref:System.Net.HttpWebResponse>リソースから受信します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-118">When <xref:System.Net.WebException.Status%2A?displayProperty=nameWithType> is <xref:System.Net.WebExceptionStatus.ProtocolError?displayProperty=nameWithType>, the <xref:System.Net.WebException.Response%2A> property contains the <xref:System.Net.HttpWebResponse> received from the resource.</span></span>  
  
 <span data-ttu-id="ab7fd-119"><xref:System.Net.HttpWebRequest> 一般的な HTTP ヘッダーの値のプロパティとして、インターネット リソースに送信される、メソッド、によって設定するか、システムによって設定を公開します。次の表には、完全な一覧が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-119"><xref:System.Net.HttpWebRequest> exposes common HTTP header values sent to the Internet resource as properties, set by methods, or set by the system; the following table contains a complete list.</span></span> <span data-ttu-id="ab7fd-120">その他のヘッダーを設定することができます、<xref:System.Net.HttpWebRequest.Headers%2A>名前/値のペアとしてプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-120">You can set other headers in the <xref:System.Net.HttpWebRequest.Headers%2A> property as name/value pairs.</span></span> <span data-ttu-id="ab7fd-121">あるサーバーおよびキャッシュは、変更または要求時にヘッダーを追加に注意してください。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-121">Note that servers and caches may change or add headers during the request.</span></span>  
  
 <span data-ttu-id="ab7fd-122">次の表は、プロパティ、メソッド、またはシステムのいずれかに設定されている HTTP ヘッダーを示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-122">The following table lists the HTTP headers that are set either by properties or methods or the system.</span></span>  
  
|<span data-ttu-id="ab7fd-123">Header</span><span class="sxs-lookup"><span data-stu-id="ab7fd-123">Header</span></span>|<span data-ttu-id="ab7fd-124">によってを設定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-124">Set by</span></span>|  
|------------|------------|  
|<span data-ttu-id="ab7fd-125">そのまま使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-125">Accept</span></span>|<span data-ttu-id="ab7fd-126">によって設定、<xref:System.Net.HttpWebRequest.Accept%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-126">Set by the <xref:System.Net.HttpWebRequest.Accept%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-127">接続</span><span class="sxs-lookup"><span data-stu-id="ab7fd-127">Connection</span></span>|<span data-ttu-id="ab7fd-128">によって設定、<xref:System.Net.HttpWebRequest.Connection%2A>プロパティ、<xref:System.Net.HttpWebRequest.KeepAlive%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-128">Set by the <xref:System.Net.HttpWebRequest.Connection%2A> property, <xref:System.Net.HttpWebRequest.KeepAlive%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-129">コンテンツの長さ</span><span class="sxs-lookup"><span data-stu-id="ab7fd-129">Content-Length</span></span>|<span data-ttu-id="ab7fd-130">によって設定、<xref:System.Net.HttpWebRequest.ContentLength%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-130">Set by the <xref:System.Net.HttpWebRequest.ContentLength%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-131">Content-Type</span><span class="sxs-lookup"><span data-stu-id="ab7fd-131">Content-Type</span></span>|<span data-ttu-id="ab7fd-132">によって設定、<xref:System.Net.HttpWebRequest.ContentType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-132">Set by the <xref:System.Net.HttpWebRequest.ContentType%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-133">期待</span><span class="sxs-lookup"><span data-stu-id="ab7fd-133">Expect</span></span>|<span data-ttu-id="ab7fd-134">によって設定、<xref:System.Net.HttpWebRequest.Expect%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-134">Set by the <xref:System.Net.HttpWebRequest.Expect%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-135">日付</span><span class="sxs-lookup"><span data-stu-id="ab7fd-135">Date</span></span>|<span data-ttu-id="ab7fd-136">現在の日付に、システムによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-136">Set by the system to current date.</span></span>|  
|<span data-ttu-id="ab7fd-137">ホスト</span><span class="sxs-lookup"><span data-stu-id="ab7fd-137">Host</span></span>|<span data-ttu-id="ab7fd-138">現在のホスト情報をシステムによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-138">Set by the system to current host information.</span></span>|  
|<span data-ttu-id="ab7fd-139">場合の変更-以降</span><span class="sxs-lookup"><span data-stu-id="ab7fd-139">If-Modified-Since</span></span>|<span data-ttu-id="ab7fd-140">によって設定、<xref:System.Net.HttpWebRequest.IfModifiedSince%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-140">Set by the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-141">範囲</span><span class="sxs-lookup"><span data-stu-id="ab7fd-141">Range</span></span>|<span data-ttu-id="ab7fd-142">によって設定、<xref:System.Net.HttpWebRequest.AddRange%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-142">Set by the <xref:System.Net.HttpWebRequest.AddRange%2A> method.</span></span>|  
|<span data-ttu-id="ab7fd-143">Referer</span><span class="sxs-lookup"><span data-stu-id="ab7fd-143">Referer</span></span>|<span data-ttu-id="ab7fd-144">によって設定、<xref:System.Net.HttpWebRequest.Referer%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-144">Set by the <xref:System.Net.HttpWebRequest.Referer%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-145">転送エンコード</span><span class="sxs-lookup"><span data-stu-id="ab7fd-145">Transfer-Encoding</span></span>|<span data-ttu-id="ab7fd-146">によって設定、<xref:System.Net.HttpWebRequest.TransferEncoding%2A>プロパティ (、<xref:System.Net.HttpWebRequest.SendChunked%2A>プロパティである必要があります`true`)。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-146">Set by the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property (the <xref:System.Net.HttpWebRequest.SendChunked%2A> property must be `true`).</span></span>|  
|<span data-ttu-id="ab7fd-147">ユーザー エージェント</span><span class="sxs-lookup"><span data-stu-id="ab7fd-147">User-Agent</span></span>|<span data-ttu-id="ab7fd-148">によって設定、<xref:System.Net.HttpWebRequest.UserAgent%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-148">Set by the <xref:System.Net.HttpWebRequest.UserAgent%2A> property.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-149"><xref:System.Net.HttpWebRequest> 自動的に登録されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-149"><xref:System.Net.HttpWebRequest> is registered automatically.</span></span> <span data-ttu-id="ab7fd-150">呼び出す必要はありません、<xref:System.Net.WebRequest.RegisterPrefix%2A>メソッドを登録する<xref:System.Net.HttpWebRequest?displayProperty=nameWithType>Uri を使用する前に始まる`http://`または`https://`です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-150">You do not need to call the <xref:System.Net.WebRequest.RegisterPrefix%2A> method to register <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> before using URIs beginning with `http://` or `https://`.</span></span>  
  
 <span data-ttu-id="ab7fd-151">ローカル コンピューターまたはアプリケーション構成ファイルが既定のプロキシを使用することを指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-151">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="ab7fd-152">場合、<xref:System.Net.HttpWebRequest.Proxy%2A>プロパティを指定すると、プロキシの設定から、<xref:System.Net.HttpWebRequest.Proxy%2A>プロパティは、ローカル コンピューターまたはアプリケーション構成ファイルをオーバーライドおよび<xref:System.Net.HttpWebRequest>インスタンスが指定したプロキシ設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-152">If the <xref:System.Net.HttpWebRequest.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.HttpWebRequest.Proxy%2A> property override the local computer or application config file and the <xref:System.Net.HttpWebRequest> instance will use the proxy settings specified.</span></span> <span data-ttu-id="ab7fd-153">プロキシが構成ファイルに指定されていない場合、<xref:System.Net.HttpWebRequest.Proxy%2A>プロパティは指定しません、<xref:System.Net.HttpWebRequest>クラスは、ローカル コンピューターで Internet Explorer から継承されたプロキシ設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-153">If no proxy is specified in a config file and the <xref:System.Net.HttpWebRequest.Proxy%2A> property is unspecified, the <xref:System.Net.HttpWebRequest> class uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="ab7fd-154">Internet Explorer のプロキシ設定がない場合、要求は、サーバーに直接送信されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-154">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="ab7fd-155"><xref:System.Net.HttpWebRequest>クラスがワイルドカード文字を Internet Explorer で直接バイパス リストが解析されるよりも異なる方法で Internet Explorer から継承プロキシ バイ パスの一覧を解析します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-155">The <xref:System.Net.HttpWebRequest> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer differently than the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="ab7fd-156">たとえば、<xref:System.Net.HttpWebRequest>クラスでは「nt \*」Internet Explorer からのバイパス一覧を解析の正規表現として"nt。 $"です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-156">For example, the <xref:System.Net.HttpWebRequest> class will parse a bypass list of "nt\*" from Internet Explorer as a regular expression of "nt.$".</span></span> <span data-ttu-id="ab7fd-157">これは、Internet Explorer のネイティブの動作とは異なります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-157">This differs from the native behavior of Internet Explorer.</span></span> <span data-ttu-id="ab7fd-158">などの URL"`http://intxxxxx`"を使用してプロキシを使用しないと、<xref:System.Net.HttpWebRequest>クラスが、Internet Explorer を使用してプロキシをバイパスできません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-158">So a URL of "`http://intxxxxx`" would bypass the proxy using the <xref:System.Net.HttpWebRequest> class, but would not bypass the proxy using Internet Explorer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-159">フレームワークでは、SSL セッションを作成するときはキャッシュ、可能であれば、新しい要求のキャッシュされているセッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-159">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="ab7fd-160">フレームワークでの最初の要素を使用するときに、SSL セッションを再利用する、 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (かどうかがある 1 つ)、匿名のセッションを再利用を試みる<xref:System.Net.HttpWebRequest.ClientCertificates%2A>が空です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-160">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-161">セキュリティ上の理由から、cookie は、既定で無効にします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-161">For security reasons, cookies are disabled by default.</span></span> <span data-ttu-id="ab7fd-162">Cookie を使用する場合は、使用、 <xref:System.Net.HttpWebRequest.CookieContainer%2A> cookie を有効にするプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-162">If you want to use cookies, use the <xref:System.Net.HttpWebRequest.CookieContainer%2A> property to enable cookies.</span></span>  
  
 <span data-ttu-id="ab7fd-163">.NET Framework 4.6 には、安全性の低い暗号およびハッシュ アルゴリズムの接続をブロックする新しいセキュリティ機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-163">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="ab7fd-164">HttpClient、HttpWebRequest、FTPClient、SmtpClient、SslStream などの Api を介した TLS と SSL を使用して、.NET Framework 4.6 を対象とするアプリケーションでは、既定では、セキュリティが強化された動作を取得します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-164">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="ab7fd-165">開発者は、既存 SSL3 サービスまたは TLS で RC4 サービスと相互運用性を維持するために、この動作を除外する必要あります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-165">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="ab7fd-166">[この記事](https://support.microsoft.com/kb/3069494)新しい動作を無効にするように、コードを変更する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-166">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-167">次のコード例を作成、 <xref:System.Net.HttpWebRequest> URI のhttp://www.contoso.com/します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-167">The following code example creates an <xref:System.Net.HttpWebRequest> for the URI http://www.contoso.com/.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">
      <span data-ttu-id="ab7fd-168">要求された URI またはに要求をリダイレクトする任意の URI にアクセスします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab7fd-168">to access the requested URI or any URI that the request is redirected to.</span>
      </span>
      <span data-ttu-id="ab7fd-169">関連する列挙。 <see cref="F:System.Net.NetworkAccess.Connect" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="ab7fd-169">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-170">
            <see cref="T:System.Net.HttpWebRequest" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-170">Initializes a new instance of the <see cref="T:System.Net.HttpWebRequest" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpWebRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpWebRequest();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-171">
            <see cref="T:System.Net.HttpWebRequest" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-171">Initializes a new instance of the <see cref="T:System.Net.HttpWebRequest" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.#ctor(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpWebRequest(Uri ^ uri);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpWebRequest (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpWebRequest(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Serialization is obsoleted for this type", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <span data-ttu-id="ab7fd-172">新しい <see cref="T:System.Net.HttpWebRequest" /> オブジェクトをシリアル化するために必要な情報を格納する <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-172">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that contains the information required to serialize the new <see cref="T:System.Net.HttpWebRequest" /> object.</span>
          </span>
        </param>
        <param name="streamingContext">
          <span data-ttu-id="ab7fd-173">新しい <see cref="T:System.Net.HttpWebRequest" /> オブジェクトに関連付けられているシリアル化ストリームの転送元および転送先を格納する <see cref="T:System.Runtime.Serialization.StreamingContext" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-173">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the new <see cref="T:System.Net.HttpWebRequest" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-174">
            <see cref="T:System.Net.HttpWebRequest" /> クラスと <see cref="T:System.Runtime.Serialization.SerializationInfo" /> クラスの指定したインスタンスから、<see cref="T:System.Runtime.Serialization.StreamingContext" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-174">Initializes a new instance of the <see cref="T:System.Net.HttpWebRequest" /> class from the specified instances of the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> classes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-175">アプリケーションは、シリアル化を使用する場合、完全信頼モードで実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-175">An application must run in full trust mode when using serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="ab7fd-176">ネットワーク リソースに無制限のアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-176">for unrestricted access to network resources.</span>
          </span>
          <span data-ttu-id="ab7fd-177">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-177">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-178">インターネット リソースへの要求を取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-178">Cancels a request to an Internet resource.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-179"><xref:System.Net.HttpWebRequest.Abort%2A>メソッドは、リソースへの要求をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-179">The <xref:System.Net.HttpWebRequest.Abort%2A> method cancels a request to a resource.</span></span> <span data-ttu-id="ab7fd-180">要求が取り消されると後の呼び出し、 <xref:System.Net.HttpWebRequest.GetResponse%2A>、 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>、 <xref:System.Net.HttpWebRequest.EndGetResponse%2A>、 <xref:System.Net.HttpWebRequest.GetRequestStream%2A>、 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>、または<xref:System.Net.HttpWebRequest.EndGetRequestStream%2A>メソッド原因、<xref:System.Net.WebException>で、<xref:System.Net.WebException.Status%2A>プロパティに設定<xref:System.Net.WebExceptionStatus.RequestCanceled>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-180">After a request is canceled, calling the <xref:System.Net.HttpWebRequest.GetResponse%2A>, <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>, <xref:System.Net.HttpWebRequest.EndGetResponse%2A>, <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, or <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method causes a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.RequestCanceled>.</span></span>  
  
 <span data-ttu-id="ab7fd-181"><xref:System.Net.HttpWebRequest.Abort%2A>メソッドは、指定されたコールバックを実行して同期的に、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>または<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>メソッド場合、<xref:System.Net.HttpWebRequest.Abort%2A>未処理はこれらの操作のいずれかのメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-181">The <xref:System.Net.HttpWebRequest.Abort%2A> method will synchronously execute the callback specified to the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> methods if the <xref:System.Net.HttpWebRequest.Abort%2A> method is called while either of these operations are outstanding.</span></span> <span data-ttu-id="ab7fd-182">これは、デッドロック問題が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-182">This can lead to potential deadlock issues.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-183">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-183">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ab7fd-184">詳細については、次を参照してください。[ネットワークのトレース](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-184">For more information, see [Network Tracing](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-185">非同期要求の場合、独自のタイムアウト メカニズムを実装するクライアント アプリケーションの役割です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-185">In the case of asynchronous requests, it is the responsibility of the client application to implement its own time-out mechanism.</span></span> <span data-ttu-id="ab7fd-186">次のコード例では、これを行う方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-186">The following code example shows how to do this.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CPP/begingetresponse.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CS/begingetresponse.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/VB/begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public string Accept { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Accept" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Accept" />
      <MemberSignature Language="VB.NET" Value="Public Property Accept As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Accept { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-187">
            <see langword="Accept" /> HTTP ヘッダーの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-187">Gets or sets the value of the <see langword="Accept" /> HTTP header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-188">
            <see langword="Accept" /> HTTP ヘッダーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-188">The value of the <see langword="Accept" /> HTTP header.</span>
          </span>
          <span data-ttu-id="ab7fd-189">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-189">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-190">クリアする、 `Accept` HTTP ヘッダーを設定、<xref:System.Net.HttpWebRequest.Accept%2A>プロパティを`null`です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-190">To clear the `Accept` HTTP header, set the <xref:System.Net.HttpWebRequest.Accept%2A> property to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-191">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-191">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ab7fd-192">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-192">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-193">次のコード例のセット、<xref:System.Net.HttpWebRequest.Accept%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-193">The following code example sets the <xref:System.Net.HttpWebRequest.Accept%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_Accept#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Accept/CPP/httpwebrequest_accept.cpp#1)]
 [!code-csharp[HttpWebRequest_Accept#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Accept/CS/httpwebrequest_accept.cs#1)]
 [!code-vb[HttpWebRequest_Accept#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Accept/VB/httpwebrequest_accept.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-194">要求に範囲ヘッダーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-194">Adds a range header to the request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-195">HTTP のすべてのエンティティは、HTTP メッセージのバイトのシーケンスとして表記は、ためバイトの範囲の概念は任意の HTTP エンティティ無効です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-195">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ab7fd-196">ただし、すべてのクライアントとサーバーは、バイト範囲の操作をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-196">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ab7fd-197">要求に Range ヘッダーには、要求のみが必要である HTTP エンティティに指定されたバイトの範囲の一部を受信するクライアントができます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-197">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ab7fd-198">範囲ヘッダーの要求をサポートするためには、サーバーは必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-198">Servers are not required to support Range header requests.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (range As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(int range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="range">
          <span data-ttu-id="ab7fd-199">範囲の先頭または末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-199">The starting or ending point of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-200">要求されたデータの先頭または末尾からの特定の範囲の要求にバイト範囲ヘッダーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-200">Adds a byte range header to a request for a specific range from the beginning or end of the requested data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-201"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType>メソッドが要求にバイト範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-201">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="ab7fd-202">場合`range`が正の値、`range`パラメーターが範囲の開始位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-202">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="ab7fd-203">サーバーがからのデータの送信を開始する必要があります、 `range` HTTP エンティティ内のデータの末尾に指定されたパラメーター。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-203">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="ab7fd-204">場合`range`は負の値、`range`パラメーターが範囲の終了位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-204">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="ab7fd-205">サーバーが HTTP エンティティ内のデータの先頭からのデータの送信を開始する必要があります、`range`パラメーターが指定されています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-205">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="ab7fd-206">HTTP のすべてのエンティティは、HTTP メッセージのバイトのシーケンスとして表記は、ためバイトの範囲の概念は任意の HTTP エンティティ無効です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-206">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ab7fd-207">ただし、すべてのクライアントとサーバーは、バイト範囲の操作をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-207">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ab7fd-208">要求に Range ヘッダーには、要求のみが必要である HTTP エンティティに指定されたバイトの範囲の一部を受信するクライアントができます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-208">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ab7fd-209">範囲ヘッダーの要求をサポートするためには、サーバーは必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-209">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ab7fd-210">以下になります (99 のバイト位置を先頭) から最初の 100 バイトの送信をサーバーに要求する、HTTP プロトコルの要求に Range ヘッダーの例:</span><span class="sxs-lookup"><span data-stu-id="ab7fd-210">An example of a Range header in an HTTP protocol request that requests the server send the first 100 bytes (from the start to byte position 99) would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-211">この例で、 `range` -99 パラメーターになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-211">For this example, the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="ab7fd-212">HTTP サーバーでは、Accept 範囲ヘッダーを持つ範囲ヘッダーのサポートを示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-212">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="ab7fd-213">バイト範囲をサポートしているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-213">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-214">Accept 範囲ヘッダーが受信されない場合、サーバーからの応答のヘッダーに、し、サーバーはサポートしていません範囲ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-214">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ab7fd-215">範囲をサポートしていませんが、Accept 範囲ヘッダーを認識しているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-215">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-216">全体の要求に関連付けられている HTTP ヘッダーだけが解析され、プロパティを使用できる範囲の要求から応答を受信するときに、<xref:System.Net.HttpWebResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-216">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ab7fd-217">各範囲に関連付けられたヘッダーが応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-217">Headers associated with each range are returned in the response.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-218">次のコード例では、要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-218">The following code example adds a range header to the request.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.AddRange#1](~/samples/snippets/cpp/VS_Snippets_Misc/system.net.httpwebrequest.addrange/cpp/source.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.AddRange#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.httpwebrequest.addrange/cs/source.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.AddRange#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.net.httpwebrequest.addrange/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-219">
            <paramref name="rangeSpecifier" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-219">
              <paramref name="rangeSpecifier" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-220">範囲ヘッダーを追加できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-220">The range header could not be added.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (long range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int64 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (range As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(long range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="range">
          <span data-ttu-id="ab7fd-221">範囲の先頭または末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-221">The starting or ending point of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-222">要求されたデータの先頭または末尾からの特定の範囲の要求にバイト範囲ヘッダーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-222">Adds a byte range header to a request for a specific range from the beginning or end of the requested data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-223"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType>メソッドが要求にバイト範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-223">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="ab7fd-224">場合`range`が正の値、`range`パラメーターが範囲の開始位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-224">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="ab7fd-225">サーバーがからのデータの送信を開始する必要があります、 `range` HTTP エンティティ内のデータの末尾に指定されたパラメーター。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-225">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="ab7fd-226">場合`range`は負の値、`range`パラメーターが範囲の終了位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-226">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="ab7fd-227">サーバーが HTTP エンティティ内のデータの先頭からのデータの送信を開始する必要があります、`range`パラメーターが指定されています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-227">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="ab7fd-228">HTTP のすべてのエンティティは、HTTP メッセージのバイトのシーケンスとして表記は、ためバイトの範囲の概念は任意の HTTP エンティティ無効です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-228">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ab7fd-229">ただし、すべてのクライアントとサーバーは、バイト範囲の操作をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-229">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ab7fd-230">要求に Range ヘッダーには、要求のみが必要である HTTP エンティティに指定されたバイトの範囲の一部を受信するクライアントができます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-230">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ab7fd-231">範囲ヘッダーの要求をサポートするためには、サーバーは必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-231">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ab7fd-232">以下になります (99 のバイト位置を先頭) から最初の 100 バイトの送信をサーバーに要求する、HTTP プロトコルの要求に Range ヘッダーの例:</span><span class="sxs-lookup"><span data-stu-id="ab7fd-232">An example of a Range header in an HTTP protocol request that requests the server send the first 100 bytes (from the start to byte position 99) would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-233">この例で、 `range` -99 パラメーターになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-233">For this example, the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="ab7fd-234">HTTP サーバーでは、Accept 範囲ヘッダーを持つ範囲ヘッダーのサポートを示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-234">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="ab7fd-235">バイト範囲をサポートしているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-235">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-236">Accept 範囲ヘッダーが受信されない場合、サーバーからの応答のヘッダーに、し、サーバーはサポートしていません範囲ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-236">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ab7fd-237">範囲をサポートしていませんが、Accept 範囲ヘッダーを認識しているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-237">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-238">全体の要求に関連付けられている HTTP ヘッダーだけが解析され、プロパティを使用できる範囲の要求から応答を受信するときに、<xref:System.Net.HttpWebResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-238">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ab7fd-239">各範囲に関連付けられたヘッダーが応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-239">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-240">
            <paramref name="rangeSpecifier" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-240">
              <paramref name="rangeSpecifier" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-241">範囲ヘッダーを追加できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-241">The range header could not be added.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (from As Integer, to As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(int from, int to);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="from">
          <span data-ttu-id="ab7fd-242">データの送信を開始する位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-242">The position at which to start sending data.</span>
          </span>
        </param>
        <param name="to">
          <span data-ttu-id="ab7fd-243">データの送信を終了する位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-243">The position at which to stop sending data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-244">指定した範囲の要求にバイト範囲ヘッダーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-244">Adds a byte range header to the request for a specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-245"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType>メソッドが要求にバイト範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-245">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="ab7fd-246">HTTP のすべてのエンティティは、HTTP メッセージのバイトのシーケンスとして表記は、ためバイトの範囲の概念は任意の HTTP エンティティ無効です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-246">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ab7fd-247">ただし、すべてのクライアントとサーバーは、バイト範囲の操作をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-247">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ab7fd-248">要求に Range ヘッダーには、要求のみが必要である HTTP エンティティに指定されたバイトの範囲の一部を受信するクライアントができます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-248">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ab7fd-249">範囲ヘッダーの要求をサポートするためには、サーバーは必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-249">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ab7fd-250">要求の最初の 100 バイトになる HTTP プロトコルの要求に Range ヘッダーの例は、次のようになります</span><span class="sxs-lookup"><span data-stu-id="ab7fd-250">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-251">この例で、`from`パラメーターが 0 として指定され、 `to` 99 としてパラメーターを指定するとします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-251">For this example, the `from` parameter would be specified as 0 and the `to` parameter would be specified as 99.</span></span> <span data-ttu-id="ab7fd-252">範囲指定子は、このメソッドによって自動的に「バイトを」として設定されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-252">The range specifier is automatically set as "bytes" by this method.</span></span>  
  
 <span data-ttu-id="ab7fd-253">HTTP サーバーでは、Accept 範囲ヘッダーを持つ範囲ヘッダーのサポートを示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-253">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="ab7fd-254">バイト範囲をサポートしているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-254">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-255">Accept 範囲ヘッダーが受信されない場合、サーバーからの応答のヘッダーに、し、サーバーはサポートしていません範囲ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-255">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ab7fd-256">範囲をサポートしていませんが、Accept 範囲ヘッダーを認識しているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-256">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-257">全体の要求に関連付けられている HTTP ヘッダーだけが解析され、プロパティを使用できる範囲の要求から応答を受信するときに、<xref:System.Net.HttpWebResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-257">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ab7fd-258">各範囲に関連付けられたヘッダーが応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-258">Headers associated with each range are returned in the response.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-259">次のコード例では、要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-259">The following code example adds a range header to the request.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.AddRange2#1](~/samples/snippets/cpp/VS_Snippets_Misc/system.net.httpwebrequest.addrange2/cpp/source.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.AddRange2#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.httpwebrequest.addrange2/cs/source.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.AddRange2#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/system.net.httpwebrequest.addrange2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-260">
            <paramref name="rangeSpecifier" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-260">
              <paramref name="rangeSpecifier" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ab7fd-261">
            <paramref name="from" /> は <paramref name="to" /> より大きい</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-261">
              <paramref name="from" /> is greater than <paramref name="to" /></span>
          </span>
          <span data-ttu-id="ab7fd-262">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-262">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-263">
            <paramref name="from" /> または <paramref name="to" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-263">
              <paramref name="from" /> or <paramref name="to" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-264">範囲ヘッダーを追加できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-264">The range header could not be added.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (long from, long to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(int64 from, int64 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (from As Long, to As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(long from, long to);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="from" Type="System.Int64" />
        <Parameter Name="to" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="from">
          <span data-ttu-id="ab7fd-265">データの送信を開始する位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-265">The position at which to start sending data.</span>
          </span>
        </param>
        <param name="to">
          <span data-ttu-id="ab7fd-266">データの送信を終了する位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-266">The position at which to stop sending data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-267">指定した範囲の要求にバイト範囲ヘッダーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-267">Adds a byte range header to the request for a specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-268"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType>メソッドが要求にバイト範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-268">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a byte range header to the request.</span></span>  
  
 <span data-ttu-id="ab7fd-269">HTTP のすべてのエンティティは、HTTP メッセージのバイトのシーケンスとして表記は、ためバイトの範囲の概念は任意の HTTP エンティティ無効です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-269">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ab7fd-270">ただし、すべてのクライアントとサーバーは、バイト範囲の操作をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-270">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ab7fd-271">要求に Range ヘッダーには、要求のみが必要である HTTP エンティティに指定されたバイトの範囲の一部を受信するクライアントができます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-271">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ab7fd-272">範囲ヘッダーの要求をサポートするためには、サーバーは必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-272">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ab7fd-273">要求の最初の 100 バイトになる HTTP プロトコルの要求に Range ヘッダーの例は、次のようになります</span><span class="sxs-lookup"><span data-stu-id="ab7fd-273">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-274">この例で、`from`パラメーターが 0 として指定され、 `to` 99 としてパラメーターを指定するとします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-274">For this example, the `from` parameter would be specified as 0 and the `to` parameter would be specified as 99.</span></span> <span data-ttu-id="ab7fd-275">範囲指定子は、このメソッドによって自動的に「バイトを」として設定されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-275">The range specifier is automatically set as "bytes" by this method.</span></span>  
  
 <span data-ttu-id="ab7fd-276">HTTP サーバーでは、Accept 範囲ヘッダーを持つ範囲ヘッダーのサポートを示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-276">A HTTP server indicates support for Range headers with the Accept-Ranges header.</span></span> <span data-ttu-id="ab7fd-277">バイト範囲をサポートしているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-277">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-278">Accept 範囲ヘッダーが受信されない場合、サーバーからの応答のヘッダーに、し、サーバーはサポートしていません範囲ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-278">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ab7fd-279">範囲をサポートしていませんが、Accept 範囲ヘッダーを認識しているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-279">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-280">全体の要求に関連付けられている HTTP ヘッダーだけが解析され、プロパティを使用できる範囲の要求から応答を受信するときに、<xref:System.Net.HttpWebResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-280">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ab7fd-281">各範囲に関連付けられたヘッダーが応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-281">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-282">
            <paramref name="rangeSpecifier" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-282">
              <paramref name="rangeSpecifier" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ab7fd-283">
            <paramref name="from" /> は <paramref name="to" /> より大きい</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-283">
              <paramref name="from" /> is greater than <paramref name="to" /></span>
          </span>
          <span data-ttu-id="ab7fd-284">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-284">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-285">
            <paramref name="from" /> または <paramref name="to" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-285">
              <paramref name="from" /> or <paramref name="to" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-286">範囲ヘッダーを追加できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-286">The range header could not be added.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, int range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int32 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, range As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, int range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" />
        <Parameter Name="range" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier">
          <span data-ttu-id="ab7fd-287">範囲の説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-287">The description of the range.</span>
          </span>
        </param>
        <param name="range">
          <span data-ttu-id="ab7fd-288">範囲の先頭または末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-288">The starting or ending point of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-289">要求されたデータの先頭または末尾からの特定の範囲の要求に Range ヘッダーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-289">Adds a Range header to a request for a specific range from the beginning or end of the requested data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-290"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType>メソッドが要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-290">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="ab7fd-291">場合`range`が正の値、`range`パラメーターが範囲の開始位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-291">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="ab7fd-292">サーバーがからのデータの送信を開始する必要があります、 `range` HTTP エンティティ内のデータの末尾に指定されたパラメーター。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-292">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="ab7fd-293">場合`range`は負の値、`range`パラメーターが範囲の終了位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-293">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="ab7fd-294">サーバーが HTTP エンティティ内のデータの先頭からのデータの送信を開始する必要があります、`range`パラメーターが指定されています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-294">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="ab7fd-295">HTTP のすべてのエンティティは、HTTP メッセージのバイトのシーケンスとして表記は、ためバイトの範囲の概念は任意の HTTP エンティティ無効です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-295">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ab7fd-296">ただし、すべてのクライアントとサーバーは、バイト範囲の操作をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-296">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ab7fd-297">要求に Range ヘッダーには、要求のみが必要である HTTP エンティティに指定されたバイトの範囲の一部を受信するクライアントができます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-297">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ab7fd-298">範囲ヘッダーの要求をサポートするためには、サーバーは必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-298">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ab7fd-299">`rangeSpecifier`パラメーターは通常を指定する、""(バイト単位) としては、ほとんどの HTTP サーバーによって認識される唯一の範囲指定子のためです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-299">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="ab7fd-300">設定、`rangeSpecifier`他のいくつかの文字列へのパラメーターでは、バイト数 (バイト範囲指定子、IETF によって RFC 2616 で定義されている) 以外のカスタム範囲指定子のサポート。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-300">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="ab7fd-301">要求の最初の 100 バイトになる HTTP プロトコルの要求に Range ヘッダーの例は、次のようになります</span><span class="sxs-lookup"><span data-stu-id="ab7fd-301">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=-99\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-302">この例で、`rangeSpecifier`パラメーターが「バイトを」として指定され、 `range` -99 パラメーターになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-302">For this example, the `rangeSpecifier` parameter would be specified as "bytes" and the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="ab7fd-303">HTTP サーバーでは、応答で Accept 範囲ヘッダーを持つ範囲ヘッダーのサポートを示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-303">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="ab7fd-304">バイト範囲をサポートしているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-304">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-305">Accept 範囲ヘッダーが受信されない場合、サーバーからの応答のヘッダーに、し、サーバーはサポートしていません範囲ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-305">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ab7fd-306">範囲をサポートしていませんが、Accept 範囲ヘッダーを認識しているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-306">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-307">全体の要求に関連付けられている HTTP ヘッダーだけが解析され、プロパティを使用できる範囲の要求から応答を受信するときに、<xref:System.Net.HttpWebResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-307">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ab7fd-308">各範囲に関連付けられたヘッダーが応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-308">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab7fd-309">
            <paramref name="rangeSpecifier" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-309">
              <paramref name="rangeSpecifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-310">
            <paramref name="rangeSpecifier" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-310">
              <paramref name="rangeSpecifier" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-311">範囲ヘッダーを追加できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-311">The range header could not be added.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, long range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int64 range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, range As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, long range);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" />
        <Parameter Name="range" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier">
          <span data-ttu-id="ab7fd-312">範囲の説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-312">The description of the range.</span>
          </span>
        </param>
        <param name="range">
          <span data-ttu-id="ab7fd-313">範囲の先頭または末尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-313">The starting or ending point of the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-314">要求されたデータの先頭または末尾からの特定の範囲の要求に Range ヘッダーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-314">Adds a Range header to a request for a specific range from the beginning or end of the requested data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-315"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType>メソッドが要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-315">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="ab7fd-316">場合`range`が正の値、`range`パラメーターが範囲の開始位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-316">If `range` is positive, the `range` parameter specifies the starting point of the range.</span></span> <span data-ttu-id="ab7fd-317">サーバーがからのデータの送信を開始する必要があります、 `range` HTTP エンティティ内のデータの末尾に指定されたパラメーター。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-317">The server should start sending data from the `range` parameter specified to the end of the data in the HTTP entity.</span></span>  
  
 <span data-ttu-id="ab7fd-318">場合`range`は負の値、`range`パラメーターが範囲の終了位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-318">If `range` is negative, the `range` parameter specifies the ending point of the range.</span></span> <span data-ttu-id="ab7fd-319">サーバーが HTTP エンティティ内のデータの先頭からのデータの送信を開始する必要があります、`range`パラメーターが指定されています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-319">The server should start sending data from the start of the data in the HTTP entity to the `range` parameter specified.</span></span>  
  
 <span data-ttu-id="ab7fd-320">HTTP のすべてのエンティティは、HTTP メッセージのバイトのシーケンスとして表記は、ためバイトの範囲の概念は任意の HTTP エンティティ無効です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-320">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ab7fd-321">ただし、すべてのクライアントとサーバーは、バイト範囲の操作をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-321">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ab7fd-322">要求に Range ヘッダーには、要求のみが必要である HTTP エンティティに指定されたバイトの範囲の一部を受信するクライアントができます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-322">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ab7fd-323">範囲ヘッダーの要求をサポートするためには、サーバーは必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-323">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ab7fd-324">`rangeSpecifier`パラメーターは通常を指定する、""(バイト単位) としては、ほとんどの HTTP サーバーによって認識される唯一の範囲指定子のためです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-324">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="ab7fd-325">設定、`rangeSpecifier`他のいくつかの文字列へのパラメーターでは、バイト数 (バイト範囲指定子、IETF によって RFC 2616 で定義されている) 以外のカスタム範囲指定子のサポート。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-325">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="ab7fd-326">要求の最初の 100 バイトになる HTTP プロトコルの要求に Range ヘッダーの例は、次のようになります</span><span class="sxs-lookup"><span data-stu-id="ab7fd-326">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=-99\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-327">この例で、`rangeSpecifier`パラメーターが「バイトを」として指定され、 `range` -99 パラメーターになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-327">For this example, the `rangeSpecifier` parameter would be specified as "bytes" and the `range` parameter would be -99.</span></span>  
  
 <span data-ttu-id="ab7fd-328">HTTP サーバーでは、応答で Accept 範囲ヘッダーを持つ範囲ヘッダーのサポートを示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-328">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="ab7fd-329">バイト範囲をサポートしているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-329">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-330">Accept 範囲ヘッダーが受信されない場合、サーバーからの応答のヘッダーに、し、サーバーはサポートしていません範囲ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-330">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ab7fd-331">範囲をサポートしていませんが、Accept 範囲ヘッダーを認識しているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-331">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-332">全体の要求に関連付けられている HTTP ヘッダーだけが解析され、プロパティを使用できる範囲の要求から応答を受信するときに、<xref:System.Net.HttpWebResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-332">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ab7fd-333">各範囲に関連付けられたヘッダーが応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-333">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab7fd-334">
            <paramref name="rangeSpecifier" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-334">
              <paramref name="rangeSpecifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-335">
            <paramref name="rangeSpecifier" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-335">
              <paramref name="rangeSpecifier" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-336">範囲ヘッダーを追加できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-336">The range header could not be added.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, from As Integer, to As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, int from, int to);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier">
          <span data-ttu-id="ab7fd-337">範囲の説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-337">The description of the range.</span>
          </span>
        </param>
        <param name="from">
          <span data-ttu-id="ab7fd-338">データの送信を開始する位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-338">The position at which to start sending data.</span>
          </span>
        </param>
        <param name="to">
          <span data-ttu-id="ab7fd-339">データの送信を終了する位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-339">The position at which to stop sending data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-340">指定した範囲の要求に範囲ヘッダーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-340">Adds a range header to a request for a specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-341"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType>メソッドが要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-341">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="ab7fd-342">HTTP のすべてのエンティティは、HTTP メッセージのバイトのシーケンスとして表記は、ためバイトの範囲の概念は任意の HTTP エンティティ無効です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-342">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ab7fd-343">ただし、すべてのクライアントとサーバーは、バイト範囲の操作をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-343">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ab7fd-344">要求に Range ヘッダーには、要求のみが必要である HTTP エンティティに指定されたバイトの範囲の一部を受信するクライアントができます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-344">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ab7fd-345">範囲ヘッダーの要求をサポートするためには、サーバーは必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-345">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ab7fd-346">`rangeSpecifier`パラメーターは通常を指定する、""(バイト単位) としては、ほとんどの HTTP サーバーによって認識される唯一の範囲指定子のためです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-346">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="ab7fd-347">設定、`rangeSpecifier`他のいくつかの文字列へのパラメーターでは、バイト数 (バイト範囲指定子、IETF によって RFC 2616 で定義されている) 以外のカスタム範囲指定子のサポート。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-347">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="ab7fd-348">要求の最初の 100 バイトになる HTTP プロトコルの要求に Range ヘッダーの例は、次のようになります</span><span class="sxs-lookup"><span data-stu-id="ab7fd-348">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-349">この例で、`rangeSpecifier`パラメーターが、""(バイト単位) として指定された、`from`パラメーターが 0 になります、`to`パラメーター 99 になります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-349">For this example, the `rangeSpecifier` parameter would be specified as a "bytes", the `from` parameter would be 0, and the `to` parameter would be 99.</span></span>  
  
 <span data-ttu-id="ab7fd-350">HTTP サーバーでは、応答で Accept 範囲ヘッダーを持つ範囲ヘッダーのサポートを示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-350">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="ab7fd-351">バイト範囲をサポートしているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-351">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-352">範囲 Accept ヘッダーで指定した文字列は、範囲指定子内で指定される、`rangeSpecifier`このメソッドのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-352">The string specified in the Accept-Ranges header is the range-specifier that would be by specified in the `rangeSpecifier` parameter for this method.</span></span>  
  
 <span data-ttu-id="ab7fd-353">Accept 範囲ヘッダーが受信されない場合、サーバーからの応答のヘッダーに、し、サーバーはサポートしていません範囲ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-353">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ab7fd-354">範囲をサポートしていませんが、Accept 範囲ヘッダーを認識しているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-354">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-355">全体の要求に関連付けられている HTTP ヘッダーだけが解析され、プロパティを使用できる範囲の要求から応答を受信するときに、<xref:System.Net.HttpWebResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-355">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ab7fd-356">各範囲に関連付けられたヘッダーが応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-356">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab7fd-357">
            <paramref name="rangeSpecifier" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-357">
              <paramref name="rangeSpecifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ab7fd-358">
            <paramref name="from" /> は <paramref name="to" /> より大きい</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-358">
              <paramref name="from" /> is greater than <paramref name="to" /></span>
          </span>
          <span data-ttu-id="ab7fd-359">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-359">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-360">
            <paramref name="from" /> または <paramref name="to" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-360">
              <paramref name="from" /> or <paramref name="to" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-361">
            <paramref name="rangeSpecifier" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-361">
              <paramref name="rangeSpecifier" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-362">範囲ヘッダーを追加できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-362">The range header could not be added.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string rangeSpecifier, long from, long to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string rangeSpecifier, int64 from, int64 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (rangeSpecifier As String, from As Long, to As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::String ^ rangeSpecifier, long from, long to);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rangeSpecifier" Type="System.String" />
        <Parameter Name="from" Type="System.Int64" />
        <Parameter Name="to" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="rangeSpecifier">
          <span data-ttu-id="ab7fd-363">範囲の説明。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-363">The description of the range.</span>
          </span>
        </param>
        <param name="from">
          <span data-ttu-id="ab7fd-364">データの送信を開始する位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-364">The position at which to start sending data.</span>
          </span>
        </param>
        <param name="to">
          <span data-ttu-id="ab7fd-365">データの送信を終了する位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-365">The position at which to stop sending data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-366">指定した範囲の要求に範囲ヘッダーを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-366">Adds a range header to a request for a specified range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-367"><xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType>メソッドが要求に範囲ヘッダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-367">The <xref:System.Net.HttpWebRequest.AddRange%2A?displayProperty=nameWithType> method adds a Range header to the request.</span></span>  
  
 <span data-ttu-id="ab7fd-368">HTTP のすべてのエンティティは、HTTP メッセージのバイトのシーケンスとして表記は、ためバイトの範囲の概念は任意の HTTP エンティティ無効です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-368">Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</span></span> <span data-ttu-id="ab7fd-369">ただし、すべてのクライアントとサーバーは、バイト範囲の操作をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-369">However, not all clients and servers need to support byte-range operations.</span></span>  
  
 <span data-ttu-id="ab7fd-370">要求に Range ヘッダーには、要求のみが必要である HTTP エンティティに指定されたバイトの範囲の一部を受信するクライアントができます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-370">The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</span></span> <span data-ttu-id="ab7fd-371">範囲ヘッダーの要求をサポートするためには、サーバーは必要はありません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-371">Servers are not required to support Range header requests.</span></span>  
  
 <span data-ttu-id="ab7fd-372">`rangeSpecifier`パラメーターは通常を指定する、""(バイト単位) としては、ほとんどの HTTP サーバーによって認識される唯一の範囲指定子のためです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-372">The `rangeSpecifier` parameter would normally be specified as a "bytes", since this is the only range specifier recognized by most HTTP servers.</span></span> <span data-ttu-id="ab7fd-373">設定、`rangeSpecifier`他のいくつかの文字列へのパラメーターでは、バイト数 (バイト範囲指定子、IETF によって RFC 2616 で定義されている) 以外のカスタム範囲指定子のサポート。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-373">Setting the `rangeSpecifier` parameter to some other string allows support for custom range specifiers other than bytes (the byte-range specifier defined in RFC 2616 by the IETF).</span></span>  
  
 <span data-ttu-id="ab7fd-374">要求の最初の 100 バイトになる HTTP プロトコルの要求に Range ヘッダーの例は、次のようになります</span><span class="sxs-lookup"><span data-stu-id="ab7fd-374">An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</span></span>  
  
 `Range: bytes=0-99\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-375">この例で、`rangeSpecifier`パラメーターが、""(バイト単位) として指定された、`from`パラメーターが 0 になります、`to`パラメーター 99 になります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-375">For this example, the `rangeSpecifier` parameter would be specified as a "bytes", the `from` parameter would be 0, and the `to` parameter would be 99.</span></span>  
  
 <span data-ttu-id="ab7fd-376">HTTP サーバーでは、応答で Accept 範囲ヘッダーを持つ範囲ヘッダーのサポートを示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-376">A HTTP server indicates support for Range headers with the Accept-Ranges header in the response.</span></span> <span data-ttu-id="ab7fd-377">バイト範囲をサポートしているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-377">An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</span></span>  
  
 `Accept-Ranges: bytes\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-378">範囲 Accept ヘッダーで指定した文字列は、範囲指定子内で指定される、`rangeSpecifier`このメソッドのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-378">The string specified in the Accept-Ranges header is the range-specifier that would be by specified in the `rangeSpecifier` parameter for this method.</span></span>  
  
 <span data-ttu-id="ab7fd-379">Accept 範囲ヘッダーが受信されない場合、サーバーからの応答のヘッダーに、し、サーバーはサポートしていません範囲ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-379">If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</span></span> <span data-ttu-id="ab7fd-380">範囲をサポートしていませんが、Accept 範囲ヘッダーを認識しているサーバーから Accept 範囲ヘッダーの例に次のようになります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-380">An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</span></span>  
  
 `Accept-Ranges: none\r\n\r\n`  
  
 <span data-ttu-id="ab7fd-381">全体の要求に関連付けられている HTTP ヘッダーだけが解析され、プロパティを使用できる範囲の要求から応答を受信するときに、<xref:System.Net.HttpWebResponse>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-381">When receiving the response from a range request, only the HTTP headers associated with the entire request are parsed and made available via properties on the <xref:System.Net.HttpWebResponse> class.</span></span> <span data-ttu-id="ab7fd-382">各範囲に関連付けられたヘッダーが応答で返されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-382">Headers associated with each range are returned in the response.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab7fd-383">
            <paramref name="rangeSpecifier" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-383">
              <paramref name="rangeSpecifier" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ab7fd-384">
            <paramref name="from" /> は <paramref name="to" /> より大きい</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-384">
              <paramref name="from" /> is greater than <paramref name="to" /></span>
          </span>
          <span data-ttu-id="ab7fd-385">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-385">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-386">
            <paramref name="from" /> または <paramref name="to" /> が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-386">
              <paramref name="from" /> or <paramref name="to" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-387">
            <paramref name="rangeSpecifier" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-387">
              <paramref name="rangeSpecifier" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-388">範囲ヘッダーを追加できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-388">The range header could not be added.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.HttpWebRequest.AddRange" />
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public Uri Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Address { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-389">要求に実際に応答するインターネット リソースの URI (Uniform Resource Identifier) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-389">Gets the Uniform Resource Identifier (URI) of the Internet resource that actually responds to the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-390">要求に実際に応答するインターネット リソースを識別する <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-390">A <see cref="T:System.Uri" /> that identifies the Internet resource that actually responds to the request.</span>
          </span>
          <span data-ttu-id="ab7fd-391">既定値は、<see cref="M:System.Net.WebRequest.Create(System.String)" /> メソッドが要求を初期化するために使用する URI です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-391">The default is the URI used by the <see cref="M:System.Net.WebRequest.Create(System.String)" /> method to initialize the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-392"><xref:System.Net.HttpWebRequest.Address%2A>プロパティは、要求時に発生するすべてのリダイレクトが完了した後、URI に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-392">The <xref:System.Net.HttpWebRequest.Address%2A> property is set to the URI after any redirections that happen during the request are complete.</span></span>  
  
 <span data-ttu-id="ab7fd-393">元の要求の URI が保持される、<xref:System.Net.HttpWebRequest.RequestUri%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-393">The URI of the original request is kept in the <xref:System.Net.HttpWebRequest.RequestUri%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-394">次のコード例は、<xref:System.Net.HttpWebRequest>オブジェクト`req`の値を設定は、要求を処理する別の場所にリダイレクトされ、`hasChanged`変数を`true`場合は、要求がリダイレクトされましたそれ以外の場合`hasChanged`。に設定されている`false`です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-394">The following code example checks to see if the <xref:System.Net.HttpWebRequest> object `req` was redirected to another location to fulfill the request, and sets the value of the `hasChanged` variable to `true` if the request was redirected; otherwise `hasChanged` is set to `false`.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public virtual bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-395">要求がリダイレクト応答に従うかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-395">Gets or sets a value that indicates whether the request should follow redirection responses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-396">要求がインターネット リソースからのリダイレクト応答に自動的に従う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-396">
              <see langword="true" /> if the request should automatically follow redirection responses from the Internet resource; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7fd-397">既定値は <see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-397">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-398">設定<xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A>に`true`する場合は、リソースの新しい場所に自動的に次の HTTP リダイレクト ヘッダーを要求します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-398">Set <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> to `true` if you want the request to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="ab7fd-399">リダイレクト先の最大数が設定、<xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-399">The maximum number of redirections to follow is set by the <xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A> property.</span></span>  
  
 <span data-ttu-id="ab7fd-400">場合<xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A>に設定されている`false`、すべての応答は HTTP ステータス コードで 300 から 399 には、アプリケーションに返されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-400">If <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> is set to `false`, all responses with an HTTP status code from 300 to 399 is returned to the application.</span></span>  
  
 <span data-ttu-id="ab7fd-401">自動リダイレクトで Authorization ヘッダーがオフと<xref:System.Net.HttpWebRequest>リダイレクトされる場所を再認証に自動的に試みます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-401">The Authorization header is cleared on auto-redirects and <xref:System.Net.HttpWebRequest> automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="ab7fd-402">実際には、つまり、アプリケーションも、リダイレクトが発生する可能性がある場合に、承認ヘッダーにカスタムの認証情報を置くことはできません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-402">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="ab7fd-403">代わりに、アプリケーションでは、実装してカスタム認証モジュールを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-403">Instead, the application must implement and register a custom authentication module.</span></span> <span data-ttu-id="ab7fd-404"><xref:System.Net.AuthenticationManager?displayProperty=nameWithType>関連クラスを使用して、カスタム認証モジュールを実装します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-404">The <xref:System.Net.AuthenticationManager?displayProperty=nameWithType> and related class are used to implement a custom authentication module.</span></span> <span data-ttu-id="ab7fd-405"><xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType>メソッドは、カスタム認証モジュールを登録します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-405">The <xref:System.Net.AuthenticationManager.Register%2A?displayProperty=nameWithType> method registers a custom authentication module.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-406">次のコード例では、<xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A>要求をリダイレクト応答に従うようにするプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-406">The following code example uses the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property to allow the request to follow redirection responses.</span></span>  
  
 [!code-cpp[HttpWebRequest_AllowAutoRedirect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_AllowAutoRedirect/CPP/httpwebrequest_allowautoredirect.cpp#2)]
 [!code-csharp[HttpWebRequest_AllowAutoRedirect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_AllowAutoRedirect/CS/httpwebrequest_allowautoredirect.cs#2)]
 [!code-vb[HttpWebRequest_AllowAutoRedirect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_AllowAutoRedirect/VB/httpwebrequest_allowautoredirect.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReadStreamBuffering">
      <MemberSignature Language="C#" Value="public virtual bool AllowReadStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReadStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AllowReadStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReadStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReadStreamBuffering { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-407">インターネット リソースから受け取ったデータをバッファリングするかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-407">Gets or sets a value that indicates whether to buffer the received from the Internet resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-408">インターネット リソースから受信したデータのバッファリングを有効にする場合は <see langword="true" />。バッファリングを無効にする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-408">
              <see langword="true" /> to enable buffering of the data received from the Internet resource; <see langword="false" /> to disable buffering.</span>
          </span>
          <span data-ttu-id="ab7fd-409">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-409">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWriteStreamBuffering">
      <MemberSignature Language="C#" Value="public virtual bool AllowWriteStreamBuffering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowWriteStreamBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowWriteStreamBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowWriteStreamBuffering { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-410">インターネット リソースに送信するデータをバッファリングするかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-410">Gets or sets a value that indicates whether to buffer the data sent to the Internet resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-411">インターネット リソースに送信するデータのバッファリングを有効にする場合は <see langword="true" />。バッファリングを無効にする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-411">
              <see langword="true" /> to enable buffering of the data sent to the Internet resource; <see langword="false" /> to disable buffering.</span>
          </span>
          <span data-ttu-id="ab7fd-412">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-412">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-413">ときに<xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A>は`true`要求のリダイレクトまたは認証が発生した場合は再送信できるように、データがメモリにバッファリングされています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-413">When <xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A> is `true`, the data is buffered in memory so it is ready to be resent in the event of redirections or authentication requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-414">次のコード例では、<xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A>プロパティをデータのバッファリングを無効にします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-414">The following code example uses the <xref:System.Net.HttpWebRequest.AllowWriteStreamBuffering%2A> property to disable data buffering.</span></span>  
  
 [!code-cpp[HttpWebRequest_AllowWriteStreamBuffering#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_AllowWriteStreamBuffering/CPP/httpwebrequest_allowwritestreambuffering.cpp#1)]
 [!code-csharp[HttpWebRequest_AllowWriteStreamBuffering#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_AllowWriteStreamBuffering/CS/httpwebrequest_allowwritestreambuffering.cs#1)]
 [!code-vb[HttpWebRequest_AllowWriteStreamBuffering#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_AllowWriteStreamBuffering/VB/httpwebrequest_allowwritestreambuffering.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ab7fd-415">設定<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" />に<see langword="true" />データ バッファーが使用可能なメモリを使用するために、大規模なデータセットをアップロードするときにパフォーマンスの問題が発生する可能性があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ab7fd-415">Setting <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> to <see langword="true" /> might cause performance problems when uploading large datasets because the data buffer could use all available memory.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-416">使用される圧縮解除の種類を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-416">Gets or sets the type of decompression that is used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-417">A<see cref="T:System.Net.DecompressionMethods" />のために使用される圧縮解除の種類を示すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-417">A <see cref="T:System.Net.DecompressionMethods" /> object that indicates the type of decompression that is used.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-418">オブジェクトの現在の状態では、このプロパティを設定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-418">The object's current state does not allow this property to be set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ab7fd-419">
            <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-419">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ab7fd-420">この要求に対して使用する状態オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-420">The state object for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-421">データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトの非同期要求を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-421">Begins an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab7fd-422">非同期の要求を参照する <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-422">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-423"><xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>メソッド用のデータの送信に使用されるストリームへの非同期要求の開始、<xref:System.Net.HttpWebRequest>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-423">The <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method starts an asynchronous request for a stream used to send data for the <xref:System.Net.HttpWebRequest>.</span></span> <span data-ttu-id="ab7fd-424">非同期コールバック メソッドを使用して、<xref:System.Net.HttpWebRequest.EndGetRequestStream%2A>実際のストリームを返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-424">The asynchronous callback method uses the <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method to return the actual stream.</span></span>  
  
 <span data-ttu-id="ab7fd-425"><xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>メソッド (DNS の解決、プロキシ検出、および TCP ソケット接続など) にする前にこのメソッドが非同期状態にいくつかの同期のセットアップ タスクが必要です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-425">The <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method requires some synchronous setup tasks to complete (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous.</span></span> <span data-ttu-id="ab7fd-426">その結果、このメソッド呼び出さないでユーザー インターフェイス (UI) スレッドでエラーがスローされるため、例外の前に、初期同期のセットアップ タスクを完了する (ネットワークの設定によっては数分) までにかなりの時間がかかる場合がありますので、またはメソッドは成功します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-426">As a result, this method should never be called on a user interface (UI) thread because it might take considerable time (up to several minutes depending on network settings) to complete the initial synchronous setup tasks before an exception for an error is thrown or the method succeeds.</span></span>  
  
 <span data-ttu-id="ab7fd-427">スレッド プールの詳細については、次を参照してください。 [、マネージ スレッド プール](~/docs/standard/threading/the-managed-thread-pool.md)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-427">To learn more about the thread pool, see [The Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-428">アプリケーションでは、特定の要求を同期および非同期のメソッドを組み合わせることはできません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-428">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="ab7fd-429">呼び出す場合は、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>方法を使用する必要があります、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>応答を取得します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-429">If you call the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-430">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-430">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ab7fd-431">詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-431">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-432">次のコード例では、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>をストリームのインスタンスへの非同期要求を行うメソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-432">The following code example uses the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method to make an asynchronous request for a stream instance.</span></span>  
  
 [!code-cpp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CPP/httpwebrequest_begingetrequeststream.cpp#2)]
 [!code-csharp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CS/httpwebrequest_begingetrequeststream.cs#2)]
 [!code-vb[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/VB/httpwebrequest_begingetrequeststream.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.ProtocolViolationException">
          <span data-ttu-id="ab7fd-433">
            <see cref="P:System.Net.HttpWebRequest.Method" /> プロパティは GET または HEAD です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-433">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.</span>
          </span>
          <span data-ttu-id="ab7fd-434">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-434">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-435">
            <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> が <see langword="true" />、<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> が <see langword="false" />、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が -1、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> で、<see cref="P:System.Net.HttpWebRequest.Method" /> が POST か PUT です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-435">
              <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-436">前回の <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> への呼び出しでストリームが使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-436">The stream is being used by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /></span>
          </span>
          <span data-ttu-id="ab7fd-437">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-437">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-438">
            <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> が値に設定されており、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-438">
              <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7fd-439">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-439">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-440">スレッド プールは、スレッドを使い切りました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-440">The thread pool is running out of threads.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ab7fd-441">要求キャッシュの検証コントロールは、この要求に対する応答がキャッシュから提供されることを示していますが、データを書き込む要求ではキャッシュを使用してはなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-441">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</span>
          </span>
          <span data-ttu-id="ab7fd-442">正しく実装されていないカスタム キャッシュの検証コントロールを使用すると、この例外が発生する場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-442">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="ab7fd-443">
            <see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-443">
              <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ab7fd-444">.NET Compact Framework アプリケーションでコンテンツの長さが 0 の要求ストリームが取得されず、正しく閉じられませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-444">In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly.</span>
          </span>
          <span data-ttu-id="ab7fd-445">コンテンツの長さが 0 の要求の処理の詳細については、「[.NET Compact Framework のネットワーク プログラミング](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-445">For more information about handling zero content length requests, see [Network Programming in the .NET Compact Framework](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="ab7fd-446">
            <see cref="T:System.AsyncCallback" /> デリゲート</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-446">The <see cref="T:System.AsyncCallback" /> delegate</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ab7fd-447">この要求に対して使用する状態オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-447">The state object for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-448">インターネット リソースへの非同期要求を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-448">Begins an asynchronous request to an Internet resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab7fd-449">応答の非同期要求を参照する <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-449">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request for a response.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-450"><xref:System.Net.HttpWebRequest.BeginGetResponse%2A>メソッドは、インターネット リソースからの応答の非同期要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-450">The <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method starts an asynchronous request for a response from the Internet resource.</span></span> <span data-ttu-id="ab7fd-451">非同期コールバック メソッドを使用して、<xref:System.Net.HttpWebRequest.EndGetResponse%2A>実際を返すメソッド<xref:System.Net.WebResponse>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-451">The asynchronous callback method uses the <xref:System.Net.HttpWebRequest.EndGetResponse%2A> method to return the actual <xref:System.Net.WebResponse>.</span></span>  
  
 <span data-ttu-id="ab7fd-452">A<xref:System.Net.ProtocolViolationException>プロパティに設定すると、いくつかのケースでスローされたが、<xref:System.Net.HttpWebRequest>クラスが競合しています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-452">A <xref:System.Net.ProtocolViolationException> is thrown in several cases when the properties set on the <xref:System.Net.HttpWebRequest> class are conflicting.</span></span> <span data-ttu-id="ab7fd-453">アプリケーションを設定する場合、この例外が発生した、<xref:System.Net.HttpWebRequest.ContentLength%2A>プロパティおよび<xref:System.Net.HttpWebRequest.SendChunked%2A>プロパティを`true`、し、HTTP GET 要求を送信します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-453">This exception occurs if an application sets the <xref:System.Net.HttpWebRequest.ContentLength%2A> property and the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true`, and then sends an HTTP GET request.</span></span> <span data-ttu-id="ab7fd-454">この例外は、アプリケーションは、ここではサポートされていない HTTP 1.0 プロトコルのみをサポートするサーバーにチャンクを送信しようとした場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-454">This exception occurs if an application tries to send chunked to a server that only supports HTTP 1.0 protocol, where this is not supported.</span></span> <span data-ttu-id="ab7fd-455">アプリケーション設定を指定せずにデータを送信しようとする場合、この例外が発生した、<xref:System.Net.HttpWebRequest.ContentLength%2A>プロパティまたは<xref:System.Net.HttpWebRequest.SendChunked%2A>は`false`バッファリングを無効にする場合とキープア ライブ接続で (、<xref:System.Net.HttpWebRequest.KeepAlive%2A>プロパティは`true`)`.`</span><span class="sxs-lookup"><span data-stu-id="ab7fd-455">This exception occurs if an application tries to send data without setting the <xref:System.Net.HttpWebRequest.ContentLength%2A> property or the <xref:System.Net.HttpWebRequest.SendChunked%2A> is `false` when buffering is disabled and on a keepalive connection (the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`)`.`</span></span>  
  
 <span data-ttu-id="ab7fd-456">場合、<xref:System.Net.WebException>がスローされた場合を使用して、<xref:System.Net.WebException.Response%2A>と<xref:System.Net.WebException.Status%2A>サーバーからの応答を決定する例外のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-456">If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
 <span data-ttu-id="ab7fd-457"><xref:System.Net.HttpWebRequest.BeginGetResponse%2A>メソッド (DNS の解決、プロキシ検出、および TCP ソケット接続など) にする前にこのメソッドが非同期状態にいくつかの同期のセットアップ タスクが必要です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-457">The <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method requires some synchronous setup tasks to complete (DNS resolution, proxy detection, and TCP socket connection, for example) before this method becomes asynchronous.</span></span> <span data-ttu-id="ab7fd-458">その結果、このメソッド呼び出さないでユーザー インターフェイス (UI) スレッドでエラーがスローされるため、例外の前に、初期同期のセットアップ タスクを完了する (ネットワークの設定によっては数分) までにかなりの時間がかかる場合がありますので、またはメソッドは成功します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-458">As a result, this method should never be called on a user interface (UI) thread because it might take considerable time (up to several minutes depending on network settings) to complete the initial synchronous setup tasks before an exception for an error is thrown or the method succeeds.</span></span>  
  
 <span data-ttu-id="ab7fd-459">スレッド プールの詳細については、次を参照してください。 [ &#91; \<topic://cpconthreadpooling >&#93;](http://msdn.microsoft.com/library/2be05b06-a42e-4c9d-a739-96c21d673927)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-459">To learn more about the thread pool, see [&#91;\<topic://cpconthreadpooling>&#93;](http://msdn.microsoft.com/library/2be05b06-a42e-4c9d-a739-96c21d673927).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-460">アプリケーションでは、特定の要求を同期および非同期のメソッドを組み合わせることはできません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-460">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="ab7fd-461">呼び出す場合は、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>方法を使用する必要があります、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>応答を取得します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-461">If you call the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-462">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-462">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ab7fd-463">詳細については、次を参照してください。 [ &#91; \<topic://conUsingNetworkTracing >&#93;](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-463">For more information, see [&#91;\<topic://conUsingNetworkTracing>&#93;](http://msdn.microsoft.com/library/e993b7c3-087f-45d8-9c02-9dded936d804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-464">次のコード例では、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>をインターネット リソースへの非同期要求を行うメソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-464">The following code example uses the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method to make an asynchronous request for an Internet resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-465">非同期要求の場合、独自のタイムアウト メカニズムを実装するクライアント アプリケーションの役割です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-465">In the case of asynchronous requests, it is the responsibility of the client application to implement its own time-out mechanism.</span></span> <span data-ttu-id="ab7fd-466">次のコード例では、それを実行する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-466">The following code example shows how to do it.</span></span>  
  
 [!code-cpp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CPP/begingetresponse.cpp#1)]
 [!code-csharp[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/CS/begingetresponse.cs#1)]
 [!code-vb[System.Net.HttpWebRequest.BeginGetResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.HttpWebRequest.BeginGetResponse/VB/begingetresponse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-467">前回の <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> への呼び出しでストリームが既に使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-467">The stream is already in use by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /></span>
          </span>
          <span data-ttu-id="ab7fd-468">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-468">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-469">
            <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> が値に設定されており、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-469">
              <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7fd-470">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-470">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-471">スレッド プールは、スレッドが不足しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-471">The thread pool is running out of threads.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.ProtocolViolationException">
          <span data-ttu-id="ab7fd-472">
            <see cref="P:System.Net.HttpWebRequest.Method" /> が GET または HEAD で、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が 0 以上であるか <see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="true" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-472">
              <see cref="P:System.Net.HttpWebRequest.Method" /> is GET or HEAD, and either <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater than zero or <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="ab7fd-473">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-473">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-474">
            <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> が <see langword="true" />、<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> が <see langword="false" />、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が -1、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> で、<see cref="P:System.Net.HttpWebRequest.Method" /> が POST か PUT です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-474">
              <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, and either <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" /> and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span>
          </span>
          <span data-ttu-id="ab7fd-475">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-475">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-476">
            <see cref="T:System.Net.HttpWebRequest" /> にはエンティティ本体がありますが、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> メソッドを呼び出さずに <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> メソッドが呼び出されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-476">The <see cref="T:System.Net.HttpWebRequest" /> has an entity body but the <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method is called without calling the <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
          <span data-ttu-id="ab7fd-477">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-477">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-478">
            <see cref="P:System.Net.HttpWebRequest.ContentLength" /> が 0 よりも大きい値に設定されていますが、アプリケーションは保証されたデータをすべては書き込みません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-478">The <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater than zero, but the application does not write all of the promised data.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="ab7fd-479">
            <see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-479">
              <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-480">この要求に関連付けられているセキュリティ証明書のコレクションを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-480">Gets or sets the collection of security certificates that are associated with this request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-481">この要求に関連付けられているセキュリティ証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-481">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains the security certificates associated with this request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-482">アプリケーションでは、証明書をコレクションに追加できますが、それへのアクセス権がないです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-482">An application can add a certificate to a collection, but might not have access rights to it.</span></span> <span data-ttu-id="ab7fd-483">コレクション内の証明書を使用するのには、証明書を発行したエンティティと同じアクセス権がアプリケーションに必要です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-483">To use a certificate contained in the collection, the application must have the same access rights as the entity that issued the certificate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-484">フレームワークでは、SSL セッションを作成するときはキャッシュ、可能であれば、新しい要求のキャッシュされているセッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-484">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="ab7fd-485">フレームワークでの最初の要素を使用するときに、SSL セッションを再利用する、 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (かどうかがある 1 つ)、匿名のセッションを再利用を試みる<xref:System.Net.HttpWebRequest.ClientCertificates%2A>が空です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-485">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-486">パフォーマンス向上のためにクライアント証明書を追加することはできません、<xref:System.Net.HttpWebRequest>わかっているため、サーバーを依頼しない限り、します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-486">For performance reasons, you shouldn't add a client certificate to a <xref:System.Net.HttpWebRequest> unless you know the server will ask for it.</span></span>  
>   
>  <span data-ttu-id="ab7fd-487">クライアント証明書ストアに証明書を列挙する方法を示すコード例は、次を参照してください。、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-487">For a code example illustrating how to enumerate the certificates in the client certificate store, see the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab7fd-488">設定操作に指定された値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-488">The value specified for a set operation is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public string Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Connection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Connection { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-489">
            <see langword="Connection" /> HTTP ヘッダーの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-489">Gets or sets the value of the <see langword="Connection" /> HTTP header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-490">
            <see langword="Connection" /> HTTP ヘッダーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-490">The value of the <see langword="Connection" /> HTTP header.</span>
          </span>
          <span data-ttu-id="ab7fd-491">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-491">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-492">要求の送信、<xref:System.Net.HttpWebRequest.Connection%2A>としてインターネット リソースへのプロパティ、 `Connection` HTTP ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-492">The request sends the <xref:System.Net.HttpWebRequest.Connection%2A> property to the Internet resource as the `Connection` HTTP header.</span></span> <span data-ttu-id="ab7fd-493">場合の値、<xref:System.Net.HttpWebRequest.KeepAlive%2A>プロパティは`true`、"Keep alive"の値の末尾に追加、`Connection`ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-493">If the value of the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`, the value "Keep-alive" is appended to the end of the `Connection` header.</span></span>  
  
 <span data-ttu-id="ab7fd-494">クリアする、 `Connection` HTTP ヘッダーを設定、<xref:System.Net.HttpWebRequest.Connection%2A>プロパティを`null`です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-494">To clear the `Connection` HTTP header, set the <xref:System.Net.HttpWebRequest.Connection%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="ab7fd-495">変更、<xref:System.Net.HttpWebRequest.Connection%2A>プロパティを呼び出して、要求が開始された後、 <xref:System.Net.HttpWebRequest.GetRequestStream%2A>、 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.HttpWebRequest.GetResponse%2A>、または<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>メソッドがスローされます、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-495">Changing the <xref:System.Net.HttpWebRequest.Connection%2A> property after the request has been started by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-496">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-496">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ab7fd-497">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-497">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-498">次のコード例では、<xref:System.Net.HttpWebRequest.Connection%2A>接続 HTTP ヘッダーの値を設定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-498">The following code example uses the <xref:System.Net.HttpWebRequest.Connection%2A> property to set the value of the Connection HTTP Header.</span></span>  
  
 [!code-cpp[HttpWebRequest_Connection#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Connection/CPP/httpwebrequest_connection.cpp#1)]
 [!code-csharp[HttpWebRequest_Connection#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Connection/CS/httpwebrequest_connection.cs#1)]
 [!code-vb[HttpWebRequest_Connection#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Connection/VB/httpwebrequest_connection.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-499">
            <see cref="P:System.Net.HttpWebRequest.Connection" /> の値が Keep-alive または Close に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-499">The value of <see cref="P:System.Net.HttpWebRequest.Connection" /> is set to Keep-alive or Close.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-500">要求に対して使用する接続グループの名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-500">Gets or sets the name of the connection group for the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-501">この要求に対して使用する接続グループの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-501">The name of the connection group for this request.</span>
          </span>
          <span data-ttu-id="ab7fd-502">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-502">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-503"><xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>プロパティは、要求を接続グループに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-503">The <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> property enables you to associate a request with a connection group.</span></span> <span data-ttu-id="ab7fd-504">これは、機能は、アプリケーションは、データベース サーバーから顧客情報を取得する Web サイトなど、さまざまなユーザーの 1 つのサーバーに要求を行うときに便利です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-504">This is useful when your application makes requests to one server for different users, such as a Web site that retrieves customer information from a database server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-505">次のコード例は、ユーザー情報を使用している場合、接続グループを形成する方法を表示する変数`username`、 `password`、および`domain`このコードを呼び出す前に、アプリケーションによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-505">The following code example show how to use user information to form a connection group, assuming that the variables `username`, `password`, and `domain` are set by the application before this code is called.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest.ConnectionGroupName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest.ConnectionGroupName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest.ConnectionGroupName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest.ConnectionGroupName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest.ConnectionGroupName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest.ConnectionGroupName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="ab7fd-506">各接続グループでは、サーバーの追加の接続を作成します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ab7fd-506">Each connection group creates additional connections for a server.</span>
            </span>
            <span data-ttu-id="ab7fd-507">これが原因で設定の接続数を超えた場合、<see cref="P:System.Net.ServicePoint.ConnectionLimit" />そのサーバーのプロパティです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="ab7fd-507">This may result in exceeding the number of connections set by the <see cref="P:System.Net.ServicePoint.ConnectionLimit" /> property for that server.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Net.Configuration.ConnectionManagementElement.MaxConnection" />
        <altmember cref="P:System.Net.WebRequest.ConnectionGroupName" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-508">
            <see langword="Content-length" /> HTTP ヘッダーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-508">Gets or sets the <see langword="Content-length" /> HTTP header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-509">インターネット リソースに送信するデータのバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-509">The number of bytes of data to send to the Internet resource.</span>
          </span>
          <span data-ttu-id="ab7fd-510">既定値は -1 です。このプロパティが設定されていないこと、および送信する要求データが存在しないことを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-510">The default is -1, which indicates the property has not been set and that there is no request data to send.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-511"><xref:System.Net.HttpWebRequest.ContentLength%2A>プロパティにはとして送信する値が含まれています、 `Content-length` HTTP ヘッダー、要求を使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-511">The <xref:System.Net.HttpWebRequest.ContentLength%2A> property contains the value to send as the `Content-length` HTTP header with the request.</span></span>  
  
 <span data-ttu-id="ab7fd-512">-1 以外の値を<xref:System.Net.HttpWebRequest.ContentLength%2A>プロパティを示し、要求がデータをアップロードすることで設定するデータをアップロードするメソッドのみが許可されていること、<xref:System.Net.HttpWebRequest.Method%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-512">Any value other than -1 in the <xref:System.Net.HttpWebRequest.ContentLength%2A> property indicates that the request uploads data and that only methods that upload data are allowed to be set in the <xref:System.Net.HttpWebRequest.Method%2A> property.</span></span>  
  
 <span data-ttu-id="ab7fd-513">後に、<xref:System.Net.HttpWebRequest.ContentLength%2A>値にプロパティを設定すると、そのバイト数に書き込まれると呼び出しによって返される要求ストリーム、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>メソッドまたはその両方、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>と<xref:System.Net.HttpWebRequest.EndGetRequestStream%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-513">After the <xref:System.Net.HttpWebRequest.ContentLength%2A> property is set to a value, that number of bytes must be written to the request stream that is returned by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method or both the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> and the <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-514">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-514">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ab7fd-515">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-515">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-516">次のコード例のセット、<xref:System.Net.HttpWebRequest.ContentLength%2A>通知されている文字列の長さのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-516">The following code example sets the <xref:System.Net.HttpWebRequest.ContentLength%2A> property to the length of the string being posted.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#4](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#4)]
 [!code-csharp[HttpWebRequest_ContentLength#4](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#4)]
 [!code-vb[HttpWebRequest_ContentLength#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-517">
            <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.HttpWebRequest.GetResponse" />、または <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> メソッドを呼び出すことにより要求が開始されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-517">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ab7fd-518">新規 <see cref="P:System.Net.HttpWebRequest.ContentLength" /> 値が 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-518">The new <see cref="P:System.Net.HttpWebRequest.ContentLength" /> value is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-519">
            <see langword="Content-type" /> HTTP ヘッダーの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-519">Gets or sets the value of the <see langword="Content-type" /> HTTP header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-520">
            <see langword="Content-type" /> HTTP ヘッダーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-520">The value of the <see langword="Content-type" /> HTTP header.</span>
          </span>
          <span data-ttu-id="ab7fd-521">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-521">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-522"><xref:System.Net.HttpWebRequest.ContentType%2A>プロパティには、要求のメディアの種類が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-522">The <xref:System.Net.HttpWebRequest.ContentType%2A> property contains the media type of the request.</span></span> <span data-ttu-id="ab7fd-523">割り当てられた値、<xref:System.Net.HttpWebRequest.ContentType%2A>プロパティは、要求が送信する場合に既存の内容を置き換える、 `Content-type` HTTP ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-523">Values assigned to the <xref:System.Net.HttpWebRequest.ContentType%2A> property replace any existing contents when the request sends the `Content-type` HTTP header.</span></span>  
  
 <span data-ttu-id="ab7fd-524">クリアする、 `Content-type` HTTP ヘッダーを設定、<xref:System.Net.HttpWebRequest.ContentType%2A>プロパティを`null`です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-524">To clear the `Content-type` HTTP header, set the <xref:System.Net.HttpWebRequest.ContentType%2A> property to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-525">このプロパティの値が格納されている<xref:System.Net.WebHeaderCollection>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-525">The value for this property is stored in <xref:System.Net.WebHeaderCollection> .</span></span> <span data-ttu-id="ab7fd-526">場合<xref:System.Net.WebHeaderCollection>が設定されている、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-526">If <xref:System.Net.WebHeaderCollection> is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-527">次のコード例のセット、<xref:System.Net.HttpWebRequest.ContentType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-527">The following code example sets the <xref:System.Net.HttpWebRequest.ContentType%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#1)]
 [!code-csharp[HttpWebRequest_ContentLength#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#1)]
 [!code-vb[HttpWebRequest_ContentLength#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpContinueDelegate ContinueDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpContinueDelegate ContinueDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContinueDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueDelegate As HttpContinueDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpContinueDelegate ^ ContinueDelegate { System::Net::HttpContinueDelegate ^ get(); void set(System::Net::HttpContinueDelegate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpContinueDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-528">インターネット リソースから HTTP 100-continue 応答を受信したときに呼び出されるデリゲート メソッドを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-528">Gets or sets the delegate method called when an HTTP 100-continue response is received from the Internet resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-529">インターネット リソースから HTTP Continue 応答が返されたときに実行されるコールバック メソッドを実装するデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-529">A delegate that implements the callback method that executes when an HTTP Continue response is returned from the Internet resource.</span>
          </span>
          <span data-ttu-id="ab7fd-530">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-530">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-531"><xref:System.Net.HttpWebRequest.ContinueDelegate%2A>プロパティは、クライアントは、100 を受信したときに呼び出すコールバック メソッドを指定の応答を続行します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-531">The <xref:System.Net.HttpWebRequest.ContinueDelegate%2A> property specifies the callback method to call when the client receives a 100-Continue response.</span></span>  
  
 <span data-ttu-id="ab7fd-532">ときに、<xref:System.Net.HttpWebRequest.ContinueDelegate%2A>プロパティが設定されて、クライアントは、デリゲートを呼び出すたびにプロトコルの種類の応答<xref:System.Net.HttpStatusCode.Continue?displayProperty=nameWithType>(100) が受信します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-532">When the <xref:System.Net.HttpWebRequest.ContinueDelegate%2A> property is set, the client calls the delegate whenever protocol responses of type <xref:System.Net.HttpStatusCode.Continue?displayProperty=nameWithType> (100) are received.</span></span> <span data-ttu-id="ab7fd-533">これは、クライアントがインターネット リソースから受信されるデータの状態を表示する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-533">This is useful if you want the client to display the status of the data being received from the Internet resource.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength" />
      </Docs>
    </Member>
    <Member MemberName="ContinueTimeout">
      <MemberSignature Language="C#" Value="public int ContinueTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContinueTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ContinueTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ContinueTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContinueTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-534">100 回の続行まで待機するミリ秒単位のタイムアウト値をサーバーから取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-534">Gets or sets a timeout, in milliseconds, to wait until the 100-Continue is received from the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-535">100 回の続行まで待機するミリ秒単位のタイムアウト値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-535">The timeout, in milliseconds, to wait until the 100-Continue is received.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-536">場合、100-タイムアウトになると、エンティティ本文を送信する前に、応答を受信したを続行します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-536">If the 100-Continue response is received before the timeout expires, the entity body can be sent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public virtual System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-537">要求に関連付けられているクッキーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-537">Gets or sets the cookies associated with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-538">この要求に関連付けられているクッキーを格納している <see cref="T:System.Net.CookieContainer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-538">A <see cref="T:System.Net.CookieContainer" /> that contains the cookies associated with this request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-539"><xref:System.Net.HttpWebRequest.CookieContainer%2A>プロパティのインスタンスを提供する、<xref:System.Net.CookieContainer>この要求に関連付けられているクッキーを格納するクラス。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-539">The <xref:System.Net.HttpWebRequest.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this request.</span></span>  
  
 <span data-ttu-id="ab7fd-540"><xref:System.Net.HttpWebRequest.CookieContainer%2A> `null`既定です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-540"><xref:System.Net.HttpWebRequest.CookieContainer%2A> is `null` by default.</span></span> <span data-ttu-id="ab7fd-541">割り当てる必要があります、<xref:System.Net.CookieContainer>オブジェクトで返されたクッキーを使用してプロパティを<xref:System.Net.HttpWebResponse.Cookies%2A>のプロパティ、<xref:System.Net.HttpWebResponse>によって返される、<xref:System.Net.HttpWebRequest.GetResponse%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-541">You must assign a <xref:System.Net.CookieContainer> object to the property to have cookies returned in the <xref:System.Net.HttpWebResponse.Cookies%2A> property of the <xref:System.Net.HttpWebResponse> returned by the <xref:System.Net.HttpWebRequest.GetResponse%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-542">セキュリティ上の理由から、cookie は、既定で無効にします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-542">For security reasons, cookies are disabled by default.</span></span> <span data-ttu-id="ab7fd-543">Cookie を使用する場合は、使用、 <xref:System.Net.HttpWebRequest.CookieContainer%2A> cookie を有効にするプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-543">If you want to use cookies, use the <xref:System.Net.HttpWebRequest.CookieContainer%2A> property to enable cookies.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-544">次のコード例では、URL に要求を送信し、応答で返されたクッキーを表示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-544">The following code example sends a request to a URL and displays the cookies returned in the response.</span></span>  
  
 [!code-cpp[NCLCookies#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCookies/CPP/cookiessnippets.cpp#1)]
 [!code-csharp[NCLCookies#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCookies/CS/cookiessnippets.cs#1)]
 [!code-vb[NCLCookies#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLCookies/VB/cookiessnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CookieContainer" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-545">要求に対して使用する認証情報を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-545">Gets or sets authentication information for the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-546">要求と関連付けられた認証資格情報を格納する <see cref="T:System.Net.ICredentials" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-546">An <see cref="T:System.Net.ICredentials" /> that contains the authentication credentials associated with the request.</span>
          </span>
          <span data-ttu-id="ab7fd-547">既定値は、<see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-547">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-548"><xref:System.Net.HttpWebRequest.Credentials%2A>プロパティには、要求のメーカーを識別する認証情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-548">The <xref:System.Net.HttpWebRequest.Credentials%2A> property contains authentication information to identify the maker of the request.</span></span> <span data-ttu-id="ab7fd-549"><xref:System.Net.HttpWebRequest.Credentials%2A>プロパティには、いずれかを指定できます、<xref:System.Net.NetworkCredential>では、どの場合、ユーザー、パスワード、およびドメインの情報に含まれている、<xref:System.Net.NetworkCredential>オブジェクトは、要求の認証に使用することもできます、 <xref:System.Net.CredentialCache>、後者 Uniform Resource要求の識別子 (URI) を使用すると、要求の認証に使用するには、ユーザー、パスワード、およびドメインの情報を確認します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-549">The <xref:System.Net.HttpWebRequest.Credentials%2A> property can be either a <xref:System.Net.NetworkCredential>, in which case the user, password, and domain information contained in the <xref:System.Net.NetworkCredential> object is used to authenticate the request, or it can be a <xref:System.Net.CredentialCache>, in which case the Uniform Resource Identifier (URI) of the request is used to determine the user, password, and domain information to use to authenticate the request.</span></span>  
  
 <span data-ttu-id="ab7fd-550">クライアントのほとんどのシナリオで使用する必要があります、<xref:System.Net.CredentialCache.DefaultCredentials%2A>プロパティで、現在ログオンしているユーザーの資格情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-550">In most client scenarios, you should use the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property, which contains the credentials of the currently logged on user.</span></span> <span data-ttu-id="ab7fd-551">これを行うには、設定、<xref:System.Net.WebClient.UseDefaultCredentials%2A>プロパティを`true`このプロパティを設定する代わりにします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-551">To do this, set the <xref:System.Net.WebClient.UseDefaultCredentials%2A> property to `true` instead of setting this property.</span></span>  
  
 <span data-ttu-id="ab7fd-552">場合、<xref:System.Net.HttpWebRequest>クラスは、ASP.NET アプリケーション内の資格情報などの中間層アプリケーションで使用されている、<xref:System.Net.CredentialCache.DefaultCredentials%2A>プロパティは、ASP ページ (サーバー側の資格情報) を実行しているアカウントに属しています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-552">If the <xref:System.Net.HttpWebRequest> class is being used in a middle-tier application, such as an ASP.NET application, the credentials in the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property belong to the account running the ASP page (the server-side credentials).</span></span> <span data-ttu-id="ab7fd-553">通常、に代わって、要求したクライアントの資格情報をこのプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-553">Typically, you would set this property to the credentials of the client on whose behalf the request is made.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-554">別のユーザーを偽装する、NTLM 認証スキームを使用できません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-554">The NTLM authentication scheme cannot be used to impersonate another user.</span></span> <span data-ttu-id="ab7fd-555">Kerberos は、権限借用をサポートするために特別に構成されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-555">Kerberos must be specially configured to support impersonation.</span></span>  
  
 <span data-ttu-id="ab7fd-556">使用して 1 つまたは複数の認証方法に HttpWebRequest を制限、<xref:System.Net.CredentialCache>クラスし、資格情報を 1 つまたは複数の認証スキームにバインドします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-556">To restrict HttpWebRequest to one or more authentication methods, use the <xref:System.Net.CredentialCache> class and bind your credentials to one or more authentication schemes</span></span>  
  
 <span data-ttu-id="ab7fd-557">サポートされる認証方式には、ダイジェスト、ネゴシエート、Kerberos、NTLM、および Basic が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-557">Supported authentication schemes include Digest, Negotiate, Kerberos, NTLM, and Basic.</span></span>  
  
 <span data-ttu-id="ab7fd-558">セキュリティ上の理由から、自動的に次のリダイレクト時でリダイレクトの対象にするための資格情報を格納、<xref:System.Net.CredentialCache>し、このプロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-558">For security reasons, when automatically following redirects, store the credentials that you want to be included in the redirect in a <xref:System.Net.CredentialCache> and assign it to this property.</span></span> <span data-ttu-id="ab7fd-559">このプロパティが自動的に設定されます`null`以外のものが含まれている場合のリダイレクト時に、<xref:System.Net.CredentialCache>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-559">This property will automatically be set to `null` upon redirection if it contains anything except a <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="ab7fd-560">自動的に設定するこのプロパティの値を持つ`null`これらの条件下で、意図しない先に送信されない資格情報を防止します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-560">Having this property value be automatically set to `null` under those conditions prevents credentials from being sent to any unintended destination.</span></span>
  
## Examples  
 <span data-ttu-id="ab7fd-561">次のコード例では、要求の資格情報を設定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-561">The following code example sets the credentials for a request.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Date" />
      <MemberSignature Language="VB.NET" Value="Public Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-562">HTTP 要求で使用する <see langword="Date" /> HTTP ヘッダー値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-562">Get or set the <see langword="Date" /> HTTP header value to use in an HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-563">HTTP 要求の Date ヘッダーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-563">The Date header value in the HTTP request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-564">Date ヘッダーの場合`null`、戻り値に設定されます、<xref:System.DateTime.MinValue?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-564">If the Date header is `null`, then the return value will be set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ab7fd-565"><xref:System.Net.HttpWebRequest.Date%2A>プロパティは、標準的な<xref:System.DateTime?displayProperty=nameWithType>オブジェクトを含めることができます、<xref:System.DateTimeKind?displayProperty=nameWithType>フィールド<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>、または<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-565">The <xref:System.Net.HttpWebRequest.Date%2A> property is a standard <xref:System.DateTime?displayProperty=nameWithType> object and can contain a <xref:System.DateTimeKind?displayProperty=nameWithType> field of <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ab7fd-566">使用する場合は、時間の任意の種類を設定することができます、<xref:System.Net.HttpWebRequest.Date%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-566">Any kind of time can be set when using the <xref:System.Net.HttpWebRequest.Date%2A> property.</span></span> <span data-ttu-id="ab7fd-567">場合<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>設定または取得されると、<xref:System.Net.HttpWebRequest.Date%2A>プロパティがあると見なされます<xref:System.DateTimeKind.Local?displayProperty=nameWithType>(ローカル時刻)。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-567">If <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> is set or retrieved, the <xref:System.Net.HttpWebRequest.Date%2A> property is assumed to be <xref:System.DateTimeKind.Local?displayProperty=nameWithType> (local time).</span></span>  
  
 <span data-ttu-id="ab7fd-568">内のクラス、<xref:System.Net>名前空間常に書き込む、 <xref:System.Net.HttpWebRequest.Date%2A> GMT (Utc) 形式を使用して標準の形式で転送中に、ネットワーク上でのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-568">The classes in the <xref:System.Net> namespace always write it out the <xref:System.Net.HttpWebRequest.Date%2A> property on the wire during transmission in standard form using GMT (Utc) format.</span></span>  
  
 <span data-ttu-id="ab7fd-569">場合、<xref:System.Net.HttpWebRequest.Date%2A>プロパティに設定されている<xref:System.DateTime.MinValue?displayProperty=nameWithType>、`Date`から HTTP ヘッダーを削除、<xref:System.Net.HttpWebRequest.Headers%2A>プロパティおよび<xref:System.Net.WebHeaderCollection>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-569">If the <xref:System.Net.HttpWebRequest.Date%2A> property is set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>, then the `Date` HTTP header is removed from the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
 <span data-ttu-id="ab7fd-570">場合、<xref:System.Net.HttpWebRequest.Date%2A>プロパティは<xref:System.DateTime.MinValue?displayProperty=nameWithType>、ことを示します、`Date`に HTTP ヘッダーが含まれていない、<xref:System.Net.HttpWebRequest.Headers%2A>プロパティおよび<xref:System.Net.WebHeaderCollection>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-570">If the <xref:System.Net.HttpWebRequest.Date%2A> property is <xref:System.DateTime.MinValue?displayProperty=nameWithType>, this indicates that the `Date` HTTP header is not included in the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-571">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-571">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ab7fd-572">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-572">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
 <span data-ttu-id="ab7fd-573">場合、<xref:System.Net.HttpWebRequest.Date%2A>設定されている送信が試行され、<xref:System.Net.HttpWebRequest>本文なしで、<xref:System.Net.ProtocolViolationException?displayProperty=nameWithType>によってスローされます、 <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>、 <xref:System.Net.HttpWebRequest.GetResponse%2A>、および<xref:System.Net.HttpWebRequest.EndGetResponse%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-573">If the <xref:System.Net.HttpWebRequest.Date%2A> is set and an attempt is made to send a <xref:System.Net.HttpWebRequest> with no body, then a <xref:System.Net.ProtocolViolationException?displayProperty=nameWithType> will be thrown by the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, and <xref:System.Net.HttpWebRequest.EndGetResponse%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-574">この要求の既定のキャッシュ ポリシーを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-574">Gets or sets the default cache policy for this request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-575">他のポリシーが適用できない場合に、この要求で有効なキャッシュ ポリシーを指定する <see cref="T:System.Net.Cache.HttpRequestCachePolicy" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-575">A <see cref="T:System.Net.Cache.HttpRequestCachePolicy" /> that specifies the cache policy in effect for this request when no other policy is applicable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-576">このプロパティを設定すると、HTTP および HTTPS スキームの場合、指定したポリシーが登録されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-576">Setting this property registers the specified policy for the HTTP and HTTPS schemes.</span></span> <span data-ttu-id="ab7fd-577">場合、このポリシーはこの要求に対して使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-577">This policy is used for this request if:</span></span>  
  
 <span data-ttu-id="ab7fd-578">ない<xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType>プロパティがこの要求に対して指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-578">There is no <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=nameWithType> property specified for this request.</span></span>  
  
 <span data-ttu-id="ab7fd-579">\- または</span><span class="sxs-lookup"><span data-stu-id="ab7fd-579">\- or -</span></span>  
  
 <span data-ttu-id="ab7fd-580">コンピューターとアプリケーション構成ファイルを指定しない、統一リソース識別子 (URI) に適用可能なキャッシュ ポリシーは、この要求の作成に使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-580">The machine and application configuration files do not specify a cache policy that is applicable to the Uniform Resource Identifier (URI) used to create this request.</span></span>  
  
 <span data-ttu-id="ab7fd-581">キャッシュ ポリシーは、要求されたリソースがリソースのホスト コンピューターに要求を送信する代わりにキャッシュから実行できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-581">The cache policy determines whether the requested resource can be taken from a cache instead of sending the request to the resource host computer.</span></span>  
  
 <span data-ttu-id="ab7fd-582">リソースの応答ストリームが取得され、ストリームの末尾に読み込まれる場合、リソースのコピーはキャッシュに追加だけです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-582">A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.</span></span> <span data-ttu-id="ab7fd-583">同じリソースに対して別の要求は、この要求のキャッシュ ポリシー レベルに応じて、キャッシュされたコピーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-583">So another request for the same resource could use a cached copy, depending on the cache policy level for this request.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="ab7fd-584">ネットワーク リソースに無制限のアクセス許可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-584">for unrestricted access to network resources.</span>
          </span>
          <span data-ttu-id="ab7fd-585">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-585">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Net.Cache.RequestCachePolicy" />
        <altmember cref="T:System.Net.Cache.HttpRequestCacheLevel" />
        <altmember cref="T:System.Net.Cache.RequestCacheLevel" />
        <altmember cref="P:System.Net.WebRequest.CachePolicy" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumErrorResponseLength">
      <MemberSignature Language="C#" Value="public static int DefaultMaximumErrorResponseLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DefaultMaximumErrorResponseLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.DefaultMaximumErrorResponseLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultMaximumErrorResponseLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DefaultMaximumErrorResponseLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-586">HTTP エラー応答の既定の最大長を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-586">Gets or sets the default maximum length of an HTTP error response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-587">HTTP エラー応答の既定の最大長。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-587">The default maximum length of an HTTP error response.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ab7fd-588">値は 0 より小さく、-1 とは異なっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-588">The value is less than 0 and is not equal to -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumResponseHeadersLength">
      <MemberSignature Language="C#" Value="public static int DefaultMaximumResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 DefaultMaximumResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultMaximumResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int DefaultMaximumResponseHeadersLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Use this")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-589">
            <see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /> プロパティの既定値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-589">Gets or sets the default for the <see cref="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-590">受信した応答ヘッダーの KB (1024 バイト) 単位の既定の最大長。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-590">The length, in kilobytes (1024 bytes), of the default maximum for response headers received.</span>
          </span>
          <span data-ttu-id="ab7fd-591">既定の構成ファイルは、この値を 64 KB に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-591">The default configuration file sets this value to 64 kilobytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-592">応答ヘッダーの長さは、応答のステータス行と HTTP プロトコルの一部として受信されるすべての余分な制御文字を受信します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-592">The length of the response header received the response status line and any extra control characters that are received as part of HTTP protocol.</span></span> <span data-ttu-id="ab7fd-593">値-1 は、受信した応答ヘッダーに制限は適用されません。値 0 は、すべての要求が失敗することを意味します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-593">A value of -1 means no limit is imposed on the response headers received; a value of 0 means that all requests fail.</span></span>  
  
 <span data-ttu-id="ab7fd-594">この値は、構成ファイルにも変更できます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-594">This value can also be changed in the configuration file.</span></span> <span data-ttu-id="ab7fd-595">設定してこのプロパティの影響をオーバーライドすることができます、<xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A>プロパティのインスタンスを<xref:System.Net.HttpWebRequest>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-595">The impact of this property can be overridden by setting the <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> property on an instance of the <xref:System.Net.HttpWebRequest> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ab7fd-596">値は -1 と等しくなく、0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-596">The value is not equal to -1 and is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndGetRequestStream">
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-597">データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトの非同期要求を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-597">Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="ab7fd-598">ストリームの保留中の要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-598">The pending request for a stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-599">データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトの非同期要求を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-599">Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab7fd-600">要求データを書き込むために使用する <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-600">A <see cref="T:System.IO.Stream" /> to use to write request data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-601"><xref:System.Net.HttpWebRequest.EndGetRequestStream%2A>メソッドによって開始されたストリームへの非同期要求を完了すると、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-601">The <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method completes an asynchronous request for a stream that was started by the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method.</span></span> <span data-ttu-id="ab7fd-602">後に、<xref:System.IO.Stream>オブジェクトが返されたを使用してデータを送信することができます、<xref:System.Net.HttpWebRequest>を使用して、<xref:System.IO.Stream.Write%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-602">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-603">値を設定する必要があります、<xref:System.Net.HttpWebRequest.ContentLength%2A>プロパティ データをストリームに書き込む前にします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-603">You must set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property before writing data to the stream.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ab7fd-604">呼び出す必要があります、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>ストリームを閉じ、再利用するための接続を解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-604">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="ab7fd-605">ストリームを閉じると、アプリケーションを接続から実行します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-605">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-606">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-606">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ab7fd-607">詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-607">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-608">次のコード例では、<xref:System.Net.HttpWebRequest.EndGetRequestStream%2A>ストリームのインスタンスへの非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-608">The following code example uses the <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method to end an asynchronous request for a stream instance.</span></span>  
  
 [!code-cpp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CPP/httpwebrequest_begingetrequeststream.cpp#2)]
 [!code-csharp[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/CS/httpwebrequest_begingetrequeststream.cs#2)]
 [!code-vb[HttpWebRequest_BeginGetRequestStream#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_BeginGetRequestStream/VB/httpwebrequest_begingetrequeststream.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab7fd-609">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-609">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ab7fd-610">要求が完了しませんでした。使用できるストリームはありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-610">The request did not complete, and no stream is available.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-611">
            <paramref name="asyncResult" /> は、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> の呼び出しから現在のインスタンスにより返されたものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-611">
              <paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-612">このメソッドは以前に <paramref name="asyncResult" /> を使用して呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-612">This method was called previously using <paramref name="asyncResult" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="ab7fd-613">
            <see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-613">
              <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span>
          </span>
          <span data-ttu-id="ab7fd-614">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-614">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-615">この要求の処理中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-615">An error occurred while processing the request.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult, out System.Net.TransportContext context);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult, [out] class System.Net.TransportContext&amp; context) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetRequestStream (asyncResult As IAsyncResult, ByRef context As TransportContext) As Stream" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] System::Net::TransportContext ^ % context);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult, out System.Net.TransportContext transportContext);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult, [out] class System.Net.TransportContext&amp; transportContext) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)" FrameworkAlternate="netframework-4.7;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetRequestStream (asyncResult As IAsyncResult, ByRef transportContext As TransportContext) As Stream" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] System::Net::TransportContext ^ % transportContext);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" />
        <Parameter Name="context" Type="System.Net.TransportContext&amp;" RefType="out" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2" />
        <Parameter Name="transportContext" Type="System.Net.TransportContext&amp;" RefType="out" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="ab7fd-616">ストリームの保留中の要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-616">The pending request for a stream.</span>
          </span>
        </param>
        <param name="context">To be added.</param>
        <param name="transportContext">To be added.</param>
        <summary>
          <span data-ttu-id="ab7fd-617">データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトに対する非同期要求を終了し、そのストリームに関連付けられている <see cref="T:System.Net.TransportContext" /> を出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-617">Ends an asynchronous request for a <see cref="T:System.IO.Stream" /> object to use to write data and outputs the <see cref="T:System.Net.TransportContext" /> associated with the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab7fd-618">要求データを書き込むために使用する <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-618">A <see cref="T:System.IO.Stream" /> to use to write request data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-619"><xref:System.Net.HttpWebRequest.EndGetRequestStream%2A>メソッドによって開始されたストリームへの非同期要求を完了すると、<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>メソッド呼び出し力、<xref:System.Net.TransportContext>ストリームに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-619">The <xref:System.Net.HttpWebRequest.EndGetRequestStream%2A> method completes an asynchronous request for a stream that was started by the <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method and outputs the <xref:System.Net.TransportContext> associated with the stream.</span></span> <span data-ttu-id="ab7fd-620">後に、<xref:System.IO.Stream>オブジェクトが返されたを使用してデータを送信することができます、<xref:System.Net.HttpWebRequest>を使用して、<xref:System.IO.Stream.Write%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-620">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ab7fd-621">拡張保護付き統合 Windows 認証を使用する一部のアプリケーションは、トランスポート層で使用されるクエリを実行できる必要があります<xref:System.Net.HttpWebRequest>チャネル バインディング トークン (CBT) を基になる TLS チャネルから取得するためです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-621">Some applications that use integrated Windows authentication with extended protection may need to be able to query the transport layer used by <xref:System.Net.HttpWebRequest> in order to retrieve the channel binding token (CBT) from the underlying TLS channel.</span></span> <span data-ttu-id="ab7fd-622"><xref:System.Net.HttpWebRequest.GetRequestStream%2A>メソッドは、要求本文である必要が HTTP メソッドのこの情報へのアクセスを提供 (`POST`と`PUT`要求)。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-622">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method provides access to this information for HTTP methods which have a request body (`POST` and `PUT` requests).</span></span> <span data-ttu-id="ab7fd-623">これは、アプリケーションが独自の認証を実装して、CBT へのアクセスを必要な場合のみ必要です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-623">This is only needed if the application is implementing its own authentication and needs access to the CBT.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-624">アプリケーションがの値を設定する必要がある場合、<xref:System.Net.HttpWebRequest.ContentLength%2A>ストリームを取得して、データを書き込む前に、プロパティ、し、これを行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-624">If an application needs to set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property, then this must be done before retrieving the stream and writing data to it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ab7fd-625">呼び出す必要があります、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>ストリームを閉じ、再利用するための接続を解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-625">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="ab7fd-626">ストリームを閉じると、アプリケーションを接続から実行します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-626">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-627">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-627">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ab7fd-628">詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-628">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-629">
            <paramref name="asyncResult" /> は、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> の呼び出しから現在のインスタンスにより返されたものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-629">
              <paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab7fd-630">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-630">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-631">このメソッドは以前に <paramref name="asyncResult" /> を使用して呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-631">This method was called previously using <paramref name="asyncResult" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="ab7fd-632">要求が完了しませんでした。使用できるストリームはありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-632">The request did not complete, and no stream is available.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="ab7fd-633">
            <see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-633">
              <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span>
          </span>
          <span data-ttu-id="ab7fd-634">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-634">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-635">この要求の処理中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-635">An error occurred while processing the request.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.TransportContext" />
        <altmember cref="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="ab7fd-636">応答の保留中の要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-636">The pending request for a response.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-637">インターネット リソースへの非同期要求を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-637">Ends an asynchronous request to an Internet resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab7fd-638">インターネット リソースからの応答を格納している <see cref="T:System.Net.WebResponse" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-638">A <see cref="T:System.Net.WebResponse" /> that contains the response from the Internet resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-639"><xref:System.Net.HttpWebRequest.EndGetResponse%2A>メソッドの呼び出しによって開始されたインターネット リソースへの非同期要求を完了すると、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-639">The <xref:System.Net.HttpWebRequest.EndGetResponse%2A> method completes an asynchronous request for an Internet resource that was started by calling the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ab7fd-640">呼び出す必要があります、<xref:System.Net.HttpWebResponse.Close%2A>ストリームを閉じ、接続を解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-640">You must call the <xref:System.Net.HttpWebResponse.Close%2A> method to close the stream and release the connection.</span></span> <span data-ttu-id="ab7fd-641">そのためにはエラーの接続が不足するアプリケーションがあります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-641">Failure to do so may cause your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-642">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-642">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ab7fd-643">詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-643">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-644">次のコード例では、<xref:System.Net.HttpWebRequest.EndGetResponse%2A>メソッドをインターネット リソースへの非同期要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-644">The following code example uses the <xref:System.Net.HttpWebRequest.EndGetResponse%2A> method to end an asynchronous request for an Internet resource.</span></span>  
  
 [!code-cpp[HttpWebRequest_BeginGetResponse#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_BeginGetResponse/CPP/httpwebrequest_begingetresponse.cpp#2)]
 [!code-csharp[HttpWebRequest_BeginGetResponse#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_BeginGetResponse/CS/httpwebrequest_begingetresponse.cs#2)]
 [!code-vb[HttpWebRequest_BeginGetResponse#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_BeginGetResponse/VB/httpwebrequest_begingetresponse.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab7fd-645">
            <paramref name="asyncResult" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-645">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-646">このメソッドは以前に <paramref name="asyncResult." /> を使用して呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-646">This method was called previously using <paramref name="asyncResult." /></span>
          </span>
          <span data-ttu-id="ab7fd-647">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-647">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-648">
            <see cref="P:System.Net.HttpWebRequest.ContentLength" /> プロパティが 0 を超えていますが、データが要求ストリームに書き込まれていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-648">The <see cref="P:System.Net.HttpWebRequest.ContentLength" /> property is greater than 0 but the data has not been written to the request stream.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="ab7fd-649">
            <see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-649">
              <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span>
          </span>
          <span data-ttu-id="ab7fd-650">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-650">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-651">この要求の処理中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-651">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-652">
            <paramref name="asyncResult" /> は、<see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> の呼び出しから現在のインスタンスにより返されたものではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-652">
              <paramref name="asyncResult" /> was not returned by the current instance from a call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Expect">
      <MemberSignature Language="C#" Value="public string Expect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expect" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Expect" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expect { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-653">
            <see langword="Expect" /> HTTP ヘッダーの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-653">Gets or sets the value of the <see langword="Expect" /> HTTP header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-654">
            <see langword="Expect" /> HTTP ヘッダーの内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-654">The contents of the <see langword="Expect" /> HTTP header.</span>
          </span>
          <span data-ttu-id="ab7fd-655">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-655">The default value is <see langword="null" />.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="ab7fd-656">このプロパティの値は <see cref="T:System.Net.WebHeaderCollection" /> に格納されます。</span>
              <span class="sxs-lookup">
                <span data-stu-id="ab7fd-656">The value for this property is stored in <see cref="T:System.Net.WebHeaderCollection" />.</span>
              </span>
              <span data-ttu-id="ab7fd-657">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span>
              <span class="sxs-lookup">
                <span data-stu-id="ab7fd-657">If WebHeaderCollection is set, the property value is lost.</span>
              </span>
            </para>
          </block>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-658">
            <see langword="Expect" /> は、部分文字列として "100-continue" を含む文字列に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-658">
              <see langword="Expect" /> is set to a string that contains "100-continue" as a substring.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Configuration.HttpWebRequestElement.MaximumUnauthorizedUploadLength" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <span data-ttu-id="ab7fd-659">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-659">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span>
          </span>
        </param>
        <param name="streamingContext">
          <span data-ttu-id="ab7fd-660">このシリアル化の転送先を指定する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-660">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-661">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、ターゲット オブジェクトをシリアル化するために必要なデータを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-661">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data required to serialize the target object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-662">含まれる任意のオブジェクト、<xref:System.Runtime.Serialization.SerializationInfo>自動的に追跡され、フォーマッタによってシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-662">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRequestStream">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-663">要求データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-663">Gets a <see cref="T:System.IO.Stream" /> object to use to write request data.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-664">要求データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-664">Gets a <see cref="T:System.IO.Stream" /> object to use to write request data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab7fd-665">要求データを書き込むために使用する <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-665">A <see cref="T:System.IO.Stream" /> to use to write request data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-666"><xref:System.Net.HttpWebRequest.GetRequestStream%2A>メソッドを使用してデータを送信するストリームを返します、<xref:System.Net.HttpWebRequest>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-666">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method returns a stream to use to send data for the <xref:System.Net.HttpWebRequest>.</span></span> <span data-ttu-id="ab7fd-667">後に、<xref:System.IO.Stream>オブジェクトが返されたを使用してデータを送信することができます、<xref:System.Net.HttpWebRequest>を使用して、<xref:System.IO.Stream.Write%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-667">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ab7fd-668">アプリケーションがの値を設定する必要がある場合、<xref:System.Net.HttpWebRequest.ContentLength%2A>ストリームを取得する前に、プロパティ、し、これを行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-668">If an application needs to set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property, then this must be done before retrieving the stream.</span></span>  
  
 <span data-ttu-id="ab7fd-669">呼び出す必要があります、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>ストリームを閉じ、再利用するための接続を解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-669">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="ab7fd-670">ストリームを閉じると、アプリケーションを接続から実行します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-670">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-671">アプリケーションでは、特定の要求を同期および非同期のメソッドを組み合わせることはできません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-671">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="ab7fd-672">呼び出す場合は、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>方法を使用する必要があります、<xref:System.Net.HttpWebRequest.GetResponse%2A>応答を取得します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-672">If you call the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.GetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-673">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-673">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ab7fd-674">詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-674">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-675">次のコード例では、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>ストリーム インスタンスを返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-675">The following code example uses the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method to return a stream instance.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#4](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#4)]
 [!code-csharp[HttpWebRequest_ContentLength#4](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#4)]
 [!code-vb[HttpWebRequest_ContentLength#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.ProtocolViolationException">
          <span data-ttu-id="ab7fd-676">
            <see cref="P:System.Net.HttpWebRequest.Method" /> プロパティは GET または HEAD です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-676">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.</span>
          </span>
          <span data-ttu-id="ab7fd-677">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-677">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-678">
            <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> が <see langword="true" />、<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> が <see langword="false" />、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が -1、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> で、<see cref="P:System.Net.HttpWebRequest.Method" /> が POST か PUT です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-678">
              <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-679">
            <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> メソッドが複数回呼び出されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-679">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method is called more than once.</span>
          </span>
          <span data-ttu-id="ab7fd-680">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-680">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-681">
            <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> が値に設定されており、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-681">
              <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ab7fd-682">要求キャッシュの検証コントロールは、この要求に対する応答がキャッシュから提供されたことを示していますが、データを書き込む要求ではキャッシュを使用してはなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-682">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</span>
          </span>
          <span data-ttu-id="ab7fd-683">正しく実装されていないカスタム キャッシュの検証コントロールを使用すると、この例外が発生する場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-683">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="ab7fd-684">
            <see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-684">
              <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span>
          </span>
          <span data-ttu-id="ab7fd-685">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-685">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-686">要求のタイムアウト期間の期限が切れました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-686">The time-out period for the request expired.</span>
          </span>
          <span data-ttu-id="ab7fd-687">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-687">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-688">この要求の処理中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-688">An error occurred while processing the request.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="ab7fd-689">.NET Compact Framework アプリケーションでコンテンツの長さが 0 の要求ストリームが取得されず、正しく閉じられませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-689">In a .NET Compact Framework application, a request stream with zero content length was not obtained and closed correctly.</span>
          </span>
          <span data-ttu-id="ab7fd-690">コンテンツの長さが 0 の要求の処理の詳細については、「[.NET Compact Framework のネットワーク プログラミング](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx)」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-690">For more information about handling zero content length requests, see [Network Programming in the .NET Compact Framework](https://msdn.microsoft.com/subscriptions/downloads/1afx2b0f\(v=vs.80\).aspx).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetRequestStream (out System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetRequestStream([out] class System.Net.TransportContext&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequestStream (ByRef context As TransportContext) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetRequestStream([Runtime::InteropServices::Out] System::Net::TransportContext ^ % context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Net.TransportContext&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ab7fd-691">
            <see cref="T:System.Net.TransportContext" /> の <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-691">The <see cref="T:System.Net.TransportContext" /> for the <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-692">要求データを書き込むために使用する <see cref="T:System.IO.Stream" /> オブジェクトを取得し、そのストリームに関連付けられている <see cref="T:System.Net.TransportContext" /> を出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-692">Gets a <see cref="T:System.IO.Stream" /> object to use to write request data and outputs the <see cref="T:System.Net.TransportContext" /> associated with the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab7fd-693">要求データを書き込むために使用する <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-693">A <see cref="T:System.IO.Stream" /> to use to write request data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-694"><xref:System.Net.HttpWebRequest.GetRequestStream%2A>メソッドを使用してデータを送信するストリームを返します、<xref:System.Net.HttpWebRequest>し、出力、<xref:System.Net.TransportContext>ストリームに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-694">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method returns a stream to use to send data for the <xref:System.Net.HttpWebRequest> and outputs the <xref:System.Net.TransportContext> associated with the stream.</span></span> <span data-ttu-id="ab7fd-695">後に、<xref:System.IO.Stream>オブジェクトが返されたを使用してデータを送信することができます、<xref:System.Net.HttpWebRequest>を使用して、<xref:System.IO.Stream.Write%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-695">After the <xref:System.IO.Stream> object has been returned, you can send data with the <xref:System.Net.HttpWebRequest> by using the <xref:System.IO.Stream.Write%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ab7fd-696">拡張保護付き統合 Windows 認証を使用する一部のアプリケーションは、トランスポート層で使用されるクエリを実行できる必要があります<xref:System.Net.HttpWebRequest>チャネル バインディング トークン (CBT) を基になる TLS チャネルから取得するためです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-696">Some applications that use integrated Windows authentication with extended protection may need to be able to query the transport layer used by <xref:System.Net.HttpWebRequest> in order to retrieve the channel binding token (CBT) from the underlying TLS channel.</span></span> <span data-ttu-id="ab7fd-697"><xref:System.Net.HttpWebRequest.GetRequestStream%2A>メソッドは、要求本文である必要が HTTP メソッドのこの情報へのアクセスを提供 (`POST`と`PUT`要求)。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-697">The <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method provides access to this information for HTTP methods which have a request body (`POST` and `PUT` requests).</span></span> <span data-ttu-id="ab7fd-698">これは、アプリケーションが独自の認証を実装して、CBT へのアクセスを必要な場合のみ必要です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-698">This is only needed if the application is implementing its own authentication and needs access to the CBT.</span></span>  
  
 <span data-ttu-id="ab7fd-699">アプリケーションがの値を設定する必要がある場合、<xref:System.Net.HttpWebRequest.ContentLength%2A>ストリームを取得する前に、プロパティ、し、これを行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-699">If an application needs to set the value of the <xref:System.Net.HttpWebRequest.ContentLength%2A> property, then this must be done before retrieving the stream.</span></span>  
  
 <span data-ttu-id="ab7fd-700">呼び出す必要があります、<xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>ストリームを閉じ、再利用するための接続を解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-700">You must call the <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType> method to close the stream and release the connection for reuse.</span></span> <span data-ttu-id="ab7fd-701">ストリームを閉じると、アプリケーションを接続から実行します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-701">Failure to close the stream causes your application to run out of connections.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-702">アプリケーションでは、特定の要求を同期および非同期のメソッドを組み合わせることはできません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-702">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="ab7fd-703">呼び出す場合は、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>方法を使用する必要があります、<xref:System.Net.HttpWebRequest.GetResponse%2A>応答を取得します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-703">If you call the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.GetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-704">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-704">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ab7fd-705">詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-705">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="ab7fd-706">
            <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> メソッドが <see cref="T:System.IO.Stream" /> を取得できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-706">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method was unable to obtain the <see cref="T:System.IO.Stream" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-707">
            <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> メソッドが複数回呼び出されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-707">The <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method is called more than once.</span>
          </span>
          <span data-ttu-id="ab7fd-708">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-708">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-709">
            <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> が値に設定されており、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-709">
              <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ab7fd-710">要求キャッシュの検証コントロールは、この要求に対する応答がキャッシュから提供されたことを示していますが、データを書き込む要求ではキャッシュを使用してはなりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-710">The request cache validator indicated that the response for this request can be served from the cache; however, requests that write data must not use the cache.</span>
          </span>
          <span data-ttu-id="ab7fd-711">正しく実装されていないカスタム キャッシュの検証コントロールを使用すると、この例外が発生する場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-711">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.ProtocolViolationException">
          <span data-ttu-id="ab7fd-712">
            <see cref="P:System.Net.HttpWebRequest.Method" /> プロパティは GET または HEAD です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-712">The <see cref="P:System.Net.HttpWebRequest.Method" /> property is GET or HEAD.</span>
          </span>
          <span data-ttu-id="ab7fd-713">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-713">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-714">
            <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> が <see langword="true" />、<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> が <see langword="false" />、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が -1、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> で、<see cref="P:System.Net.HttpWebRequest.Method" /> が POST か PUT です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-714">
              <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="ab7fd-715">
            <see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-715">
              <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span>
          </span>
          <span data-ttu-id="ab7fd-716">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-716">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-717">要求のタイムアウト期間の期限が切れました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-717">The time-out period for the request expired.</span>
          </span>
          <span data-ttu-id="ab7fd-718">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-718">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-719">この要求の処理中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-719">An error occurred while processing the request.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.TransportContext" />
        <altmember cref="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-720">インターネット リソースからの応答を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-720">Returns a response from an Internet resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab7fd-721">インターネット リソースからの応答を格納している <see cref="T:System.Net.WebResponse" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-721">A <see cref="T:System.Net.WebResponse" /> that contains the response from the Internet resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-722"><xref:System.Net.HttpWebRequest.GetResponse%2A>メソッドを返します、<xref:System.Net.WebResponse>インターネット リソースからの応答を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-722">The <xref:System.Net.HttpWebRequest.GetResponse%2A> method returns a <xref:System.Net.WebResponse> object that contains the response from the Internet resource.</span></span> <span data-ttu-id="ab7fd-723">実際のインスタンスが返される、 <xref:System.Net.HttpWebResponse>、アクセス HTTP 固有のプロパティには、そのクラスを型にキャストするとします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-723">The actual instance returned is an <xref:System.Net.HttpWebResponse>, and can be typecast to that class to access HTTP-specific properties.</span></span>  
  
 <span data-ttu-id="ab7fd-724">A<xref:System.Net.ProtocolViolationException>プロパティに設定すると、いくつかのケースでスローされたが、<xref:System.Net.HttpWebRequest>クラスが競合しています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-724">A <xref:System.Net.ProtocolViolationException> is thrown in several cases when the properties set on the <xref:System.Net.HttpWebRequest> class are conflicting.</span></span> <span data-ttu-id="ab7fd-725">アプリケーションを設定する場合、この例外が発生した、<xref:System.Net.HttpWebRequest.ContentLength%2A>プロパティおよび<xref:System.Net.HttpWebRequest.SendChunked%2A>プロパティを`true`、し、HTTP GET 要求を送信します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-725">This exception occurs if an application sets the <xref:System.Net.HttpWebRequest.ContentLength%2A> property and the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true`, and then sends an HTTP GET request.</span></span> <span data-ttu-id="ab7fd-726">この例外は、アプリケーションは、ここではサポートされていない HTTP 1.0 プロトコルのみをサポートするサーバーにチャンクを送信しようとした場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-726">This exception occurs if an application tries to send chunked to a server that only supports HTTP 1.0 protocol, where this is not supported.</span></span> <span data-ttu-id="ab7fd-727">アプリケーション設定を指定せずにデータを送信しようとする場合、この例外が発生した、<xref:System.Net.HttpWebRequest.ContentLength%2A>プロパティまたは<xref:System.Net.HttpWebRequest.SendChunked%2A>は`false`バッファリングを無効にする場合とキープア ライブ接続で (、<xref:System.Net.HttpWebRequest.KeepAlive%2A>プロパティは`true`)`.`</span><span class="sxs-lookup"><span data-stu-id="ab7fd-727">This exception occurs if an application tries to send data without setting the <xref:System.Net.HttpWebRequest.ContentLength%2A> property or the <xref:System.Net.HttpWebRequest.SendChunked%2A> is `false` when buffering is disabled and on a keepalive connection (the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`)`.`</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ab7fd-728">呼び出す必要があります、<xref:System.Net.HttpWebResponse.Close%2A>ストリームを閉じ、接続を解放するメソッド。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-728">You must call the <xref:System.Net.HttpWebResponse.Close%2A> method to close the stream and release the connection.</span></span> <span data-ttu-id="ab7fd-729">そのためにはエラーの接続が不足するアプリケーションがあります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-729">Failure to do so may cause your application to run out of connections.</span></span>  
  
 <span data-ttu-id="ab7fd-730">POST メソッドを使用する場合は、要求ストリームを取得して、ポストするデータを書き込むし、ストリームを閉じます必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-730">When using the POST method, you must get the request stream, write the data to be posted, and close the stream.</span></span> <span data-ttu-id="ab7fd-731">このメソッドは、コンテンツがポスト; の待機をブロックします。タイムアウトが設定されていないコンテンツ、呼び出しスレッドは無期限にブロックを指定しない場合は。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-731">This method blocks waiting for content to post; if there is no time-out set and you do not provide content, the calling thread blocks indefinitely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-732">複数回呼び出す<xref:System.Net.HttpWebRequest.GetResponse%2A>同じ応答オブジェクトを返す要求を再発行していません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-732">Multiple calls to <xref:System.Net.HttpWebRequest.GetResponse%2A> return the same response object; the request is not reissued.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-733">アプリケーションでは、特定の要求を同期および非同期のメソッドを組み合わせることはできません。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-733">Your application cannot mix synchronous and asynchronous methods for a particular request.</span></span> <span data-ttu-id="ab7fd-734">呼び出す場合は、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>方法を使用する必要があります、<xref:System.Net.HttpWebRequest.GetResponse%2A>応答を取得します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-734">If you call the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method, you must use the <xref:System.Net.HttpWebRequest.GetResponse%2A> method to retrieve the response.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-735">場合、<xref:System.Net.WebException>がスローされた場合を使用して、<xref:System.Net.WebException.Response%2A>と<xref:System.Net.WebException.Status%2A>サーバーからの応答を決定する例外のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-735">If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-736">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-736">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="ab7fd-737">詳細については、次を参照してください。 [.NET Framework のネットワークのトレース](~/docs/framework/network-programming/network-tracing.md)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-737">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-738">セキュリティ上の理由から、cookie は、既定で無効にします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-738">For security reasons, cookies are disabled by default.</span></span> <span data-ttu-id="ab7fd-739">Cookie を使用する場合は、使用、 <xref:System.Net.HttpWebRequest.CookieContainer%2A> cookie を有効にするプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-739">If you wish to use cookies, use the <xref:System.Net.HttpWebRequest.CookieContainer%2A> property to enable cookies.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-740">次のコード例では、要求に対する応答を取得します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-740">The following code example gets the response for a request.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-741">前回の <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> への呼び出しでストリームが既に使用中です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-741">The stream is already in use by a previous call to <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span>
          </span>
          <span data-ttu-id="ab7fd-742">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-742">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-743">
            <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> が値に設定されており、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-743">
              <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to a value and <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.ProtocolViolationException">
          <span data-ttu-id="ab7fd-744">
            <see cref="P:System.Net.HttpWebRequest.Method" /> が GET または HEAD で、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が 0 以上であるか <see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="true" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-744">
              <see cref="P:System.Net.HttpWebRequest.Method" /> is GET or HEAD, and either <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater or equal to zero or <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="true" />.</span>
          </span>
          <span data-ttu-id="ab7fd-745">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-745">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-746">
            <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> が <see langword="true" />、<see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> が <see langword="false" />、<see cref="P:System.Net.HttpWebRequest.ContentLength" /> が -1、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> で、<see cref="P:System.Net.HttpWebRequest.Method" /> が POST か PUT です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-746">
              <see cref="P:System.Net.HttpWebRequest.KeepAlive" /> is <see langword="true" />, <see cref="P:System.Net.HttpWebRequest.AllowWriteStreamBuffering" /> is <see langword="false" />, <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is -1, <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />, and <see cref="P:System.Net.HttpWebRequest.Method" /> is POST or PUT.</span>
          </span>
          <span data-ttu-id="ab7fd-747">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-747">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-748">
            <see cref="T:System.Net.HttpWebRequest" /> にはエンティティ本体がありますが、<see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> メソッドを呼び出さずに <see cref="M:System.Net.HttpWebRequest.GetResponse" /> メソッドが呼び出されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-748">The <see cref="T:System.Net.HttpWebRequest" /> has an entity body but the <see cref="M:System.Net.HttpWebRequest.GetResponse" /> method is called without calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> method.</span>
          </span>
          <span data-ttu-id="ab7fd-749">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-749">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-750">
            <see cref="P:System.Net.HttpWebRequest.ContentLength" /> が 0 よりも大きい値に設定されていますが、アプリケーションは保証されたデータをすべては書き込みません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-750">The <see cref="P:System.Net.HttpWebRequest.ContentLength" /> is greater than zero, but the application does not write all of the promised data.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="ab7fd-751">要求キャッシュの検証コントロールは、この要求に対する応答がキャッシュから提供されたことを示していますが、この要求にはサーバーに送信されるデータが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-751">The request cache validator indicated that the response for this request can be served from the cache; however, this request includes data to be sent to the server.</span>
          </span>
          <span data-ttu-id="ab7fd-752">データを送信する要求には、キャッシュを使用できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-752">Requests that send data must not use the cache.</span>
          </span>
          <span data-ttu-id="ab7fd-753">正しく実装されていないカスタム キャッシュの検証コントロールを使用すると、この例外が発生する場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-753">This exception can occur if you are using a custom cache validator that is incorrectly implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="ab7fd-754">
            <see cref="M:System.Net.HttpWebRequest.Abort" /> は以前に呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-754">
              <see cref="M:System.Net.HttpWebRequest.Abort" /> was previously called.</span>
          </span>
          <span data-ttu-id="ab7fd-755">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-755">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-756">要求のタイムアウト期間の期限が切れました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-756">The time-out period for the request expired.</span>
          </span>
          <span data-ttu-id="ab7fd-757">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-757">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-758">この要求の処理中にエラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-758">An error occurred while processing the request.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="HaveResponse">
      <MemberSignature Language="C#" Value="public virtual bool HaveResponse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HaveResponse" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.HaveResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HaveResponse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HaveResponse { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-759">インターネット リソースから応答が受信されたかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-759">Gets a value that indicates whether a response has been received from an Internet resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-760">応答を受信した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-760">
              <see langword="true" /> if a response has been received; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab7fd-761">次のコード例のチェック、<xref:System.Net.HttpWebRequest.HaveResponse%2A>インターネット リソースから応答が受信されたかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-761">The following code example checks the <xref:System.Net.HttpWebRequest.HaveResponse%2A> property to determine if a response has been received from an Internet resource.</span></span>  
  
 [!code-cpp[Httpwebrequest_HaveResponse#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Httpwebrequest_HaveResponse/CPP/httpwebrequest_haveresponse.cpp#1)]
 [!code-csharp[Httpwebrequest_HaveResponse#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Httpwebrequest_HaveResponse/CS/httpwebrequest_haveresponse.cs#1)]
 [!code-vb[Httpwebrequest_HaveResponse#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Httpwebrequest_HaveResponse/VB/httpwebrequest_haveresponse.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-762">HTTP ヘッダーを構成する名前と値のペアのコレクションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-762">Specifies a collection of the name/value pairs that make up the HTTP headers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-763">HTTP 要求のヘッダーを構成する名前と値のペアを格納している <see cref="T:System.Net.WebHeaderCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-763">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the name/value pairs that make up the headers for the HTTP request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-764"><xref:System.Net.HttpWebRequest.Headers%2A>コレクションには、要求に関連付けられたプロトコル ヘッダーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-764">The <xref:System.Net.HttpWebRequest.Headers%2A> collection contains the protocol headers associated with the request.</span></span> <span data-ttu-id="ab7fd-765">次の表に格納されていない HTTP ヘッダー、<xref:System.Net.HttpWebRequest.Headers%2A>コレクションが、システムによって設定またはのいずれかのプロパティまたはメソッドによって設定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-765">The following table lists the HTTP headers that are not stored in the <xref:System.Net.HttpWebRequest.Headers%2A> collection but are either set by the system or set by properties or methods.</span></span>  
  
|<span data-ttu-id="ab7fd-766">Header</span><span class="sxs-lookup"><span data-stu-id="ab7fd-766">Header</span></span>|<span data-ttu-id="ab7fd-767">によってを設定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-767">Set by</span></span>|  
|------------|------------|  
|<span data-ttu-id="ab7fd-768">そのまま使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-768">Accept</span></span>|<span data-ttu-id="ab7fd-769">によって設定、<xref:System.Net.HttpWebRequest.Accept%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-769">Set by the <xref:System.Net.HttpWebRequest.Accept%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-770">接続</span><span class="sxs-lookup"><span data-stu-id="ab7fd-770">Connection</span></span>|<span data-ttu-id="ab7fd-771">によって設定、<xref:System.Net.HttpWebRequest.Connection%2A>プロパティおよび<xref:System.Net.HttpWebRequest.KeepAlive%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-771">Set by the <xref:System.Net.HttpWebRequest.Connection%2A> property and <xref:System.Net.HttpWebRequest.KeepAlive%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-772">コンテンツの長さ</span><span class="sxs-lookup"><span data-stu-id="ab7fd-772">Content-Length</span></span>|<span data-ttu-id="ab7fd-773">によって設定、<xref:System.Net.HttpWebRequest.ContentLength%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-773">Set by the <xref:System.Net.HttpWebRequest.ContentLength%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-774">Content-Type</span><span class="sxs-lookup"><span data-stu-id="ab7fd-774">Content-Type</span></span>|<span data-ttu-id="ab7fd-775">によって設定、<xref:System.Net.HttpWebRequest.ContentType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-775">Set by the <xref:System.Net.HttpWebRequest.ContentType%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-776">期待</span><span class="sxs-lookup"><span data-stu-id="ab7fd-776">Expect</span></span>|<span data-ttu-id="ab7fd-777">によって設定、<xref:System.Net.HttpWebRequest.Expect%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-777">Set by the <xref:System.Net.HttpWebRequest.Expect%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-778">日付</span><span class="sxs-lookup"><span data-stu-id="ab7fd-778">Date</span></span>|<span data-ttu-id="ab7fd-779">によって設定、<xref:System.Net.HttpWebRequest.Date%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-779">Set by the <xref:System.Net.HttpWebRequest.Date%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-780">ホスト</span><span class="sxs-lookup"><span data-stu-id="ab7fd-780">Host</span></span>|<span data-ttu-id="ab7fd-781">によって設定、<xref:System.Net.HttpWebRequest.Host%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-781">Set by the <xref:System.Net.HttpWebRequest.Host%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-782">場合の変更-以降</span><span class="sxs-lookup"><span data-stu-id="ab7fd-782">If-Modified-Since</span></span>|<span data-ttu-id="ab7fd-783">によって設定、<xref:System.Net.HttpWebRequest.IfModifiedSince%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-783">Set by the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-784">範囲</span><span class="sxs-lookup"><span data-stu-id="ab7fd-784">Range</span></span>|<span data-ttu-id="ab7fd-785">によって設定、<xref:System.Net.HttpWebRequest.AddRange%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-785">Set by the <xref:System.Net.HttpWebRequest.AddRange%2A> method.</span></span>|  
|<span data-ttu-id="ab7fd-786">Referer</span><span class="sxs-lookup"><span data-stu-id="ab7fd-786">Referer</span></span>|<span data-ttu-id="ab7fd-787">によって設定、<xref:System.Net.HttpWebRequest.Referer%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-787">Set by the <xref:System.Net.HttpWebRequest.Referer%2A> property.</span></span>|  
|<span data-ttu-id="ab7fd-788">転送エンコード</span><span class="sxs-lookup"><span data-stu-id="ab7fd-788">Transfer-Encoding</span></span>|<span data-ttu-id="ab7fd-789">によって設定、<xref:System.Net.HttpWebRequest.TransferEncoding%2A>プロパティ (、<xref:System.Net.HttpWebRequest.SendChunked%2A>プロパティを true にする必要があります)。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-789">Set by the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property (the <xref:System.Net.HttpWebRequest.SendChunked%2A> property must be true).</span></span>|  
|<span data-ttu-id="ab7fd-790">ユーザー エージェント</span><span class="sxs-lookup"><span data-stu-id="ab7fd-790">User-Agent</span></span>|<span data-ttu-id="ab7fd-791">によって設定、<xref:System.Net.HttpWebRequest.UserAgent%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-791">Set by the <xref:System.Net.HttpWebRequest.UserAgent%2A> property.</span></span>|  
  
 <span data-ttu-id="ab7fd-792"><xref:System.Net.WebHeaderCollection.Add%2A>メソッドがスローされます、<xref:System.ArgumentException>これらの保護されているヘッダーのいずれかを設定しようとする場合。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-792">The <xref:System.Net.WebHeaderCollection.Add%2A> method throws an <xref:System.ArgumentException> if you try to set one of these protected headers.</span></span>  
  
 <span data-ttu-id="ab7fd-793">変更、<xref:System.Net.HttpWebRequest.Headers%2A>プロパティを呼び出して、要求が開始された後<xref:System.Net.HttpWebRequest.GetRequestStream%2A>、 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.HttpWebRequest.GetResponse%2A>、または<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>メソッドがスローされます、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-793">Changing the <xref:System.Net.HttpWebRequest.Headers%2A> property after the request has been started by calling <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="ab7fd-794">あるヘッダーの値は変更されません、Web サーバーおよびキャッシュは、変更または Web 要求にヘッダーを追加するためと想定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-794">You should not assume that the header values will remain unchanged, because Web servers and caches may change or add headers to a Web request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-795">次のコード例では、<xref:System.Net.HttpWebRequest.Headers%2A>プロパティをコンソールに HTTP ヘッダーの名前/値ペアを印刷します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-795">The following code example uses the <xref:System.Net.HttpWebRequest.Headers%2A> property to print the HTTP header name/value pairs to the console.</span></span>  
  
 [!code-cpp[HttpWebRequest_Headers#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Headers/CPP/httpwebrequest_headers.cpp#1)]
 [!code-csharp[HttpWebRequest_Headers#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Headers/CS/httpwebrequest_headers.cs#1)]
 [!code-vb[HttpWebRequest_Headers#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Headers/VB/httpwebrequest_headers.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-796">
            <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.HttpWebRequest.GetResponse" />、または <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> メソッドを呼び出すことにより要求が開始されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-796">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Host" />
      <MemberSignature Language="VB.NET" Value="Public Property Host As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Host { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-797">要求 URI に依存しない HTTP 要求で使用する Host ヘッダー値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-797">Get or set the Host header value to use in an HTTP request independent from the request URI.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-798">HTTP 要求の Host ヘッダーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-798">The Host header value in the HTTP request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-799"><xref:System.Net.HttpWebRequest.Host%2A>ホスト要求 URI に依存しない HTTP 要求で使用するヘッダーの値を設定するプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-799">The <xref:System.Net.HttpWebRequest.Host%2A> property can be used to set the Host header value to use in an HTTP request independent from the request URI.</span></span> <span data-ttu-id="ab7fd-800"><xref:System.Net.HttpWebRequest.Host%2A>プロパティは、ホスト名と、省略可能なポート番号で構成できます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-800">The <xref:System.Net.HttpWebRequest.Host%2A> property can consist of a hostname and an optional port number.</span></span> <span data-ttu-id="ab7fd-801">ポート情報がない場合、ホスト ヘッダーは、要求されたサービス (ポート 80 の HTTP URL、たとえば) の既定のポートを意味します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-801">A Host header without port information implies the default port for the service requested (port 80 for an HTTP URL, for example).</span></span>  
  
 <span data-ttu-id="ab7fd-802">ホストとポートの指定の形式は、IETF によって発行された RFC2616 のセクション 14.23 の規則に従う必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-802">The format for specifying a host and port must follow the rules in section 14.23 of RFC2616 published by the IETF.</span></span> <span data-ttu-id="ab7fd-803">これらの要件に準拠する 8080 のポートを指定する例として次の値があります、<xref:System.Net.HttpWebRequest.Host%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-803">An example complying with these requirements that specifies a port of 8080 would be the following value for the <xref:System.Net.HttpWebRequest.Host%2A> property:</span></span>  
  
 `www.contoso.com:8080`  
  
 <span data-ttu-id="ab7fd-804">使用して、<xref:System.Net.HttpWebRequest.Host%2A>カスタム ホスト ヘッダーの値を明示的に指定するプロパティは、キャッシュ領域、cookie、および認証にも影響します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-804">Using the <xref:System.Net.HttpWebRequest.Host%2A> property to explicitly specify a custom Host header value also affects areas caching, cookies, and authentication.</span></span> <span data-ttu-id="ab7fd-805">アプリケーションは、特定の URI プレフィックスの資格情報を提供、ときにアプリケーションは、URI でターゲット サーバーではなく、ホスト ヘッダーの値を含む URI を使用することを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-805">When an application provides credentials for a specific URI prefix, the applications needs to make sure to use the URI containing the value of the Host header, not the target server in the URI.</span></span> <span data-ttu-id="ab7fd-806">リソースをキャッシュする場合に使用するキーは、要求 URI ではなく、ホスト ヘッダー値を使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-806">The key used when caching resources, uses the Host header value rather than the request URI.</span></span> <span data-ttu-id="ab7fd-807">Cookie が格納されている、<xref:System.Net.CookieContainer>とサーバーのドメイン名によって論理的にグループ化します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-807">Cookies are stored in a <xref:System.Net.CookieContainer> and logically grouped by the server domain name.</span></span> <span data-ttu-id="ab7fd-808">アプリケーションでは、ホスト ヘッダーを指定する場合、この値は、ドメインとして使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-808">If the application specifies a Host header, then this value will be used as domain.</span></span>  
  
 <span data-ttu-id="ab7fd-809">場合、<xref:System.Net.HttpWebRequest.Host%2A>プロパティが設定されていない、し、HTTP 要求で使用するホスト ヘッダーの値は、要求 URI に基づきます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-809">If the <xref:System.Net.HttpWebRequest.Host%2A> property is not set, then the Host header value to use in an HTTP request is based on the request URI.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab7fd-810">Host ヘッダーを <see langword="null" /> に設定することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-810">The Host header cannot be set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-811">ホスト ヘッダーを無効な値には設定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-811">The Host header cannot be set to an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-812">Host ヘッダーは、<see cref="T:System.Net.HttpWebRequest" /> の送信が既に開始された後には設定できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-812">The Host header cannot be set after the <see cref="T:System.Net.HttpWebRequest" /> has already started to be sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IfModifiedSince">
      <MemberSignature Language="C#" Value="public DateTime IfModifiedSince { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IfModifiedSince" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.IfModifiedSince" />
      <MemberSignature Language="VB.NET" Value="Public Property IfModifiedSince As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IfModifiedSince { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-813">
            <see langword="If-Modified-Since" /> HTTP ヘッダーの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-813">Gets or sets the value of the <see langword="If-Modified-Since" /> HTTP header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-814">
            <see langword="If-Modified-Since" /> HTTP ヘッダーの内容を格納する <see cref="T:System.DateTime" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-814">A <see cref="T:System.DateTime" /> that contains the contents of the <see langword="If-Modified-Since" /> HTTP header.</span>
          </span>
          <span data-ttu-id="ab7fd-815">既定値は、現在の日付と時刻です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-815">The default value is the current date and time.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-816"><xref:System.Net.HttpWebRequest.IfModifiedSince%2A>プロパティは、標準的な<xref:System.DateTime?displayProperty=nameWithType>オブジェクトを含めることができます、<xref:System.DateTimeKind?displayProperty=nameWithType>フィールド<xref:System.DateTimeKind.Local?displayProperty=nameWithType>、 <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>、または<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-816">The <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is a standard <xref:System.DateTime?displayProperty=nameWithType> object and can contain a <xref:System.DateTimeKind?displayProperty=nameWithType> field of <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>, or <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ab7fd-817">使用する場合は、時間の任意の種類を設定することができます、<xref:System.Net.HttpWebRequest.IfModifiedSince%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-817">Any kind of time can be set when using the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span> <span data-ttu-id="ab7fd-818">場合<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>設定または取得されると、<xref:System.Net.HttpWebRequest.IfModifiedSince%2A>プロパティがあると見なされます<xref:System.DateTimeKind.Local?displayProperty=nameWithType>(ローカル時刻)。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-818">If <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> is set or retrieved, the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is assumed to be <xref:System.DateTimeKind.Local?displayProperty=nameWithType> (local time).</span></span>  
  
 <span data-ttu-id="ab7fd-819">内のクラス、<xref:System.Net>名前空間常に書き込む、 <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> GMT (Utc) 形式を使用して標準の形式で転送中に、ネットワーク上でのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-819">The classes in the <xref:System.Net> namespace always write it out the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property on the wire during transmission in standard form using GMT (Utc) format.</span></span>  
  
 <span data-ttu-id="ab7fd-820">場合、<xref:System.Net.HttpWebRequest.IfModifiedSince%2A>プロパティに設定されている<xref:System.DateTime.MinValue?displayProperty=nameWithType>、`If-Modified-Since`から HTTP ヘッダーを削除、<xref:System.Net.HttpWebRequest.Headers%2A>プロパティおよび<xref:System.Net.WebHeaderCollection>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-820">If the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is set to <xref:System.DateTime.MinValue?displayProperty=nameWithType>, then the `If-Modified-Since` HTTP header is removed from the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
 <span data-ttu-id="ab7fd-821">場合、<xref:System.Net.HttpWebRequest.IfModifiedSince%2A>プロパティは<xref:System.DateTime.MinValue?displayProperty=nameWithType>、ことを示します、`If-Modified-Since`に HTTP ヘッダーが含まれていない、<xref:System.Net.HttpWebRequest.Headers%2A>プロパティおよび<xref:System.Net.WebHeaderCollection>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-821">If the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property is <xref:System.DateTime.MinValue?displayProperty=nameWithType>, this indicates that the `If-Modified-Since` HTTP header is not included in the <xref:System.Net.HttpWebRequest.Headers%2A> property and the <xref:System.Net.WebHeaderCollection>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-822">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-822">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ab7fd-823">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-823">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-824">次のコード例のチェック、<xref:System.Net.HttpWebRequest.IfModifiedSince%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-824">The following code example checks the <xref:System.Net.HttpWebRequest.IfModifiedSince%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_IfModifiedSince#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_IfModifiedSince/CPP/httpwebrequest_ifmodifiedsince.cpp#1)]
 [!code-csharp[HttpWebRequest_IfModifiedSince#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_IfModifiedSince/CS/httpwebrequest_ifmodifiedsince.cs#1)]
 [!code-vb[HttpWebRequest_IfModifiedSince#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_IfModifiedSince/VB/httpwebrequest_ifmodifiedsince.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-825">インターネット リソースへの永続的な接続を行うかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-825">Gets or sets a value that indicates whether to make a persistent connection to the Internet resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-826">インターネット リソースへの要求に、値 Keep-alive を持つ <see langword="true" /> HTTP ヘッダーを格納する場合は <see langword="Connection" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-826">
              <see langword="true" /> if the request to the Internet resource should contain a <see langword="Connection" /> HTTP header with the value Keep-alive; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7fd-827">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-827">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-828">このプロパティを設定`true`を送信する、 `Connection` HTTP ヘッダー値 keep-alive を使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-828">Set this property to `true` to send a `Connection` HTTP header with the value Keep-alive.</span></span> <span data-ttu-id="ab7fd-829">アプリケーションを使用して<xref:System.Net.HttpWebRequest.KeepAlive%2A>を永続的な接続の設定を示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-829">An application uses <xref:System.Net.HttpWebRequest.KeepAlive%2A> to indicate a preference for persistent connections.</span></span> <span data-ttu-id="ab7fd-830">ときに、<xref:System.Net.HttpWebRequest.KeepAlive%2A>プロパティは`true`、アプリケーションがそれらをサポートするサーバーへの永続的な接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-830">When the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is `true`, the application makes persistent connections to the servers that support them.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-831">Http/1.1 を使用する場合にキープアは既定でオンです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-831">When using HTTP/1.1, Keep-Alive is on by default.</span></span> <span data-ttu-id="ab7fd-832">設定<xref:System.Net.HttpWebRequest.KeepAlive%2A>に`false`送信中に発生する可能性があります、`Connection: Close`ヘッダー、サーバーにします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-832">Setting <xref:System.Net.HttpWebRequest.KeepAlive%2A> to `false` may result in sending a `Connection: Close` header to the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-833">次のコード例のセット、<xref:System.Net.HttpWebRequest.KeepAlive%2A>プロパティを`false`インターネット リソースの永続的な接続を確立するようにします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-833">The following code example sets the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property to `false` to avoid establishing a persistent connection with the Internet resource.</span></span>  
  
 [!code-cpp[HttpWebRequest_Connection#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Connection/CPP/httpwebrequest_connection.cpp#1)]
 [!code-csharp[HttpWebRequest_Connection#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Connection/CS/httpwebrequest_connection.cs#1)]
 [!code-vb[HttpWebRequest_Connection#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Connection/VB/httpwebrequest_connection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaximumAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.MaximumAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumAutomaticRedirections { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-834">要求によって実行されるリダイレクトの最大数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-834">Gets or sets the maximum number of redirects that the request follows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-835">要求によって実行されるリダイレクト応答の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-835">The maximum number of redirection responses that the request follows.</span>
          </span>
          <span data-ttu-id="ab7fd-836">既定値は 50 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-836">The default value is 50.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-837"><xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A>プロパティを設定する場合は、次の要求のリダイレクトの最大数、<xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A>プロパティは`true`します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-837">The <xref:System.Net.HttpWebRequest.MaximumAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-838">次のコード例では、このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-838">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-839">設定値が 0 以下です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-839">The value is set to 0 or less.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaximumResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.MaximumResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumResponseHeadersLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Use this")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-840">応答ヘッダーの許容最大長を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-840">Gets or sets the maximum allowed length of the response headers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-841">応答ヘッダーの長さ (KB 単位、1 KB = 1024 バイト)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-841">The length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-842">応答ヘッダーの長さには、応答のステータス行と HTTP プロトコルの一部として受信されるすべての余分な制御文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-842">The length of the response header includes the response status line and any extra control characters that are received as part of HTTP protocol.</span></span> <span data-ttu-id="ab7fd-843">値の-1 の場合は、応答ヘッダーに制限は適用されません。値 0 は、すべての要求が失敗することを意味します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-843">A value of -1 means no limit is imposed on the response headers; a value of 0 means that all requests fail.</span></span>  
  
 <span data-ttu-id="ab7fd-844">場合、<xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A>プロパティが明示的に設定されていない、既定値はの値、<xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-844">If the <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> property is not explicitly set, it defaults to the value of the <xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A> property.</span></span>  
  
 <span data-ttu-id="ab7fd-845">受信した応答ヘッダーの長さがの値を超えるかどうか、 <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> 、プロパティ、<xref:System.Net.HttpWebRequest.EndGetResponse%2A>または<xref:System.Net.HttpWebRequest.GetResponse%2A>メソッドがスローされます、<xref:System.Net.WebException>で、<xref:System.Net.WebException.Status%2A>プロパティに設定<xref:System.Net.WebExceptionStatus.MessageLengthLimitExceeded>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-845">If the length of the response header received exceeds the value of the <xref:System.Net.HttpWebRequest.MaximumResponseHeadersLength%2A> property, the <xref:System.Net.HttpWebRequest.EndGetResponse%2A> or <xref:System.Net.HttpWebRequest.GetResponse%2A> methods will throw a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.MessageLengthLimitExceeded>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-846">次のコード例では、このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-846">The following code example sets the value of this property.</span></span>  
  
 [!code-cpp[NCLResponse1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLResponse1/CPP/httpwebrequest1.cpp#1)]
 [!code-csharp[NCLResponse1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLResponse1/CS/httpwebrequest1.cs#1)]
 [!code-vb[NCLResponse1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLResponse1/VB/httpwebrequest1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-847">プロパティは、要求が送信された後に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-847">The property is set after the request has already been submitted.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ab7fd-848">値は 0 より小さく、-1 とは異なっています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-848">The value is less than 0 and is not equal to -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-849">要求のメディア タイプを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-849">Gets or sets the media type of the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-850">要求のメディア タイプ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-850">The media type of the request.</span>
          </span>
          <span data-ttu-id="ab7fd-851">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-851">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-852">値、<xref:System.Net.HttpWebRequest.MediaType%2A>プロパティへの影響、<xref:System.Net.HttpWebResponse.CharacterSet%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-852">The value of the <xref:System.Net.HttpWebRequest.MediaType%2A> property affects the <xref:System.Net.HttpWebResponse.CharacterSet%2A> property.</span></span> <span data-ttu-id="ab7fd-853">設定すると、<xref:System.Net.HttpWebRequest.MediaType%2A>要求に対応するメディアの種類が、応答で返される文字セットの一覧から選択`Content-type`HTTP ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-853">When you set the <xref:System.Net.HttpWebRequest.MediaType%2A> in the request, the corresponding media type is chosen from the list of character sets returned in the response `Content-type` HTTP header.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-854">要求に対して使用するメソッドを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-854">Gets or sets the method for the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-855">インターネット リソースと通信するために使用する要求メソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-855">The request method to use to contact the Internet resource.</span>
          </span>
          <span data-ttu-id="ab7fd-856">既定値は GET です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-856">The default value is GET.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-857"><xref:System.Net.HttpWebRequest.Method%2A>プロパティは、HTTP 1.1 プロトコル動詞のいずれかに設定することができます: GET、HEAD、POST、PUT、DELETE、トレース、またはオプション。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-857">The <xref:System.Net.HttpWebRequest.Method%2A> property can be set to any of the HTTP 1.1 protocol verbs: GET, HEAD, POST, PUT, DELETE, TRACE, or OPTIONS.</span></span>  
  
 <span data-ttu-id="ab7fd-858">場合、 <xref:System.Net.HttpWebRequest.ContentLength%2A> -1 以外の値に設定されて、<xref:System.Net.HttpWebRequest.Method%2A>プロパティは、データをアップロードするプロトコルのプロパティに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-858">If the <xref:System.Net.HttpWebRequest.ContentLength%2A> property is set to any value other than -1, the <xref:System.Net.HttpWebRequest.Method%2A> property must be set to a protocol property that uploads data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-859">次のコード例のセット、<xref:System.Net.HttpWebRequest.Method%2A>プロパティを POST します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-859">The following code example sets the <xref:System.Net.HttpWebRequest.Method%2A> property to POST.</span></span>  
  
 [!code-cpp[HttpWebRequest_ContentLength#4](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CPP/httpwebrequest_contentlength.cpp#4)]
 [!code-csharp[HttpWebRequest_ContentLength#4](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ContentLength/CS/httpwebrequest_contentlength.cs#4)]
 [!code-vb[HttpWebRequest_ContentLength#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ContentLength/VB/httpwebrequest_contentlength.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-860">メソッドが提供されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-860">No method is supplied.</span>
          </span>
          <span data-ttu-id="ab7fd-861">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-861">-or-</span>
          </span>
          <span data-ttu-id="ab7fd-862">メソッドの文字列に正しくない文字が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-862">The method string contains invalid characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipelined">
      <MemberSignature Language="C#" Value="public bool Pipelined { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pipelined" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Pipelined" />
      <MemberSignature Language="VB.NET" Value="Public Property Pipelined As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Pipelined { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-863">インターネット リソースへの要求をパイプライン処理するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-863">Gets or sets a value that indicates whether to pipeline the request to the Internet resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-864">要求をパイプライン処理する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-864">
              <see langword="true" /> if the request should be pipelined; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7fd-865">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-865">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-866">アプリケーションを使用して、<xref:System.Net.HttpWebRequest.Pipelined%2A>プロパティをパイプライン接続に対する設定を示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-866">An application uses the <xref:System.Net.HttpWebRequest.Pipelined%2A> property to indicate a preference for pipelined connections.</span></span> <span data-ttu-id="ab7fd-867">ときに<xref:System.Net.HttpWebRequest.Pipelined%2A>は`true`アプリケーションがパイプライン接続をサポートしているサーバーにします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-867">When <xref:System.Net.HttpWebRequest.Pipelined%2A> is `true`, an application makes pipelined connections to the servers that support them.</span></span>  
  
 <span data-ttu-id="ab7fd-868">パイプラインに接続する場合にのみ、<xref:System.Net.HttpWebRequest.KeepAlive%2A>プロパティも`true`します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-868">Pipelined connections are made only when the <xref:System.Net.HttpWebRequest.KeepAlive%2A> property is also `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-869">次のコード例の値を表示する、<xref:System.Net.HttpWebRequest.Pipelined%2A>プロパティをコンソールにします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-869">The following code example prints the value of the <xref:System.Net.HttpWebRequest.Pipelined%2A> property to the console.</span></span>  
  
 [!code-cpp[HttpWebRequest_PipeLined#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_PipeLined/CPP/httpwebrequest_pipelined.cpp#1)]
 [!code-csharp[HttpWebRequest_PipeLined#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_PipeLined/CS/httpwebrequest_pipelined.cs#1)]
 [!code-vb[HttpWebRequest_PipeLined#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_PipeLined/VB/httpwebrequest_pipelined.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-870">要求で Authorization ヘッダーを送信するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-870">Gets or sets a value that indicates whether to send an Authorization header with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-871">認証が行われた後で、要求と共に HTTP 認証ヘッダーを送信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-871">
              <see langword="true" /> to send an  HTTP Authorization header with requests after authentication has taken place; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7fd-872">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-872">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-873">特定のクライアント要求後から<xref:System.Uri>が正常に認証されると場合、<xref:System.Net.HttpWebRequest.PreAuthenticate%2A>は`true`資格情報が提供されると、承認ヘッダーは、いずれかに各要求と一緒に送信される<xref:System.Uri>固有の仕様に一致する<xref:System.Uri>最後のスラッシュの前までです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-873">After a client request to a specific <xref:System.Uri> is successfully authenticated, if <xref:System.Net.HttpWebRequest.PreAuthenticate%2A> is `true` and credentials are supplied, the Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.</span></span> <span data-ttu-id="ab7fd-874">クライアントの要求が正常に特定の認証された場合は<xref:System.Uri>以下を格納しています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-874">So if the client request successfully authenticated to a specific <xref:System.Uri> that contains the following:</span></span>  
  
 `http://www.contoso.com/firstpath/`  
  
 <span data-ttu-id="ab7fd-875">事前認証の承認ヘッダーは、次のいずれかに各要求と一緒に送信される、<xref:System.Uri>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-875">Then the Authorization header for preauthentication is sent with each request to any of the following <xref:System.Uri> instances:</span></span>  
  
 `http://www.contoso.com/firstpath/`  
  
 `http://www.contoso.com/firstpath/default`  
  
 `http://www.contoso.com/firstpath/default.html`  
  
 `http://www.contoso.com/firstpath/sample.html`  
  
 <span data-ttu-id="ab7fd-876">ただし、承認ヘッダーが要求と共に送信されません、次のいずれかに<xref:System.Uri>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-876">However, the Authorization header is not sent with requests to any of the following <xref:System.Uri> instances:</span></span>  
  
 `http://www.contoso.com/`  
  
 `http://www.contoso.com/firstpath`  
  
 `http://www.contoso.com/secondpath/`  
  
 <span data-ttu-id="ab7fd-877">場合は、クライアントは要求を特定<xref:System.Uri>は正常に認証されると、要求標準の認証はプロシージャを使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-877">If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.</span></span>  
  
 <span data-ttu-id="ab7fd-878">最初の要求を除き、<xref:System.Net.WebRequest.PreAuthenticate%2A>プロパティには、それ以降の要求の認証情報を送信するかどうかを示します、 <xref:System.Uri> 、固有の仕様に一致する<xref:System.Uri>サーバーを待機することがなくスラッシュ最後までです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-878">With the exception of the first request, the <xref:System.Net.WebRequest.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.</span></span>  
  
 <span data-ttu-id="ab7fd-879">クライアントとサーバー間で次のダイアログ ボックスは、このプロパティの効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-879">The following dialog between client and server illustrates the effect of this property.</span></span> <span data-ttu-id="ab7fd-880">ダイアログ ボックスでは、基本認証では使用を前提としています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-880">The dialog assumes that basic authentication is in use.</span></span>  
  
 <span data-ttu-id="ab7fd-881"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> `false`:</span><span class="sxs-lookup"><span data-stu-id="ab7fd-881"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> is `false`:</span></span>  
  
 <span data-ttu-id="ab7fd-882">GET someUrl のクライアント:</span><span class="sxs-lookup"><span data-stu-id="ab7fd-882">Client: GET someUrl</span></span>  
  
 <span data-ttu-id="ab7fd-883">サーバー: 401 Www-authenticate Basic</span><span class="sxs-lookup"><span data-stu-id="ab7fd-883">Server: 401 WWW-Authenticate Basic</span></span>  
  
 <span data-ttu-id="ab7fd-884">承認ヘッダーのクライアント: GET</span><span class="sxs-lookup"><span data-stu-id="ab7fd-884">Client: GET with Authorization headers</span></span>  
  
 <span data-ttu-id="ab7fd-885">サーバー: 200 OK</span><span class="sxs-lookup"><span data-stu-id="ab7fd-885">Server: 200 OK</span></span>  
  
 <span data-ttu-id="ab7fd-886">GET someUrl のクライアント:</span><span class="sxs-lookup"><span data-stu-id="ab7fd-886">Client: GET someUrl</span></span>  
  
 <span data-ttu-id="ab7fd-887">サーバー: 401 Www-authenticate Basic</span><span class="sxs-lookup"><span data-stu-id="ab7fd-887">Server: 401 WWW-Authenticate Basic</span></span>  
  
 <span data-ttu-id="ab7fd-888">承認ヘッダーのクライアント: GET</span><span class="sxs-lookup"><span data-stu-id="ab7fd-888">Client: GET with Authorization headers</span></span>  
  
 <span data-ttu-id="ab7fd-889">サーバー: 200 OK</span><span class="sxs-lookup"><span data-stu-id="ab7fd-889">Server: 200 OK</span></span>  
  
 <span data-ttu-id="ab7fd-890"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> `true`:</span><span class="sxs-lookup"><span data-stu-id="ab7fd-890"><xref:System.Net.HttpWebRequest.PreAuthenticate%2A> is `true`:</span></span>  
  
 <span data-ttu-id="ab7fd-891">GET someUrl のクライアント:</span><span class="sxs-lookup"><span data-stu-id="ab7fd-891">Client: GET someUrl</span></span>  
  
 <span data-ttu-id="ab7fd-892">サーバー: 401 Www-authenticate Basic</span><span class="sxs-lookup"><span data-stu-id="ab7fd-892">Server: 401 WWW-Authenticate Basic</span></span>  
  
 <span data-ttu-id="ab7fd-893">承認ヘッダーのクライアント: GET</span><span class="sxs-lookup"><span data-stu-id="ab7fd-893">Client: GET with Authorization headers</span></span>  
  
 <span data-ttu-id="ab7fd-894">サーバー: 200 OK</span><span class="sxs-lookup"><span data-stu-id="ab7fd-894">Server: 200 OK</span></span>  
  
 <span data-ttu-id="ab7fd-895">クライアント: someUrl 承認ヘッダーを取得します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-895">Client: GET someUrl with Authorization headers</span></span>  
  
 <span data-ttu-id="ab7fd-896">認証スキームをサポートしていない事前認証の場合、このプロパティの値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-896">If the authentication scheme does not support preauthentication, the value of this property is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); void set(Version ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-897">要求に対して使用する HTTP バージョンを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-897">Gets or sets the version of HTTP to use for the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-898">要求に対して使用する HTTP バージョン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-898">The HTTP version to use for the request.</span>
          </span>
          <span data-ttu-id="ab7fd-899">既定値は、<see cref="F:System.Net.HttpVersion.Version11" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-899">The default is <see cref="F:System.Net.HttpVersion.Version11" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-900"><xref:System.Net.HttpWebRequest>クラスには、バージョン 1.0 および 1.1 の HTTP のみがサポートしています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-900">The <xref:System.Net.HttpWebRequest> class supports only versions 1.0 and 1.1 of HTTP.</span></span> <span data-ttu-id="ab7fd-901">設定<xref:System.Net.HttpWebRequest.ProtocolVersion%2A>別のバージョンには例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-901">Setting <xref:System.Net.HttpWebRequest.ProtocolVersion%2A> to a different version throws an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-902">現在の要求の HTTP バージョンを設定するには、使用、<xref:System.Net.HttpVersion.Version10>と<xref:System.Net.HttpVersion.Version11>のフィールド、<xref:System.Net.HttpVersion>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-902">To set the HTTP version of the current request, use the <xref:System.Net.HttpVersion.Version10> and <xref:System.Net.HttpVersion.Version11> fields of the <xref:System.Net.HttpVersion> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-903">次のコード例のセット、<xref:System.Net.HttpWebRequest.ProtocolVersion%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-903">The following code example sets the <xref:System.Net.HttpWebRequest.ProtocolVersion%2A> Property.</span></span>  
  
 [!code-cpp[HttpWebRequest_ProtocolVersion#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_ProtocolVersion/CPP/httpwebrequest_protocolversion.cpp#1)]
 [!code-csharp[HttpWebRequest_ProtocolVersion#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_ProtocolVersion/CS/httpwebrequest_protocolversion.cs#1)]
 [!code-vb[HttpWebRequest_ProtocolVersion#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_ProtocolVersion/VB/httpwebrequest_protocolversion.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-904">HTTP バージョンが 1.0 または 1.1 以外の値に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-904">The HTTP version is set to a value other than 1.0 or 1.1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-905">要求に対して使用するプロキシ情報を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-905">Gets or sets proxy information for the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-906">要求に対するプロキシで使用する <see cref="T:System.Net.IWebProxy" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-906">The <see cref="T:System.Net.IWebProxy" /> object to use to proxy the request.</span>
          </span>
          <span data-ttu-id="ab7fd-907">既定値は <see cref="P:System.Net.GlobalProxySelection.Select" /> プロパティを呼び出して設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-907">The default value is set by calling the <see cref="P:System.Net.GlobalProxySelection.Select" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-908"><xref:System.Net.HttpWebRequest.Proxy%2A>プロパティを識別、<xref:System.Net.WebProxy>インターネット リソースへの要求の処理に使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-908">The <xref:System.Net.HttpWebRequest.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources.</span></span> <span data-ttu-id="ab7fd-909">プロキシを使用しないことを指定するには、設定、<xref:System.Net.HttpWebRequest.Proxy%2A>プロパティによって返されるプロキシ インスタンスを<xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-909">To specify that no proxy should be used, set the <xref:System.Net.HttpWebRequest.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ab7fd-910">ローカル コンピューターまたはアプリケーション構成ファイルが既定のプロキシを使用することを指定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-910">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="ab7fd-911">場合、<xref:System.Net.HttpWebRequest.Proxy%2A>プロパティを指定すると、プロキシの設定から、<xref:System.Net.HttpWebRequest.Proxy%2A>プロパティは、ローカル コンピューターまたはアプリケーション構成ファイルをオーバーライドおよび<xref:System.Net.HttpWebRequest>インスタンスが指定したプロキシ設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-911">If the <xref:System.Net.HttpWebRequest.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.HttpWebRequest.Proxy%2A> property override the local computer or application config file and the <xref:System.Net.HttpWebRequest> instance will use the proxy settings specified.</span></span> <span data-ttu-id="ab7fd-912">プロキシが構成ファイルに指定されていない場合、<xref:System.Net.HttpWebRequest.Proxy%2A>プロパティは指定しません、<xref:System.Net.HttpWebRequest>クラスは、ローカル コンピューターで Internet Explorer から継承されたプロキシ設定を使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-912">If no proxy is specified in a config file and the <xref:System.Net.HttpWebRequest.Proxy%2A> property is unspecified, the <xref:System.Net.HttpWebRequest> class uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="ab7fd-913">Internet Explorer のプロキシ設定がない場合、要求は、サーバーに直接送信されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-913">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="ab7fd-914"><xref:System.Net.HttpWebRequest>クラス解析ワイルドカード文字を含むプロキシ バイ パス一覧から継承された Internet Explorer と同じように Internet Explorer で直接バイパス一覧を解析します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-914">The <xref:System.Net.HttpWebRequest> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="ab7fd-915">たとえば、<xref:System.Net.HttpWebRequest>クラスでは「nt *」Internet Explorer からのバイパス一覧を解析の正規表現として"nt。\*"です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-915">For example, the <xref:System.Net.HttpWebRequest> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.\*".</span></span> <span data-ttu-id="ab7fd-916">などの URL"`http://nt.com`"を使用してプロキシを使用しないと、<xref:System.Net.HttpWebRequest>クラスと Internet Explorer を使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-916">So a URL of "`http://nt.com`" would bypass the proxy using the <xref:System.Net.HttpWebRequest> class and using Internet Explorer.</span></span>  
  
 <span data-ttu-id="ab7fd-917"><xref:System.Net.HttpWebRequest>クラスには、ローカル プロキシ バイ パスがサポートしています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-917">The <xref:System.Net.HttpWebRequest> class supports local proxy bypass.</span></span> <span data-ttu-id="ab7fd-918">クラスは、次の条件のいずれかが満たされた場合にローカルに変換先を検討します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-918">The class considers a destination to be local if any of the following conditions are met:</span></span>  
  
-   <span data-ttu-id="ab7fd-919">転送先には、フラットな名前 (URL にドットがない) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-919">The destination contains a flat name (no dots in the URL).</span></span>  
  
-   <span data-ttu-id="ab7fd-920">転送先には、ループバック アドレスが含まれています (<xref:System.Net.IPAddress.Loopback>または<xref:System.Net.IPAddress.IPv6Loopback>) または変換先が含まれている、<xref:System.Net.IPAddress>ローカル コンピューターに割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-920">The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.</span></span>  
  
-   <span data-ttu-id="ab7fd-921">変換先のドメイン サフィックスが、ローカル コンピューターのドメイン サフィックスに一致 (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>)。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-921">The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span></span>  
  
 <span data-ttu-id="ab7fd-922">変更、<xref:System.Net.HttpWebRequest.Proxy%2A>プロパティを呼び出して、要求が開始された後、 <xref:System.Net.HttpWebRequest.GetRequestStream%2A>、 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.HttpWebRequest.GetResponse%2A>、または<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>メソッドがスローされます、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-922">Changing the <xref:System.Net.HttpWebRequest.Proxy%2A> property after the request has been started by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="ab7fd-923">Proxy 要素に関する情報を参照してください[ \&lt; defaultProxy\&gt;。要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-923">For information on the proxy element see [\&lt;defaultProxy\&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/defaultproxy-element-network-settings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-924">次のコード例では、<xref:System.Net.HttpWebRequest.Proxy%2A>要求のプロキシ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-924">The following code example uses the <xref:System.Net.HttpWebRequest.Proxy%2A> method to get the proxy information for the request.</span></span>  
  
 [!code-cpp[Httpwebrequest_proxy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Httpwebrequest_proxy/CPP/httpwebrequest_proxy.cpp#1)]
 [!code-csharp[Httpwebrequest_proxy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Httpwebrequest_proxy/CS/httpwebrequest_proxy.cs#1)]
 [!code-vb[Httpwebrequest_proxy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Httpwebrequest_proxy/VB/httpwebrequest_proxy.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab7fd-925">
            <see cref="P:System.Net.HttpWebRequest.Proxy" /> が <see langword="null" /> に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-925">
              <see cref="P:System.Net.HttpWebRequest.Proxy" /> is set to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-926">要求が <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.HttpWebRequest.GetResponse" />、または <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> の呼び出しにより既に開始されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-926">The request has been started by calling <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="ab7fd-927">呼び出し元には、要求された操作に対するアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-927">The caller does not have permission for the requested operation.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="ab7fd-928">取得または設定する、<see cref="P:System.Net.HttpWebRequest.Proxy" />プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-928">To get or set the <see cref="P:System.Net.HttpWebRequest.Proxy" /> property.</span>
          </span>
          <span data-ttu-id="ab7fd-929">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-929">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-930">ストリームへの書き込み時またはストリームからの読み取り時のタイムアウト (ミリ秒単位) を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-930">Gets or sets a time-out in milliseconds when writing to or reading from a stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-931">書き込みまたは読み取りがタイムアウトするまでのミリ秒単位の時間。既定値は、300,000 ミリ秒 (5 分) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-931">The number of milliseconds before the writing or reading times out. The default value is 300,000 milliseconds (5 minutes).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-932"><xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A>プロパティには、によって返されるストリームに書き込む際に、使用、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>メソッドまたはによって返されるストリームからの読み取り、<xref:System.Net.HttpWebResponse.GetResponseStream%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-932">The <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property is used when writing to the stream returned by the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method or reading from the stream returned by the <xref:System.Net.HttpWebResponse.GetResponseStream%2A> method.</span></span>  
  
 <span data-ttu-id="ab7fd-933">具体的には、<xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A>プロパティのタイムアウトを制御する、<xref:System.IO.Stream.Read%2A>メソッドによって返されるストリームの読み取りに使用すると、<xref:System.Net.HttpWebResponse.GetResponseStream%2A>メソッド、および、<xref:System.IO.Stream.Write%2A>によって返されるストリームに書き込むために使用するメソッド、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-933">Specifically, the <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property controls the time-out for the <xref:System.IO.Stream.Read%2A> method, which is used to read the stream returned by the <xref:System.Net.HttpWebResponse.GetResponseStream%2A> method, and for the <xref:System.IO.Stream.Write%2A> method, which is used to write to the stream returned by the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method.</span></span>  
  
 <span data-ttu-id="ab7fd-934">要求が完了するまで待機する時間を指定するには、使用、<xref:System.Net.HttpWebRequest.Timeout%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-934">To specify the amount of time to wait for the request to complete, use the <xref:System.Net.HttpWebRequest.Timeout%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-935"><xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> プロパティを設定する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-935">The following code example shows how to set the <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property.</span></span>  
  
 [!code-csharp[Classic HttpWebRequest Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest Example/CS/source.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-936">要求が既に送信されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-936">The request has already been sent.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ab7fd-937">セット操作に指定された値は 0 以下であり、<see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-937">The value specified for a set operation is less than or equal to zero and is not equal to <see cref="F:System.Threading.Timeout.Infinite" /></span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpWebRequest.Timeout" />
      </Docs>
    </Member>
    <Member MemberName="Referer">
      <MemberSignature Language="C#" Value="public string Referer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Referer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Referer" />
      <MemberSignature Language="VB.NET" Value="Public Property Referer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Referer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-938">
            <see langword="Referer" /> HTTP ヘッダーの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-938">Gets or sets the value of the <see langword="Referer" /> HTTP header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-939">
            <see langword="Referer" /> HTTP ヘッダーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-939">The value of the <see langword="Referer" /> HTTP header.</span>
          </span>
          <span data-ttu-id="ab7fd-940">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-940">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-941">場合、<xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A>プロパティは`true`、<xref:System.Net.HttpWebRequest.Referer%2A>プロパティは、要求は別のサイトにリダイレクト時に自動的に設定します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-941">If the <xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A> property is `true`, the <xref:System.Net.HttpWebRequest.Referer%2A> property is set automatically when the request is redirected to another site.</span></span>  
  
 <span data-ttu-id="ab7fd-942">クリアする、 `Referer` HTTP ヘッダーを設定、<xref:System.Net.HttpWebRequest.Referer%2A>プロパティを`null`です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-942">To clear the `Referer` HTTP header, set the <xref:System.Net.HttpWebRequest.Referer%2A> property to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-943">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-943">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ab7fd-944">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-944">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-945">次のコード例のセット、<xref:System.Net.HttpWebRequest.Referer%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-945">The following code example sets the <xref:System.Net.HttpWebRequest.Referer%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_Referer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Referer/CPP/httpwebrequest_referer.cpp#1)]
 [!code-csharp[HttpWebRequest_Referer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Referer/CS/httpwebrequest_referer.cs#1)]
 [!code-vb[HttpWebRequest_Referer#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Referer/VB/httpwebrequest_referer.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-946">要求の元の URI (Uniform Resource Identifier) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-946">Gets the original Uniform Resource Identifier (URI) of the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-947">
            <see cref="T:System.Uri" /> メソッドに渡されたインターネット リソースの URI を格納している <see cref="M:System.Net.WebRequest.Create(System.String)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-947">A <see cref="T:System.Uri" /> that contains the URI of the Internet resource passed to the <see cref="M:System.Net.WebRequest.Create(System.String)" /> method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-948"><xref:System.Uri>オブジェクトに渡される<xref:System.Net.HttpWebRequest>への呼び出しによって<xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-948">The <xref:System.Uri> object passed to <xref:System.Net.HttpWebRequest> by the call to <xref:System.Net.WebRequest.Create%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ab7fd-949">次のリダイレクト ヘッダー変わらないので、<xref:System.Net.HttpWebRequest.RequestUri%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-949">Following a redirection header does not change the <xref:System.Net.HttpWebRequest.RequestUri%2A> property.</span></span> <span data-ttu-id="ab7fd-950">要求に応答する実際の URI を取得するには、確認、<xref:System.Net.HttpWebRequest.Address%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-950">To get the actual URI that responded to the request, examine the <xref:System.Net.HttpWebRequest.Address%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-951">次のコード例は、<xref:System.Net.HttpWebRequest>オブジェクト`req`の値を設定は、要求を処理する別の場所にリダイレクトされ、`hasChanged`変数を`true`要求がリダイレクトされる、それ以外の場合は`hasChanged`に設定されている`false`です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-951">The following code example checks to see if the <xref:System.Net.HttpWebRequest> object `req` was redirected to another location to fulfill the request, and sets the value of the `hasChanged` variable to `true` if the request was redirected; otherwise, `hasChanged` is set to `false`.</span></span>  
  
 [!code-cpp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebRequest.RequestUri Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebRequest.RequestUri Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendChunked">
      <MemberSignature Language="C#" Value="public bool SendChunked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendChunked" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.SendChunked" />
      <MemberSignature Language="VB.NET" Value="Public Property SendChunked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendChunked { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-952">インターネット リソースへセグメント単位でデータを送信するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-952">Gets or sets a value that indicates whether to send data in segments to the Internet resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-953">インターネット リソースへセグメント単位でデータを送信する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-953">
              <see langword="true" /> to send data to the Internet resource in segments; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7fd-954">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-954">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-955">ときに<xref:System.Net.HttpWebRequest.SendChunked%2A>は`true`要求は、セグメント内のインターネット リソースにデータを送信します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-955">When <xref:System.Net.HttpWebRequest.SendChunked%2A> is `true`, the request sends data to the Internet resource in segments.</span></span> <span data-ttu-id="ab7fd-956">インターネット リソースは、チャンクになったデータを受信をサポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-956">The Internet resource must support receiving chunked data.</span></span>  
  
 <span data-ttu-id="ab7fd-957">変更、<xref:System.Net.HttpWebRequest.SendChunked%2A>プロパティを呼び出して、要求が開始された後、 <xref:System.Net.HttpWebRequest.GetRequestStream%2A>、 <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.HttpWebRequest.GetResponse%2A>、または<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>メソッドがスローされます、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-957">Changing the <xref:System.Net.HttpWebRequest.SendChunked%2A> property after the request has been started by calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A>, <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.HttpWebRequest.GetResponse%2A>, or <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method throws an <xref:System.InvalidOperationException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-958">次のコード例のセット、<xref:System.Net.HttpWebRequest.SendChunked%2A>プロパティを`true`インターネット リソースへセグメント単位でデータを送信できるようにします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-958">The following code example sets the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true` so that data can be sent in segments to the Internet resource.</span></span>  
  
 [!code-cpp[HttpWebRequest_SendChunked#2](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_SendChunked/CPP/httpwebrequest_sendchunked.cpp#2)]
 [!code-csharp[HttpWebRequest_SendChunked#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_SendChunked/CS/httpwebrequest_sendchunked.cs#2)]
 [!code-vb[HttpWebRequest_SendChunked#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_SendChunked/VB/httpwebrequest_sendchunked.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-959">
            <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />、<see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />、<see cref="M:System.Net.HttpWebRequest.GetResponse" />、または <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> メソッドを呼び出すことにより要求が開始されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-959">The request has been started by calling the <see cref="M:System.Net.HttpWebRequest.GetRequestStream" />, <see cref="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />, <see cref="M:System.Net.HttpWebRequest.GetResponse" />, or <see cref="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateValidationCallback">
      <MemberSignature Language="C#" Value="public System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ServerCertificateValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateValidationCallback As RemoteCertificateValidationCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::RemoteCertificateValidationCallback ^ ServerCertificateValidationCallback { System::Net::Security::RemoteCertificateValidationCallback ^ get(); void set(System::Net::Security::RemoteCertificateValidationCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.RemoteCertificateValidationCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-960">サーバー証明書を検証するコールバック関数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-960">Gets or sets a callback function to validate the server certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-961">サーバー証明書を検証するコールバック関数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-961">A callback function to validate the server certificate.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-962">既定値は、コールバック関数が設定されていないと、<xref:System.Net.HttpWebRequest.ServerCertificateValidationCallback%2A>プロパティは`null`します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-962">The default is that no callback function is set and the <xref:System.Net.HttpWebRequest.ServerCertificateValidationCallback%2A> property is `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-963">要求に対して使用するサービス ポイントを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-963">Gets the service point to use for the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-964">インターネット リソースへのネットワーク接続を表す <see cref="T:System.Net.ServicePoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-964">A <see cref="T:System.Net.ServicePoint" /> that represents the network connection to the Internet resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-965"><xref:System.Net.ServicePoint.Address%2A?displayProperty=nameWithType>プロパティが異なる場合がある<xref:System.Net.HttpWebRequest.Address%2A?displayProperty=nameWithType>場合は、要求をリダイレクトします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-965">The <xref:System.Net.ServicePoint.Address%2A?displayProperty=nameWithType> property may be different from <xref:System.Net.HttpWebRequest.Address%2A?displayProperty=nameWithType> if the request is redirected.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.ServicePoint#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.ServicePoint/CPP/servicepoint.cpp#6)]
 [!code-csharp[System.Net.ServicePoint#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.ServicePoint/CS/servicepoint.cs#6)]
 [!code-vb[System.Net.ServicePoint#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.ServicePoint/VB/servicepoint.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCookieContainer">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCookieContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.SupportsCookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCookieContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCookieContainer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-966">要求が <see cref="T:System.Net.CookieContainer" /> をサポートするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-966">Gets a value that indicates whether the request provides support for a <see cref="T:System.Net.CookieContainer" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-967">
            <see langword="true" /> 要求のサポートを提供している場合、 <see cref="T:System.Net.CookieContainer" />、それ以外の<see langword="false" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-967">
              <see langword="true" /> if the request provides support for a <see cref="T:System.Net.CookieContainer" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">
          <span data-ttu-id="ab7fd-968">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-968">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</span>
          </span>
        </param>
        <param name="streamingContext">
          <span data-ttu-id="ab7fd-969">このシリアル化の転送先を指定する <see cref="T:System.Runtime.Serialization.StreamingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-969">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the destination for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab7fd-970">
            <see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、対象のオブジェクトをシリアル化するために必要なデータを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-970">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the target object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-971">含まれる任意のオブジェクト、<xref:System.Runtime.Serialization.SerializationInfo>自動的に追跡され、フォーマッタによってシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-971">Any objects included in the <xref:System.Runtime.Serialization.SerializationInfo> are automatically tracked and serialized by the formatter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-972">
            <see cref="M:System.Net.HttpWebRequest.GetResponse" /> メソッドと <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> メソッドのタイムアウト値 (ミリ秒単位) を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-972">Gets or sets the time-out value in milliseconds for the <see cref="M:System.Net.HttpWebRequest.GetResponse" /> and <see cref="M:System.Net.HttpWebRequest.GetRequestStream" /> methods.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-973">要求がタイムアウトするまでのミリ秒単位の待機時間。既定値は 100,000 ミリ秒 (100 秒) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-973">The number of milliseconds to wait before the request times out. The default value is 100,000 milliseconds (100 seconds).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-974"><xref:System.Net.HttpWebRequest.Timeout%2A> 後続の同期要求が行われたミリ秒数には、<xref:System.Net.HttpWebRequest.GetResponse%2A>メソッドは、応答の待機と<xref:System.Net.HttpWebRequest.GetRequestStream%2A>メソッドは、ストリームの待機です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-974"><xref:System.Net.HttpWebRequest.Timeout%2A> is the number of milliseconds that a subsequent synchronous request made with the <xref:System.Net.HttpWebRequest.GetResponse%2A> method waits for a response, and the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> method waits for a stream.</span></span> <span data-ttu-id="ab7fd-975"><xref:System.Net.HttpWebRequest.Timeout%2A>全体の要求と応答にいないに個別に適用されます、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>と<xref:System.Net.HttpWebRequest.GetResponse%2A>メソッドの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-975">The <xref:System.Net.HttpWebRequest.Timeout%2A> applies to the entire request and response, not individually to the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> and <xref:System.Net.HttpWebRequest.GetResponse%2A> method calls.</span></span> <span data-ttu-id="ab7fd-976">タイムアウト期間内にリソースが返されない場合、要求をスロー、<xref:System.Net.WebException>で、<xref:System.Net.WebException.Status%2A>プロパティに設定<xref:System.Net.WebExceptionStatus.Timeout?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-976">If the resource is not returned within the time-out period, the request throws a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.Timeout?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ab7fd-977"><xref:System.Net.HttpWebRequest.Timeout%2A>前にプロパティを設定する必要があります、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>または<xref:System.Net.HttpWebRequest.GetResponse%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-977">The <xref:System.Net.HttpWebRequest.Timeout%2A> property must be set before the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.GetResponse%2A> method is called.</span></span> <span data-ttu-id="ab7fd-978">変更、<xref:System.Net.HttpWebRequest.Timeout%2A>プロパティを呼び出した後、<xref:System.Net.HttpWebRequest.GetRequestStream%2A>または<xref:System.Net.HttpWebRequest.GetResponse%2A>メソッドは影響を与えません</span><span class="sxs-lookup"><span data-stu-id="ab7fd-978">Changing the <xref:System.Net.HttpWebRequest.Timeout%2A> property after calling the <xref:System.Net.HttpWebRequest.GetRequestStream%2A> or <xref:System.Net.HttpWebRequest.GetResponse%2A> method has no effect</span></span>  
  
 <span data-ttu-id="ab7fd-979"><xref:System.Net.HttpWebRequest.Timeout%2A>プロパティも何も起こりませんが使用した非同期の要求で、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>または<xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-979">The <xref:System.Net.HttpWebRequest.Timeout%2A> property has no effect on asynchronous requests made with the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> or <xref:System.Net.HttpWebRequest.BeginGetRequestStream%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ab7fd-980">非同期要求の場合は、クライアント アプリケーションは、独自のタイムアウト メカニズムを実装します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-980">In the case of asynchronous requests, the client application implements its own time-out mechanism.</span></span> <span data-ttu-id="ab7fd-981">例を参照してください、<xref:System.Net.HttpWebRequest.BeginGetResponse%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-981">Refer to the example in the <xref:System.Net.HttpWebRequest.BeginGetResponse%2A> method.</span></span>  
  
 <span data-ttu-id="ab7fd-982">待ってから、読み取りまたは書き込み操作がタイムアウトになる時間を指定するには、使用、<xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-982">To specify the amount of time to wait before a read or write operation times out, use the <xref:System.Net.HttpWebRequest.ReadWriteTimeout%2A> property.</span></span>  
  
 <span data-ttu-id="ab7fd-983">ドメイン ネーム システム (DNS) クエリは、最大 15 秒を返すまたはタイムアウトにかかる場合があります。設定すると、要求には、解像度を必要とするホスト名が含まれています。<xref:System.Net.FileWebRequest.Timeout%2A>値に、未満である 15 秒かかる場合がありますする前に 15 秒以上、<xref:System.Net.WebException>要求タイムアウトを示すためにスローされます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-983">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.FileWebRequest.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a timeout on your request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab7fd-984">次のコード例のセット、<xref:System.Net.HttpWebRequest.Timeout%2A>のプロパティ、<xref:System.Net.HttpWebRequest>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-984">The following code example sets the <xref:System.Net.HttpWebRequest.Timeout%2A> property of the <xref:System.Net.HttpWebRequest> object.</span></span>  
  
 [!code-cpp[HttpWebRequest_Timeout#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_Timeout/CPP/httpwebrequest_timeout.cpp#1)]
 [!code-csharp[HttpWebRequest_Timeout#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_Timeout/CS/httpwebrequest_timeout.cs#1)]
 [!code-vb[HttpWebRequest_Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_Timeout/VB/httpwebrequest_timeout.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ab7fd-985">指定された値が 0 未満で、<see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-985">The value specified is less than zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpWebRequest.ReadWriteTimeout" />
      </Docs>
    </Member>
    <Member MemberName="TransferEncoding">
      <MemberSignature Language="C#" Value="public string TransferEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransferEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.TransferEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransferEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-986">
            <see langword="Transfer-encoding" /> HTTP ヘッダーの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-986">Gets or sets the value of the <see langword="Transfer-encoding" /> HTTP header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-987">
            <see langword="Transfer-encoding" /> HTTP ヘッダーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-987">The value of the <see langword="Transfer-encoding" /> HTTP header.</span>
          </span>
          <span data-ttu-id="ab7fd-988">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-988">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-989">設定する前に、<xref:System.Net.HttpWebRequest.TransferEncoding%2A>プロパティを設定する必要あります最初、<xref:System.Net.HttpWebRequest.SendChunked%2A>プロパティを`true`です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-989">Before you can set the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property, you must first set the <xref:System.Net.HttpWebRequest.SendChunked%2A> property to `true`.</span></span> <span data-ttu-id="ab7fd-990">オフにすると<xref:System.Net.HttpWebRequest.TransferEncoding%2A>に設定して`null`の値に影響を与えません<xref:System.Net.HttpWebRequest.SendChunked%2A>です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-990">Clearing <xref:System.Net.HttpWebRequest.TransferEncoding%2A> by setting it to `null` has no effect on the value of <xref:System.Net.HttpWebRequest.SendChunked%2A>.</span></span>  
  
 <span data-ttu-id="ab7fd-991">割り当てられた値、<xref:System.Net.HttpWebRequest.TransferEncoding%2A>プロパティは、既存の内容を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-991">Values assigned to the <xref:System.Net.HttpWebRequest.TransferEncoding%2A> property replace any existing contents.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-992">このプロパティの値は <xref:System.Net.WebHeaderCollection> に格納されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-992">The value for this property is stored in <xref:System.Net.WebHeaderCollection>.</span></span> <span data-ttu-id="ab7fd-993">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-993">If WebHeaderCollection is set, the property value is lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-994">
            <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> は、<see cref="P:System.Net.HttpWebRequest.SendChunked" /> が <see langword="false" /> である場合に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-994">
              <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set when <see cref="P:System.Net.HttpWebRequest.SendChunked" /> is <see langword="false" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ab7fd-995">
            <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> は "Chunked" 値に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-995">
              <see cref="P:System.Net.HttpWebRequest.TransferEncoding" /> is set to the value "Chunked".</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UnsafeAuthenticatedConnectionSharing">
      <MemberSignature Language="C#" Value="public bool UnsafeAuthenticatedConnectionSharing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeAuthenticatedConnectionSharing" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeAuthenticatedConnectionSharing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeAuthenticatedConnectionSharing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-996">高速 NTLM 認証された接続共有を許可するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-996">Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-997">認証された接続を確立し続ける場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-997">
              <see langword="true" /> to keep the authenticated connection open; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-998">このプロパティの既定値は`false`、それが原因で、現在の接続要求が完了した後、終了します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-998">The default value for this property is `false`, which causes the current connection to be closed after a request is completed.</span></span> <span data-ttu-id="ab7fd-999">アプリケーションを通過する認証シーケンスは新しい要求を発行するたびにします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-999">Your application must go through the authentication sequence every time it issues a new request.</span></span>  
  
 <span data-ttu-id="ab7fd-1000">このプロパティ設定されている場合`true`認証が行われた後、応答を取得するための接続が開いたままです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1000">If this property is set to `true`, the connection used to retrieve the response remains open after the authentication has been performed.</span></span> <span data-ttu-id="ab7fd-1001">このプロパティに設定があることを要求他の例では、`true`再認証なしで接続を使用することがあります。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1001">In this case, other requests that have this property set to `true` may use the connection without re-authenticating.</span></span> <span data-ttu-id="ab7fd-1002">つまり、ユーザー A の接続が認証されたユーザー B 可能性がありますを再利用 A の接続です。ユーザー B の要求がユーザー A の資格情報に基づく</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1002">In other words, if a connection has been authenticated for user A, user B may reuse A's connection; user B's request is fulfilled based on the credentials of user A.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ab7fd-1003">ないこと脆弱性の管理システム内このプロパティを設定するときに確認する必要があります、アプリケーションを認証なしの接続を使用することは、ため`true`です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1003">Because it is possible for an application to use the connection without being authenticated, you need to be sure that there is no administrative vulnerability in your system when setting this property to `true`.</span></span> <span data-ttu-id="ab7fd-1004">アプリケーションは、複数のユーザーの要求を送信する場合 (複数のユーザー アカウントの権限を借用) し、依存するリソースを保護する認証にはこのプロパティを設定`true`以下に示すように接続グループを使用する場合を除き、します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1004">If your application sends requests for multiple users (impersonates multiple user accounts) and relies on authentication to protect resources, do not set this property to `true` unless you use connection groups as described below.</span></span>  
  
 <span data-ttu-id="ab7fd-1005">場合にこのメカニズムを有効化の検討することも、パフォーマンスの問題が発生し、アプリケーションが統合 Windows 認証を使用した Web サーバーで実行されています。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1005">You may want to consider enabling this mechanism if your are having performance problems and your application is running on a Web server with integrated Windows authentication.</span></span>  
  
 <span data-ttu-id="ab7fd-1006">この設定を有効にするには、セキュリティ上のリスクにシステムが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1006">Enabling this setting opens the system to security risks.</span></span> <span data-ttu-id="ab7fd-1007">設定した場合、<xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>プロパティを`true`は次の予防措置を講じてください。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1007">If you set the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property to `true` be sure to take the following precautions:</span></span>  
  
-   <span data-ttu-id="ab7fd-1008">使用して、<xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>プロパティを別のユーザーの接続を管理します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1008">Use the <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A> property to manage connections for different users.</span></span> <span data-ttu-id="ab7fd-1009">認証されていないアプリケーションで、接続の潜在的な使用を回避できます。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1009">This avoids the potential use of the connection by non-authenticated applications.</span></span> <span data-ttu-id="ab7fd-1010">たとえば、ユーザー A がユーザー B とは異なる一意の接続グループ名を持つ必要があります。これは、各ユーザー アカウントの分離のレイヤーを提供します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1010">For example, user A should have a unique connection group name that is different from user B. This provides a layer of isolation for each user account.</span></span>  
  
-   <span data-ttu-id="ab7fd-1011">有効な接続の悪用を回避できるように、保護された環境でアプリケーションを実行します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1011">Run your application in a protected environment to help avoid possible connection exploits.</span></span>  
  
 <span data-ttu-id="ab7fd-1012">バック エンド サーバーを制御する場合、別の方法として可能性がありますを考慮する認証の永続化を無効にすること。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1012">If you control the back-end server, as an alternative you might consider turning off authentication persistence.</span></span> <span data-ttu-id="ab7fd-1013">これほど、パフォーマンスが向上ほうが安全です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1013">This increases performance to a lesser degree, but it is safer.</span></span> <span data-ttu-id="ab7fd-1014">詳細については、MSDN ライブラリで AuthPersistence 検索[ http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1014">For more details, search for AuthPersistence in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ab7fd-1015">両方<xref:System.Net.WebRequest.PreAuthenticate%2A>と<xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>に設定されている`true`、承認ヘッダー。 ですが、安全でないプールから接続を使用して各要求を送信します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1015">If both <xref:System.Net.WebRequest.PreAuthenticate%2A> and <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> are set to `true`, each request is sent using a connection from the unsafe pool, but with an Authorization header.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Net.WebPermission">
          <span data-ttu-id="ab7fd-1016">このプロパティを設定するには、無制限の Web アクセス許可が必要です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-1016">Unrestricted Web permission is required to set this property.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-1017">既定の資格情報が要求と共に送信されるかどうかを制御する <see cref="T:System.Boolean" /> 値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-1017">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether default credentials are sent with requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-1018">既定の資格情報を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-1018">
              <see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ab7fd-1019">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-1019">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab7fd-1020">このプロパティを設定`true`この要求が行われるときに<xref:System.Net.HttpWebRequest>オブジェクト認証が必要、サーバーによって要求された場合、現在ログオンしているユーザーの資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1020">Set this property to `true` when requests made by this <xref:System.Net.HttpWebRequest> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="ab7fd-1021">クライアント アプリケーションでは、これはほとんどのシナリオでは、目的の動作です。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1021">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="ab7fd-1022">中間層アプリケーションの場合、このプロパティを使用する代わりに、ASP.NET アプリケーションなど、通常、設定、<xref:System.Net.HttpWebRequest.Credentials%2A>プロパティが代わりに、要求が行われるクライアントの資格情報をします。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1022">For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.HttpWebRequest.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ab7fd-1023">要求の送信後に、このプロパティを設定しようとしました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-1023">You attempted to set this property after the request was sent.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpWebRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab7fd-1024">
            <see langword="User-agent" /> HTTP ヘッダーの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-1024">Gets or sets the value of the <see langword="User-agent" /> HTTP header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ab7fd-1025">
            <see langword="User-agent" /> HTTP ヘッダーの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-1025">The value of the <see langword="User-agent" /> HTTP header.</span>
          </span>
          <span data-ttu-id="ab7fd-1026">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab7fd-1026">The default value is <see langword="null" />.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="ab7fd-1027">このプロパティの値は <see cref="T:System.Net.WebHeaderCollection" /> に格納されます。</span>
              <span class="sxs-lookup">
                <span data-stu-id="ab7fd-1027">The value for this property is stored in <see cref="T:System.Net.WebHeaderCollection" />.</span>
              </span>
              <span data-ttu-id="ab7fd-1028">WebHeaderCollection が設定されている場合、プロパティ値は失われます。</span>
              <span class="sxs-lookup">
                <span data-stu-id="ab7fd-1028">If WebHeaderCollection is set, the property value is lost.</span>
              </span>
            </para>
          </block>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ab7fd-1029">次のコード例のセット、<xref:System.Net.HttpWebRequest.UserAgent%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ab7fd-1029">The following code example sets the <xref:System.Net.HttpWebRequest.UserAgent%2A> property.</span></span>  
  
 [!code-cpp[HttpWebRequest_UserAgent#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebRequest_UserAgent/CPP/httpwebrequest_useragent.cpp#1)]
 [!code-csharp[HttpWebRequest_UserAgent#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebRequest_UserAgent/CS/httpwebrequest_useragent.cs#1)]
 [!code-vb[HttpWebRequest_UserAgent#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebRequest_UserAgent/VB/httpwebrequest_useragent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>