<Type Name="ICredentialPolicy" FullName="System.Net.ICredentialPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="75e0dbaae9cd90660c201933abdd8b5393701fcb" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69090848" /></Metadata><TypeSignature Language="C#" Value="public interface ICredentialPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICredentialPolicy" />
  <TypeSignature Language="DocId" Value="T:System.Net.ICredentialPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICredentialPolicy" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICredentialPolicy" />
  <TypeSignature Language="F#" Value="type ICredentialPolicy = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Net.WebRequest" /> およびその派生クラスを使用して行われるリソース要求で使用される資格情報ポリシーを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資格情報ポリシーは、Web ページのコンテンツなど、 <xref:System.Net.WebRequest>ネットワークリソースのを送信するときに資格情報を送信するかどうかを決定します。 資格情報が送信されると、クライアント認証を必要とするサーバーは、クライアントの資格情報が必要であることを示す応答を送信するのではなく、要求の受信時にクライアントの認証を試みることができます。 これによってサーバーへのラウンドトリップが保存されますが、このパフォーマンスの向上は、ネットワーク経由での資格情報の送信に固有のセキュリティリスクとバランスを取る必要があります。 移行先サーバーでクライアント認証を必要としない場合は、資格情報を送信しないことをお勧めします。  
  
> [!NOTE]
>  <xref:System.Net.ICredentialPolicy>ポリシーが呼び出されるの<xref:System.Net.WebRequest> <xref:System.Net.WebProxy>は、要求に関連付けられているまたはに、 `null`以外の資格情報がある場合のみです。 このポリシーを設定しても、資格情報が指定されていない要求には影響しません。  
  
 ポリシー<xref:System.Net.ICredentialPolicy>を<xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType>設定するには、プロパティを使用します。 要求<xref:System.Net.IAuthenticationModule>の認証を処理するは、認証を<xref:System.Net.ICredentialPolicy.ShouldSendCredential%2A>実行する前にメソッドを呼び出します。 メソッドがを返す`false`場合、認証は実行されません。  
  
 ポリシー <xref:System.Net.ICredentialPolicy>は、現在のアプリケーション<xref:System.Net.WebRequest>ドメイン内の null 以外の資格情報を持つのすべてのインスタンスに影響します。 個々の要求でポリシーをオーバーライドすることはできません。  
  
   
  
## Examples  
 次のコード例は、特定のホストを対象とする要求に対してのみ資格情報を送信できるようにする、このインターフェイスの実装を示しています。  
  
 [!code-cpp[NclCredPolicy#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#3)]
 [!code-csharp[NclCredPolicy#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ShouldSendCredential">
      <MemberSignature Language="C#" Value="public bool ShouldSendCredential (Uri challengeUri, System.Net.WebRequest request, System.Net.NetworkCredential credential, System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSendCredential(class System.Uri challengeUri, class System.Net.WebRequest request, class System.Net.NetworkCredential credential, class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSendCredential (challengeUri As Uri, request As WebRequest, credential As NetworkCredential, authenticationModule As IAuthenticationModule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSendCredential(Uri ^ challengeUri, System::Net::WebRequest ^ request, System::Net::NetworkCredential ^ credential, System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSendCredential : Uri * System.Net.WebRequest * System.Net.NetworkCredential * System.Net.IAuthenticationModule -&gt; bool" Usage="iCredentialPolicy.ShouldSendCredential (challengeUri, request, credential, authenticationModule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challengeUri" Type="System.Uri" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="challengeUri">要求を受信する <see cref="T:System.Uri" />。</param>
        <param name="request">要求されるリソースを表す <see cref="T:System.Net.WebRequest" />。</param>
        <param name="credential">このメソッドが <see langword="true" /> を返した場合に要求と共に送信される <see cref="T:System.Net.NetworkCredential" />。</param>
        <param name="authenticationModule">認証が必要な場合に認証を実行する <see cref="T:System.Net.IAuthenticationModule" />。</param>
        <summary><see cref="T:System.Net.WebRequest" /> クラスのインスタンスを使用して行われるリソース要求と共にクライアントの資格情報を送信するかどうかを示す <see cref="T:System.Boolean" /> を返します。</summary>
        <returns>要求と共に資格情報が送信される場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebRequest> <xref:System.Net.ICredentialPolicy.ShouldSendCredential%2A> <xref:System.Net.IAuthenticationModule>プロパティを設定してポリシーを指定した後、の認証を処理するは、認証を実行する前にメソッドを呼び出します。 <xref:System.Net.ICredentialPolicy> <xref:System.Net.AuthenticationManager.CredentialPolicy%2A?displayProperty=nameWithType> このメソッドがを`false`返す場合、認証は実行されません。  
  
 元の要求がリダイレクトされた場合、またはプロキシ認証が必要な`challengeUri`場合は、で識別されるリソースが、で<xref:System.Net.WebRequest.RequestUri%2A?displayProperty=nameWithType>指定されている要求されたリソースと異なる可能性があります。 リダイレクトの場合、に`challengeUri`は実際の変換先<xref:System.Uri>が含まれます。 プロキシ認証が必要な場合`challengeUri` 、には、クライアント認証を必要とするプロキシサーバーのアドレスが含まれます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
