<Type Name="FtpWebRequest" FullName="System.Net.FtpWebRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e040e67bb987b245b4ca0c1bcef05f1919abb3a1" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52231682" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FtpWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FtpWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.Net.FtpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FtpWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class FtpWebRequest sealed : System::Net::WebRequest" />
  <TypeSignature Language="F#" Value="type FtpWebRequest = class&#xA;    inherit WebRequest" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ファイル転送プロトコル (FTP: File Transfer Protocol) クライアントを実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

>  [!IMPORTANT]
>  使用することをお勧めしません、`FtpWebRequest`クラスの新しい開発します。 詳細情報と代替`FtpWebRequest`を参照してください[WebRequest を使用してはならない](https://github.com/dotnet/platform-compat/blob/master/docs/DE0003.md)GitHub で。

 インスタンスを取得する<xref:System.Net.FtpWebRequest>を使用して、<xref:System.Net.WebRequest.Create%2A>メソッド。 使用することも、<xref:System.Net.WebClient>クラスをアップロードし、FTP サーバーから情報をダウンロードします。 これらの方法のいずれかを使用して、指定すると、FTP スキームを使用するネットワーク リソース (たとえば、 `"ftp://contoso.com"`)、<xref:System.Net.FtpWebRequest>クラスには、プログラムで FTP サーバーとやり取りする機能が用意されています。  
  
 相対パスまたは絶対 URI を指定します。 フォームの場合は、URI `"ftp://contoso.com/%2fpath"` (%2f がエスケープされた '/')、URI は絶対、および現在のディレクトリが`/path`します。 かどうか、ただし、URI の形式は、 `"ftp://contoso.com/path"`、.NET Framework をまず FTP サーバーにログイン (ユーザー名とパスワードを使用して設定、<xref:System.Net.FtpWebRequest.Credentials%2A>プロパティ)、現在のディレクトリに設定し、 `<UserLoginDirectory>/path`。  
  
 有効なユーザー名が必要し、サーバーまたはサーバーのパスワードは匿名ログオンを許可する必要があります。 設定して、サーバーに接続するために使用する資格情報を指定することができます、<xref:System.Net.FtpWebRequest.Credentials%2A>プロパティまたはメッセージに含めることで、<xref:System.Uri.UserInfo%2A>に渡される URI の部分、<xref:System.Net.WebRequest.Create%2A>メソッド。 含める場合<xref:System.Uri.UserInfo%2A>、URI 内の情報、<xref:System.Net.FtpWebRequest.Credentials%2A>プロパティが指定されたユーザー名とパスワード情報を新しいネットワークの資格情報に設定します。  
  
> [!CAUTION]
>  しない限り、<xref:System.Net.FtpWebRequest.EnableSsl%2A>プロパティは`true`、すべてのデータと、ユーザー名とパスワード情報などのコマンドをクリア テキストでサーバーに送信されます。 資格情報を表示でき、それらを使用して、サーバーに接続するネットワーク トラフィックを監視している人ことができます。 設定する必要がありますを資格情報を要求し、Secure Sockets Layer (SSL) をサポートしている FTP サーバーに接続している場合<xref:System.Net.FtpWebRequest.EnableSsl%2A>に`true`します。  
  
 必要があります<xref:System.Net.WebPermission>FTP リソースにアクセスする場合を<xref:System.Security.SecurityException>例外がスローされます。  
  
 設定して、サーバーに送信する FTP コマンドを指定して、<xref:System.Net.FtpWebRequest.Method%2A>プロパティで定義されている値を<xref:System.Net.WebRequestMethods.Ftp>構造体。 テキスト データを送信するには、変更、<xref:System.Net.FtpWebRequest.UseBinary%2A>プロパティの既定値から (`true`) に`false`します。 詳細と制限事項は、次を参照してください。<xref:System.Net.FtpWebRequest.Method%2A>します。  
  
 使用する場合、<xref:System.Net.FtpWebRequest>オブジェクトをサーバーにファイルをアップロードするファイルの内容は、呼び出すことによって取得要求ストリームに書き込む必要があります、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッドまたは対応する非同期、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>と<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>メソッド。 ストリームに書き込むし、要求を送信する前に、ストリームを閉じる必要があります。  
  
 要求は、呼び出すことによって、サーバーに送信されます、<xref:System.Net.FtpWebRequest.GetResponse%2A>メソッドまたは対応する非同期、<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>と<xref:System.Net.FtpWebRequest.EndGetResponse%2A>メソッド。 要求された操作が完了したら、<xref:System.Net.FtpWebResponse>オブジェクトが返されます。 <xref:System.Net.FtpWebResponse>オブジェクトは、操作と、サーバーからダウンロードされたすべてのデータの状態を示します。  
  
 読み取りまたは書き込みを使用して、サーバーのタイムアウト値を設定することができます、<xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>プロパティ。 タイムアウト期間を超えた場合、呼び出し元のメソッドがスローされます、<xref:System.Net.WebException>で<xref:System.Net.WebExceptionStatus>設定<xref:System.Net.WebExceptionStatus.Timeout>します。  
  
 コマンドが成功した場合は、FTP サーバーからファイルをダウンロードするとき、応答オブジェクトのストリームで要求されたファイルの内容が利用にします。 このストリームを呼び出すことによってアクセスできる、<xref:System.Net.FtpWebResponse.GetResponseStream%2A>メソッド。 詳細については、「<xref:System.Net.FtpWebResponse>」を参照してください。  
  
 場合、<xref:System.Net.FtpWebRequest.Proxy%2A>プロパティが設定直接または構成ファイルでは、FTP サーバーとの通信は、指定されたプロキシを通じて行われます。 指定したプロキシが HTTP プロキシの場合のみ、 <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>、<xref:System.Net.WebRequestMethods.Ftp.ListDirectory>と<xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>コマンドがサポートされています。  
  
 バイナリ コンテンツをダウンロードのみがキャッシュされます。使用して受信したコンテンツは、<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>コマンドと、<xref:System.Net.FtpWebRequest.UseBinary%2A>プロパティに設定`true`します。  
  
 複数<xref:System.Net.FtpWebRequest>s が可能であれば、既存の接続を再利用します。  
  
 FTP プロトコルの詳細については、次を参照してください。 [RFC 959: File Transfer Protocol](https://www.ietf.org/rfc/rfc959.txt)します。  
  
   
  
## Examples  
 次のコード例では、FTP サーバーからファイルの削除を示します。  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 次のコード例に示しますを使用して、FTP サーバーからファイルのダウンロード、<xref:System.Net.WebClient>クラス。  
  
 [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]
 [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  
  
 次のコード例では、FTP サーバーにファイルをアップロードする非同期操作を使用してを示します。  
  
 [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]
 [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission">この要求によって参照されるリソースにアクセスします。 <see cref="F:System.Net.NetworkAccess.Connect" /> (関連する列挙体)</permission>
    <altmember cref="T:System.Net.FtpWebResponse" />
    <altmember cref="T:System.Net.FtpStatusCode" />
    <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.WebClient" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="ftpWebRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>非同期の FTP 操作を終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 実行中の操作がない場合は、このメソッドは何もしません。 ファイル転送が進行中の場合は、このメソッドは、転送を終了します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例では、ユーザーがサーバーにローカル ディレクトリからファイルの非同期のアップロードを終了する方法を示します。  
  
 [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]
 [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="callback" /> デリゲートに渡されます。</param>
        <summary>書き込み用に、要求のコンテンツ ストリームの非同期的なオープンを開始します。</summary>
        <returns>操作の状態を示す <see cref="T:System.IAsyncResult" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出して非同期操作を完了する必要があります、<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>メソッド。 通常、<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>によって参照されるメソッドによって呼び出される`callback`します。 操作の状態を判断するプロパティを確認、<xref:System.IAsyncResult>このメソッドによって返されるオブジェクト。  
  
 このメソッドは、ストリームの待機中にブロックしません。 ブロックは、呼び出す<xref:System.Net.FtpWebRequest.GetRequestStream%2A>このメソッドの代わりにします。  
  
 詳細については、非同期プログラミング モデルを使用して、次を参照してください。 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例では、要求のストリームを取得する非同期操作の開始を示します。 このコード例が示されている例の一部、<xref:System.Net.FtpWebRequest>クラスの概要。  
  
 [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]
 [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このメソッドまたは <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> の前回の呼び出しがまだ完了していません。</exception>
        <exception cref="T:System.Net.WebException">FTP サーバーへの接続を確立できませんでした。</exception>
        <exception cref="T:System.Net.ProtocolViolationException">
          <see cref="P:System.Net.FtpWebRequest.Method" /> プロパティが <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> に設定されていません。</exception>
        <block subset="none" type="usage">
          <para>このメソッドは、ネットワーク トラフィックを生成します。</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">操作に関する情報を格納するユーザー定義のオブジェクト。 このオブジェクトは、操作の完了時に <paramref name="callback" /> デリゲートに渡されます。</param>
        <summary>要求の非同期的な送信と、FTP サーバーからの応答の非同期的な受信を開始します。</summary>
        <returns>操作の状態を示す <see cref="T:System.IAsyncResult" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出して非同期操作を完了する必要があります、<xref:System.Net.FtpWebRequest.EndGetResponse%2A>メソッド。 通常、<xref:System.Net.FtpWebRequest.EndGetResponse%2A>によって参照されるメソッドによって呼び出される`callback`します。 操作の状態を判断するプロパティを確認、<xref:System.IAsyncResult>によって返されるオブジェクト、<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド。  
  
 場合、<xref:System.Net.FtpWebRequest.Proxy%2A>プロパティが設定直接または構成ファイルでは、FTP サーバーとの通信は、指定されたプロキシを通じて行われます。  
  
 <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> サーバーからの応答の待機中にはブロックされません。 ブロックは、呼び出し、<xref:System.Net.FtpWebRequest.GetResponse%2A>メソッドの代わりに<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>します。  
  
 詳細については、非同期プログラミング モデルを使用して、次を参照してください。 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)します。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
> [!NOTE]
>  場合、<xref:System.Net.WebException>がスローされると、使用して、<xref:System.Net.WebException.Response%2A>と<xref:System.Net.WebException.Status%2A>サーバーからの応答を確認するには、例外のプロパティ。  
  
   
  
## Examples  
 次のコード例は、要求のストリームを取得する非同期操作を終了し、応答を取得する要求を開始して示します。 このコード例が示されている例の一部、<xref:System.Net.FtpWebRequest>クラスの概要。  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.FtpWebRequest.GetResponse" /> または <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> は、このインスタンスに対して既に呼び出されています。</exception>
        <block subset="none" type="usage">
          <para>このメソッドは、ネットワーク トラフィックを生成します。</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection with get, set" Usage="System.Net.FtpWebRequest.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FTP サーバーへの暗号化接続を確立するために使用する証明書を取得または設定します。</summary>
        <value>クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クライアント証明書は、初期の SSL 接続のネゴシエーション中に、クライアントの認証に使用されます。 詳細については、「<xref:System.Net.FtpWebRequest.EnableSsl%2A>」を参照してください。  
  
> [!NOTE]
>  .NET Framework では、SSL セッションは、キャッシュが作成されるとき、可能であれば、新しい要求のキャッシュされたセッションを再利用しようとします。 .NET Framework での最初の要素を使用して SSL セッションを再利用しようとすると、 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (1 つないかどうか)、または匿名のセッションを再利用しようと<xref:System.Net.HttpWebRequest.ClientCertificates%2A>が空です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">設定操作に指定された値が <see langword="null" /> です。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の要求を送信するために使用するサービス ポイントが含まれる接続グループの名前を取得または設定します。</summary>
        <value>接続グループ名を格納している <see cref="T:System.String" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接続グループは、特定の接続または接続のセットを一連の要求を関連付けます。 接続グループ内の接続は、同じアプリケーション ドメインから発信される要求に資格情報が、同じと接続グループの名前を指定する要求の要求でのみ再利用できます。 要求で接続グループの名前を指定しなかった場合は、接続グループに関連付けられていない要求されたサーバーへの既存の接続を使用できます。 資格情報が同じしない場合は、既存の接続が閉じられるし、新しい要求を再認証する必要があります。  
  
 接続グループを使用すると、これにより、すべてのユーザーの資格情報で認証された接続を再利用するユーザーの要求のためにパフォーマンスを向上できます。  
  
 変更、<xref:System.Net.FtpWebRequest.ConnectionGroupName%2A>プロパティを呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。  
  
   
  
## Examples  
 次のコード例では、このプロパティの値を取得します。  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md">接続の管理</related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Net.FtpWebRequest" /> クラスによって無視される値を取得または設定します。</summary>
        <value>無視される必要がある <see cref="T:System.Int64" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.ContentLength%2A>の他の実装と互換性のためだけに提供されるプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス。 使用する理由はありません<xref:System.Net.FtpWebRequest.ContentLength%2A>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentOffset">
      <MemberSignature Language="C#" Value="public long ContentOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentOffset" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentOffset { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentOffset : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この要求でダウンロードされるファイル内のバイト オフセットを取得または設定します。</summary>
        <value>ファイルのオフセットをバイト単位で指定する <see cref="T:System.Int64" /> インスタンス。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定、<xref:System.Net.FtpWebRequest.ContentOffset%2A>プロパティ、FTP サーバーからファイルをダウンロードするときにします。 このオフセットは、ダウンロードされるデータの開始を示し、サーバーのファイル内の位置を示します。 は、ファイルの先頭からのバイト数として、オフセットを指定します。最初のバイト オフセットには 0 です。  
  
 設定<xref:System.Net.FtpWebRequest.ContentOffset%2A>により、<xref:System.Net.FtpWebRequest>再起動を送信する (`REST`) サーバーにコマンド。 このコマンドは、サーバーにデータをアップロードする場合は、ほとんどの FTP サーバーの実装によって無視されます。  
  
 変更する<xref:System.Net.FtpWebRequest.ContentOffset%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。  
  
   
  
## Examples  
 次のコード例では、サーバーをローカル ファイルにダウンロードされたデータを追加することから、ファイルのダウンロードの一部を示します。  
  
 [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]
 [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティに対して指定された値が 0 未満です。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.FtpWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
        <value>常に <see cref="T:System.NotSupportedException" /> をスローします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.ContentType%2A>の他の実装と互換性のためだけに提供されるプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス。 使用する理由はありません<xref:System.Net.FtpWebRequest.ContentType%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">コンテンツ タイプの情報が FTP でサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.FtpWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FTP サーバーとの通信に使用する資格情報を取得または設定します。</summary>
        <value>
          <see cref="T:System.Net.ICredentials" /> インスタンス。プロパティが設定されていない場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 匿名ログオンを使用して接続するときに資格情報を指定する必要はありません。 設定する必要があります、<xref:System.Net.FtpWebRequest.Credentials%2A>プロパティの種類の資格情報を使用して<xref:System.Net.NetworkCredential>。 これにより、ユーザー名とパスワードがを読み取り、サーバーに送信します。  
  
> [!CAUTION]
>  しない限り、サーバーに送信されたときに、資格情報が暗号化されていない、<xref:System.Net.FtpWebRequest.EnableSsl%2A>プロパティに設定されて`true`します。  
  
 変更する<xref:System.Net.FtpWebRequest.Credentials%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。  
  
   
  
## Examples  
 次のコード例では、このプロパティの値を取得し、それを使用してユーザー名を表示します。  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">設定操作に指定された値が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Net.ICredentials" /> 以外の種類の <see cref="T:System.Net.NetworkCredential" /> が、設定操作に指定されました。</exception>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべての FTP 要求に対する既定のキャッシュ ポリシーを定義します。</summary>
        <value>FTP 要求に対するキャッシュ ポリシーを定義する <see cref="T:System.Net.Cache.RequestCachePolicy" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して受信するコンテンツのみ、<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>コマンドがキャッシュされます。  
  
 次の表に、FTP でのキャッシュ ポリシーの効果<xref:System.Net.FtpWebRequest>します。  
  
|ポリシー|効果|  
|------------|------------|  
|<xref:System.Net.Cache.RequestCacheLevel.Default>|リソースに新しいもコンテンツの長さは正確では、有効期限、変更、およびコンテンツの長さの属性が存在する場合は、キャッシュされたリソースを返します。|  
|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|サーバーからリソースを返します。|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|コンテンツの長さが存在し、エントリのサイズと一致する場合、キャッシュされたリソースを返しますそれ以外の場合、スロー、<xref:System.Net.WebException>します。|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|コンテンツの長さが指定されたエントリのサイズと一致する場合、キャッシュされたリソースを返しますそれ以外の場合、リソースはサーバーからダウンロードされ、呼び出し元に返されます。|  
|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|キャッシュされたリソースのタイムスタンプが、サーバー上のリソースのタイムスタンプと同じである場合、キャッシュされたリソースを返しますそれ以外の場合、リソースに、サーバーからダウンロード、キャッシュに格納されている、呼び出し元に返されます。|  
|<xref:System.Net.Cache.RequestCacheLevel.Reload>|サーバーからリソースをダウンロード、キャッシュに格納およびリソースを呼び出し元に返します。|  
|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|キャッシュされたリソースが存在する場合は削除されます。 リソースは、サーバーからがダウンロードされ、呼び出し元に返されます。|  
  
> [!NOTE]
>  設定<xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A>構成設定をすべてオーバーライドします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">呼び出し元がこのプロパティを <see langword="null" /> に設定しようとしました。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/0eb0c5cb-dd97-484d-8614-785e88877abb">defaultFtpCachePolicy (ネットワーク設定)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.FtpWebRequest.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SSL 接続を使用する必要があるかどうかを指定する <see cref="T:System.Boolean" /> を取得または設定します。</summary>
        <value>制御およびデータの伝送が暗号化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  しない限り、<xref:System.Net.FtpWebRequest.EnableSsl%2A>プロパティは`true`、すべてのデータと、ユーザー名とパスワード情報などのコマンドをクリア テキストでサーバーに送信されます。 資格情報を表示でき、それらを使用して、サーバーに接続するネットワーク トラフィックを監視している人ことができます。 設定する必要がありますを資格情報を要求し、SSL をサポートしている FTP サーバーに接続している場合<xref:System.Net.FtpWebRequest.EnableSsl%2A>に`true`します。  
  
 `"AUTH TLS"`コマンドは、暗号化されたセッションを要求するサーバーに送信されます。 受信するサーバーでこのコマンドが認識されない場合、<xref:System.Net.WebException>例外。  
  
   
  
## Examples  
 次のコード例では、暗号化された接続を使用して、FTP サーバーからディレクトリ一覧をダウンロードします。  
  
 [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]
 [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">FTP サーバーへの接続が既に確立されています。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="ftpWebRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">操作の開始時に返された <see cref="T:System.IAsyncResult" /> オブジェクト。</param>
        <summary>
          <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> で開始された保留中の非同期操作を終了します。</summary>
        <returns>このインスタンスに関連付けられている、書き込み可能な <see cref="T:System.IO.Stream" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 操作が完了していない場合、<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>メソッドは、操作が完了するまでブロックします。 操作が完了したかどうかを確認するには<xref:System.IAsyncResult.IsCompleted%2A>プロパティを呼び出す前に<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>します。  
  
 、「例外」に記載されている例外だけでなく<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>書き込みストリームを開くときにスローされた例外を再スローします。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例では、要求のストリームを取得する非同期操作の終了を示します。 このコード例が示されている例の一部、<xref:System.Net.FtpWebRequest>クラスの概要。  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> の呼び出しで、<paramref name="asyncResult" /> が取得されませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">このメソッドは、<paramref name="asyncResult" /> で識別される操作に対して既に呼び出されています。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="ftpWebRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">操作の開始時に返された <see cref="T:System.IAsyncResult" />。</param>
        <summary>
          <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> で開始された保留中の非同期操作を終了します。</summary>
        <returns>
          <see cref="T:System.Net.WebResponse" /> インスタンスを格納している <see cref="T:System.Net.FtpWebResponse" /> 参照。 このオブジェクトは、要求に対する FTP サーバーの応答を格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 時に、操作が完了していない場合、<xref:System.Net.FtpWebRequest.EndGetResponse%2A>メソッドが呼び出されると、<xref:System.Net.FtpWebRequest.EndGetResponse%2A>操作が完了するまでブロックします。 ブロックしないように、チェック、<xref:System.IAsyncResult.IsCompleted%2A>プロパティを呼び出す前に<xref:System.Net.FtpWebRequest.EndGetResponse%2A>します。  
  
 、「例外」に記載されている例外だけでなく<xref:System.Net.FtpWebRequest.EndGetResponse%2A>サーバーと通信中にスローされた例外を再スローします。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例では、応答を取得する非同期操作の終了を示します。 このコード例が示されている例の一部、<xref:System.Net.FtpWebRequest>クラスの概要。  
  
 [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]
 [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> の呼び出しで、<paramref name="asyncResult" /> が取得されませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">このメソッドは、<paramref name="asyncResult" /> で識別される操作に対して既に呼び出されています。</exception>
        <exception cref="T:System.Net.WebException">HTTP プロキシの使用中にエラーが発生しました。</exception>
        <block subset="none" type="usage">
          <para>このメソッドは、ネットワーク トラフィックを生成します。</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="M:System.Net.FtpWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="ftpWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>FTP サーバーにデータをアップロードするために使用するストリームを取得します。</summary>
        <returns>現在の要求でサーバーに送信されるデータを格納するために使用する、書き込み可能な <see cref="T:System.IO.Stream" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出しの前に要求のプロパティを設定、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッド。 データのストリームに書き込み後、は、要求を送信する前にストリームを閉じる必要があります。  
  
 設定していない場合、<xref:System.Net.FtpWebRequest.Method%2A>プロパティを<xref:System.Net.WebRequestMethods.Ftp.UploadFile>または<xref:System.Net.WebRequestMethods.Ftp.AppendFile>ストリームを取得することはできません。  
  
 <xref:System.Net.FtpWebRequest.GetRequestStream%2A> ストリームの待機中にブロックします。 これを回避するには、呼び出し、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>メソッドの代わりに<xref:System.Net.FtpWebRequest.GetRequestStream%2A>します。  
  
> [!NOTE]
>  このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
   
  
## Examples  
 次のコード例では、要求のデータ ストリームにファイルをコピーし、データをアップロードして、ファイルに追加するサーバーに要求を送信を示します。  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> が呼び出されており、完了していません。  
  
\- または 
HTTP プロキシが有効で、<see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />、<see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />、または <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> 以外の FTP コマンドを使用しようとしました。</exception>
        <exception cref="T:System.Net.WebException">FTP サーバーへの接続を確立できませんでした。</exception>
        <exception cref="T:System.Net.ProtocolViolationException">
          <see cref="P:System.Net.FtpWebRequest.Method" /> プロパティが、<see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> または <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" /> に設定されていません。</exception>
        <block subset="none" type="usage">
          <para>このメソッドは、ネットワーク トラフィックを生成します。</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="ftpWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>FTP サーバーの応答を返します。</summary>
        <returns>
          <see cref="T:System.Net.WebResponse" /> インスタンスを格納している <see cref="T:System.Net.FtpWebResponse" /> 参照。 このオブジェクトは、要求に対する FTP サーバーの応答を格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 FTP に固有のプロパティにアクセスするにキャストする必要があります、<xref:System.Net.WebResponse>オブジェクトには、このメソッドによって返される<xref:System.Net.FtpWebResponse>します。  
  
 <xref:System.Net.FtpWebRequest.GetResponse%2A> コントロールの接続が確立されていると、し、データ接続を作成することもできます。 <xref:System.Net.FtpWebRequest.GetResponse%2A> 応答を受信するまでブロックします。 これを防ぐためには、操作を行うこの非同期的に呼び出すことによって、<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>と<xref:System.Net.FtpWebRequest.EndGetResponse%2A>メソッドの代わりに<xref:System.Net.FtpWebRequest.GetResponse%2A>します。  
  
 場合、<xref:System.Net.FtpWebRequest.Proxy%2A>プロパティが設定直接または構成ファイルでは、FTP サーバーとの通信は、プロキシを通じて行われます。  
  
 場合、<xref:System.Net.WebException>がスローされると、使用して、<xref:System.Net.WebException.Response%2A>と<xref:System.Net.WebException.Status%2A>サーバーからの応答を確認するには、例外のプロパティ。  
  
 このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。 詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。  
  
> [!NOTE]
>  複数回呼び出す<xref:System.Net.FtpWebRequest.GetResponse%2A>同じ応答オブジェクトを返す要求を再発行されません。  
  
   
  
## Examples  
 次のコード例では、要求のデータ ストリームをファイルをコピーし、データをサーバーにファイルを追加する要求の送信を示します。 例では、<xref:System.Net.FtpWebRequest.GetResponse%2A>に要求を送信し、応答がサーバーによって返されるまでブロックします。  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Net.FtpWebRequest.GetResponse" /> または <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> は、このインスタンスに対して既に呼び出されています。  
  
\- または 
HTTP プロキシが有効で、<see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />、<see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />、または <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> 以外の FTP コマンドを使用しようとしました。</exception>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Net.FtpWebRequest.EnableSsl" /> は <see langword="true" /> に設定されていますが、サーバーはこの機能をサポートしていません。  
  
\- または 
<see cref="P:System.Net.FtpWebRequest.Timeout" /> が指定され、タイムアウトの時間が経過しました。</exception>
        <block subset="none" type="usage">
          <para>このメソッドは、ネットワーク トラフィックを生成します。</para>
        </block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.FtpWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>空の <see cref="T:System.Net.WebHeaderCollection" /> オブジェクトを取得します。</summary>
        <value>空の <see cref="T:System.Net.WebHeaderCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.Headers%2A>の他の実装と互換性のためだけに提供されるプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス。 使用する理由はありません<xref:System.Net.FtpWebRequest.Headers%2A>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.FtpWebRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't support KeepAlive = true")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求の完了後に FTP サーバーへの制御接続を閉じるかどうかを指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
        <value>サーバーへの接続を破棄させない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Net.FtpWebRequest.KeepAlive%2A>プロパティに設定されて`false`を呼び出すときにコントロールを接続が閉じられる、<xref:System.Net.FtpWebResponse.Close%2A>メソッド。  
  
 変更する<xref:System.Net.FtpWebRequest.KeepAlive%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。  
  
   
  
## Examples  
 次のコード例を取得し、指定したプロパティの値が表示されます<xref:System.Net.FtpWebRequest>オブジェクト。  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.FtpWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FTP サーバーに送信するためのコマンドを取得または設定します。</summary>
        <value>サーバーに送信するための FTP コマンドを格納している <see cref="T:System.String" /> 値。 既定値は <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.Method%2A>どのコマンドがサーバーに送信されるプロパティを決定します。 設定する、<xref:System.Net.FtpWebRequest.Method%2A>のパブリック フィールドのメンバーで定義されている文字列を使用して、<xref:System.Net.WebRequestMethods.Ftp>クラス。 文字列が定義されていること、<xref:System.Net.WebRequestMethods.Ftp>クラスは、唯一サポートされているオプション、<xref:System.Net.FtpWebRequest.Method%2A>プロパティ。 設定、<xref:System.Net.FtpWebRequest.Method%2A>プロパティその他の値になります、<xref:System.ArgumentException>例外。  
  
 設定するときに<xref:System.Net.FtpWebRequest.Method%2A>に<xref:System.Net.WebRequestMethods.Ftp.UploadFile>を呼び出す前に行う必要があります、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッド。 これらのメンバーを正しい順序で呼び出しに失敗する、<xref:System.Net.ProtocolViolationException>要求ストリームを取得しようとしたときに例外。  
  
 指定された資格情報、<xref:System.Net.FtpWebRequest>オブジェクトは、指定されたメソッドを実行する権限が必要です。 それ以外の場合は、FTP コマンドが失敗しました。  
  
 コマンドの成否を判断する確認、<xref:System.Net.FtpWebResponse.StatusCode%2A>と<xref:System.Net.FtpWebResponse.StatusDescription%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例では、このプロパティを設定<xref:System.Net.WebRequestMethods.Ftp.DeleteFile>します。  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <exception cref="T:System.ArgumentException">メソッドが無効です。  
  
\- または 
メソッドがサポートされていません。  
  
\- または 
複数のメソッドが指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
        <value>常に <see cref="T:System.NotSupportedException" /> をスローします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.PreAuthenticate%2A>の他の実装と互換性のためだけに提供されるプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">事前認証は FTP でサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.FtpWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FTP サーバーとの通信に使用するプロキシを取得または設定します。</summary>
        <value>FTP サーバーとの通信を行う <see cref="T:System.Net.IWebProxy" /> インスタンス。 .NET Core ではその値は<see langword="null" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

### <a name="on-net-framework"></a>.NET framework

 <xref:System.Net.FtpWebRequest.Proxy%2A>プロパティを識別、<xref:System.Net.IWebProxy>は FTP サーバーと通信するインスタンス。 プロキシは、構成ファイルと、Internet Explorer のローカル エリア ネットワークの設定を使用して、システムによって設定されます。 プロキシを使用しないことを指定するには、次のように設定します。<xref:System.Net.FtpWebRequest.Proxy%2A>によって返されるプロキシ インスタンスを、<xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType>メソッド。 自動プロキシ検出の詳細については、次を参照してください。[自動プロキシ検出](~/docs/framework/network-programming/automatic-proxy-detection.md)します。  
  
 設定する必要があります<xref:System.Net.FtpWebRequest.Proxy%2A>データ要求のストリームを書き込む、または応答を取得する前にします。 変更する<xref:System.Net.FtpWebRequest.Proxy%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。  
  
 <xref:System.Net.FtpWebRequest>クラスには、HTTP と ISA ファイアウォール クライアント プロキシがサポートしています。  
  
 指定したプロキシが HTTP プロキシの場合のみ、 <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>、<xref:System.Net.WebRequestMethods.Ftp.ListDirectory>と<xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>コマンドがサポートされています。  
  
### <a name="on-net-core"></a>.NET Core で   

`FtpWebRequest.Proxy`プロパティがサポートされていません。 プロパティを設定しても効果はありません。 返します。 値のプロパティを取得`null`します。 


## Examples  
 次のコード例では、このプロパティの値が表示されます。  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">このプロパティは <see langword="null" /> に設定できません。</exception>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ストリームからの読み取り時またはストリームへの書き込み時のタイムアウトを取得または設定します。</summary>
        <value>読み取りまたは書き込みがタイムアウトするまでのミリ秒単位の時間。既定値は、300,000 ミリ秒 (5 分) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>によって返されるストリームに書き込むときに使用、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッドまたはによって返されるストリームからの読み取り、<xref:System.Net.FtpWebResponse.GetResponseStream%2A>メソッド。  
  
 具体的には、<xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>プロパティは、タイムアウトの値は、制御、<xref:System.IO.Stream.Read%2A>メソッドによって返されるストリームの読み取りに使用すると、<xref:System.Net.FtpWebResponse.GetResponseStream%2A>メソッドをおよび、 <xref:System.IO.Stream.Write%2A> によって返されるストリームに書き込むために使用するメソッド<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッド。 タイムアウト期間を超えた場合、呼び出し元のメソッドがスローされます、<xref:System.Net.WebException>で<xref:System.Net.WebExceptionStatus>設定<xref:System.Net.WebExceptionStatus.Timeout>します。  
  
 要求が完了するまで待機する時間を指定するには、使用、<xref:System.Net.FtpWebRequest.Timeout%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">要求は既に送信されています。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">設定操作に指定された値は 0 以下であり、<see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public string RenameTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenameTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RenameTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RenameTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RenameTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenameTo : string with get, set" Usage="System.Net.FtpWebRequest.RenameTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>名前を変更されたファイルの新しい名前を取得または設定します。</summary>
        <value>名前を変更されたファイルの新しい名前。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">設定操作として指定した値が、<see langword="null" /> または空の文字列です。</exception>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.FtpWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスで要求された URI を取得します。</summary>
        <value>ファイル転送プロトコルを使用してアクセスされるリソースを識別する <see cref="T:System.Uri" /> インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.Net.FtpWebRequest.RequestUri%2A>プロパティは、URI ときに指定された、<xref:System.Net.WebRequest.Create%2A>このインスタンスを取得するメソッドが呼び出されました。  
  
   
  
## Examples  
 次のコード例では、このプロパティの値が表示されます。  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.FtpWebRequest.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>FTP サーバーに接続するために使用する <see cref="T:System.Net.ServicePoint" /> オブジェクトを取得します。</summary>
        <value>接続の動作をカスタマイズするために使用できる <see cref="T:System.Net.ServicePoint" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ない場合は<xref:System.Net.ServicePoint>オブジェクトが存在する場合、FTP サーバーの 1 つ作成します。 FTP サーバーを開くことができる接続の最大数を設定するには、設定、<xref:System.Net.ServicePoint.ConnectionLimit%2A>のプロパティ、<xref:System.Net.ServicePoint>このプロパティによって返されるインスタンス。  
  
   
  
## Examples  
 次のコード例では、要求からサービス ポイントを取得し、接続の最大数を 1 に設定します。  
  
 [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]
 [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.FtpWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求に対するミリ秒単位の待機時間を取得または設定します。</summary>
        <value>要求がタイムアウトになるまでのミリ秒単位の待機期間を格納している <see cref="T:System.Int32" /> 値。既定値は <see cref="F:System.Threading.Timeout.Infinite" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 無限の値を指定するには、設定、<xref:System.Net.FtpWebRequest.Timeout%2A>プロパティを<xref:System.Threading.Timeout.Infinite>(-1)。 これが既定値です。  
  
 <xref:System.Net.FtpWebRequest.Timeout%2A> 同期要求が行われたミリ秒数には、<xref:System.Net.FtpWebRequest.GetResponse%2A>メソッドをおよび応答の待機、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッドは、ストリームまで待機します。 タイムアウト期間内のリソースが応答しない場合、要求がスローされます、<xref:System.Net.WebException>で、<xref:System.Net.WebException.Status%2A>プロパティに設定<xref:System.Net.WebExceptionStatus.Timeout>します。  
  
 変更する<xref:System.Net.FtpWebRequest.Timeout%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。  
  
 ドメイン ネーム システム (DNS) クエリには、最大 15 秒を返すまたはタイムアウトをかかる場合があります。設定すると、要求には、解決を必要とするホスト名が含まれています。<xref:System.Net.FtpWebRequest.Timeout%2A>値より小さい 15 秒間かかる場合があります 15 秒以上前に、<xref:System.Net.WebException>が要求のタイムアウトを示すためにスローされます。  
  
   
  
## Examples  
 次のコード例では、このプロパティを設定します。  
  
 [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]
 [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値が 0 未満のため <see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</exception>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseBinary">
      <MemberSignature Language="C#" Value="public bool UseBinary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBinary" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseBinary" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBinary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseBinary { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseBinary : bool with get, set" Usage="System.Net.FtpWebRequest.UseBinary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ファイル転送のデータ型を指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
        <value>
          <see langword="true" /> の場合は、転送されるデータがバイナリであることがサーバーに示されます。<see langword="false" /> の場合は、データがテキストであることが示されます。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 バイナリを送信する場合、このプロパティに設定、画像などのデータを`true`します。 テキストを送信する場合は、プロパティを設定`false`します。 指定する`true`により、<xref:System.Net.FtpWebRequest>を送信する、`"TYPE I"`サーバーにコマンド。 指定する`false`により、<xref:System.Net.FtpWebRequest>を送信する、`"Type A"`サーバーにコマンド。 FTP サーバーには、これらのコマンドを無視できます。  
  
 変更する<xref:System.Net.FtpWebRequest.UseBinary%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。  
  
   
  
## Examples  
 次のコード例を取得し、指定したプロパティの値が表示されます<xref:System.Net.FtpWebRequest>オブジェクト。  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>常に <see cref="T:System.NotSupportedException" /> をスローします。</summary>
        <value>常に <see cref="T:System.NotSupportedException" /> をスローします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>の他の実装と互換性のためだけに提供されるプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス。 使用する理由はありません<xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">既定の資格情報が FTP でサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="UsePassive">
      <MemberSignature Language="C#" Value="public bool UsePassive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePassive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UsePassive" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePassive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePassive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePassive : bool with get, set" Usage="System.Net.FtpWebRequest.UsePassive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント アプリケーションのデータ転送処理の動作を取得または設定します。</summary>
        <value>クライアント アプリケーションのデータ転送処理がデータ ポートで接続を待機する場合は <see langword="false" />。それ以外で、クライアントがデータ ポートで接続を開始する必要がある場合は <see langword="true" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定、<xref:System.Net.FtpWebRequest.UsePassive%2A>プロパティを`true`送信、"`PASV"`サーバーにコマンド。 このコマンドは、データ ポートでリッスンおよび転送コマンドの受信時に開始するのではなく、接続を待機するサーバーを要求します。  
  
 使用して指定されている動作の説明については<xref:System.Net.FtpWebRequest.UsePassive%2A>を参照してください[RFC 959:「ファイル転送プロトコル」、セクション 3.2:「データ接続を確立する」と 4.1.2:「転送パラメーター コマンド」](https://www.ietf.org/rfc/rfc959.txt)します。  
  
 変更する<xref:System.Net.FtpWebRequest.UsePassive%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。  
  
 場合<xref:System.Net.FtpWebRequest.UsePassive%2A>に設定されている`true`、FTP サーバーは、ファイルのサイズを送信しない可能性があります、およびダウンロードの進行状況が 0 を常になります。 場合<xref:System.Net.FtpWebRequest.UsePassive%2A>に設定されている`false`ファイアウォールの警告を生成し、ファイルのダウンロードをブロックできます。  
  
   
  
## Examples  
 次のコード例を取得し、指定したプロパティの値が表示されます<xref:System.Net.FtpWebRequest>オブジェクト。  
  
 [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]
 [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
  </Members>
</Type>