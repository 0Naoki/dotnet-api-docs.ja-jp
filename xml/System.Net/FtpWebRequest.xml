<Type Name="FtpWebRequest" FullName="System.Net.FtpWebRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="41203164dafb005712242dd59c047f67c0d5a50e" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53390575" /></Metadata><TypeSignature Language="C#" Value="public sealed class FtpWebRequest : System.Net.WebRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FtpWebRequest extends System.Net.WebRequest" />
  <TypeSignature Language="DocId" Value="T:System.Net.FtpWebRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FtpWebRequest&#xA;Inherits WebRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class FtpWebRequest sealed : System::Net::WebRequest" />
  <TypeSignature Language="F#" Value="type FtpWebRequest = class&#xA;    inherit WebRequest" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.WebRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="40452-101">ファイル転送プロトコル (FTP: File Transfer Protocol) クライアントを実装します。</span><span class="sxs-lookup"><span data-stu-id="40452-101">Implements a File Transfer Protocol (FTP) client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
>  <span data-ttu-id="40452-102">使用することをお勧めしません、`FtpWebRequest`クラスの新しい開発します。</span><span class="sxs-lookup"><span data-stu-id="40452-102">We don't recommend that you use the `FtpWebRequest` class for new development.</span></span> <span data-ttu-id="40452-103">詳細情報と代替`FtpWebRequest`を参照してください[WebRequest を使用してはならない](https://github.com/dotnet/platform-compat/blob/master/docs/DE0003.md)GitHub で。</span><span class="sxs-lookup"><span data-stu-id="40452-103">For more information and alternatives to `FtpWebRequest`, see [WebRequest shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0003.md) on GitHub.</span></span>

 <span data-ttu-id="40452-104">インスタンスを取得する<xref:System.Net.FtpWebRequest>を使用して、<xref:System.Net.WebRequest.Create%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-104">To obtain an instance of <xref:System.Net.FtpWebRequest>, use the <xref:System.Net.WebRequest.Create%2A> method.</span></span> <span data-ttu-id="40452-105">使用することも、<xref:System.Net.WebClient>クラスをアップロードし、FTP サーバーから情報をダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="40452-105">You can also use the <xref:System.Net.WebClient> class to upload and download information from an FTP server.</span></span> <span data-ttu-id="40452-106">これらの方法のいずれかを使用して、指定すると、FTP スキームを使用するネットワーク リソース (たとえば、 `"ftp://contoso.com"`)、<xref:System.Net.FtpWebRequest>クラスには、プログラムで FTP サーバーとやり取りする機能が用意されています。</span><span class="sxs-lookup"><span data-stu-id="40452-106">Using either of these approaches, when you specify a network resource that uses the FTP scheme (for example, `"ftp://contoso.com"`) the <xref:System.Net.FtpWebRequest> class provides the ability to programmatically interact with FTP servers.</span></span>  
  
 <span data-ttu-id="40452-107">相対パスまたは絶対 URI を指定します。</span><span class="sxs-lookup"><span data-stu-id="40452-107">The URI may be relative or absolute.</span></span> <span data-ttu-id="40452-108">フォームの場合は、URI `"ftp://contoso.com/%2fpath"` (%2f がエスケープされた '/')、URI は絶対、および現在のディレクトリが`/path`します。</span><span class="sxs-lookup"><span data-stu-id="40452-108">If the URI is of the form `"ftp://contoso.com/%2fpath"` (%2f is an escaped '/'), then the URI is absolute, and the current directory is `/path`.</span></span> <span data-ttu-id="40452-109">かどうか、ただし、URI の形式は、 `"ftp://contoso.com/path"`、.NET Framework をまず FTP サーバーにログイン (ユーザー名とパスワードを使用して設定、<xref:System.Net.FtpWebRequest.Credentials%2A>プロパティ)、現在のディレクトリに設定し、 `<UserLoginDirectory>/path`。</span><span class="sxs-lookup"><span data-stu-id="40452-109">If, however, the URI is of the form `"ftp://contoso.com/path"`, first the .NET Framework logs into the FTP server (using the user name and password set by the <xref:System.Net.FtpWebRequest.Credentials%2A> property), then the current directory is set to `<UserLoginDirectory>/path`.</span></span>  
  
 <span data-ttu-id="40452-110">有効なユーザー名が必要し、サーバーまたはサーバーのパスワードは匿名ログオンを許可する必要があります。</span><span class="sxs-lookup"><span data-stu-id="40452-110">You must have a valid user name and password for the server or the server must allow anonymous logon.</span></span> <span data-ttu-id="40452-111">設定して、サーバーに接続するために使用する資格情報を指定することができます、<xref:System.Net.FtpWebRequest.Credentials%2A>プロパティまたはメッセージに含めることで、<xref:System.Uri.UserInfo%2A>に渡される URI の部分、<xref:System.Net.WebRequest.Create%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-111">You can specify the credentials used to connect to the server by setting the <xref:System.Net.FtpWebRequest.Credentials%2A> property or you can include them in the <xref:System.Uri.UserInfo%2A> portion of the URI passed to the <xref:System.Net.WebRequest.Create%2A> method.</span></span> <span data-ttu-id="40452-112">含める場合<xref:System.Uri.UserInfo%2A>、URI 内の情報、<xref:System.Net.FtpWebRequest.Credentials%2A>プロパティが指定されたユーザー名とパスワード情報を新しいネットワークの資格情報に設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-112">If you include <xref:System.Uri.UserInfo%2A> information in the URI, the <xref:System.Net.FtpWebRequest.Credentials%2A> property is set to a new network credential with the specified user name and password information.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="40452-113">しない限り、<xref:System.Net.FtpWebRequest.EnableSsl%2A>プロパティは`true`、すべてのデータと、ユーザー名とパスワード情報などのコマンドをクリア テキストでサーバーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="40452-113">Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text.</span></span> <span data-ttu-id="40452-114">資格情報を表示でき、それらを使用して、サーバーに接続するネットワーク トラフィックを監視している人ことができます。</span><span class="sxs-lookup"><span data-stu-id="40452-114">Anyone monitoring network traffic can view your credentials and use them to connect to the server.</span></span> <span data-ttu-id="40452-115">設定する必要がありますを資格情報を要求し、Secure Sockets Layer (SSL) をサポートしている FTP サーバーに接続している場合<xref:System.Net.FtpWebRequest.EnableSsl%2A>に`true`します。</span><span class="sxs-lookup"><span data-stu-id="40452-115">If you are connecting to an FTP server that requires credentials and supports Secure Sockets Layer (SSL), you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.</span></span>  
  
 <span data-ttu-id="40452-116">必要があります<xref:System.Net.WebPermission>FTP リソースにアクセスする場合を<xref:System.Security.SecurityException>例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="40452-116">You must have <xref:System.Net.WebPermission> to access the FTP resource; otherwise, a <xref:System.Security.SecurityException> exception is thrown.</span></span>  
  
 <span data-ttu-id="40452-117">設定して、サーバーに送信する FTP コマンドを指定して、<xref:System.Net.FtpWebRequest.Method%2A>プロパティで定義されている値を<xref:System.Net.WebRequestMethods.Ftp>構造体。</span><span class="sxs-lookup"><span data-stu-id="40452-117">Specify the FTP command to send to the server by setting the <xref:System.Net.FtpWebRequest.Method%2A> property to a value defined in the <xref:System.Net.WebRequestMethods.Ftp> structure.</span></span> <span data-ttu-id="40452-118">テキスト データを送信するには、変更、<xref:System.Net.FtpWebRequest.UseBinary%2A>プロパティの既定値から (`true`) に`false`します。</span><span class="sxs-lookup"><span data-stu-id="40452-118">To transmit text data, change the <xref:System.Net.FtpWebRequest.UseBinary%2A> property from its default value (`true`) to `false`.</span></span> <span data-ttu-id="40452-119">詳細と制限事項は、次を参照してください。<xref:System.Net.FtpWebRequest.Method%2A>します。</span><span class="sxs-lookup"><span data-stu-id="40452-119">For details and restrictions, see <xref:System.Net.FtpWebRequest.Method%2A>.</span></span>  
  
 <span data-ttu-id="40452-120">使用する場合、<xref:System.Net.FtpWebRequest>オブジェクトをサーバーにファイルをアップロードするファイルの内容は、呼び出すことによって取得要求ストリームに書き込む必要があります、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッドまたは対応する非同期、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>と<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-120">When using an <xref:System.Net.FtpWebRequest> object to upload a file to a server, you must write the file content to the request stream obtained by calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> and <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> methods.</span></span> <span data-ttu-id="40452-121">ストリームに書き込むし、要求を送信する前に、ストリームを閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="40452-121">You must write to the stream and close the stream before sending the request.</span></span>  
  
 <span data-ttu-id="40452-122">要求は、呼び出すことによって、サーバーに送信されます、<xref:System.Net.FtpWebRequest.GetResponse%2A>メソッドまたは対応する非同期、<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>と<xref:System.Net.FtpWebRequest.EndGetResponse%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-122">Requests are sent to the server by calling the <xref:System.Net.FtpWebRequest.GetResponse%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods.</span></span> <span data-ttu-id="40452-123">要求された操作が完了したら、<xref:System.Net.FtpWebResponse>オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="40452-123">When the requested operation completes, an <xref:System.Net.FtpWebResponse> object is returned.</span></span> <span data-ttu-id="40452-124"><xref:System.Net.FtpWebResponse>オブジェクトは、操作と、サーバーからダウンロードされたすべてのデータの状態を示します。</span><span class="sxs-lookup"><span data-stu-id="40452-124">The <xref:System.Net.FtpWebResponse> object provides the status of the operation and any data downloaded from the server.</span></span>  
  
 <span data-ttu-id="40452-125">読み取りまたは書き込みを使用して、サーバーのタイムアウト値を設定することができます、<xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="40452-125">You can set a time-out value for reading or writing to the server by using the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property.</span></span> <span data-ttu-id="40452-126">タイムアウト期間を超えた場合、呼び出し元のメソッドがスローされます、<xref:System.Net.WebException>で<xref:System.Net.WebExceptionStatus>設定<xref:System.Net.WebExceptionStatus.Timeout>します。</span><span class="sxs-lookup"><span data-stu-id="40452-126">If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.</span></span>  
  
 <span data-ttu-id="40452-127">コマンドが成功した場合は、FTP サーバーからファイルをダウンロードするとき、応答オブジェクトのストリームで要求されたファイルの内容が利用にします。</span><span class="sxs-lookup"><span data-stu-id="40452-127">When downloading a file from an FTP server, if the command was successful, the contents of the requested file are available in the response object's stream.</span></span> <span data-ttu-id="40452-128">このストリームを呼び出すことによってアクセスできる、<xref:System.Net.FtpWebResponse.GetResponseStream%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-128">You can access this stream by calling the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method.</span></span> <span data-ttu-id="40452-129">詳細については、「<xref:System.Net.FtpWebResponse>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="40452-129">For more information, see <xref:System.Net.FtpWebResponse>.</span></span>  
  
 <span data-ttu-id="40452-130">場合、<xref:System.Net.FtpWebRequest.Proxy%2A>プロパティが設定直接または構成ファイルでは、FTP サーバーとの通信は、指定されたプロキシを通じて行われます。</span><span class="sxs-lookup"><span data-stu-id="40452-130">If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy.</span></span> <span data-ttu-id="40452-131">指定したプロキシが HTTP プロキシの場合のみ、 <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>、<xref:System.Net.WebRequestMethods.Ftp.ListDirectory>と<xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>コマンドがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="40452-131">If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.</span></span>  
  
 <span data-ttu-id="40452-132">バイナリ コンテンツをダウンロードのみがキャッシュされます。使用して受信したコンテンツは、<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>コマンドと、<xref:System.Net.FtpWebRequest.UseBinary%2A>プロパティに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="40452-132">Only downloaded binary content is cached; that is, content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command with the <xref:System.Net.FtpWebRequest.UseBinary%2A> property set to `true`.</span></span>  
  
 <span data-ttu-id="40452-133">複数<xref:System.Net.FtpWebRequest>s が可能であれば、既存の接続を再利用します。</span><span class="sxs-lookup"><span data-stu-id="40452-133">Multiple <xref:System.Net.FtpWebRequest>s reuse existing connections, if possible.</span></span>  
  
 <span data-ttu-id="40452-134">FTP プロトコルの詳細については、次を参照してください。 [RFC 959。ファイル転送プロトコル](https://www.ietf.org/rfc/rfc959.txt)します。</span><span class="sxs-lookup"><span data-stu-id="40452-134">For more information about the FTP protocol, see [RFC 959: File Transfer Protocol](https://www.ietf.org/rfc/rfc959.txt).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-135">次のコード例では、FTP サーバーからファイルの削除を示します。</span><span class="sxs-lookup"><span data-stu-id="40452-135">The following code example demonstrates deleting a file from an FTP server.</span></span>  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 <span data-ttu-id="40452-136">次のコード例に示しますを使用して、FTP サーバーからファイルのダウンロード、<xref:System.Net.WebClient>クラス。</span><span class="sxs-lookup"><span data-stu-id="40452-136">The following code example demonstrates downloading a file from an FTP server by using the <xref:System.Net.WebClient> class.</span></span>  
  
 [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]
 [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  
  
 <span data-ttu-id="40452-137">次のコード例では、FTP サーバーにファイルをアップロードする非同期操作を使用してを示します。</span><span class="sxs-lookup"><span data-stu-id="40452-137">The following code example demonstrates using asynchronous operations to upload a file to an FTP server.</span></span>  
  
 [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]
 [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.WebPermission"><span data-ttu-id="40452-138">この要求によって参照されるリソースにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="40452-138">for accessing the resource referenced by this request.</span></span> <span data-ttu-id="40452-139"><see cref="F:System.Net.NetworkAccess.Connect" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="40452-139">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" />.</span></span></permission>
    <altmember cref="T:System.Net.FtpWebResponse" />
    <altmember cref="T:System.Net.FtpStatusCode" />
    <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Net.WebResponse" />
    <altmember cref="T:System.Net.WebClient" />
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public override void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Abort();" />
      <MemberSignature Language="F#" Value="override this.Abort : unit -&gt; unit" Usage="ftpWebRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40452-140">非同期の FTP 操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="40452-140">Terminates an asynchronous FTP operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-141">実行中の操作がない場合は、このメソッドは何もしません。</span><span class="sxs-lookup"><span data-stu-id="40452-141">If there is no operation in progress, this method does nothing.</span></span> <span data-ttu-id="40452-142">ファイル転送が進行中の場合は、このメソッドは、転送を終了します。</span><span class="sxs-lookup"><span data-stu-id="40452-142">If a file transfer is in progress, this method terminates the transfer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="40452-143">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="40452-143">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="40452-144">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="40452-144">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-145">次のコード例では、ユーザーがサーバーにローカル ディレクトリからファイルの非同期のアップロードを終了する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="40452-145">The following code example demonstrates how the user can terminate an asynchronous upload of a file from the local directory to the server.</span></span>  
  
 [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]
 [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetRequestStream">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetRequestStream(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetRequestStream (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetRequestStream(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetRequestStream : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetRequestStream (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="40452-146">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="40452-146">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="40452-147">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40452-147">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="40452-148">このオブジェクトは、操作の完了時に <paramref name="callback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="40452-148">This object is passed to the <paramref name="callback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="40452-149">書き込み用に、要求のコンテンツ ストリームの非同期的なオープンを開始します。</span><span class="sxs-lookup"><span data-stu-id="40452-149">Begins asynchronously opening a request's content stream for writing.</span></span></summary>
        <returns><span data-ttu-id="40452-150">操作の状態を示す <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="40452-150">An <see cref="T:System.IAsyncResult" /> instance that indicates the status of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-151">呼び出して非同期操作を完了する必要があります、<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-151">You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method.</span></span> <span data-ttu-id="40452-152">通常、<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>によって参照されるメソッドによって呼び出される`callback`します。</span><span class="sxs-lookup"><span data-stu-id="40452-152">Typically, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> is called by the method referenced by `callback`.</span></span> <span data-ttu-id="40452-153">操作の状態を判断するプロパティを確認、<xref:System.IAsyncResult>このメソッドによって返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40452-153">To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by this method.</span></span>  
  
 <span data-ttu-id="40452-154">このメソッドは、ストリームの待機中にブロックしません。</span><span class="sxs-lookup"><span data-stu-id="40452-154">This method does not block while waiting for the stream.</span></span> <span data-ttu-id="40452-155">ブロックは、呼び出す<xref:System.Net.FtpWebRequest.GetRequestStream%2A>このメソッドの代わりにします。</span><span class="sxs-lookup"><span data-stu-id="40452-155">To block, call <xref:System.Net.FtpWebRequest.GetRequestStream%2A> in place of this method.</span></span>  
  
 <span data-ttu-id="40452-156">詳細については、非同期プログラミング モデルを使用して、次を参照してください。 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)します。</span><span class="sxs-lookup"><span data-stu-id="40452-156">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="40452-157">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="40452-157">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="40452-158">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="40452-158">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-159">次のコード例では、要求のストリームを取得する非同期操作の開始を示します。</span><span class="sxs-lookup"><span data-stu-id="40452-159">The following code example demonstrates beginning an asynchronous operation to get a request's stream.</span></span> <span data-ttu-id="40452-160">このコード例が示されている例の一部、<xref:System.Net.FtpWebRequest>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="40452-160">This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.</span></span>  
  
 [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]
 [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-161">このメソッドまたは <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> の前回の呼び出しがまだ完了していません。</span><span class="sxs-lookup"><span data-stu-id="40452-161">A previous call to this method or <see cref="M:System.Net.FtpWebRequest.GetRequestStream" /> has not yet completed.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="40452-162">FTP サーバーへの接続を確立できませんでした。</span><span class="sxs-lookup"><span data-stu-id="40452-162">A connection to the FTP server could not be established.</span></span></exception>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="40452-163"><see cref="P:System.Net.FtpWebRequest.Method" /> プロパティが <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="40452-163">The <see cref="P:System.Net.FtpWebRequest.Method" /> property is not set to <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="40452-164">このメソッドは、ネットワーク トラフィックを生成します。</span><span class="sxs-lookup"><span data-stu-id="40452-164">This method generates network traffic.</span></span></para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetResponse">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginGetResponse(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginGetResponse (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginGetResponse(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginGetResponse : AsyncCallback * obj -&gt; IAsyncResult" Usage="ftpWebRequest.BeginGetResponse (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="40452-165">操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="40452-165">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="40452-166">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40452-166">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="40452-167">このオブジェクトは、操作の完了時に <paramref name="callback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="40452-167">This object is passed to the <paramref name="callback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="40452-168">要求の非同期的な送信と、FTP サーバーからの応答の非同期的な受信を開始します。</span><span class="sxs-lookup"><span data-stu-id="40452-168">Begins sending a request and receiving a response from an FTP server asynchronously.</span></span></summary>
        <returns><span data-ttu-id="40452-169">操作の状態を示す <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="40452-169">An <see cref="T:System.IAsyncResult" /> instance that indicates the status of the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-170">呼び出して非同期操作を完了する必要があります、<xref:System.Net.FtpWebRequest.EndGetResponse%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-170">You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method.</span></span> <span data-ttu-id="40452-171">通常、<xref:System.Net.FtpWebRequest.EndGetResponse%2A>によって参照されるメソッドによって呼び出される`callback`します。</span><span class="sxs-lookup"><span data-stu-id="40452-171">Typically, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> is called by the method referenced by `callback`.</span></span> <span data-ttu-id="40452-172">操作の状態を判断するプロパティを確認、<xref:System.IAsyncResult>によって返されるオブジェクト、<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-172">To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method.</span></span>  
  
 <span data-ttu-id="40452-173">場合、<xref:System.Net.FtpWebRequest.Proxy%2A>プロパティが設定直接または構成ファイルでは、FTP サーバーとの通信は、指定されたプロキシを通じて行われます。</span><span class="sxs-lookup"><span data-stu-id="40452-173">If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy.</span></span>  
  
 <span data-ttu-id="40452-174"><xref:System.Net.FtpWebRequest.BeginGetResponse%2A> サーバーからの応答の待機中にはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="40452-174"><xref:System.Net.FtpWebRequest.BeginGetResponse%2A> does not block while waiting for the response from the server.</span></span> <span data-ttu-id="40452-175">ブロックは、呼び出し、<xref:System.Net.FtpWebRequest.GetResponse%2A>メソッドの代わりに<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>します。</span><span class="sxs-lookup"><span data-stu-id="40452-175">To block, call the <xref:System.Net.FtpWebRequest.GetResponse%2A> method in place of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.</span></span>  
  
 <span data-ttu-id="40452-176">詳細については、非同期プログラミング モデルを使用して、次を参照してください。 [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)します。</span><span class="sxs-lookup"><span data-stu-id="40452-176">For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="40452-177">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="40452-177">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="40452-178">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="40452-178">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="40452-179">場合、<xref:System.Net.WebException>がスローされると、使用して、<xref:System.Net.WebException.Response%2A>と<xref:System.Net.WebException.Status%2A>サーバーからの応答を確認するには、例外のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="40452-179">If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-180">次のコード例は、要求のストリームを取得する非同期操作を終了し、応答を取得する要求を開始して示します。</span><span class="sxs-lookup"><span data-stu-id="40452-180">The following code example demonstrates ending an asynchronous operation to get a request's stream, and then starting a request to get the response.</span></span> <span data-ttu-id="40452-181">このコード例が示されている例の一部、<xref:System.Net.FtpWebRequest>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="40452-181">This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.</span></span>  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-182"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> または <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> は、このインスタンスに対して既に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="40452-182"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> or <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> has already been called for this instance.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="40452-183">このメソッドは、ネットワーク トラフィックを生成します。</span><span class="sxs-lookup"><span data-stu-id="40452-183">This method generates network traffic.</span></span></para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); void set(System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection with get, set" Usage="System.Net.FtpWebRequest.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-184">FTP サーバーへの暗号化接続を確立するために使用する証明書を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-184">Gets or sets the certificates used for establishing an encrypted connection to the FTP server.</span></span></summary>
        <value><span data-ttu-id="40452-185">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40452-185">An <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> object that contains the client certificates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-186">クライアント証明書は、初期の SSL 接続のネゴシエーション中に、クライアントの認証に使用されます。</span><span class="sxs-lookup"><span data-stu-id="40452-186">Client certificates are used to authenticate the client during the initial SSL connection negotiation.</span></span> <span data-ttu-id="40452-187">詳細については、「<xref:System.Net.FtpWebRequest.EnableSsl%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="40452-187">For more information, see <xref:System.Net.FtpWebRequest.EnableSsl%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="40452-188">.NET Framework では、SSL セッションは、キャッシュが作成されるとき、可能であれば、新しい要求のキャッシュされたセッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="40452-188">The .NET Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="40452-189">.NET Framework での最初の要素を使用して SSL セッションを再利用しようとすると、 <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (1 つないかどうか)、または匿名のセッションを再利用しようと<xref:System.Net.HttpWebRequest.ClientCertificates%2A>が空です。</span><span class="sxs-lookup"><span data-stu-id="40452-189">When attempting to reuse an SSL session, the .NET Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous session if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="40452-190">設定操作に指定された値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="40452-190">The value specified for a set operation is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionGroupName">
      <MemberSignature Language="C#" Value="public override string ConnectionGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionGroupName : string with get, set" Usage="System.Net.FtpWebRequest.ConnectionGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-191">現在の要求を送信するために使用するサービス ポイントが含まれる接続グループの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-191">Gets or sets the name of the connection group that contains the service point used to send the current request.</span></span></summary>
        <value><span data-ttu-id="40452-192">接続グループ名を格納している <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="40452-192">A <see cref="T:System.String" /> value that contains a connection group name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-193">接続グループは、特定の接続または接続のセットを一連の要求を関連付けます。</span><span class="sxs-lookup"><span data-stu-id="40452-193">Connection groups associate a set of requests with a particular connection or set of connections.</span></span> <span data-ttu-id="40452-194">接続グループ内の接続は、同じアプリケーション ドメインから発信される要求に資格情報が、同じと接続グループの名前を指定する要求の要求でのみ再利用できます。</span><span class="sxs-lookup"><span data-stu-id="40452-194">The connections in a connection group can be reused only by requests originating in the same application domain, when the credentials on the request are the same and the request specifies the connection group name.</span></span> <span data-ttu-id="40452-195">要求で接続グループの名前を指定しなかった場合は、接続グループに関連付けられていない要求されたサーバーへの既存の接続を使用できます。</span><span class="sxs-lookup"><span data-stu-id="40452-195">When a request does not specify a connection group name, any existing connection to the requested server that is not associated with a connection group can be used.</span></span> <span data-ttu-id="40452-196">資格情報が同じしない場合は、既存の接続が閉じられるし、新しい要求を再認証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="40452-196">When the credentials are not the same, the existing connection is closed and the new request must be reauthenticated.</span></span>  
  
 <span data-ttu-id="40452-197">接続グループを使用すると、これにより、すべてのユーザーの資格情報で認証された接続を再利用するユーザーの要求のためにパフォーマンスを向上できます。</span><span class="sxs-lookup"><span data-stu-id="40452-197">Using connection groups can improve performance because this allows all of the requests for a user to reuse the connection authenticated with the user's credentials.</span></span>  
  
 <span data-ttu-id="40452-198">変更、<xref:System.Net.FtpWebRequest.ConnectionGroupName%2A>プロパティを呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="40452-198">Changing the <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> property after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-199">次のコード例では、このプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="40452-199">The following code example retrieves the value of this property.</span></span>  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-200">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-200">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <related type="Article" href="~/docs/framework/network-programming/managing-connections.md"><span data-ttu-id="40452-201">接続の管理</span><span class="sxs-lookup"><span data-stu-id="40452-201">Managing Connections</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public override long ContentLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long ContentLength { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-202"><see cref="T:System.Net.FtpWebRequest" /> クラスによって無視される値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-202">Gets or sets a value that is ignored by the <see cref="T:System.Net.FtpWebRequest" /> class.</span></span></summary>
        <value><span data-ttu-id="40452-203">無視される必要がある <see cref="T:System.Int64" /> 値。</span><span class="sxs-lookup"><span data-stu-id="40452-203">An <see cref="T:System.Int64" /> value that should be ignored.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-204"><xref:System.Net.FtpWebRequest.ContentLength%2A>の他の実装と互換性のためだけに提供されるプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス。</span><span class="sxs-lookup"><span data-stu-id="40452-204">The <xref:System.Net.FtpWebRequest.ContentLength%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.</span></span> <span data-ttu-id="40452-205">使用する理由はありません<xref:System.Net.FtpWebRequest.ContentLength%2A>します。</span><span class="sxs-lookup"><span data-stu-id="40452-205">There is no reason to use <xref:System.Net.FtpWebRequest.ContentLength%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentOffset">
      <MemberSignature Language="C#" Value="public long ContentOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentOffset" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentOffset { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ContentOffset : int64 with get, set" Usage="System.Net.FtpWebRequest.ContentOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-206">この要求でダウンロードされるファイル内のバイト オフセットを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-206">Gets or sets a byte offset into the file being downloaded by this request.</span></span></summary>
        <value><span data-ttu-id="40452-207">ファイルのオフセットをバイト単位で指定する <see cref="T:System.Int64" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="40452-207">An <see cref="T:System.Int64" /> instance that specifies the file offset, in bytes.</span></span> <span data-ttu-id="40452-208">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="40452-208">The default value is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-209">設定、<xref:System.Net.FtpWebRequest.ContentOffset%2A>プロパティ、FTP サーバーからファイルをダウンロードするときにします。</span><span class="sxs-lookup"><span data-stu-id="40452-209">Set the <xref:System.Net.FtpWebRequest.ContentOffset%2A> property when downloading a file from an FTP server.</span></span> <span data-ttu-id="40452-210">このオフセットは、ダウンロードされるデータの開始を示し、サーバーのファイル内の位置を示します。</span><span class="sxs-lookup"><span data-stu-id="40452-210">This offset indicates the position in the server's file that marks the start of the data to be downloaded.</span></span> <span data-ttu-id="40452-211">は、ファイルの先頭からのバイト数として、オフセットを指定します。最初のバイト オフセットには 0 です。</span><span class="sxs-lookup"><span data-stu-id="40452-211">The offset is specified as the number of bytes from the start of the file; the offset of the first byte is zero.</span></span>  
  
 <span data-ttu-id="40452-212">設定<xref:System.Net.FtpWebRequest.ContentOffset%2A>により、<xref:System.Net.FtpWebRequest>再起動を送信する (`REST`) サーバーにコマンド。</span><span class="sxs-lookup"><span data-stu-id="40452-212">Setting <xref:System.Net.FtpWebRequest.ContentOffset%2A> causes the <xref:System.Net.FtpWebRequest> to send a restart (`REST`) command to the server.</span></span> <span data-ttu-id="40452-213">このコマンドは、サーバーにデータをアップロードする場合は、ほとんどの FTP サーバーの実装によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="40452-213">This command is ignored by most FTP server implementations if you are uploading data to the server.</span></span>  
  
 <span data-ttu-id="40452-214">変更する<xref:System.Net.FtpWebRequest.ContentOffset%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="40452-214">Changing <xref:System.Net.FtpWebRequest.ContentOffset%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-215">次のコード例では、サーバーをローカル ファイルにダウンロードされたデータを追加することから、ファイルのダウンロードの一部を示します。</span><span class="sxs-lookup"><span data-stu-id="40452-215">The following code example demonstrates downloading part of a file from a server and appending the downloaded data to a local file.</span></span>  
  
 [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]
 [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-216">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-216">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="40452-217">このプロパティに対して指定された値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="40452-217">The value specified for this property is less than zero.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public override string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Net.FtpWebRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-218">常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="40452-218">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="40452-219">常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="40452-219">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-220"><xref:System.Net.FtpWebRequest.ContentType%2A>の他の実装と互換性のためだけに提供されるプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス。</span><span class="sxs-lookup"><span data-stu-id="40452-220">The <xref:System.Net.FtpWebRequest.ContentType%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.</span></span> <span data-ttu-id="40452-221">使用する理由はありません<xref:System.Net.FtpWebRequest.ContentType%2A>します。</span><span class="sxs-lookup"><span data-stu-id="40452-221">There is no reason to use <xref:System.Net.FtpWebRequest.ContentType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="40452-222">コンテンツ タイプの情報が FTP でサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="40452-222">Content type information is not supported for FTP.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.FtpWebRequest.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-223">FTP サーバーとの通信に使用する資格情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-223">Gets or sets the credentials used to communicate with the FTP server.</span></span></summary>
        <value><span data-ttu-id="40452-224"><see cref="T:System.Net.ICredentials" /> インスタンス。プロパティが設定されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="40452-224">An <see cref="T:System.Net.ICredentials" /> instance; otherwise, <see langword="null" /> if the property has not been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-225">匿名ログオンを使用して接続するときに資格情報を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="40452-225">You are not required to specify credentials when connecting using anonymous logon.</span></span> <span data-ttu-id="40452-226">設定する必要があります、<xref:System.Net.FtpWebRequest.Credentials%2A>プロパティの種類の資格情報を使用して<xref:System.Net.NetworkCredential>。 これにより、ユーザー名とパスワードがを読み取り、サーバーに送信します。</span><span class="sxs-lookup"><span data-stu-id="40452-226">You must set the <xref:System.Net.FtpWebRequest.Credentials%2A> property by using a credential of type <xref:System.Net.NetworkCredential>; this ensures that the user name and password can be read and sent to the server.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="40452-227">しない限り、サーバーに送信されたときに、資格情報が暗号化されていない、<xref:System.Net.FtpWebRequest.EnableSsl%2A>プロパティに設定されて`true`します。</span><span class="sxs-lookup"><span data-stu-id="40452-227">Credentials information is not encrypted when transmitted to the server unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="40452-228">変更する<xref:System.Net.FtpWebRequest.Credentials%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="40452-228">Changing <xref:System.Net.FtpWebRequest.Credentials%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-229">次のコード例では、このプロパティの値を取得し、それを使用してユーザー名を表示します。</span><span class="sxs-lookup"><span data-stu-id="40452-229">The following code example retrieves the value of this property and uses it to display the user name.</span></span>  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="40452-230">設定操作に指定された値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="40452-230">The value specified for a set operation is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="40452-231"><see cref="T:System.Net.ICredentials" /> 以外の種類の <see cref="T:System.Net.NetworkCredential" /> が、設定操作に指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-231">An <see cref="T:System.Net.ICredentials" /> of a type other than <see cref="T:System.Net.NetworkCredential" /> was specified for a set operation.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-232">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-232">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCachePolicy">
      <MemberSignature Language="C#" Value="public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.Cache.RequestCachePolicy DefaultCachePolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultCachePolicy As RequestCachePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::Cache::RequestCachePolicy ^ DefaultCachePolicy { System::Net::Cache::RequestCachePolicy ^ get(); void set(System::Net::Cache::RequestCachePolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCachePolicy : System.Net.Cache.RequestCachePolicy with get, set" Usage="System.Net.FtpWebRequest.DefaultCachePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Cache.RequestCachePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-233">すべての FTP 要求に対する既定のキャッシュ ポリシーを定義します。</span><span class="sxs-lookup"><span data-stu-id="40452-233">Defines the default cache policy for all FTP requests.</span></span></summary>
        <value><span data-ttu-id="40452-234">FTP 要求に対するキャッシュ ポリシーを定義する <see cref="T:System.Net.Cache.RequestCachePolicy" />。</span><span class="sxs-lookup"><span data-stu-id="40452-234">A <see cref="T:System.Net.Cache.RequestCachePolicy" /> that defines the cache policy for FTP requests.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-235">使用して受信するコンテンツのみ、<xref:System.Net.WebRequestMethods.Ftp.DownloadFile>コマンドがキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="40452-235">Only content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command is cached.</span></span>  
  
 <span data-ttu-id="40452-236">次の表に、FTP でのキャッシュ ポリシーの効果<xref:System.Net.FtpWebRequest>します。</span><span class="sxs-lookup"><span data-stu-id="40452-236">The following table describes the effects of FTP caching policies on <xref:System.Net.FtpWebRequest>.</span></span>  
  
|<span data-ttu-id="40452-237">ポリシー</span><span class="sxs-lookup"><span data-stu-id="40452-237">Policy</span></span>|<span data-ttu-id="40452-238">効果</span><span class="sxs-lookup"><span data-stu-id="40452-238">Effect</span></span>|  
|------------|------------|  
|<xref:System.Net.Cache.RequestCacheLevel.Default>|<span data-ttu-id="40452-239">リソースに新しいもコンテンツの長さは正確では、有効期限、変更、およびコンテンツの長さの属性が存在する場合は、キャッシュされたリソースを返します。</span><span class="sxs-lookup"><span data-stu-id="40452-239">Returns the cached resource if the resource is fresh, the content length is accurate, and the expiration, modification, and content length attributes are present.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|<span data-ttu-id="40452-240">サーバーからリソースを返します。</span><span class="sxs-lookup"><span data-stu-id="40452-240">Returns the resource from the server.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|<span data-ttu-id="40452-241">コンテンツの長さが存在し、エントリのサイズと一致する場合、キャッシュされたリソースを返しますそれ以外の場合、スロー、<xref:System.Net.WebException>します。</span><span class="sxs-lookup"><span data-stu-id="40452-241">Returns the cached resource if the content length is present and matches the entry size; otherwise, throws a <xref:System.Net.WebException>.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|<span data-ttu-id="40452-242">コンテンツの長さが指定されたエントリのサイズと一致する場合、キャッシュされたリソースを返しますそれ以外の場合、リソースはサーバーからダウンロードされ、呼び出し元に返されます。</span><span class="sxs-lookup"><span data-stu-id="40452-242">Returns the cached resource if the content length is provided and matches the entry size; otherwise, the resource is downloaded from the server and is returned to the caller.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|<span data-ttu-id="40452-243">キャッシュされたリソースのタイムスタンプが、サーバー上のリソースのタイムスタンプと同じである場合、キャッシュされたリソースを返しますそれ以外の場合、リソースに、サーバーからダウンロード、キャッシュに格納されている、呼び出し元に返されます。</span><span class="sxs-lookup"><span data-stu-id="40452-243">Returns the cached resource if the timestamp of the cached resource is the same as the time stamp of the resource on the server; otherwise, the resource is downloaded from the server, stored in the cache, and returned to the caller.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.Reload>|<span data-ttu-id="40452-244">サーバーからリソースをダウンロード、キャッシュに格納およびリソースを呼び出し元に返します。</span><span class="sxs-lookup"><span data-stu-id="40452-244">Downloads the resource from the server, stores it in the cache, and returns the resource to the caller.</span></span>|  
|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|<span data-ttu-id="40452-245">キャッシュされたリソースが存在する場合は削除されます。</span><span class="sxs-lookup"><span data-stu-id="40452-245">If a cached resource exists, it is deleted.</span></span> <span data-ttu-id="40452-246">リソースは、サーバーからがダウンロードされ、呼び出し元に返されます。</span><span class="sxs-lookup"><span data-stu-id="40452-246">The resource is downloaded from the server and is returned to the caller.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="40452-247">設定<xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A>構成設定をすべてオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="40452-247">Setting <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> overrides any configuration setting.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="40452-248">呼び出し元がこのプロパティを <see langword="null" /> に設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="40452-248">The caller tried to set this property to <see langword="null" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/0eb0c5cb-dd97-484d-8614-785e88877abb"><span data-ttu-id="40452-249">defaultFtpCachePolicy (ネットワーク設定)</span><span class="sxs-lookup"><span data-stu-id="40452-249">defaultFtpCachePolicy (Network Settings)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableSsl">
      <MemberSignature Language="C#" Value="public bool EnableSsl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSsl" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.EnableSsl" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableSsl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSsl { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableSsl : bool with get, set" Usage="System.Net.FtpWebRequest.EnableSsl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-250">SSL 接続を使用する必要があるかどうかを指定する <see cref="T:System.Boolean" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-250">Gets or sets a <see cref="T:System.Boolean" /> that specifies that an SSL connection should be used.</span></span></summary>
        <value><span data-ttu-id="40452-251">制御およびデータの伝送が暗号化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="40452-251"><see langword="true" /> if control and data transmissions are encrypted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="40452-252">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="40452-252">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="40452-253">しない限り、<xref:System.Net.FtpWebRequest.EnableSsl%2A>プロパティは`true`、すべてのデータと、ユーザー名とパスワード情報などのコマンドをクリア テキストでサーバーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="40452-253">Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text.</span></span> <span data-ttu-id="40452-254">資格情報を表示でき、それらを使用して、サーバーに接続するネットワーク トラフィックを監視している人ことができます。</span><span class="sxs-lookup"><span data-stu-id="40452-254">Anyone monitoring network traffic can view your credentials and use them to connect to the server.</span></span> <span data-ttu-id="40452-255">設定する必要がありますを資格情報を要求し、SSL をサポートしている FTP サーバーに接続している場合<xref:System.Net.FtpWebRequest.EnableSsl%2A>に`true`します。</span><span class="sxs-lookup"><span data-stu-id="40452-255">If you are connecting to an FTP server that requires credentials and supports SSL, you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.</span></span>  
  
 <span data-ttu-id="40452-256">`"AUTH TLS"`コマンドは、暗号化されたセッションを要求するサーバーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="40452-256">The `"AUTH TLS"` command is sent to the server to request an encrypted session.</span></span> <span data-ttu-id="40452-257">受信するサーバーでこのコマンドが認識されない場合、<xref:System.Net.WebException>例外。</span><span class="sxs-lookup"><span data-stu-id="40452-257">If the server does not recognize this command, you receive a <xref:System.Net.WebException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-258">次のコード例では、暗号化された接続を使用して、FTP サーバーからディレクトリ一覧をダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="40452-258">The following code example uses an encrypted connection to download the directory listing from an FTP server.</span></span>  
  
 [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]
 [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-259">FTP サーバーへの接続が既に確立されています。</span><span class="sxs-lookup"><span data-stu-id="40452-259">The connection to the FTP server has already been established.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream EndGetRequestStream(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetRequestStream (asyncResult As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ EndGetRequestStream(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetRequestStream : IAsyncResult -&gt; System.IO.Stream" Usage="ftpWebRequest.EndGetRequestStream asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="40452-260">操作の開始時に返された <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40452-260">The <see cref="T:System.IAsyncResult" /> object that was returned when the operation started.</span></span></param>
        <summary><span data-ttu-id="40452-261"><see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> で開始された保留中の非同期操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="40452-261">Ends a pending asynchronous operation started with <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="40452-262">このインスタンスに関連付けられている、書き込み可能な <see cref="T:System.IO.Stream" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="40452-262">A writable <see cref="T:System.IO.Stream" /> instance associated with this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-263">操作が完了していない場合、<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>メソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="40452-263">If the operation has not completed, the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method blocks until the operation completes.</span></span> <span data-ttu-id="40452-264">操作が完了したかどうかを確認するには<xref:System.IAsyncResult.IsCompleted%2A>プロパティを呼び出す前に<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>します。</span><span class="sxs-lookup"><span data-stu-id="40452-264">To determine whether the operation has completed, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.</span></span>  
  
 <span data-ttu-id="40452-265">、「例外」に記載されている例外だけでなく<xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>書き込みストリームを開くときにスローされた例外を再スローします。</span><span class="sxs-lookup"><span data-stu-id="40452-265">In addition to the exceptions noted in "Exceptions," <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> rethrows exceptions that were thrown while opening the stream for writing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="40452-266">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="40452-266">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="40452-267">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="40452-267">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-268">次のコード例では、要求のストリームを取得する非同期操作の終了を示します。</span><span class="sxs-lookup"><span data-stu-id="40452-268">The following code example demonstrates ending an asynchronous operation to get a request's stream.</span></span> <span data-ttu-id="40452-269">このコード例が示されている例の一部、<xref:System.Net.FtpWebRequest>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="40452-269">This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.</span></span>  
  
 [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]
 [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="40452-270"><paramref name="asyncResult" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="40452-270"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="40452-271"><see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> の呼び出しで、<paramref name="asyncResult" /> が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="40452-271"><paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-272">このメソッドは、<paramref name="asyncResult" /> で識別される操作に対して既に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="40452-272">This method was already called for the operation identified by <paramref name="asyncResult" />.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="EndGetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse EndGetResponse(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndGetResponse (asyncResult As IAsyncResult) As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ EndGetResponse(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndGetResponse : IAsyncResult -&gt; System.Net.WebResponse" Usage="ftpWebRequest.EndGetResponse asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="40452-273">操作の開始時に返された <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="40452-273">The <see cref="T:System.IAsyncResult" /> that was returned when the operation started.</span></span></param>
        <summary><span data-ttu-id="40452-274"><see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> で開始された保留中の非同期操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="40452-274">Ends a pending asynchronous operation started with <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="40452-275"><see cref="T:System.Net.FtpWebResponse" /> インスタンスを格納している <see cref="T:System.Net.WebResponse" /> 参照。</span><span class="sxs-lookup"><span data-stu-id="40452-275">A <see cref="T:System.Net.WebResponse" /> reference that contains an <see cref="T:System.Net.FtpWebResponse" /> instance.</span></span> <span data-ttu-id="40452-276">このオブジェクトは、要求に対する FTP サーバーの応答を格納しています。</span><span class="sxs-lookup"><span data-stu-id="40452-276">This object contains the FTP server's response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-277">時に、操作が完了していない場合、<xref:System.Net.FtpWebRequest.EndGetResponse%2A>メソッドが呼び出されると、<xref:System.Net.FtpWebRequest.EndGetResponse%2A>操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="40452-277">If the operation has not completed at the time the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method is called, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> blocks until the operation completes.</span></span> <span data-ttu-id="40452-278">ブロックしないように、チェック、<xref:System.IAsyncResult.IsCompleted%2A>プロパティを呼び出す前に<xref:System.Net.FtpWebRequest.EndGetResponse%2A>します。</span><span class="sxs-lookup"><span data-stu-id="40452-278">To prevent blocking, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.</span></span>  
  
 <span data-ttu-id="40452-279">、「例外」に記載されている例外だけでなく<xref:System.Net.FtpWebRequest.EndGetResponse%2A>サーバーと通信中にスローされた例外を再スローします。</span><span class="sxs-lookup"><span data-stu-id="40452-279">In addition to the exceptions noted in "Exceptions," <xref:System.Net.FtpWebRequest.EndGetResponse%2A> rethrows exceptions that were thrown while communicating with the server.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="40452-280">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="40452-280">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="40452-281">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="40452-281">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-282">次のコード例では、応答を取得する非同期操作の終了を示します。</span><span class="sxs-lookup"><span data-stu-id="40452-282">The following code example demonstrates ending an asynchronous operation to get a response.</span></span> <span data-ttu-id="40452-283">このコード例が示されている例の一部、<xref:System.Net.FtpWebRequest>クラスの概要。</span><span class="sxs-lookup"><span data-stu-id="40452-283">This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.</span></span>  
  
 [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]
 [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="40452-284"><paramref name="asyncResult" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="40452-284"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="40452-285"><see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> の呼び出しで、<paramref name="asyncResult" /> が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="40452-285"><paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-286">このメソッドは、<paramref name="asyncResult" /> で識別される操作に対して既に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="40452-286">This method was already called for the operation identified by <paramref name="asyncResult" />.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="40452-287">HTTP プロキシの使用中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="40452-287">An error occurred using an HTTP proxy.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="40452-288">このメソッドは、ネットワーク トラフィックを生成します。</span><span class="sxs-lookup"><span data-stu-id="40452-288">This method generates network traffic.</span></span></para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="M:System.Net.FtpWebRequest.GetResponse" />
      </Docs>
    </Member>
    <Member MemberName="GetRequestStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetRequestStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetRequestStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetRequestStream" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRequestStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetRequestStream();" />
      <MemberSignature Language="F#" Value="override this.GetRequestStream : unit -&gt; System.IO.Stream" Usage="ftpWebRequest.GetRequestStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40452-289">FTP サーバーにデータをアップロードするために使用するストリームを取得します。</span><span class="sxs-lookup"><span data-stu-id="40452-289">Retrieves the stream used to upload data to an FTP server.</span></span></summary>
        <returns><span data-ttu-id="40452-290">現在の要求でサーバーに送信されるデータを格納するために使用する、書き込み可能な <see cref="T:System.IO.Stream" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="40452-290">A writable <see cref="T:System.IO.Stream" /> instance used to store data to be sent to the server by the current request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-291">呼び出しの前に要求のプロパティを設定、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-291">Set the request properties before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method.</span></span> <span data-ttu-id="40452-292">データのストリームに書き込み後、は、要求を送信する前にストリームを閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="40452-292">After writing the data to the stream, you must close the stream prior to sending the request.</span></span>  
  
 <span data-ttu-id="40452-293">設定していない場合、<xref:System.Net.FtpWebRequest.Method%2A>プロパティを<xref:System.Net.WebRequestMethods.Ftp.UploadFile>または<xref:System.Net.WebRequestMethods.Ftp.AppendFile>ストリームを取得することはできません。</span><span class="sxs-lookup"><span data-stu-id="40452-293">If you have not set the <xref:System.Net.FtpWebRequest.Method%2A> property to <xref:System.Net.WebRequestMethods.Ftp.UploadFile> or <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, you cannot get the stream.</span></span>  
  
 <span data-ttu-id="40452-294"><xref:System.Net.FtpWebRequest.GetRequestStream%2A> ストリームの待機中にブロックします。</span><span class="sxs-lookup"><span data-stu-id="40452-294"><xref:System.Net.FtpWebRequest.GetRequestStream%2A> blocks while waiting for the stream.</span></span> <span data-ttu-id="40452-295">これを回避するには、呼び出し、<xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>メソッドの代わりに<xref:System.Net.FtpWebRequest.GetRequestStream%2A>します。</span><span class="sxs-lookup"><span data-stu-id="40452-295">To prevent this, call the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> method in place of <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="40452-296">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="40452-296">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="40452-297">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="40452-297">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-298">次のコード例では、要求のデータ ストリームにファイルをコピーし、データをアップロードして、ファイルに追加するサーバーに要求を送信を示します。</span><span class="sxs-lookup"><span data-stu-id="40452-298">The following code example demonstrates copying a file to a request's data stream and sending a request to the server to upload the data and append it to a file.</span></span>  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-299"><see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> が呼び出されており、完了していません。</span><span class="sxs-lookup"><span data-stu-id="40452-299"><see cref="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)" /> has been called and has not completed.</span></span>  
  
<span data-ttu-id="40452-300">または</span><span class="sxs-lookup"><span data-stu-id="40452-300">-or-</span></span> 
<span data-ttu-id="40452-301">HTTP プロキシが有効で、<see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />、<see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />、または <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> 以外の FTP コマンドを使用しようとしました。</span><span class="sxs-lookup"><span data-stu-id="40452-301">An HTTP proxy is enabled, and you attempted to use an FTP command other than <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />, or <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="40452-302">FTP サーバーへの接続を確立できませんでした。</span><span class="sxs-lookup"><span data-stu-id="40452-302">A connection to the FTP server could not be established.</span></span></exception>
        <exception cref="T:System.Net.ProtocolViolationException"><span data-ttu-id="40452-303"><see cref="P:System.Net.FtpWebRequest.Method" /> プロパティが、<see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> または <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" /> に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="40452-303">The <see cref="P:System.Net.FtpWebRequest.Method" /> property is not set to <see cref="F:System.Net.WebRequestMethods.Ftp.UploadFile" /> or <see cref="F:System.Net.WebRequestMethods.Ftp.AppendFile" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="40452-304">このメソッドは、ネットワーク トラフィックを生成します。</span><span class="sxs-lookup"><span data-stu-id="40452-304">This method generates network traffic.</span></span></para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="GetResponse">
      <MemberSignature Language="C#" Value="public override System.Net.WebResponse GetResponse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.WebResponse GetResponse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.FtpWebRequest.GetResponse" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetResponse () As WebResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::WebResponse ^ GetResponse();" />
      <MemberSignature Language="F#" Value="override this.GetResponse : unit -&gt; System.Net.WebResponse" Usage="ftpWebRequest.GetResponse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40452-305">FTP サーバーの応答を返します。</span><span class="sxs-lookup"><span data-stu-id="40452-305">Returns the FTP server response.</span></span></summary>
        <returns><span data-ttu-id="40452-306"><see cref="T:System.Net.FtpWebResponse" /> インスタンスを格納している <see cref="T:System.Net.WebResponse" /> 参照。</span><span class="sxs-lookup"><span data-stu-id="40452-306">A <see cref="T:System.Net.WebResponse" /> reference that contains an <see cref="T:System.Net.FtpWebResponse" /> instance.</span></span> <span data-ttu-id="40452-307">このオブジェクトは、要求に対する FTP サーバーの応答を格納しています。</span><span class="sxs-lookup"><span data-stu-id="40452-307">This object contains the FTP server's response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-308">FTP に固有のプロパティにアクセスするにキャストする必要があります、<xref:System.Net.WebResponse>オブジェクトには、このメソッドによって返される<xref:System.Net.FtpWebResponse>します。</span><span class="sxs-lookup"><span data-stu-id="40452-308">To access the FTP-specific properties, you must cast the <xref:System.Net.WebResponse> object returned by this method to <xref:System.Net.FtpWebResponse>.</span></span>  
  
 <span data-ttu-id="40452-309"><xref:System.Net.FtpWebRequest.GetResponse%2A> コントロールの接続が確立されていると、し、データ接続を作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="40452-309"><xref:System.Net.FtpWebRequest.GetResponse%2A> causes a control connection to be established, and might also create a data connection.</span></span> <span data-ttu-id="40452-310"><xref:System.Net.FtpWebRequest.GetResponse%2A> 応答を受信するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="40452-310"><xref:System.Net.FtpWebRequest.GetResponse%2A> blocks until the response is received.</span></span> <span data-ttu-id="40452-311">これを防ぐためには、操作を行うこの非同期的に呼び出すことによって、<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>と<xref:System.Net.FtpWebRequest.EndGetResponse%2A>メソッドの代わりに<xref:System.Net.FtpWebRequest.GetResponse%2A>します。</span><span class="sxs-lookup"><span data-stu-id="40452-311">To prevent this, you can perform this operation asynchronously by calling the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods in place of <xref:System.Net.FtpWebRequest.GetResponse%2A>.</span></span>  
  
 <span data-ttu-id="40452-312">場合、<xref:System.Net.FtpWebRequest.Proxy%2A>プロパティが設定直接または構成ファイルでは、FTP サーバーとの通信は、プロキシを通じて行われます。</span><span class="sxs-lookup"><span data-stu-id="40452-312">If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the proxy.</span></span>  
  
 <span data-ttu-id="40452-313">場合、<xref:System.Net.WebException>がスローされると、使用して、<xref:System.Net.WebException.Response%2A>と<xref:System.Net.WebException.Status%2A>サーバーからの応答を確認するには、例外のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="40452-313">If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.</span></span>  
  
 <span data-ttu-id="40452-314">このメンバーは、アプリケーションでネットワーク トレースが有効にされている場合にトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="40452-314">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="40452-315">詳細については、次を参照してください。[ネットワークのトレースを .NET Framework で](~/docs/framework/network-programming/network-tracing.md)します。</span><span class="sxs-lookup"><span data-stu-id="40452-315">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="40452-316">複数回呼び出す<xref:System.Net.FtpWebRequest.GetResponse%2A>同じ応答オブジェクトを返す要求を再発行されません。</span><span class="sxs-lookup"><span data-stu-id="40452-316">Multiple calls to <xref:System.Net.FtpWebRequest.GetResponse%2A> return the same response object; the request is not reissued.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-317">次のコード例では、要求のデータ ストリームをファイルをコピーし、データをサーバーにファイルを追加する要求の送信を示します。</span><span class="sxs-lookup"><span data-stu-id="40452-317">The following code example demonstrates copying a file to a request's data stream and sending a request to append data to a file to the server.</span></span> <span data-ttu-id="40452-318">例では、<xref:System.Net.FtpWebRequest.GetResponse%2A>に要求を送信し、応答がサーバーによって返されるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="40452-318">The example calls <xref:System.Net.FtpWebRequest.GetResponse%2A> to send the request and block until the response is returned by the server.</span></span>  
  
 [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]
 [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-319"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> または <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> は、このインスタンスに対して既に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="40452-319"><see cref="M:System.Net.FtpWebRequest.GetResponse" /> or <see cref="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)" /> has already been called for this instance.</span></span>  
  
<span data-ttu-id="40452-320">または</span><span class="sxs-lookup"><span data-stu-id="40452-320">-or-</span></span> 
<span data-ttu-id="40452-321">HTTP プロキシが有効で、<see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />、<see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />、または <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" /> 以外の FTP コマンドを使用しようとしました。</span><span class="sxs-lookup"><span data-stu-id="40452-321">An HTTP proxy is enabled, and you attempted to use an FTP command other than <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />, <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectory" />, or <see cref="F:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails" />.</span></span></exception>
        <exception cref="T:System.Net.WebException"><span data-ttu-id="40452-322"><see cref="P:System.Net.FtpWebRequest.EnableSsl" /> は <see langword="true" /> に設定されていますが、サーバーはこの機能をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="40452-322"><see cref="P:System.Net.FtpWebRequest.EnableSsl" /> is set to <see langword="true" />, but the server does not support this feature.</span></span>  
  
<span data-ttu-id="40452-323">または</span><span class="sxs-lookup"><span data-stu-id="40452-323">-or-</span></span> 
<span data-ttu-id="40452-324"><see cref="P:System.Net.FtpWebRequest.Timeout" /> が指定され、タイムアウトの時間が経過しました。</span><span class="sxs-lookup"><span data-stu-id="40452-324">A <see cref="P:System.Net.FtpWebRequest.Timeout" /> was specified and the timeout has expired.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="40452-325">このメソッドは、ネットワーク トラフィックを生成します。</span><span class="sxs-lookup"><span data-stu-id="40452-325">This method generates network traffic.</span></span></para></block>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public override System.Net.WebHeaderCollection Headers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Headers As WebHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::WebHeaderCollection ^ Headers { System::Net::WebHeaderCollection ^ get(); void set(System::Net::WebHeaderCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.WebHeaderCollection with get, set" Usage="System.Net.FtpWebRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-326">空の <see cref="T:System.Net.WebHeaderCollection" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="40452-326">Gets an empty <see cref="T:System.Net.WebHeaderCollection" /> object.</span></span></summary>
        <value><span data-ttu-id="40452-327">空の <see cref="T:System.Net.WebHeaderCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40452-327">An empty <see cref="T:System.Net.WebHeaderCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-328"><xref:System.Net.FtpWebRequest.Headers%2A>の他の実装と互換性のためだけに提供されるプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス。</span><span class="sxs-lookup"><span data-stu-id="40452-328">The <xref:System.Net.FtpWebRequest.Headers%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.</span></span> <span data-ttu-id="40452-329">使用する理由はありません<xref:System.Net.FtpWebRequest.Headers%2A>します。</span><span class="sxs-lookup"><span data-stu-id="40452-329">There is no reason to use <xref:System.Net.FtpWebRequest.Headers%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool with get, set" Usage="System.Net.FtpWebRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("We don't support KeepAlive = true")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-330">要求の完了後に FTP サーバーへの制御接続を閉じるかどうかを指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-330">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the control connection to the FTP server is closed after the request completes.</span></span></summary>
        <value><span data-ttu-id="40452-331">サーバーへの接続を破棄させない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="40452-331"><see langword="true" /> if the connection to the server should not be destroyed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="40452-332">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="40452-332">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-333">ときに、<xref:System.Net.FtpWebRequest.KeepAlive%2A>プロパティに設定されて`false`を呼び出すときにコントロールを接続が閉じられる、<xref:System.Net.FtpWebResponse.Close%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-333">When the <xref:System.Net.FtpWebRequest.KeepAlive%2A> property is set to `false`, the control connection is closed when you call the <xref:System.Net.FtpWebResponse.Close%2A> method.</span></span>  
  
 <span data-ttu-id="40452-334">変更する<xref:System.Net.FtpWebRequest.KeepAlive%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="40452-334">Changing <xref:System.Net.FtpWebRequest.KeepAlive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-335">次のコード例を取得し、指定したプロパティの値が表示されます<xref:System.Net.FtpWebRequest>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40452-335">The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.</span></span>  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-336">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-336">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public override string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Method" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Method : string with get, set" Usage="System.Net.FtpWebRequest.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-337">FTP サーバーに送信するためのコマンドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-337">Gets or sets the command to send to the FTP server.</span></span></summary>
        <value><span data-ttu-id="40452-338">サーバーに送信するための FTP コマンドを格納している <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="40452-338">A <see cref="T:System.String" /> value that contains the FTP command to send to the server.</span></span> <span data-ttu-id="40452-339">既定値は <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" /> です。</span><span class="sxs-lookup"><span data-stu-id="40452-339">The default value is <see cref="F:System.Net.WebRequestMethods.Ftp.DownloadFile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-340"><xref:System.Net.FtpWebRequest.Method%2A>どのコマンドがサーバーに送信されるプロパティを決定します。</span><span class="sxs-lookup"><span data-stu-id="40452-340">The <xref:System.Net.FtpWebRequest.Method%2A> property determines which command is sent to the server.</span></span> <span data-ttu-id="40452-341">設定する、<xref:System.Net.FtpWebRequest.Method%2A>のパブリック フィールドのメンバーで定義されている文字列を使用して、<xref:System.Net.WebRequestMethods.Ftp>クラス。</span><span class="sxs-lookup"><span data-stu-id="40452-341">You set the <xref:System.Net.FtpWebRequest.Method%2A> by using the strings defined in the public field members of the <xref:System.Net.WebRequestMethods.Ftp> class.</span></span> <span data-ttu-id="40452-342">文字列が定義されていること、<xref:System.Net.WebRequestMethods.Ftp>クラスは、唯一サポートされているオプション、<xref:System.Net.FtpWebRequest.Method%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="40452-342">Note that the strings defined in the <xref:System.Net.WebRequestMethods.Ftp> class are the only supported options for the <xref:System.Net.FtpWebRequest.Method%2A> property.</span></span> <span data-ttu-id="40452-343">設定、<xref:System.Net.FtpWebRequest.Method%2A>プロパティその他の値になります、<xref:System.ArgumentException>例外。</span><span class="sxs-lookup"><span data-stu-id="40452-343">Setting the <xref:System.Net.FtpWebRequest.Method%2A> property to any other value will result in an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="40452-344">設定するときに<xref:System.Net.FtpWebRequest.Method%2A>に<xref:System.Net.WebRequestMethods.Ftp.UploadFile>を呼び出す前に行う必要があります、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-344">When setting <xref:System.Net.FtpWebRequest.Method%2A> to <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, you must do so before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method.</span></span> <span data-ttu-id="40452-345">これらのメンバーを正しい順序で呼び出しに失敗する、<xref:System.Net.ProtocolViolationException>要求ストリームを取得しようとしたときに例外。</span><span class="sxs-lookup"><span data-stu-id="40452-345">Failure to call these members in the correct order causes a <xref:System.Net.ProtocolViolationException> exception when you attempt to get the request stream.</span></span>  
  
 <span data-ttu-id="40452-346">指定された資格情報、<xref:System.Net.FtpWebRequest>オブジェクトは、指定されたメソッドを実行する権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="40452-346">The credentials supplied for the <xref:System.Net.FtpWebRequest> object must have permission to perform the specified method.</span></span> <span data-ttu-id="40452-347">それ以外の場合は、FTP コマンドが失敗しました。</span><span class="sxs-lookup"><span data-stu-id="40452-347">If not, the FTP command fails.</span></span>  
  
 <span data-ttu-id="40452-348">コマンドの成否を判断する確認、<xref:System.Net.FtpWebResponse.StatusCode%2A>と<xref:System.Net.FtpWebResponse.StatusDescription%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="40452-348">To determine the success or failure of a command, check the <xref:System.Net.FtpWebResponse.StatusCode%2A> and <xref:System.Net.FtpWebResponse.StatusDescription%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-349">次のコード例では、このプロパティを設定<xref:System.Net.WebRequestMethods.Ftp.DeleteFile>します。</span><span class="sxs-lookup"><span data-stu-id="40452-349">The following code example sets this property to <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.</span></span>  
  
 [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]
 [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-350">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-350">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="40452-351">メソッドが無効です。</span><span class="sxs-lookup"><span data-stu-id="40452-351">The method is invalid.</span></span>  
  
<span data-ttu-id="40452-352">- または -</span><span class="sxs-lookup"><span data-stu-id="40452-352">-or-</span></span> 
<span data-ttu-id="40452-353">このメソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="40452-353">The method is not supported.</span></span>  
  
<span data-ttu-id="40452-354">または</span><span class="sxs-lookup"><span data-stu-id="40452-354">-or-</span></span> 
<span data-ttu-id="40452-355">複数のメソッドが指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-355">Multiple methods were specified.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public override bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.FtpWebRequest.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-356">常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="40452-356">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="40452-357">常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="40452-357">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-358"><xref:System.Net.FtpWebRequest.PreAuthenticate%2A>の他の実装と互換性のためだけに提供されるプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス。</span><span class="sxs-lookup"><span data-stu-id="40452-358">The <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="40452-359">事前認証は FTP でサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="40452-359">Preauthentication is not supported for FTP.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public override System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.FtpWebRequest.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-360">FTP サーバーとの通信に使用するプロキシを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-360">Gets or sets the proxy used to communicate with the FTP server.</span></span></summary>
        <value><span data-ttu-id="40452-361">FTP サーバーとの通信を行う <see cref="T:System.Net.IWebProxy" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="40452-361">An <see cref="T:System.Net.IWebProxy" /> instance responsible for communicating with the FTP server.</span></span> <span data-ttu-id="40452-362">.NET Core ではその値は<see langword="null" />します。</span><span class="sxs-lookup"><span data-stu-id="40452-362">On .NET Core, its value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

### <a name="on-net-framework"></a><span data-ttu-id="40452-363">.NET framework</span><span class="sxs-lookup"><span data-stu-id="40452-363">On .NET Framework</span></span>

 <span data-ttu-id="40452-364"><xref:System.Net.FtpWebRequest.Proxy%2A>プロパティを識別、<xref:System.Net.IWebProxy>は FTP サーバーと通信するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="40452-364">The <xref:System.Net.FtpWebRequest.Proxy%2A> property identifies the <xref:System.Net.IWebProxy> instance that communicates with the FTP server.</span></span> <span data-ttu-id="40452-365">プロキシは、構成ファイルと、Internet Explorer のローカル エリア ネットワークの設定を使用して、システムによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="40452-365">The proxy is set by the system by using configuration files and the Internet Explorer Local Area Network settings.</span></span> <span data-ttu-id="40452-366">プロキシを使用しないことを指定するには、次のように設定します。<xref:System.Net.FtpWebRequest.Proxy%2A>によって返されるプロキシ インスタンスを、<xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-366">To specify that no proxy should be used, set <xref:System.Net.FtpWebRequest.Proxy%2A> to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="40452-367">自動プロキシ検出の詳細については、次を参照してください。[自動プロキシ検出](~/docs/framework/network-programming/automatic-proxy-detection.md)します。</span><span class="sxs-lookup"><span data-stu-id="40452-367">For more information about automatic proxy detection, see [Automatic Proxy Detection](~/docs/framework/network-programming/automatic-proxy-detection.md).</span></span>  
  
 <span data-ttu-id="40452-368">設定する必要があります<xref:System.Net.FtpWebRequest.Proxy%2A>データ要求のストリームを書き込む、または応答を取得する前にします。</span><span class="sxs-lookup"><span data-stu-id="40452-368">You must set <xref:System.Net.FtpWebRequest.Proxy%2A> before writing data to the request's stream or getting the response.</span></span> <span data-ttu-id="40452-369">変更する<xref:System.Net.FtpWebRequest.Proxy%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="40452-369">Changing <xref:System.Net.FtpWebRequest.Proxy%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="40452-370"><xref:System.Net.FtpWebRequest>クラスには、HTTP と ISA ファイアウォール クライアント プロキシがサポートしています。</span><span class="sxs-lookup"><span data-stu-id="40452-370">The <xref:System.Net.FtpWebRequest> class supports HTTP and ISA Firewall Client proxies.</span></span>  
  
 <span data-ttu-id="40452-371">指定したプロキシが HTTP プロキシの場合のみ、 <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>、<xref:System.Net.WebRequestMethods.Ftp.ListDirectory>と<xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>コマンドがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="40452-371">If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.</span></span>  
  
### <a name="on-net-core"></a><span data-ttu-id="40452-372">.NET Core で</span><span class="sxs-lookup"><span data-stu-id="40452-372">On .NET Core</span></span>   

<span data-ttu-id="40452-373">`FtpWebRequest.Proxy`プロパティがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="40452-373">The `FtpWebRequest.Proxy` property is not supported.</span></span> <span data-ttu-id="40452-374">プロパティを設定しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="40452-374">Setting the property has no effect.</span></span> <span data-ttu-id="40452-375">返します。 値のプロパティを取得`null`します。</span><span class="sxs-lookup"><span data-stu-id="40452-375">Getting the property value returns `null`.</span></span> 


## Examples  
 <span data-ttu-id="40452-376">次のコード例では、このプロパティの値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="40452-376">The following code example displays this property value.</span></span>  
  
 [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]
 [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="40452-377">このプロパティは <see langword="null" /> に設定できません。</span><span class="sxs-lookup"><span data-stu-id="40452-377">This property cannot be set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-378">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-378">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
        <altmember cref="T:System.Net.WebProxy" />
        <altmember cref="T:System.Net.GlobalProxySelection" />
      </Docs>
    </Member>
    <Member MemberName="ReadWriteTimeout">
      <MemberSignature Language="C#" Value="public int ReadWriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadWriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadWriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadWriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadWriteTimeout : int with get, set" Usage="System.Net.FtpWebRequest.ReadWriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-379">ストリームからの読み取り時またはストリームへの書き込み時のタイムアウトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-379">Gets or sets a time-out when reading from or writing to a stream.</span></span></summary>
        <value><span data-ttu-id="40452-380">読み取りまたは書き込みがタイムアウトするまでのミリ秒単位の時間。既定値は、300,000 ミリ秒 (5 分) です。</span><span class="sxs-lookup"><span data-stu-id="40452-380">The number of milliseconds before the reading or writing times out. The default value is 300,000 milliseconds (5 minutes).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-381"><xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>によって返されるストリームに書き込むときに使用、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッドまたはによって返されるストリームからの読み取り、<xref:System.Net.FtpWebResponse.GetResponseStream%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-381">The <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> is used when writing to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or reading from the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method.</span></span>  
  
 <span data-ttu-id="40452-382">具体的には、<xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>プロパティは、タイムアウトの値は、制御、<xref:System.IO.Stream.Read%2A>メソッドによって返されるストリームの読み取りに使用すると、<xref:System.Net.FtpWebResponse.GetResponseStream%2A>メソッドをおよび、 <xref:System.IO.Stream.Write%2A> によって返されるストリームに書き込むために使用するメソッド<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="40452-382">Specifically, the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property controls the time-out for the <xref:System.IO.Stream.Read%2A> method, which is used to read the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method, and for the <xref:System.IO.Stream.Write%2A> method, which is used to write to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method.</span></span> <span data-ttu-id="40452-383">タイムアウト期間を超えた場合、呼び出し元のメソッドがスローされます、<xref:System.Net.WebException>で<xref:System.Net.WebExceptionStatus>設定<xref:System.Net.WebExceptionStatus.Timeout>します。</span><span class="sxs-lookup"><span data-stu-id="40452-383">If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.</span></span>  
  
 <span data-ttu-id="40452-384">要求が完了するまで待機する時間を指定するには、使用、<xref:System.Net.FtpWebRequest.Timeout%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="40452-384">To specify the amount of time to wait for the request to complete, use the <xref:System.Net.FtpWebRequest.Timeout%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-385">要求が既に送信されています。</span><span class="sxs-lookup"><span data-stu-id="40452-385">The request has already been sent.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="40452-386">設定操作に指定された値は 0 以下であり、<see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="40452-386">The value specified for a set operation is less than or equal to zero and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RenameTo">
      <MemberSignature Language="C#" Value="public string RenameTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RenameTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RenameTo" />
      <MemberSignature Language="VB.NET" Value="Public Property RenameTo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RenameTo { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenameTo : string with get, set" Usage="System.Net.FtpWebRequest.RenameTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-387">名前を変更されたファイルの新しい名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-387">Gets or sets the new name of a file being renamed.</span></span></summary>
        <value><span data-ttu-id="40452-388">名前を変更されたファイルの新しい名前。</span><span class="sxs-lookup"><span data-stu-id="40452-388">The new name of the file being renamed.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="40452-389">設定操作として指定した値が、<see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="40452-389">The value specified for a set operation is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-390">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-390">A new value was specified for this property for a request that is already in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RequestUri">
      <MemberSignature Language="C#" Value="public override Uri RequestUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri RequestUri" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.RequestUri" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequestUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Uri ^ RequestUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestUri : Uri" Usage="System.Net.FtpWebRequest.RequestUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-391">このインスタンスで要求された URI を取得します。</span><span class="sxs-lookup"><span data-stu-id="40452-391">Gets the URI requested by this instance.</span></span></summary>
        <value><span data-ttu-id="40452-392">ファイル転送プロトコルを使用してアクセスされるリソースを識別する <see cref="T:System.Uri" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="40452-392">A <see cref="T:System.Uri" /> instance that identifies a resource that is accessed using the File Transfer Protocol.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-393">値、<xref:System.Net.FtpWebRequest.RequestUri%2A>プロパティは、URI ときに指定された、<xref:System.Net.WebRequest.Create%2A>このインスタンスを取得するメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="40452-393">The value of the <xref:System.Net.FtpWebRequest.RequestUri%2A> property is the URI specified when the <xref:System.Net.WebRequest.Create%2A> method was called to obtain this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-394">次のコード例では、このプロパティの値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="40452-394">The following code example displays this property value.</span></span>  
  
 [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]
 [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="ServicePoint">
      <MemberSignature Language="C#" Value="public System.Net.ServicePoint ServicePoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ServicePoint ServicePoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.ServicePoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServicePoint As ServicePoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ServicePoint ^ ServicePoint { System::Net::ServicePoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServicePoint : System.Net.ServicePoint" Usage="System.Net.FtpWebRequest.ServicePoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ServicePoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-395">FTP サーバーに接続するために使用する <see cref="T:System.Net.ServicePoint" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="40452-395">Gets the <see cref="T:System.Net.ServicePoint" /> object used to connect to the FTP server.</span></span></summary>
        <value><span data-ttu-id="40452-396">接続の動作をカスタマイズするために使用できる <see cref="T:System.Net.ServicePoint" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40452-396">A <see cref="T:System.Net.ServicePoint" /> object that can be used to customize connection behavior.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-397">ない場合は<xref:System.Net.ServicePoint>オブジェクトが存在する場合、FTP サーバーの 1 つ作成します。</span><span class="sxs-lookup"><span data-stu-id="40452-397">If no <xref:System.Net.ServicePoint> object exists, one is created for the FTP server.</span></span> <span data-ttu-id="40452-398">FTP サーバーを開くことができる接続の最大数を設定するには、設定、<xref:System.Net.ServicePoint.ConnectionLimit%2A>のプロパティ、<xref:System.Net.ServicePoint>このプロパティによって返されるインスタンス。</span><span class="sxs-lookup"><span data-stu-id="40452-398">To set the maximum number of connections that can be open for an FTP server, set the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property of the <xref:System.Net.ServicePoint> instance returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-399">次のコード例では、要求からサービス ポイントを取得し、接続の最大数を 1 に設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-399">The following code example retrieves the service point from a request and sets the maximum number of connections to one.</span></span>  
  
 [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]
 [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Net.FtpWebRequest.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-400">要求に対するミリ秒単位の待機時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-400">Gets or sets the number of milliseconds to wait for a request.</span></span></summary>
        <value><span data-ttu-id="40452-401">要求がタイムアウトになるまでのミリ秒単位の待機期間を格納している <see cref="T:System.Int32" /> 値。既定値は <see cref="F:System.Threading.Timeout.Infinite" /> です。</span><span class="sxs-lookup"><span data-stu-id="40452-401">An <see cref="T:System.Int32" /> value that contains the number of milliseconds to wait before a request times out. The default value is <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-402">無限の値を指定するには、設定、<xref:System.Net.FtpWebRequest.Timeout%2A>プロパティを<xref:System.Threading.Timeout.Infinite>(-1)。</span><span class="sxs-lookup"><span data-stu-id="40452-402">To specify an infinite value, set the <xref:System.Net.FtpWebRequest.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite> (-1).</span></span> <span data-ttu-id="40452-403">これが既定値です。</span><span class="sxs-lookup"><span data-stu-id="40452-403">This is the default value.</span></span>  
  
 <span data-ttu-id="40452-404"><xref:System.Net.FtpWebRequest.Timeout%2A> 同期要求が行われたミリ秒数には、<xref:System.Net.FtpWebRequest.GetResponse%2A>メソッドをおよび応答の待機、<xref:System.Net.FtpWebRequest.GetRequestStream%2A>メソッドは、ストリームまで待機します。</span><span class="sxs-lookup"><span data-stu-id="40452-404"><xref:System.Net.FtpWebRequest.Timeout%2A> is the number of milliseconds that a synchronous request made with the <xref:System.Net.FtpWebRequest.GetResponse%2A> method waits for a response and that the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method waits for a stream.</span></span> <span data-ttu-id="40452-405">タイムアウト期間内のリソースが応答しない場合、要求がスローされます、<xref:System.Net.WebException>で、<xref:System.Net.WebException.Status%2A>プロパティに設定<xref:System.Net.WebExceptionStatus.Timeout>します。</span><span class="sxs-lookup"><span data-stu-id="40452-405">If a resource does not respond within the time-out period, the request throws a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.Timeout>.</span></span>  
  
 <span data-ttu-id="40452-406">変更する<xref:System.Net.FtpWebRequest.Timeout%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="40452-406">Changing <xref:System.Net.FtpWebRequest.Timeout%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="40452-407">ドメイン ネーム システム (DNS) クエリには、最大 15 秒を返すまたはタイムアウトをかかる場合があります。設定すると、要求には、解決を必要とするホスト名が含まれています。<xref:System.Net.FtpWebRequest.Timeout%2A>値より小さい 15 秒間かかる場合があります 15 秒以上前に、<xref:System.Net.WebException>が要求のタイムアウトを示すためにスローされます。</span><span class="sxs-lookup"><span data-stu-id="40452-407">A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.FtpWebRequest.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a time-out on your request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-408">次のコード例では、このプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-408">The following code example sets this property.</span></span>  
  
 [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]
 [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="40452-409">指定された値が 0 未満で、<see cref="F:System.Threading.Timeout.Infinite" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="40452-409">The value specified is less than zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-410">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-410">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseBinary">
      <MemberSignature Language="C#" Value="public bool UseBinary { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBinary" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseBinary" />
      <MemberSignature Language="VB.NET" Value="Public Property UseBinary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseBinary { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseBinary : bool with get, set" Usage="System.Net.FtpWebRequest.UseBinary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-411">ファイル転送のデータ型を指定する <see cref="T:System.Boolean" /> 値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies the data type for file transfers.</span></span></summary>
        <value><span data-ttu-id="40452-412"><see langword="true" /> の場合は、転送されるデータがバイナリであることがサーバーに示されます。<see langword="false" /> の場合は、データがテキストであることが示されます。</span><span class="sxs-lookup"><span data-stu-id="40452-412"><see langword="true" /> to indicate to the server that the data to be transferred is binary; <see langword="false" /> to indicate that the data is text.</span></span> <span data-ttu-id="40452-413">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="40452-413">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-414">バイナリを送信する場合、このプロパティに設定、画像などのデータを`true`します。</span><span class="sxs-lookup"><span data-stu-id="40452-414">If you are sending binary data, such as an image, set this property to `true`.</span></span> <span data-ttu-id="40452-415">テキストを送信する場合は、プロパティを設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="40452-415">If you are sending text, set the property to `false`.</span></span> <span data-ttu-id="40452-416">指定する`true`により、<xref:System.Net.FtpWebRequest>を送信する、`"TYPE I"`サーバーにコマンド。</span><span class="sxs-lookup"><span data-stu-id="40452-416">Specifying `true` causes the <xref:System.Net.FtpWebRequest> to send a `"TYPE I"` command to the server.</span></span> <span data-ttu-id="40452-417">指定する`false`により、<xref:System.Net.FtpWebRequest>を送信する、`"Type A"`サーバーにコマンド。</span><span class="sxs-lookup"><span data-stu-id="40452-417">Specifying `false` causes the <xref:System.Net.FtpWebRequest> to send a `"Type A"` command to the server.</span></span> <span data-ttu-id="40452-418">FTP サーバーには、これらのコマンドを無視できます。</span><span class="sxs-lookup"><span data-stu-id="40452-418">FTP servers can ignore these commands.</span></span>  
  
 <span data-ttu-id="40452-419">変更する<xref:System.Net.FtpWebRequest.UseBinary%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="40452-419">Changing <xref:System.Net.FtpWebRequest.UseBinary%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-420">次のコード例を取得し、指定したプロパティの値が表示されます<xref:System.Net.FtpWebRequest>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40452-420">The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.</span></span>  
  
 [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]
 [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-421">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-421">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public override bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.FtpWebRequest.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-422">常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="40452-422">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="40452-423">常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="40452-423">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-424"><xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>の他の実装と互換性のためだけに提供されるプロパティ、<xref:System.Net.WebRequest>と<xref:System.Net.WebResponse>クラス。</span><span class="sxs-lookup"><span data-stu-id="40452-424">The <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.</span></span> <span data-ttu-id="40452-425">使用する理由はありません<xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>します。</span><span class="sxs-lookup"><span data-stu-id="40452-425">There is no reason to use <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="40452-426">既定の資格情報が FTP でサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="40452-426">Default credentials are not supported for FTP.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UsePassive">
      <MemberSignature Language="C#" Value="public bool UsePassive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePassive" />
      <MemberSignature Language="DocId" Value="P:System.Net.FtpWebRequest.UsePassive" />
      <MemberSignature Language="VB.NET" Value="Public Property UsePassive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsePassive { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsePassive : bool with get, set" Usage="System.Net.FtpWebRequest.UsePassive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40452-427">クライアント アプリケーションのデータ転送処理の動作を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="40452-427">Gets or sets the behavior of a client application's data transfer process.</span></span></summary>
        <value><span data-ttu-id="40452-428">クライアント アプリケーションのデータ転送処理がデータ ポートで接続を待機する場合は <see langword="false" />。それ以外で、クライアントがデータ ポートで接続を開始する必要がある場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="40452-428"><see langword="false" /> if the client application's data transfer process listens for a connection on the data port; otherwise, <see langword="true" /> if the client should initiate a connection on the data port.</span></span> <span data-ttu-id="40452-429">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="40452-429">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40452-430">設定、<xref:System.Net.FtpWebRequest.UsePassive%2A>プロパティを`true`送信、"`PASV"`サーバーにコマンド。</span><span class="sxs-lookup"><span data-stu-id="40452-430">Setting the <xref:System.Net.FtpWebRequest.UsePassive%2A> property to `true` sends the "`PASV"` command to the server.</span></span> <span data-ttu-id="40452-431">このコマンドは、データ ポートでリッスンおよび転送コマンドの受信時に開始するのではなく、接続を待機するサーバーを要求します。</span><span class="sxs-lookup"><span data-stu-id="40452-431">This command requests the server to listen on a data port and to wait for a connection rather than initiate one upon receipt of a transfer command.</span></span>  
  
 <span data-ttu-id="40452-432">使用して指定されている動作の説明については<xref:System.Net.FtpWebRequest.UsePassive%2A>を参照してください[RFC 959。「ファイル転送プロトコル」、セクション 3.2。「データ接続を確立する」と 4.1.2。「転送コマンドのパラメーター」](https://www.ietf.org/rfc/rfc959.txt)します。</span><span class="sxs-lookup"><span data-stu-id="40452-432">For a description of the behaviors that are specified using <xref:System.Net.FtpWebRequest.UsePassive%2A>, see [RFC 959: "File Transfer Protocol", Section 3.2: "Establishing Data Connections" and Section 4.1.2: "Transfer Parameter Commands"](https://www.ietf.org/rfc/rfc959.txt).</span></span>  
  
 <span data-ttu-id="40452-433">変更する<xref:System.Net.FtpWebRequest.UsePassive%2A>呼び出した後、 <xref:System.Net.FtpWebRequest.GetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>、 <xref:System.Net.FtpWebRequest.GetResponse%2A>、または<xref:System.Net.FtpWebRequest.BeginGetResponse%2A>メソッド、<xref:System.InvalidOperationException>例外。</span><span class="sxs-lookup"><span data-stu-id="40452-433">Changing <xref:System.Net.FtpWebRequest.UsePassive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.</span></span>  
  
 <span data-ttu-id="40452-434">場合<xref:System.Net.FtpWebRequest.UsePassive%2A>に設定されている`true`、FTP サーバーは、ファイルのサイズを送信しない可能性があります、およびダウンロードの進行状況が 0 を常になります。</span><span class="sxs-lookup"><span data-stu-id="40452-434">If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `true`, the FTP server may not send the size of the file, and download progress can always be zero.</span></span> <span data-ttu-id="40452-435">場合<xref:System.Net.FtpWebRequest.UsePassive%2A>に設定されている`false`ファイアウォールの警告を生成し、ファイルのダウンロードをブロックできます。</span><span class="sxs-lookup"><span data-stu-id="40452-435">If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `false`, a firewall can raise an alert and block the file download.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40452-436">次のコード例を取得し、指定したプロパティの値が表示されます<xref:System.Net.FtpWebRequest>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="40452-436">The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.</span></span>  
  
 [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]
 [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40452-437">既に処理中の要求で、このプロパティに対して新しい値が指定されました。</span><span class="sxs-lookup"><span data-stu-id="40452-437">A new value was specified for this property for a request that is already in progress.</span></span></exception>
        <altmember cref="T:System.Net.FtpWebResponse" />
        <altmember cref="T:System.Net.FtpStatusCode" />
        <altmember cref="T:System.Net.WebRequestMethods.Ftp" />
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Net.WebResponse" />
        <altmember cref="T:System.Net.WebClient" />
      </Docs>
    </Member>
  </Members>
</Type>