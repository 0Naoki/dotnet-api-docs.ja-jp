<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31c57b4c21d22a9059f7d87ff25810a151ee38b6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36605829" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub TimerCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void TimerCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type TimerCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="f7f60-101">このデリゲートで呼び出されたメソッドに関連するアプリケーション固有の情報を格納するオブジェクト、または <see langword="null" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7f60-101">An object containing application-specific information relevant to the method invoked by this delegate, or <see langword="null" />.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="f7f60-102">
        <see cref="T:System.Threading.Timer" /> からの呼び出しを処理するメソッドを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f7f60-102">Represents the method that handles calls from a <see cref="T:System.Threading.Timer" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f60-103">使用して、`TimerCallback`によって呼び出されるメソッドを指定するデリゲート、<xref:System.Threading.Timer>です。</span><span class="sxs-lookup"><span data-stu-id="f7f60-103">Use a `TimerCallback` delegate to specify the method that is called by a <xref:System.Threading.Timer>.</span></span> <span data-ttu-id="f7f60-104">このメソッドは、タイマー; を作成したスレッドで実行しません。システムによって提供される個別のスレッド プールのスレッドで実行します。</span><span class="sxs-lookup"><span data-stu-id="f7f60-104">This method does not execute in the thread that created the timer; it executes in a separate thread pool thread that is provided by the system.</span></span> <span data-ttu-id="f7f60-105">`TimerCallback`デリゲートは、開始時間が経過後に 1 回メソッドを呼び出すし、タイマー間隔まであたり 1 回呼び出すことは引き続き、<xref:System.Threading.Timer.Dispose%2A>メソッドを呼び出すまで、または、<xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType>間隔値を持つメソッドが呼び出されます<xref:System.Threading.Timeout.Infinite>です。</span><span class="sxs-lookup"><span data-stu-id="f7f60-105">The `TimerCallback` delegate invokes the method once after the start time elapses, and continues to invoke it once per timer interval until the <xref:System.Threading.Timer.Dispose%2A> method is called, or until the <xref:System.Threading.Timer.Change%2A?displayProperty=nameWithType> method is called with the interval value <xref:System.Threading.Timeout.Infinite>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7f60-106">コールバックが後に発生することが、<xref:System.Threading.Timer.Dispose>メソッドのオーバー ロードが呼び出されたため、タイマー キューにスレッド プールのスレッドでコールバックを実行します。</span><span class="sxs-lookup"><span data-stu-id="f7f60-106">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="f7f60-107">使用することができます、<xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29>メソッドのオーバー ロードは、すべてのコールバックが完了するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="f7f60-107">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="f7f60-108">タイマーのデリゲートは、タイマーが構築され、変更できないときに指定します。</span><span class="sxs-lookup"><span data-stu-id="f7f60-108">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="f7f60-109">開始時刻、`Timer`に渡される、`dueTime`のパラメーター、`Timer`コンス トラクター、および期間が渡された、`period`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f7f60-109">The start time for a `Timer` is passed in the `dueTime` parameter of the `Timer` constructors, and the period is passed in the `period` parameter.</span></span> <span data-ttu-id="f7f60-110">作成と使用を示す例については、`TimerCallback`デリゲートは、「<xref:System.Threading.Timer?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="f7f60-110">For an example that demonstrates creating and using a `TimerCallback` delegate, see <xref:System.Threading.Timer?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7f60-111">次のコード例で使用されるデリゲートを作成する方法を示しています、`Timer`クラスです。</span><span class="sxs-lookup"><span data-stu-id="f7f60-111">The following code example shows how to create the delegate used with the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>