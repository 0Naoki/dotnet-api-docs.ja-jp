<Type Name="CancellationTokenRegistration" FullName="System.Threading.CancellationTokenRegistration">
  <TypeSignature Language="C#" Value="public struct CancellationTokenRegistration : IDisposable, IEquatable&lt;System.Threading.CancellationTokenRegistration&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CancellationTokenRegistration extends System.ValueType implements class System.IDisposable, class System.IEquatable`1&lt;valuetype System.Threading.CancellationTokenRegistration&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CancellationTokenRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Structure CancellationTokenRegistration&#xA;Implements IDisposable, IEquatable(Of CancellationTokenRegistration)" />
  <TypeSignature Language="C++ CLI" Value="public value class CancellationTokenRegistration : IDisposable, IEquatable&lt;System::Threading::CancellationTokenRegistration&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Threading.CancellationTokenRegistration&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f0ab6-101"><see cref="T:System.Threading.CancellationToken" /> に登録されているコールバック デリゲートを表します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-101">Represents a callback delegate that has been registered with a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0ab6-102">コールバックは、トークンが取り消されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-102">The callback is called when the token is canceled.</span></span> <span data-ttu-id="f0ab6-103">コールバックの登録を解除するには、対応する登録インスタンスを破棄します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-103">To unregister a callback, dispose the corresponding Registration instance.</span></span> <span data-ttu-id="f0ab6-104">詳細情報とコード例を参照してください。[マネージ スレッドのキャンセル](~/docs/standard/threading/cancellation-in-managed-threads.md)です。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-104">For more information and code examples see [Cancellation in Managed Threads](~/docs/standard/threading/cancellation-in-managed-threads.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f0ab6-105">すべてのパブリックおよびプロテクト メンバー<see cref="T:System.Threading.CancellationTokenRegistration" />はスレッド セーフであるとする必要がありますのみ Dispose を除き、複数のスレッドから同時に使用することがあるときに使用上の他のすべての操作、<see cref="T:System.Threading.CancellationTokenRegistration" />が完了します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-105">All public and protected members of <see cref="T:System.Threading.CancellationTokenRegistration" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.CancellationTokenRegistration" /> have completed.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0ab6-106"><see cref="T:System.Threading.CancellationTokenRegistration" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-106">Releases all resources used by the current instance of the <see cref="T:System.Threading.CancellationTokenRegistration" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0ab6-107">`Dispose` を使い終わったら <xref:System.Threading.CancellationTokenRegistration> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-107">Call `Dispose` when you are finished using the <xref:System.Threading.CancellationTokenRegistration>.</span></span> <span data-ttu-id="f0ab6-108">`Dispose` メソッドによって、<xref:System.Threading.CancellationTokenRegistration> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-108">The `Dispose` method leaves the <xref:System.Threading.CancellationTokenRegistration> in an unusable state.</span></span> <span data-ttu-id="f0ab6-109">呼び出した後`Dispose`へのすべての参照を解放する必要があります、<xref:System.Threading.CancellationTokenRegistration>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Threading.CancellationTokenRegistration>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-109">After calling `Dispose`, you must release all references to the <xref:System.Threading.CancellationTokenRegistration> so the garbage collector can reclaim the memory that the <xref:System.Threading.CancellationTokenRegistration> was occupying.</span></span>  
  
 <span data-ttu-id="f0ab6-110">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-110">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f0ab6-111">`Dispose` への最後の参照を解放する前に、必ず <xref:System.Threading.CancellationTokenRegistration> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-111">Always call `Dispose` before you release your last reference to the <xref:System.Threading.CancellationTokenRegistration>.</span></span> <span data-ttu-id="f0ab6-112">そうしないと、ガベージ コレクターが <xref:System.Threading.CancellationTokenRegistration> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-112">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CancellationTokenRegistration> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f0ab6-113">現在の <see cref="T:System.Threading.CancellationTokenRegistration" /> インスタンスが指定された <see cref="T:System.Threading.CancellationTokenRegistration" /> と等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-113">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="f0ab6-114">このインスタンスと比較する他方のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-114">The other object to which to compare this instance.</span></span></param>
        <summary><span data-ttu-id="f0ab6-115">現在の <see cref="T:System.Threading.CancellationTokenRegistration" /> インスタンスが指定された <see cref="T:System.Threading.CancellationTokenRegistration" /> と等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-115">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span></span></summary>
        <returns><span data-ttu-id="f0ab6-116">これと <paramref name="obj" /> の両方が等しい場合は True。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-116">True, if both this and <paramref name="obj" /> are equal.</span></span> <span data-ttu-id="f0ab6-117">それ以外の場合は False。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-117">False, otherwise.</span></span>  
  
 <span data-ttu-id="f0ab6-118">2 つの <see cref="T:System.Threading.CancellationTokenRegistration" /> インスタンスが、<see cref="T:System.Threading.CancellationToken" /> の同じ Register メソッドの単一の呼び出しの結果を参照している場合、両者は等しいことになります。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-118">Two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal if they both refer to the output of a single call to the same Register method of a <see cref="T:System.Threading.CancellationToken" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Threading.CancellationTokenRegistration other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Threading.CancellationTokenRegistration other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.Equals(System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Threading::CancellationTokenRegistration other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="f0ab6-119">このインスタンスと比較する他方の <see cref="T:System.Threading.CancellationTokenRegistration" />。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-119">The other <see cref="T:System.Threading.CancellationTokenRegistration" /> to which to compare this instance.</span></span></param>
        <summary><span data-ttu-id="f0ab6-120">現在の <see cref="T:System.Threading.CancellationTokenRegistration" /> インスタンスが指定された <see cref="T:System.Threading.CancellationTokenRegistration" /> と等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-120">Determines whether the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance is equal to the specified <see cref="T:System.Threading.CancellationTokenRegistration" />.</span></span></summary>
        <returns><span data-ttu-id="f0ab6-121">これと <paramref name="other" /> の両方が等しい場合は True。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-121">True, if both this and <paramref name="other" /> are equal.</span></span> <span data-ttu-id="f0ab6-122">それ以外の場合は False。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-122">False, otherwise.</span></span>  
  
 <span data-ttu-id="f0ab6-123">2 つの <see cref="T:System.Threading.CancellationTokenRegistration" /> インスタンスが、<see cref="T:System.Threading.CancellationToken" /> の同じ Register メソッドの単一の呼び出しの結果を参照している場合、両者は等しいことになります。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-123">Two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal if they both refer to the output of a single call to the same Register method of a <see cref="T:System.Threading.CancellationToken" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0ab6-124"><see cref="T:System.Threading.CancellationTokenRegistration" /> のハッシュ関数として機能します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-124">Serves as a hash function for a <see cref="T:System.Threading.CancellationTokenRegistration" />.</span></span></summary>
        <returns><span data-ttu-id="f0ab6-125">現在の <see cref="T:System.Threading.CancellationTokenRegistration" /> インスタンスのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-125">A hash code for the current <see cref="T:System.Threading.CancellationTokenRegistration" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Threading.CancellationTokenRegistration left, System.Threading.CancellationTokenRegistration right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Threading.CancellationTokenRegistration left, valuetype System.Threading.CancellationTokenRegistration right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.op_Equality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CancellationTokenRegistration, right As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Threading::CancellationTokenRegistration left, System::Threading::CancellationTokenRegistration right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationTokenRegistration" />
        <Parameter Name="right" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f0ab6-126">1 つ目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-126">The first instance.</span></span></param>
        <param name="right"><span data-ttu-id="f0ab6-127">2 つ目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-127">The second instance.</span></span></param>
        <summary><span data-ttu-id="f0ab6-128">2 つの <see cref="T:System.Threading.CancellationTokenRegistration" /> インスタンスが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-128">Determines whether two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="f0ab6-129">インスタンスが等しい場合は true。それ以外の場合は false。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-129">True if the instances are equal; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Threading.CancellationTokenRegistration left, System.Threading.CancellationTokenRegistration right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Threading.CancellationTokenRegistration left, valuetype System.Threading.CancellationTokenRegistration right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CancellationTokenRegistration.op_Inequality(System.Threading.CancellationTokenRegistration,System.Threading.CancellationTokenRegistration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CancellationTokenRegistration, right As CancellationTokenRegistration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Threading::CancellationTokenRegistration left, System::Threading::CancellationTokenRegistration right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Threading.CancellationTokenRegistration" />
        <Parameter Name="right" Type="System.Threading.CancellationTokenRegistration" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="f0ab6-130">1 つ目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-130">The first instance.</span></span></param>
        <param name="right"><span data-ttu-id="f0ab6-131">2 つ目のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-131">The second instance.</span></span></param>
        <summary><span data-ttu-id="f0ab6-132">2 つの <see cref="T:System.Threading.CancellationTokenRegistration" /> インスタンスが等しくないかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-132">Determines whether two <see cref="T:System.Threading.CancellationTokenRegistration" /> instances are not equal.</span></span></summary>
        <returns><span data-ttu-id="f0ab6-133">インスタンスが等しくない場合は true。それ以外の場合は false。</span><span class="sxs-lookup"><span data-stu-id="f0ab6-133">True if the instances are not equal; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken Token" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CancellationTokenRegistration.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken Token { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>