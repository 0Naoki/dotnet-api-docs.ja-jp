<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WaitCallback.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a38353245326738dcba09700a654648f37402fa4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a38353245326738dcba09700a654648f37402fa4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.WaitCallback">
          <source>An object containing information to be used by the callback method.</source>
          <target state="translated">コールバック メソッドが使用する情報を格納したオブジェクト。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Threading.WaitCallback">
          <source>Represents a callback method to be executed by a thread pool thread.</source>
          <target state="translated">スレッド プール スレッドが実行するコールバック メソッドを表します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source><ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> represents a callback method that you want to execute on a <ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph> thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> 上で実行するコールバック メソッドを表す、<ph id="ph2">&lt;xref:System.Threading.ThreadPool&gt;</ph>スレッドです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Create the delegate by passing your callback method to the <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> constructor.</source>
          <target state="translated">コールバック メソッドを渡すことによって、デリゲートを作成、<ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Your method must have the signature shown here.</source>
          <target state="translated">メソッドには、次に示す署名が必要です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Queue your task for execution by passing the <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> delegate to <ph id="ph2">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">キューに渡すことによって、タスクの実行、<ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph>に委任<ph id="ph2">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Your callback method executes when a thread pool thread becomes available.</source>
          <target state="translated">スレッド プールのスレッドが利用可能になったら、コールバック メソッドを実行します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Visual Basic users can omit the <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> constructor, and simply use the <ph id="ph2">`AddressOf`</ph> operator when passing the callback method to <ph id="ph3">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</ph>.</source>
          <target state="translated">Visual Basic の場合は省略できます、<ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph>コンス トラクター、および使用するだけで、<ph id="ph2">`AddressOf`</ph>演算子にコールバック メソッドを渡すときに<ph id="ph3">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Visual Basic automatically calls the correct delegate constructor.</source>
          <target state="translated">Visual Basic では、適切なデリゲート コンス トラクターは、自動的に呼び出します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <ph id="ph1">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</ph> when you queue your task for execution.</source>
          <target state="translated">コールバック メソッドに情報を渡す場合は、必要な情報を格納しているオブジェクトを作成しに渡すこと<ph id="ph1">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</ph>ときにキューにタスクを実行します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Each time your callback method executes, the <ph id="ph1">`state`</ph> parameter contains this object.</source>
          <target state="translated">コールバック メソッドが実行されるたびに、<ph id="ph1">`state`</ph>パラメーターには、このオブジェクトが含まれています。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>For more information about using callbacks to synchronize thread pool threads, see <bpt id="p1">[</bpt>The Managed Thread Pool<ept id="p1">](~/docs/standard/threading/the-managed-thread-pool.md)</ept>.</source>
          <target state="translated">詳細については、スレッド プールのスレッドを同期するためにコールバックを使用して、次を参照してください。 <bpt id="p1">[</bpt>、マネージ スレッド プール<ept id="p1">](~/docs/standard/threading/the-managed-thread-pool.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>This section contains two examples.</source>
          <target state="translated">このセクションには、2 つの例が含まれています。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>The first example demonstrates how you can queue a simple task for execution by the thread pool.</source>
          <target state="translated">最初の例では、単純なタスクの実行、スレッド プールのキュー方法を示します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>The second example demonstrates how you can queue a task and pass information to it.</source>
          <target state="translated">2 番目の例では、キュー、タスクおよび情報を渡したりする方法を示します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source><bpt id="p1">**</bpt>Example 1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>例 1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>This example shows how to use the <ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph> delegate to queue a task for execution by the thread pool.</source>
          <target state="translated">この例を使用する方法を示しています、<ph id="ph1">&lt;xref:System.Threading.WaitCallback&gt;</ph>のためのキュー、タスク、スレッド プールで実行するデリゲート。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType&gt;</ph> method overload to queue a task, which is represented by a <ph id="ph2">&lt;xref:System.Threading.WaitCallback&gt;</ph> that wraps the <ph id="ph3">`ThreadProc`</ph> method, to execute when a thread becomes available.</source>
          <target state="translated">コード例では、<ph id="ph1">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType&gt;</ph>メソッドのオーバー ロードによって表されるキューのタスクを<ph id="ph2">&lt;xref:System.Threading.WaitCallback&gt;</ph>をラップする、<ph id="ph3">`ThreadProc`</ph>メソッドは、スレッドが使用可能なになったときに実行します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>No task information is supplied with this overload.</source>
          <target state="translated">このオーバー ロードでタスク情報は提供されません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>Therefore, the information that is available to the <ph id="ph1">`ThreadProc`</ph> method is limited to the object the method belongs to.</source>
          <target state="translated">そのための情報に提供される、<ph id="ph1">`ThreadProc`</ph>メソッドは、メソッドが属するオブジェクトに制限されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source><bpt id="p1">**</bpt>Example 2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>例 2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>This example shows how to create an object that contains task information.</source>
          <target state="translated">この例では、タスクの情報を格納しているオブジェクトを作成する方法を示します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.WaitCallback">
          <source>It also demonstrates how to pass that object to a task that is queued for execution by the thread pool.</source>
          <target state="translated">実行のキューにタスクをスレッド プール内にそのオブジェクトを渡す方法も示します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>