<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a38353245326738dcba09700a654648f37402fa4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">
      <span data-ttu-id="987b9-101">コールバック メソッドが使用する情報を格納したオブジェクト。</span>
      <span class="sxs-lookup">
        <span data-stu-id="987b9-101">An object containing information to be used by the callback method.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="987b9-102">スレッド プール スレッドが実行するコールバック メソッドを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="987b9-102">Represents a callback method to be executed by a thread pool thread.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987b9-103"><xref:System.Threading.WaitCallback> 上で実行するコールバック メソッドを表す、<xref:System.Threading.ThreadPool>スレッドです。</span><span class="sxs-lookup"><span data-stu-id="987b9-103"><xref:System.Threading.WaitCallback> represents a callback method that you want to execute on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="987b9-104">コールバック メソッドを渡すことによって、デリゲートを作成、<xref:System.Threading.WaitCallback>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="987b9-104">Create the delegate by passing your callback method to the <xref:System.Threading.WaitCallback> constructor.</span></span> <span data-ttu-id="987b9-105">メソッドには、次に示す署名が必要です。</span><span class="sxs-lookup"><span data-stu-id="987b9-105">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="987b9-106">キューに渡すことによって、タスクの実行、<xref:System.Threading.WaitCallback>に委任<xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="987b9-106">Queue your task for execution by passing the <xref:System.Threading.WaitCallback> delegate to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="987b9-107">スレッド プールのスレッドが利用可能になったら、コールバック メソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="987b9-107">Your callback method executes when a thread pool thread becomes available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="987b9-108">Visual Basic の場合は省略できます、<xref:System.Threading.WaitCallback>コンス トラクター、および使用するだけで、`AddressOf`演算子にコールバック メソッドを渡すときに<xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>です。</span><span class="sxs-lookup"><span data-stu-id="987b9-108">Visual Basic users can omit the <xref:System.Threading.WaitCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span></span> <span data-ttu-id="987b9-109">Visual Basic では、適切なデリゲート コンス トラクターは、自動的に呼び出します。</span><span class="sxs-lookup"><span data-stu-id="987b9-109">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="987b9-110">コールバック メソッドに情報を渡す場合は、必要な情報を格納しているオブジェクトを作成しに渡すこと<xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>ときにキューにタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="987b9-110">If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A> when you queue your task for execution.</span></span> <span data-ttu-id="987b9-111">コールバック メソッドが実行されるたびに、`state`パラメーターには、このオブジェクトが含まれています。</span><span class="sxs-lookup"><span data-stu-id="987b9-111">Each time your callback method executes, the `state` parameter contains this object.</span></span>  
  
 <span data-ttu-id="987b9-112">詳細については、スレッド プールのスレッドを同期するためにコールバックを使用して、次を参照してください。 [、マネージ スレッド プール](~/docs/standard/threading/the-managed-thread-pool.md)です。</span><span class="sxs-lookup"><span data-stu-id="987b9-112">For more information about using callbacks to synchronize thread pool threads, see [The Managed Thread Pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="987b9-113">このセクションには、2 つの例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="987b9-113">This section contains two examples.</span></span> <span data-ttu-id="987b9-114">最初の例では、単純なタスクの実行、スレッド プールのキュー方法を示します。</span><span class="sxs-lookup"><span data-stu-id="987b9-114">The first example demonstrates how you can queue a simple task for execution by the thread pool.</span></span>  
  
 <span data-ttu-id="987b9-115">2 番目の例では、キュー、タスクおよび情報を渡したりする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="987b9-115">The second example demonstrates how you can queue a task and pass information to it.</span></span>  
  
 <span data-ttu-id="987b9-116">**例 1**</span><span class="sxs-lookup"><span data-stu-id="987b9-116">**Example 1**</span></span>  
  
 <span data-ttu-id="987b9-117">この例を使用する方法を示しています、<xref:System.Threading.WaitCallback>のためのキュー、タスク、スレッド プールで実行するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="987b9-117">This example shows how to use the <xref:System.Threading.WaitCallback> delegate to queue a task for execution by the thread pool.</span></span> <span data-ttu-id="987b9-118">コード例では、<xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType>メソッドのオーバー ロードによって表されるキューのタスクを<xref:System.Threading.WaitCallback>をラップする、`ThreadProc`メソッドは、スレッドが使用可能なになったときに実行します。</span><span class="sxs-lookup"><span data-stu-id="987b9-118">The code example uses the <xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%29?displayProperty=nameWithType> method overload to queue a task, which is represented by a <xref:System.Threading.WaitCallback> that wraps the `ThreadProc` method, to execute when a thread becomes available.</span></span> <span data-ttu-id="987b9-119">このオーバー ロードでタスク情報は提供されません。</span><span class="sxs-lookup"><span data-stu-id="987b9-119">No task information is supplied with this overload.</span></span> <span data-ttu-id="987b9-120">そのための情報に提供される、`ThreadProc`メソッドは、メソッドが属するオブジェクトに制限されます。</span><span class="sxs-lookup"><span data-stu-id="987b9-120">Therefore, the information that is available to the `ThreadProc` method is limited to the object the method belongs to.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem0/VB/source.vb#1)]  
  
 <span data-ttu-id="987b9-121">**例 2**</span><span class="sxs-lookup"><span data-stu-id="987b9-121">**Example 2**</span></span>  
  
 <span data-ttu-id="987b9-122">この例では、タスクの情報を格納しているオブジェクトを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="987b9-122">This example shows how to create an object that contains task information.</span></span> <span data-ttu-id="987b9-123">実行のキューにタスクをスレッド プール内にそのオブジェクトを渡す方法も示します。</span><span class="sxs-lookup"><span data-stu-id="987b9-123">It also demonstrates how to pass that object to a task that is queued for execution by the thread pool.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool QueueUserWorkItem1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool QueueUserWorkItem1/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>