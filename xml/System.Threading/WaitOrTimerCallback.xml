<Type Name="WaitOrTimerCallback" FullName="System.Threading.WaitOrTimerCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e689e3c51fb3b9fb769b22344ec66072599632f8" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70692954" /></Metadata><TypeSignature Language="C#" Value="public delegate void WaitOrTimerCallback(object state, bool timedOut);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitOrTimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitOrTimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitOrTimerCallback(state As Object, timedOut As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitOrTimerCallback(System::Object ^ state, bool timedOut);" />
  <TypeSignature Language="F#" Value="type WaitOrTimerCallback = delegate of obj * bool -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
    <Parameter Name="timedOut" Type="System.Boolean" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">コールバック メソッドが実行されるたびに使用する情報を格納したオブジェクト。</param>
    <param name="timedOut"><see cref="T:System.Threading.WaitHandle" /> がタイムアウトした場合は <see langword="true" />。シグナル通知された場合は <see langword="false" />。</param>
    <summary><see cref="T:System.Threading.WaitHandle" /> がシグナル通知されたとき、またはタイムアウトしたときに呼び出されるメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Threading.WaitOrTimerCallback>登録された待機ハンドルがタイムアウトになったとき、またはシグナル状態になったときに実行するコールバックメソッドを表します。 デリゲートを作成するには、コールバックメソッド<xref:System.Threading.WaitOrTimerCallback>をコンストラクターに渡します。 メソッドには、ここに示す署名が必要です。  
  
 <xref:System.Threading.WaitOrTimerCallback> デリゲート <xref:System.Threading.WaitHandle> とをに <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=nameWithType> 渡すことによって、登録された待機ハンドルを作成します。 コールバックメソッドは、がタイムアウト<xref:System.Threading.WaitHandle>するたびに、またはシグナル状態になるたびに実行されます。  
  
  
> [!NOTE]
>  Visual Basic ユーザーは、 <xref:System.Threading.WaitOrTimerCallback>コンストラクターを省略できます。また、コールバックメソッドをに<xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>渡すときに`AddressOf`演算子を使用するだけです。 Visual Basic は、正しいデリゲートコンストラクターを自動的に呼び出します。  
  
 コールバックメソッドに情報を渡す必要がある場合は、必要な情報を含むオブジェクトを作成し、 <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>登録された待機ハンドルを作成するときにに渡します。 コールバックメソッドを実行するたびに`state` 、パラメーターにこのオブジェクトが格納されます。  
  
 コールバックメソッドを使用してスレッドプールスレッドを同期する方法の詳細については、「[マネージスレッドプール](~/docs/standard/threading/the-managed-thread-pool.md)」を参照してください。  
  
   
  
## Examples  
 次の例は、 <xref:System.Threading.WaitOrTimerCallback>デリゲートを使用して、待機ハンドルがシグナル状態になったときに実行されるコールバックメソッドを表す方法を示しています。  
  
 また、この例では、指定<xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>された待機ハンドルがシグナル状態になったときに、メソッドを使用して指定されたコールバックメソッドを実行する方法も示しています。 この例では`WaitProc` 、コールバックメソッドはで、待機ハンドル<xref:System.Threading.AutoResetEvent>はです。  
  
 この例では`TaskInfo` 、実行時にコールバックに渡される情報を保持するクラスを定義します。 この例では`TaskInfo` 、オブジェクトを作成し、いくつかの文字列データを割り当てます。 メソッドに <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> よって返さ`TaskInfo` れるは <xref:System.Threading.RegisteredWaitHandle> 、コールバックメソッドがにアクセスできるように、オブジェクトのフィールドに割り当てられます。 `Handle`  <xref:System.Threading.RegisteredWaitHandle>  
  
 `TaskInfo`オブジェクトに加えて、メソッドの<xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>呼び出しでは、タスクが<xref:System.Threading.AutoResetEvent> `WaitProc`待機<xref:System.Threading.WaitOrTimerCallback>する、コールバックメソッドを表すデリゲート、1秒のタイムアウト間隔、および複数のコールバックを指定します。  
  
 メインスレッドが<xref:System.Threading.AutoResetEvent> <xref:System.Threading.EventWaitHandle.Set%2A>メソッドを<xref:System.Threading.WaitOrTimerCallback>呼び出すことによってを通知すると、デリゲートが呼び出されます。 メソッド`WaitProc`は、 <xref:System.Threading.RegisteredWaitHandle>タイムアウトが発生したかどうかをテストします。 待機ハンドルがシグナル状態になったためにコールバックが`WaitProc`呼び出された<xref:System.Threading.RegisteredWaitHandle>場合、メソッドはを登録解除し、さらにコールバックを停止します。 タイムアウトが発生した場合、タスクは待機を続けます。 メソッド`WaitProc`は、メッセージをコンソールに出力することによって終了します。  
  
 [!code-cpp[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/threading/threads-and-threading.md">スレッドおよびスレッド処理</related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md">マネージド スレッド プール</related>
  </Docs>
</Type>
