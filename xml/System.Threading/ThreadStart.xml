<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ThreadStart.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52847d7cf8164513d435c7548adb57b6cd1419a68.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2847d7cf8164513d435c7548adb57b6cd1419a68</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Threading.ThreadStart">
          <source>Represents the method that executes on a <ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.Thread" /&gt;</ph> で実行するメソッドを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>When a managed thread is created, the method that executes on the thread is represented by a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate or a <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate that is passed to the <ph id="ph3">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">スレッドで実行するメソッドとして表されますマネージ スレッドの作成時に、<ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph>委任または<ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph>デリゲートに渡される、<ph id="ph3">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>The thread does not begin executing until the <ph id="ph1">&lt;xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType&gt;</ph> method is called.</source>
          <target state="translated">スレッドがまで実行を開始していない、<ph id="ph1">&lt;xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>Execution begins at the first line of the method represented by the <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate.</source>
          <target state="translated">によって表されるメソッドの最初の行で実行が開始される、<ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph>または<ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph>を委任します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>Visual Basic and C# users can omit the <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> or <ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph> delegate constructor when creating a thread.</source>
          <target state="translated">Visual Basic および c# のユーザーを省略できます、<ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph>または<ph id="ph2">&lt;xref:System.Threading.ParameterizedThreadStart&gt;</ph>スレッドを作成するときに、デリゲート コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In Visual Basic, use the <ph id="ph1">`AddressOf`</ph> operator when passing your method to the <ph id="ph2">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph> constructor; for example, <ph id="ph3">`Dim t As New Thread(AddressOf ThreadProc)`</ph>.</source>
          <target state="translated">Visual Basic を使用して、<ph id="ph1">`AddressOf`</ph>演算子が、メソッドに渡すときに、<ph id="ph2">&lt;xref:System.Threading.Thread.%23ctor%2A&gt;</ph>コンス トラクター。 たとえば、<ph id="ph3">`Dim t As New Thread(AddressOf ThreadProc)`</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In C#, simply specify the name of the thread procedure.</source>
          <target state="translated">C# の場合は、単にスレッド プロシージャの名前を指定します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>The compiler selects the correct delegate constructor.</source>
          <target state="translated">コンパイラは、適切なデリゲート コンス トラクターを選択します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>[C++]</source>
          <target state="translated">[C++]</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In version 2.0 of the .NET Framework, creating a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate for a static method in C++ requires only one parameter: the address of the callback method, qualified by the class name.</source>
          <target state="translated">.NET Framework のバージョン 2.0 で作成、<ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph>の C++ では静的メソッドには、1 つだけのパラメーターが必要です。 委任: クラス名で修飾して、コールバック メソッドのアドレス。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>In earlier versions two parameters were required when creating a delegate for a static method: zero (null) and the method address.</source>
          <target state="translated">以前のバージョンで 2 つのパラメーターが必要な静的メソッドのデリゲートを作成する場合: 0 (null) とメソッドのアドレス。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>For an instance method, all versions require two parameters: the instance variable and the method address.</source>
          <target state="translated">インスタンス メソッドでのすべてのバージョンは 2 つのパラメーターを必要とします。 インスタンス変数とメソッドのアドレス。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>The following code example shows the syntax for creating and using a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate with an instance method and with a static method.</source>
          <target state="translated">次のコード例の作成と使用の構文を示しています、<ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph>にインスタンス メソッドと静的メソッドを使用して委任します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>For another simple example that demonstrates how to create a <ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph> delegate, see the <ph id="ph2">&lt;xref:System.Threading.Thread.Start?displayProperty=nameWithType&gt;</ph> method overload.</source>
          <target state="translated">作成する方法を示す別の単純な例については、<ph id="ph1">&lt;xref:System.Threading.ThreadStart&gt;</ph>デリゲートを参照してください、<ph id="ph2">&lt;xref:System.Threading.Thread.Start?displayProperty=nameWithType&gt;</ph>メソッドのオーバー ロードします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Threading.ThreadStart">
          <source>For more information about thread creation, see <bpt id="p1">[</bpt>Creating Threads and Passing Data at Start Time<ept id="p1">](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md)</ept>.</source>
          <target state="translated">スレッドの作成の詳細については、次を参照してください。<bpt id="p1">[</bpt>スレッドの作成と開始時にデータを渡す<ept id="p1">](~/docs/standard/threading/creating-threads-and-passing-data-at-start-time.md)</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>