<Type Name="ExecutionContext" FullName="System.Threading.ExecutionContext">
  <TypeSignature Language="C#" Value="public sealed class ExecutionContext : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ExecutionContext extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ExecutionContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExecutionContext&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExecutionContext sealed : IDisposable, System::Runtime::Serialization::ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="43f2c-101">現在のスレッドの実行コンテキストを管理します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-101">Manages the execution context for the current thread.</span></span> <span data-ttu-id="43f2c-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="43f2c-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f2c-103"><xref:System.Threading.ExecutionContext>クラスは、すべての情報の論理的なスレッドに関連する実行の 1 つのコンテナーを提供します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-103">The <xref:System.Threading.ExecutionContext> class provides a single container for all information relevant to a logical thread of execution.</span></span> <span data-ttu-id="43f2c-104">これには、セキュリティ コンテキスト、呼び出しのコンテキストとの同期コンテキストが含まれます。</span><span class="sxs-lookup"><span data-stu-id="43f2c-104">This includes security context, call context, and synchronization context.</span></span>  
  
 <span data-ttu-id="43f2c-105"><xref:System.Threading.ExecutionContext>クラスをキャプチャし、このコンテキストをユーザー定義の非同期ポイント間で転送するユーザー コードの機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-105">The <xref:System.Threading.ExecutionContext> class provides the functionality for user code to capture and transfer this context across user-defined asynchronous points.</span></span> <span data-ttu-id="43f2c-106">共通言語ランタイムにより、<xref:System.Threading.ExecutionContext>は管理対象プロセス内でのランタイム定義の非同期ポイント間で一貫して転送します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-106">The common language runtime ensures that the <xref:System.Threading.ExecutionContext> is consistently transferred across runtime-defined asynchronous points within the managed process.</span></span>  
  
 <span data-ttu-id="43f2c-107">実行コンテキストは、COM アパートメントに対応するマネージです。</span><span class="sxs-lookup"><span data-stu-id="43f2c-107">An execution context is the managed equivalent of a COM apartment.</span></span> <span data-ttu-id="43f2c-108">アプリケーション ドメイン内でスレッドを転送するたびに全体の実行コンテキストを転送する必要があります。</span><span class="sxs-lookup"><span data-stu-id="43f2c-108">Within an application domain, the entire execution context must be transferred whenever a thread is transferred.</span></span> <span data-ttu-id="43f2c-109">によって行われた転送中にこのような状況が発生した、<xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType>メソッド、ほとんどのスレッド プールの操作、および Windows フォーム スレッドの Windows メッセージ ポンプを介してマーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="43f2c-109">This situation occurs during transfers made by the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method, most thread pool operations, and Windows Forms thread marshaling through the Windows message pump.</span></span> <span data-ttu-id="43f2c-110">安全でないスレッド プールの操作では実行されません (など、<xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A>メソッド)、これは、圧縮されたスタックに転送しません。</span><span class="sxs-lookup"><span data-stu-id="43f2c-110">It does not occur in unsafe thread pool operations (such as the <xref:System.Threading.ThreadPool.UnsafeQueueUserWorkItem%2A> method), which do not transfer the compressed stack.</span></span> <span data-ttu-id="43f2c-111">圧縮されたスタックがフローする、場所にマネージ プリンシパル、同期、ロケール、およびユーザーのコンテキストもフローします。</span><span class="sxs-lookup"><span data-stu-id="43f2c-111">Wherever the compressed stack flows, the managed principal, synchronization, locale, and user context also flow.</span></span> <span data-ttu-id="43f2c-112"><xref:System.Threading.ExecutionContext>クラスを提供、<xref:System.Threading.ExecutionContext.Capture%2A>と<xref:System.Threading.ExecutionContext.CreateCopy%2A>実行コンテキストを取得するメソッドと<xref:System.Threading.ExecutionContext.Run%2A>を現在のスレッドの実行コンテキストを設定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="43f2c-112">The <xref:System.Threading.ExecutionContext> class provides the <xref:System.Threading.ExecutionContext.Capture%2A> and <xref:System.Threading.ExecutionContext.CreateCopy%2A> methods to get the execution context and the <xref:System.Threading.ExecutionContext.Run%2A> method to set the execution context for the current thread.</span></span>  
  
 <span data-ttu-id="43f2c-113"><xref:System.Threading.ExecutionContext>関連付けられているスレッドには、別のスレッドで設定できません。</span><span class="sxs-lookup"><span data-stu-id="43f2c-113">An <xref:System.Threading.ExecutionContext> that is associated with a thread cannot be set on another thread.</span></span> <span data-ttu-id="43f2c-114">ようにしようとすると、スローされた例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-114">Attempting to do so will result in an exception being thrown.</span></span> <span data-ttu-id="43f2c-115">反映されるまで、<xref:System.Threading.ExecutionContext>別に、1 つのスレッドからのコピーを作成、<xref:System.Threading.ExecutionContext>です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-115">To propagate the <xref:System.Threading.ExecutionContext> from one thread to another, make a copy of the <xref:System.Threading.ExecutionContext>.</span></span>  
  
 <span data-ttu-id="43f2c-116">内部的には、<xref:System.Threading.ExecutionContext>に関連付けられているすべてのデータを格納、<xref:System.Runtime.Remoting.Messaging.LogicalCallContext>です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-116">Internally, the <xref:System.Threading.ExecutionContext> stores all data that is associated with the <xref:System.Runtime.Remoting.Messaging.LogicalCallContext>.</span></span> <span data-ttu-id="43f2c-117">これにより、<xref:System.Runtime.Remoting.Messaging.LogicalCallContext>データを反映するときに、<xref:System.Threading.ExecutionContext>がコピーされ、転送します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-117">This allows the <xref:System.Runtime.Remoting.Messaging.LogicalCallContext> data to be propagated when the <xref:System.Threading.ExecutionContext> is copied and transferred.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Threading.ExecutionContext Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.ExecutionContext Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture () As ExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::ExecutionContext ^ Capture();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43f2c-118">現在のスレッドから実行コンテキストをキャプチャします。</span><span class="sxs-lookup"><span data-stu-id="43f2c-118">Captures the execution context from the current thread.</span></span></summary>
        <returns><span data-ttu-id="43f2c-119">現在のスレッドの実行コンテキストを表す <see cref="T:System.Threading.ExecutionContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="43f2c-119">An <see cref="T:System.Threading.ExecutionContext" /> object representing the execution context for the current thread.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f2c-120">キャプチャされた実行コンテキストとして使用できます、`executionContext`のパラメーター、<xref:System.Threading.ExecutionContext.Run%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="43f2c-120">The captured execution context can be used as the `executionContext` parameter for the <xref:System.Threading.ExecutionContext.Run%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.Threading.ExecutionContext CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.ExecutionContext CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As ExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::ExecutionContext ^ CreateCopy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ExecutionContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43f2c-121">現在の実行コンテキストのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-121">Creates a copy of the current execution context.</span></span></summary>
        <returns><span data-ttu-id="43f2c-122">現在の実行コンテキストを表す <see cref="T:System.Threading.ExecutionContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="43f2c-122">An <see cref="T:System.Threading.ExecutionContext" /> object representing the current execution context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f2c-123">このメソッドは、1 つのスレッドから別の実行コンテキストを反映するために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="43f2c-123">This method is useful for propagating an execution context from one thread to another.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43f2c-124">このコンテキストは使用されているため、コピーできません。</span><span class="sxs-lookup"><span data-stu-id="43f2c-124">This context cannot be copied because it is used.</span></span> <span data-ttu-id="43f2c-125">コピーできるのは、新しくキャプチャされたコンテキストだけです。</span><span class="sxs-lookup"><span data-stu-id="43f2c-125">Only newly captured contexts can be copied.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43f2c-126"><see cref="T:System.Threading.ExecutionContext" /> クラスの現在のインスタンスによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-126">Releases all resources used by the current instance of the <see cref="T:System.Threading.ExecutionContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f2c-127">`Dispose` を使い終わったら <xref:System.Threading.ExecutionContext> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-127">Call `Dispose` when you are finished using the <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="43f2c-128">`Dispose` メソッドによって、<xref:System.Threading.ExecutionContext> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="43f2c-128">The `Dispose` method leaves the <xref:System.Threading.ExecutionContext> in an unusable state.</span></span> <span data-ttu-id="43f2c-129">呼び出した後`Dispose`へのすべての参照を解放する必要があります、<xref:System.Threading.ExecutionContext>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Threading.ExecutionContext>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="43f2c-129">After calling `Dispose`, you must release all references to the <xref:System.Threading.ExecutionContext> so the garbage collector can reclaim the memory that the <xref:System.Threading.ExecutionContext> was occupying.</span></span>  
  
 <span data-ttu-id="43f2c-130">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-130">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43f2c-131">`Dispose` への最後の参照を解放する前に、必ず <xref:System.Threading.ExecutionContext> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="43f2c-131">Always call `Dispose` before you release your last reference to the <xref:System.Threading.ExecutionContext>.</span></span> <span data-ttu-id="43f2c-132">そうしないと、ガベージ コレクターが <xref:System.Threading.ExecutionContext> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="43f2c-132">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.ExecutionContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="43f2c-133">シリアル化情報が設定される <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="43f2c-133">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object to be populated with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="43f2c-134">シリアル化の対象コンテキストを表す <see cref="T:System.Runtime.Serialization.StreamingContext" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="43f2c-134">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure representing the destination context of the serialization.</span></span></param>
        <summary><span data-ttu-id="43f2c-135">現在の実行コンテキストのインスタンスを再作成するのに必要な論理コンテキスト情報を使用して、指定した <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-135">Sets the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the logical context information needed to recreate an instance of the current execution context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f2c-136"><xref:System.Threading.ExecutionContext.GetObjectData%2A> 設定、<xref:System.Runtime.Serialization.SerializationInfo>論理呼び出しコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="43f2c-136"><xref:System.Threading.ExecutionContext.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information.</span></span> <span data-ttu-id="43f2c-137">逆シリアル化実行コンテキストのオブジェクトはから再構成、<xref:System.Runtime.Serialization.SerializationInfo>ストリームで転送します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-137">During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 <span data-ttu-id="43f2c-138">詳細については、「<xref:System.Runtime.Serialization.SerializationInfo>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="43f2c-138">For more information, see <xref:System.Runtime.Serialization.SerializationInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="43f2c-139"><paramref name="info" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-139"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="43f2c-140">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-140">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="43f2c-141">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="43f2c-141">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsFlowSuppressed">
      <MemberSignature Language="C#" Value="public static bool IsFlowSuppressed ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsFlowSuppressed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.IsFlowSuppressed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsFlowSuppressed () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsFlowSuppressed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43f2c-142">実行コンテキストのフローが現在抑制されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-142">Indicates whether the flow of the execution context is currently suppressed.</span></span></summary>
        <returns>
          <span data-ttu-id="43f2c-143">フローが抑制されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="43f2c-143"><see langword="true" /> if the flow is suppressed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f2c-144"><xref:System.Threading.ExecutionContext.IsFlowSuppressed%2A>メソッドは、転送するかどうかを決定するインフラストラクチャ コンポーネントによって使用、<xref:System.Threading.ExecutionContext>非同期操作中にします。</span><span class="sxs-lookup"><span data-stu-id="43f2c-144">The <xref:System.Threading.ExecutionContext.IsFlowSuppressed%2A> method is used by infrastructure components to determine whether to transfer the <xref:System.Threading.ExecutionContext> during asynchronous operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFlow">
      <MemberSignature Language="C#" Value="public static void RestoreFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.RestoreFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreFlow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreFlow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43f2c-145">複数の非同期スレッド間における実行コンテキストのフローを復元します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-145">Restores the flow of the execution context across asynchronous threads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f2c-146"><xref:System.Threading.ExecutionContext.RestoreFlow%2A> 前の効果を反転<xref:System.Threading.ExecutionContext.SuppressFlow%2A>メソッドの呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="43f2c-146"><xref:System.Threading.ExecutionContext.RestoreFlow%2A> reverses the effect of a prior <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method call.</span></span>  
  
 <span data-ttu-id="43f2c-147">このメソッドは、<xref:System.Threading.AsyncFlowControl.Undo%2A>のメソッド、<xref:System.Threading.AsyncFlowControl>によって返される構造体、<xref:System.Threading.ExecutionContext.SuppressFlow%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="43f2c-147">This method is called by the <xref:System.Threading.AsyncFlowControl.Undo%2A> method of the <xref:System.Threading.AsyncFlowControl> structure returned by the <xref:System.Threading.ExecutionContext.SuppressFlow%2A> method.</span></span>  <span data-ttu-id="43f2c-148">使用する必要があります、<xref:System.Threading.AsyncFlowControl.Undo%2A>いない実行コンテキストのフローを復元する方法、<xref:System.Threading.ExecutionContext.RestoreFlow%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="43f2c-148">You should use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method to restore the flow of the execution context, not the <xref:System.Threading.ExecutionContext.RestoreFlow%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43f2c-149">コンテキストのフローは抑制されていないため、復元できません。</span><span class="sxs-lookup"><span data-stu-id="43f2c-149">The context flow cannot be restored because it is not being suppressed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Threading.ExecutionContext executionContext, class System.Threading.ContextCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::Threading::ExecutionContext ^ executionContext, System::Threading::ContextCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Threading.ExecutionContext" />
        <Parameter Name="callback" Type="System.Threading.ContextCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="executionContext"><span data-ttu-id="43f2c-150">設定する <see cref="T:System.Threading.ExecutionContext" />。</span><span class="sxs-lookup"><span data-stu-id="43f2c-150">The <see cref="T:System.Threading.ExecutionContext" /> to set.</span></span></param>
        <param name="callback"><span data-ttu-id="43f2c-151">指定した実行コンテキストで実行するメソッドを表す <see cref="T:System.Threading.ContextCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="43f2c-151">A <see cref="T:System.Threading.ContextCallback" /> delegate that represents the method to be run in the provided execution context.</span></span></param>
        <param name="state"><span data-ttu-id="43f2c-152">コールバック メソッドに渡すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="43f2c-152">The object to pass to the callback method.</span></span></param>
        <summary><span data-ttu-id="43f2c-153">現在のスレッドで指定した実行コンテキストを使用してメソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-153">Runs a method in a specified execution context on the current thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f2c-154">メソッドが終了したときに、以前の状態、実行コンテキストが返されます。</span><span class="sxs-lookup"><span data-stu-id="43f2c-154">The execution context is returned to its previous state when the method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="43f2c-155"><paramref name="executionContext" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-155"><paramref name="executionContext" /> is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="43f2c-156">- または -</span><span class="sxs-lookup"><span data-stu-id="43f2c-156">-or-</span></span>  
  
 <span data-ttu-id="43f2c-157">キャプチャ操作で <paramref name="executionContext" /> が取得されませんでした。</span><span class="sxs-lookup"><span data-stu-id="43f2c-157"><paramref name="executionContext" /> was not acquired through a capture operation.</span></span>  
  
 <span data-ttu-id="43f2c-158">- または -</span><span class="sxs-lookup"><span data-stu-id="43f2c-158">-or-</span></span>  
  
 <span data-ttu-id="43f2c-159"><paramref name="executionContext" /> は、<see cref="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" /> 呼び出しの引数として既に使用されています。</span><span class="sxs-lookup"><span data-stu-id="43f2c-159"><paramref name="executionContext" /> has already been used as the argument to a <see cref="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)" /> call.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="43f2c-160">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-160">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="43f2c-161">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="43f2c-161">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SuppressFlow">
      <MemberSignature Language="C#" Value="public static System.Threading.AsyncFlowControl SuppressFlow ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.AsyncFlowControl SuppressFlow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.ExecutionContext.SuppressFlow" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SuppressFlow () As AsyncFlowControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::AsyncFlowControl SuppressFlow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.AsyncFlowControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43f2c-162">複数の非同期スレッド間における実行コンテキストのフローを抑制します。</span><span class="sxs-lookup"><span data-stu-id="43f2c-162">Suppresses the flow of the execution context across asynchronous threads.</span></span></summary>
        <returns><span data-ttu-id="43f2c-163">フローを復元するための <see cref="T:System.Threading.AsyncFlowControl" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="43f2c-163">An <see cref="T:System.Threading.AsyncFlowControl" /> structure for restoring the flow.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43f2c-164">このメソッドを使用して抑制する状況のフロー、<xref:System.Threading.ExecutionContext>現在のスレッドにします。</span><span class="sxs-lookup"><span data-stu-id="43f2c-164">Use this method to suppress the flow of the <xref:System.Threading.ExecutionContext> on the current thread.</span></span>  
  
 <span data-ttu-id="43f2c-165">使用する必要があります、<xref:System.Threading.AsyncFlowControl.Undo%2A>メソッドで返された<xref:System.Threading.AsyncFlowControl>のフローを復元する構造体、<xref:System.Threading.ExecutionContext>です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-165">You must use the <xref:System.Threading.AsyncFlowControl.Undo%2A> method on the returned <xref:System.Threading.AsyncFlowControl> structure to restore the flow of the <xref:System.Threading.ExecutionContext>.</span></span>  
  
 <span data-ttu-id="43f2c-166">このメソッドで保護された、<xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType>の<xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType>権限です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-166">This method is protected with a <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> for <xref:System.Security.Permissions.SecurityPermissionFlag.Infrastructure?displayProperty=nameWithType> permission.</span></span> <span data-ttu-id="43f2c-167">完全に信頼されたコンポーネントのフローを抑制するには、このメソッドを呼び出すことができます、<xref:System.Threading.ExecutionContext>非同期呼び出し中にします。</span><span class="sxs-lookup"><span data-stu-id="43f2c-167">A fully trusted component can call this method to suppress the flow of the <xref:System.Threading.ExecutionContext> during asynchronous calls.</span></span> <span data-ttu-id="43f2c-168">フローの抑制中に、<xref:System.Security.SecurityContext.Capture%2A>メソッドを返します。`null`です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-168">While the flow is suppressed, the <xref:System.Security.SecurityContext.Capture%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43f2c-169">コンテキストのフローは既に抑制されています。</span><span class="sxs-lookup"><span data-stu-id="43f2c-169">The context flow is already suppressed.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="43f2c-170">直前の呼び出し元に対する完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="43f2c-170">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="43f2c-171">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="43f2c-171">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Threading.AsyncFlowControl" />
      </Docs>
    </Member>
  </Members>
</Type>