<Type Name="ThreadState" FullName="System.Threading.ThreadState">
  <TypeSignature Language="C#" Value="public enum ThreadState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ThreadState extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadState" />
  <TypeSignature Language="VB.NET" Value="Public Enum ThreadState" />
  <TypeSignature Language="C++ CLI" Value="public enum class ThreadState" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2cbed-101"><see cref="T:System.Threading.Thread" /> の実行状態を指定します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-101">Specifies the execution states of a <see cref="T:System.Threading.Thread" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cbed-102"><xref:System.Threading.ThreadState>列挙体は、いくつかでのみ関心のあるシナリオをデバッグします。</span><span class="sxs-lookup"><span data-stu-id="2cbed-102">The <xref:System.Threading.ThreadState> enumeration is of interest only in a few debugging scenarios.</span></span> <span data-ttu-id="2cbed-103">コードは、スレッドの活動を同期するために、スレッドの状態を使用する必要がありますしないでください。</span><span class="sxs-lookup"><span data-stu-id="2cbed-103">Your code should never use the thread state to synchronize the activities of threads.</span></span>  
  
 <span data-ttu-id="2cbed-104"><xref:System.Threading.ThreadState> スレッドのすべての可能な実行状態のセットを定義します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-104"><xref:System.Threading.ThreadState> defines a set of all possible execution states for threads.</span></span> <span data-ttu-id="2cbed-105">スレッドを作成すると、終了するまでの状態の少なくとも 1 つです。</span><span class="sxs-lookup"><span data-stu-id="2cbed-105">Once a thread is created, it is in at least one of the states until it terminates.</span></span> <span data-ttu-id="2cbed-106">共通言語ランタイム内で作成されたスレッドは最初に、`Unstarted`状態にある場合、ランタイムに付属している外部のスレッドが既に開始中に、`Running`状態です。</span><span class="sxs-lookup"><span data-stu-id="2cbed-106">Threads created within the common language runtime are initially in the `Unstarted` state, while external threads that come into the runtime are already in the `Running` state.</span></span> <span data-ttu-id="2cbed-107">`Unstarted`にスレッドが遷移した、`Running`を呼び出して状態<xref:System.Threading.Thread.Start%2A>です。</span><span class="sxs-lookup"><span data-stu-id="2cbed-107">An `Unstarted` thread is transitioned into the `Running` state by calling <xref:System.Threading.Thread.Start%2A>.</span></span> <span data-ttu-id="2cbed-108">すべての組み合わせ`ThreadState`値は有効です。 たとえば、スレッドが両方にすることはできません、`Aborted`と`Unstarted`状態です。</span><span class="sxs-lookup"><span data-stu-id="2cbed-108">Not all combinations of `ThreadState` values are valid; for example, a thread cannot be in both the `Aborted` and `Unstarted` states.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2cbed-109">2 つのスレッドの状態の列挙体がある<xref:System.Threading.ThreadState?displayProperty=nameWithType>と<xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="2cbed-109">There are two thread state enumerations,<xref:System.Threading.ThreadState?displayProperty=nameWithType> and <xref:System.Diagnostics.ThreadState?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="2cbed-110">次の表は、状態の変更が発生するアクションを示します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-110">The following table shows the actions that cause a change of state.</span></span>  
  
|<span data-ttu-id="2cbed-111">アクション</span><span class="sxs-lookup"><span data-stu-id="2cbed-111">Action</span></span>|<span data-ttu-id="2cbed-112">ThreadState</span><span class="sxs-lookup"><span data-stu-id="2cbed-112">ThreadState</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="2cbed-113">スレッドは、共通言語ランタイム内に作成されます。</span><span class="sxs-lookup"><span data-stu-id="2cbed-113">A thread is created within the common language runtime.</span></span>|<span data-ttu-id="2cbed-114">まだ開始していません。</span><span class="sxs-lookup"><span data-stu-id="2cbed-114">Unstarted</span></span>|  
|<span data-ttu-id="2cbed-115">別のスレッドの呼び出し、<xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType>新しいスレッドの呼び出しでメソッドを返します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-115">Another thread calls the <xref:System.Threading.Thread.Start%2A?displayProperty=nameWithType> method on the new thread, and the call returns.</span></span><br /><br /> <span data-ttu-id="2cbed-116"><xref:System.Threading.Thread.Start%2A>メソッドが実行されている、新しいスレッドが開始されるまで返されません。</span><span class="sxs-lookup"><span data-stu-id="2cbed-116">The <xref:System.Threading.Thread.Start%2A> method does not return until the new thread has started running.</span></span> <span data-ttu-id="2cbed-117">呼び出し中に実行します。 どの時点で、新しいスレッドが開始されますを知る方法はありません<xref:System.Threading.Thread.Start%2A>です。</span><span class="sxs-lookup"><span data-stu-id="2cbed-117">There is no way to know at what point the new thread will start running, during the call to <xref:System.Threading.Thread.Start%2A>.</span></span>|<span data-ttu-id="2cbed-118">実行中</span><span class="sxs-lookup"><span data-stu-id="2cbed-118">Running</span></span>|  
|<span data-ttu-id="2cbed-119">スレッドの呼び出し <xref:System.Threading.Thread.Sleep%2A></span><span class="sxs-lookup"><span data-stu-id="2cbed-119">The thread calls <xref:System.Threading.Thread.Sleep%2A></span></span>|<span data-ttu-id="2cbed-120">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="2cbed-120">WaitSleepJoin</span></span>|  
|<span data-ttu-id="2cbed-121">スレッドが別のオブジェクトで <xref:System.Threading.Monitor.Wait%2A> を呼び出す。</span><span class="sxs-lookup"><span data-stu-id="2cbed-121">The thread calls <xref:System.Threading.Monitor.Wait%2A> on another object.</span></span>|<span data-ttu-id="2cbed-122">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="2cbed-122">WaitSleepJoin</span></span>|  
|<span data-ttu-id="2cbed-123">スレッドが別のスレッドで <xref:System.Threading.Thread.Join%2A> を呼び出す。</span><span class="sxs-lookup"><span data-stu-id="2cbed-123">The thread calls <xref:System.Threading.Thread.Join%2A> on another thread.</span></span>|<span data-ttu-id="2cbed-124">WaitSleepJoin</span><span class="sxs-lookup"><span data-stu-id="2cbed-124">WaitSleepJoin</span></span>|  
|<span data-ttu-id="2cbed-125">別のスレッドの呼び出し <xref:System.Threading.Thread.Interrupt%2A></span><span class="sxs-lookup"><span data-stu-id="2cbed-125">Another thread calls <xref:System.Threading.Thread.Interrupt%2A></span></span>|<span data-ttu-id="2cbed-126">実行中</span><span class="sxs-lookup"><span data-stu-id="2cbed-126">Running</span></span>|  
|<span data-ttu-id="2cbed-127">別のスレッドの呼び出し <xref:System.Threading.Thread.Suspend%2A></span><span class="sxs-lookup"><span data-stu-id="2cbed-127">Another thread calls <xref:System.Threading.Thread.Suspend%2A></span></span>|<span data-ttu-id="2cbed-128">SuspendRequested</span><span class="sxs-lookup"><span data-stu-id="2cbed-128">SuspendRequested</span></span>|  
|<span data-ttu-id="2cbed-129">スレッドが <xref:System.Threading.Thread.Suspend%2A> 要求に応答する。</span><span class="sxs-lookup"><span data-stu-id="2cbed-129">The thread responds to a <xref:System.Threading.Thread.Suspend%2A> request.</span></span>|<span data-ttu-id="2cbed-130">Suspended</span><span class="sxs-lookup"><span data-stu-id="2cbed-130">Suspended</span></span>|  
|<span data-ttu-id="2cbed-131">別のスレッドの呼び出し <xref:System.Threading.Thread.Resume%2A></span><span class="sxs-lookup"><span data-stu-id="2cbed-131">Another thread calls <xref:System.Threading.Thread.Resume%2A></span></span>|<span data-ttu-id="2cbed-132">実行中</span><span class="sxs-lookup"><span data-stu-id="2cbed-132">Running</span></span>|  
|<span data-ttu-id="2cbed-133">別のスレッドの呼び出し <xref:System.Threading.Thread.Abort%2A></span><span class="sxs-lookup"><span data-stu-id="2cbed-133">Another thread calls <xref:System.Threading.Thread.Abort%2A></span></span>|<span data-ttu-id="2cbed-134">AbortRequested</span><span class="sxs-lookup"><span data-stu-id="2cbed-134">AbortRequested</span></span>|  
|<span data-ttu-id="2cbed-135">スレッドが <xref:System.Threading.Thread.Abort%2A> 要求に応答する。</span><span class="sxs-lookup"><span data-stu-id="2cbed-135">The thread responds to a <xref:System.Threading.Thread.Abort%2A> request.</span></span>|<span data-ttu-id="2cbed-136">停止</span><span class="sxs-lookup"><span data-stu-id="2cbed-136">Stopped</span></span>|  
|<span data-ttu-id="2cbed-137">スレッドが終了します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-137">A thread is terminated.</span></span>|<span data-ttu-id="2cbed-138">停止</span><span class="sxs-lookup"><span data-stu-id="2cbed-138">Stopped</span></span>|  
  
 <span data-ttu-id="2cbed-139">上記の状態、に加えても、`Background`状態は、背景または前景でスレッドが実行されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-139">In addition to the states noted above, there is also the `Background` state, which indicates whether the thread is running in the background or foreground.</span></span>  
  
 <span data-ttu-id="2cbed-140">スレッドは、特定の時点で 1 つ以上の状態であることができます。</span><span class="sxs-lookup"><span data-stu-id="2cbed-140">A thread can be in more than one state at a given time.</span></span> <span data-ttu-id="2cbed-141">呼び出しでスレッドがブロックされている場合など、 <xref:System.Threading.Monitor.Wait%2A>、および別のスレッドの呼び出し<xref:System.Threading.Thread.Abort%2A>、ブロックされたスレッドでブロックされたスレッドされます両方で、`WaitSleepJoin`と`AbortRequested`同時状態です。</span><span class="sxs-lookup"><span data-stu-id="2cbed-141">For example, if a thread is blocked on a call to <xref:System.Threading.Monitor.Wait%2A>, and another thread calls <xref:System.Threading.Thread.Abort%2A> on the blocked thread, the blocked thread will be in both the `WaitSleepJoin` and the `AbortRequested` states at the same time.</span></span> <span data-ttu-id="2cbed-142">ここでは、スレッドがへの呼び出しから戻るとすぐに<xref:System.Threading.Monitor.Wait%2A>かが中断されるは受信、<xref:System.Threading.ThreadAbortException>中止を開始します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-142">In this case, as soon as the thread returns from the call to <xref:System.Threading.Monitor.Wait%2A> or is interrupted, it will receive the <xref:System.Threading.ThreadAbortException> to begin aborting.</span></span>  
  
 <span data-ttu-id="2cbed-143"><xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType>スレッドのプロパティは、スレッドの現在の状態を提供します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-143">The <xref:System.Threading.Thread.ThreadState%2A?displayProperty=nameWithType> property of a thread provides the current state of a thread.</span></span> <span data-ttu-id="2cbed-144">アプリケーションは、スレッドが実行されているかどうかを決定するのにビットマスクを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2cbed-144">Applications must use a bitmask to determine whether a thread is running.</span></span> <span data-ttu-id="2cbed-145">値から`Running`はゼロ (0) などの c# コードを使用して、スレッドが実行されているかどうかをテスト`(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0`またはなど、Visual Basic コード`(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`です。</span><span class="sxs-lookup"><span data-stu-id="2cbed-145">Since the value for `Running` is zero (0), test whether a thread is running by using C# code such as `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` or Visual Basic code such as `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
  </Docs>
  <Members>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="Aborted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Aborted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Aborted" />
      <MemberSignature Language="VB.NET" Value="Aborted" />
      <MemberSignature Language="C++ CLI" Value="Aborted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2cbed-146">スレッド状態に <see cref="F:System.Threading.ThreadState.AbortRequested" /> が含まれ、そのスレッドは停止していますが、状態はまだ <see cref="F:System.Threading.ThreadState.Stopped" /> に変わっていません。</span><span class="sxs-lookup"><span data-stu-id="2cbed-146">The thread state includes <see cref="F:System.Threading.ThreadState.AbortRequested" /> and the thread is now dead, but its state has not yet changed to <see cref="F:System.Threading.ThreadState.Stopped" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="AbortRequested">
      <MemberSignature Language="C#" Value="AbortRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState AbortRequested = int32(128)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.AbortRequested" />
      <MemberSignature Language="VB.NET" Value="AbortRequested" />
      <MemberSignature Language="C++ CLI" Value="AbortRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2cbed-147">スレッド上で <see cref="M:System.Threading.Thread.Abort(System.Object)" /> メソッドを呼び出しますが、そのスレッドの終了を試みる保留中の <see cref="T:System.Threading.ThreadAbortException" /> をスレッドが受け取っていません。</span><span class="sxs-lookup"><span data-stu-id="2cbed-147">The <see cref="M:System.Threading.Thread.Abort(System.Object)" /> method has been invoked on the thread, but the thread has not yet received the pending <see cref="T:System.Threading.ThreadAbortException" /> that will attempt to terminate it.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="Background" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Background = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Background" />
      <MemberSignature Language="VB.NET" Value="Background" />
      <MemberSignature Language="C++ CLI" Value="Background" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2cbed-148">スレッドは、フォアグラウンド スレッドではなく、バックグランド スレッドとして実行します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-148">The thread is being executed as a background thread, as opposed to a foreground thread.</span></span> <span data-ttu-id="2cbed-149">この状態は、<see cref="P:System.Threading.Thread.IsBackground" /> プロパティを設定して制御されます。</span><span class="sxs-lookup"><span data-stu-id="2cbed-149">This state is controlled by setting the <see cref="P:System.Threading.Thread.IsBackground" /> property.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Running">
      <MemberSignature Language="C#" Value="Running" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Running = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Running" />
      <MemberSignature Language="VB.NET" Value="Running" />
      <MemberSignature Language="C++ CLI" Value="Running" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2cbed-150">スレッドをブロックせずに起動します。保留中の <see cref="T:System.Threading.ThreadAbortException" /> もありません。</span><span class="sxs-lookup"><span data-stu-id="2cbed-150">The thread has been started, it is not blocked, and there is no pending <see cref="T:System.Threading.ThreadAbortException" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="Stopped" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Stopped = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Stopped" />
      <MemberSignature Language="VB.NET" Value="Stopped" />
      <MemberSignature Language="C++ CLI" Value="Stopped" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2cbed-151">スレッドを停止します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-151">The thread has stopped.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StopRequested">
      <MemberSignature Language="C#" Value="StopRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState StopRequested = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.StopRequested" />
      <MemberSignature Language="VB.NET" Value="StopRequested" />
      <MemberSignature Language="C++ CLI" Value="StopRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2cbed-152">スレッドの停止を要求します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-152">The thread is being requested to stop.</span></span> <span data-ttu-id="2cbed-153">これは、内部でだけ使用します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-153">This is for internal use only.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Suspended">
      <MemberSignature Language="C#" Value="Suspended" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Suspended = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Suspended" />
      <MemberSignature Language="VB.NET" Value="Suspended" />
      <MemberSignature Language="C++ CLI" Value="Suspended" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2cbed-154">スレッドは中断しています。</span><span class="sxs-lookup"><span data-stu-id="2cbed-154">The thread has been suspended.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SuspendRequested">
      <MemberSignature Language="C#" Value="SuspendRequested" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState SuspendRequested = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.SuspendRequested" />
      <MemberSignature Language="VB.NET" Value="SuspendRequested" />
      <MemberSignature Language="C++ CLI" Value="SuspendRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2cbed-155">スレッドの中断を要求します。</span><span class="sxs-lookup"><span data-stu-id="2cbed-155">The thread is being requested to suspend.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Unstarted">
      <MemberSignature Language="C#" Value="Unstarted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState Unstarted = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.Unstarted" />
      <MemberSignature Language="VB.NET" Value="Unstarted" />
      <MemberSignature Language="C++ CLI" Value="Unstarted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2cbed-156">スレッド上に <see cref="M:System.Threading.Thread.Start" /> メソッドを呼び出しません。</span><span class="sxs-lookup"><span data-stu-id="2cbed-156">The <see cref="M:System.Threading.Thread.Start" /> method has not been invoked on the thread.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="WaitSleepJoin">
      <MemberSignature Language="C#" Value="WaitSleepJoin" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Threading.ThreadState WaitSleepJoin = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Threading.ThreadState.WaitSleepJoin" />
      <MemberSignature Language="VB.NET" Value="WaitSleepJoin" />
      <MemberSignature Language="C++ CLI" Value="WaitSleepJoin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.ThreadState</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="2cbed-157">スレッドがブロックされています。</span><span class="sxs-lookup"><span data-stu-id="2cbed-157">The thread is blocked.</span></span> <span data-ttu-id="2cbed-158">これは、<see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> または <see cref="M:System.Threading.Thread.Join" /> の呼び出し、ロックの要求 (たとえば、<see cref="M:System.Threading.Monitor.Enter(System.Object)" /> や <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" /> の呼び出しによる)、または <see cref="T:System.Threading.ManualResetEvent" /> などのスレッド同期オブジェクトの待機の結果である可能性があります。</span><span class="sxs-lookup"><span data-stu-id="2cbed-158">This could be the result of calling <see cref="M:System.Threading.Thread.Sleep(System.Int32)" /> or <see cref="M:System.Threading.Thread.Join" />, of requesting a lock — for example, by calling <see cref="M:System.Threading.Monitor.Enter(System.Object)" /> or <see cref="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)" /> — or of waiting on a thread synchronization object such as <see cref="T:System.Threading.ManualResetEvent" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>