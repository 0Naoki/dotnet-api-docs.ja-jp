<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56c2b4ff793499c653610da3b24ae254bfe9e9b3" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58875373" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bb27a-101">XSLT (Extensible Stylesheet Language Transformations) スタイル シートを使用して XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-102"><xref:System.Xml.Xsl.XslTransform>クラスは、Microsoft .NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-103"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-104">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-105"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-106">XSLT スタイル シートは、名前空間を使用する必要があります`http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-107">追加の引数を使用してスタイル シートに追加することも、<xref:System.Xml.Xsl.XsltArgumentList>クラス。</span><span class="sxs-lookup"><span data-stu-id="bb27a-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="bb27a-108">このクラスには、スタイル シートから呼び出すことができるスタイル シートと拡張オブジェクトの入力パラメーターが含まれています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="bb27a-109">XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="bb27a-110">作成、<xref:System.Xml.Xsl.XslTransform>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="bb27a-111">使用して、<xref:System.Xml.Xsl.XslTransform.Load%2A>変換のスタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="bb27a-112">このメソッドは、いくつかのオーバー ロードがありを使用してスタイル シートを読み込むことができます、 <xref:System.Xml.XmlReader>、 <xref:System.Xml.XPath.XPathNavigator>、 <xref:System.Xml.XPath.IXPathNavigable>、またはファイルの場所の URL。</span><span class="sxs-lookup"><span data-stu-id="bb27a-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="bb27a-113">使用して、 <xref:System.Xml.Xsl.XslTransform.Transform%2A> XML データを変換するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="bb27a-114">このメソッドは、いくつかのオーバー ロードを備え、さまざまな種類の入力と出力を処理することができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="bb27a-115">指定することも、<xref:System.Xml.Xsl.XsltArgumentList>変換中に入力として使用する追加の引数を格納しています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="bb27a-116">**セキュリティの考慮事項**</span><span class="sxs-lookup"><span data-stu-id="bb27a-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="bb27a-117"><xref:System.Xml.Xsl.XslTransform> クラスを使用するアプリケーションを作成するときには、次の項目とその関連事項に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="bb27a-118">拡張オブジェクトは既定で有効になっています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="bb27a-119">拡張オブジェクトを含む <xref:System.Xml.Xsl.XsltArgumentList> オブジェクトが <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡されると、拡張オブジェクトは使用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="bb27a-120">XSLT スタイル シートには、他のファイルへの参照や埋め込みのスクリプト ブロックを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="bb27a-121">悪意のあるユーザーがこれを招くようなデータを悪用やスタイル シートを実行時にシステムにコンピューターがリソース不足になるまでの処理が発生します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="bb27a-122">混在信頼環境で動作する XSLT アプリケーションは、スタイル シートのなりすましを引き起こす可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="bb27a-123">たとえば、悪意のあるユーザーは、有害なスタイル シートを含むオブジェクトを読み込み、それを <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを呼び出して変換を実行する別のユーザーに渡す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="bb27a-124">これらのセキュリティ問題を受け付けていませんを軽減できます<xref:System.Xml.Xsl.XslTransform>オブジェクト、XSLT スタイル シート、または信頼されていないソースから XML ソース データ。</span><span class="sxs-lookup"><span data-stu-id="bb27a-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="bb27a-125">**スクリプトのサポート**</span><span class="sxs-lookup"><span data-stu-id="bb27a-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="bb27a-126">このクラスは、使用した埋め込みスクリプトをサポートしています、`msxsl:script`要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="bb27a-127">.NET Framework version 1.1 では、スタイル シートの証拠は、埋め込みスクリプトに対するアクセス許可が付与を決定します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="bb27a-128">スタイル シートには、Uniform Resource Identifier (URI) からが読み込まれている場合、証拠を作成する、URI を使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="bb27a-129">この証拠には、そのサイトとゾーンと共に URI が含まれています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="bb27a-130">別のソースを使用してスタイル シートが読み込まれている場合は、渡すことによって証拠を指定できます、<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>オブジェクトを<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="bb27a-131">それ以外の場合、スクリプト アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="bb27a-132">部分的に信頼された呼び出し元:`UnmanagedCode`埋め込みスクリプトをコンパイルするためのアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="bb27a-133">`ControlEvidence` 提供するためのアクセス許可が必要<xref:System.Security.Policy.Evidence>を<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="bb27a-134">A<xref:System.Security.SecurityException>が、呼び出し元が必要なアクセス許可を持たない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="bb27a-135">詳細については、「<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>」および「<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb27a-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="bb27a-136">`msxsl:script`要素には、次の要件。</span><span class="sxs-lookup"><span data-stu-id="bb27a-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="bb27a-137">`msxsl:script`要素が属する、`urn:schemas-microsoft-com:xslt`名前空間。</span><span class="sxs-lookup"><span data-stu-id="bb27a-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="bb27a-138">スタイル シートは、名前空間宣言を含める必要があります`xmlns:msxsl=urn:schemas-microsoft-com:xslt`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="bb27a-139">`msxsl:script`要素を含めることができます、`language`属性を使用するスクリプト言語を指定します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="bb27a-140">値、`language`属性は、次のいずれかを指定する必要があります。C#、CSharp、VB、VisualBasic、JScript、または JavaScript。</span><span class="sxs-lookup"><span data-stu-id="bb27a-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="bb27a-141">言語名が大文字小文字を区別しないために、JavaScript と javascript は、どちらも有効です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="bb27a-142">場合、`language`属性が指定されていない、既定値は JScript です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="bb27a-143">`msxsl:script`要素を含める必要があります、`implements-prefix`スクリプト ブロックに関連付けられている名前空間を表すプレフィックスを含む属性。</span><span class="sxs-lookup"><span data-stu-id="bb27a-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="bb27a-144">この名前空間は、スタイル シート内で定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="bb27a-145">スタイル シートには、名前空間にグループ分けされる複数のスクリプト ブロックを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="bb27a-146">同じ名前空間内の複数の言語のスクリプト ブロックすることはできません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="bb27a-147">スクリプト ブロックは、スクリプト ブロックが同じ名前空間内に提供されるもう 1 つのスクリプト ブロックで定義された関数を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="bb27a-148">スクリプト ブロックの内容は、ルールとスクリプト言語の構文に従って解析されます (によって提供される、`language`属性)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="bb27a-149">たとえば、c# スクリプト ブロックがあれば、コメントが付きます、`//`文字。</span><span class="sxs-lookup"><span data-stu-id="bb27a-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="bb27a-150">コメントは、有効な XML コンテンツである必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-150">The comments must be valid XML content.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="bb27a-151">CDATA セクション内スクリプト ブロックをラップすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-151">It is recommended that you wrap script blocks in a CDATA section.</span></span>
  
 [!INCLUDE [xsltransform-script](~/includes/xsltransform-script.md)] 
   
 <span data-ttu-id="bb27a-152">関数は、`msxsl:script` 要素内で宣言できます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-152">Functions can be declared within the `msxsl:script` element.</span></span> <span data-ttu-id="bb27a-153">既定でサポートされる名前空間を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-153">The following table shows the namespaces that are supported by default.</span></span>  
  
|<span data-ttu-id="bb27a-154">サポートされている名前空間</span><span class="sxs-lookup"><span data-stu-id="bb27a-154">Supported Namespaces</span></span>|<span data-ttu-id="bb27a-155">説明</span><span class="sxs-lookup"><span data-stu-id="bb27a-155">Description</span></span>|  
|--------------------------|-----------------|  
|`System`|<span data-ttu-id="bb27a-156">システム クラス。</span><span class="sxs-lookup"><span data-stu-id="bb27a-156">System classes.</span></span>|  
|`System.Collection`|<span data-ttu-id="bb27a-157">コレクション クラス</span><span class="sxs-lookup"><span data-stu-id="bb27a-157">Collection classes.</span></span>|  
|`System.Text`|<span data-ttu-id="bb27a-158">テキスト処理クラス。</span><span class="sxs-lookup"><span data-stu-id="bb27a-158">Text handling classes.</span></span>|  
|`System.Xml`|<span data-ttu-id="bb27a-159">コア XML クラス</span><span class="sxs-lookup"><span data-stu-id="bb27a-159">Core XML classes.</span></span>|  
|`System.Xml.Xsl`|<span data-ttu-id="bb27a-160">XSLT クラス</span><span class="sxs-lookup"><span data-stu-id="bb27a-160">XSLT classes.</span></span>|  
|`System.Xml.XPath`|<span data-ttu-id="bb27a-161">XPath (XML Path Language) クラス</span><span class="sxs-lookup"><span data-stu-id="bb27a-161">XML Path Language (XPath) classes.</span></span>|  
  
 <span data-ttu-id="bb27a-162">指定された引数と戻り値がスクリプト関数で定義されているは、以下 World Wide Web Consortium (W3C) の種類のいずれかである必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-162">The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</span></span> <span data-ttu-id="bb27a-163">次の表では、W3C 型、XPath と XSLT、またはのいずれかの間のマッピングおよび対応する .NET Framework クラス。</span><span class="sxs-lookup"><span data-stu-id="bb27a-163">The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</span></span>  
  
|<span data-ttu-id="bb27a-164">W3C 型</span><span class="sxs-lookup"><span data-stu-id="bb27a-164">W3C Type</span></span>|<span data-ttu-id="bb27a-165">対応する .NET クラス</span><span class="sxs-lookup"><span data-stu-id="bb27a-165">Equivalent .NET class</span></span>|  
|--------------|---------------------------|  
|<span data-ttu-id="bb27a-166">文字列 (XPath)</span><span class="sxs-lookup"><span data-stu-id="bb27a-166">String (XPath)</span></span>|`System.String`|  
|<span data-ttu-id="bb27a-167">ブール値 (XPath)</span><span class="sxs-lookup"><span data-stu-id="bb27a-167">Boolean (XPath)</span></span>|`System.Boolean`|  
|<span data-ttu-id="bb27a-168">数 (XPath)</span><span class="sxs-lookup"><span data-stu-id="bb27a-168">Number (XPath)</span></span>|`System.Double`|  
|<span data-ttu-id="bb27a-169">結果ツリー フラグメント (XSLT)</span><span class="sxs-lookup"><span data-stu-id="bb27a-169">Result Tree Fragment (XSLT)</span></span>|`System.Xml.XPath.XPathNavigator`|  
|<span data-ttu-id="bb27a-170">ノード セット (XPath)</span><span class="sxs-lookup"><span data-stu-id="bb27a-170">Node Set (XPath)</span></span>|`System.Xml.XPath.XPathNodeIterator`|  
  
 <span data-ttu-id="bb27a-171">スクリプト関数が数値型これらの型が強制的に変換 Int16、UInt16、Int32、UInt32、Int64、UInt64、Single、または 10 進数、W3C XPath 数値型に対応する Double にします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-171">If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</span></span>  
  
 <span data-ttu-id="bb27a-172">例外がスローされている関数が呼び出されたときに必要な種類のいずれかに引数の結果を変換することはできません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-172">An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-173">`msxsl:script` `msxsl:node-list`からのみの機能は、`urn:schemas-microsoft-com:xslt`でサポートされている名前空間、<xref:System.Xml.Xsl.XslTransform>クラス。</span><span class="sxs-lookup"><span data-stu-id="bb27a-173">`msxsl:script` and `msxsl:node-list` are the only functions from the `urn:schemas-microsoft-com:xslt` namespace that are supported by the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="bb27a-174"><xref:System.Xml.Xsl.XslTransform> 拡張機能のメカニズムとしての共通言語ランタイム (CLR) コードを使用することがあります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-174"><xref:System.Xml.Xsl.XslTransform> has the ability to utilize common language runtime (CLR) code as an extension mechanism.</span></span> <span data-ttu-id="bb27a-175">これは、実現するためのクラスのインスタンスを渡すことによって、<xref:System.Xml.Xsl.XslTransform>クラスと、XSLT スタイル シート内のパブリック メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-175">This is accomplished by passing an instance of a class to the <xref:System.Xml.Xsl.XslTransform> class and calling its public methods within an XSLT style sheet.</span></span> <span data-ttu-id="bb27a-176">定義されているメソッド、`params`このシナリオで渡されるパラメーター数が指定されていないため、キーワードが正しく動作しません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-176">Methods that are defined with the `params` keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</span></span> <span data-ttu-id="bb27a-177">参照してください[params](~/docs/csharp/language-reference/keywords/params.md)の詳細。</span><span class="sxs-lookup"><span data-stu-id="bb27a-177">See [params](~/docs/csharp/language-reference/keywords/params.md) for more details.</span></span>  
  
 <span data-ttu-id="bb27a-178">詳細については、次を参照してください。 [XslTransform クラスによる XSLT 変換](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-178">For more information see [XSLT Transformations with the XslTransform Class](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-179">次の例では、指定した XML ドキュメントを変換し、コンソールに結果を出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-179">The following example transforms the specified XML document and outputs the result to the console.</span></span>  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="bb27a-180"><see cref="T:System.Xml.Xsl.XslTransform" /> オブジェクトは、変換操作の唯一のスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-180"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="bb27a-181">その他の操作には、スレッド セーフであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-181">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="bb27a-182">他のメソッドが呼び出されないオブジェクトの読み込み操作中にすることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-182">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb27a-183"><see cref="T:System.Xml.Xsl.XslTransform" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-183">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb27a-184">XSLT スタイル シートを読み込みます。XSLT の <see langword="xsl:include" /> 要素および <see langword="xsl:import" /> 要素で参照されるスタイル シートが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-184">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-185"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-185">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-186"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-186">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-187">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-187">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="bb27a-188">読み込む XSLT スタイル シートを指定する URL。</span><span class="sxs-lookup"><span data-stu-id="bb27a-188">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="bb27a-189">URL で指定された XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-189">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-190"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-190">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-191"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-191">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-192">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-192">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-193"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-193"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-194">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-194">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="bb27a-195">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-195">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="bb27a-196">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="bb27a-196">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="bb27a-197">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-197">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="bb27a-198">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-198">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="bb27a-199">スタイル シートの URI は、アセンブリに適用する証拠の作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-199">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="bb27a-200">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="bb27a-201">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb27a-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-202">次の例では、HTML ドキュメントに XML ドキュメントを変換します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-202">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="bb27a-203">テーブルで、ISBN、タイトル、および各書籍の価格を表示します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-203">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="bb27a-204">このサンプルは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-204">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-205">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-205">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-206">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-206">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="bb27a-207">XSLT スタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-207">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="bb27a-208"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-209"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-210"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-211">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-211">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-212"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-213">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-214">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="bb27a-215">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="bb27a-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="bb27a-216">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="bb27a-217">現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を通じてそのすべての子。</span><span class="sxs-lookup"><span data-stu-id="bb27a-217">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="bb27a-218">これにより、スタイル シートとドキュメントの一部を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-218">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="bb27a-219">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XmlReader>スタイル シートの末尾の後に次のノードに配置します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-219">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="bb27a-220">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-220">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="bb27a-221">かどうか、スタイル シートには、エンティティが含まれている、する必要がありますを指定する、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返します`true`)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-221">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="bb27a-222">ここで、<xref:System.Xml.XmlValidatingReader>ことができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-222">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="bb27a-223">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-223">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="bb27a-224">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-224">The assembly has full trust.</span></span> <span data-ttu-id="bb27a-225">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-225">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="bb27a-226">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-226">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="bb27a-227">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb27a-227">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-228">次の例では、すべての書籍をタイトルで並べ替え、XML ファイルを変換します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-228">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="bb27a-229">例では、入力として次のデータ ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-229">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-230">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-230">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-231">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-231">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="bb27a-232"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-232">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-233">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-233">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="bb27a-234"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-234">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-235"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-235">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-236"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-236">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-237">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-237">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-238"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-238"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-239">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-239">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-240">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-240">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="bb27a-241">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="bb27a-241">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="bb27a-242">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-242">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="bb27a-243">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-243">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="bb27a-244">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-244">The assembly has full trust.</span></span> <span data-ttu-id="bb27a-245">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-245">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="bb27a-246">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-246">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="bb27a-247">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb27a-247">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-248">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-248">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-249">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-249">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="bb27a-250">XSLT スタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-250">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="bb27a-251"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-251">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-252"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-253"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-254">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-254">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-255"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-256">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-257">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-257">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="bb27a-258">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="bb27a-258">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="bb27a-259">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-259">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="bb27a-260">現在位置からスタイル シートが読み込まれた、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-260">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="bb27a-261">スタイル シートとして読み込まれているドキュメントの一部のみを使用するには、スタイル シートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-261">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="bb27a-262">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XPath.XPathNavigator>はスタイル シートの先頭に配置されます (上、`xsl:style sheet`ノード)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-262">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="bb27a-263">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-263">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="bb27a-264">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-264">The assembly has full trust.</span></span> <span data-ttu-id="bb27a-265">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-265">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="bb27a-266">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-266">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="bb27a-267">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb27a-267">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-268">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-268">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-269">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-269">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="bb27a-270">読み込む XSLT スタイル シートを指定する URL。</span><span class="sxs-lookup"><span data-stu-id="bb27a-270">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-271">スタイル シート、および <c>xsl:import</c> 要素と <c>xsl:include</c> 要素で参照される任意のスタイル シートの読み込みに使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-271">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="bb27a-272">これが <see langword="null" /> の場合は、ユーザー資格情報を持たない既定の <see cref="T:System.Xml.XmlUrlResolver" /> がスタイル シートを開くときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-272">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="bb27a-273">既定の <see cref="T:System.Xml.XmlUrlResolver" /> は、スタイル シート内の外部リソースの解決には使用されないため、<c>xsl:import</c> 要素と <c>xsl:include</c> 要素は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-273">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="bb27a-274"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-274">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-275">URL で指定された XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-275">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-276"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-276">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-277"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-277">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-278">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-278">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-279"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-279"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-280">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-280">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-281">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-281">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="bb27a-282">スタイル シートの URI は、アセンブリに適用する証拠の作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-282">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="bb27a-283">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="bb27a-284">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb27a-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-285">次の例では、HTML ドキュメントに XML ドキュメントを変換します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-285">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="bb27a-286">例では、読み込む XSLT スタイル シートが含まれている`xsl:include`別のスタイル シートを参照する要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-286">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="bb27a-287"><xref:System.Xml.XmlUrlResolver>に渡される、<xref:System.Xml.Xsl.XslTransform.Load%2A>インクルードされたスタイル シートのネットワーク リソースにアクセスするために必要な資格情報を設定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-287">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="bb27a-288">例では、入力として次のデータ ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-288">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-289">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-289">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-290">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-290">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="bb27a-291">XSLT スタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-291">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-292"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-292">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="bb27a-293">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-293">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="bb27a-294"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-294">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-295"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-295">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-296"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-296">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-297"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-297">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-298">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-298">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-299"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-299"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-300">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-300">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-301">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-301">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="bb27a-302">現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を通じてそのすべての子。</span><span class="sxs-lookup"><span data-stu-id="bb27a-302">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="bb27a-303">これにより、スタイル シートとドキュメントの一部を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-303">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="bb27a-304">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XmlReader>スタイル シートの末尾の後に次のノードに配置します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-304">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="bb27a-305">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-305">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="bb27a-306">かどうか、スタイル シートには、エンティティが含まれている、する必要がありますを指定する、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返します`true`)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-306">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="bb27a-307">ここで、<xref:System.Xml.XmlValidatingReader>ことができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-307">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="bb27a-308">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-308">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="bb27a-309">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-309">The assembly has full trust.</span></span> <span data-ttu-id="bb27a-310">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-310">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="bb27a-311">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-311">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="bb27a-312">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb27a-312">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-313">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-313">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-314">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-314">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="bb27a-315"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-315">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-316">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-316">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-317"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-317">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="bb27a-318">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-318">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="bb27a-319"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-319">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-320"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-320">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-321"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-321">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-322"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-322">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-323">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-323">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-324"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-324"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-325">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-325">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-326">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-326">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="bb27a-327">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-327">The assembly has full trust.</span></span> <span data-ttu-id="bb27a-328">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-328">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="bb27a-329">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="bb27a-330">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb27a-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-331">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-331">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-332">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="bb27a-333">XSLT スタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-333">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-334"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="bb27a-335">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-335">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="bb27a-336"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-337"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-337">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-338"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-338">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-339"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-339">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-340">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-340">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-341"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-341"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-342">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-342">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-343">現在位置からスタイル シートが読み込まれた、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-343">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="bb27a-344">読み込まれたドキュメントの一部として、スタイル シートを使用するには、スタイル シートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-344">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="bb27a-345">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XPath.XPathNavigator>はスタイル シートの先頭に配置されます (上、`xsl:style sheet`ノード)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-345">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="bb27a-346">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-346">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="bb27a-347">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-347">The assembly has full trust.</span></span> <span data-ttu-id="bb27a-348">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-348">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="bb27a-349">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-349">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="bb27a-350">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb27a-350">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-351">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-351">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-352">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-352">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="bb27a-353">読み込むスタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-353">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-354"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-354">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="bb27a-355">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-355">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="bb27a-356"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-356">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="bb27a-357">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-357">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="bb27a-358">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-358">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="bb27a-359">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-359">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="bb27a-360">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-360">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="bb27a-361"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-361">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="bb27a-362">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-362">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-363"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-363">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-364"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-364">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-365">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-365">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-366"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-366"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-367">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-367">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-368">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-368">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="bb27a-369">現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を通じてそのすべての子。</span><span class="sxs-lookup"><span data-stu-id="bb27a-369">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="bb27a-370">これにより、スタイル シートとドキュメントの一部を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-370">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="bb27a-371">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XmlReader>スタイル シートの末尾の後に次のノードに配置します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-371">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="bb27a-372">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-372">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="bb27a-373">かどうか、スタイル シートには、エンティティが含まれている、する必要がありますを指定する、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返します`true`)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-373">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="bb27a-374">ここで、<xref:System.Xml.XmlValidatingReader>ことができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-374">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="bb27a-375">証拠を提供するさまざまな方法はあります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-375">There are different ways to provide evidence.</span></span> <span data-ttu-id="bb27a-376">次の表では、一般的なユーザー シナリオを提供する証拠の種類について説明します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-376">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="bb27a-377">シナリオ</span><span class="sxs-lookup"><span data-stu-id="bb27a-377">Scenario</span></span>|<span data-ttu-id="bb27a-378">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="bb27a-378">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="bb27a-379">XSLT スタイル シートは自己完結型または信頼できるコード ベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-379">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="bb27a-380">アセンブリから証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-380">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="bb27a-381">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="bb27a-381">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="bb27a-382">ソースの出所がわかっている場合、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-382">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="bb27a-383">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-383">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="bb27a-384">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="bb27a-384">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="bb27a-385">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="bb27a-385">The origin of the source is not known.</span></span>|<span data-ttu-id="bb27a-386">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-386">Set evidence to `null`.</span></span> <span data-ttu-id="bb27a-387">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-387">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="bb27a-388">さらに、設定することも、`resolver`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-388">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="bb27a-389">これにより`xsl:import`と`xsl:include`要素は処理されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-389">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="bb27a-390">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="bb27a-390">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="bb27a-391">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="bb27a-391">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="bb27a-392">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-392">Request evidence from the caller.</span></span> <span data-ttu-id="bb27a-393">呼び出し元の API は、通常、証拠を提供する方法を提供する必要があります、<xref:System.Security.Policy.Evidence>クラス。</span><span class="sxs-lookup"><span data-stu-id="bb27a-393">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="bb27a-394">次の例では、XSLT 変換を実行する場所`xsltReader`は、<xref:System.Xml.XmlReader>スタイル シートを含んでいると`secureURL`作成に使用できる信頼された URL は、<xref:System.Security.Policy.Evidence>します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-394">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="bb27a-395"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>メソッドの作成に使用<xref:System.Security.Policy.Evidence>これスタイル シートに適用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-395">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-396">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-396">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-397">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-397">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="bb27a-398">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-398">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="bb27a-399">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-399">for providing evidence.</span></span> <span data-ttu-id="bb27a-400">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="bb27a-400">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="bb27a-401"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-401">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-402">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-402">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-403"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-403">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="bb27a-404">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-404">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="bb27a-405"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-405">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="bb27a-406">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-406">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="bb27a-407">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-407">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="bb27a-408">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-408">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="bb27a-409">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-409">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="bb27a-410"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-410">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="bb27a-411">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-411">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-412"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-412">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-413"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-413">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-414">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-414">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-415"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-415"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-416">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-416">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="bb27a-417">証拠を提供するさまざまな方法はあります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-417">There are different ways to provide evidence.</span></span> <span data-ttu-id="bb27a-418">次の表では、一般的なユーザー シナリオを提供する証拠の種類について説明します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-418">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="bb27a-419">シナリオ</span><span class="sxs-lookup"><span data-stu-id="bb27a-419">Scenario</span></span>|<span data-ttu-id="bb27a-420">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="bb27a-420">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="bb27a-421">XSLT スタイル シートは自己完結型または信頼できるコード ベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-421">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="bb27a-422">アセンブリから証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-422">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="bb27a-423">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="bb27a-423">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="bb27a-424">ソースの出所がわかっている場合、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-424">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="bb27a-425">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-425">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="bb27a-426">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="bb27a-426">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="bb27a-427">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="bb27a-427">The origin of the source is not known.</span></span>|<span data-ttu-id="bb27a-428">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-428">Set evidence to `null`.</span></span> <span data-ttu-id="bb27a-429">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-429">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="bb27a-430">さらに、設定することも、`resolver`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-430">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="bb27a-431">これにより`xsl:import`と`xsl:include`要素は処理されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-431">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="bb27a-432">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="bb27a-432">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="bb27a-433">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="bb27a-433">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="bb27a-434">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-434">Request evidence from the caller.</span></span> <span data-ttu-id="bb27a-435">呼び出し元の API は、通常、証拠を提供する方法を提供する必要があります、<xref:System.Security.Policy.Evidence>クラス。</span><span class="sxs-lookup"><span data-stu-id="bb27a-435">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-436">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-436">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-437">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-437">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="bb27a-438">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-438">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="bb27a-439">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-439">for providing evidence.</span></span> <span data-ttu-id="bb27a-440">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="bb27a-440">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="bb27a-441">読み込むスタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-441">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-442"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-442">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="bb27a-443">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-443">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="bb27a-444"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-444">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="bb27a-445">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-445">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="bb27a-446">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-446">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="bb27a-447">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-447">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="bb27a-448">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-448">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="bb27a-449"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-449">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="bb27a-450">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-450">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-451"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-451">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-452"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-452">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-453">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-453">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-454"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-454"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-455">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-455">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-456">現在位置からスタイル シートが読み込まれた、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-456">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="bb27a-457">読み込まれたドキュメントの一部として、スタイル シートを使用するには、スタイル シートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-457">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="bb27a-458">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XPath.XPathNavigator>はスタイル シートの先頭に配置されます (上、`xsl:style sheet`ノード)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-458">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="bb27a-459">証拠を提供するさまざまな方法はあります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-459">There are different ways to provide evidence.</span></span> <span data-ttu-id="bb27a-460">次の表では、一般的なユーザー シナリオを提供する証拠の種類について説明します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-460">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="bb27a-461">シナリオ</span><span class="sxs-lookup"><span data-stu-id="bb27a-461">Scenario</span></span>|<span data-ttu-id="bb27a-462">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="bb27a-462">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="bb27a-463">XSLT スタイル シートは自己完結型または信頼できるコード ベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-463">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="bb27a-464">アセンブリから証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-464">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="bb27a-465">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="bb27a-465">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="bb27a-466">ソースの出所がわかっている場合、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-466">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="bb27a-467">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-467">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="bb27a-468">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="bb27a-468">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="bb27a-469">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="bb27a-469">The origin of the source is not known.</span></span>|<span data-ttu-id="bb27a-470">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-470">Set evidence to `null`.</span></span> <span data-ttu-id="bb27a-471">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-471">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="bb27a-472">さらに、設定することも、`resolver`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-472">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="bb27a-473">これにより`xsl:import`と`xsl:include`要素は処理されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-473">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="bb27a-474">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="bb27a-474">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="bb27a-475">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="bb27a-475">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="bb27a-476">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-476">Request evidence from the caller.</span></span> <span data-ttu-id="bb27a-477">呼び出し元の API は、通常、証拠を提供する方法を提供する必要があります、`Evidence`クラス。</span><span class="sxs-lookup"><span data-stu-id="bb27a-477">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-478">次の例では、外部ソースからスタイル シートを使用して XSLT 変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-478">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="bb27a-479">信頼されていないソースからスタイル シートが含まれているため、`resolver`と`evidence`パラメーターに設定されて`null`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-479">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="bb27a-480">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-480">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="bb27a-481">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-481">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="bb27a-482">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-482">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="bb27a-483">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-483">for providing evidence.</span></span> <span data-ttu-id="bb27a-484">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="bb27a-484">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="bb27a-485">読み込まれた XSLT スタイル シートを使用して、XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-485">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-486"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-486">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-487"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-487">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-488">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-488">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="bb27a-489">変換するソース ドキュメントの URL。</span><span class="sxs-lookup"><span data-stu-id="bb27a-489">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="bb27a-490">出力ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="bb27a-490">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="bb27a-491">XML データを入力ファイルに変換し、その結果を出力ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-491">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-492"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-492">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-493"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-493">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-494">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-494">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-495"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-495"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-496">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-496">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-497">このメソッドは、.NET Framework version 1.1 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-497">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="bb27a-498">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-498">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="bb27a-499">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-499">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-500">次の例では、変換、`books.xml`ファイルを使用して、`output.xsl`スタイル シートに結果を出力し、`books.html`ファイル。</span><span class="sxs-lookup"><span data-stu-id="bb27a-500">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="bb27a-501">このサンプルでは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-501">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-502">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-502">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="bb27a-503">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="bb27a-503">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-504"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-504">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-505">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-505">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-506">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-506">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="bb27a-507">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-507">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="bb27a-508">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-508">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-509"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-509">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-510"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-510">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-511">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-511">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-512"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-512"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-513">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-513">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-514">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-514">This method is now obsolete.</span></span> <span data-ttu-id="bb27a-515">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-515">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="bb27a-516">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-516">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="bb27a-517">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-517">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-518">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlReader> (、`xsl:output`要素は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-518">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="bb27a-519">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-519">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="bb27a-520">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-520">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="bb27a-521">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-521">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-522">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-522">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-523">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-523">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="bb27a-524">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-524">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="bb27a-525">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-525">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-526">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-526">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="bb27a-527">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="bb27a-527">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-528">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-528">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-529">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-529">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="bb27a-530">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-530">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="bb27a-531">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-531">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-532"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-532">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-533"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-533">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-534">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-534">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-535"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-535"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-536">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-536">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-537">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-537">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-538">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-538">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-539">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-539">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-540">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-540">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="bb27a-541">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-541">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="bb27a-542"><xref:System.Xml.XmlReader>読み取り専用の出力を提供、`xsl:output`要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-542">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="bb27a-543">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-543">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="bb27a-544">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-544">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-545">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-545">This method is obsolete.</span></span> <span data-ttu-id="bb27a-546">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティは、XSLT document() 関数が解決する方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-546">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="bb27a-547">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-547">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-548">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-548">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-549">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-549">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-550">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-550">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-551">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-551">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="bb27a-552">変換するソース ドキュメントの URL。</span><span class="sxs-lookup"><span data-stu-id="bb27a-552">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="bb27a-553">出力ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="bb27a-553">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-554">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-554">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="bb27a-555">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-555">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="bb27a-556"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-556">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-557">XML データを入力ファイルに変換し、その結果を出力ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-557">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-558"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-558">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-559"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-559">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-560">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-560">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-561"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-561"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-562">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-562">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-563">次の例では、XSLT 変換を実行し、ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-563">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="bb27a-564"><xref:System.Xml.XmlUrlResolver>資格情報を使用する、既定値は外部のリソースを解決します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-564">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="bb27a-565">詳細については、「<xref:System.Net.CredentialCache.DefaultCredentials%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="bb27a-565">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-566"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-566">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-567">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-567">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-568">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-568">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-569">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="bb27a-569">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="bb27a-570">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-570">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-571"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-571">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-572"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-572">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-573">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-573">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-574"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-574"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-575">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-575">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-576">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-576">This method is now obsolete.</span></span> <span data-ttu-id="bb27a-577">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-577">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="bb27a-578">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-578">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="bb27a-579">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-579">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="bb27a-580">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-580">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-581">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-581">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-582">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-582">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="bb27a-583">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-583">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="bb27a-584">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-584">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-585">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-585">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-586">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-586">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-587">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-587">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-588">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-588">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="bb27a-589">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="bb27a-589">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-590"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-590">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-591">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-591">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-592">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-592">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-593">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-593">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="bb27a-594">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-594">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-595"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-595">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-596"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-596">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-597">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-597">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-598"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-598"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-599">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-599">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-600">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-600">This method is now obsolete.</span></span> <span data-ttu-id="bb27a-601">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-601">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="bb27a-602">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-602">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="bb27a-603">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-603">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="bb27a-604">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-604">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="bb27a-605">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-605">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="bb27a-606">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-606">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-607">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-607">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-608">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>切り出し、および渡すを単にノードを含む<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-608">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="bb27a-609">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-609">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="bb27a-610">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-610">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-611">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-611">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-612">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-612">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-613">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-613">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-614">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-614">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="bb27a-615">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="bb27a-615">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-616"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-616">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-617">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-617">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-618">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-618">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-619">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-619">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="bb27a-620">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-620">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="bb27a-621"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-621">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-622">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-622">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="bb27a-623">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-623">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-624"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-624">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-625"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-625">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-626">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-626">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-627"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-627"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-628">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-628">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-629">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-629">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-630">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlReader> (、`xsl:output`要素は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-630">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="bb27a-631">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-631">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="bb27a-632">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-632">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="bb27a-633">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-633">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-634">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-634">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-635">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>切り出し、および渡すを単にノードを含む<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-635">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="bb27a-636">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-636">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="bb27a-637">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-637">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-638">次の例は、XML ドキュメントを変換し、結果を出力する`XmlReader`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-638">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="bb27a-639"><xref:System.Xml.XmlUrlResolver> XSLT を処理するために必要な資格情報を使用`document()`関数。</span><span class="sxs-lookup"><span data-stu-id="bb27a-639">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-640">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-640">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="bb27a-641">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="bb27a-641">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-642"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-642">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-643">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-643">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-644">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-644">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-645">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-645">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="bb27a-646">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-646">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-647"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-647">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-648"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-648">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-649">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-649">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-650"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-650"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-651">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-651">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-652">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-652">This method is now obsolete.</span></span> <span data-ttu-id="bb27a-653">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-653">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="bb27a-654">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-654">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="bb27a-655">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-655">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-656">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-656">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="bb27a-657">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-657">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="bb27a-658">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-658">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-659">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-659">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-660">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-660">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="bb27a-661">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-661">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="bb27a-662">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-662">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-663">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-663">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-664">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-664">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-665">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-665">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-666">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-666">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="bb27a-667">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="bb27a-667">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-668">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-668">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-669">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-669">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-670">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="bb27a-670">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="bb27a-671">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-671">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-672"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-672">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-673"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-673">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-674">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-674">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-675"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-675"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-676">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-676">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-677">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-677">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-678">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-678">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-679">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-679">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-680">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-680">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="bb27a-681">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-681">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="bb27a-682">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-682">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-683">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-683">This method is now obsolete.</span></span> <span data-ttu-id="bb27a-684">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-684">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="bb27a-685">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-685">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-686">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-686">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-687">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-687">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-688">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-688">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-689">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-689">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-690">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-690">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-691">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-691">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-692">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-692">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="bb27a-693">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-693">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-694"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-694">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-695"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-695">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-696">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-696">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-697"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-697"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-698">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-698">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-699">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-699">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-700">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-700">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-701">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-701">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-702">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-702">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="bb27a-703">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-703">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="bb27a-704">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-704">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="bb27a-705">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-705">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-706">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-706">This method is now obsolete.</span></span> <span data-ttu-id="bb27a-707">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-707">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="bb27a-708">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-708">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-709">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-709">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-710">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-710">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-711">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-711">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-712">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-712">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-713">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-713">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-714">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-714">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-715">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-715">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="bb27a-716">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-716">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="bb27a-717"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-717">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-718">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-718">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="bb27a-719">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-719">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-720"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-720">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-721"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-721">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-722">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-722">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-723"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-723"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-724">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-724">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-725">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-725">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-726">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-726">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-727">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-727">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-728">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-728">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="bb27a-729">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-729">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="bb27a-730"><xref:System.Xml.XmlReader>読み取り専用の出力を提供、`xsl:output`要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-730">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="bb27a-731">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-731">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="bb27a-732">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-732">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-733">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-733">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-734">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-734">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-735">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-735">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-736">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-736">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-737">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-737">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-738">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-738">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-739">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-739">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="bb27a-740">指定した args を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-740">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-741"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-741">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-742"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-742">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-743">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-743">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-744"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-744"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-745">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-745">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-746">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-746">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-747">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-747">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-748">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-748">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-749">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-749">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="bb27a-750">つまり、変換プロセスの前に現在あるノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-750">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="bb27a-751">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-751">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="bb27a-752">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-752">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-753">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-753">This method is now obsolete.</span></span> <span data-ttu-id="bb27a-754">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-754">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="bb27a-755">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-755">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-756">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-756">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-757">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-757">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-758">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-758">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-759">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-759">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-760"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-760">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-761">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-761">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-762">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-762">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-763">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="bb27a-763">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-764">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-764">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="bb27a-765">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-765">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="bb27a-766"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-766">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-767">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-767">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-768"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-768">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-769"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-769">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-770">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-770">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-771"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-771"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-772">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-772">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-773">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-773">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="bb27a-774">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-774">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-775">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-775">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-776">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-776">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="bb27a-777">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-777">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="bb27a-778">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-778">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-779">次の例では、ASP.NET ページ内の変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-779">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-780">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-780">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-781">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-781">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-782">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-782">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-783">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-783">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="bb27a-784">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="bb27a-784">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-785"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-785">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-786">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-786">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-787">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-787">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-788">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-788">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-789">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-789">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="bb27a-790">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-790">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="bb27a-791"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-791">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-792">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-792">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-793"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-793">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-794"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-794">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-795">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-795">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-796"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-796"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-797">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-797">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-798">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-798">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="bb27a-799">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-799">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="bb27a-800">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-800">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="bb27a-801">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-801">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-802">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-802">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-803">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-803">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="bb27a-804">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-804">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="bb27a-805">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-805">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-806">次の例では、XML ファイルを変換し、HTML 文字列を出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-806">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="bb27a-807"><xref:System.IO.StringReader>と<xref:System.IO.StringWriter>クラスは、文字列を読み書きするために使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-807">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="bb27a-808">この例は、`books.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-808">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-809">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-809">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-810">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-810">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-811">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-811">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-812">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-812">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="bb27a-813">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="bb27a-813">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-814"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb27a-814">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="bb27a-815">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-815">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-816">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-816">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-817">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-817">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-818">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-818">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="bb27a-819">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-819">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="bb27a-820"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-820">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-821">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-821">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-822"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-822">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-823"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-823">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-824">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-824">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-825"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-825"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-826">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-826">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-827">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-827">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-828">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-828">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="bb27a-829">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-829">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="bb27a-830">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-830">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-831">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-831">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-832">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="bb27a-832">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="bb27a-833">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-833">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="bb27a-834">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-834">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-835">次の例では、HTML ドキュメントに XML ドキュメントを変換します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-835">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="bb27a-836">テーブルで、ISBN、タイトル、および各書籍の価格を表示します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-836">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="bb27a-837">このサンプルは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-837">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-838">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-838">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-839">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-839">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-840">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-840">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-841">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-841">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="bb27a-842">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="bb27a-842">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-843">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-843">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-844">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-844">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-845">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="bb27a-845">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-846">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-846">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="bb27a-847">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-847">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="bb27a-848"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-848">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-849">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-849">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-850"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-850">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-851"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-851">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-852">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-852">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-853"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-853"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-854">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-854">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-855">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-855">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-856">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-856">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-857">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-857">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-858">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-858">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="bb27a-859">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-859">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="bb27a-860">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-860">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-861">次の例に、customer テーブルを読み込みます、 <xref:System.Xml.XmlDataDocument> HTML テーブルに顧客データをプルする XSLT 変換を実行するとします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-861">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="bb27a-862">Microsoft SQL Server 2000 の Northwind データベースを使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-862">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="bb27a-863">この例は、`customers.xsl` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-863">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-864">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-864">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-865">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-865">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-866">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-866">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-867">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-867">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-868">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-868">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-869">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-869">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-870">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-870">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-871">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-871">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="bb27a-872">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-872">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="bb27a-873"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-873">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-874">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-874">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-875"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-875">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-876"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-876">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-877">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-877">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-878"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-878"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-879">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-879">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-880">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-880">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-881">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-881">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-882">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-882">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-883">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-883">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="bb27a-884">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-884">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="bb27a-885">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-885">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="bb27a-886">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-886">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-887">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-887">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-888">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-888">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-889">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-889">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-890">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-890">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="bb27a-891">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-891">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="bb27a-892">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-892">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="bb27a-893">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-893">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="bb27a-894">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-894">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="bb27a-895">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-895">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="bb27a-896"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-896">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="bb27a-897">指定した args を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-897">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-898"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-898">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-899"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-899">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-900">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-900">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-901"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-901"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="bb27a-902">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-902">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="bb27a-903">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-903">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="bb27a-904">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-904">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="bb27a-905">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-905">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="bb27a-906">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="bb27a-906">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="bb27a-907">つまり、変換プロセスの前に現在あるノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-907">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="bb27a-908">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="bb27a-908">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="bb27a-909">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-909">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb27a-910">次の例では、読み込みを XSLT 変換を実行する前に XML ドキュメントを編集します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-910">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="bb27a-911">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="bb27a-911">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="bb27a-912">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="bb27a-912">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="bb27a-913">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-913">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="bb27a-914">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="bb27a-914">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb27a-915"><see cref="T:System.Xml.XmlResolver" /> メソッドの呼び出し時に外部リソースの解決に使用する <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-915">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="bb27a-916">変換中に使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="bb27a-916">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="bb27a-917">場合設定<see langword="null" />、XSLT <c>document()</c>関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-917">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-918"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-918">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="bb27a-919"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="bb27a-919">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="bb27a-920">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-920">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="bb27a-921">.NET Framework version 1.1 では、アプリケーションの信頼レベルは、既定の動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-921">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="bb27a-922">`Fully trusted code:` 既定の<xref:System.Xml.XmlUrlResolver>解決に使用される資格情報のユーザーがいない、`document()`関数。</span><span class="sxs-lookup"><span data-stu-id="bb27a-922">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="bb27a-923">外部リソースへのアクセスを認証が必要な場合は、このプロパティを使用して、指定する、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="bb27a-923">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="bb27a-924">`Semi-trusted code:` 設定されて`null`、つまり、`document()`関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-924">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="bb27a-925">完全な信頼を指定する必要があるため、 <xref:System.Xml.XmlResolver>、このプロパティも設定できません。</span><span class="sxs-lookup"><span data-stu-id="bb27a-925">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="bb27a-926">この競合回避モジュールが使用されるときに、XSLT`document()`関数が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bb27a-926">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="bb27a-927">解決するのには使用されません`xsl:import`と`xsl:include`スタイル シートで参照される要素。</span><span class="sxs-lookup"><span data-stu-id="bb27a-927">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="bb27a-928">指定する、<xref:System.Xml.XmlResolver>解決に使用する`xsl:import`と`xsl:include`、スタイル シートで参照されている要素を使用して、<xref:System.Xml.Xsl.XslTransform.Load%2A>オーバー ロードを受け取り、<xref:System.Xml.XmlResolver>引数の 1 つとして。</span><span class="sxs-lookup"><span data-stu-id="bb27a-928">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="bb27a-929">このプロパティは、.NET Framework version 1.1 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="bb27a-929">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="bb27a-930">指定する、<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドはことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-930">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="bb27a-931">ここで、<xref:System.Xml.XmlResolver>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが完了するとします。</span><span class="sxs-lookup"><span data-stu-id="bb27a-931">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>
