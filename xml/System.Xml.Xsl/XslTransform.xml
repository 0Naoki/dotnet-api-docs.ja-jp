<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebc2a722279de71968689deb766ae5159cae4090" /><Meta Name="ms.sourcegitcommit" Value="9d1bf7e4c6d697123f26c810c1a049a755634634" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/10/2018" /><Meta Name="ms.locfileid" Value="52455174" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c86a1-101">XSLT (Extensible Stylesheet Language Transformations) スタイル シートを使用して XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-102"><xref:System.Xml.Xsl.XslTransform>クラスは、Microsoft .NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-103"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-104">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-105"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-106">XSLT スタイル シートは、名前空間を使用する必要があります`http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-107">追加の引数を使用してスタイル シートに追加することも、<xref:System.Xml.Xsl.XsltArgumentList>クラス。</span><span class="sxs-lookup"><span data-stu-id="c86a1-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="c86a1-108">このクラスには、スタイル シートから呼び出すことができるスタイル シートと拡張オブジェクトの入力パラメーターが含まれています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="c86a1-109">XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="c86a1-110">作成、<xref:System.Xml.Xsl.XslTransform>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="c86a1-111">使用して、<xref:System.Xml.Xsl.XslTransform.Load%2A>変換のスタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="c86a1-112">このメソッドは、いくつかのオーバー ロードがありを使用してスタイル シートを読み込むことができます、 <xref:System.Xml.XmlReader>、 <xref:System.Xml.XPath.XPathNavigator>、 <xref:System.Xml.XPath.IXPathNavigable>、またはファイルの場所の URL。</span><span class="sxs-lookup"><span data-stu-id="c86a1-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="c86a1-113">使用して、 <xref:System.Xml.Xsl.XslTransform.Transform%2A> XML データを変換するメソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="c86a1-114">このメソッドは、いくつかのオーバー ロードを備え、さまざまな種類の入力と出力を処理することができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="c86a1-115">指定することも、<xref:System.Xml.Xsl.XsltArgumentList>変換中に入力として使用する追加の引数を格納しています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="c86a1-116">**セキュリティの考慮事項**</span><span class="sxs-lookup"><span data-stu-id="c86a1-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="c86a1-117"><xref:System.Xml.Xsl.XslTransform> クラスを使用するアプリケーションを作成するときには、次の項目とその関連事項に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="c86a1-118">拡張オブジェクトは既定で有効になっています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="c86a1-119">拡張オブジェクトを含む <xref:System.Xml.Xsl.XsltArgumentList> オブジェクトが <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡されると、拡張オブジェクトは使用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="c86a1-120">XSLT スタイル シートには、他のファイルへの参照や埋め込みのスクリプト ブロックを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="c86a1-121">悪意のあるユーザーがこれを招くようなデータを悪用やスタイル シートを実行時にシステムにコンピューターがリソース不足になるまでの処理が発生します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="c86a1-122">混在信頼環境で動作する XSLT アプリケーションは、スタイル シートのなりすましを引き起こす可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="c86a1-123">たとえば、悪意のあるユーザーは、有害なスタイル シートを含むオブジェクトを読み込み、それを <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを呼び出して変換を実行する別のユーザーに渡す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="c86a1-124">これらのセキュリティ問題を受け付けていませんを軽減できます<xref:System.Xml.Xsl.XslTransform>オブジェクト、XSLT スタイル シート、または信頼されていないソースから XML ソース データ。</span><span class="sxs-lookup"><span data-stu-id="c86a1-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="c86a1-125">**スクリプトのサポート**</span><span class="sxs-lookup"><span data-stu-id="c86a1-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="c86a1-126">このクラスは、使用した埋め込みスクリプトをサポートしています、`msxsl:script`要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="c86a1-127">.NET Framework version 1.1 では、スタイル シートの証拠は、埋め込みスクリプトに対するアクセス許可が付与を決定します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="c86a1-128">スタイル シートには、Uniform Resource Identifier (URI) からが読み込まれている場合、証拠を作成する、URI を使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="c86a1-129">この証拠には、そのサイトとゾーンと共に URI が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="c86a1-130">別のソースを使用してスタイル シートが読み込まれている場合は、渡すことによって証拠を指定できます、<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>オブジェクトを<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="c86a1-131">それ以外の場合、スクリプト アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="c86a1-132">部分的に信頼された呼び出し元:`UnmanagedCode`埋め込みスクリプトをコンパイルするためのアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="c86a1-133">`ControlEvidence` 提供するためのアクセス許可が必要<xref:System.Security.Policy.Evidence>を<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="c86a1-134">A<xref:System.Security.SecurityException>が、呼び出し元が必要なアクセス許可を持たない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="c86a1-135">詳細については、「<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>」および「<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c86a1-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="c86a1-136">`msxsl:script`要素には、次の要件。</span><span class="sxs-lookup"><span data-stu-id="c86a1-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="c86a1-137">`msxsl:script`要素が属する、`urn:schemas-microsoft-com:xslt`名前空間。</span><span class="sxs-lookup"><span data-stu-id="c86a1-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="c86a1-138">スタイル シートは、名前空間宣言を含める必要があります`xmlns:msxsl=urn:schemas-microsoft-com:xslt`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="c86a1-139">`msxsl:script`要素を含めることができます、`language`属性を使用するスクリプト言語を指定します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="c86a1-140">値、`language`属性は、次のいずれかを指定する必要があります。C#、CSharp、VB、VisualBasic、JScript、または JavaScript。</span><span class="sxs-lookup"><span data-stu-id="c86a1-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="c86a1-141">言語名が大文字小文字を区別しないために、JavaScript と javascript は、どちらも有効です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="c86a1-142">場合、`language`属性が指定されていない、既定値は JScript です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="c86a1-143">`msxsl:script`要素を含める必要があります、`implements-prefix`スクリプト ブロックに関連付けられている名前空間を表すプレフィックスを含む属性。</span><span class="sxs-lookup"><span data-stu-id="c86a1-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="c86a1-144">この名前空間は、スタイル シート内で定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="c86a1-145">スタイル シートには、名前空間にグループ分けされる複数のスクリプト ブロックを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="c86a1-146">同じ名前空間内の複数の言語のスクリプト ブロックすることはできません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="c86a1-147">スクリプト ブロックは、スクリプト ブロックが同じ名前空間内に提供されるもう 1 つのスクリプト ブロックで定義された関数を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="c86a1-148">スクリプト ブロックの内容は、ルールとスクリプト言語の構文に従って解析されます (によって提供される、`language`属性)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="c86a1-149">たとえば、c# スクリプト ブロックがあれば、コメントが付きます、`//`文字。</span><span class="sxs-lookup"><span data-stu-id="c86a1-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="c86a1-150">コメントは、有効な XML コンテンツである必要があります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="c86a1-151">`Note` CDATA セクション内スクリプト ブロックをラップすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c86a1-152"><see cref="T:System.Xml.Xsl.XslTransform" /> オブジェクトは、変換操作の唯一のスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-152"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="c86a1-153">その他の操作には、スレッド セーフであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-153">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="c86a1-154">他のメソッドが呼び出されないオブジェクトの読み込み操作中にすることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-154">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c86a1-155"><see cref="T:System.Xml.Xsl.XslTransform" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-155">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c86a1-156">XSLT スタイル シートを読み込みます。XSLT の <see langword="xsl:include" /> 要素および <see langword="xsl:import" /> 要素で参照されるスタイル シートが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-156">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-157"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-157">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-158"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-158">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-159">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-159">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="c86a1-160">読み込む XSLT スタイル シートを指定する URL。</span><span class="sxs-lookup"><span data-stu-id="c86a1-160">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="c86a1-161">URL で指定された XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-161">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-162"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-162">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-163"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-163">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-164">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-164">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-165"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-165"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-166">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-166">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="c86a1-167">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-167">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c86a1-168">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="c86a1-168">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c86a1-169">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-169">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c86a1-170">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-170">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c86a1-171">スタイル シートの URI は、アセンブリに適用する証拠の作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-171">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c86a1-172">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-172">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c86a1-173">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c86a1-173">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-174">次の例では、HTML ドキュメントに XML ドキュメントを変換します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-174">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="c86a1-175">テーブルで、ISBN、タイトル、および各書籍の価格を表示します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-175">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c86a1-176">このサンプルは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-176">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-177">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-177">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-178">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-178">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c86a1-179">XSLT スタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-179">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="c86a1-180"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-180">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-181"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-181">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-182"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-182">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-183">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-183">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-184"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-184"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-185">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-185">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-186">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-186">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c86a1-187">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="c86a1-187">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c86a1-188">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-188">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c86a1-189">現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を通じてそのすべての子。</span><span class="sxs-lookup"><span data-stu-id="c86a1-189">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="c86a1-190">これにより、スタイル シートとドキュメントの一部を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-190">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="c86a1-191">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XmlReader>スタイル シートの末尾の後に次のノードに配置します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-191">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="c86a1-192">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-192">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="c86a1-193">かどうか、スタイル シートには、エンティティが含まれている、する必要がありますを指定する、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返します`true`)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-193">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="c86a1-194">ここで、<xref:System.Xml.XmlValidatingReader>ことができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-194">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="c86a1-195">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-195">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c86a1-196">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-196">The assembly has full trust.</span></span> <span data-ttu-id="c86a1-197">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-197">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c86a1-198">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-198">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c86a1-199">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c86a1-199">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-200">次の例では、すべての書籍をタイトルで並べ替え、XML ファイルを変換します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-200">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="c86a1-201">例では、入力として次のデータ ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-201">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-202">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-202">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-203">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-203">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c86a1-204"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-204">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-205">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-205">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="c86a1-206"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-206">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-207"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-207">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-208"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-208">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-209">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-209">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-210"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-210"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-211">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-211">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-212">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-212">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c86a1-213">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="c86a1-213">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c86a1-214">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-214">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c86a1-215">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-215">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c86a1-216">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-216">The assembly has full trust.</span></span> <span data-ttu-id="c86a1-217">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-217">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c86a1-218">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-218">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c86a1-219">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c86a1-219">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-220">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-220">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-221">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-221">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c86a1-222">XSLT スタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-222">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="c86a1-223"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-223">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-224"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-224">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-225"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-225">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-226">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-226">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-227"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-227"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-228">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-228">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-229">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-229">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c86a1-230">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="c86a1-230">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c86a1-231">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-231">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c86a1-232">現在位置からスタイル シートが読み込まれた、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-232">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="c86a1-233">スタイル シートとして読み込まれているドキュメントの一部のみを使用するには、スタイル シートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-233">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="c86a1-234">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XPath.XPathNavigator>はスタイル シートの先頭に配置されます (上、`xsl:style sheet`ノード)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-234">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="c86a1-235">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-235">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c86a1-236">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-236">The assembly has full trust.</span></span> <span data-ttu-id="c86a1-237">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-237">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c86a1-238">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-238">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c86a1-239">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c86a1-239">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-240">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-240">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-241">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-241">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="c86a1-242">読み込む XSLT スタイル シートを指定する URL。</span><span class="sxs-lookup"><span data-stu-id="c86a1-242">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-243">スタイル シート、および <c>xsl:import</c> 要素と <c>xsl:include</c> 要素で参照される任意のスタイル シートの読み込みに使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-243">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="c86a1-244">これが <see langword="null" /> の場合は、ユーザー資格情報を持たない既定の <see cref="T:System.Xml.XmlUrlResolver" /> がスタイル シートを開くときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-244">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="c86a1-245">既定の <see cref="T:System.Xml.XmlUrlResolver" /> は、スタイル シート内の外部リソースの解決には使用されないため、<c>xsl:import</c> 要素と <c>xsl:include</c> 要素は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-245">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="c86a1-246"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-246">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-247">URL で指定された XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-247">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-248"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-248">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-249"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-249">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-250">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-250">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-251"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-251"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-252">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-252">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-253">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-253">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c86a1-254">スタイル シートの URI は、アセンブリに適用する証拠の作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-254">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c86a1-255">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-255">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c86a1-256">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c86a1-256">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-257">次の例では、HTML ドキュメントに XML ドキュメントを変換します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-257">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="c86a1-258">例では、読み込む XSLT スタイル シートが含まれている`xsl:include`別のスタイル シートを参照する要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-258">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="c86a1-259"><xref:System.Xml.XmlUrlResolver>に渡される、<xref:System.Xml.Xsl.XslTransform.Load%2A>インクルードされたスタイル シートのネットワーク リソースにアクセスするために必要な資格情報を設定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-259">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="c86a1-260">例では、入力として次のデータ ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-260">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-261">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-261">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-262">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-262">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c86a1-263">XSLT スタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-263">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-264"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-264">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c86a1-265">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-265">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c86a1-266"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-266">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-267"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-267">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-268"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-268">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-269"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-269">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-270">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-270">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-271"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-271"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-272">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-272">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-273">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-273">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c86a1-274">現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を通じてそのすべての子。</span><span class="sxs-lookup"><span data-stu-id="c86a1-274">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="c86a1-275">これにより、スタイル シートとドキュメントの一部を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-275">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="c86a1-276">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XmlReader>スタイル シートの末尾の後に次のノードに配置します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-276">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="c86a1-277">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-277">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="c86a1-278">かどうか、スタイル シートには、エンティティが含まれている、する必要がありますを指定する、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返します`true`)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-278">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="c86a1-279">ここで、<xref:System.Xml.XmlValidatingReader>ことができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-279">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="c86a1-280">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-280">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c86a1-281">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-281">The assembly has full trust.</span></span> <span data-ttu-id="c86a1-282">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-282">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c86a1-283">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c86a1-284">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c86a1-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-285">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-285">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-286">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-286">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c86a1-287"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-287">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-288">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-288">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-289"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-289">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c86a1-290">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-290">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c86a1-291"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-291">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-292"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-292">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-293"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-293">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-294"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-294">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-295">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-295">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-296"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-296"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-297">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-297">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-298">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-298">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c86a1-299">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-299">The assembly has full trust.</span></span> <span data-ttu-id="c86a1-300">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-300">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c86a1-301">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-301">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c86a1-302">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c86a1-302">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-303">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-303">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-304">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-304">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c86a1-305">XSLT スタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-305">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-306"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-306">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c86a1-307">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-307">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c86a1-308"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-308">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-309"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-309">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-310"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-310">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-311"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-311">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-312">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-312">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-313"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-313"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-314">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-314">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-315">現在位置からスタイル シートが読み込まれた、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-315">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="c86a1-316">読み込まれたドキュメントの一部として、スタイル シートを使用するには、スタイル シートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-316">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="c86a1-317">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XPath.XPathNavigator>はスタイル シートの先頭に配置されます (上、`xsl:style sheet`ノード)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-317">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="c86a1-318">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-318">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c86a1-319">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-319">The assembly has full trust.</span></span> <span data-ttu-id="c86a1-320">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-320">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c86a1-321">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-321">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c86a1-322">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c86a1-322">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-323">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-323">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-324">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-324">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c86a1-325">読み込むスタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-325">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-326"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-326">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c86a1-327">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-327">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c86a1-328"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-328">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="c86a1-329">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-329">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="c86a1-330">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-330">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="c86a1-331">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-331">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="c86a1-332">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-332">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c86a1-333"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-333">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="c86a1-334">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-334">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-335"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-335">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-336"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-336">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-337">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-337">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-338"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-338"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-339">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-339">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-340">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-340">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c86a1-341">現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を通じてそのすべての子。</span><span class="sxs-lookup"><span data-stu-id="c86a1-341">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="c86a1-342">これにより、スタイル シートとドキュメントの一部を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-342">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="c86a1-343">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XmlReader>スタイル シートの末尾の後に次のノードに配置します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-343">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="c86a1-344">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-344">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="c86a1-345">かどうか、スタイル シートには、エンティティが含まれている、する必要がありますを指定する、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返します`true`)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-345">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="c86a1-346">ここで、<xref:System.Xml.XmlValidatingReader>ことができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-346">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="c86a1-347">証拠を提供するさまざまな方法はあります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-347">There are different ways to provide evidence.</span></span> <span data-ttu-id="c86a1-348">次の表では、一般的なユーザー シナリオを提供する証拠の種類について説明します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-348">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="c86a1-349">シナリオ</span><span class="sxs-lookup"><span data-stu-id="c86a1-349">Scenario</span></span>|<span data-ttu-id="c86a1-350">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="c86a1-350">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="c86a1-351">XSLT スタイル シートは自己完結型または信頼できるコード ベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-351">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="c86a1-352">アセンブリから証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-352">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="c86a1-353">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="c86a1-353">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c86a1-354">ソースの出所がわかっている場合、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-354">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="c86a1-355">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-355">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="c86a1-356">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="c86a1-356">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c86a1-357">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="c86a1-357">The origin of the source is not known.</span></span>|<span data-ttu-id="c86a1-358">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-358">Set evidence to `null`.</span></span> <span data-ttu-id="c86a1-359">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-359">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="c86a1-360">さらに、設定することも、`resolver`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-360">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="c86a1-361">これにより`xsl:import`と`xsl:include`要素は処理されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-361">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="c86a1-362">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="c86a1-362">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c86a1-363">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="c86a1-363">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="c86a1-364">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-364">Request evidence from the caller.</span></span> <span data-ttu-id="c86a1-365">呼び出し元の API は、通常、証拠を提供する方法を提供する必要があります、<xref:System.Security.Policy.Evidence>クラス。</span><span class="sxs-lookup"><span data-stu-id="c86a1-365">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="c86a1-366">次の例では、XSLT 変換を実行する場所`xsltReader`は、<xref:System.Xml.XmlReader>スタイル シートを含んでいると`secureURL`作成に使用できる信頼された URL は、<xref:System.Security.Policy.Evidence>します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-366">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="c86a1-367"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>メソッドの作成に使用<xref:System.Security.Policy.Evidence>これスタイル シートに適用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-367">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-368">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-368">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-369">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-369">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="c86a1-370">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-370">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c86a1-371">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-371">for providing evidence.</span></span> <span data-ttu-id="c86a1-372">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="c86a1-372">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c86a1-373"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-373">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-374">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-374">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-375"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-375">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c86a1-376">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-376">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c86a1-377"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-377">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="c86a1-378">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-378">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="c86a1-379">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-379">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="c86a1-380">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-380">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="c86a1-381">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-381">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c86a1-382"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-382">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="c86a1-383">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-383">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-384"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-384">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-385"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-385">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-386">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-386">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-387"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-387"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-388">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-388">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="c86a1-389">証拠を提供するさまざまな方法はあります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-389">There are different ways to provide evidence.</span></span> <span data-ttu-id="c86a1-390">次の表では、一般的なユーザー シナリオを提供する証拠の種類について説明します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-390">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="c86a1-391">シナリオ</span><span class="sxs-lookup"><span data-stu-id="c86a1-391">Scenario</span></span>|<span data-ttu-id="c86a1-392">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="c86a1-392">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="c86a1-393">XSLT スタイル シートは自己完結型または信頼できるコード ベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-393">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="c86a1-394">アセンブリから証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-394">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="c86a1-395">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="c86a1-395">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c86a1-396">ソースの出所がわかっている場合、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-396">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="c86a1-397">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-397">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="c86a1-398">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="c86a1-398">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c86a1-399">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="c86a1-399">The origin of the source is not known.</span></span>|<span data-ttu-id="c86a1-400">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-400">Set evidence to `null`.</span></span> <span data-ttu-id="c86a1-401">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-401">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="c86a1-402">さらに、設定することも、`resolver`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-402">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="c86a1-403">これにより`xsl:import`と`xsl:include`要素は処理されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-403">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="c86a1-404">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="c86a1-404">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c86a1-405">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="c86a1-405">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="c86a1-406">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-406">Request evidence from the caller.</span></span> <span data-ttu-id="c86a1-407">呼び出し元の API は、通常、証拠を提供する方法を提供する必要があります、<xref:System.Security.Policy.Evidence>クラス。</span><span class="sxs-lookup"><span data-stu-id="c86a1-407">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-408">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-408">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-409">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-409">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="c86a1-410">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-410">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c86a1-411">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-411">for providing evidence.</span></span> <span data-ttu-id="c86a1-412">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="c86a1-412">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c86a1-413">読み込むスタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-413">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-414"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-414">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c86a1-415">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-415">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c86a1-416"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-416">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="c86a1-417">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-417">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="c86a1-418">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-418">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="c86a1-419">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-419">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="c86a1-420">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-420">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c86a1-421"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-421">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="c86a1-422">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-422">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-423"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-423">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-424"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-424">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-425">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-425">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-426"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-426"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-427">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-427">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-428">現在位置からスタイル シートが読み込まれた、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-428">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="c86a1-429">読み込まれたドキュメントの一部として、スタイル シートを使用するには、スタイル シートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-429">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="c86a1-430">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XPath.XPathNavigator>はスタイル シートの先頭に配置されます (上、`xsl:style sheet`ノード)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-430">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="c86a1-431">証拠を提供するさまざまな方法はあります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-431">There are different ways to provide evidence.</span></span> <span data-ttu-id="c86a1-432">次の表では、一般的なユーザー シナリオを提供する証拠の種類について説明します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-432">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="c86a1-433">シナリオ</span><span class="sxs-lookup"><span data-stu-id="c86a1-433">Scenario</span></span>|<span data-ttu-id="c86a1-434">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="c86a1-434">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="c86a1-435">XSLT スタイル シートは自己完結型または信頼できるコード ベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-435">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="c86a1-436">アセンブリから証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-436">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="c86a1-437">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="c86a1-437">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c86a1-438">ソースの出所がわかっている場合、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-438">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="c86a1-439">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-439">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="c86a1-440">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="c86a1-440">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c86a1-441">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="c86a1-441">The origin of the source is not known.</span></span>|<span data-ttu-id="c86a1-442">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-442">Set evidence to `null`.</span></span> <span data-ttu-id="c86a1-443">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-443">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="c86a1-444">さらに、設定することも、`resolver`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-444">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="c86a1-445">これにより`xsl:import`と`xsl:include`要素は処理されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-445">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="c86a1-446">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="c86a1-446">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c86a1-447">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="c86a1-447">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="c86a1-448">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-448">Request evidence from the caller.</span></span> <span data-ttu-id="c86a1-449">呼び出し元の API は、通常、証拠を提供する方法を提供する必要があります、`Evidence`クラス。</span><span class="sxs-lookup"><span data-stu-id="c86a1-449">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-450">次の例では、外部ソースからスタイル シートを使用して XSLT 変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-450">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="c86a1-451">信頼されていないソースからスタイル シートが含まれているため、`resolver`と`evidence`パラメーターに設定されて`null`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-451">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c86a1-452">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-452">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c86a1-453">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-453">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="c86a1-454">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-454">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c86a1-455">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-455">for providing evidence.</span></span> <span data-ttu-id="c86a1-456">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="c86a1-456">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c86a1-457">読み込まれた XSLT スタイル シートを使用して、XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-457">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-458"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-458">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-459"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-459">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-460">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-460">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="c86a1-461">変換するソース ドキュメントの URL。</span><span class="sxs-lookup"><span data-stu-id="c86a1-461">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="c86a1-462">出力ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="c86a1-462">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="c86a1-463">XML データを入力ファイルに変換し、その結果を出力ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-463">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-464"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-464">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-465"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-465">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-466">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-466">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-467"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-467"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-468">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-468">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-469">このメソッドは、.NET Framework version 1.1 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-469">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="c86a1-470">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-470">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c86a1-471">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-471">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-472">次の例では、変換、`books.xml`ファイルを使用して、`output.xsl`スタイル シートに結果を出力し、`books.html`ファイル。</span><span class="sxs-lookup"><span data-stu-id="c86a1-472">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="c86a1-473">このサンプルでは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-473">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-474">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-474">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c86a1-475">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="c86a1-475">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-476"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-476">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-477">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-477">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-478">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-478">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="c86a1-479">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-479">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="c86a1-480">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-480">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-481"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-481">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-482"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-482">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-483">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-483">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-484"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-484"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-485">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-485">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-486">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-486">This method is now obsolete.</span></span> <span data-ttu-id="c86a1-487">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-487">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c86a1-488">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-488">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c86a1-489">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-489">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-490">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlReader> (、`xsl:output`要素は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-490">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="c86a1-491">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-491">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c86a1-492">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-492">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="c86a1-493">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-493">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-494">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-494">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-495">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-495">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c86a1-496">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-496">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c86a1-497">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-497">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-498">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-498">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c86a1-499">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="c86a1-499">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-500">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-500">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-501">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-501">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="c86a1-502">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-502">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="c86a1-503">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-503">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-504"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-504">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-505"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-505">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-506">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-506">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-507"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-507"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-508">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-508">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-509">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-509">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-510">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-510">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-511">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-511">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-512">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-512">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c86a1-513">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-513">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c86a1-514"><xref:System.Xml.XmlReader>読み取り専用の出力を提供、`xsl:output`要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-514">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="c86a1-515">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-515">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c86a1-516">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-516">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-517">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-517">This method is obsolete.</span></span> <span data-ttu-id="c86a1-518">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティは、XSLT document() 関数が解決する方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-518">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="c86a1-519">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-519">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-520">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-520">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-521">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-521">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-522">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-522">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-523">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-523">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="c86a1-524">変換するソース ドキュメントの URL。</span><span class="sxs-lookup"><span data-stu-id="c86a1-524">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="c86a1-525">出力ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="c86a1-525">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-526">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-526">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c86a1-527">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-527">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c86a1-528"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-528">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-529">XML データを入力ファイルに変換し、その結果を出力ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-529">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-530"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-530">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-531"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-531">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-532">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-532">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-533"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-533"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-534">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-534">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-535">次の例では、XSLT 変換を実行し、ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-535">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="c86a1-536"><xref:System.Xml.XmlUrlResolver>資格情報を使用する、既定値は外部のリソースを解決します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-536">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="c86a1-537">詳細については、「<xref:System.Net.CredentialCache.DefaultCredentials%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c86a1-537">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-538"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-538">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-539">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-539">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-540">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-540">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-541">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="c86a1-541">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c86a1-542">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-542">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-543"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-543">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-544"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-544">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-545">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-545">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-546"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-546"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-547">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-547">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-548">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-548">This method is now obsolete.</span></span> <span data-ttu-id="c86a1-549">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-549">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c86a1-550">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-550">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c86a1-551">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-551">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c86a1-552">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-552">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-553">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-553">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-554">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-554">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c86a1-555">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-555">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c86a1-556">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-556">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-557">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-557">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-558">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-558">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-559">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-559">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-560">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-560">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c86a1-561">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="c86a1-561">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-562"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-562">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-563">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-563">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-564">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-564">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-565">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-565">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c86a1-566">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-566">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-567"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-567">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-568"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-568">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-569">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-569">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-570"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-570"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-571">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-571">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-572">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-572">This method is now obsolete.</span></span> <span data-ttu-id="c86a1-573">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-573">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c86a1-574">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-574">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c86a1-575">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-575">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c86a1-576">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-576">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c86a1-577">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-577">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="c86a1-578">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-578">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-579">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-579">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-580">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>切り出し、および渡すを単にノードを含む<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-580">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c86a1-581">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-581">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c86a1-582">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-582">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-583">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-583">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-584">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-584">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-585">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-585">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-586">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-586">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c86a1-587">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="c86a1-587">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-588"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-588">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-589">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-589">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-590">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-590">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-591">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-591">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c86a1-592">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-592">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c86a1-593"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-593">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-594">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-594">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="c86a1-595">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-595">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-596"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-596">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-597"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-597">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-598">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-598">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-599"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-599"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-600">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-600">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-601">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-601">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-602">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlReader> (、`xsl:output`要素は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-602">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="c86a1-603">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-603">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c86a1-604">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-604">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="c86a1-605">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-605">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-606">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-606">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-607">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>切り出し、および渡すを単にノードを含む<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-607">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c86a1-608">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-608">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c86a1-609">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-609">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-610">次の例は、XML ドキュメントを変換し、結果を出力する`XmlReader`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-610">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="c86a1-611"><xref:System.Xml.XmlUrlResolver> XSLT を処理するために必要な資格情報を使用`document()`関数。</span><span class="sxs-lookup"><span data-stu-id="c86a1-611">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-612">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-612">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c86a1-613">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="c86a1-613">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-614"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-614">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-615">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-615">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-616">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-616">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-617">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-617">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c86a1-618">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-618">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-619"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-619">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-620"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-620">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-621">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-621">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-622"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-622"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-623">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-623">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-624">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-624">This method is now obsolete.</span></span> <span data-ttu-id="c86a1-625">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-625">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c86a1-626">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-626">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c86a1-627">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-627">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-628">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-628">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c86a1-629">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-629">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c86a1-630">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-630">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-631">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-631">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-632">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-632">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c86a1-633">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-633">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c86a1-634">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-634">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-635">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-635">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-636">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-636">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-637">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-637">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-638">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-638">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c86a1-639">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="c86a1-639">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-640">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-640">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-641">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-641">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-642">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="c86a1-642">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c86a1-643">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-643">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-644"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-644">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-645"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-645">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-646">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-646">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-647"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-647"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-648">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-648">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-649">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-649">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-650">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-650">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-651">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-651">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-652">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-652">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c86a1-653">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-653">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c86a1-654">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-654">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-655">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-655">This method is now obsolete.</span></span> <span data-ttu-id="c86a1-656">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-656">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c86a1-657">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-657">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-658">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-658">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-659">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-659">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-660">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-660">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-661">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-661">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-662">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-662">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-663">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-663">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-664">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-664">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c86a1-665">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-665">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-666"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-666">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-667"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-667">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-668">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-668">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-669"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-669"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-670">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-670">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-671">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-671">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-672">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-672">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-673">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-673">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-674">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-674">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c86a1-675">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-675">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c86a1-676">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-676">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c86a1-677">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-677">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-678">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-678">This method is now obsolete.</span></span> <span data-ttu-id="c86a1-679">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-679">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c86a1-680">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-680">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-681">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-681">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-682">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-682">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-683">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-683">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-684">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-684">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-685">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-685">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-686">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-686">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-687">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-687">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c86a1-688">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-688">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c86a1-689"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-689">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-690">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-690">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="c86a1-691">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-691">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-692"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-692">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-693"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-693">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-694">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-694">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-695"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-695"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-696">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-696">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-697">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-697">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-698">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-698">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-699">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-699">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-700">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-700">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c86a1-701">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-701">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c86a1-702"><xref:System.Xml.XmlReader>読み取り専用の出力を提供、`xsl:output`要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-702">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="c86a1-703">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-703">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c86a1-704">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-704">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-705">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-705">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-706">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-706">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-707">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-707">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-708">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-708">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-709">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-709">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-710">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-710">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-711">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-711">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c86a1-712">指定した args を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-712">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-713"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-713">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-714"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-714">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-715">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-715">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-716"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-716"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-717">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-717">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-718">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-718">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-719">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-719">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-720">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-720">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-721">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-721">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c86a1-722">つまり、変換プロセスの前に現在あるノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-722">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c86a1-723">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-723">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c86a1-724">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-724">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-725">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-725">This method is now obsolete.</span></span> <span data-ttu-id="c86a1-726">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-726">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c86a1-727">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-727">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-728">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-728">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-729">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-729">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-730">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-730">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-731">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-731">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-732"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-732">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-733">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-733">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-734">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-734">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-735">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="c86a1-735">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-736">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-736">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c86a1-737">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-737">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c86a1-738"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-738">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-739">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-739">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-740"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-740">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-741"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-741">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-742">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-742">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-743"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-743"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-744">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-744">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-745">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-745">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c86a1-746">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-746">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-747">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-747">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-748">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-748">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c86a1-749">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-749">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c86a1-750">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-750">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-751">次の例では、ASP.NET ページ内の変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-751">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-752">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-752">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-753">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-753">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-754">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-754">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-755">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-755">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c86a1-756">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="c86a1-756">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-757"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-757">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-758">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-758">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-759">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-759">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-760">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-760">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-761">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-761">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c86a1-762">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-762">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c86a1-763"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-763">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-764">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-764">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-765"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-765">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-766"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-766">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-767">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-767">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-768"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-768"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-769">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-769">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-770">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-770">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c86a1-771">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-771">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c86a1-772">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-772">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="c86a1-773">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-773">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-774">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-774">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-775">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-775">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c86a1-776">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-776">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c86a1-777">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-777">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-778">次の例では、XML ファイルを変換し、HTML 文字列を出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-778">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="c86a1-779"><xref:System.IO.StringReader>と<xref:System.IO.StringWriter>クラスは、文字列を読み書きするために使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-779">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="c86a1-780">この例は、`books.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-780">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-781">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-781">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-782">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-782">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-783">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-783">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-784">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-784">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c86a1-785">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="c86a1-785">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-786"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c86a1-786">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c86a1-787">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-787">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-788">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-788">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-789">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-789">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-790">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-790">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c86a1-791">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-791">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c86a1-792"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-792">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-793">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-793">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-794"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-794">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-795"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-795">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-796">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-796">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-797"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-797"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-798">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-798">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-799">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-799">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-800">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-800">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c86a1-801">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-801">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c86a1-802">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-802">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-803">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-803">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-804">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c86a1-804">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c86a1-805">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-805">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c86a1-806">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-806">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-807">次の例では、HTML ドキュメントに XML ドキュメントを変換します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-807">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="c86a1-808">テーブルで、ISBN、タイトル、および各書籍の価格を表示します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-808">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c86a1-809">このサンプルは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-809">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-810">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-810">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-811">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-811">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-812">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-812">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-813">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-813">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c86a1-814">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="c86a1-814">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-815">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-815">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-816">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-816">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-817">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="c86a1-817">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-818">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-818">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c86a1-819">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-819">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c86a1-820"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-820">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-821">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-821">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-822"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-822">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-823"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-823">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-824">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-824">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-825"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-825"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-826">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-826">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-827">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-827">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-828">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-828">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-829">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-829">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-830">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-830">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c86a1-831">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-831">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c86a1-832">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-832">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-833">次の例に、customer テーブルを読み込みます、 <xref:System.Xml.XmlDataDocument> HTML テーブルに顧客データをプルする XSLT 変換を実行するとします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-833">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="c86a1-834">Microsoft SQL Server 2000 の Northwind データベースを使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-834">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="c86a1-835">この例は、`customers.xsl` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-835">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-836">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-836">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-837">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-837">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-838">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-838">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-839">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-839">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-840">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-840">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-841">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-841">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-842">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-842">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-843">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-843">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c86a1-844">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-844">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c86a1-845"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-845">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-846">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-846">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-847"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-847">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-848"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-848">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-849">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-849">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-850"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-850"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-851">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-851">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-852">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-852">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-853">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-853">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-854">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-854">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-855">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-855">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c86a1-856">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-856">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c86a1-857">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-857">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c86a1-858">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-858">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-859">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-859">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-860">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-860">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-861">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-861">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-862">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-862">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c86a1-863">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-863">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c86a1-864">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-864">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c86a1-865">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-865">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c86a1-866">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-866">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c86a1-867">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-867">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c86a1-868"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-868">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c86a1-869">指定した args を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-869">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-870"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-870">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-871"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-871">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-872">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-872">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-873"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-873"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c86a1-874">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-874">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c86a1-875">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-875">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c86a1-876">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-876">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c86a1-877">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-877">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c86a1-878">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="c86a1-878">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c86a1-879">つまり、変換プロセスの前に現在あるノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-879">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c86a1-880">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="c86a1-880">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c86a1-881">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-881">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c86a1-882">次の例では、読み込みを XSLT 変換を実行する前に XML ドキュメントを編集します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-882">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c86a1-883">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="c86a1-883">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c86a1-884">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="c86a1-884">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c86a1-885">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-885">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c86a1-886">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="c86a1-886">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c86a1-887"><see cref="T:System.Xml.XmlResolver" /> メソッドの呼び出し時に外部リソースの解決に使用する <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-887">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="c86a1-888">変換中に使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c86a1-888">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="c86a1-889">場合設定<see langword="null" />、XSLT <c>document()</c>関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-889">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-890"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-890">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c86a1-891"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="c86a1-891">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c86a1-892">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-892">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c86a1-893">.NET Framework version 1.1 では、アプリケーションの信頼レベルは、既定の動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-893">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="c86a1-894">`Fully trusted code:` 既定の<xref:System.Xml.XmlUrlResolver>解決に使用される資格情報のユーザーがいない、`document()`関数。</span><span class="sxs-lookup"><span data-stu-id="c86a1-894">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="c86a1-895">外部リソースへのアクセスを認証が必要な場合は、このプロパティを使用して、指定する、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="c86a1-895">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c86a1-896">`Semi-trusted code:` 設定されて`null`、つまり、`document()`関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-896">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="c86a1-897">完全な信頼を指定する必要があるため、 <xref:System.Xml.XmlResolver>、このプロパティも設定できません。</span><span class="sxs-lookup"><span data-stu-id="c86a1-897">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="c86a1-898">この競合回避モジュールが使用されるときに、XSLT`document()`関数が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="c86a1-898">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="c86a1-899">解決するのには使用されません`xsl:import`と`xsl:include`スタイル シートで参照される要素。</span><span class="sxs-lookup"><span data-stu-id="c86a1-899">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="c86a1-900">指定する、<xref:System.Xml.XmlResolver>解決に使用する`xsl:import`と`xsl:include`、スタイル シートで参照されている要素を使用して、<xref:System.Xml.Xsl.XslTransform.Load%2A>オーバー ロードを受け取り、<xref:System.Xml.XmlResolver>引数の 1 つとして。</span><span class="sxs-lookup"><span data-stu-id="c86a1-900">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c86a1-901">このプロパティは、.NET Framework version 1.1 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="c86a1-901">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="c86a1-902">指定する、<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドはことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-902">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="c86a1-903">ここで、<xref:System.Xml.XmlResolver>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが完了するとします。</span><span class="sxs-lookup"><span data-stu-id="c86a1-903">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>