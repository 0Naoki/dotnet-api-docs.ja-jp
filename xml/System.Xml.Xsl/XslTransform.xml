<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bfd12521a150f42d8158af6f46e3b49b813ab04b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57951410" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="24730-101">XSLT (Extensible Stylesheet Language Transformations) スタイル シートを使用して XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="24730-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-102"><xref:System.Xml.Xsl.XslTransform>クラスは、Microsoft .NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-103"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-104">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-105"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-106">XSLT スタイル シートは、名前空間を使用する必要があります`http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-107">追加の引数を使用してスタイル シートに追加することも、<xref:System.Xml.Xsl.XsltArgumentList>クラス。</span><span class="sxs-lookup"><span data-stu-id="24730-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="24730-108">このクラスには、スタイル シートから呼び出すことができるスタイル シートと拡張オブジェクトの入力パラメーターが含まれています。</span><span class="sxs-lookup"><span data-stu-id="24730-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="24730-109">XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="24730-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="24730-110">作成、<xref:System.Xml.Xsl.XslTransform>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="24730-111">使用して、<xref:System.Xml.Xsl.XslTransform.Load%2A>変換のスタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="24730-112">このメソッドは、いくつかのオーバー ロードがありを使用してスタイル シートを読み込むことができます、 <xref:System.Xml.XmlReader>、 <xref:System.Xml.XPath.XPathNavigator>、 <xref:System.Xml.XPath.IXPathNavigable>、またはファイルの場所の URL。</span><span class="sxs-lookup"><span data-stu-id="24730-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="24730-113">使用して、 <xref:System.Xml.Xsl.XslTransform.Transform%2A> XML データを変換するメソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="24730-114">このメソッドは、いくつかのオーバー ロードを備え、さまざまな種類の入力と出力を処理することができます。</span><span class="sxs-lookup"><span data-stu-id="24730-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="24730-115">指定することも、<xref:System.Xml.Xsl.XsltArgumentList>変換中に入力として使用する追加の引数を格納しています。</span><span class="sxs-lookup"><span data-stu-id="24730-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="24730-116">**セキュリティの考慮事項**</span><span class="sxs-lookup"><span data-stu-id="24730-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="24730-117"><xref:System.Xml.Xsl.XslTransform> クラスを使用するアプリケーションを作成するときには、次の項目とその関連事項に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24730-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="24730-118">拡張オブジェクトは既定で有効になっています。</span><span class="sxs-lookup"><span data-stu-id="24730-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="24730-119">拡張オブジェクトを含む <xref:System.Xml.Xsl.XsltArgumentList> オブジェクトが <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドに渡されると、拡張オブジェクトは使用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="24730-120">XSLT スタイル シートには、他のファイルへの参照や埋め込みのスクリプト ブロックを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="24730-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="24730-121">悪意のあるユーザーがこれを招くようなデータを悪用やスタイル シートを実行時にシステムにコンピューターがリソース不足になるまでの処理が発生します。</span><span class="sxs-lookup"><span data-stu-id="24730-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="24730-122">混在信頼環境で動作する XSLT アプリケーションは、スタイル シートのなりすましを引き起こす可能性があります。</span><span class="sxs-lookup"><span data-stu-id="24730-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="24730-123">たとえば、悪意のあるユーザーは、有害なスタイル シートを含むオブジェクトを読み込み、それを <xref:System.Xml.Xsl.XslTransform.Transform%2A> メソッドを呼び出して変換を実行する別のユーザーに渡す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="24730-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="24730-124">これらのセキュリティ問題を受け付けていませんを軽減できます<xref:System.Xml.Xsl.XslTransform>オブジェクト、XSLT スタイル シート、または信頼されていないソースから XML ソース データ。</span><span class="sxs-lookup"><span data-stu-id="24730-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="24730-125">**スクリプトのサポート**</span><span class="sxs-lookup"><span data-stu-id="24730-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="24730-126">このクラスは、使用した埋め込みスクリプトをサポートしています、`msxsl:script`要素。</span><span class="sxs-lookup"><span data-stu-id="24730-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="24730-127">.NET Framework version 1.1 では、スタイル シートの証拠は、埋め込みスクリプトに対するアクセス許可が付与を決定します。</span><span class="sxs-lookup"><span data-stu-id="24730-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="24730-128">スタイル シートには、Uniform Resource Identifier (URI) からが読み込まれている場合、証拠を作成する、URI を使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="24730-129">この証拠には、そのサイトとゾーンと共に URI が含まれています。</span><span class="sxs-lookup"><span data-stu-id="24730-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="24730-130">別のソースを使用してスタイル シートが読み込まれている場合は、渡すことによって証拠を指定できます、<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>オブジェクトを<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="24730-131">それ以外の場合、スクリプト アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="24730-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="24730-132">部分的に信頼された呼び出し元:`UnmanagedCode`埋め込みスクリプトをコンパイルするためのアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="24730-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="24730-133">`ControlEvidence` 提供するためのアクセス許可が必要<xref:System.Security.Policy.Evidence>を<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="24730-134">A<xref:System.Security.SecurityException>が、呼び出し元が必要なアクセス許可を持たない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="24730-135">詳細については、「<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>」および「<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24730-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="24730-136">`msxsl:script`要素には、次の要件。</span><span class="sxs-lookup"><span data-stu-id="24730-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="24730-137">`msxsl:script`要素が属する、`urn:schemas-microsoft-com:xslt`名前空間。</span><span class="sxs-lookup"><span data-stu-id="24730-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="24730-138">スタイル シートは、名前空間宣言を含める必要があります`xmlns:msxsl=urn:schemas-microsoft-com:xslt`します。</span><span class="sxs-lookup"><span data-stu-id="24730-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="24730-139">`msxsl:script`要素を含めることができます、`language`属性を使用するスクリプト言語を指定します。</span><span class="sxs-lookup"><span data-stu-id="24730-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="24730-140">値、`language`属性は、次のいずれかを指定する必要があります。C#、CSharp、VB、VisualBasic、JScript、または JavaScript。</span><span class="sxs-lookup"><span data-stu-id="24730-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="24730-141">言語名が大文字小文字を区別しないために、JavaScript と javascript は、どちらも有効です。</span><span class="sxs-lookup"><span data-stu-id="24730-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="24730-142">場合、`language`属性が指定されていない、既定値は JScript です。</span><span class="sxs-lookup"><span data-stu-id="24730-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="24730-143">`msxsl:script`要素を含める必要があります、`implements-prefix`スクリプト ブロックに関連付けられている名前空間を表すプレフィックスを含む属性。</span><span class="sxs-lookup"><span data-stu-id="24730-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="24730-144">この名前空間は、スタイル シート内で定義されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="24730-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="24730-145">スタイル シートには、名前空間にグループ分けされる複数のスクリプト ブロックを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="24730-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="24730-146">同じ名前空間内の複数の言語のスクリプト ブロックすることはできません。</span><span class="sxs-lookup"><span data-stu-id="24730-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="24730-147">スクリプト ブロックは、スクリプト ブロックが同じ名前空間内に提供されるもう 1 つのスクリプト ブロックで定義された関数を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="24730-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="24730-148">スクリプト ブロックの内容は、ルールとスクリプト言語の構文に従って解析されます (によって提供される、`language`属性)。</span><span class="sxs-lookup"><span data-stu-id="24730-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="24730-149">たとえば、c# スクリプト ブロックがあれば、コメントが付きます、`//`文字。</span><span class="sxs-lookup"><span data-stu-id="24730-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="24730-150">コメントは、有効な XML コンテンツである必要があります。</span><span class="sxs-lookup"><span data-stu-id="24730-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="24730-151">`Note` CDATA セクション内スクリプト ブロックをラップすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="24730-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="24730-152"><see cref="T:System.Xml.Xsl.XslTransform" /> オブジェクトは、変換操作の唯一のスレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="24730-152"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="24730-153">その他の操作には、スレッド セーフであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="24730-153">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="24730-154">他のメソッドが呼び出されないオブジェクトの読み込み操作中にすることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24730-154">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24730-155"><see cref="T:System.Xml.Xsl.XslTransform" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="24730-155">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24730-156">XSLT スタイル シートを読み込みます。XSLT の <see langword="xsl:include" /> 要素および <see langword="xsl:import" /> 要素で参照されるスタイル シートが読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="24730-156">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-157"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-157">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-158"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-158">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-159">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-159">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="24730-160">読み込む XSLT スタイル シートを指定する URL。</span><span class="sxs-lookup"><span data-stu-id="24730-160">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="24730-161">URL で指定された XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-161">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-162"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-162">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-163"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-163">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-164">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-164">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-165"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-165"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-166">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`します。</span><span class="sxs-lookup"><span data-stu-id="24730-166">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="24730-167">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="24730-167">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="24730-168">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="24730-168">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="24730-169">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-169">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="24730-170">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="24730-170">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="24730-171">スタイル シートの URI は、アセンブリに適用する証拠の作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-171">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="24730-172">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-172">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="24730-173">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24730-173">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24730-174">次の例では、HTML ドキュメントに XML ドキュメントを変換します。</span><span class="sxs-lookup"><span data-stu-id="24730-174">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="24730-175">テーブルで、ISBN、タイトル、および各書籍の価格を表示します。</span><span class="sxs-lookup"><span data-stu-id="24730-175">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="24730-176">このサンプルは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-176">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-177">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="24730-177">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-178">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="24730-178">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="24730-179">XSLT スタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-179">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="24730-180"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-180">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-181"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-181">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-182"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-182">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-183">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-183">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-184"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-184"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-185">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-185">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-186">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="24730-186">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="24730-187">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="24730-187">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="24730-188">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-188">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="24730-189">現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を通じてそのすべての子。</span><span class="sxs-lookup"><span data-stu-id="24730-189">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="24730-190">これにより、スタイル シートとドキュメントの一部を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="24730-190">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="24730-191">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XmlReader>スタイル シートの末尾の後に次のノードに配置します。</span><span class="sxs-lookup"><span data-stu-id="24730-191">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="24730-192">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="24730-192">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="24730-193">かどうか、スタイル シートには、エンティティが含まれている、する必要がありますを指定する、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返します`true`)。</span><span class="sxs-lookup"><span data-stu-id="24730-193">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="24730-194">ここで、<xref:System.Xml.XmlValidatingReader>ことができます。</span><span class="sxs-lookup"><span data-stu-id="24730-194">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="24730-195">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="24730-195">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="24730-196">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="24730-196">The assembly has full trust.</span></span> <span data-ttu-id="24730-197">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-197">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="24730-198">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-198">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="24730-199">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24730-199">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24730-200">次の例では、すべての書籍をタイトルで並べ替え、XML ファイルを変換します。</span><span class="sxs-lookup"><span data-stu-id="24730-200">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="24730-201">例では、入力として次のデータ ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-201">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-202">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="24730-202">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-203">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="24730-203">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="24730-204"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-204">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-205">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-205">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="24730-206"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-206">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-207"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-207">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-208"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-208">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-209">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-209">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-210"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-210"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-211">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-211">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-212">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="24730-212">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="24730-213">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="24730-213">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="24730-214">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-214">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="24730-215">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="24730-215">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="24730-216">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="24730-216">The assembly has full trust.</span></span> <span data-ttu-id="24730-217">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-217">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="24730-218">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-218">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="24730-219">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24730-219">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-220">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="24730-220">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-221">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="24730-221">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="24730-222">XSLT スタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-222">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="24730-223"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-223">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-224"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-224">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-225"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-225">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-226">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-226">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-227"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-227"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-228">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-228">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-229">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="24730-229">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="24730-230">使用して外部リソースが解決する<xref:System.Xml.XmlUrlResolver>をユーザーの資格情報なし。</span><span class="sxs-lookup"><span data-stu-id="24730-230">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="24730-231">スタイル シートは、認証が必要なネットワーク リソースに存在する場合を受け取るオーバー ロードを使用して、<xref:System.Xml.XmlResolver>引数の 1 つとしてを指定し、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-231">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="24730-232">現在位置からスタイル シートが読み込まれた、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="24730-232">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="24730-233">スタイル シートとして読み込まれているドキュメントの一部のみを使用するには、スタイル シートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="24730-233">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="24730-234">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XPath.XPathNavigator>はスタイル シートの先頭に配置されます (上、`xsl:style sheet`ノード)。</span><span class="sxs-lookup"><span data-stu-id="24730-234">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="24730-235">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="24730-235">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="24730-236">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="24730-236">The assembly has full trust.</span></span> <span data-ttu-id="24730-237">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-237">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="24730-238">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-238">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="24730-239">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24730-239">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-240">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="24730-240">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-241">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="24730-241">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="24730-242">読み込む XSLT スタイル シートを指定する URL。</span><span class="sxs-lookup"><span data-stu-id="24730-242">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-243">スタイル シート、および <c>xsl:import</c> 要素と <c>xsl:include</c> 要素で参照される任意のスタイル シートの読み込みに使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-243">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="24730-244">これが <see langword="null" /> の場合は、ユーザー資格情報を持たない既定の <see cref="T:System.Xml.XmlUrlResolver" /> がスタイル シートを開くときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-244">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="24730-245">既定の <see cref="T:System.Xml.XmlUrlResolver" /> は、スタイル シート内の外部リソースの解決には使用されないため、<c>xsl:import</c> 要素と <c>xsl:include</c> 要素は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-245">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="24730-246"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-246">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-247">URL で指定された XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-247">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-248"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-248">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-249"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-249">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-250">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-250">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-251"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-251"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-252">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-252">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-253">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="24730-253">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="24730-254">スタイル シートの URI は、アセンブリに適用する証拠の作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-254">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="24730-255">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-255">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="24730-256">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24730-256">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24730-257">次の例では、HTML ドキュメントに XML ドキュメントを変換します。</span><span class="sxs-lookup"><span data-stu-id="24730-257">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="24730-258">例では、読み込む XSLT スタイル シートが含まれている`xsl:include`別のスタイル シートを参照する要素。</span><span class="sxs-lookup"><span data-stu-id="24730-258">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="24730-259"><xref:System.Xml.XmlUrlResolver>に渡される、<xref:System.Xml.Xsl.XslTransform.Load%2A>インクルードされたスタイル シートのネットワーク リソースにアクセスするために必要な資格情報を設定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-259">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="24730-260">例では、入力として次のデータ ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-260">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-261">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="24730-261">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-262">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="24730-262">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="24730-263">XSLT スタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-263">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-264"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-264">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="24730-265">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-265">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="24730-266"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-266">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-267"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-267">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-268"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-268">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-269"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-269">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-270">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-270">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-271"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-271"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-272">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-272">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-273">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="24730-273">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="24730-274">現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を通じてそのすべての子。</span><span class="sxs-lookup"><span data-stu-id="24730-274">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="24730-275">これにより、スタイル シートとドキュメントの一部を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="24730-275">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="24730-276">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XmlReader>スタイル シートの末尾の後に次のノードに配置します。</span><span class="sxs-lookup"><span data-stu-id="24730-276">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="24730-277">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="24730-277">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="24730-278">かどうか、スタイル シートには、エンティティが含まれている、する必要がありますを指定する、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返します`true`)。</span><span class="sxs-lookup"><span data-stu-id="24730-278">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="24730-279">ここで、<xref:System.Xml.XmlValidatingReader>ことができます。</span><span class="sxs-lookup"><span data-stu-id="24730-279">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="24730-280">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="24730-280">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="24730-281">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="24730-281">The assembly has full trust.</span></span> <span data-ttu-id="24730-282">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-282">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="24730-283">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="24730-284">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24730-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-285">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="24730-285">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-286">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="24730-286">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="24730-287"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-287">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-288">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-288">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-289"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-289">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="24730-290">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-290">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="24730-291"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-291">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-292"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-292">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-293"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-293">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-294"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-294">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-295">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-295">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-296"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-296"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-297">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-297">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-298">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="24730-298">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="24730-299">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="24730-299">The assembly has full trust.</span></span> <span data-ttu-id="24730-300">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-300">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="24730-301">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-301">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="24730-302">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24730-302">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-303">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="24730-303">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-304">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="24730-304">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="24730-305">XSLT スタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-305">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-306"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-306">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="24730-307">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-307">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="24730-308"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-308">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-309"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-309">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-310"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-310">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-311"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-311">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-312">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-312">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-313"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-313"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-314">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-314">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-315">現在位置からスタイル シートが読み込まれた、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="24730-315">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="24730-316">読み込まれたドキュメントの一部として、スタイル シートを使用するには、スタイル シートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="24730-316">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="24730-317">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XPath.XPathNavigator>はスタイル シートの先頭に配置されます (上、`xsl:style sheet`ノード)。</span><span class="sxs-lookup"><span data-stu-id="24730-317">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="24730-318">スタイル シートが埋め込みスクリプトが含まれている場合、スクリプトは、アセンブリにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="24730-318">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="24730-319">アセンブリが完全な信頼を持ちます。</span><span class="sxs-lookup"><span data-stu-id="24730-319">The assembly has full trust.</span></span> <span data-ttu-id="24730-320">推奨される方法は、証拠を使用して提供する、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>します。</span><span class="sxs-lookup"><span data-stu-id="24730-320">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="24730-321">呼び出し元がない場合`UnmanagedCode`アクセス許可、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-321">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="24730-322">詳細については、「<xref:System.Security.Permissions.SecurityPermission>」および「<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24730-322">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-323">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="24730-323">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-324">スタイル シートに埋め込みスクリプトが含まれており、読み出し元に <see langword="UnmanagedCode" /> アクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="24730-324">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="24730-325">読み込むスタイル シートを格納している <see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-325">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-326"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-326">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="24730-327">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-327">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="24730-328"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-328">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="24730-329">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="24730-329">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="24730-330">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="24730-330">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="24730-331">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="24730-331">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="24730-332">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="24730-332">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="24730-333"><see cref="T:System.Xml.XmlReader" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-333">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="24730-334">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="24730-334">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-335"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-335">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-336"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-336">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-337">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-337">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-338"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-338"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-339">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-339">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-340">このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。</span><span class="sxs-lookup"><span data-stu-id="24730-340">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="24730-341">現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を通じてそのすべての子。</span><span class="sxs-lookup"><span data-stu-id="24730-341">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="24730-342">これにより、スタイル シートとドキュメントの一部を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="24730-342">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="24730-343">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XmlReader>スタイル シートの末尾の後に次のノードに配置します。</span><span class="sxs-lookup"><span data-stu-id="24730-343">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="24730-344">ドキュメントの末尾に到達すると、<xref:System.Xml.XmlReader> はファイルの末尾 (EOF) に位置します。</span><span class="sxs-lookup"><span data-stu-id="24730-344">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="24730-345">かどうか、スタイル シートには、エンティティが含まれている、する必要がありますを指定する、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>返します`true`)。</span><span class="sxs-lookup"><span data-stu-id="24730-345">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="24730-346">ここで、<xref:System.Xml.XmlValidatingReader>ことができます。</span><span class="sxs-lookup"><span data-stu-id="24730-346">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="24730-347">証拠を提供するさまざまな方法はあります。</span><span class="sxs-lookup"><span data-stu-id="24730-347">There are different ways to provide evidence.</span></span> <span data-ttu-id="24730-348">次の表では、一般的なユーザー シナリオを提供する証拠の種類について説明します。</span><span class="sxs-lookup"><span data-stu-id="24730-348">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="24730-349">シナリオ</span><span class="sxs-lookup"><span data-stu-id="24730-349">Scenario</span></span>|<span data-ttu-id="24730-350">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="24730-350">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="24730-351">XSLT スタイル シートは自己完結型または信頼できるコード ベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="24730-351">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="24730-352">アセンブリから証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-352">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="24730-353">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="24730-353">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="24730-354">ソースの出所がわかっている場合、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="24730-354">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="24730-355">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="24730-355">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="24730-356">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="24730-356">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="24730-357">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="24730-357">The origin of the source is not known.</span></span>|<span data-ttu-id="24730-358">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="24730-358">Set evidence to `null`.</span></span> <span data-ttu-id="24730-359">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="24730-359">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="24730-360">さらに、設定することも、`resolver`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="24730-360">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="24730-361">これにより`xsl:import`と`xsl:include`要素は処理されません。</span><span class="sxs-lookup"><span data-stu-id="24730-361">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="24730-362">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="24730-362">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="24730-363">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="24730-363">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="24730-364">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="24730-364">Request evidence from the caller.</span></span> <span data-ttu-id="24730-365">呼び出し元の API は、通常、証拠を提供する方法を提供する必要があります、<xref:System.Security.Policy.Evidence>クラス。</span><span class="sxs-lookup"><span data-stu-id="24730-365">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="24730-366">次の例では、XSLT 変換を実行する場所`xsltReader`は、<xref:System.Xml.XmlReader>スタイル シートを含んでいると`secureURL`作成に使用できる信頼された URL は、<xref:System.Security.Policy.Evidence>します。</span><span class="sxs-lookup"><span data-stu-id="24730-366">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="24730-367"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>メソッドの作成に使用<xref:System.Security.Policy.Evidence>これスタイル シートに適用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-367">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-368">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="24730-368">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-369">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="24730-369">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="24730-370">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="24730-370">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="24730-371">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="24730-371">for providing evidence.</span></span> <span data-ttu-id="24730-372">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="24730-372">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="24730-373"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-373">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-374">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または XSLT スタイル シートを含んでいる <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-374">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-375"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-375">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="24730-376">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-376">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="24730-377"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-377">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="24730-378">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="24730-378">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="24730-379">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="24730-379">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="24730-380">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="24730-380">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="24730-381">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="24730-381">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="24730-382"><see cref="T:System.Xml.XPath.IXPathNavigable" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-382">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="24730-383">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="24730-383">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-384"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-384">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-385"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-385">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-386">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-386">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-387"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-387"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-388">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-388">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="24730-389">証拠を提供するさまざまな方法はあります。</span><span class="sxs-lookup"><span data-stu-id="24730-389">There are different ways to provide evidence.</span></span> <span data-ttu-id="24730-390">次の表では、一般的なユーザー シナリオを提供する証拠の種類について説明します。</span><span class="sxs-lookup"><span data-stu-id="24730-390">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="24730-391">シナリオ</span><span class="sxs-lookup"><span data-stu-id="24730-391">Scenario</span></span>|<span data-ttu-id="24730-392">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="24730-392">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="24730-393">XSLT スタイル シートは自己完結型または信頼できるコード ベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="24730-393">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="24730-394">アセンブリから証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-394">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="24730-395">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="24730-395">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="24730-396">ソースの出所がわかっている場合、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="24730-396">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="24730-397">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="24730-397">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="24730-398">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="24730-398">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="24730-399">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="24730-399">The origin of the source is not known.</span></span>|<span data-ttu-id="24730-400">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="24730-400">Set evidence to `null`.</span></span> <span data-ttu-id="24730-401">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="24730-401">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="24730-402">さらに、設定することも、`resolver`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="24730-402">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="24730-403">これにより`xsl:import`と`xsl:include`要素は処理されません。</span><span class="sxs-lookup"><span data-stu-id="24730-403">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="24730-404">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="24730-404">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="24730-405">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="24730-405">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="24730-406">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="24730-406">Request evidence from the caller.</span></span> <span data-ttu-id="24730-407">呼び出し元の API は、通常、証拠を提供する方法を提供する必要があります、<xref:System.Security.Policy.Evidence>クラス。</span><span class="sxs-lookup"><span data-stu-id="24730-407">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-408">読み込まれたリソースが、有効なスタイル シートではありません。</span><span class="sxs-lookup"><span data-stu-id="24730-408">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-409">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="24730-409">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="24730-410">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="24730-410">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="24730-411">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="24730-411">for providing evidence.</span></span> <span data-ttu-id="24730-412">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="24730-412">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="24730-413">読み込むスタイル シートを格納している <see cref="T:System.Xml.XPath.XPathNavigator" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-413">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-414"><c>xsl:import</c> 要素および <c>xsl:include</c> 要素で参照される任意のスタイル シートを読み込むために使用される <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-414">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="24730-415">これが <see langword="null" /> の場合は、外部リソースが解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-415">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="24730-416"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-416">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="24730-417">XSLT スタイル シート内のスクリプト ブロックに対して生成されたアセンブリに設定された <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="24730-417">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="24730-418">これが <see langword="null" /> の場合、スクリプト ブロックは処理されません。また、XSLT の <c>document()</c> 関数はサポートされず、特権拡張機能オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="24730-418">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="24730-419">呼び出し元には、スクリプト アセンブリの証拠を提供するための <see langword="ControlEvidence" /> アクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="24730-419">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="24730-420">信頼度の低い呼び出し元は、このパラメーターを <see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="24730-420">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="24730-421"><see cref="T:System.Xml.XPath.XPathNavigator" /> に格納されている XSLT スタイル シートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="24730-421">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="24730-422">このメソッドを使用すると、証拠を指定することによって、スタイル シートのアクセス許可を制限できます。</span><span class="sxs-lookup"><span data-stu-id="24730-422">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-423"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-423">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-424"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-424">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-425">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-425">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-426"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-426"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-427">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-427">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-428">現在位置からスタイル シートが読み込まれた、<xref:System.Xml.XPath.XPathNavigator>します。</span><span class="sxs-lookup"><span data-stu-id="24730-428">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="24730-429">読み込まれたドキュメントの一部として、スタイル シートを使用するには、スタイル シートの先頭に対応するノードに移動します。</span><span class="sxs-lookup"><span data-stu-id="24730-429">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="24730-430">後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドから返される、<xref:System.Xml.XPath.XPathNavigator>はスタイル シートの先頭に配置されます (上、`xsl:style sheet`ノード)。</span><span class="sxs-lookup"><span data-stu-id="24730-430">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="24730-431">証拠を提供するさまざまな方法はあります。</span><span class="sxs-lookup"><span data-stu-id="24730-431">There are different ways to provide evidence.</span></span> <span data-ttu-id="24730-432">次の表では、一般的なユーザー シナリオを提供する証拠の種類について説明します。</span><span class="sxs-lookup"><span data-stu-id="24730-432">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="24730-433">シナリオ</span><span class="sxs-lookup"><span data-stu-id="24730-433">Scenario</span></span>|<span data-ttu-id="24730-434">提供する証拠の種類</span><span class="sxs-lookup"><span data-stu-id="24730-434">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="24730-435">XSLT スタイル シートは自己完結型または信頼できるコード ベースから取得します。</span><span class="sxs-lookup"><span data-stu-id="24730-435">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="24730-436">アセンブリから証拠を使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-436">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="24730-437">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="24730-437">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="24730-438">ソースの出所がわかっている場合、検証可能な URL があります。</span><span class="sxs-lookup"><span data-stu-id="24730-438">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="24730-439">URL を使用して証拠を作成します。</span><span class="sxs-lookup"><span data-stu-id="24730-439">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="24730-440">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="24730-440">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="24730-441">ソースの出所は不明。</span><span class="sxs-lookup"><span data-stu-id="24730-441">The origin of the source is not known.</span></span>|<span data-ttu-id="24730-442">証拠を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="24730-442">Set evidence to `null`.</span></span> <span data-ttu-id="24730-443">スクリプト ブロックは処理されません。XSLT `document()` 関数はサポートされません。特権を持つ拡張オブジェクトは許可されません。</span><span class="sxs-lookup"><span data-stu-id="24730-443">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="24730-444">さらに、設定することも、`resolver`パラメーター`null`します。</span><span class="sxs-lookup"><span data-stu-id="24730-444">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="24730-445">これにより`xsl:import`と`xsl:include`要素は処理されません。</span><span class="sxs-lookup"><span data-stu-id="24730-445">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="24730-446">XSLT スタイル シートが外部ソースにある場合。</span><span class="sxs-lookup"><span data-stu-id="24730-446">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="24730-447">ソースの出所が不明であるが、スクリプトのサポートが必要。</span><span class="sxs-lookup"><span data-stu-id="24730-447">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="24730-448">呼び出し元の証拠を要求します。</span><span class="sxs-lookup"><span data-stu-id="24730-448">Request evidence from the caller.</span></span> <span data-ttu-id="24730-449">呼び出し元の API は、通常、証拠を提供する方法を提供する必要があります、`Evidence`クラス。</span><span class="sxs-lookup"><span data-stu-id="24730-449">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="24730-450">次の例では、外部ソースからスタイル シートを使用して XSLT 変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24730-450">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="24730-451">信頼されていないソースからスタイル シートが含まれているため、`resolver`と`evidence`パラメーターに設定されて`null`します。</span><span class="sxs-lookup"><span data-stu-id="24730-451">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="24730-452">現在のノードは、有効なスタイル シートに準拠していません。</span><span class="sxs-lookup"><span data-stu-id="24730-452">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="24730-453">参照されているスタイル シートには、提供された証拠で許可されていない機能が必要です。</span><span class="sxs-lookup"><span data-stu-id="24730-453">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="24730-454">呼び出し元は証拠を提供しようとしましたが、<see langword="ControlEvidence" /> アクセス許可を持っていません。</span><span class="sxs-lookup"><span data-stu-id="24730-454">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="24730-455">証拠を提供します。</span><span class="sxs-lookup"><span data-stu-id="24730-455">for providing evidence.</span></span> <span data-ttu-id="24730-456">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="24730-456">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24730-457">読み込まれた XSLT スタイル シートを使用して、XML データを変換します。</span><span class="sxs-lookup"><span data-stu-id="24730-457">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-458"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-458">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-459"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-459">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-460">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-460">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="24730-461">変換するソース ドキュメントの URL。</span><span class="sxs-lookup"><span data-stu-id="24730-461">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="24730-462">出力ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="24730-462">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="24730-463">XML データを入力ファイルに変換し、その結果を出力ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-463">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-464"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-464">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-465"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-465">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-466">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-466">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-467"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-467"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-468">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-468">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24730-469">このメソッドは、.NET Framework version 1.1 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-469">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="24730-470">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="24730-470">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="24730-471">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="24730-471">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24730-472">次の例では、変換、`books.xml`ファイルを使用して、`output.xsl`スタイル シートに結果を出力し、`books.html`ファイル。</span><span class="sxs-lookup"><span data-stu-id="24730-472">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="24730-473">このサンプルでは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-473">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-474">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-474">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="24730-475">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="24730-475">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-476"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-476">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-477">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-477">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-478">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-478">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="24730-479">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-479">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="24730-480">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="24730-480">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-481"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-481">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-482"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-482">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-483">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-483">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-484"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-484"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-485">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-485">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24730-486">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="24730-486">This method is now obsolete.</span></span> <span data-ttu-id="24730-487">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="24730-487">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="24730-488">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="24730-488">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="24730-489">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-489">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-490">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlReader> (、`xsl:output`要素は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="24730-490">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="24730-491">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="24730-491">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="24730-492">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="24730-492">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="24730-493">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="24730-493">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="24730-494">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="24730-494">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-495">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-495">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="24730-496">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24730-496">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="24730-497">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-497">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-498">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-498">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="24730-499">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="24730-499">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-500">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="24730-500">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-501">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-501">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="24730-502">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-502">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="24730-503">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="24730-503">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-504"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-504">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-505"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-505">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-506">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-506">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-507"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-507"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-508">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-508">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-509">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-509">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-510">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-510">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="24730-511">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="24730-511">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-512">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="24730-512">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="24730-513">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="24730-513">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="24730-514"><xref:System.Xml.XmlReader>読み取り専用の出力を提供、`xsl:output`要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="24730-514">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="24730-515">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="24730-515">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="24730-516">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="24730-516">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24730-517">このメソッドは、互換性のために残されています。</span><span class="sxs-lookup"><span data-stu-id="24730-517">This method is obsolete.</span></span> <span data-ttu-id="24730-518">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティは、XSLT document() 関数が解決する方法を決定します。</span><span class="sxs-lookup"><span data-stu-id="24730-518">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="24730-519">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="24730-519">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-520">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-520">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-521">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-521">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-522">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-522">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-523">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-523">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="24730-524">変換するソース ドキュメントの URL。</span><span class="sxs-lookup"><span data-stu-id="24730-524">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="24730-525">出力ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="24730-525">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-526">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-526">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="24730-527">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-527">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="24730-528"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-528">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-529">XML データを入力ファイルに変換し、その結果を出力ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-529">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-530"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-530">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-531"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-531">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-532">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-532">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-533"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-533"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-534">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-534">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24730-535">次の例では、XSLT 変換を実行し、ファイルに出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-535">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="24730-536"><xref:System.Xml.XmlUrlResolver>資格情報を使用する、既定値は外部のリソースを解決します。</span><span class="sxs-lookup"><span data-stu-id="24730-536">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="24730-537">詳細については、「<xref:System.Net.CredentialCache.DefaultCredentials%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="24730-537">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-538"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-538">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-539">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-539">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-540">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-540">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-541">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="24730-541">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="24730-542">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-542">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-543"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-543">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-544"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-544">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-545">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-545">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-546"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-546"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-547">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-547">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24730-548">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="24730-548">This method is now obsolete.</span></span> <span data-ttu-id="24730-549">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="24730-549">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="24730-550">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="24730-550">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="24730-551">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-551">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="24730-552">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="24730-552">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="24730-553">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="24730-553">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-554">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-554">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="24730-555">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24730-555">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="24730-556">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-556">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-557">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-557">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-558">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-558">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-559">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-559">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-560">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-560">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="24730-561">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="24730-561">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-562"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-562">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-563">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-563">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-564">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-564">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-565">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="24730-565">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="24730-566">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-566">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-567"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-567">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-568"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-568">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-569">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-569">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-570"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-570"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-571">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-571">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24730-572">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="24730-572">This method is now obsolete.</span></span> <span data-ttu-id="24730-573">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="24730-573">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="24730-574">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="24730-574">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="24730-575">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-575">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="24730-576">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="24730-576">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="24730-577">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24730-577">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="24730-578">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="24730-578">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="24730-579">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="24730-579">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-580">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>切り出し、および渡すを単にノードを含む<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-580">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="24730-581">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24730-581">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="24730-582">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-582">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-583">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-583">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-584">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-584">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-585">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-585">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-586">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-586">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="24730-587">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="24730-587">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-588"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-588">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-589">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-589">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-590">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-590">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-591">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-591">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="24730-592">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-592">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="24730-593"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-593">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-594">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-594">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="24730-595">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="24730-595">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-596"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-596">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-597"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-597">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-598">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-598">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-599"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-599"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-600">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-600">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-601">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-601">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-602">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlReader> (、`xsl:output`要素は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="24730-602">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="24730-603">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="24730-603">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="24730-604">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="24730-604">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="24730-605">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="24730-605">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="24730-606">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="24730-606">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-607">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>切り出し、および渡すを単にノードを含む<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-607">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="24730-608">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24730-608">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="24730-609">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-609">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="24730-610">次の例は、XML ドキュメントを変換し、結果を出力する`XmlReader`します。</span><span class="sxs-lookup"><span data-stu-id="24730-610">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="24730-611"><xref:System.Xml.XmlUrlResolver> XSLT を処理するために必要な資格情報を使用`document()`関数。</span><span class="sxs-lookup"><span data-stu-id="24730-611">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-612">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-612">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="24730-613">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="24730-613">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-614"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-614">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-615">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-615">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-616">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-616">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-617">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="24730-617">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="24730-618">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-618">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-619"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-619">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-620"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-620">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-621">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-621">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-622"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-622"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-623">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-623">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24730-624">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="24730-624">This method is now obsolete.</span></span> <span data-ttu-id="24730-625">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="24730-625">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="24730-626">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="24730-626">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="24730-627">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-627">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-628">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="24730-628">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="24730-629">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="24730-629">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="24730-630">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="24730-630">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="24730-631">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="24730-631">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-632">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-632">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="24730-633">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24730-633">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="24730-634">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-634">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-635">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-635">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-636">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-636">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-637">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-637">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-638">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-638">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="24730-639">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="24730-639">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-640">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="24730-640">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-641">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-641">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-642">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="24730-642">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="24730-643">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-643">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-644"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-644">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-645"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-645">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-646">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-646">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-647"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-647"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-648">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-648">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-649">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-649">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-650">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-650">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="24730-651">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="24730-651">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-652">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="24730-652">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="24730-653">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="24730-653">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="24730-654">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24730-654">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24730-655">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="24730-655">This method is now obsolete.</span></span> <span data-ttu-id="24730-656">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="24730-656">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="24730-657">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="24730-657">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-658">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-658">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-659">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-659">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-660">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-660">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-661">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-661">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-662">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="24730-662">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-663">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-663">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-664">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="24730-664">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="24730-665">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-665">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-666"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-666">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-667"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-667">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-668">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-668">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-669"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-669"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-670">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-670">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-671">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-671">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-672">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-672">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="24730-673">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="24730-673">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-674">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="24730-674">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="24730-675">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="24730-675">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="24730-676">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="24730-676">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="24730-677">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24730-677">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24730-678">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="24730-678">This method is now obsolete.</span></span> <span data-ttu-id="24730-679">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="24730-679">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="24730-680">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="24730-680">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-681">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-681">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-682">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-682">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-683">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-683">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-684">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-684">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-685">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="24730-685">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-686">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-686">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-687">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-687">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="24730-688">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-688">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="24730-689"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-689">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-690">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlReader" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-690">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="24730-691">変換結果を格納している <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="24730-691">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-692"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-692">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-693"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-693">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-694">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-694">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-695"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-695"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-696">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-696">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-697">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-697">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-698">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-698">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="24730-699">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="24730-699">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-700">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="24730-700">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="24730-701">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="24730-701">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="24730-702"><xref:System.Xml.XmlReader>読み取り専用の出力を提供、`xsl:output`要素は無視されます。</span><span class="sxs-lookup"><span data-stu-id="24730-702">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="24730-703">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="24730-703">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="24730-704">このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。</span><span class="sxs-lookup"><span data-stu-id="24730-704">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-705">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-705">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-706">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-706">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-707">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-707">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-708">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-708">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-709">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="24730-709">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-710">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-710">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-711">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="24730-711">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="24730-712">指定した args を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-712">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-713"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-713">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-714"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-714">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-715">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-715">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-716"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-716"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-717">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-717">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-718">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-718">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-719">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-719">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="24730-720">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="24730-720">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-721">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="24730-721">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="24730-722">つまり、変換プロセスの前に現在あるノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="24730-722">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="24730-723">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="24730-723">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="24730-724">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="24730-724">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24730-725">このメソッドは廃止されました。</span><span class="sxs-lookup"><span data-stu-id="24730-725">This method is now obsolete.</span></span> <span data-ttu-id="24730-726">設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決されます。</span><span class="sxs-lookup"><span data-stu-id="24730-726">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="24730-727">推奨される方法は、使用する、<xref:System.Xml.Xsl.XslTransform.Transform%2A>を受け取るメソッドを<xref:System.Xml.XmlResolver>としてその引数の 1 つのオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="24730-727">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-728">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-728">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-729">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-729">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-730">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-730">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-731">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-731">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-732"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-732">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-733">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-733">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-734">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-734">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-735">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="24730-735">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-736">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-736">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="24730-737">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-737">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="24730-738"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-738">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-739">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-739">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-740"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-740">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-741"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-741">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-742">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-742">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-743"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-743"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-744">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-744">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-745">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-745">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="24730-746">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="24730-746">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="24730-747">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="24730-747">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-748">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-748">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="24730-749">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24730-749">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="24730-750">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-750">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="24730-751">次の例では、ASP.NET ページ内の変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24730-751">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-752">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-752">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-753">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-753">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-754">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-754">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-755">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-755">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="24730-756">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="24730-756">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-757"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-757">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-758">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-758">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-759">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-759">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-760">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="24730-760">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-761">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-761">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="24730-762">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-762">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="24730-763"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-763">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-764">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-764">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-765"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-765">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-766"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-766">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-767">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-767">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-768"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-768"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-769">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-769">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-770">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-770">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="24730-771">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="24730-771">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="24730-772">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24730-772">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="24730-773">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="24730-773">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="24730-774">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="24730-774">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-775">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-775">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="24730-776">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24730-776">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="24730-777">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-777">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="24730-778">次の例では、XML ファイルを変換し、HTML 文字列を出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-778">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="24730-779"><xref:System.IO.StringReader>と<xref:System.IO.StringWriter>クラスは、文字列を読み書きするために使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-779">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="24730-780">この例は、`books.xml` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-780">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-781">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-781">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-782">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-782">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-783">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-783">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-784">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-784">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="24730-785">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="24730-785">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-786"><see cref="T:System.Xml.XPath.IXPathNavigable" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="24730-786">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="24730-787">.NET Framework では、これは <see cref="T:System.Xml.XmlNode" /> (通常は <see cref="T:System.Xml.XmlDocument" />)、または変換されるデータを含む <see cref="T:System.Xml.XPath.XPathDocument" /> になります。</span><span class="sxs-lookup"><span data-stu-id="24730-787">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-788">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-788">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-789">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="24730-789">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-790">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-790">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="24730-791">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-791">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="24730-792"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-792">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-793">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.IXPathNavigable" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-793">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-794"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-794">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-795"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-795">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-796">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-796">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-797"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-797"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-798">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-798">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-799">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-799">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-800">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="24730-800">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="24730-801">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="24730-801">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="24730-802">変換はドキュメント全体に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="24730-802">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="24730-803">つまり、ドキュメント ルート ノード以外のノードを指定しても、変換処理では、読み込んだドキュメントのすべてのノードがアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="24730-803">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-804">ノード フラグメントを変換を作成する必要があります、<xref:System.Xml.XmlDocument>ノードだけを含んでいるフラグメントし、渡す<xref:System.Xml.XmlDocument>を<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="24730-804">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="24730-805">次の例では、ノード フラグメントの変換を実行します。</span><span class="sxs-lookup"><span data-stu-id="24730-805">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="24730-806">この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールに次のコードを出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-806">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="24730-807">次の例では、HTML ドキュメントに XML ドキュメントを変換します。</span><span class="sxs-lookup"><span data-stu-id="24730-807">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="24730-808">テーブルで、ISBN、タイトル、および各書籍の価格を表示します。</span><span class="sxs-lookup"><span data-stu-id="24730-808">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="24730-809">このサンプルは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-809">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-810">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-810">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-811">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-811">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-812">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-812">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-813">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-813">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="24730-814">XslTransform からの出力</span><span class="sxs-lookup"><span data-stu-id="24730-814">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-815">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="24730-815">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-816">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-816">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-817">出力先のストリーム。</span><span class="sxs-lookup"><span data-stu-id="24730-817">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-818">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-818">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="24730-819">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-819">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="24730-820"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-820">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-821">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.Stream" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-821">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-822"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-822">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-823"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-823">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-824">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-824">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-825"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-825"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-826">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-826">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-827">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-827">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-828">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-828">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="24730-829">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="24730-829">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-830">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="24730-830">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="24730-831">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="24730-831">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="24730-832">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24730-832">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24730-833">次の例に、customer テーブルを読み込みます、 <xref:System.Xml.XmlDataDocument> HTML テーブルに顧客データをプルする XSLT 変換を実行するとします。</span><span class="sxs-lookup"><span data-stu-id="24730-833">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="24730-834">Microsoft SQL Server 2000 の Northwind データベースを使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-834">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="24730-835">この例は、`customers.xsl` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-835">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-836">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-836">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-837">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-837">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-838">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-838">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-839">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-839">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-840">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="24730-840">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-841">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-841">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-842">出力先の <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="24730-842">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-843">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-843">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="24730-844">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-844">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="24730-845"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-845">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-846">指定した <paramref name="args" /> を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.IO.TextWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-846">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-847"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-847">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-848"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-848">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-849">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-849">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-850"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-850"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-851">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-851">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-852">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-852">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-853">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-853">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="24730-854">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="24730-854">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-855">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="24730-855">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="24730-856">つまり、変換処理の前は、使用すると、ノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="24730-856">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="24730-857">エンコーディング属性を`xsl:output`出力する際に、要素がサポートされていません、<xref:System.IO.TextWriter>します。</span><span class="sxs-lookup"><span data-stu-id="24730-857">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="24730-858">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)を詳しく`xsl:output`属性がサポートされています。</span><span class="sxs-lookup"><span data-stu-id="24730-858">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-859">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-859">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-860">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-860">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-861">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-861">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-862">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-862">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="24730-863">変換されるデータを含む <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="24730-863">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="24730-864">変換に対する入力として使用される名前空間修飾引数を含む <see cref="T:System.Xml.Xsl.XsltArgumentList" />。</span><span class="sxs-lookup"><span data-stu-id="24730-864">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="24730-865">出力先の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="24730-865">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="24730-866">XSLT の <c>document()</c> 関数を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-866">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="24730-867">これが <see langword="null" /> の場合、<c>document()</c> 関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-867">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="24730-868"><see cref="T:System.Xml.XmlResolver" /> メソッドが完了した後、<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> がキャッシュされていません。</span><span class="sxs-lookup"><span data-stu-id="24730-868">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="24730-869">指定した args を使用して <see cref="T:System.Xml.XPath.XPathNavigator" /> の XML データを変換し、その結果を <see cref="T:System.Xml.XmlWriter" /> に出力します。</span><span class="sxs-lookup"><span data-stu-id="24730-869">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-870"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-870">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-871"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-871">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-872">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-872">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-873"><xref:System.Xml.Xsl.XslTransform> XSLT 1.0 構文をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="24730-873"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="24730-874">XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`します。</span><span class="sxs-lookup"><span data-stu-id="24730-874">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="24730-875">`args`と一致する、`xsl:param`スタイル シートで定義された要素。</span><span class="sxs-lookup"><span data-stu-id="24730-875">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="24730-876">選択された変換は、ドキュメント全体に適用されます。</span><span class="sxs-lookup"><span data-stu-id="24730-876">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="24730-877">つまり、現在のノードがドキュメントのルート ノード以外のノード ツリーに設定されている場合このしても、変換プロセスから読み込まれたドキュメントのすべてのノードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="24730-877">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="24730-878">変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります。</span><span class="sxs-lookup"><span data-stu-id="24730-878">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="24730-879">つまり、変換プロセスの前に現在あるノードが後に、現在のノードをそのまま、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="24730-879">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="24730-880">`xsl:output`出力する際に、要素がサポートされていません、 <xref:System.Xml.XmlWriter> (`xsl:output`は無視されます)。</span><span class="sxs-lookup"><span data-stu-id="24730-880">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="24730-881">参照してください[XslTransform からの出力](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)詳細についてはします。</span><span class="sxs-lookup"><span data-stu-id="24730-881">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="24730-882">次の例では、読み込みを XSLT 変換を実行する前に XML ドキュメントを編集します。</span><span class="sxs-lookup"><span data-stu-id="24730-882">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="24730-883">XSLT 変換の処理中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="24730-883">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="24730-884">メモ:これは、旧バージョンからの動作の変更です。</span><span class="sxs-lookup"><span data-stu-id="24730-884">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="24730-885">Microsoft .NET Framework Version 1.1 以前のバージョンを使用している場合は、<see cref="T:System.Xml.Xsl.XsltException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24730-885">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="24730-886">XslTransform クラスの随意動作の実装</span><span class="sxs-lookup"><span data-stu-id="24730-886">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24730-887"><see cref="T:System.Xml.XmlResolver" /> メソッドの呼び出し時に外部リソースの解決に使用する <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="24730-887">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="24730-888">変換中に使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="24730-888">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="24730-889">場合設定<see langword="null" />、XSLT <c>document()</c>関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-889">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="24730-890"><xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-890">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="24730-891"><xref:System.Xml.Xsl.XslCompiledTransform>クラスは新しい XSLT プロセッサです。</span><span class="sxs-lookup"><span data-stu-id="24730-891">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="24730-892">詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)と[XslTransform クラスからの移行](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)します。</span><span class="sxs-lookup"><span data-stu-id="24730-892">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="24730-893">.NET Framework version 1.1 では、アプリケーションの信頼レベルは、既定の動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="24730-893">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="24730-894">`Fully trusted code:` 既定の<xref:System.Xml.XmlUrlResolver>解決に使用される資格情報のユーザーがいない、`document()`関数。</span><span class="sxs-lookup"><span data-stu-id="24730-894">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="24730-895">外部リソースへのアクセスを認証が必要な場合は、このプロパティを使用して、指定する、<xref:System.Xml.XmlResolver>のために必要な資格情報を使用します。</span><span class="sxs-lookup"><span data-stu-id="24730-895">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="24730-896">`Semi-trusted code:` 設定されて`null`、つまり、`document()`関数は解決されません。</span><span class="sxs-lookup"><span data-stu-id="24730-896">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="24730-897">完全な信頼を指定する必要があるため、 <xref:System.Xml.XmlResolver>、このプロパティも設定できません。</span><span class="sxs-lookup"><span data-stu-id="24730-897">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="24730-898">この競合回避モジュールが使用されるときに、XSLT`document()`関数が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="24730-898">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="24730-899">解決するのには使用されません`xsl:import`と`xsl:include`スタイル シートで参照される要素。</span><span class="sxs-lookup"><span data-stu-id="24730-899">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="24730-900">指定する、<xref:System.Xml.XmlResolver>解決に使用する`xsl:import`と`xsl:include`、スタイル シートで参照されている要素を使用して、<xref:System.Xml.Xsl.XslTransform.Load%2A>オーバー ロードを受け取り、<xref:System.Xml.XmlResolver>引数の 1 つとして。</span><span class="sxs-lookup"><span data-stu-id="24730-900">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="24730-901">このプロパティは、.NET Framework version 1.1 で廃止されています。</span><span class="sxs-lookup"><span data-stu-id="24730-901">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="24730-902">指定する、<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドはことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="24730-902">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="24730-903">ここで、<xref:System.Xml.XmlResolver>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが完了するとします。</span><span class="sxs-lookup"><span data-stu-id="24730-903">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>