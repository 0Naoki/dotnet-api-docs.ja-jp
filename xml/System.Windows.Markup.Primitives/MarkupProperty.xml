<Type Name="MarkupProperty" FullName="System.Windows.Markup.Primitives.MarkupProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cc84508111a2d2946b82d9bf0f0cdc390e0599e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659086" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupProperty extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.Primitives.MarkupProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupProperty abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d5875-101">プロパティおよびその値へのアクセスをカプセル化するマークアップへの書き込み中に使用されるプロパティを記述する抽象クラス。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5875-101">Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-102">プロパティは、文字列または項目のリストとして表されます。</span><span class="sxs-lookup"><span data-stu-id="d5875-102">A property is either represented as a string or a list of items.</span></span>  
  
 <span data-ttu-id="d5875-103">プロパティを文字列として表現できる場合は<xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A>は`false`します。</span><span class="sxs-lookup"><span data-stu-id="d5875-103">If the property can be represented as a string, <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `false`.</span></span>  
  
 <span data-ttu-id="d5875-104">場合<xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A>は`true`プロパティが項目の一覧を示します。</span><span class="sxs-lookup"><span data-stu-id="d5875-104">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `true`, the property is a list of items.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-105">派生クラスでオーバーライドされると、この <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> に関連付けられている属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-105">When overridden in a derived class, gets the attributes associated with this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-106">属性のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-106">The collection of attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-107">派生クラスでオーバーライドされると、プロパティが依存関係プロパティとして実装されている場合は、マークアップ プロパティの <see cref="T:System.Windows.DependencyProperty" /> 識別子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-107">When overridden in a derived class, gets the <see cref="T:System.Windows.DependencyProperty" /> identifier for the markup property if the property is implemented as a dependency property</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-108">依存関係プロパティの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-108">The dependency property identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-109">既定の動作を返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="d5875-109">The default behavior returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public virtual bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAttached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-110">派生クラスでオーバーライドされると、この <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> が添付 <see cref="T:System.Windows.DependencyProperty" /> であるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-110">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> is an attached <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-111">プロパティが添付 <see cref="T:System.Windows.DependencyProperty" /> である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-111">
              <see langword="true" /> if the property is an attached <see cref="T:System.Windows.DependencyProperty" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-112">既定の動作では、`false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="d5875-112">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="d5875-113">ときに<xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A>は`true`、<xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A>は`null`と<xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A>できます`null`にする必要はありませんが、します。</span><span class="sxs-lookup"><span data-stu-id="d5875-113">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> is not `null` and <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> can be `null`, but is not required to be.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComposite">
      <MemberSignature Language="C#" Value="public virtual bool IsComposite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsComposite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsComposite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsComposite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-114">派生クラスでオーバーライドされると、この <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> が複合プロパティであるかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-114">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> is a composite property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-115">このプロパティが複合プロパティである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-115">
              <see langword="true" /> is this property is a composite property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-116">既定の動作では、`false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="d5875-116">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="d5875-117">場合<xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A>は`false`、プロパティを文字列として表すことができ、<xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A>と<xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A>を使用する有効なです。</span><span class="sxs-lookup"><span data-stu-id="d5875-117">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `false`, the property can be represented as a string and <xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A> are valid to use.</span></span>  
  
 <span data-ttu-id="d5875-118">場合<xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A>は`true`、プロパティが 1 つまたは複数の項目と<xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="d5875-118">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `true`, the property is one or more items and <xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A> is valid to use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructorArgument">
      <MemberSignature Language="C#" Value="public virtual bool IsConstructorArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructorArgument" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsConstructorArgument As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructorArgument { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-119">派生クラスでオーバーライドされると、この <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> がコンストラクター引数を表すかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-119">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents a constructor argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-120">このプロパティがコンストラクター引数を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-120">
              <see langword="true" /> if this property represents a constructor argument; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-121">既定の動作に戻り値は`false`します。</span><span class="sxs-lookup"><span data-stu-id="d5875-121">The default behavior is return `false`.</span></span>  
  
 <span data-ttu-id="d5875-122">ときに<xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A>は`true`、<xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A>と<xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A>が両方とも`null`です。</span><span class="sxs-lookup"><span data-stu-id="d5875-122">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="d5875-123">のみを使用して XAML<xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A>のインスタンスのコンス トラクターの引数を表すため<xref:System.Windows.Markup.MarkupExtension>です。</span><span class="sxs-lookup"><span data-stu-id="d5875-123">XAML only uses <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> for representing the constructor arguments of instances of <xref:System.Windows.Markup.MarkupExtension>.</span></span> <span data-ttu-id="d5875-124">参照してください[マークアップ拡張機能と WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)です。</span><span class="sxs-lookup"><span data-stu-id="d5875-124">See [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContent">
      <MemberSignature Language="C#" Value="public virtual bool IsContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-125">派生クラスでオーバーライドされると、この <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> がコレクションの直接の内容を表すかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-125">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents direct content of a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-126">プロパティが直接の内容を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-126">
              <see langword="true" /> if the property represents direct content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-127">既定の動作では、`false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="d5875-127">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="d5875-128">ときに<xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A>は`true`、<xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A>と<xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A>が両方とも`null`です。</span><span class="sxs-lookup"><span data-stu-id="d5875-128">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="d5875-129">決定するときに、辞書が含まれますかどうかこの<xref:System.Windows.Markup.Primitives.MarkupProperty>コンテンツに指示を表します。</span><span class="sxs-lookup"><span data-stu-id="d5875-129">Dictionaries are included when determining whether this <xref:System.Windows.Markup.Primitives.MarkupProperty> represents direct content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public virtual bool IsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-130">派生クラスでオーバーライドされると、項目をディクショナリに格納するために <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> で使用されるキーをこの <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> が表すかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-130">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents the key used by the <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> to store the item in a dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-131">このプロパティがキーを表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-131">
              <see langword="true" /> if this property represents a key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-132">既定の動作では、`false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="d5875-132">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="d5875-133">ときに<xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A>は`true`、<xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A>と<xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A>は`null`します。</span><span class="sxs-lookup"><span data-stu-id="d5875-133">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are `null`.</span></span>  
  
 <span data-ttu-id="d5875-134">XAML として識別されたプロパティを使用して、`x:Key`属性。</span><span class="sxs-lookup"><span data-stu-id="d5875-134">XAML will use the identified property as an `x:Key` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueAsString">
      <MemberSignature Language="C#" Value="public virtual bool IsValueAsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueAsString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValueAsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValueAsString { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-135">派生クラスでオーバーライドされると、プロパティのインスタンスを作成するために、またはコンストラクターを使用する必要がある場合に、型コンバーターに渡されるテキストをこの <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> が表すかどうかを判断します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-135">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-136">この <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> が文字列を表す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-136">
              <see langword="true" />, if this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents a string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-137">既定の動作を返すには `false.`</span><span class="sxs-lookup"><span data-stu-id="d5875-137">The default behavior is to return `false.`</span></span>  
  
 <span data-ttu-id="d5875-138">ときに<xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A>は`true`、<xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A>と<xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A>が両方とも`null`です。</span><span class="sxs-lookup"><span data-stu-id="d5875-138">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="d5875-139">プロパティがによって提供される場合<xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A>と<xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A>は`true`型は、専用のプロパティになります。</span><span class="sxs-lookup"><span data-stu-id="d5875-139">If the property is provided through <xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> is `true`, it will be the only property the type will provide.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupObject&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Markup.Primitives.MarkupObject&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Items" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Items As IEnumerable(Of MarkupObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupObject ^&gt; ^ Items { System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupObject ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupObject&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-140">派生クラスでオーバーライドされると、このプロパティの値を構成する項目を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-140">When overridden in a derived class, gets the items that make up the value of this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-141">このプロパティの値を構成する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-141">The items that make up the value of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-142">プロパティの列挙体は、1 つの項目が返されます。</span><span class="sxs-lookup"><span data-stu-id="d5875-142">If the property is not an enumeration, only one item will be returned.</span></span>  
  
 <span data-ttu-id="d5875-143">プロパティが列挙体、または列挙可能な場合、すべての項目が返されます。</span><span class="sxs-lookup"><span data-stu-id="d5875-143">If the property is an enumeration, or enumerable, all the items will be returned.</span></span>  
  
 <span data-ttu-id="d5875-144">少なくとも 1 つの項目が常に返されたため<xref:System.Windows.Markup.Primitives.MarkupObject>は作成されません、<xref:System.Windows.Markup.Primitives.MarkupProperty>の項目のないプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d5875-144">At least one item is always returned, because <xref:System.Windows.Markup.Primitives.MarkupObject> will not create a <xref:System.Windows.Markup.Primitives.MarkupProperty> for properties with no items.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-145">派生クラスでオーバーライドされると、診断およびエラー報告に使用される名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-145">When overridden in a derived class, gets a name that is used for diagnostics and error reporting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-146">識別子のプロパティ名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-146">The identifier property name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-147">シリアライザーでは、この値は使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="d5875-147">A serializer should not use this value.</span></span> <span data-ttu-id="d5875-148">これを使用する必要があります、<xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A>や<xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A>代わりにします。</span><span class="sxs-lookup"><span data-stu-id="d5875-148">It should use the <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and/or <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-149">派生クラスでオーバーライドされると、マークアップ プロパティの <see cref="T:System.ComponentModel.PropertyDescriptor" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-149">When overridden in a derived class, gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> for the markup property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-150">プロパティ記述子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-150">The property descriptor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-151">既定の動作を返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="d5875-151">The default behavior returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-152">派生クラスでオーバーライドされると、プロパティの CLR 型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-152">When overridden in a derived class, gets the CLR type of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-153">CLR 型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-153">The CLR type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringValue">
      <MemberSignature Language="C#" Value="public abstract string StringValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StringValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StringValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-154">派生クラスでオーバーライドされると、この <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> の文字列値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-154">When overridden in a derived class, gets the string value of this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-155">文字列値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-155">The string value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TypeReferences As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-156">派生クラスでオーバーライドされると、この <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> が値を文字列としてシリアル化するときに参照する型のセットを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-156">When overridden in a derived class, gets the set of types that this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> will reference when it serializes its value as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-157">型のセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-157">The set of types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5875-158"><xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A> 除外のシリアライザーは、これらの型への参照の文字列形式からに変換するための十分な情報を持つようにするためのシリアライザーを使用できます。</span><span class="sxs-lookup"><span data-stu-id="d5875-158"><xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A> enables a serializer to ensure that the de-serializer has enough information to convert references to these type from the string representations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5875-159">派生クラスでオーバーライドされた場合、<see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> の現在の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-159">When overridden in a derived class, gets the current value of this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5875-160">現在の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5875-160">The current value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>