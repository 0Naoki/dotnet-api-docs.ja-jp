<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IsolatedStorageFileStream.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58eb05ccb12109231f5298b1737311d1a391259c9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8eb05ccb12109231f5298b1737311d1a391259c9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>Exposes a file within isolated storage.</source>
          <target state="translated">分離ストレージ内のファイルを公開します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>Use this class to read, write and create files in isolated storage.</source>
          <target state="translated">読み取り、書き込み、および分離ストレージでファイルを作成するには、このクラスを使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>Since this class extends <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>, you can use an instance of <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> in most situations where a <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph> might otherwise be used, such as to construct a <ph id="ph4">&lt;xref:System.IO.StreamReader&gt;</ph> or <ph id="ph5">&lt;xref:System.IO.StreamWriter&gt;</ph>.</source>
          <target state="translated">このクラスを拡張するため<ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph>のインスタンスを使用することができます<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>ほとんどの状況で場所、<ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph>される可能性がありますそれ以外の場合、構築する場合など、<ph id="ph4">&lt;xref:System.IO.StreamReader&gt;</ph>または<ph id="ph5">&lt;xref:System.IO.StreamWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">この型は、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">型の直接 dispose を呼び出す、<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>メソッドで、 <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph>ブロックします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">直接ことのない破棄する場合など、言語コンストラクトを使用して<ph id="ph1">`using`</ph>(C# の場合) または<ph id="ph2">`Using`</ph>(Visual Basic で)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>インターフェイスに関するトピック。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>Isolated storage is not available for <ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> apps.</source>
          <target state="translated">分離ストレージは <ph id="ph1">[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]</ph> アプリでは使用できません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>Instead, use the application data classes in the <ph id="ph1">`Windows.Storage`</ph> namespaces included in the <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> API to store local data and files.</source>
          <target state="translated">代わりに、<ph id="ph1">`Windows.Storage`</ph> API に含まれる <ph id="ph2">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> 名前空間内のアプリケーション データ クラスを使用して、ローカル データとローカル ファイルを格納します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>For more information, see <bpt id="p1">[</bpt>Application data<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=229175)</ept> in the Windows Dev Center.</source>
          <target state="translated">詳細については、Windows デベロッパー センターの <bpt id="p1">[</bpt>アプリケーション データ<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=229175)</ept> に関する説明を参照してください。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>The following console application demonstrates how you can use <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> to write data to an Isolated Storage file.</source>
          <target state="translated">次のコンソール アプリケーションでは、使用する方法を示しています<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph>と<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>分離ストレージ ファイルにデータを書き込めません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>The user is requested to log in.</source>
          <target state="translated">ユーザーがログインしようとしています。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>If the user is a new user, a News URL and a Sports URL are recorded as personal preferences in Isolated Storage.</source>
          <target state="translated">ユーザーが、新しいユーザーの場合は、ニュース URL とスポーツ URL が分離ストレージ内の個人設定として記録されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>If the user is a returning user, the user's current preferences are displayed.</source>
          <target state="translated">ユーザーが返されるユーザーの場合は、ユーザーの現在の設定が表示されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>The code examples used throughout this namespace are presented in the context of this sample application.</source>
          <target state="translated">このサンプル アプリケーションのコンテキストでは、この名前空間全体で使用するコード例が表示されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>You can use the <bpt id="p1">[</bpt>Storeadm.exe (Isolated Storage Tool)<ept id="p1">](~/docs/framework/tools/storeadm-exe-isolated-storage-tool.md)</ept> utility to list and remove the Isolated Storage files that are created with this console application.</source>
          <target state="translated">使用することができます、 <bpt id="p1">[</bpt>Storeadm.exe (分離ストレージ ツール)<ept id="p1">](~/docs/framework/tools/storeadm-exe-isolated-storage-tool.md)</ept>ユーティリティを一覧表示し、このコンソール アプリケーションで作成される分離ストレージ ファイルを削除します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>The only way to open an <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> is by using one of its constructors.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> を開く唯一の方法は、そのコンストラクターの 1 つを使用することです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The relative path of the file within isolated storage.</source>
          <target state="translated">分離ストレージ内でのファイルの相対パス。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>Initializes a new instance of an <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object giving access to the file designated by <ph id="ph2">&lt;paramref name="path" /&gt;</ph> in the specified <ph id="ph3">&lt;paramref name="mode" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph3">&lt;paramref name="mode" /&gt;</ph> で、<ph id="ph2">&lt;paramref name="path" /&gt;</ph> によって指定されたファイルへのアクセスを与える <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.</source>
          <target state="translated">現在実行中のアセンブリの id が実行されているアプリケーション ドメインのでは使用される分離ストアが対象です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>This store will remain open only for the lifetime of the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object.</source>
          <target state="translated">このストアを開いたままの有効期間にのみ、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>To specify a different isolated storage scope, or to allow the store to remain open (so multiple <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> objects can be opened from it), use the form of the constructor that accepts an <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> object.</source>
          <target state="translated">別の分離ストレージのスコープを指定するか、開かれたままにストアを許可する (ので、複数<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>そこからオブジェクトを開くことができます) を受け取るコンス トラクターのフォームを使用して、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The <ph id="ph1">`mode`</ph> parameter indicates whether a new file should be created, an existing one used, and so on.</source>
          <target state="translated"><ph id="ph1">`mode`</ph>パラメーターかどうか、新しいファイルを作成する必要があります、これを使用すると、既存のものとなどを示します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.</source>
          <target state="translated">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字解釈されないことし、例外をスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is badly formed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> の形式が正しくありません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>The directory in <ph id="ph1">&lt;paramref name="path" /&gt;</ph> does not exist.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> 内にディレクトリが存在しません。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>No file was found and the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="mode" /&gt;</ph> に <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph> が設定されていますが、ファイルが見つかりません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)">
          <source>for isolated storage access</source>
          <target state="translated">分離ストレージのアクセス</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The relative path of the file within isolated storage.</source>
          <target state="translated">分離ストレージ内でのファイルの相対パス。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> class giving access to the file designated by <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, in the specified <ph id="ph3">&lt;paramref name="mode" /&gt;</ph>, with the kind of <ph id="ph4">&lt;paramref name="access" /&gt;</ph> requested.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="mode" /&gt;</ph> に指定したモードで、<ph id="ph2">&lt;paramref name="path" /&gt;</ph> で指定したファイルへの、<ph id="ph4">&lt;paramref name="access" /&gt;</ph> に指定した種類のアクセスを提供する、<ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.</source>
          <target state="translated">現在実行中のアセンブリの id が実行されているアプリケーション ドメインのでは使用される分離ストアが対象です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>This store will remain open only for the lifetime of the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object.</source>
          <target state="translated">このストアを開いたままの有効期間にのみ、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>To specify a different isolated storage scope, or to allow the store to remain open (so multiple <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> objects can be opened from it), use the form of the constructor that accepts an <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> object.</source>
          <target state="translated">別の分離ストレージのスコープを指定するか、開かれたままにストアを許可する (ので、複数<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>そこからオブジェクトを開くことができます) を受け取るコンス トラクターのフォームを使用して、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The <ph id="ph1">`mode`</ph> parameter indicates whether a new file should be created or an existing one used.</source>
          <target state="translated"><ph id="ph1">`mode`</ph>パラメーターは、新しいファイルを作成するかどうかまたは既存の使用を示します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The <ph id="ph1">`access`</ph> parameter includes read-only, read/write, and write-only.</source>
          <target state="translated"><ph id="ph1">`access`</ph>パラメーターは、読み取り専用、読み取り/書き込み、および書き込み専用です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</source>
          <target state="translated">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is badly formed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> の形式が正しくありません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>No file was found and the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</source>
          <target state="translated">ファイルが見つかりません。<ph id="ph1">&lt;paramref name="mode" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
          <source>for isolated storage access</source>
          <target state="translated">分離ストレージのアクセス</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The relative path of the file within isolated storage.</source>
          <target state="translated">分離ストレージ内でのファイルの相対パス。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> in which to open the <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> を開くために使用する <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> class giving access to the file designated by <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, in the specified <ph id="ph3">&lt;paramref name="mode" /&gt;</ph>, and in the context of the <ph id="ph4">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> specified by <ph id="ph5">&lt;paramref name="isf" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="mode" /&gt;</ph> で指定したモード、<ph id="ph5">&lt;paramref name="isf" /&gt;</ph> で指定した <ph id="ph4">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> のコンテキストを使用して、<ph id="ph2">&lt;paramref name="path" /&gt;</ph> で指定したファイルへのアクセスを提供する <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">`mode`</ph> parameter indicates whether a new file should be created, an existing one used, and so on.</source>
          <target state="translated"><ph id="ph1">`mode`</ph>パラメーターかどうか、新しいファイルを作成する必要があります、これを使用すると、既存のものとなどを示します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</source>
          <target state="translated">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The following code example demonstrates the use of this constructor.</source>
          <target state="translated">次のコード例では、このコンス トラクターの使用を示します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>For the complete context of this example, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> overview.</source>
          <target state="translated">この例の完全なコンテキストで次を参照してください。、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>の概要です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is badly formed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> の形式が正しくありません。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>No file was found and the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</source>
          <target state="translated">ファイルが見つかりません。<ph id="ph1">&lt;paramref name="mode" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source><ph id="ph1">&lt;paramref name="isf" /&gt;</ph> does not have a quota.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="isf" /&gt;</ph> にクォータがありません。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>for isolated storage access</source>
          <target state="translated">分離ストレージのアクセス</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The relative path of the file within isolated storage.</source>
          <target state="translated">分離ストレージ内でのファイルの相対パス。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.FileShare" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileShare" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> class giving access to the file designated by <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, in the specified <ph id="ph3">&lt;paramref name="mode" /&gt;</ph>, with the specified file <ph id="ph4">&lt;paramref name="access" /&gt;</ph>, using the file sharing mode specified by <ph id="ph5">&lt;paramref name="share" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="mode" /&gt;</ph> で指定したモード、<ph id="ph5">&lt;paramref name="share" /&gt;</ph> で指定した共有モードを使用して、<ph id="ph2">&lt;paramref name="path" /&gt;</ph> で指定したファイルへの、<ph id="ph4">&lt;paramref name="access" /&gt;</ph> で指定した種類のアクセスを提供する <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.</source>
          <target state="translated">現在実行中のアセンブリの id が実行されているアプリケーション ドメインのでは使用される分離ストアが対象です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>This store will remain open only for the lifetime of the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object.</source>
          <target state="translated">このストアを開いたままの有効期間にのみ、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>To specify a different isolated storage scope, or to allow the store to remain open (so multiple <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> objects can be opened from it), use the form of the constructor that accepts an <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> object.</source>
          <target state="translated">別の分離ストレージのスコープを指定するか、開かれたままにストアを許可する (ので、複数<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>そこからオブジェクトを開くことができます) を受け取るコンス トラクターのフォームを使用して、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.</source>
          <target state="translated">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字解釈されないことし、例外をスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The following code example demonstrates the use of this constructor.</source>
          <target state="translated">次のコード例では、このコンス トラクターの使用を示します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>For the complete context of this example, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> overview.</source>
          <target state="translated">この例の完全なコンテキストで次を参照してください。、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>の概要です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is badly formed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> の形式が正しくありません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>No file was found and the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</source>
          <target state="translated">ファイルが見つかりません。<ph id="ph1">&lt;paramref name="mode" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
          <source>for isolated storage access</source>
          <target state="translated">分離ストレージのアクセス</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The relative path of the file within isolated storage.</source>
          <target state="translated">分離ストレージ内でのファイルの相対パス。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> in which to open the <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> を開くために使用する <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> class giving access to the file designated by <ph id="ph2">&lt;paramref name="path" /&gt;</ph> in the specified <ph id="ph3">&lt;paramref name="mode" /&gt;</ph>, with the specified file <ph id="ph4">&lt;paramref name="access" /&gt;</ph>, and in the context of the <ph id="ph5">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> specified by <ph id="ph6">&lt;paramref name="isf" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="mode" /&gt;</ph> で指定したモード、<ph id="ph6">&lt;paramref name="isf" /&gt;</ph> で指定した <ph id="ph5">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> のコンテキストを使用して、<ph id="ph2">&lt;paramref name="path" /&gt;</ph> で指定したファイルへの、<ph id="ph4">&lt;paramref name="access" /&gt;</ph> で指定した種類のアクセスを提供する <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">`mode`</ph> parameter indicates whether a new file should be created or an existing one used.</source>
          <target state="translated"><ph id="ph1">`mode`</ph>パラメーターは、新しいファイルを作成するかどうかまたは既存の使用を示します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">`access`</ph> parameter includes read-only, read/write, and write-only.</source>
          <target state="translated"><ph id="ph1">`access`</ph>パラメーターは、読み取り専用、読み取り/書き込み、および書き込み専用です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</source>
          <target state="translated">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The following code example demonstrates the use of this constructor.</source>
          <target state="translated">次のコード例では、このコンス トラクターの使用を示します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>For the complete context of this example, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> overview.</source>
          <target state="translated">この例の完全なコンテキストで次を参照してください。、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>の概要です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is badly formed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> の形式が正しくありません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The isolated store is closed.</source>
          <target state="translated">分離ストアは閉じています。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>No file was found and the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</source>
          <target state="translated">ファイルが見つかりません。<ph id="ph1">&lt;paramref name="mode" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph> に設定されています。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source><ph id="ph1">&lt;paramref name="isf" /&gt;</ph> does not have a quota.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="isf" /&gt;</ph> にクォータがありません。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>for isolated storage access</source>
          <target state="translated">分離ストレージのアクセス</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The relative path of the file within isolated storage.</source>
          <target state="translated">分離ストレージ内でのファイルの相対パス。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.FileShare" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileShare" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> buffer size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> のバッファー サイズ。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> class giving access to the file designated by <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, in the specified <ph id="ph3">&lt;paramref name="mode" /&gt;</ph>, with the specified file <ph id="ph4">&lt;paramref name="access" /&gt;</ph>, using the file sharing mode specified by <ph id="ph5">&lt;paramref name="share" /&gt;</ph>, with the <ph id="ph6">&lt;paramref name="buffersize" /&gt;</ph> specified.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="mode" /&gt;</ph> で指定したモード、<ph id="ph5">&lt;paramref name="share" /&gt;</ph> で指定したファイル共有モード、<ph id="ph6">&lt;paramref name="buffersize" /&gt;</ph> で指定したバッファー サイズを使用して、<ph id="ph2">&lt;paramref name="path" /&gt;</ph> で指定したファイルへの、<ph id="ph4">&lt;paramref name="access" /&gt;</ph> で指定した種類のアクセスを提供する <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.</source>
          <target state="translated">現在実行中のアセンブリの id が実行されているアプリケーション ドメインのでは使用される分離ストアが対象です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>This store will remain open only for the lifetime of the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object.</source>
          <target state="translated">このストアを開いたままの有効期間にのみ、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>To specify a different isolated storage scope, or to allow the store to remain open (so multiple <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> objects can be opened from it), use the form of the constructor that accepts an <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph> object.</source>
          <target state="translated">別の分離ストレージのスコープを指定するか、開かれたままにストアを許可する (ので、複数<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>そこからオブジェクトを開くことができます) を受け取るコンス トラクターのフォームを使用して、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFile&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The <ph id="ph1">`mode`</ph> parameter indicates whether a new file should be created or an existing one used.</source>
          <target state="translated"><ph id="ph1">`mode`</ph>パラメーターは、新しいファイルを作成するかどうかまたは既存の使用を示します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The <ph id="ph1">`access`</ph> parameter includes read-only, read/write, and write-only.</source>
          <target state="translated"><ph id="ph1">`access`</ph>パラメーターは、読み取り専用、読み取り/書き込み、および書き込み専用です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</source>
          <target state="translated">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is badly formed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> の形式が正しくありません。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>No file was found and the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</source>
          <target state="translated">ファイルが見つかりません。<ph id="ph1">&lt;paramref name="mode" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
          <source>for isolated storage access</source>
          <target state="translated">分離ストレージのアクセス</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The relative path of the file within isolated storage.</source>
          <target state="translated">分離ストレージ内でのファイルの相対パス。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.FileShare" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileShare" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> in which to open the <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> を開くために使用する <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> class giving access to the file designated by <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, in the specified <ph id="ph3">&lt;paramref name="mode" /&gt;</ph>, with the specified file <ph id="ph4">&lt;paramref name="access" /&gt;</ph>, using the file sharing mode specified by <ph id="ph5">&lt;paramref name="share" /&gt;</ph>, and in the context of the <ph id="ph6">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> specified by <ph id="ph7">&lt;paramref name="isf" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph3">&lt;paramref name="mode" /&gt;</ph> で指定したモード、<ph id="ph5">&lt;paramref name="share" /&gt;</ph> で指定したファイル共有モード、<ph id="ph7">&lt;paramref name="isf" /&gt;</ph> で指定した <ph id="ph6">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> のコンテキストを使用して、<ph id="ph2">&lt;paramref name="path" /&gt;</ph> で指定したファイルへの、<ph id="ph4">&lt;paramref name="access" /&gt;</ph> で指定した種類のアクセスを提供する <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">`mode`</ph> parameter indicates whether a new file should be created or an existing one used.</source>
          <target state="translated"><ph id="ph1">`mode`</ph>パラメーターは、新しいファイルを作成するかどうかまたは既存の使用を示します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">`access`</ph> parameter includes read-only, read/write, and write-only.</source>
          <target state="translated"><ph id="ph1">`access`</ph>パラメーターは、読み取り専用、読み取り/書き込み、および書き込み専用です。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</source>
          <target state="translated">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The following code example demonstrates the use of this constructor.</source>
          <target state="translated">次のコード例では、このコンス トラクターの使用を示します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>For the complete context of this example, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> overview.</source>
          <target state="translated">この例の完全なコンテキストで次を参照してください。、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>の概要です。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is badly formed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> の形式が正しくありません。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>No file was found and the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</source>
          <target state="translated">ファイルが見つかりません。<ph id="ph1">&lt;paramref name="mode" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source><ph id="ph1">&lt;paramref name="isf" /&gt;</ph> does not have a quota.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="isf" /&gt;</ph> にクォータがありません。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>for isolated storage access</source>
          <target state="translated">分離ストレージのアクセス</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The relative path of the file within isolated storage.</source>
          <target state="translated">分離ストレージ内でのファイルの相対パス。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileMode" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.IO.FileShare" /&gt;</ph> values</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileShare" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> buffer size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> のバッファー サイズ。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> in which to open the <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> を開くために使用する <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> class giving access to the file designated by <ph id="ph2">&lt;paramref name="path" /&gt;</ph>, in the specified <ph id="ph3">&lt;paramref name="mode" /&gt;</ph>, with the specified file <ph id="ph4">&lt;paramref name="access" /&gt;</ph>, using the file sharing mode specified by <ph id="ph5">&lt;paramref name="share" /&gt;</ph>, with the <ph id="ph6">&lt;paramref name="buffersize" /&gt;</ph> specified, and in the context of the <ph id="ph7">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> specified by <ph id="ph8">&lt;paramref name="isf" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> で指定したモード、<ph id="ph2">&lt;paramref name="path" /&gt;</ph> で指定したファイル共有モード、<ph id="ph3">&lt;paramref name="mode" /&gt;</ph> で指定したバッファー サイズ、<ph id="ph4">&lt;paramref name="access" /&gt;</ph> で指定した <ph id="ph5">&lt;paramref name="share" /&gt;</ph> のコンテキストを使用して、<ph id="ph6">&lt;paramref name="buffersize" /&gt;</ph> で指定したファイルへの、<ph id="ph7">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /&gt;</ph> で指定した種類のアクセスを提供する <ph id="ph8">&lt;paramref name="isf" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">`mode`</ph> parameter indicates whether a new file should be created or an existing one used.</source>
          <target state="translated"><ph id="ph1">`mode`</ph>パラメーターは、新しいファイルを作成するかどうかまたは既存の使用を示します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">`access`</ph> parameter includes read-only, read/write, and write-only.</source>
          <target state="translated"><ph id="ph1">`access`</ph>パラメーターは、読み取り専用、読み取り/書き込み、および書き込み専用です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</source>
          <target state="translated">文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The following code example demonstrates the use of this constructor.</source>
          <target state="translated">次のコード例では、このコンス トラクターの使用を示します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>For the complete context of this example, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> overview.</source>
          <target state="translated">この例の完全なコンテキストで次を参照してください。、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>の概要です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is badly formed.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> の形式が正しくありません。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>The <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>No file was found and the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> is set to <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph>.</source>
          <target state="translated">ファイルが見つかりません。<ph id="ph1">&lt;paramref name="mode" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.IO.FileMode.Open" /&gt;</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source><ph id="ph1">&lt;paramref name="isf" /&gt;</ph> does not have a quota.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="isf" /&gt;</ph> にクォータがありません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)">
          <source>for isolated storage access</source>
          <target state="translated">分離ストレージのアクセス</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to read data into.</source>
          <target state="translated">データを読み取るバッファー。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin reading.</source>
          <target state="translated">読み取りの開始位置を示す <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">読み取る最大バイト数。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method to call when the asynchronous read operation is completed.</source>
          <target state="translated">非同期の読み取り操作が完了したときに呼び出すメソッド。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This parameter is optional.</source>
          <target state="translated">このパラメーターは省略できます。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The status of the asynchronous read.</source>
          <target state="translated">非同期の読み取りの状態。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read.</source>
          <target state="translated">非同期の読み取りを開始します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that represents the asynchronous read, which is possibly still pending.</source>
          <target state="translated">非同期の読み取りを表す <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> オブジェクト。まだ保留状態の場合もあります。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> must be passed to this stream's <ph id="ph2">&lt;see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)" /&gt;</ph> method to determine how many bytes were read.</source>
          <target state="translated">読み取ったバイト数を確認するには、<ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> をこのストリームの <ph id="ph2">&lt;see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)" /&gt;</ph> メソッドに渡す必要があります。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This can be done either by the same code that called <ph id="ph1">&lt;see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> or in a callback passed to <ph id="ph2">&lt;see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">この操作は、<ph id="ph1">&lt;see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> を呼び出した同じコードを使用するか、または <ph id="ph2">&lt;see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> に渡されたコールバックで行うことができます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</source>
          <target state="translated">ストリームの現在の位置は、I/O 操作の完了時ではなく、非同期の読み取りや書き込みを発行したときに更新されます。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph> with this <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> to find out how many bytes were read.</source>
          <target state="translated">呼び出す必要があります<ph id="ph1">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph>この<ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>に読み取られたバイト数を確認します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An asynchronous read was attempted past the end of the file.</source>
          <target state="translated">非同期の読み取りがファイルの終わりを超えて試行されました。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to write data to.</source>
          <target state="translated">データを書き込むバッファー。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing.</source>
          <target state="translated">書き込みの開始位置を示す <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">書き込む最大バイト数。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method to call when the asynchronous write operation is completed.</source>
          <target state="translated">非同期の書き込み操作が完了したときに呼び出すメソッド。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This parameter is optional.</source>
          <target state="translated">このパラメーターは省略できます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The status of the asynchronous write.</source>
          <target state="translated">非同期の書き込みの状態。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write.</source>
          <target state="translated">非同期の書き込みを開始します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents the asynchronous write, which is possibly still pending.</source>
          <target state="translated">非同期の書き込みを表す <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。まだ保留状態の場合もあります。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> must be passed to this stream's <ph id="ph2">&lt;see cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" /&gt;</ph> method to ensure that the write is complete, then frees resources appropriately.</source>
          <target state="translated">書き込みが完了したことを確認してから、リソースを適切に解放するには、このストリームの <ph id="ph2">&lt;see cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" /&gt;</ph> メソッドに <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> を渡す必要があります。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>This can be done either by the same code that called <ph id="ph1">&lt;see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> or in a callback passed to <ph id="ph2">&lt;see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">この操作は、<ph id="ph1">&lt;see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> を呼び出した同じコードを使用するか、または <ph id="ph2">&lt;see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> に渡されたコールバックで行うことができます。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object is writable, writing at the end of the stream expands the stream.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>は、オブジェクトが書き込み可能なストリームの末尾に書き込み、ストリームが拡張されます。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</source>
          <target state="translated">ストリームの現在の位置は、I/O 操作の完了時ではなく、非同期の読み取りや書き込みを発行したときに更新されます。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.EndWrite%2A&gt;</ph> with the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> object that this method returns to find out how many bytes were written.</source>
          <target state="translated">呼び出す必要があります<ph id="ph1">&lt;xref:System.IO.Stream.EndWrite%2A&gt;</ph>で、<ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>を書き込まれたバイト数を調べるにはこのメソッドを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An asynchronous write was attempted past the end of the file.</source>
          <target state="translated">非同期の書き込みがファイルの終わりを超えて試行されました。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead">
          <source>Gets a Boolean value indicating whether the file can be read.</source>
          <target state="translated">ファイルを読み取ることができるかどうかを示すブール値を取得します。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object can be read; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトを読み取ることができる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead">
          <source>Use this property to determine whether the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object can be read.</source>
          <target state="translated">このプロパティを使用しているかどうか、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクトを読み取ることができます。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead">
          <source>The following code example demonstrates how you could use the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead%2A&gt;</ph> property, as a check to see whether a stream can be read before calling the <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A&gt;</ph> methods.</source>
          <target state="translated">次のコード例では、使用する方法を示しています、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead%2A&gt;</ph>に呼び出す前に、ストリームを読み取ることができるかどうかを調べると、プロパティ、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A&gt;</ph>または<ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead">
          <source>For the complete context of this example, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> overview.</source>
          <target state="translated">この例の完全なコンテキストで次を参照してください。、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>の概要です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek">
          <source>Gets a Boolean value indicating whether seek operations are supported.</source>
          <target state="translated">シーク操作をサポートしているかどうかを示す ブール値を取得します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object supports seek operations; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトがシーク操作をサポートしている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek">
          <source>Use this property to determine whether the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object supports seek operations.</source>
          <target state="translated">このプロパティを使用しているかどうか、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクトでサポートされるシーク操作します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite">
          <source>Gets a Boolean value indicating whether you can write to the file.</source>
          <target state="translated">ファイルに書き込むことができるかどうかを示す ブール値を取得します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object can be written; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトに書き込むことができる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite">
          <source>Use this property to determine whether the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object can be written.</source>
          <target state="translated">このプロパティを使用しているかどうか、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクトを書き込むことができます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite">
          <source>The following code example demonstrates how you could use the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite%2A&gt;</ph> property, as a check to see whether a stream can be read before calling the <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A&gt;</ph> methods.</source>
          <target state="translated">次のコード例では、使用する方法を示しています、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite%2A&gt;</ph>に呼び出す前に、ストリームを読み取ることができるかどうかを調べると、プロパティ、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write%2A&gt;</ph>または<ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite">
          <source>For the complete context of this example, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> overview.</source>
          <target state="translated">この例の完全なコンテキストで次を参照してください。、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>の概要です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose%2A&gt;</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to true.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> プロテクト呼び出します<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose%2A&gt;</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターが true に設定します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose%2A&gt;</ph> with <ph id="ph3">`disposing`</ph> set to false.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose%2A&gt;</ph>で<ph id="ph3">`disposing`</ph>を false に設定します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)" /&gt;</ph> をオーバーライドする場合は、以前に <ph id="ph2">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see cref="M:System.IDisposable.Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)">
          <source>The pending asynchronous request.</source>
          <target state="translated">保留中の非同期の要求。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)">
          <source>Ends a pending asynchronous read request.</source>
          <target state="translated">非同期読み込み要求の保留状態を終了します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)">
          <source>The number of bytes read from the stream, between zero and the number of requested bytes.</source>
          <target state="translated">ストリームから読み取ったバイト数 (0 ～要求したバイト数の間の数値)。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)">
          <source>Streams will only return zero at the end of the stream.</source>
          <target state="translated">ストリームは、末尾に達した場合にだけ 0 を返します。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)">
          <source>Otherwise, they will block until at least one byte is available.</source>
          <target state="translated">それ以外の場合、ストリームは少なくとも 1 バイトが読み取られるまでブロックします。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A&gt;</ph> must be called exactly once on every <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> object from <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A&gt;</ph>, and calling <ph id="ph4">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A&gt;</ph> is the only way to know how many bytes were read from the <ph id="ph5">&lt;xref:System.IO.Stream&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A&gt;</ph> 1 回だけ呼び出す必要がありますすべて<ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>オブジェクトから<ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A&gt;</ph>、および呼び出し<ph id="ph4">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A&gt;</ph>から読み取られたバイト数を知る唯一の方法、<ph id="ph5">&lt;xref:System.IO.Stream&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A&gt;</ph> will block until the I/O operation has completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A&gt;</ph> I/O 操作が完了するまでブロックされます。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)">
          <source>The pending asynchronous I/O request to end.</source>
          <target state="translated">保留中の非同期 I/O 終了要求。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)">
          <source>Ends an asynchronous write.</source>
          <target state="translated">非同期の書き込みを終了します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A&gt;</ph> must be called exactly once on every <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> from <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A&gt;</ph> 1 回だけ呼び出す必要がありますすべて<ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>から<ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)">
          <source><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A&gt;</ph> will block until the I/O operation has completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A&gt;</ph> I/O 操作が完了するまでブロックされます。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> パラメーターが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="T:System.IO.IsolatedStorage.IsolatedStorageFileStream">
          <source>Clears buffers for this stream and causes any buffered data to be written to the file.</source>
          <target state="translated">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにします。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush">
          <source>Clears buffers for this stream and causes any buffered data to be written to the file.</source>
          <target state="translated">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにします。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush">
          <source>Because a buffer can be used for either reading or writing, but not both simultaneously, <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%2A&gt;</ph> performs two functions.</source>
          <target state="translated">バッファーの読み取りまたは書き込み、両方は必要ありませんが、同時に使用できるため<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%2A&gt;</ph>は 2 つの関数を実行します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush">
          <source>First, any data previously written to the buffer is copied to the file and the buffer is cleared.</source>
          <target state="translated">最初に、以前にバッファーに書き込まれたすべてのデータがファイルにコピーされ、バッファーをクリアします。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush">
          <source>Second, if <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A&gt;</ph> is <ph id="ph2">`true`</ph> and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer.</source>
          <target state="translated">場合は、2 番目<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A&gt;</ph>は<ph id="ph2">`true`</ph>とデータが以前の読み取りにバッファーをファイルからコピー、ファイル内の現在位置が、バッファー内の未読のバイト数だけデクリメントします。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush">
          <source>The buffer is then cleared.</source>
          <target state="translated">バッファーをクリアし、します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29&gt;</ph> method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29&gt;</ph>バッファリングされたすべてのデータの中間ファイル バッファーのことを確認するときのメソッドのオーバー ロードが記述されたディスクにします。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to flush all intermediate file buffers; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">すべての中間ファイル バッファーをフラッシュする場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)">
          <source>Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.</source>
          <target state="translated">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにし、すべての中間ファイル バッファーもクリアします。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)">
          <source>Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</source>
          <target state="translated">バッファリングされたすべてのデータの中間ファイル バッファーのことを確認する場合は、このオーバー ロードが書き込まれます使用してディスクにします。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle">
          <source>Gets the file handle for the file that the current <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object encapsulates.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトによってカプセル化されるファイルのファイル ハンドルを取得します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle">
          <source>Accessing this property is not permitted on an <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object, and throws an <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトではこのプロパティへのアクセスは許可されておらず、<ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageException" /&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle">
          <source>The file handle for the file that the current <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object encapsulates.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle">
          <source>For more information, see <ph id="ph1">&lt;xref:System.IO.FileStream.Handle%2A&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.IO.FileStream.Handle%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle%2A&gt;</ph> property.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle" /&gt;</ph> property always generates this exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle" /&gt;</ph> プロパティは常にこの例外を生成します。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle">
          <source>for the ability to access unmanaged code.</source>
          <target state="translated">アンマネージ コードへのアクセスに必要なアクセス許可。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>.</source>
          <target state="translated">関連する列挙値:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>セキュリティ アクション:<ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼が必要です。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync">
          <source>Gets a Boolean value indicating whether the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object was opened asynchronously or synchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトが非同期的に開かれたか、同期的に開かれたかを示すブール値を取得します。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object supports asynchronous access; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトが非同期アクセスをサポートしている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync">
          <source>Asynchronous <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> objects cannot be created, unlike <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>.</source>
          <target state="translated">非同期<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクトを作成することはできませんとは異なり、<ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync">
          <source>However, the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A&gt;</ph> methods are supported on synchronous instances, with some performance penalties.</source>
          <target state="translated">ただし、 <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A&gt;</ph>メソッドは、いくつかのパフォーマンスの低下との同期のインスタンスでサポートされています。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync">
          <source>The following code example demonstrates how you can use the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync%2A&gt;</ph> property to verify that an <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> is synchronous.</source>
          <target state="translated">次のコード例では、使用する方法を示しています、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync%2A&gt;</ph>ことを確認するプロパティ、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>は同期型です。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync">
          <source>For the complete context of this example, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> overview.</source>
          <target state="translated">この例の完全なコンテキストで次を参照してください。、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>の概要です。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length">
          <source>Gets the length of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトの長さを取得します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length">
          <source>The length of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object in bytes.</source>
          <target state="translated">バイト単位の <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトの長さ。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length">
          <source><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length%2A&gt;</ph> represents the number of bytes currently in the file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length%2A&gt;</ph> 現在、ファイル内のバイト数を表します。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length">
          <source>It is not affected by isolated storage quota.</source>
          <target state="translated">分離ストレージのクォータで影響はありません。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length%2A&gt;</ph> property.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)">
          <source>The starting position of the range to lock.</source>
          <target state="translated">ロックする範囲の開始位置。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)">
          <source>The value of this parameter must be equal to or greater than 0 (zero).</source>
          <target state="translated">このパラメーターの値は、0 (ゼロ) 以上にする必要があります。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)">
          <source>The number of bytes to lock.</source>
          <target state="translated">ロックするバイト数。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)">
          <source>Prevents other processes from reading from or writing to the stream.</source>
          <target state="translated">ストリームに対する他のプロセスの読み取りまたは書き込みを禁止します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)">
          <source>Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.</source>
          <target state="translated">ファイル ストリームの範囲をロックすると、ファイル ストリームの範囲にロックのプロセスの排他アクセスのスレッドが与えられます。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="position" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="position" /&gt;</ph> または <ph id="ph2">&lt;paramref name="length" /&gt;</ph> が負の値です。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)">
          <source>The file is closed.</source>
          <target state="translated">ファイルは閉じられています。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)">
          <source>The process cannot access the file because another process has locked a portion of the file.</source>
          <target state="translated">別のプロセスがファイルの一部をロックしているため、プロセスはこのファイルにアクセスできません。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position">
          <source>Gets or sets the current position of the current <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトの現在位置を取得または設定します。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position">
          <source>The current position of this <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトの現在位置。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position">
          <source>Setting this property works when the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">このプロパティを設定する場合に有効、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position%2A&gt;</ph> property to write data to a file.</source>
          <target state="translated">次のコード例では、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position%2A&gt;</ph>プロパティにデータをファイルに書き込めません。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position">
          <source>The position cannot be set to a negative number.</source>
          <target state="translated">位置は、負の値に設定することはできません。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer to read.</source>
          <target state="translated">読み取るバッファー。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The offset in the buffer at which to begin writing.</source>
          <target state="translated">書き込みの開始位置を示すバッファー内のオフセット。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">読み取る最大バイト数。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Copies bytes from the current buffered <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object to an array.</source>
          <target state="translated">現在のバッファー内の <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトから配列にバイトをコピーします。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into the <ph id="ph1">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> に読み取る合計バイト数。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream is reached.</source>
          <target state="translated">要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`buffer`</ph> parameter can be an instance of the <ph id="ph2">&lt;xref:System.Buffer&gt;</ph> class, or an array of one of the following types: <ph id="ph3">&lt;xref:System.Byte&gt;</ph>, <ph id="ph4">&lt;xref:System.SByte&gt;</ph>, <ph id="ph5">&lt;xref:System.Char&gt;</ph>, <ph id="ph6">&lt;xref:System.Int16&gt;</ph>, <ph id="ph7">&lt;xref:System.Int32&gt;</ph>, <ph id="ph8">&lt;xref:System.Int64&gt;</ph>, <ph id="ph9">&lt;xref:System.UInt16&gt;</ph>, <ph id="ph10">&lt;xref:System.UInt32&gt;</ph>, <ph id="ph11">&lt;xref:System.UInt64&gt;</ph>, <ph id="ph12">&lt;xref:System.Single&gt;</ph>, or <ph id="ph13">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`buffer`</ph>パラメーターのインスタンスであることができます、<ph id="ph2">&lt;xref:System.Buffer&gt;</ph>クラス、または、次の種類の 1 つの配列。 <ph id="ph3">&lt;xref:System.Byte&gt;</ph>、 <ph id="ph4">&lt;xref:System.SByte&gt;</ph>、 <ph id="ph5">&lt;xref:System.Char&gt;</ph>、 <ph id="ph6">&lt;xref:System.Int16&gt;</ph>、 <ph id="ph7">&lt;xref:System.Int32&gt;</ph>、 <ph id="ph8">&lt;xref:System.Int64&gt;</ph>、 <ph id="ph9">&lt;xref:System.UInt16&gt;</ph>、 <ph id="ph10">&lt;xref:System.UInt32&gt;</ph>、 <ph id="ph11">&lt;xref:System.UInt64&gt;</ph>、 <ph id="ph12">&lt;xref:System.Single&gt;</ph>、または<ph id="ph13">&lt;xref:System.Double&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the byte in buffer at which to begin writing (index in the buffer), and the <ph id="ph2">`count`</ph> parameter gives the maximum number of bytes that will be read from this stream.</source>
          <target state="translated"><ph id="ph1">`offset`</ph>パラメーターは、書き込み (バッファー内のインデックス) を開始する位置を示すバッファー内のバイトのオフセットと<ph id="ph2">`count`</ph>パラメーターは現在のストリームから読み込まれるバイトの最大数を指定します。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The returned value is the actual number of bytes read, or zero if the end of the stream is reached.</source>
          <target state="translated">ストリームの末尾に達した場合は、実際の数バイトを読み取り、または 0 を返されるです。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</source>
          <target state="translated">読み取り操作が成功した場合、ストリームの現在の位置は読み取られたバイト数で進められます。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If an exception occurs, the current position of the stream is unchanged.</source>
          <target state="translated">例外が発生する場合は、ストリームの現在の位置は変更されません。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A&gt;</ph> method treats the <ph id="ph2">`buffer`</ph> parameter as a block of bytes, regardless of its actual type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A&gt;</ph>メソッド扱い、<ph id="ph2">`buffer`</ph>パラメーターを実際の型に関係なく、バイトのブロックとして。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Likewise, the <ph id="ph1">`offset`</ph> and <ph id="ph2">`count`</ph> parameters are always specified in bytes.</source>
          <target state="translated">同様に、<ph id="ph1">`offset`</ph>と<ph id="ph2">`count`</ph>パラメーターは、常に、バイト単位で指定します。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>For <ph id="ph1">`buffer`</ph> parameters other than byte arrays, this means that an element index must be multiplied by the element size in bytes to form a correct value for <ph id="ph2">`offset`</ph> or <ph id="ph3">`count`</ph>.</source>
          <target state="translated"><ph id="ph1">`buffer`</ph>バイト配列以外のパラメーター、つまり、フォームの適切な値をバイト単位で要素のサイズによって、要素のインデックスを乗算する必要があります<ph id="ph2">`offset`</ph>または<ph id="ph3">`count`</ph>です。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A&gt;</ph> method will return zero only if the end of the stream is reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A&gt;</ph>メソッドは、ストリームの末尾に達した場合にのみゼロを返します。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>In all other cases, <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A&gt;</ph> always reads at least one byte from the stream before returning.</source>
          <target state="translated">その他のすべてのケースで<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A&gt;</ph>常に返す前に、ストリームから、少なくとも 1 バイトを読み取ります。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>If no data is available from the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object upon a call to <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A&gt;</ph>, the method will block until at least one byte of data can be returned.</source>
          <target state="translated">データが利用できない場合、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>への呼び出し時にオブジェクト<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A&gt;</ph>、少なくとも 1 バイトのデータを返すことができるまで、メソッドはブロックされます。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte">
          <source>Reads a single byte from the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object in isolated storage.</source>
          <target state="translated">分離ストレージで <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトから 1 バイトを読み取ります。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte">
          <source>The 8-bit unsigned integer value read from the isolated storage file.</source>
          <target state="translated">分離ストレージ ファイルから読み取られた 8 ビット符号なし整数値。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte">
          <source>The following code example demonstrates how the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte%2A&gt;</ph> method can be used to read data from an <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object.</source>
          <target state="translated">次のコード例を示しますが、どのように<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte%2A&gt;</ph>からデータを読み取るメソッドを使用できます、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte">
          <source>For the complete context of this example, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> overview.</source>
          <target state="translated">この例の完全なコンテキストで次を参照してください。、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>の概要です。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle">
          <source>Gets a <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /&gt;</ph> object that represents the operating system file handle for the file that the current <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object encapsulates.</source>
          <target state="translated">現在の <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドルを表す <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle">
          <source>A <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /&gt;</ph> object that represents the operating system file handle for the file that the current <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object encapsulates.</source>
          <target state="translated">現在の <ph id="ph2">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドルを表す <ph id="ph1">&lt;see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle">
          <source>The <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle%2A&gt;</ph> property is not supported and always generates an <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageException&gt;</ph> exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle%2A&gt;</ph>プロパティはサポートされず、常に生成、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle">
          <source>The <ph id="ph1">&lt;see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle" /&gt;</ph> property always generates this exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle" /&gt;</ph> プロパティは常にこの例外を生成します。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle">
          <source>for the ability to access unmanaged code.</source>
          <target state="translated">アンマネージ コードへのアクセスに必要なアクセス許可。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph></source>
          <target state="translated">関連する列挙値:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>セキュリティ アクション。 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼が必要です。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトの新しい位置。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the current position of this <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object to the specified value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトの現在位置を特定の値に設定します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position in the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトの新しい位置。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Some <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> objects support positioning beyond the length of the stream, others will throw an exception in this case.</source>
          <target state="translated">いくつか<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクトは、ストリームの長さを超えた位置指定をサポート、他のユーザーここで例外がスローされます。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The <ph id="ph1">&lt;paramref name="origin" /&gt;</ph> must be one of the <ph id="ph2">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="origin" /&gt;</ph> は <ph id="ph2">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> 値のいずれかである必要があります。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)">
          <source>The new length of the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object.</source>
          <target state="translated">新しい <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトの長さ。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)">
          <source>Sets the length of this <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object to the specified <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトの長さを指定した <ph id="ph2">&lt;paramref name="value" /&gt;</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)">
          <source>If the specified <ph id="ph1">`value`</ph> is less than the current length of the <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object, the stream is truncated.</source>
          <target state="translated">場合、指定した<ph id="ph1">`value`</ph>が現在の長さより小さい、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクト、ストリームが切り詰められています。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)">
          <source>If the specified <ph id="ph1">`value`</ph> is larger than the current length of the stream, the stream is expanded.</source>
          <target state="translated">場合、指定した<ph id="ph1">`value`</ph>が現在の長さより大きく、ストリームのストリームが展開されています。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)">
          <source>If the stream is expanded, the contents of the stream between the old and the new length are undefined.</source>
          <target state="translated">ストリームが展開されている場合、古いクライアント シークレットと新しい長さの間のストリームの内容は未定義です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)">
          <source>In order to use this method, an <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object must support both writing and seeking.</source>
          <target state="translated">このメソッドを使用するために、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクトは、書き込みとシークの両方をサポートする必要があります。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a negative number.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> は負の値です。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)">
          <source>The starting position of the range to unlock.</source>
          <target state="translated">ロックを解除する範囲の開始位置。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)">
          <source>The value of this parameter must be equal to or greater than 0 (zero).</source>
          <target state="translated">このパラメーターの値は、0 (ゼロ) 以上にする必要があります。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)">
          <source>The number of bytes to unlock.</source>
          <target state="translated">ロックを解除するバイト数。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)">
          <source>Allows other processes to access all or part of a file that was previously locked.</source>
          <target state="translated">以前にロックされたファイルの全部または一部への他のプロセスによるアクセスを許可します。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="position" /&gt;</ph> or <ph id="ph2">&lt;paramref name="length" /&gt;</ph> is negative.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="position" /&gt;</ph> または <ph id="ph2">&lt;paramref name="length" /&gt;</ph> が負の値です。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The buffer to write.</source>
          <target state="translated">書き込むバッファー。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The byte offset in buffer from which to begin.</source>
          <target state="translated">開始位置を示すバッファー内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">書き込む最大バイト数。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a block of bytes to the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object using data read from a byte array.</source>
          <target state="translated">バイト配列から読み取ったデータを使用して、<ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトにバイトのブロックを書き込みます。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">`offset`</ph> parameter gives the offset of the byte in the <ph id="ph2">`buffer`</ph> at which to begin reading, and the <ph id="ph3">`count`</ph> parameter gives the number of bytes that will be written to this <ph id="ph4">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`offset`</ph>パラメーターはバイトのオフセット、<ph id="ph2">`buffer`</ph>読み取りを開始する位置を示す、<ph id="ph3">`count`</ph>パラメーターはこれに書き込まれるバイト数<ph id="ph4">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If the write operation is successful, the current position of the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object is advanced by the number of bytes written.</source>
          <target state="translated">現在の位置の書き込み操作が成功した場合、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクトが書き込まれたバイト数で高度なです。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>If an exception occurs, the current position of the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object is unchanged.</source>
          <target state="translated">例外が発生した、現在の位置の場合、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクトは変更されません。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The write attempt exceeds the quota for the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトのクォータを超える書き込みが試行されています。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)">
          <source>The byte value to write to the isolated storage file.</source>
          <target state="translated">分離ストレージ ファイルに書き込むバイト値。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)">
          <source>Writes a single byte to the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトに 1 バイトを書き込みます。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)">
          <source>The following code example demonstrates how the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte%2A&gt;</ph> method can be used to read data from an <ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> object.</source>
          <target state="translated">次のコード例を示しますが、どのように<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte%2A&gt;</ph>からデータを読み取るメソッドを使用できます、<ph id="ph2">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)">
          <source>For the complete context of this example, see the <ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph> overview.</source>
          <target state="translated">この例の完全なコンテキストで次を参照してください。、<ph id="ph1">&lt;xref:System.IO.IsolatedStorage.IsolatedStorageFileStream&gt;</ph>の概要です。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)">
          <source>The write attempt exceeds the quota for the <ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /&gt;</ph> オブジェクトのクォータを超える書き込みが試行されています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>