<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d7d2492efd855dc4576dfb178dcc4a5f1819b815" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36729849" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <TypeSignature Language="F#" Value="type SqlPipe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b5097-101">このクラスを使用すると、SQL Server データベース上でインプロセスで実行されるマネージド ストアド プロシージャから、呼び出し元に結果を返すことができます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b5097-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span>
      </span>
      <span data-ttu-id="b5097-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b5097-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5097-103">このクラスのインスタンスはからアクセスできる管理対象のストアド プロシージャを介して、<xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>のプロパティ、<xref:Microsoft.SqlServer.Server.SqlContext>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b5097-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5097-104">次の例で<xref:System.Data.SqlClient.SqlConnection>と<xref:System.Data.SqlClient.SqlCommand>ストアド プロシージャ内のデータ ソースから行を選択します。</span><span class="sxs-lookup"><span data-stu-id="b5097-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="b5097-105">使用して、<xref:Microsoft.SqlServer.Server.SqlPipe>コマンドを実行し、結果をクライアントに送信します。</span><span class="sxs-lookup"><span data-stu-id="b5097-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAndSend : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlPipe.ExecuteAndSend command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="b5097-106">実行対象の <see cref="T:System.Data.SqlClient.SqlCommand" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5097-107">パラメーターとして渡されたコマンドを実行し、結果をクライアントに返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-107">Executes the command passed as a parameter and sends the results to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5097-108">実際の結果だけでなく他のメッセージやエラーも送信されます直接クライアントにします。</span><span class="sxs-lookup"><span data-stu-id="b5097-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="b5097-109">出力パラメーターと戻り値は、クライアントに送信されません。これらは、コマンド オブジェクトのパラメーター コレクションを呼び出し元に使用できます。</span><span class="sxs-lookup"><span data-stu-id="b5097-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="b5097-110">コマンドは、インプロセス接続、バインドされていない場合、<xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b5097-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="b5097-111">アウトプロセス接続にバインドされたコマンドに対してこのメソッドを使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b5097-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="b5097-112">エラーがある場合、<xref:System.Data.SqlClient.SqlCommand>が送信された例外は、パイプに送信されますが、呼び出し元のマネージ コードにも、コピーが送信するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b5097-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="b5097-113">呼び出し元のコードが例外をキャッチしませんが TRANSACT-SQL コードをスタックに伝達され、2 回の出力に表示されます。</span><span class="sxs-lookup"><span data-stu-id="b5097-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="b5097-114">呼び出し元のコードが例外をキャッチした場合、パイプ コンシューマー、エラーが表示されますが、重複するエラーされません。</span><span class="sxs-lookup"><span data-stu-id="b5097-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5097-115">次の例で<xref:System.Data.SqlClient.SqlConnection>と<xref:System.Data.SqlClient.SqlCommand>ストアド プロシージャ内のデータ ソースから行を選択します。</span><span class="sxs-lookup"><span data-stu-id="b5097-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="b5097-116">使用して、<xref:Microsoft.SqlServer.Server.SqlPipe>コマンドを実行し、結果をクライアントに送信します。</span><span class="sxs-lookup"><span data-stu-id="b5097-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5097-117">
            <paramref name="command" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-117">The <paramref name="command" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b5097-118">アウトプロセス接続にバインドされたコマンドに対してこのメソッドを使用することはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-118">This method is not supported on commands bound to out-of-process connections.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSendingResults : bool" Usage="Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b5097-119">
            <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> に、単一の結果セットをクライアントに返すモードが使用されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span>
          </span>
          <span data-ttu-id="b5097-120">このプロパティは読み取り専用です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-120">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b5097-121">
            <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> メソッドが呼び出された状態で、単一の結果セットをクライアントに返すモードが <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> に使用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-121">
              <see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b5097-122">結果を直接クライアントまたは現在の出力のコンシューマーに送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-122">Sends results directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5097-123">**送信**メソッドは、クライアントまたは呼び出し元に直接データを送信します。</span><span class="sxs-lookup"><span data-stu-id="b5097-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="b5097-124">出力を使用するクライアントでは通常、**パイプ**メソッド、入れ子になった CLR の場合、ストアド プロシージャの出力のコンシューマーこともできます、ストアド プロシージャがあります。</span><span class="sxs-lookup"><span data-stu-id="b5097-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="b5097-125">たとえば、Procedure1 が<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>コマンド テキスト"EXEC Procedure2"を使用します。</span><span class="sxs-lookup"><span data-stu-id="b5097-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="b5097-126">Procedure2 もマネージ ストアド プロシージャです。</span><span class="sxs-lookup"><span data-stu-id="b5097-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="b5097-127">ここで Procedure2 が呼び出す場合<xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>行は、クライアントが、Procedure1 のリーダーに送信します。</span><span class="sxs-lookup"><span data-stu-id="b5097-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.Send : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.Send record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="b5097-128">クライアントに送信する単一行の結果セット (<see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> オブジェクト)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5097-129">単一行の結果セットを直接クライアントまたは現在の出力のコンシューマーに送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-129">Sends a single-row result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5097-130">
            <paramref name="record" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-130">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Data.SqlClient.SqlDataReader -&gt; unit" Usage="sqlPipe.Send reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="b5097-131">クライアントに送信する複数行の結果セット (<see cref="T:System.Data.SqlClient.SqlDataReader" /> オブジェクト)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5097-132">複数行の結果セットを直接クライアントまたは現在の出力のコンシューマーに送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-132">Sends a multirow result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5097-133">場合、<xref:System.Data.SqlClient.SqlDataReader>オブジェクト渡されたパラメーターが列を非表示として、これらの列は、クライアントに送信される結果セットには反映されません。</span><span class="sxs-lookup"><span data-stu-id="b5097-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5097-134">
            <paramref name="reader" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-134">The <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; unit" Usage="sqlPipe.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b5097-135">クライアントに送信されるメッセージ文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-135">The message string to be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5097-136">文字列メッセージを直接クライアントまたは現在の出力のコンシューマーに送信します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-136">Sends a string message directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5097-137">メッセージ文字列は、クライアントに情報メッセージとして送信されます。</span><span class="sxs-lookup"><span data-stu-id="b5097-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="b5097-138">クライアント アプリケーションは、によっては、データ アクセス アプリケーション プログラミング インターフェイス (API) を使用して、さまざまなメカニズムを通じてメッセージをリッスンできます。</span><span class="sxs-lookup"><span data-stu-id="b5097-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="b5097-139">たとえば場合は、クライアントは、ADO.NET を使用して、メッセージ転送を介して、<xref:System.Data.SqlClient.SqlConnection.InfoMessage>イベント。</span><span class="sxs-lookup"><span data-stu-id="b5097-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5097-140">次の例では、<xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>メソッドを直接クライアントにメッセージ文字列を送信します。</span><span class="sxs-lookup"><span data-stu-id="b5097-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b5097-141">
            <paramref name="message" /> が 4,000 文字を超えています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-141">The <paramref name="message" /> is greater than 4,000 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5097-142">
            <paramref name="message" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-142">The <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberSignature Language="F#" Value="member this.SendResultsEnd : unit -&gt; unit" Usage="sqlPipe.SendResultsEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b5097-143">結果セットの最後に到達したことを示し、<see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> インスタンスを初期状態に戻します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5097-144">マネージ ストアド プロシージャを実装していないクライアントに結果セットを送信することができます、<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="b5097-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="b5097-145">このメソッドと共に<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>と<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>、ストアド プロシージャをクライアントにカスタム結果セットの送信を許可します。</span><span class="sxs-lookup"><span data-stu-id="b5097-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5097-146">次の例は、新しい作成<xref:Microsoft.SqlServer.Server.SqlDataRecord>とその<xref:Microsoft.SqlServer.Server.SqlMetaData>です。</span><span class="sxs-lookup"><span data-stu-id="b5097-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="b5097-147">例を使用して結果セットの先頭をマークし、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>メソッドを使用してクライアントにデータの例を含むレコードを送信する、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>メソッド、および記号のセットを結果の終わり、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b5097-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b5097-148">
            <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> メソッドがまだ呼び出されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsRow : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsRow record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="b5097-149">クライアントに送信する行の列値を含む <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span>
          </span>
          <span data-ttu-id="b5097-150">このレコードのスキーマは、<see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> メソッドに渡した <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> のメタデータが定義するスキーマと一致している必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5097-151">単一行のデータをクライアントに返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-151">Sends a single row of data back to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5097-152">マネージ ストアド プロシージャを実装していないクライアントに結果セットを送信することができます、<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="b5097-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="b5097-153">このメソッドと共に<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>と<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>、ストアド プロシージャをクライアントにカスタム結果セットを送信します。</span><span class="sxs-lookup"><span data-stu-id="b5097-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="b5097-154"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>メソッドは、クライアントに 1 行のデータを送信します。</span><span class="sxs-lookup"><span data-stu-id="b5097-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="b5097-155">行は、後で呼び出す呼び出し元に返される<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>、送信される各行につき 1 回です。</span><span class="sxs-lookup"><span data-stu-id="b5097-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="b5097-156">すべての行が送信されたへの呼び出し後、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>メソッドは、結果セットの末尾を設定するために必要です。</span><span class="sxs-lookup"><span data-stu-id="b5097-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5097-157">次の例は、新しい作成<xref:Microsoft.SqlServer.Server.SqlDataRecord>とその<xref:Microsoft.SqlServer.Server.SqlMetaData>です。</span><span class="sxs-lookup"><span data-stu-id="b5097-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="b5097-158">例を使用して結果セットの先頭をマークし、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>メソッドを使用してクライアントにデータの例を含むレコードを送信する、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>メソッド、および記号のセットを結果の終わり、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b5097-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5097-159">
            <paramref name="record" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-159">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b5097-160">
            <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> メソッドがまだ呼び出されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsStart : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsStart record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="b5097-161">メタデータを抽出し、結果セットを記述するための <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b5097-162">クライアントに返す結果セットの先頭を宣言し、record パラメーターを使用して結果セットを表すメタデータを構築します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5097-163">マネージ ストアド プロシージャを実装していないクライアントに結果セットを送信することができます、<xref:System.Data.SqlClient.SqlDataReader>です。</span><span class="sxs-lookup"><span data-stu-id="b5097-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="b5097-164">このメソッドと共に<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>と<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>、ストアド プロシージャをクライアントにカスタム結果セットの送信を許可します。</span><span class="sxs-lookup"><span data-stu-id="b5097-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="b5097-165"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>メソッドは、結果セットの先頭をマークし、レコード パラメーターを使用して、結果セットを記述するメタデータを構築するためにします。</span><span class="sxs-lookup"><span data-stu-id="b5097-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="b5097-166">それ以降、すべての行を使用して送信、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>メソッドはそのメタデータ定義と一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b5097-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="b5097-167">その後に呼び出すことに注意してください<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>、のみ<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>と<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b5097-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="b5097-168">他のメソッドの同じインスタンスで<xref:Microsoft.SqlServer.Server.SqlPipe>スロー、<xref:System.InvalidOperationException>です。</span><span class="sxs-lookup"><span data-stu-id="b5097-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="b5097-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> 設定<xref:Microsoft.SqlServer.Server.SqlPipe>他のメソッドを呼び出すことが初期状態に戻す。</span><span class="sxs-lookup"><span data-stu-id="b5097-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="b5097-170">コントロールは、TRANSACT-SQL に CLR の実行から戻た後、CLR のメモリに初期化または静的ローカル変数を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="b5097-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="b5097-171">例については、操作を処理中のインスタンスがクラス、ストアではなく`SQLDataRecord`、CLR から制御が返された後に使用されます。</span><span class="sxs-lookup"><span data-stu-id="b5097-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="b5097-172">1 つの例外は、`SQLMetaData`プロセス クラスでします。</span><span class="sxs-lookup"><span data-stu-id="b5097-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b5097-173">次の例は、新しい作成<xref:Microsoft.SqlServer.Server.SqlDataRecord>とその<xref:Microsoft.SqlServer.Server.SqlMetaData>です。</span><span class="sxs-lookup"><span data-stu-id="b5097-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="b5097-174">例を使用して結果セットの先頭をマークし、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>メソッドを使用してクライアントにデータの例を含むレコードを送信する、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>メソッド、および記号のセットを結果の終わり、<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b5097-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b5097-175">
            <paramref name="record" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-175">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b5097-176">
            <paramref name="record" /> に列が含まれていないか、初期化されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-176">The <paramref name="record" /> has no columns or has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b5097-177">
            <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> メソッドの後で、<see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> と <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> のいずれにも該当しないメソッドが呼び出されました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b5097-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>