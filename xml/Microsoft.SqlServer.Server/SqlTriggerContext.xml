<Type Name="SqlTriggerContext" FullName="Microsoft.SqlServer.Server.SqlTriggerContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed757acedc75ab937b899f43be259b51ca203300" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="40212158" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlTriggerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTriggerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlTriggerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTriggerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTriggerContext sealed" />
  <TypeSignature Language="F#" Value="type SqlTriggerContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>発生したトリガーに関する文脈情報を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供されるコンテキスト情報に変更された列で更新操作、およびの場合、データ定義言語 (DDL) トリガーで EventData を XML の構造体に、トリガーを発生させたアクションの種類が含まれています (を参照してください[Transact-SQL リファレンス](/sql/t-sql/language-reference))、トリガー操作をについて説明します。  
  
 インスタンス<xref:Microsoft.SqlServer.Server.SqlTriggerContext>から利用できますが、<xref:Microsoft.SqlServer.Server.SqlContext>クラスは、コードの実行をトリガー内で、<xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A>プロパティ。  
  
   
  
## Examples  
 次の例は、<xref:Microsoft.SqlServer.Server.SqlTriggerContext>かを判断するために使用されているオブジェクト、<xref:Microsoft.SqlServer.Server.TriggerAction.Insert>アクションが発生しました。 行が挿入された場合、`user`のテーブルでは、ユーザー名と実際の名前は、挿入された行から取得され、に追加し、 **UserNameAudit**テーブル。  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int" Usage="Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トリガーにバインドされたデータ テーブルに含まれる列数を取得します。 このプロパティは読み取り専用です。</summary>
        <value>トリガーにバインドされたデータ テーブルに含まれる列数を表す整数値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A> プロパティは、最大の序数を確認すると役立つを<xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A>特定のトリガーの呼び出しでは、します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventData">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlXml EventData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlTypes.SqlXml EventData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventData As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlXml ^ EventData { System::Data::SqlTypes::SqlXml ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventData : System.Data.SqlTypes.SqlXml" Usage="Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トリガーの発生源となったアクションに固有のイベント データを取得します。</summary>
        <value>詳細な情報が利用できる場合は、トリガーの発生源となったアクションに固有のイベント データの <see cref="T:System.Data.SqlTypes.SqlXml" />。それ以外の場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この情報は、データ定義言語 (DDL) トリガーを使用できます。 データ操作言語 (DML) トリガーの場合は、このプロパティを介して情報はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatedColumn">
      <MemberSignature Language="C#" Value="public bool IsUpdatedColumn (int columnOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUpdatedColumn(int32 columnOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpdatedColumn (columnOrdinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpdatedColumn(int columnOrdinal);" />
      <MemberSignature Language="F#" Value="member this.IsUpdatedColumn : int -&gt; bool" Usage="sqlTriggerContext.IsUpdatedColumn columnOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnOrdinal">列の 0 から始まる序数。</param>
        <summary>列が INSERT ステートメントまたは UPDATE ステートメントによって変更されていた場合、<see langword="true" /> を返します。</summary>
        <returns>列が INSERT ステートメントまたは UPDATE ステートメントによって変更されていた場合は <see langword="true" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" /> プロパティの値が <see langword="Insert" /> または <see langword="Update" /> ではないトリガーのコンテキストで呼び出された場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerAction">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.TriggerAction TriggerAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.TriggerAction TriggerAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TriggerAction As TriggerAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::TriggerAction TriggerAction { Microsoft::SqlServer::Server::TriggerAction get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerAction : Microsoft.SqlServer.Server.TriggerAction" Usage="Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.TriggerAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トリガーの発生源となったアクションを示します。</summary>
        <value>トリガーの発生源となったアクションを表す <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、監査のトリガーを示します。 場合、<xref:Microsoft.SqlServer.Server.TriggerAction.Insert>または<xref:Microsoft.SqlServer.Server.TriggerAction.Delete>アクションが発生しました、影響を受けた行が INSERTED および DELETED テーブルから取得されます。  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#2)]
 [!code-vb[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>