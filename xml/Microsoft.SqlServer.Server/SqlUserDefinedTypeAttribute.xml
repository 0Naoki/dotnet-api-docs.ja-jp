<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53fbed7cc2510fea924d578b062e6b89fd7765b4" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70611814" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SqlUserDefinedTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3f286-101">アセンブリ内の型定義をユーザー定義型 (UDT) として宣言して、SQL Server に登録する場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="3f286-101">Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server.</span></span> <span data-ttu-id="3f286-102">この属性には、型を SQL Server に登録する際に使用される物理的な特性を反映した、いくつかのプロパティが格納されます。</span><span class="sxs-lookup"><span data-stu-id="3f286-102">The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</span></span> <span data-ttu-id="3f286-103">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="3f286-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f286-104">SQL Server は、 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>カスタム属性を持つ型定義にバインドされたユーザー定義型を作成します。</span><span class="sxs-lookup"><span data-stu-id="3f286-104">SQL Server creates a user-defined type that is bound to the type definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> custom attribute.</span></span> <span data-ttu-id="3f286-105">すべての UDT には、この属性で注釈を付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="3f286-105">Every UDT must be annotated with this attribute.</span></span> <span data-ttu-id="3f286-106">UDT の例を含む Udt の詳細については、「 [CLR ユーザー定義型](https://go.microsoft.com/fwlink/?LinkId=128028)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3f286-106">See [CLR User-Defined Types](https://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f286-107">次の例は、 `UserDefinedType` Point UDT の属性を示しています。</span><span class="sxs-lookup"><span data-stu-id="3f286-107">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="3f286-108">UDT はバイト順で、"Point" という名前が付けられ、"ValidatePoint" という名前の検証メソッドを持ち、ネイティブシリアル化形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="3f286-108">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberSignature Language="F#" Value="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute : Microsoft.SqlServer.Server.Format -&gt; Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" Usage="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute format" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="3f286-109">型のシリアル化形式を表す <see cref="T:Microsoft.SqlServer.Server.Format" /> のいずれかの値。</span><span class="sxs-lookup"><span data-stu-id="3f286-109">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the type.</span></span></param>
        <summary><span data-ttu-id="3f286-110">ユーザー定義型 (UDT) に対する必須の属性。型が UDT であり、UDT のストレージ形式を持つことを示します。</span><span class="sxs-lookup"><span data-stu-id="3f286-110">A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f286-111">次の例では、 `Format`ユーザー定義`SerializedDataWithMetadata`型`MaxByteSize`のがで、が8000バイトであることを指定します。</span><span class="sxs-lookup"><span data-stu-id="3f286-111">The following example specifies that the `Format` of the user-defined type is `SerializedDataWithMetadata` and the `MaxByteSize` is 8000 bytes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberSignature Language="F#" Value="member this.Format : Microsoft.SqlServer.Server.Format" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f286-112"><see cref="T:Microsoft.SqlServer.Server.Format" /> のいずれかのシリアル化形式。</span><span class="sxs-lookup"><span data-stu-id="3f286-112">The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</span></span></summary>
        <value><span data-ttu-id="3f286-113">シリアル化形式を表す <see cref="T:Microsoft.SqlServer.Server.Format" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f286-113">A <see cref="T:Microsoft.SqlServer.Server.Format" /> value representing the serialization format.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsByteOrdered : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f286-114">ユーザー定義型がバイト順の並びを持つかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3f286-114">Indicates whether the user-defined type is byte ordered.</span></span></summary>
        <value><span data-ttu-id="3f286-115">ユーザー定義型がバイト順の並びを持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f286-115"><see langword="true" /> if the user-defined type is byte ordered; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f286-116">に`true`設定すると、 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>プロパティによって、シリアル化されたバイナリデータが情報のセマンティックな順序付けに使用できることが保証されます。</span><span class="sxs-lookup"><span data-stu-id="3f286-116">When set to `true`, the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> property in effect guarantees that the serialized binary data can be used for semantic ordering of the information.</span></span> <span data-ttu-id="3f286-117">したがって、バイト順の UDT オブジェクトの各インスタンスは、シリアル化された表現を1つだけ持つことができます。</span><span class="sxs-lookup"><span data-stu-id="3f286-117">Thus, each instance of a byte-ordered UDT object can only have one serialized representation.</span></span> <span data-ttu-id="3f286-118">シリアル化されたバイトの SQL Server で比較操作を実行すると、その結果は、マネージコードで同じ比較操作が行われた場合と同じになります。</span><span class="sxs-lookup"><span data-stu-id="3f286-118">When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code.</span></span>  
  
 <span data-ttu-id="3f286-119">がに<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> `true`設定されている場合、次の機能がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="3f286-119">The following features are supported when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="3f286-120">この型の列にインデックスを作成する機能。</span><span class="sxs-lookup"><span data-stu-id="3f286-120">The ability to create indexes on columns of this type.</span></span>  
  
-   <span data-ttu-id="3f286-121">この型の列に対する CHECK 制約と UNIQUE 制約だけでなく、主キーと外部キーを作成する機能。</span><span class="sxs-lookup"><span data-stu-id="3f286-121">The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.</span></span>  
  
-   <span data-ttu-id="3f286-122">Transact-sql ORDER BY 句、GROUP BY 句、および PARTITION BY 句を使用する機能。</span><span class="sxs-lookup"><span data-stu-id="3f286-122">The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses.</span></span> <span data-ttu-id="3f286-123">このような場合は、型のバイナリ表現を使用して順序が決定されます。</span><span class="sxs-lookup"><span data-stu-id="3f286-123">In these cases, the binary representation of the type is used to determine the order.</span></span>  
  
-   <span data-ttu-id="3f286-124">Transact-sql ステートメントで比較演算子を使用する機能です。</span><span class="sxs-lookup"><span data-stu-id="3f286-124">The ability to use comparison operators in Transact-SQL statements.</span></span>  
  
-   <span data-ttu-id="3f286-125">この型の計算列を保存する権限です。</span><span class="sxs-lookup"><span data-stu-id="3f286-125">The ability to persist computed columns of this type.</span></span>  
  
 <span data-ttu-id="3f286-126">`Native`がに`UserDefined` <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>設定されている場合、との両方のシリアル化形式で次の比較演算子がサポートされることに注意してください。 `true`</span><span class="sxs-lookup"><span data-stu-id="3f286-126">Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="3f286-127">等しい (=)</span><span class="sxs-lookup"><span data-stu-id="3f286-127">Equal to (=)</span></span>  
  
-   <span data-ttu-id="3f286-128">等しくない (!=)</span><span class="sxs-lookup"><span data-stu-id="3f286-128">Not equal to (!=)</span></span>  
  
-   <span data-ttu-id="3f286-129">より大きい (>)</span><span class="sxs-lookup"><span data-stu-id="3f286-129">Greater than (>)</span></span>  
  
-   <span data-ttu-id="3f286-130">より小さい (\<)</span><span class="sxs-lookup"><span data-stu-id="3f286-130">Less than (\<)</span></span>  
  
-   <span data-ttu-id="3f286-131">以上 (> =)</span><span class="sxs-lookup"><span data-stu-id="3f286-131">Greater than or equal to (>=)</span></span>  
  
-   <span data-ttu-id="3f286-132">以下 (<=)</span><span class="sxs-lookup"><span data-stu-id="3f286-132">Less than or equal to (<=)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedLength : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f286-133">このユーザー定義型のすべてのインスタンスが同じ長さを持つかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3f286-133">Indicates whether all instances of this user-defined type are the same length.</span></span></summary>
        <value><span data-ttu-id="3f286-134">この型のすべてのインスタンスが同じ長さを持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3f286-134"><see langword="true" /> if all instances of this type are the same length; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f286-135">に`true`設定した場合、この共通言語ランタイム (CLR) 型に対応する udt のすべてのインスタンスの長さは、バイト<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>単位で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3f286-135">If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span></span> <span data-ttu-id="3f286-136">この属性は、シリアル化`UserDefined` <xref:Microsoft.SqlServer.Server.Format>が適用された udt にのみ関連します。</span><span class="sxs-lookup"><span data-stu-id="3f286-136">This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxByteSize : int with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f286-137">インスタンスの最大サイズ (バイト)。</span><span class="sxs-lookup"><span data-stu-id="3f286-137">The maximum size of the instance, in bytes.</span></span></summary>
        <value><span data-ttu-id="3f286-138">インスタンスの最大サイズを表す <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f286-138">An <see cref="T:System.Int32" /> value representing the maximum size of the instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f286-139">`UserDefined`シリアル<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> 化 <xref:Microsoft.SqlServer.Server.Format> を使用してプロパティを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3f286-139">You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 <span data-ttu-id="3f286-140">SQL Server 2005 以前に接続する場合、 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>は 1 ~ 8000 の範囲で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3f286-140">When connecting to SQL Server 2005 or earlier, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> must be between 1 and 8000.</span></span>  
  
 <span data-ttu-id="3f286-141">SQL Server 2008 以降に接続する場合は、 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>インスタンスが常に8000バイト以下である型に対して、1 ~ 8000 の値を設定します。</span><span class="sxs-lookup"><span data-stu-id="3f286-141">When connecting to SQL Server 2008 or later, set <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> between 1 and 8000, for a type whose instances are always 8,000 bytes or less.</span></span> <span data-ttu-id="3f286-142">8000を超えるインスタンスを持つことができる型の場合は、-1 を指定します。</span><span class="sxs-lookup"><span data-stu-id="3f286-142">For types that can have instances larger than 8000, specify -1.</span></span>  
  
 <span data-ttu-id="3f286-143">ユーザー定義のシリアル化を指定した udt <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>の場合、は、ユーザーが定義した、シリアル化された形式の udt の合計サイズを参照します。</span><span class="sxs-lookup"><span data-stu-id="3f286-143">For a UDT with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> refers to the total size of the UDT in its serialized form as defined by the user.</span></span> <span data-ttu-id="3f286-144">10文字の文字列のプロパティを持つ UDT について考え<xref:System.Char>てみます ()。</span><span class="sxs-lookup"><span data-stu-id="3f286-144">Consider a UDT with a property of a string of 10 characters (<xref:System.Char>).</span></span> <span data-ttu-id="3f286-145">を<xref:System.IO.BinaryWriter>使用して UDT をシリアル化する場合、シリアル化された文字列の合計サイズは22バイトになります。 Unicode utf-16 文字あたり2バイト、最大文字数を掛けた値、およびバイナリストリームのシリアル化によって発生するオーバーヘッドの制御バイト数が2バイトになります。</span><span class="sxs-lookup"><span data-stu-id="3f286-145">When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.</span></span> <span data-ttu-id="3f286-146">したがって、の<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>値を決定する場合、シリアル化された UDT の合計サイズは、バイナリ形式でシリアル化されるデータのサイズと、シリアル化によって発生するオーバーヘッドを考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3f286-146">So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.</span></span>  
  
 <span data-ttu-id="3f286-147">このプロパティは、シリアル化`Native` <xref:Microsoft.SqlServer.Server.Format>では使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="3f286-147">This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f286-148">ユーザー定義型の SQL Server 名。</span><span class="sxs-lookup"><span data-stu-id="3f286-148">The SQL Server name of the user-defined type.</span></span></summary>
        <value><span data-ttu-id="3f286-149">ユーザー定義型の SQL Server 名を表す <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="3f286-149">A <see cref="T:System.String" /> value representing the SQL Server name of the user-defined type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f286-150"><xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A>プロパティは SQL Server 内では使用されませんが、Microsoft Visual Studio .net 統合開発環境 (IDE) によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="3f286-150">The <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationMethodName : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f286-151">ユーザー定義型のインスタンスを検証する際に使用するメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="3f286-151">The name of the method used to validate instances of the user-defined type.</span></span></summary>
        <value><span data-ttu-id="3f286-152">ユーザー定義型のインスタンスを検証する際に使用するメソッドの名前を表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3f286-152">A <see cref="T:System.String" /> representing the name of the method used to validate instances of the user-defined type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f286-153">この属性によって指定されたメソッドは、信頼されていないバイナリ値から UDT が逆シリアル化された場合に、UDT のインスタンスを検証します。</span><span class="sxs-lookup"><span data-stu-id="3f286-153">The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
