<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d14626a5f77901dace0414747e649b15e3fa6215" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37715801" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> および <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> がユーザー定義型 (UDT) または集計のシリアル化形式を指定するときに使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> および <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> がユーザー定義型 (UDT) または集計のシリアル化形式を指定するときに使用します。  
  
   
  
## Examples  
 次の例は、 `UserDefinedType` Point UDT の属性です。  UDT は、バイト順は、「ポイント」の名前は、"ValidatePoint"という名前の検証メソッドがあります、およびはネイティブ シリアル化形式を使用を。  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <see langword="Native" /> シリアル化形式には、SQL Server が UDT 表現をディスク上に効率よく格納できるようにする、きわめてシンプルなアルゴリズムが使用されています。 <see langword="Native" /> シリアル化の対象となる型には、値型 (Microsoft Visual C# の struct、Microsoft Visual Basic .NET の Structure) のみ、メンバーとして割り当てることができます。 ユーザー定義型であるか、既存の型 (<see cref="T:System.String" /> など) であるかに関係なく、参照型のメンバー (Visual C# や Visual Basic のクラス) はサポートされません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この形式の要件は次のとおりです。  
  
-   `StructLayout.LayoutKindSequential`集計に属性を適用する必要がありますまたは UDT をクラスと構造体ではないで定義されている場合。 これは、データ フィールドの物理的なレイアウトを制御し、表示される順序で順番にレイアウトするメンバーを強制するために使用します。 SQL Server では、この属性を使用して、複数のフィールドを持つ Udt のフィールド順序を決定します。  
  
-   種類は、少なくとも 1 つのメンバーを含める必要があります (シリアル化された値はゼロ バイトのサイズにすることはできません)。  
  
-   集計のすべてのフィールドである必要があります*blittable*、する必要がありますマネージとアンマネージの両方のメモリに共通の表現があるし、相互運用マーシャラーによる特別な処理を必要としないのは、します。  
  
-   UDT のすべてのフィールドがシリアル化できる、次の種類のいずれかを指定する必要があります: `bool`、 `byte`、 `sbyte`、 `short`、 `ushort`、 `int`、 `uint`、 `long`、 `ulong`、 `float`、 `double`、 <xref:System.Data.SqlTypes.SqlByte>、 <xref:System.Data.SqlTypes.SqlInt16>、 <xref:System.Data.SqlTypes.SqlInt32>、 <xref:System.Data.SqlTypes.SqlInt64>、 <xref:System.Data.SqlTypes.SqlDateTime>、 <xref:System.Data.SqlTypes.SqlSingle>、 <xref:System.Data.SqlTypes.SqlDouble>、 <xref:System.Data.SqlTypes.SqlMoney>、またはその他の値の型、ユーザーが定義されている次のいずれかのフィールドを含む型。  
  
-   集計の値を指定する必要があります`MaxByteSize`します。  
  
-   集計はすべて [NonSerialized] フィールドに必要ありません。  
  
-   フィールドは、明示的なレイアウトとしてマークされませんする必要があります (<xref:System.Runtime.InteropServices.StructLayoutAttribute>)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>シリアル化形式は未知です。</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <see langword="UserDefined" /> シリアル化形式を使用すると、開発者は、<see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> メソッドおよび <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" /> メソッドを通じてバイナリ形式を詳細に制御できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 集計の値を指定する必要があります`MaxByteSize`します。  
  
 指定、<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>属性プロパティ。 既定値は false です。  
  
 任意のフィールドを省略した場合、<xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>または<xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A>メソッド、そのフィールドの状態はシリアル化されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>