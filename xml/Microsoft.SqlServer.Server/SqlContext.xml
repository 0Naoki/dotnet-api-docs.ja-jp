<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="825d62a5e9710c1402283dbef5bd00b05faec9ce" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69303637" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <TypeSignature Language="F#" Value="type SqlContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ab520-101">呼び出し元のコンテキストを抽象化し、<see cref="T:Microsoft.SqlServer.Server.SqlPipe" />、<see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />、<see cref="T:System.Security.Principal.WindowsIdentity" /> の各オブジェクトへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ab520-101">Represents an abstraction of the caller's context, which provides access to the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, and <see cref="T:System.Security.Principal.WindowsIdentity" /> objects.</span></span> <span data-ttu-id="ab520-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="ab520-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab520-103"><xref:Microsoft.SqlServer.Server.SqlContext>オブジェクトを使用すると、トリガーコンテキスト (トリガーで実行されるコードの場合) とパイプオブジェクト (ストアドプロシージャなどで使用できる場合) を取得できます。</span><span class="sxs-lookup"><span data-stu-id="ab520-103">The <xref:Microsoft.SqlServer.Server.SqlContext> object can be used to obtain the trigger context (for code executing in a trigger) and the pipe object (when available, such as in stored procedures).</span></span> <span data-ttu-id="ab520-104">また、クライアントが統合認証を使用<xref:System.Security.Principal.WindowsIdentity>してサーバーで認証されている場合に、呼び出し元クライアントの Microsoft Windows id を表すオブジェクトを取得するために使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ab520-104">It can also be used to obtain a <xref:System.Security.Principal.WindowsIdentity> object that represents the Microsoft Windows identity of the calling client, if the client authenticated with the server using integrated authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab520-105">次の例では、 <xref:Microsoft.SqlServer.Server.SqlDataRecord>新しい<xref:Microsoft.SqlServer.Server.SqlMetaData>とを作成します。</span><span class="sxs-lookup"><span data-stu-id="ab520-105">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="ab520-106">次に、メソッドを使用して<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>結果セットの先頭をマークし、 <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>メソッドを使用してデータの例を含むレコードをクライアントに送り返し、結果セットの末尾<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>をメソッドでマークします。</span><span class="sxs-lookup"><span data-stu-id="ab520-106">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab520-107">呼び出し元コードを SQL Server 内で実行するかどうかと、コンテキスト接続にアクセスできるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="ab520-107">Specifies whether the calling code is running within SQL Server, and if the context connection can be accessed.</span></span></summary>
        <value><span data-ttu-id="ab520-108">コンテキスト接続にアクセスし、<see cref="T:Microsoft.SqlServer.Server.SqlContext" /> の IsAvailable 以外のメンバーにアクセスできる場合は <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="ab520-108"><see langword="True" /> if the context connection is available and the other <see cref="T:Microsoft.SqlServer.Server.SqlContext" /> members can be accessed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab520-109">このプロパティが false を返す場合、他<xref:Microsoft.SqlServer.Server.SqlContext>のすべての<xref:System.InvalidOperationException>メンバーは、を使用するとをスローします。</span><span class="sxs-lookup"><span data-stu-id="ab520-109">If this property returns false, all the other <xref:Microsoft.SqlServer.Server.SqlContext> members throw an <xref:System.InvalidOperationException> if used.</span></span>  
  
 <span data-ttu-id="ab520-110">このプロパティが false を返す場合、接続文字列内で "context connection = true" を持つ接続オブジェクトを開こうとすると失敗します。</span><span class="sxs-lookup"><span data-stu-id="ab520-110">If this property returns false, any attempt to open a connection object that has "context connection=true" in the connection string fails.</span></span>  
  
 <span data-ttu-id="ab520-111">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ab520-111">This property is read-only.</span></span>  
  
 <span data-ttu-id="ab520-112">データアクセスに ADO.NET を使用する場合、(共通言語ランタイムの統合を使用して) SQL Server 内でコードの一部が実行され、SQL Server 外部で実行される可能性がある場合は、このプロパティを使用してコンテキスト接続が使用可能かどうかを確認できます。</span><span class="sxs-lookup"><span data-stu-id="ab520-112">When using ADO.NET for data-access, if a piece of code may run both inside SQL Server (using common language runtime integration) and outside SQL Server, this property can be used to check whether the context connection is available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pipe : Microsoft.SqlServer.Server.SqlPipe" Usage="Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab520-113">呼び出し元が、結果セット、メッセージ、およびコマンドの実行結果をクライアントに送り返すことを可能にするパイプ オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ab520-113">Gets the pipe object that allows the caller to send result sets, messages, and the results of executing commands back to the client.</span></span></summary>
        <value><span data-ttu-id="ab520-114">パイプを利用できる場合、<see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> のインスタンス。ユーザー定義関数など、パイプの利用できないコンテキストで呼び出した場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab520-114">An instance of <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> if a pipe is available, or <see langword="null" /> if called in a context where pipe is not available (for example, in a user-defined function).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab520-115">SQL Server 外から呼び出さ<xref:System.NotSupportedException>れた場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ab520-115">If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="ab520-116">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ab520-116">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerContext : Microsoft.SqlServer.Server.SqlTriggerContext" Usage="Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab520-117">呼び出し元に、トリガーの発生源に関する情報と、更新された列のマップを提供するトリガー コンテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="ab520-117">Gets the trigger context used to provide the caller with information about what caused the trigger to fire, and a map of the columns that were updated.</span></span></summary>
        <value><span data-ttu-id="ab520-118">トリガー コンテキストにアクセスできる場合、<see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> のインスタンス。トリガー呼び出しの外側で呼び出された場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab520-118">An instance of <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> if a trigger context is available, or <see langword="null" /> if called outside of a trigger invocation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab520-119">オブジェクト<xref:Microsoft.SqlServer.Server.SqlTriggerContext>を取得できるのは、共通言語ランタイムトリガー内からだけです。</span><span class="sxs-lookup"><span data-stu-id="ab520-119">The <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object can only be retrieved from within a common language runtime trigger.</span></span>  
  
 <span data-ttu-id="ab520-120">プロパティが SQL Server <xref:System.NotSupportedException>の外部からアクセスされると、がスローされます。 <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A></span><span class="sxs-lookup"><span data-stu-id="ab520-120">If the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property is accessed from outside of SQL Server, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="ab520-121">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ab520-121">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab520-122">呼び出し元の Microsoft Windows ID。</span><span class="sxs-lookup"><span data-stu-id="ab520-122">The Microsoft Windows identity of the caller.</span></span></summary>
        <value><span data-ttu-id="ab520-123">呼び出し元の Windows ID を表す <see cref="T:System.Security.Principal.WindowsIdentity" /> インスタンス。クライアントが SQL Server 認証を通じて認証された場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ab520-123">A <see cref="T:System.Security.Principal.WindowsIdentity" /> instance representing the Windows identity of the caller, or <see langword="null" /> if the client was authenticated using SQL Server Authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab520-124">SQL Server 内の共通言語ランタイム (CLR) コードは、常にプロセスアカウントのコンテキストで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ab520-124">Common language runtime (CLR) code inside SQL Server is always invoked in the context of the process account.</span></span> <span data-ttu-id="ab520-125">SQL Server プロセス id ではなく、ユーザーの id を呼び出すことでコードがアクションを実行する必要がある場合は、このプロパティを通じて偽装トークンを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ab520-125">If it is necessary for the code to perform an action using calling user's identity instead of the SQL Server process identity, then an impersonation token should be obtained through this property.</span></span> <span data-ttu-id="ab520-126">呼び出し元は、<xref:System.Security.Principal.WindowsIdentity> オブジェクトを取得すれば、クライアント アカウントを偽装し、クライアントの代わりに動作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="ab520-126">After obtaining the <xref:System.Security.Principal.WindowsIdentity> object, callers can impersonate the client account and perform actions on their behalf.</span></span>  
  
 <span data-ttu-id="ab520-127">SQL Server 外から呼び出さ<xref:System.NotSupportedException>れた場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ab520-127">If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="ab520-128">`EXTERNAL_ACCESS` アクセス許可または `UNSAFE` アクセス許可でマークされたアセンブリのみが、このプロパティにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="ab520-128">Only assemblies marked with `EXTERNAL_ACCESS` or `UNSAFE` permissions can access this property.</span></span>  
  
 <span data-ttu-id="ab520-129">このプロパティは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="ab520-129">This property is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab520-130">次の例は、呼び出し元のクライアントの Windows id を取得し、クライアントの権限を借用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ab520-130">The following example shows how to get the Windows identity of the calling client and impersonate the client.</span></span>
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
