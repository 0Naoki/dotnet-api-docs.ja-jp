<Type Name="InstanceStore" FullName="System.Runtime.DurableInstancing.InstanceStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6596a79c48ca9827c47f213b39d9aec72e827a2f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30480986" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class InstanceStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InstanceStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.DurableInstancing.InstanceStore" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InstanceStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class InstanceStore abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="24008-101">インスタンス ストアを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="24008-101">Represents an instance store.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24008-102">永続化プロバイダーによって、<xref:System.Runtime.DurableInstancing.InstanceStore> クラスの具象実装を通してインスタンス ストアにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="24008-102">A persistence provider provides access to an instance store through a concrete implementation of the <xref:System.Runtime.DurableInstancing.InstanceStore> class.</span></span>  
  
 <span data-ttu-id="24008-103">永続化プロバイダーは、コマンドの実行が完了した後でも、TryCommand に渡されるハンドルの InstanceHandle.Free を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="24008-103">Persistence providers may call InstanceHandle.Free on handles passed to TryCommand, even after the command has finished executing.</span></span> <span data-ttu-id="24008-104">ただし、永続化プロバイダーが InstanceHandle オブジェクトや InstanceOwner オブジェクトへの強参照を保持することはありません。これによって、InstanceStore がガベージ コレクトされない可能性があるためです。</span><span class="sxs-lookup"><span data-stu-id="24008-104">But persistence providers must not hold strong references to InstanceHandle or InstanceOwner objects, as this can prevent InstanceStore from being garbage collected.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="24008-105">ワークフローの永続化されたワークフロー定義を変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="24008-105">Workflow definitions for persisted workflows cannot be changed.</span></span> <span data-ttu-id="24008-106">ワークフロー定義が変更された場合、永続化した後、ワークフローが再読み込みされるときに、ワークフロー ランタイムがクラッシュします。</span><span class="sxs-lookup"><span data-stu-id="24008-106">If a workflow definition is changed after it is persisted, the workflow runtime will crash when the workflow is reloaded.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InstanceStore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InstanceStore();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24008-107">
            <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> クラスのインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-107">Initializes an instance of the <see cref="T:System.Runtime.DurableInstancing.InstanceStore" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginExecute">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginExecute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginExecute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginExecute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginExecute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginExecute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="24008-108">インスタンス ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-108">An instance handle.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="24008-109">実行するコマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-109">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="24008-110">コマンド実行のタイムアウト値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-110">The timeout value for the command execution.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="24008-111">非同期操作完了の通知を受信する非同期コールバック デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-111">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="24008-112">状態情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-112">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-113">
            <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" />、<see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" /> などの永続化コマンドを非同期で実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-113">Asynchronously executes persistence commands such as <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-114">非同期操作の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-114">The state of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24008-115">ホストは、<xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> メソッドを呼び出して、永続化コマンドをインスタンス ハンドルに対して非同期で実行します。</span><span class="sxs-lookup"><span data-stu-id="24008-115">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.BeginExecute%2A> method to execute a persistence command against an instance handle asynchronously.</span></span> <span data-ttu-id="24008-116">ホストは、<xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> メソッドを呼び出して、インスタンス ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="24008-116">The host obtains the instance handle by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="24008-117">インスタンス ハンドルは、インスタンス、インスタンス所有者、インスタンス ロックなどのコマンドのコンテキストとサブジェクトを表すエンティティにバインドできます。</span><span class="sxs-lookup"><span data-stu-id="24008-117">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="24008-118">インスタンス ハンドルに対して一度に発行できるコマンドは 1 つだけです。</span><span class="sxs-lookup"><span data-stu-id="24008-118">Only one command may be issued against an instance handle at a time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual IAsyncResult BeginTryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.IAsyncResult BeginTryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginTryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function BeginTryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual IAsyncResult ^ BeginTryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="24008-119">インスタンス コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-119">The instance context.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="24008-120">実行する永続化コマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-120">The persistence command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="24008-121">コマンド実行のタイムアウト値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-121">The timeout value for the command execution.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="24008-122">非同期操作完了の通知を受信する非同期コールバック デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-122">The asynchronous callback delegate that receives notification of the completion of the asynchronous operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="24008-123">状態情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-123">The state information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-124">永続化プロバイダーはこのメソッドを実装して、特定の永続化コマンドを実行できるかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-124">A persistence provider implements this method, which determines whether a particular persistence command can be executed.</span>
          </span>
          <span data-ttu-id="24008-125">コマンドを実行できる場合は、コマンドを非同期で実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-125">If the command can be executed, executes the command asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-126">非同期操作の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-126">The state of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24008-127">コマンドを実行できる場合、永続化プロバイダーは InstancePersistenceContext 上の関連するメソッドを呼び出し、コマンドの結果を返します。</span><span class="sxs-lookup"><span data-stu-id="24008-127">If the command can be executed, the persistence provider calls relevant methods on the InstancePersistenceContext to provide the results of the command.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="24008-128">このメソッドとして宣言されていて`virtual`なく`abstract`実装はありません。</span><span class="sxs-lookup"><span data-stu-id="24008-128">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="24008-129">このメソッドは、機能を提供するためにオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="24008-129">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForEvents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForEvents (handle As InstanceHandle, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="24008-130">インスタンス ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-130">An instance handle.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="24008-131">操作がタイムアウトした後の期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-131">The period after which the operation times out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="24008-132">非同期操作が完了した後に呼び出されるメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-132">The method to be called after the asynchronous operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="24008-133">非同期操作に関連付けられたステータス情報を格納しているオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-133">An object containing the state information associated with the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-134">特定のインスタンス ハンドルのインスタンス ストアによって発生するイベントをリッスンする非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-134">Begins an asynchronous operation to listen for any events raised by the instance store for a specific instance handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-135">
            <see cref="T:System.IAsyncResult" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-135">Returns an <see cref="T:System.IAsyncResult" /> object..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceHandle">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="24008-136">インスタンス ハンドルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-136">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="24008-137">DefaultInstanceOwner を設定すると、値は新しいハンドルのインスタンス所有者として自動的にバインドされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-137">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle () As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24008-138">インスタンス ハンドルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-138">Creates an instance handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-139">インスタンス ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-139">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="24008-140">インスタンス識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-140">An instance identifier.</span>
          </span>
          <span data-ttu-id="24008-141">Guid.Empty にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-141">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-142">インスタンス ハンドルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-142">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="24008-143">DefaultInstanceOwner を設定すると、値は新しいハンドルのインスタンス所有者として自動的にバインドされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-143">If the DefaultInstanceOwner is set, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="24008-144">パラメーターとして渡されるインスタンス識別子は、新しいハンドルのインスタンスとして自動的にバインドされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-144">The instance identifier passed as a parameter is automatically bound as the new handle’s instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-145">インスタンス ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-145">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="24008-146">インスタンスの所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-146">The owner of an instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-147">インスタンス ハンドルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-147">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="24008-148">パラメーターとして渡されるインスタンス所有者が null でない場合、値は新しいハンドルのインスタンス所有者として自動的にバインドされます </span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-148">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="24008-149">(そうでない場合は、DefaultInstanceOwner が設定されていても、インスタンス所有者はバインドされません)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-149">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-150">インスタンス ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-150">The instance handle.</span>
          </span>
          <span data-ttu-id="24008-151">null 値は、新しいハンドルをインスタンス所有者に自動的にバインドしないことを示します。 </span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-151">A null value indicates that the new handle should not be automatically bound to an instance owner.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceHandle">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle (System.Runtime.DurableInstancing.InstanceOwner owner, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceHandle CreateInstanceHandle(class System.Runtime.DurableInstancing.InstanceOwner owner, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle(System.Runtime.DurableInstancing.InstanceOwner,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstanceHandle (owner As InstanceOwner, instanceId As Guid) As InstanceHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceHandle ^ CreateInstanceHandle(System::Runtime::DurableInstancing::InstanceOwner ^ owner, Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="24008-152">インスタンスの所有者を表す InstanceOwner オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-152">An InstanceOwner object  that represents the owner of an instance.</span>
          </span>
          <span data-ttu-id="24008-153">新しいハンドルをインスタンス所有者に自動的にバインドしないことを示すために、null をこのパラメーターの値として渡します。 </span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-153">Pass null as the value for this parameter to indicate that the new handle should not be automatically bound to an instance owner.</span>
          </span>
        </param>
        <param name="instanceId">
          <span data-ttu-id="24008-154">インスタンス識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-154">An instance identifier.</span>
          </span>
          <span data-ttu-id="24008-155">Guid.Empty にすることはできません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-155">Must not be Guid.Empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-156">インスタンス ハンドルを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-156">Creates an instance handle.</span>
          </span>
          <span data-ttu-id="24008-157">パラメーターとして渡されるインスタンス所有者が null でない場合、値は新しいハンドルのインスタンス所有者として自動的にバインドされます </span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-157">If the instance owner passed as a parameter is not null, the value is automatically bound as the new handle’s instance owner.</span>
          </span>
          <span data-ttu-id="24008-158">(そうでない場合は、DefaultInstanceOwner が設定されていても、インスタンス所有者はバインドされません)。パラメーターとして渡されるインスタンス識別子は、新しいハンドルのインスタンスとして自動的にバインドされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-158">(Otherwise, no instance owner is bound, even if DefaultInstanceOwner is set.) The instance identifier passed as a parameter is automatically bound as the new handle’s instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-159">インスタンス ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-159">The instance handle.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceOwner DefaultInstanceOwner" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.DurableInstancing.InstanceStore.DefaultInstanceOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultInstanceOwner As InstanceOwner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceOwner ^ DefaultInstanceOwner { System::Runtime::DurableInstancing::InstanceOwner ^ get(); void set(System::Runtime::DurableInstancing::InstanceOwner ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="24008-160">既定のインスタンス所有者を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-160">Gets or sets the default instance owner.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="24008-161">既定のインスタンス所有者です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-161">The default instance owner.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24008-162">一部のホストは、このプロパティを読み取って、使用するインスタンス所有者を推論します。</span><span class="sxs-lookup"><span data-stu-id="24008-162">Some hosts infer the instance owner to use by reading this property.</span></span> <span data-ttu-id="24008-163">WorkflowApplication では、このプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="24008-163">WorkflowApplication can use this property.</span></span> <span data-ttu-id="24008-164">WorkflowServiceHost では、このプロパティを使用しません。</span><span class="sxs-lookup"><span data-stu-id="24008-164">WorkflowServiceHost does not use this property.</span></span>  
  
 <span data-ttu-id="24008-165">DefaultInstanceOwner プロパティは、使用する必要がなくなったら null に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="24008-165">The DefaultInstanceOwner propery must be set to null when it is no longer necessary.</span></span> <span data-ttu-id="24008-166">DefaultInstanceOwner が null でない場合は、InstanceStore オブジェクトはガベージ コレクトされない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="24008-166">InstanceStore objects might not be garbage collected if DefaultInstanceOwner is not null.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="24008-167">このメソッドとして宣言されていて`virtual`なく`abstract`実装はありません。</span><span class="sxs-lookup"><span data-stu-id="24008-167">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="24008-168">このメソッドは、機能を提供するためにオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="24008-168">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndExecute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView EndExecute (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView EndExecute(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndExecute(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndExecute (result As IAsyncResult) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ EndExecute(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="24008-169">操作の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-169">The result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-170">非同期操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-170">Ends the asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-171">コマンドが正常に完了した後で、インスタンスの既知の状態を表す InstanceView オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-171">An InstanceView object  representing the known state of the instance after the successful completion of the command.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24008-172">BeginExecute がトランザクションの下で呼び出された場合、この状態にはコミットされていないデータを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="24008-172">If BeginExecute was called under a transaction, this state may include uncommitted data.</span></span> <span data-ttu-id="24008-173">トランザクションが正常にコミットされると、InstanceView オブジェクト内のデータはコミットされたと見なされます。</span><span class="sxs-lookup"><span data-stu-id="24008-173">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool EndTryCommand (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool EndTryCommand(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndTryCommand(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function EndTryCommand (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool EndTryCommand(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="24008-174">操作の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-174">The result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-175">非同期操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-175">Ends an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-176">永続化プロバイダーの実装は、BeginTryCommand メソッドに渡されるコマンドをサポートしない場合には false を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-176">A persistence provider implementation should return false if it doesn’t support the command passed to the BeginTryCommand method.</span>
          </span>
          <span data-ttu-id="24008-177">それ以外の場合は、true を返すか、例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-177">Otherwise it should return true or throw an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="24008-178">このメソッドとして宣言されていて`virtual`なく`abstract`実装はありません。</span><span class="sxs-lookup"><span data-stu-id="24008-178">Even though this method is declared as `virtual` rather than `abstract`, there is no implementation.</span></span> <span data-ttu-id="24008-179">このメソッドは、機能を提供するためにオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="24008-179">This method must be overridden in order to provide functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; EndWaitForEvents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.EndWaitForEvents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForEvents (result As IAsyncResult) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ EndWaitForEvents(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="24008-180">Begin メソッドによってクライアントに渡された IAsyncResult オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-180">An IAsyncResult object that was handed over to the client by the Begin method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-181">
            <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> メソッドによって開始される非同期操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-181">Ends the asynchronous operation initiated by the <see cref="M:System.Runtime.DurableInstancing.InstanceStore.BeginWaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-182">
            <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> オブジェクトの一覧を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-182">Returns a list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceView Execute (System.Runtime.DurableInstancing.InstanceHandle handle, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.DurableInstancing.InstanceView Execute(class System.Runtime.DurableInstancing.InstanceHandle handle, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.Execute(System.Runtime.DurableInstancing.InstanceHandle,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (handle As InstanceHandle, command As InstancePersistenceCommand, timeout As TimeSpan) As InstanceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::DurableInstancing::InstanceView ^ Execute(System::Runtime::DurableInstancing::InstanceHandle ^ handle, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="24008-183">インスタンス ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-183">An instance handle.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="24008-184">実行するコマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-184">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="24008-185">操作で使用するタイムアウト値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-185">The timeout value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-186">永続化コマンドを同期的に実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-186">Executes a persistence command synchronously.</span>
          </span>
          <span data-ttu-id="24008-187">永続化コマンドには、<see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" />、<see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" /> などがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-187">Examples of persistence commands are: <see cref="T:System.Activities.DurableInstancing.LoadWorkflowCommand" /> and <see cref="T:System.Activities.DurableInstancing.SaveWorkflowCommand" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-188">コマンドが正常に完了した後で、インスタンスの既知の状態を表す InstanceView オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-188">An InstanceView object representing the known state of the instance after the successful completion of the command.</span>
          </span>
          <span data-ttu-id="24008-189">Execute がトランザクションの下で呼び出された場合、この状態にはコミットされていないデータを含めることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-189">If Execute was called under a transaction, this state may include uncommitted data.</span>
          </span>
          <span data-ttu-id="24008-190">トランザクションが正常にコミットされると、InstanceView オブジェクト内のデータはコミットされたと見なされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-190">Once the transaction is committed successfully, the data in the InstanceView object can be considered committed</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24008-191">ホストは、<xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> メソッドを呼び出して、永続化コマンドをインスタンス ハンドルに対して実行します。ホストは、<xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> メソッドを呼び出して、このインスタンス ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="24008-191">A host calls the <xref:System.Runtime.DurableInstancing.InstanceStore.Execute%2A> method to execute a persistence command against an instance handle, which the host obtains by invoking the <xref:System.Runtime.DurableInstancing.InstanceStore.CreateInstanceHandle%2A> method.</span></span> <span data-ttu-id="24008-192">インスタンス ハンドルは、インスタンス、インスタンス所有者、インスタンス ロックなどのコマンドのコンテキストとサブジェクトを表すエンティティにバインドできます。</span><span class="sxs-lookup"><span data-stu-id="24008-192">The instance handle may be bound to entities that represent the context and subject of the command, such as an instance, instance owner, or instance lock.</span></span>  <span data-ttu-id="24008-193">インスタンス ハンドルに対して一度に発行できるコマンドは 1 つだけです。</span><span class="sxs-lookup"><span data-stu-id="24008-193">Only one command may be issued against an instance handle at a time.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="24008-194">このメソッドを実行すると場合、<xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>が自動的に作成、<xref:System.Runtime.DurableInstancing.InstanceOwner>インスタンスにバインドします。</span><span class="sxs-lookup"><span data-stu-id="24008-194">If this method is executed with a <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>, it will create an <xref:System.Runtime.DurableInstancing.InstanceOwner> and bind it to the instance.</span></span> <span data-ttu-id="24008-195">つまり、他のプロセスがれないことには、そのワークフローにアクセスできません。プロセスが終了した場合、ワークフローを回復または実行できません。</span><span class="sxs-lookup"><span data-stu-id="24008-195">This means that no other process will be able to access that workflow; if the process ends, the workflow cannot be recovered or executed.</span></span> <span data-ttu-id="24008-196">このようなワークフローをもう一度、実行した場合、<xref:System.Runtime.DurableInstancing.InstanceLockedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="24008-196">If such a workflow is executed again, a <xref:System.Runtime.DurableInstancing.InstanceLockedException> will be thrown.</span></span>  
>   
>  <span data-ttu-id="24008-197">場合<xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand>は使用しない、インスタンス ストアが作成されます、一時的な<xref:System.Runtime.DurableInstancing.InstanceOwner>プロセスの最後に削除されます。</span><span class="sxs-lookup"><span data-stu-id="24008-197">If <xref:System.Activities.DurableInstancing.CreateWorkflowOwnerCommand> is not used, the instance store will create a temporary <xref:System.Runtime.DurableInstancing.InstanceOwner> that will be deleted at the end of the process.</span></span> <span data-ttu-id="24008-198">ただし、終了した場合、プロセス、ワークフローの最後の永続化ポイントの前に、この例外がスローされますでの時間が指定されていない限り、 **HostLockRenewalPeriod**パラメーターの有効期限が切れました。</span><span class="sxs-lookup"><span data-stu-id="24008-198">However, if the process ends before the workflow’s final persistence point, this exception will be thrown, unless the period of time specified in the **HostLockRenewalPeriod** parameter has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents (System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstancePersistenceEvent[] GetEvents(class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetEvents(System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetEvents (owner As InstanceOwner) As InstancePersistenceEvent()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ GetEvents(System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstancePersistenceEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="owner">
          <span data-ttu-id="24008-199">インスタンスの所有者を表す <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-199">An <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object representing the owner of an instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-200">
            <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> オブジェクトにバインドされているシグナル状態のイベントをすべて取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-200">Gets all the signaled events bound to an <see cref="T:System.Runtime.DurableInstancing.InstanceOwner" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-201">
            <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> オブジェクトの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-201">Returns an array of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects..</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceOwners">
      <MemberSignature Language="C#" Value="protected System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Runtime.DurableInstancing.InstanceOwner[] GetInstanceOwners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.GetInstanceOwners" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInstanceOwners () As InstanceOwner()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; cli::array &lt;System::Runtime::DurableInstancing::InstanceOwner ^&gt; ^ GetInstanceOwners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceOwner[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="24008-202">有効なインスタンス ハンドルにバインドされている、またはガベージ コレクトされていない InstanceOwner オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-202">Gets each InstanceOwner object that is bound to a valid instance handle or has not been garbage collected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-203">インスタンスの所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-203">The owner of the instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24008-204">InstanceOwner オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="24008-204">Returns an array of InstanceOwner objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreeInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnFreeInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFreeInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle, object userContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnFreeInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFreeInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle, System::Object ^ userContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="userContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">
          <span data-ttu-id="24008-205">解放されたインスタンス ハンドルです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-205">The instance handle that was freed.</span>
          </span>
        </param>
        <param name="userContext">
          <span data-ttu-id="24008-206">OnNewInstanceHandle から返された永続化プロバイダーのユーザー コンテキスト情報。OnNewInstanceHandle がオーバーライドされない場合は null を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-206">The persistence provider’s user context information that was returned from OnNewInstanceHandle, or null if OnNewInstanceHandle is not overridden.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-207">インスタンス ハンドルが解放されると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-207">Invoked when an instance handle is freed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNewInstanceHandle">
      <MemberSignature Language="C#" Value="protected virtual object OnNewInstanceHandle (System.Runtime.DurableInstancing.InstanceHandle instanceHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnNewInstanceHandle(class System.Runtime.DurableInstancing.InstanceHandle instanceHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.OnNewInstanceHandle(System.Runtime.DurableInstancing.InstanceHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnNewInstanceHandle(System::Runtime::DurableInstancing::InstanceHandle ^ instanceHandle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceHandle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
      </Parameters>
      <Docs>
        <param name="instanceHandle">
          <span data-ttu-id="24008-208">インスタンス ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-208">An instance handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-209">新しいインスタンス ハンドルが作成されると呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-209">Invoked when a new instance handle is created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-210">オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-210">An object.</span>
          </span>
          <span data-ttu-id="24008-211">永続化プロバイダーは、ハンドルを使用してコマンドを実行する場合と、ハンドルが解放される場合に、このユーザー コンテキスト オブジェクトを使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-211">This user context object will be available to the persistence provider when commands are executed using the handle, and when the handle is freed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetEvent">
      <MemberSignature Language="C#" Value="protected void ResetEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.ResetEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="24008-212">前にシグナル状態になり、リセットされる永続性イベント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-212">The persistence event that was signaled earlier and to be reset.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="24008-213">永続性イベントに関連付けられているインスタンス所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-213">The instance owner associated with the persistence event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-214">シグナル状態のイベントをリセットし、イベントをインスタンス所有者で維持されるシグナル状態のイベントから削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-214">Resets the signaled event and removes the event from the signaled events list maintained by the instance owner.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignalEvent">
      <MemberSignature Language="C#" Value="protected void SignalEvent (System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, System.Runtime.DurableInstancing.InstanceOwner owner);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SignalEvent(class System.Runtime.DurableInstancing.InstancePersistenceEvent persistenceEvent, class System.Runtime.DurableInstancing.InstanceOwner owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.SignalEvent(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstanceOwner)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SignalEvent (persistenceEvent As InstancePersistenceEvent, owner As InstanceOwner)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SignalEvent(System::Runtime::DurableInstancing::InstancePersistenceEvent ^ persistenceEvent, System::Runtime::DurableInstancing::InstanceOwner ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistenceEvent" Type="System.Runtime.DurableInstancing.InstancePersistenceEvent" />
        <Parameter Name="owner" Type="System.Runtime.DurableInstancing.InstanceOwner" />
      </Parameters>
      <Docs>
        <param name="persistenceEvent">
          <span data-ttu-id="24008-215">シグナル状態に設定される永続性イベント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-215">The persistence event to be signaled.</span>
          </span>
        </param>
        <param name="owner">
          <span data-ttu-id="24008-216">インスタンスの所有者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-216">The instance owner.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-217">インスタンス ストアはこのメソッドを呼び出してイベントをシグナル状態にします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-217">An instance store invokes this method to signal an event.</span>
          </span>
          <span data-ttu-id="24008-218">この永続性イベントを定期受信するワークフロー ホストは、これを受信して適切なアクションを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-218">A workflow host that subscribes for this persistence event receives it and takes an appropriate action.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCommand">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryCommand (System.Runtime.DurableInstancing.InstancePersistenceContext context, System.Runtime.DurableInstancing.InstancePersistenceCommand command, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryCommand(class System.Runtime.DurableInstancing.InstancePersistenceContext context, class System.Runtime.DurableInstancing.InstancePersistenceCommand command, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.TryCommand(System.Runtime.DurableInstancing.InstancePersistenceContext,System.Runtime.DurableInstancing.InstancePersistenceCommand,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryCommand (context As InstancePersistenceContext, command As InstancePersistenceCommand, timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryCommand(System::Runtime::DurableInstancing::InstancePersistenceContext ^ context, System::Runtime::DurableInstancing::InstancePersistenceCommand ^ command, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.DurableInstancing.InstancePersistenceContext" />
        <Parameter Name="command" Type="System.Runtime.DurableInstancing.InstancePersistenceCommand" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="24008-219">インスタンス コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-219">The instance context.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="24008-220">実行するコマンド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-220">The command to be executed.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="24008-221">操作で使用するタイムアウト値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-221">Timeout value for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-222">永続化プロバイダーはこのメソッドを実装して、特定の永続化コマンドを実行できるかどうかを判断し、できる場合は非同期で実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-222">A persistence provider implements this method, which determines whether a particular persistence command can be executed and if the command can be executed executes it asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-223">永続化プロバイダーの実装は、パラメーターとして渡されるコマンドをサポートしない場合には <see langword="false" /> を返します。それ以外の場合は、<see langword="true" /> を返すか、例外をスローします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-223">A persistence provider implementation should return <see langword="false" /> if it doesn’t support the command passed as a parameter; otherwise it should return <see langword="true" /> or throw an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24008-224">コマンドを実行できる場合、永続化プロバイダーは <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> 上の関連するメソッドを呼び出し、コマンドの結果を返します。</span><span class="sxs-lookup"><span data-stu-id="24008-224">If the command can be executed, the persistence provider calls relevant methods on the <xref:System.Runtime.DurableInstancing.InstancePersistenceContext> to provide the results of the command.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForEvents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents (System.Runtime.DurableInstancing.InstanceHandle handle, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.List`1&lt;class System.Runtime.DurableInstancing.InstancePersistenceEvent&gt; WaitForEvents(class System.Runtime.DurableInstancing.InstanceHandle handle, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.DurableInstancing.InstanceStore.WaitForEvents(System.Runtime.DurableInstancing.InstanceHandle,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvents (handle As InstanceHandle, timeout As TimeSpan) As List(Of InstancePersistenceEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::List&lt;System::Runtime::DurableInstancing::InstancePersistenceEvent ^&gt; ^ WaitForEvents(System::Runtime::DurableInstancing::InstanceHandle ^ handle, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.DurableInstancing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Runtime.DurableInstancing.InstancePersistenceEvent&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.DurableInstancing.InstanceHandle" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="24008-225">イベントにバインドされているインスタンス ハンドル。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-225">The instance handle that is bound to the event.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="24008-226">待機操作がタイムアウトした後の時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-226">The time span after which the waiting operation times out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="24008-227">通常、ワークフロー ホストは、このメソッドを呼び出し、イベントがシングル状態になるまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-227">A workflow host typically invokes this method to wait for an event to be signaled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="24008-228">
            <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> オブジェクトの一覧。</span>
          <span class="sxs-lookup">
            <span data-stu-id="24008-228">A list of <see cref="T:System.Runtime.DurableInstancing.InstancePersistenceEvent" /> objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>