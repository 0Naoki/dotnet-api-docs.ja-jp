<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d439034d4f4c3638f04bec5e14c074ac5e104b9d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39867195" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>特定のブラウザーに対応するように Web ページを調整し、すべてのページ アダプターの直接または間接的な継承元となる基本クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter>クラスは、ブラウザー、ブラウザーで使用するマークアップ言語で定義されている (たとえば、HTML または XHTML) の特定のクラスの Web ページを適応する抽象クラス。 派生する特殊なテキスト ライター クラスにカプセル化できるレンダリング動作に適応性の多く、<xref:System.Web.UI.HtmlTextWriter>クラスのため、常にページ アダプターを指定する必要はありません。  
  
 派生ページ アダプターのほとんどのメンバーが呼び出される、<xref:System.Web.UI.Page>クラスまたはコントロール アダプター。 まず、<xref:System.Web.UI.Page>クラスまたはコントロール アダプター、派生ページ アダプターの存在を検出し、メンバーを呼び出してまたはページ アダプターが存在しない場合は、機能を提供します。  
  
 メンバー、<xref:System.Web.UI.Adapters.PageAdapter>クラスは、次の機能を提供します。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A>と<xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A>プロパティ定義の追加の HTTP ヘッダーと HTTP`GET`と`POST`キャッシュを変更するために使用するパラメーター。 キャッシュの初期化中に呼び出される、<xref:System.Web.UI.Page>クラス。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A>メソッドは、ページの合計の表示と制御の状態を維持するために使用できるオブジェクトを返します。 参照されている、<xref:System.Web.UI.Page.PageStatePersister%2A>派生ページ アダプターが存在する場合のプロパティ。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A>メソッドがスクリプト内のフォームの参照に使用できる DHTML のコードを提供します。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A>ページがポストバックの場合、メソッドはポストバック変数のコレクションを返します。 代わりに、.NET フレームワークによって呼び出された、<xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType>メソッド派生ページ アダプターが存在する場合。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>と<xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A>メソッドが派生ページ アダプターが存在する場合は、ハイパーリンクを表示するためにコントロール アダプターで使用されます。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>メソッドはハイパーリンクまたはフォームを送信できますポストバック クライアント タグをレンダリングします。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A>と<xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A>メソッドを使用して、もう一方を参照オプション ボタン コントロール アダプターによって<xref:System.Web.UI.WebControls.RadioButton>ラジオ ボタン グループ内のコントロール。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A>プロパティ、コントロールとビューの状態の組み合わせへのアクセスを提供する、<xref:System.Web.UI.Page>を介して、内部オブジェクト`ClientState`のプロパティ、<xref:System.Web.UI.Page>クラス。  
  
-   <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A>メソッドは、デバイス固有のテキスト変換を実行するコントロール アダプターによって使用されます。  
  
   
  
## Examples  
 次のコード例は、という名前のクラスを派生させる方法を示します`CustomPageAdapter`から、<xref:System.Web.UI.Adapters.PageAdapter>クラスし、オーバーライド、<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>メソッド。 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>メソッドは、という名前の属性を追加します。`src`をハイパーリンクに現在のページへの参照が含まれています。 ページに表示されるすべてのハイパーリンク`CustomPageAdapter`がアタッチされている必要があります、`src`属性。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Adapters.PageAdapter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework を構築しますこのアダプター内部的に対応する、作成時に<xref:System.Web.UI.Page>クラスまたは派生クラス。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この派生ページ アダプターが割り当てられた Web ページのキャッシュを変更する、追加の HTTP ヘッダーのリストを取得します。</summary>
        <value>HTTP ヘッダーのリストが格納されている <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web ページをキャッシュする Web 上のエンティティは、HTTP ヘッダーやその他の要因に基づいて、複数のバージョンをキャッシュします。 たとえば、バージョン、ページを生成する各言語がキャッシュされている通常のに基づいて、 `Accept-Language` HTTP ヘッダー。  
  
 特定のブラウザーでは、ターゲットに依存しないキャッシュを制御するだけでなく、ヘッダーの HTTP ヘッダーによってキャッシュを変更する必要がある場合があります。 たとえば、異なるバージョンのさまざまな画面サイズのページをキャッシュする必要があります。  
  
 によって返されるヘッダー名、<xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A>プロパティがヘッダーの一覧に追加されて、`Vary`クライアント ブラウザーに送信された HTTP ヘッダー。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />プロパティをターゲットに固有のキャッシュを制御する追加のヘッダーの一覧を返します。<see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />基本プロパティを返します。<see langword="null" />します。</para>
        </block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この派生ページ アダプターが割り当てられた Web ページのキャッシュを変更する、HTTP の GET 要求および POST 要求からの追加パラメーターのリストを取得します。</summary>
        <value>GET および POST のパラメーターのリストが格納されている <see cref="T:System.Collections.IList" />。それ以外の場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web ページのキャッシュが複数のバージョンをキャッシュする Web 上のエンティティに基づいて、その他の要因の間で要求のパラメーター。 たとえば、バージョン、ページを生成する可能性があります小売チェーン内で各ストアの場所は通常はキャッシュされますに基づいてのパラメーター名 (たとえば、 `StoreID`)。  
  
 特定のブラウザーでは、GET によってキャッシュを変更またはターゲットに依存しないキャッシュを制御するだけでなく、パラメーターのパラメーターを投稿する必要がある場合があります。 たとえば、さまざまな携帯電話サービス プロバイダーのさまざまなバージョンのページをキャッシュする必要があります。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />プロパティをターゲットに固有のキャッシュを制御する追加の GET または POST パラメーターの一覧を返します。<see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />基本メソッドを返します。<see langword="null" />します。</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この派生ページ アダプターが割り当てられた Web ページのビューとコントロールの状態データを含んだ、エンコード済みの文字列を取得します。</summary>
        <value>関連付けられた <see cref="T:System.String" /> 上のコントロールのビューとコントロールの状態の組み合わせを含んだ、エンコード済みの <see cref="T:System.Web.UI.Page" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A>プロパティは、内部へのアクセスを提供`ClientState`のプロパティ、<xref:System.Web.UI.Page>クラス。  
  
 によって保存された状態データを表示、<xref:System.Web.UI.PageStatePersister>オブジェクトは内部`ClientState`プロパティの<xref:System.Web.UI.Page>Web ページ上の隠しフィールドに保存常にします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドすることはできません、クラス、<see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" />プロパティではないため<see langword="virtual" />します。動作を変更する<see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" />、派生クラスで実装する新しい<see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" />を参照するプロパティ、<see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" />基底クラスのプロパティ。</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Web ページがポストバック中で、ポストバック変数の名前/値コレクションを返すかどうかを判断します。</summary>
        <returns>ポストバック変数の <see cref="T:System.Collections.Specialized.NameValueCollection" /> (存在する場合)。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A>メソッドは、次のコレクションのいずれかを返します。  
  
-   フォーム変数の場合は、HTTP データ転送メソッドが`POST`します。  
  
-   HTTP メソッドがある場合、クエリ文字列変数`GET`します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />ポストバック変数のコレクションのターゲット固有の処理を提供するメソッド。</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>要求に対して ASP.NET 要求の検証を実行せずに、POST また GET コマンドを使用して、ページにポストされたデータの名前と値のコレクションを返します。</summary>
        <returns>未検証フォーム データ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、<xref:System.Web.UnvalidatedRequestValues> クラスを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">送信されたフォームのクライアント ID を含んだ <see cref="T:System.String" />。</param>
        <summary>送信されたページ上のフォームを参照するためにクライアント ブラウザーが使用できる DHTML のコード片を返します。</summary>
        <returns>送信されたページ上のフォームの参照を持つ <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A>メソッドはポストバックのフォームに DHTML のリファレンスを提供します。 コード フラグメントでは、次の形式があります。  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />メソッドの場合は、アダプターによってサポートされるブラウザーのマークアップでは、ポストバックのフォームの参照の別の形式が必要です。たとえば、PocketPC ブラウザーで使用される HTML 3.2 の標準には、次の形式が必要です:<c>ドキュメント。</c><paramref name="formID" /></para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">取得する <see cref="T:System.String" /> グループの名前を示す <see cref="T:System.Web.UI.WebControls.RadioButton" />。</param>
        <summary>
          <paramref name="groupName" /> で指定したオプション ボタン コントロールのコレクションを取得します。</summary>
        <returns>
          <paramref name="groupName" /> を構成する <see cref="T:System.Collections.ICollection" /> コントロールの <see cref="T:System.Web.UI.WebControls.RadioButton" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ラジオ ボタン コントロール アダプターの使用、<xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A>と<xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A>メソッド、その他の参照を<xref:System.Web.UI.WebControls.RadioButton>グループ内のコントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールおよびビューステートを維持するために Web ページで使用されるオブジェクトを返します。</summary>
        <returns>
          <see cref="T:System.Web.UI.PageStatePersister" /> のコントロールとビューステートの組み合わせの作成と抽出をサポートする <see cref="T:System.Web.UI.Page" /> から派生したオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Page.PageStatePersister%2A>プロパティで使用、<xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A>から派生したオブジェクトを返すメソッドを<xref:System.Web.UI.PageStatePersister>クラスを形成し、ページのコントロールとビューの結合状態を抽出します。 ページに接続されている派生ページ アダプターが存在しない場合、<xref:System.Web.UI.HiddenFieldPageStatePersister>オブジェクトは、ページの非表示フィールドの状態を維持するために使用します。  
  
|リンクの種類|結果として得られるリンク|  
|---------------|--------------------|  
|コード エンティティの参照、cer|<xref:System.Char.ToString%2A>|  
|コード エンティティの参照を修飾、cerq|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|コード エンティティの参照を具体的には、cer|<xref:System.Char.ToString%28System.Char%29>|  
|コード エンティティの参照を修飾特定、cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>によって保存された状態データを表示、<see cref="T:System.Web.UI.PageStatePersister" />オブジェクトは内部<see langword="ClientState" />のプロパティ、 <see cref="T:System.Web.UI.Page" /> Web ページ上の隠しフィールドに保存常にします。</para>
        </block>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />メソッドを返す別の派生ページ状態 persister 場合 (たとえば、限られたリソース) が原因の隠しフィールドに結合された状態を維持することはできません。<see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />基本クラスを返します、<see cref="T:System.Web.UI.HiddenFieldPageStatePersister" />オブジェクト。使用することができます、<see cref="T:System.Web.UI.SessionPageStatePersister" />セッション状態のページの状態を維持するクラス。</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">コレクションに追加する <see cref="T:System.Web.UI.WebControls.RadioButton" />。</param>
        <summary>オプション ボタン コントロールを、指定したオプション ボタン グループのコレクションに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter>クラスで使用する<xref:System.Collections.Specialized.ListDictionary>ラジオ ボタン グループの一覧を保持するオブジェクト。 内の各要素<xref:System.Collections.Specialized.ListDictionary>のコレクションには、<xref:System.Web.UI.WebControls.RadioButton>ラジオ ボタン グループ内のコントロール。 <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A>メソッドを追加、<xref:System.Web.UI.WebControls.RadioButton>コントロールを適切なコレクションに存在していない場合、コレクションを作成し、作成<xref:System.Collections.Specialized.ListDictionary>場合がありますが登録済み<xref:System.Web.UI.WebControls.RadioButton>コントロール。  
  
 ラジオ ボタン コントロール アダプターの使用、<xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A>と<xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A>メソッド、その他の参照を<xref:System.Web.UI.WebControls.RadioButton>ラジオ ボタン グループ内のコントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>応答ストリームに対してハイパーリンクの開始タグをレンダリングします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力を表示するメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="targetUrl">リンクのターゲット URL を保持する <see cref="T:System.String" /> 値。</param>
        <param name="encodeUrl">
          <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> を使用してストリーム出力をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="softkeyLabel">ソフト キーのラベルとして使用する <see cref="T:System.String" /> 値。</param>
        <summary>応答ストリームに対して、ターゲット URL を含んだハイパーリンクの開始タグをレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>メソッドは、開始を書き込みます。 ハイパーリンク タグ。 ときに`writer`は<xref:System.Web.UI.HtmlTextWriter>、このタグは、次の形式。  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 次のコード例は、という名前のクラスを派生させる方法を示します`CustomPageAdapter`から、<xref:System.Web.UI.Adapters.PageAdapter>クラスし、オーバーライド、<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>メソッド。 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>メソッドは、という名前の属性を追加します。`src`をハイパーリンクに現在のページへの参照が含まれています。 ページに表示されるすべてのハイパーリンク`CustomPageAdapter`がアタッチされている必要があります、`src`属性。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />タグや属性を追加のタグを記述するのには、別の形式のハイパーリンクの開始を書き込みます。たとえば、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />基本メソッドの属性を書き込みません<paramref name="softkeyLabel" />します。</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力を表示するメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="targetUrl">リンクのターゲット URL を保持する <see cref="T:System.String" /> 値。</param>
        <param name="encodeUrl">
          <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> を使用してストリーム出力をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="softkeyLabel">ソフト キーのラベルとして使用する <see cref="T:System.String" /> 値。</param>
        <param name="accessKey">作成するリンクの <see langword="accessKey" /> 属性に割り当てる <see cref="T:System.String" /> 値。</param>
        <summary>応答ストリームに対して、ターゲット URL とアクセス キーを含んだハイパーリンクの開始タグをレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>メソッドは、開始を書き込みます。 ハイパーリンク タグ。 ときに`writer`は、<xref:System.Web.UI.HtmlTextWriter>のオブジェクト、このタグは、次の形式。  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 次のコード例は、という名前のクラスを派生させる方法を示します`CustomPageAdapter`から、<xref:System.Web.UI.Adapters.PageAdapter>クラスし、オーバーライド、<xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>メソッド。 <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> という名前の属性を追加します。`src`をハイパーリンクに現在のページへの参照が含まれています。 ページに表示されるすべてのハイパーリンク`CustomPageAdapter`がアタッチされている必要があります、`src`属性。  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessKey" /> が 1 文字を超えています。</exception>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />タグや属性を追加のタグを記述するのには、別の形式のハイパーリンクの開始を書き込みます。たとえば、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />基本メソッドの属性を書き込みません<paramref name="softkeyLabel" />します。</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力をレンダリングするメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>応答ストリームに対してハイパーリンクの終了タグをレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A>メソッドは、終了を書き込みます。 ハイパーリンク タグ。 テキスト ライターの場合は、<xref:System.Web.UI.HtmlTextWriter>のオブジェクト、このタグは、次の形式。  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />と<see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />メソッドとハイパーリンクの別の形式を表示する必要があります。</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ポストバック イベントを、必要なすべての引数を含めてリンクとして応答ストリームにレンダリングします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力を表示するメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="target">ポストバック イベントのターゲット名を保持する <see cref="T:System.String" /> 値。</param>
        <param name="argument">ポストバック ターゲット イベントに渡す引数を保持する <see cref="T:System.String" /> 値。</param>
        <param name="softkeyLabel">ソフト キーのラベルとして使用する <see cref="T:System.String" /> 値。</param>
        <param name="text">リンクとして表示するテキストの <see cref="T:System.String" /> 値。</param>
        <summary>ポストバック イベントをハイパーリンクとして応答ストリームにレンダリングします。これには、必要に応じて暗号化されたエンコード済みのビューステート、およびイベントのターゲットと引数も含まれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>メソッドは、スクリプトを持たないハイパーリンクとしてポストバック イベントを書き込みます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />メソッドの場合は、別の形式は、ポストバック イベントのハイパーリンクの必須またはブラウザーがその他の固有の要件に対応します。たとえば、一部のブラウザーでは、リンクが表示する場合は空にすることへのハイパーリンクのテキストが必要です。オーバーライドすることも<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />限られたリソースでは、URL パラメーターとしてビュー ステートも含めができない場合。<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />基本メソッドの属性を書き込みません<paramref name="softkeyLabel" />します。</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力を表示するメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="target">ポストバック イベントのターゲット名を保持する <see cref="T:System.String" /> 値。</param>
        <param name="argument">ポストバック ターゲット イベントに渡す引数を保持する <see cref="T:System.String" /> 値。</param>
        <param name="softkeyLabel">ソフト キーのラベルとして使用する <see cref="T:System.String" /> 値。</param>
        <param name="text">リンクとして表示するテキストの <see cref="T:System.String" /> 値。</param>
        <param name="postUrl">ポストバックの URL ターゲット ページを保持する <see cref="T:System.String" /> 値。</param>
        <param name="accessKey">作成されるリンクの <see langword="accessKey" /> 属性に割り当てるために使用する <see cref="T:System.String" /> 値。</param>
        <summary>ポストバック イベントをハイパーリンクとして応答ストリームにレンダリングします。これには、必要に応じて暗号化されたエンコード済みのビューステート、イベントのターゲットと引数、前回のページのパラメーター、およびアクセス キーも含まれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>可能性があるチャンクを含むメソッドは、スクリプトを持たないハイパーリンクとしてポストバック イベントを書き込みます<xref:System.Web.HttpUtility.UrlEncode%2A>ビュー ステート`__EVENTTARGET=target`、 `__EVENTARGUMENT=argument`、`__PREVIOUSPAGE=currentFilePath`パラメーター、および`accessKey="accessKey"`属性。  
  
 場合、ビュー ステートが暗号化されて、`enableViewStateMac`の属性、 [pages 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458)構成要素に設定されている`true`します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />メソッドの場合は、別の形式は、ポストバック イベントのハイパーリンクの必須またはブラウザーがその他の固有の要件に対応します。たとえば、一部のブラウザーでは、リンクが表示する場合は空にすることへのハイパーリンクのテキストが必要です。オーバーライドすることも<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />限られたリソースでは、URL パラメーターとしてビュー ステートも含めができない場合。<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />基本メソッドの属性を書き込みません<paramref name="softkeyLabel" />します。</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">ターゲット固有の出力を表示するメソッドを持つ <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="target">ポストバック イベントのターゲット名を保持する <see cref="T:System.String" /> 値。</param>
        <param name="argument">ポストバック ターゲット イベントに渡す引数を保持する <see cref="T:System.String" /> 値。</param>
        <param name="softkeyLabel">ソフト キーのラベルとして使用する <see cref="T:System.String" /> 値。</param>
        <param name="text">リンクとして表示するテキストの <see cref="T:System.String" /> 値。</param>
        <param name="postUrl">ポストバックの URL ターゲット ページを保持する <see cref="T:System.String" /> 値。</param>
        <param name="accessKey">作成されるリンクの <see langword="accessKey" /> 属性に割り当てる <see cref="T:System.String" /> 値。</param>
        <param name="encode">URL パラメーターの区切り記号として <c>&amp;amp;</c> を使用する場合は <see langword="true" />。<c>&amp;</c> を使用する場合は <see langword="false" />。</param>
        <summary>ポストバック イベントをハイパーリンクとして応答ストリームにレンダリングします。これには、エンコード済みのビューステート、イベントのターゲットと引数、前回のページのパラメーター、およびアクセス キーも含まれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A>可能性があるチャンクを含むメソッドは、スクリプトを持たないハイパーリンクとしてポストバック イベントを書き込みます<xref:System.Web.HttpUtility.UrlEncode%2A>ビュー ステート`__EVENTTARGET=target`、 `__EVENTARGUMENT=argument`、`__PREVIOUSPAGE=currentFilePath`パラメーター、および`accessKey="accessKey"`属性。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />メソッドの場合は、別の形式は、ポストバック イベントのハイパーリンクの必須またはブラウザーがその他の固有の要件に対応します。たとえば、一部のブラウザーでは、リンクが表示する場合は空にすることへのハイパーリンクのテキストが必要です。オーバーライドすることも<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />限られたリソースは、URL パラメーターとしてのビュー ステートを含むができない場合。<see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />基本メソッドの属性を書き込みません<paramref name="softkeyLabel" />します。</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">変換するテキストを表す <see cref="T:System.String" />。</param>
        <summary>対象ブラウザー用にテキストを変換します。</summary>
        <returns>変換するテキストを格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A>メソッドができますが、たとえば、タブ文字を変換する (`\t`) 改行に (`\n`)。  
  
 <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A>基本メソッドを返します。`text`変更されません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.Web.UI.Adapters.PageAdapter" />オーバーライドするクラス、<see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />特定のマークアップに標準の HTML からさまざまなフォームのコンス トラクターがある場合。たとえば、ブラウザーが HTML では、使用されるものよりもタグの異なる識別子を必要とする場合<see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />メソッドをオーバーライドしてそのタグを検索し、変更することができます。</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>