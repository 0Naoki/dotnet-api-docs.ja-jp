<Type Name="CryptoProvider" FullName="System.Security.RightsManagement.CryptoProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da52c0cce7a5105634c3fc618994d9c5b805aba0" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55407873" /></Metadata><TypeSignature Language="C#" Value="public class CryptoProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.CryptoProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoProvider : IDisposable" />
  <TypeSignature Language="F#" Value="type CryptoProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3c9b4-101">保護されたコンテンツを暗号化および復号化するデジタル著作権管理サービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-101">Provides digital rights management services for encrypting and decrypting protected content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c9b4-102"><xref:System.Security.RightsManagement.CryptoProvider> 結果として作成、<xref:System.Security.RightsManagement.UseLicense.Bind%2A>管理権限をバインドする場合、メソッド<xref:System.Security.RightsManagement.UseLicense>を<xref:System.Security.RightsManagement.SecureEnvironment>します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-102"><xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>.</span></span>  
  
 <span data-ttu-id="3c9b4-103">他の同様<xref:System.Security.RightsManagement>型、<xref:System.Security.RightsManagement.CryptoProvider>は完全信頼アプリケーションで使用できるのみです。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-103">As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c9b4-104">次の例は、使用する方法を示します、<xref:System.Security.RightsManagement.CryptoProvider>クラスを作成する、<xref:System.IO.Packaging.EncryptedPackageEnvelope>します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-104">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider> class to create an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.RightsManagement.UseLicense" />
    <altmember cref="T:System.Security.RightsManagement.SecureEnvironment" />
  </Docs>
  <Members>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int" Usage="System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c9b4-105">暗号ブロック サイズ (バイト単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-105">Gets the cipher block size, in bytes.</span></span></summary>
        <value><span data-ttu-id="3c9b4-106">暗号ブロック サイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-106">The cipher block size, in bytes.</span></span>  <span data-ttu-id="3c9b4-107">既定のブロック サイズの Advanced Encryption Standard (AES) は、8 です。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-107">The default block size for Advanced Encryption Standard (AES) is 8.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c9b4-108">`clearText`と`cipherText`に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>と<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>n \* する必要があります<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>バイトの長さ、場所 'n' は 1 以上の整数です。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-108">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="3c9b4-109">場合<xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>は`false`に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>に渡されるバッファーとして、同じ長さをする必要があります<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-109">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="3c9b4-110">場合<xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>は`true`に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>に渡されるバッファーからのさまざまな長さにできます<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>(すべてのバッファー サイズの倍数である必要がありますも常に<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>バイトの長さ)。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-110">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 <span data-ttu-id="3c9b4-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 1 の暗号ストリーム暗号は、ことを示します。 つまり、 <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 2 以上のブロック暗号を示します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c9b4-112">次の例は、使用する方法を示します、<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>クリア テキスト データを暗号化されたテキスト データに変換するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-112">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property in converting clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundGrants">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentGrant&gt; BoundGrants" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundGrants As ReadOnlyCollection(Of ContentGrant)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ BoundGrants { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundGrants : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;" Usage="System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c9b4-113">検証に合格し、ユーザーに付与される権限の一覧を示すコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-113">Gets a collection listing the rights that passed verification and that are granted to the user.</span></span></summary>
        <value><span data-ttu-id="3c9b4-114">検証に合格し、ユーザーに付与される権限を列挙するコレクション。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-114">A collection enumerating the rights that passed verification and that are granted to the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c9b4-115">次の例は、使用する方法を示します、<xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A>を通じて付与された権限の一覧を取得するプロパティ、<xref:System.Security.RightsManagement.UseLicense>します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-115">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> property to obtain a list rights granted through a <xref:System.Security.RightsManagement.UseLicense>.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDecrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDecrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDecrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c9b4-116">ユーザーが復号化の権限を持っているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-116">Gets a value that indicates whether the user has rights to decrypt.</span></span></summary>
        <value><span data-ttu-id="3c9b4-117"><see langword="true" /> 場合、 <see cref="T:System.Security.RightsManagement.UseLicense" /> ; の暗号化を解除するユーザーの権限が付与それ以外の場合、<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-117"><see langword="true" /> if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to decrypt; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c9b4-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> 返します`true`場合、<xref:System.Security.RightsManagement.UseLicense>これにバインドされている<xref:System.Security.RightsManagement.CryptoProvider>ユーザーの表示、編集、印刷、または所有者などの読み取りアクセス権を付与します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns `true` if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user read access rights such as View, Edit, Print, or Owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c9b4-119">次の例は、使用する方法を示します、<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A>復号化が許可されているかどうかを決定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-119">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> property to determine if decryption is allowed.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEncrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEncrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEncrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c9b4-120">ユーザーが暗号化の権限を持っているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-120">Gets a value that indicates whether the user has rights to encrypt.</span></span></summary>
        <value><span data-ttu-id="3c9b4-121"><see langword="true" /> 場合、 <see cref="T:System.Security.RightsManagement.UseLicense" /> ; の暗号化にユーザー権限が付与それ以外の場合、<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-121"><see langword="true" /> if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to encrypt; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c9b4-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> 返します`true`場合、<xref:System.Security.RightsManagement.UseLicense>これにバインドされている<xref:System.Security.RightsManagement.CryptoProvider>ユーザーの編集や所有者などの書き込みアクセス権を付与します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns `true` if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user write access rights such as Edit or Owner.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanMergeBlocks">
      <MemberSignature Language="C#" Value="public bool CanMergeBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMergeBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMergeBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMergeBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMergeBlocks : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3c9b4-123"><see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> および <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> が異なる長さのブロック サイズのバッファーを受け入れることができるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-123">Gets a value that indicates whether <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> can accept buffers that are different block sizes in length.</span></span></summary>
        <value><span data-ttu-id="3c9b4-124"><see langword="true" /> 渡されたバッファー場合<see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />に渡されたバッファーからのさまざまな長さにできます<see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />、それ以外の<see langword="false" />に渡されたバッファー場合<see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />と<see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />正確な同じ長さである必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-124"><see langword="true" /> if the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> can be a different length from the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; otherwise, <see langword="false" /> if the buffers passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> must be the exact same length.</span></span>  <span data-ttu-id="3c9b4-125">既定では AES<see langword="true" />します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-125">For AES the default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c9b4-126">`clearText`と`cipherText`に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>と<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>n \* する必要があります<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>バイトの長さ、場所 'n' は 1 以上の整数です。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-126">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="3c9b4-127">場合<xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>は`false`に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>に渡されるバッファーとして、同じ長さをする必要があります<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-127">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="3c9b4-128">場合<xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>は`true`に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>に渡されるバッファーからのさまざまな長さにできます<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>(すべてのバッファー サイズの倍数である必要がありますも常に<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>バイトの長さ)。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-128">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] cryptoText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] cryptoText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (cryptoText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ cryptoText);" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Decrypt cryptoText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cryptoText"><span data-ttu-id="3c9b4-129">復号化する暗号テキスト。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-129">The cipher text to decrypt.</span></span></param>
        <summary><span data-ttu-id="3c9b4-130">暗号テキストをクリア テキストに復号化します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-130">Decrypts cipher text to clear text.</span></span></summary>
        <returns><span data-ttu-id="3c9b4-131"><paramref name="cryptoText" /> の復号化されたクリア テキスト。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-131">The decrypted clear text of <paramref name="cryptoText" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3c9b4-132">次の例は、使用する方法を示します、<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>暗号化されていないデータに暗号化されたデータを変換するメソッド。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-132">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> method to convert encrypted data to unencrypted data.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]
 [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c9b4-133"><paramref name="cipherText" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-133"><paramref name="cipherText" /> is null.</span></span></exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException"><span data-ttu-id="3c9b4-134">復号化の権限が付与されていません。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-134">Decryption right not granted.</span></span></exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3c9b4-135"><see cref="T:System.Security.RightsManagement.CryptoProvider" /> で使用したリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-135">Releases the resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cryptoProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c9b4-136"><see cref="T:System.Security.RightsManagement.CryptoProvider" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-136">Releases all resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c9b4-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> 実行<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`true`)。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`true`).</span></span>  
  
 <span data-ttu-id="3c9b4-138"><xref:System.Security.RightsManagement.CryptoProvider> を使い終わったら、<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-138">Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="3c9b4-139"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>メソッドによって、<xref:System.Security.RightsManagement.CryptoProvider> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-139">The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state.</span></span> <span data-ttu-id="3c9b4-140"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>呼び出し後は、<xref:System.Security.RightsManagement.CryptoProvider>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Security.RightsManagement.CryptoProvider> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-140">After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying.</span></span> <span data-ttu-id="3c9b4-141">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3c9b4-142"><xref:System.Security.RightsManagement.CryptoProvider>への最後の参照を解放する前に、必ず<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-142">Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="3c9b4-143">そうしないと、ガベージ コレクターが <xref:System.Security.RightsManagement.CryptoProvider> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cryptoProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="3c9b4-144">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-144"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="3c9b4-145"><see cref="T:System.Security.RightsManagement.CryptoProvider" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-145">Releases the unmanaged resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c9b4-146">このメソッドは、パブリック`Dispose()`メソッドと<xref:System.Object.Finalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-146">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="3c9b4-147">`Dispose()` 保護された起動`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-147">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="3c9b4-148"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`に設定`false`します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="3c9b4-149">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Security.RightsManagement.CryptoProvider>参照。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-149">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references.</span></span> <span data-ttu-id="3c9b4-150">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-150">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="3c9b4-151">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-151">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="3c9b4-152">オーバーライドするときに<see langword="Dispose(Boolean)" />の事前に呼び出したで以前破棄されたオブジェクトを参照しないように注意する<see langword="Dispose" />します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-152">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="3c9b4-153">実装する方法についての詳細は<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-153">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="3c9b4-154">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-154">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] clearText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] clearText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (clearText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ clearText);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Encrypt clearText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="clearText"><span data-ttu-id="3c9b4-155">暗号化するクリア テキスト コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-155">The clear text content to encrypt.</span></span></param>
        <summary><span data-ttu-id="3c9b4-156">クリア テキストを暗号化テキストに暗号化します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-156">Encrypts clear text to cipher text.</span></span></summary>
        <returns><span data-ttu-id="3c9b4-157">指定された <paramref name="clearText" /> の暗号化済みの暗号化テキスト。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-157">Encrypted cipher text of the given <paramref name="clearText" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c9b4-158">バイト長、`clearText`バッファーは、暗号の倍数である必要があります<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-158">The byte length of the `clearText` buffer should be a multiple of the cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property.</span></span>  
  
 <span data-ttu-id="3c9b4-159">デジタル著作権管理システムでは、AES のブロック暗号を使用します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-159">The digital rights management system uses AES block cipher.</span></span>  <span data-ttu-id="3c9b4-160">AES でブロックが暗号化されていない個別に 2 つの同一の平文ブロックは、同一の暗号テキストの結果を生成するようです。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-160">With AES, blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.</span></span>  <span data-ttu-id="3c9b4-161">独立したブロック暗号化から潜在的な復号化の脅威を最小限に抑えるには、アプリケーションが同一の平文ブロックの暗号化を回避するために、圧縮などのコンテンツを変更する方法を採用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-161">To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3c9b4-162">次の例は、使用する方法を示します、<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>クリア テキスト データを暗号化されたテキスト データに変換します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-162">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> method to convert clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3c9b4-163"><paramref name="clearText" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-163"><paramref name="clearText" /> is null.</span></span></exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException"><span data-ttu-id="3c9b4-164">暗号化は許可されていません。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-164">Encryption is not permitted.</span></span></exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cryptoProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3c9b4-165">インスタンスがガベージ コレクションによって回収される前にリソースを解放し、内部クリーンアップを実行します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-165">Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c9b4-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> 実行<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`false`)。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`false`).</span></span>  
  
 <span data-ttu-id="3c9b4-167">このメソッドは<xref:System.Object.Finalize%2A>します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-167">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="3c9b4-168">アプリケーション コードは、このメソッドを呼び出さないでください。オブジェクトの`Finalize`への呼び出しによって、ガベージ コレクターによって終了処理が無効になっている場合を除き、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-168">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="3c9b4-169">詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)、および[Finalize メソッドをオーバーライドする](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))します。</span><span class="sxs-lookup"><span data-stu-id="3c9b4-169">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>