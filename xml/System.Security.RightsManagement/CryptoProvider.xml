<Type Name="CryptoProvider" FullName="System.Security.RightsManagement.CryptoProvider">
  <TypeSignature Language="C#" Value="public class CryptoProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.CryptoProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoProvider : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1ccd-101">保護されたコンテンツを暗号化および復号化するデジタル著作権管理サービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-101">Provides digital rights management services for encrypting and decrypting protected content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1ccd-102"><xref:System.Security.RightsManagement.CryptoProvider> 結果として作成された、<xref:System.Security.RightsManagement.UseLicense.Bind%2A>メソッドは管理されている、権限のバインドと<xref:System.Security.RightsManagement.UseLicense>を<xref:System.Security.RightsManagement.SecureEnvironment>です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-102"><xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>.</span></span>  
  
 <span data-ttu-id="a1ccd-103">その他の同様<xref:System.Security.RightsManagement>型、<xref:System.Security.RightsManagement.CryptoProvider>は完全信頼アプリケーションで使用できるのみです。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-103">As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1ccd-104">次の例を使用する方法を示しています、<xref:System.Security.RightsManagement.CryptoProvider>クラスを作成する、<xref:System.IO.Packaging.EncryptedPackageEnvelope>です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-104">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider> class to create an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.RightsManagement.UseLicense" />
    <altmember cref="T:System.Security.RightsManagement.SecureEnvironment" />
  </Docs>
  <Members>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1ccd-105">暗号ブロック サイズ (バイト単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-105">Gets the cipher block size, in bytes.</span></span></summary>
        <value><span data-ttu-id="a1ccd-106">暗号ブロック サイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-106">The cipher block size, in bytes.</span></span>  <span data-ttu-id="a1ccd-107">既定のブロック サイズの高度暗号化標準 (AES) は 8 です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-107">The default block size for Advanced Encryption Standard (AES) is 8.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1ccd-108">`clearText`と`cipherText`に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>と<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>n \* する必要があります<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>バイトの長さ、場所 'n' より大きいかを 1 に等しい整数値は、します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-108">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="a1ccd-109">場合<xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>は`false`に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>に渡されるバッファーとして同じ長さにする必要があります<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-109">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="a1ccd-110">場合<xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>は`true`に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>に渡されるバッファーから別の長さを指定できます<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>(すべてのバッファー サイズの倍数である必要がありますが常に<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>バイトの長さ)。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-110">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 <span data-ttu-id="a1ccd-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 1 のことを示します、暗号ストリーム暗号; <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 2 以上のブロック暗号を示します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1ccd-112">次の例を使用する方法を示しています、<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>クリア テキスト データを暗号化テキスト データに変換するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-112">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property in converting clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundGrants">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentGrant&gt; BoundGrants" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundGrants As ReadOnlyCollection(Of ContentGrant)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ BoundGrants { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1ccd-113">検証に合格し、ユーザーに付与される権限の一覧を示すコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-113">Gets a collection listing the rights that passed verification and that are granted to the user.</span></span></summary>
        <value><span data-ttu-id="a1ccd-114">検証に合格し、ユーザーに付与される権限を列挙するコレクション。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-114">A collection enumerating the rights that passed verification and that are granted to the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1ccd-115">次の例を使用する方法を示しています、<xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A>を通じて付与された権限の一覧を取得するプロパティ、<xref:System.Security.RightsManagement.UseLicense>です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-115">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> property to obtain a list rights granted through a <xref:System.Security.RightsManagement.UseLicense>.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDecrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDecrypt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1ccd-116">ユーザーが復号化の権限を持っているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-116">Gets a value that indicates whether the user has rights to decrypt.</span></span></summary>
        <value><span data-ttu-id="a1ccd-117">**true**場合、 <see cref="T:System.Security.RightsManagement.UseLicense" /> ; の暗号化を解除するユーザー権限を付与それ以外の場合、 **false**です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-117">**true** if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to decrypt; otherwise, **false**.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1ccd-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> 返します**true**場合、<xref:System.Security.RightsManagement.UseLicense>をこのバインド<xref:System.Security.RightsManagement.CryptoProvider>表示、編集、印刷、または所有者などの読み取りアクセス権をユーザーに付与します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user read access rights such as View, Edit, Print, or Owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1ccd-119">次の例を使用する方法を示しています、<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A>復号化が許可されたかどうかを決定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-119">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> property to determine if decryption is allowed.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEncrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEncrypt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1ccd-120">ユーザーが暗号化の権限を持っているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-120">Gets a value that indicates whether the user has rights to encrypt.</span></span></summary>
        <value><span data-ttu-id="a1ccd-121">**true**場合、 <see cref="T:System.Security.RightsManagement.UseLicense" /> ; の暗号化にユーザー権限を付与それ以外の場合、 **false**です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-121">**true** if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to encrypt; otherwise, **false**.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1ccd-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> 返します**true**場合、<xref:System.Security.RightsManagement.UseLicense>をこのバインド<xref:System.Security.RightsManagement.CryptoProvider>編集または所有者などの書き込みアクセス権をユーザーに付与します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user write access rights such as Edit or Owner.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanMergeBlocks">
      <MemberSignature Language="C#" Value="public bool CanMergeBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMergeBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMergeBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMergeBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1ccd-123"><see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> および <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> が異なる長さのブロック サイズのバッファーを受け入れることができるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-123">Gets a value that indicates whether <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> can accept buffers that are different block sizes in length.</span></span></summary>
        <value><span data-ttu-id="a1ccd-124">**true**に渡されたバッファー場合<see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />に渡されたバッファーから別の長さを指定できます<see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />、それ以外の**false**に渡されたバッファー場合<see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />と<see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />正確なである必要があります同じ長さです。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-124">**true** if the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> can be a different length from the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; otherwise, **false** if the buffers passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> must be the exact same length.</span></span>  <span data-ttu-id="a1ccd-125">既定では AES **true**です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-125">For AES the default is **true**.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1ccd-126">`clearText`と`cipherText`に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>と<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>n \* する必要があります<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>バイトの長さ、場所 'n' より大きいかを 1 に等しい整数値は、します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-126">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="a1ccd-127">場合<xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>は**false**に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>に渡されるバッファーとして同じ長さにする必要があります<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-127">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **false**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="a1ccd-128">場合<xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A>は**true**に渡されるバッファー<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>に渡されるバッファーから別の長さを指定できます<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>(すべてのバッファー サイズの倍数である必要がありますが常に<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>バイトの長さ)。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-128">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **true**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] cryptoText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] cryptoText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (cryptoText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ cryptoText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cryptoText"><span data-ttu-id="a1ccd-129">復号化する暗号テキスト。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-129">The cipher text to decrypt.</span></span></param>
        <summary><span data-ttu-id="a1ccd-130">暗号テキストをクリア テキストに復号化します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-130">Decrypts cipher text to clear text.</span></span></summary>
        <returns><span data-ttu-id="a1ccd-131"><paramref name="cryptoText" /> の復号化されたクリア テキスト。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-131">The decrypted clear text of <paramref name="cryptoText" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a1ccd-132">次の例を使用する方法を示しています、<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>暗号化されたデータを暗号化されていないデータに変換します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-132">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> method to convert encrypted data to unencrypted data.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]
 [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1ccd-133"><paramref name="cipherText" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-133"><paramref name="cipherText" /> is null.</span></span></exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException"><span data-ttu-id="a1ccd-134">復号化の権限が付与されていません。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-134">Decryption right not granted.</span></span></exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1ccd-135">
          <see cref="T:System.Security.RightsManagement.CryptoProvider" /> で使用したリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-135">Releases the resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1ccd-136">
          <see cref="T:System.Security.RightsManagement.CryptoProvider" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-136">Releases all resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1ccd-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> 実行<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**)。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**).</span></span>  
  
 <span data-ttu-id="a1ccd-138"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> を使い終わったら <xref:System.Security.RightsManagement.CryptoProvider> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-138">Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="a1ccd-139"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> メソッドによって、<xref:System.Security.RightsManagement.CryptoProvider> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-139">The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state.</span></span> <span data-ttu-id="a1ccd-140">呼び出した後<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Security.RightsManagement.CryptoProvider>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Security.RightsManagement.CryptoProvider>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-140">After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying.</span></span> <span data-ttu-id="a1ccd-141">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1ccd-142"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Security.RightsManagement.CryptoProvider> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-142">Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="a1ccd-143">そうしないと、ガベージ コレクターが <xref:System.Security.RightsManagement.CryptoProvider> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a1ccd-144">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-144"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a1ccd-145"><see cref="T:System.Security.RightsManagement.CryptoProvider" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-145">Releases the unmanaged resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1ccd-146">このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-146">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="a1ccd-147">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-147">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a1ccd-148"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a1ccd-149">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Security.RightsManagement.CryptoProvider>参照します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-149">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references.</span></span> <span data-ttu-id="a1ccd-150">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-150">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a1ccd-151"><see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-151"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="a1ccd-152">オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-152">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="a1ccd-153">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-153">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="a1ccd-154">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-154">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] clearText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] clearText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (clearText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ clearText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="clearText"><span data-ttu-id="a1ccd-155">暗号化するクリア テキスト コンテンツ。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-155">The clear text content to encrypt.</span></span></param>
        <summary><span data-ttu-id="a1ccd-156">クリア テキストを暗号化テキストに暗号化します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-156">Encrypts clear text to cipher text.</span></span></summary>
        <returns><span data-ttu-id="a1ccd-157">指定された <paramref name="clearText" /> の暗号化済みの暗号化テキスト。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-157">Encrypted cipher text of the given <paramref name="clearText" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1ccd-158">バイト長、`clearText`バッファーは、暗号の倍数である必要があります<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-158">The byte length of the `clearText` buffer should be a multiple of the cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property.</span></span>  
  
 <span data-ttu-id="a1ccd-159">デジタル著作権管理システムでは、AES ブロック暗号を使用します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-159">The digital rights management system uses AES block cipher.</span></span>  <span data-ttu-id="a1ccd-160">AES でブロックが暗号化されていない個別に同じクリア テキストの 2 つのブロックが同一の暗号テキストの結果を生成するようです。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-160">With AES, blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.</span></span>  <span data-ttu-id="a1ccd-161">独立したブロック暗号化からの復号化脅威を最小限に抑えるにアプリケーションが同じクリア テキストのブロックの暗号化を回避する、圧縮などのコンテンツを変更する方法を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-161">To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1ccd-162">次の例を使用する方法を示しています、<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A>クリア テキスト データを暗号化テキストのデータに変換します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-162">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> method to convert clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1ccd-163"><paramref name="clearText" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-163"><paramref name="clearText" /> is null.</span></span></exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException"><span data-ttu-id="a1ccd-164">暗号化は許可されていません。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-164">Encryption is not permitted.</span></span></exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoProvider ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1ccd-165">インスタンスがガベージ コレクションによって回収される前にリソースを解放し、内部クリーンアップを実行します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-165">Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1ccd-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> 実行<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**)。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**).</span></span>  
  
 <span data-ttu-id="a1ccd-167">このメソッドは<xref:System.Object.Finalize%2A>します。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-167">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="a1ccd-168">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの`Finalize`への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-168">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="a1ccd-169">詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)、および[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span><span class="sxs-lookup"><span data-stu-id="a1ccd-169">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>