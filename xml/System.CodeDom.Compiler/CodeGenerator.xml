<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeGenerator.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50a1be4859a7f2562cfa49ea1c2b7933e269d168d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a1be4859a7f2562cfa49ea1c2b7933e269d168d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>Provides an example implementation of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.ICodeGenerator" /&gt;</ph> インターフェイスの実装例を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This class is abstract.</source>
          <target state="translated">このクラスは抽象クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This is a useful base class for code generators to derive from.</source>
          <target state="translated">これは、基本クラスから派生するコード ジェネレーターのです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>Code generators are capable of rendering source code in a specific language according to the structure of a Code Document Object Model (CodeDOM) graph.</source>
          <target state="translated">コード ジェネレーターは Code Document Object Model (CodeDOM) のグラフの構造に従って、特定の言語でのソース コードを表示できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This class provides many functions and methods to generate specific types of code from a CodeDOM graph.</source>
          <target state="translated">このクラスは、多くの関数と CodeDOM グラフから特定の種類のコードを生成するメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可がない場合にスローされます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
          <target state="translated">セキュリティ要求の詳細については、「<bpt id="p1">[</bpt>リンク確認要求<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>と<bpt id="p2">[</bpt>継承確認要求<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">このクラスは、部分的に信頼されたコードでは使用できません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">部分信頼コードでこのクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGenerator" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CodeGenerator" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.#ctor">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.#ctor">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">このクラスは、部分的に信頼されたコードでは使用できません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)">
          <source>The string to write on the new line.</source>
          <target state="translated">新しい行に書き込まれる文字列。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)">
          <source>Generates a line-continuation character and outputs the specified string on a new line.</source>
          <target state="translated">行連結文字を生成し、指定した文字列を新しい行に出力します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)">
          <source>When implementing a code generator for a language that supports a line-continuation character (for example, Visual Basic), this method should output the line-continuation character before it outputs a newline character.</source>
          <target state="translated">行連結文字 (たとえば、Visual Basic) をサポートする言語のコード ジェネレーターを実装するときにこのメソッドは改行文字を出力する前に行連結文字を出力する必要があります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>The string to create an escaped identifier for.</source>
          <target state="translated">エスケープ識別子を作成する対象の文字列。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>Creates an escaped identifier for the specified value.</source>
          <target state="translated">指定した値のエスケープ識別子を作成します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>The escaped identifier for the value.</source>
          <target state="translated">その値のエスケープ識別子。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier%2A&gt;</ph> tests whether the identifier conflicts with reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier%2A&gt;</ph> 識別子が予約されていると競合しているかどうかをテストまたは言語のキーワードを場合は、言語固有のエスケープ コードの書式設定と同じ名前を返します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>The returned name is referred to an escaped identifier.</source>
          <target state="translated">返される名前は、エスケープされた識別子に呼ばれます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>The escaped identifier contains the same <ph id="ph1">`value`</ph> but includes escape code formatting to differentiate it from conflicting keywords.</source>
          <target state="translated">エスケープされた識別子を含む同じ<ph id="ph1">`value`</ph>競合するキーワードを区別するためにエスケープ コードの書式が含まれます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>For example, <ph id="ph1">`value`</ph> could be preceded by an at sign ("@") or delimited by square brackets ("[" and "]") to create an escaped identifier.</source>
          <target state="translated">たとえば、<ph id="ph1">`value`</ph>前にすることが、アット マーク ("@") または角かっこで区切られます ("["と"]")、エスケープされた識別子を作成します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
          <source>The default implementation of this method does nothing.</source>
          <target state="translated">このメソッドの既定の実装では、何も行われません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>A string to create a valid identifier for.</source>
          <target state="translated">有効な識別子を作成する対象の文字列。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>Creates a valid identifier for the specified value.</source>
          <target state="translated">指定した値の有効な識別子を作成します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>A valid identifier for the value.</source>
          <target state="translated">その値の有効な識別子。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier%2A&gt;</ph> tests whether the identifier conflicts with reserved or language keywords, and if so, returns a valid identifier name that does not conflict.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier%2A&gt;</ph> 識別子が予約されていると競合しているかどうかをテストまたは言語のキーワードを場合は、競合しないように、有効な識別子名を返します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>The returned identifier contains the same <ph id="ph1">`value`</ph> but includes escape code formatting to differentiate it from conflicting keywords.</source>
          <target state="translated">返される識別子を含む同じ<ph id="ph1">`value`</ph>競合するキーワードを区別するためにエスケープ コードの書式が含まれます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>Typically, if the value requires modification, it is preceded by an underscore "_".</source>
          <target state="translated">通常、値に変更が必要な場合が付加されて、アンダー スコア「_」。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
          <source>The default implementation of this method does nothing.</source>
          <target state="translated">このメソッドの既定の実装では、何も行われません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentClass">
          <source>Gets the code type declaration for the current class.</source>
          <target state="translated">現在のクラスのコード型宣言を取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentClass">
          <source>The code type declaration for the current class.</source>
          <target state="translated">現在のクラスのコード型宣言。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentMember">
          <source>Gets the current member of the class.</source>
          <target state="translated">クラスの現在のメンバーを取得します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentMember">
          <source>The current member of the class.</source>
          <target state="translated">クラスの現在のメンバー。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentMemberName">
          <source>Gets the current member name.</source>
          <target state="translated">現在のメンバーの名前を取得します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentMemberName">
          <source>The name of the current member.</source>
          <target state="translated">現在のメンバーの名前。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentTypeName">
          <source>Gets the current class name.</source>
          <target state="translated">現在のクラスの名前を取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.CurrentTypeName">
          <source>The current class name.</source>
          <target state="translated">現在のクラスの名前。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated">コード生成の対象となる式を示す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArgumentReferenceExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
          <source>Generates code for the specified argument reference expression.</source>
          <target state="translated">指定した引数参照式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArrayCreateExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated">コード生成の対象となる式を示す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArrayCreateExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
          <source>Generates code for the specified array creation expression.</source>
          <target state="translated">指定した配列作成式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArrayIndexerExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated">コード生成の対象となる式を示す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeArrayIndexerExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
          <source>Generates code for the specified array indexer expression.</source>
          <target state="translated">指定した配列インデクサー式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAssignStatement" /&gt;</ph> that indicates the statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメントを示す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAssignStatement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)">
          <source>Generates code for the specified assignment statement.</source>
          <target state="translated">指定した代入ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttachEventStatement" /&gt;</ph> that indicates the statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメントを示す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttachEventStatement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
          <source>Generates code for the specified attach event statement.</source>
          <target state="translated">指定した結合イベント ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /&gt;</ph> that indicates the end of the attribute block to generate code for.</source>
          <target state="translated">コード生成の対象となる属性ブロックの終了を示す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>Generates code for the specified attribute block end.</source>
          <target state="translated">指定した属性ブロックの終了のコードを生成します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /&gt;</ph> that indicates the start of the attribute block to generate code for.</source>
          <target state="translated">コード生成の対象となる属性ブロックの開始を示す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>Generates code for the specified attribute block start.</source>
          <target state="translated">指定した属性ブロックの開始のコードを生成します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeBaseReferenceExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated">コード生成の対象となる式を示す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeBaseReferenceExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)">
          <source>Generates code for the specified base reference expression.</source>
          <target state="translated">指定したベース参照式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated">コード生成の対象となる式を示す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeBinaryOperatorExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
          <source>Generates code for the specified binary operator expression.</source>
          <target state="translated">指定した二項演算式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
          <source><ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCastExpression" /&gt;</ph> that indicates the expression to generate code for.</source>
          <target state="translated">コード生成の対象となる式を示す <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCastExpression" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)">
          <source>Generates code for the specified cast expression.</source>
          <target state="translated">指定したキャスト式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The class member to generate code for.</source>
          <target state="translated">コード生成の対象となるクラス メンバー。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">コードの出力先となるテキスト ライター。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use when generating the code.</source>
          <target state="translated">コードの生成時に使用するオプション。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified class member using the specified text writer and code generator options.</source>
          <target state="translated">指定したテキスト ライターおよびコード ジェネレーターのオプションを使用して、指定したクラス メンバーのコードを生成します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Code for members is generated differently depending on the context.</source>
          <target state="translated">メンバーのコードは、コンテキストに応じて異なる方法で生成されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>For example, code for methods on an interface or fields on an enumeration is generated differently from code for the same member on a class.</source>
          <target state="translated">たとえば、インターフェイスのメソッドまたは列挙型のフィールドのコードが生成異なる方法でコードからクラスで同じメンバーのされます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>This implementation assumes that the member is being generated for the class context.</source>
          <target state="translated">この実装では、クラスのコンテキストに対して、メンバーが生成されることを前提としています。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The <ph id="ph1">&lt;see cref="P:System.CodeDom.Compiler.CodeGenerator.Output" /&gt;</ph> property is not <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.CodeDom.Compiler.CodeGenerator.Output" /&gt;</ph> プロパティは <ph id="ph2">&lt;see langword="null" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph> to generate code for.</source>
          <target state="translated">コード生成の対象となる <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeComment" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)">
          <source>Generates code for the specified comment.</source>
          <target state="translated">指定したコメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
          <source>Generates code for the specified comment statement.</source>
          <target state="translated">指定したコメント ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
          <source>The <ph id="ph1">&lt;see cref="P:System.CodeDom.CodeCommentStatement.Comment" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="e" /&gt;</ph> is not set.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="e" /&gt;</ph> の <ph id="ph1">&lt;see cref="P:System.CodeDom.CodeCommentStatement.Comment" /&gt;</ph> プロパティが設定されていません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
          <source>Generates code for the specified comment statements.</source>
          <target state="translated">指定した複数のコメント ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>The compile unit to generate code for.</source>
          <target state="translated">コード生成の対象となるコンパイル単位。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)">
          <source>Generates code for the specified compile unit.</source>
          <target state="translated">指定したコンパイル単位のコードを生成します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)">
          <source>The compile unit to generate code for.</source>
          <target state="translated">コード生成の対象となるコンパイル単位。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)">
          <source>Generates code for the end of a compile unit.</source>
          <target state="translated">コンパイル単位の終了のコードを生成します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
          <source>The compile unit to generate code for.</source>
          <target state="translated">コード生成の対象となるコンパイル単位。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
          <source>Generates code for the start of a compile unit.</source>
          <target state="translated">コンパイル単位の開始のコードを生成します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
          <source>Generates code for the specified conditional statement.</source>
          <target state="translated">指定した条件付きステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
          <source>For most languages, this method will generate code for an <ph id="ph1">`if`</ph> statement.</source>
          <target state="translated">ほとんどの言語では、このメソッドがコードを生成、<ph id="ph1">`if`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
          <source>The constructor to generate code for.</source>
          <target state="translated">コード生成の対象となるコンストラクター。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
          <source>The type of the object that this constructor constructs.</source>
          <target state="translated">このコンストラクターが構築するオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified constructor.</source>
          <target state="translated">指定したコンストラクターのコードを生成します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)">
          <source>The decimal value to generate code for.</source>
          <target state="translated">コード生成の対象となる 10 進値。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)">
          <source>Generates code for the specified decimal value.</source>
          <target state="translated">指定した 10 進値のコードを生成します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
          <source>The reference to generate code for.</source>
          <target state="translated">コード生成の対象となる参照。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
          <source>Generates code for the specified reference to a default value.</source>
          <target state="translated">既定値への指定した参照のコードを生成します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
          <source>Generates code for the specified delegate creation expression.</source>
          <target state="translated">指定したデリゲート作成式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
          <source>Generates code for the specified delegate invoke expression.</source>
          <target state="translated">指定したデリゲート呼び出し式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
          <source>Generates code for the specified direction expression.</source>
          <target state="translated">指定した方向式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)">
          <source>The code directives to generate code for.</source>
          <target state="translated">コード生成の対象となるコード ディレクティブ。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)">
          <source>Generates code for the specified code directives.</source>
          <target state="translated">指定したコード ディレクティブのコードを生成します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)">
          <source>The value to generate code for.</source>
          <target state="translated">コード生成の対象となる値。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)">
          <source>Generates code for a double-precision floating point number.</source>
          <target state="translated">倍精度浮動小数点数のコードを生成します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>The entry point for the code.</source>
          <target state="translated">コードのエントリ ポイント。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>The code that declares the type.</source>
          <target state="translated">型を宣言するコード。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified entry point method.</source>
          <target state="translated">指定したエントリ ポイント メソッドのコードを生成します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
          <source>The member event to generate code for.</source>
          <target state="translated">コード生成の対象となるメンバー イベント。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
          <source>The type of the object that this event occurs on.</source>
          <target state="translated">このイベントが発生するオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified event.</source>
          <target state="translated">指定したイベントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
          <source>Generates code for the specified event reference expression.</source>
          <target state="translated">指定したイベント参照式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
          <source>The code expression to generate code for.</source>
          <target state="translated">コード生成の対象となるコード式。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
          <source>Generates code for the specified code expression.</source>
          <target state="translated">指定したコード式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;paramref name="e" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
          <source><ph id="ph1">&lt;paramref name="e" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> は有効な <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
          <source>Generates code for the specified expression statement.</source>
          <target state="translated">指定した式ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)">
          <source>The field to generate code for.</source>
          <target state="translated">コード生成の対象となるフィールド。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)">
          <source>Generates code for the specified member field.</source>
          <target state="translated">指定したメンバー フィールドのコードを生成します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
          <source>Generates code for the specified field reference expression.</source>
          <target state="translated">指定したフィールド参照式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)">
          <source>Generates code for the specified <ph id="ph1">&lt;see langword="goto" /&gt;</ph> statement.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see langword="goto" /&gt;</ph> ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
          <source>Generates code for the specified indexer expression.</source>
          <target state="translated">指定したインデクサー式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
          <source>Generates code for the specified iteration statement.</source>
          <target state="translated">指定した繰り返しステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
          <source>For most languages, this method will generate code for a <ph id="ph1">`for`</ph> loop or a <ph id="ph2">`while`</ph> loop.</source>
          <target state="translated">ほとんどの言語では、このメソッドがコードを生成、<ph id="ph1">`for`</ph>ループまたは<ph id="ph2">`while`</ph>ループします。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
          <source>Generates code for the specified labeled statement.</source>
          <target state="translated">指定したラベル付きステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)">
          <source>The end of the line pragma to generate code for.</source>
          <target state="translated">コード生成の対象となる line プラグマの終了。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)">
          <source>Generates code for the specified line pragma end.</source>
          <target state="translated">指定した line プラグマの終了のコードを生成します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)">
          <source>The start of the line pragma to generate code for.</source>
          <target state="translated">コード生成の対象となる line プラグマの開始。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)">
          <source>Generates code for the specified line pragma start.</source>
          <target state="translated">指定した line プラグマの開始のコードを生成します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>The member method to generate code for.</source>
          <target state="translated">コード生成の対象となるメンバー メソッド。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>The type of the object that this method occurs on.</source>
          <target state="translated">このメソッドが出現するオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified method.</source>
          <target state="translated">指定したメソッドのコードを生成します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
          <source>Generates code for the specified method invoke expression.</source>
          <target state="translated">指定したメソッド呼び出し式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
          <source>Generates code for the specified method reference expression.</source>
          <target state="translated">指定したメソッド参照式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
          <source>Generates code for the specified method return statement.</source>
          <target state="translated">指定したメソッドの return ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)">
          <source>The namespace to generate code for.</source>
          <target state="translated">コード生成の対象となる名前空間。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)">
          <source>Generates code for the specified namespace.</source>
          <target state="translated">指定した名前空間のコードを生成します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)">
          <source>The namespace to generate code for.</source>
          <target state="translated">コード生成の対象となる名前空間。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)">
          <source>Generates code for the end of a namespace.</source>
          <target state="translated">名前空間の終了のコードを生成します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
          <source>The namespace import to generate code for.</source>
          <target state="translated">コード生成の対象となる名前空間インポート。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
          <source>Generates code for the specified namespace import.</source>
          <target state="translated">指定した名前空間へのインポートのコードを生成します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)">
          <source>The namespace import to generate code for.</source>
          <target state="translated">コード生成の対象となる名前空間インポート。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)">
          <source>Generates code for the specified namespace import.</source>
          <target state="translated">指定した名前空間へのインポートのコードを生成します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)">
          <source>The compile unit to generate namespaces for.</source>
          <target state="translated">名前空間生成の対象となるコンパイル単位。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)">
          <source>Generates code for the namespaces in the specified compile unit.</source>
          <target state="translated">指定したコンパイル単位にある名前空間のコードを生成します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)">
          <source>The namespace to generate code for.</source>
          <target state="translated">コード生成の対象となる名前空間。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)">
          <source>Generates code for the start of a namespace.</source>
          <target state="translated">名前空間の開始のコードを生成します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
          <source>Generates code for the specified object creation expression.</source>
          <target state="translated">指定したオブジェクト作成式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
          <source>Generates code for the specified parameter declaration expression.</source>
          <target state="translated">指定したパラメーター宣言式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Generates code for the specified primitive expression.</source>
          <target state="translated">指定したプリミティブ式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source><ph id="ph1">&lt;paramref name="e" /&gt;</ph> uses an invalid data type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> は無効なデータ型を使用しています。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Only the following data types are valid:</source>
          <target state="translated">次のデータ型のみが有効です。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>string</source>
          <target state="translated">string</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>char</source>
          <target state="translated">char</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>byte</source>
          <target state="translated">byte</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Int16</source>
          <target state="translated">Int16</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Int32</source>
          <target state="translated">Int32</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Int64</source>
          <target state="translated">Int64</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Single</source>
          <target state="translated">Single</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Double</source>
          <target state="translated">倍精度浮動小数点型</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
          <source>Decimal</source>
          <target state="translated">Decimal (10 進数型)</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
          <source>The property to generate code for.</source>
          <target state="translated">コード生成の対象となるプロパティ。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
          <source>The type of the object that this property occurs on.</source>
          <target state="translated">このプロパティが出現するオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified property.</source>
          <target state="translated">指定したプロパティのコードを生成します。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
          <source>Generates code for the specified property reference expression.</source>
          <target state="translated">指定したプロパティ参照式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)">
          <source>Generates code for the specified property set value reference expression.</source>
          <target state="translated">指定したプロパティ セット値参照式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
          <source>Generates code for the specified remove event statement.</source>
          <target state="translated">指定した削除イベント ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)">
          <source>The value to generate code for.</source>
          <target state="translated">コード生成の対象となる値。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)">
          <source>Generates code for a single-precision floating point number.</source>
          <target state="translated">単精度浮動小数点数のコードを生成します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
          <source>The literal code fragment compile unit to generate code for.</source>
          <target state="translated">コード生成の対象となるリテラル コード片コンパイル単位。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
          <source>Outputs the code of the specified literal code fragment compile unit.</source>
          <target state="translated">指定したリテラル コード片コンパイル単位のコードを出力します。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)">
          <source>Outputs the code of the specified literal code fragment expression.</source>
          <target state="translated">指定したリテラル コード片式のコードを出力します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)">
          <source>The member to generate code for.</source>
          <target state="translated">コード生成の対象となるメンバー。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)">
          <source>Outputs the code of the specified literal code fragment class member.</source>
          <target state="translated">指定したリテラル コード片クラス メンバーのコードを出力します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)">
          <source>Outputs the code of the specified literal code fragment statement.</source>
          <target state="translated">指定したリテラル コード片ステートメントのコードを出力します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)">
          <source>Generates code for the specified statement.</source>
          <target state="translated">指定したステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)">
          <source><ph id="ph1">&lt;paramref name="e" /&gt;</ph> is not a valid <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> は有効な <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeStatement" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)">
          <source>The statements to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)">
          <source>Generates code for the specified statement collection.</source>
          <target state="translated">指定したステートメント コレクションのコードを生成します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)">
          <source>Generates code for the specified this reference expression.</source>
          <target state="translated">指定した this 参照式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
          <source>Generates code for the specified throw exception statement.</source>
          <target state="translated">指定した throw 例外ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
          <source>Generates code for the specified <ph id="ph1">&lt;see langword="try...catch...finally" /&gt;</ph> statement.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see langword="try...catch...finally" /&gt;</ph> ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
          <source>The class constructor to generate code for.</source>
          <target state="translated">コード生成の対象となるクラス コンストラクター。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
          <source>Generates code for the specified class constructor.</source>
          <target state="translated">指定したクラス コンストラクターのコードを生成します。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)">
          <source>The end of the class to generate code for.</source>
          <target state="translated">コード生成の対象となるクラスの終了。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified end of the class.</source>
          <target state="translated">指定したクラスの終了のコードを生成します。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
          <source>Generates code for the specified type of expression.</source>
          <target state="translated">指定した型の式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
          <source>Generates code for the specified type reference expression.</source>
          <target state="translated">指定した型参照式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)">
          <source>The namespace to generate classes for.</source>
          <target state="translated">クラス生成の対象となる名前空間。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)">
          <source>Generates code for the specified namespace and the classes it contains.</source>
          <target state="translated">指定した名前空間とその名前空間に格納されているクラスのコードを生成します。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)">
          <source>The start of the class to generate code for.</source>
          <target state="translated">コード生成の対象となるクラスの開始。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)">
          <source>Generates code for the specified start of the class.</source>
          <target state="translated">指定したクラスの開始のコードを生成します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
          <source>The statement to generate code for.</source>
          <target state="translated">コード生成の対象となるステートメント。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
          <source>Generates code for the specified variable declaration statement.</source>
          <target state="translated">指定した変数宣言ステートメントのコードを生成します。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
          <source>Generates code for the specified variable reference expression.</source>
          <target state="translated">指定した変数参照式のコードを生成します。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The type whose name will be returned.</source>
          <target state="translated">名前が返される型。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>Gets the name of the specified data type.</source>
          <target state="translated">指定したデータ型の名前を取得します。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The name of the data type reference.</source>
          <target state="translated">データ型参照の名前。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.Indent">
          <source>Gets or sets the amount of spaces to indent each indentation level.</source>
          <target state="translated">各インデント レベルにインデント幅として適用する空白文字の数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.Indent">
          <source>The number of spaces to indent for each indentation level.</source>
          <target state="translated">各インデント レベルにインデント幅として適用する空白文字の数。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.Indent">
          <source>Segments of code are commonly indented for ease of recognition.</source>
          <target state="translated">コードのセグメントはよく、認識が容易な分だけインデントされます。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentClass">
          <source>Gets a value indicating whether the current object being generated is a class.</source>
          <target state="translated">生成されている現在のオブジェクトがクラスかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentClass">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is a class; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のオブジェクトがクラスである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate">
          <source>Gets a value indicating whether the current object being generated is a delegate.</source>
          <target state="translated">生成されている現在のオブジェクトがデリゲートかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is a delegate; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のオブジェクトがデリゲートである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum">
          <source>Gets a value indicating whether the current object being generated is an enumeration.</source>
          <target state="translated">生成されている現在のオブジェクトが列挙体かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is an enumeration; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のオブジェクトが列挙体である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface">
          <source>Gets a value indicating whether the current object being generated is an interface.</source>
          <target state="translated">生成されている現在のオブジェクトがインターフェイスかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is an interface; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のオブジェクトがインターフェイスである場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct">
          <source>Gets a value indicating whether the current object being generated is a value type or struct.</source>
          <target state="translated">生成されている現在のオブジェクトが値型または構造体かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current object is a value type or struct; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のオブジェクトが値型または構造体である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)">
          <source>The value to test for conflicts with valid identifiers.</source>
          <target state="translated">有効な識別子と競合するかどうかをテストする対象の値。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)">
          <source>Gets a value indicating whether the specified value is a valid identifier.</source>
          <target state="translated">指定した値が有効な識別子かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value is a valid identifier; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">値が有効な識別子である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>The string to test for validity.</source>
          <target state="translated">有効かどうかをテストする対象の文字列。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>Gets a value indicating whether the specified string is a valid identifier.</source>
          <target state="translated">指定した文字列が有効な識別子かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified string is a valid identifier; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定した文字列が有効な識別子である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>This method checks the specified string to ensure that it does not contain certain characters that can be used to escape an identifier field.</source>
          <target state="translated">このメソッドは、識別子フィールドをエスケープするために使用できる特定の文字が含まれていないことを確認してください。 指定した文字列を確認します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A&gt;</ph> method calls this method to perform string validation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A&gt;</ph>メソッドは文字列の検証を実行するには、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>Calling the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A&gt;</ph> method and passing a <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> before generating code from it can prevent the use of certain character sequences to include hidden code within an identifier field.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A&gt;</ph>メソッドと受け渡しを<ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>識別子フィールド内の非表示のコードを含めるには、特定の文字シーケンスの使用を防止できますからコードを生成する前にします。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.NullToken">
          <source>Gets the token that represents <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> を表すトークンを取得します。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.NullToken">
          <source>The token that represents <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> を表すトークン。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.Options">
          <source>Gets the options to be used by the code generator.</source>
          <target state="translated">コード ジェネレーターで使用されるオプションを取得します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.Options">
          <source>An object that indicates the options for the code generator to use.</source>
          <target state="translated">コード ジェネレーターで使用されるオプションを示すオブジェクト。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CodeGenerator.Output">
          <source>Gets the text writer to use for output.</source>
          <target state="translated">出力に使用するテキスト ライターを取得します。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CodeGenerator.Output">
          <source>The text writer to use for output.</source>
          <target state="translated">出力に使用するテキスト ライター。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)">
          <source>The attribute argument to generate code for.</source>
          <target state="translated">コード生成の対象となる属性引数。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)">
          <source>Outputs an argument in an attribute block.</source>
          <target state="translated">属性ブロックにある引数を出力します。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>The attributes to generate code for.</source>
          <target state="translated">コード生成の対象となる属性。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)">
          <source>Generates code for the specified attribute declaration collection.</source>
          <target state="translated">指定した属性宣言コレクションのコードを生成します。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)">
          <source>One of the enumeration values that indicates the attribute of the field.</source>
          <target state="translated">フィールドの属性を示す列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)">
          <source>Generates code for the specified <ph id="ph1">&lt;see cref="T:System.CodeDom.FieldDirection" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.CodeDom.FieldDirection" /&gt;</ph> のコードを生成します。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CodeGenerator">
          <source>Generates code for the specified expression list.</source>
          <target state="translated">指定した式リストのコードを生成します。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)">
          <source>The expressions to generate code for.</source>
          <target state="translated">コード生成の対象となる式。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)">
          <source>Generates code for the specified expression list.</source>
          <target state="translated">指定した式リストのコードを生成します。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
          <source>The expressions to generate code for.</source>
          <target state="translated">コード生成の対象となる式。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to insert a new line after each item; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">各項目の後に改行文字を挿入する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
          <source>Generates code for the specified expression list.</source>
          <target state="translated">指定した式リストのコードを生成します。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)">
          <source>One of the enumeration values that specifies the attributes.</source>
          <target state="translated">属性を指定する列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)">
          <source>Outputs a field scope modifier that corresponds to the specified attributes.</source>
          <target state="translated">指定した属性に対応するフィールド スコープ修飾子を出力します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)">
          <source>The identifier to output.</source>
          <target state="translated">出力する識別子。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)">
          <source>Outputs the specified identifier.</source>
          <target state="translated">指定した識別子を出力します。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)">
          <source>One of the enumeration values that indicates the member access modifier to generate code for.</source>
          <target state="translated">コード生成の対象となるメンバー アクセス修飾子を示す列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)">
          <source>Generates code for the specified member access modifier.</source>
          <target state="translated">指定したメンバー アクセス修飾子のコードを生成します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)">
          <source>One of the enumeration values that indicates the member scope modifier to generate code for.</source>
          <target state="translated">コード生成の対象となるメンバー スコープ修飾子を示す列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)">
          <source>Generates code for the specified member scope modifier.</source>
          <target state="translated">指定したメンバー スコープ修飾子のコードを生成します。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)">
          <source>The operator to generate code for.</source>
          <target state="translated">コード生成の対象となる演算子。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)">
          <source>Generates code for the specified operator.</source>
          <target state="translated">指定した演算子のコードを生成します。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
          <source>The parameter declaration expressions to generate code for.</source>
          <target state="translated">コード生成の対象となるパラメーター宣言式。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
          <source>Generates code for the specified parameters.</source>
          <target state="translated">指定したパラメーターのコードを生成します。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)">
          <source>The type to generate code for.</source>
          <target state="translated">コード生成の対象となる型。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)">
          <source>Generates code for the specified type.</source>
          <target state="translated">指定した型のコードを生成します。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
          <source>One of the enumeration values that indicates the type attributes to generate code for.</source>
          <target state="translated">コード生成の対象となる型属性を示す列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type is a struct; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">型が構造体である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the type is an enum; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">型が列挙型である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)">
          <source>Generates code for the specified type attributes.</source>
          <target state="translated">指定した型属性のコードを生成します。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
          <source>The type.</source>
          <target state="translated">型。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
          <source>The name for the object.</source>
          <target state="translated">オブジェクトの名前。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
          <source>Generates code for the specified object type and name pair.</source>
          <target state="translated">指定したオブジェクト型とオブジェクト名の組み合わせのコードを生成します。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>The string to convert.</source>
          <target state="translated">変換する文字列。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>Converts the specified string by formatting it with escape codes.</source>
          <target state="translated">エスケープ コード書式を付けることによって、指定した文字列を変換します。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>The converted string.</source>
          <target state="translated">変換された文字列。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>This method returns a modified version of the specified string that has been formatted with escape code characters.</source>
          <target state="translated">このメソッドは、コードのエスケープ文字でフォーマットされた指定した文字列の変更済みバージョンを返します。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>For example, <ph id="ph1">`/"`</ph> might be used to represent <ph id="ph2">`"`</ph>.</source>
          <target state="translated">たとえば、<ph id="ph1">`/"`</ph>を表すために使用する場合があります<ph id="ph2">`"`</ph>です。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
          <source>These escape codes are used to replace elements of the specified string that might otherwise conflict with language syntax.</source>
          <target state="translated">これらのエスケープ コードは、言語の構文と矛盾する場合がありますを指定した文字列の要素を置換に使用されます。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>The type of code generation support to test for.</source>
          <target state="translated">コードを生成できるかどうかをテストする対象の型。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>Gets a value indicating whether the specified code generation support is provided.</source>
          <target state="translated">指定したコードを生成できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified code generation support is provided; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したコードを生成できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)">
          <source>The string to create an escaped identifier for.</source>
          <target state="translated">エスケープ識別子を作成する対象の文字列。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)">
          <source>Creates an escaped identifier for the specified value.</source>
          <target state="translated">指定した値のエスケープ識別子を作成します。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)">
          <source>The escaped identifier for the value.</source>
          <target state="translated">その値のエスケープ識別子。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)">
          <source>The string to generate a valid identifier for.</source>
          <target state="translated">有効な識別子を作成する対象の文字列。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)">
          <source>Creates a valid identifier for the specified value.</source>
          <target state="translated">指定した値の有効な識別子を作成します。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)">
          <source>A valid identifier for the specified value.</source>
          <target state="translated">指定した値の有効な識別子。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The CodeDOM compilation unit to generate code for.</source>
          <target state="translated">コードを生成する CodeDOM コンパイル ユニット。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">コードの出力先となるテキスト ライター。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use for generating code.</source>
          <target state="translated">コード生成に使用するオプション。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and outputs it to the specified text writer using the specified options.</source>
          <target state="translated">指定した Code Document Object Model (CodeDOM) の コンパイル ユニットのコードを生成し、指定したオプションを使用して、指定したテキスト ライターに出力します。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> が使用できません。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> may have been closed before the method call was made.</source>
          <target state="translated">メソッドの呼び出しが行われる前に <ph id="ph1">&lt;paramref name="w" /&gt;</ph> が閉じられた可能性があります。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The expression to generate code for.</source>
          <target state="translated">コードを生成する式。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">コードの出力先となるテキスト ライター。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use for generating code.</source>
          <target state="translated">コード生成に使用するオプション。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) expression and outputs it to the specified text writer.</source>
          <target state="translated">指定した Code Document Object Model (CodeDOM) の式のコードを生成し、指定したテキスト ライターに出力します。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> が使用できません。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> may have been closed before the method call was made.</source>
          <target state="translated">メソッドの呼び出しが行われる前に <ph id="ph1">&lt;paramref name="w" /&gt;</ph> が閉じられた可能性があります。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The namespace to generate code for.</source>
          <target state="translated">コード生成の対象となる名前空間。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">コードの出力先となるテキスト ライター。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use for generating code.</source>
          <target state="translated">コード生成に使用するオプション。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) namespace and outputs it to the specified text writer using the specified options.</source>
          <target state="translated">指定した Code Document Object Model (CodeDOM) の名前空間のコードを生成し、指定したオプションを使用して、指定したテキスト ライターに出力します。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> が使用できません。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> may have been closed before the method call was made.</source>
          <target state="translated">メソッドの呼び出しが行われる前に <ph id="ph1">&lt;paramref name="w" /&gt;</ph> が閉じられた可能性があります。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The statement that contains the CodeDOM elements to translate.</source>
          <target state="translated">翻訳する CodeDOM 要素を含むステートメント。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">コードの出力先となるテキスト ライター。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use for generating code.</source>
          <target state="translated">コード生成に使用するオプション。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) statement and outputs it to the specified text writer using the specified options.</source>
          <target state="translated">指定した Code Document Object Model (CodeDOM) のステートメントのコードを生成し、指定したオプションを使用して、指定したテキスト ライターに出力します。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> が使用できません。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> may have been closed before the method call was made.</source>
          <target state="translated">メソッドの呼び出しが行われる前に <ph id="ph1">&lt;paramref name="w" /&gt;</ph> が閉じられた可能性があります。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The type to generate code for.</source>
          <target state="translated">コード生成の対象となる型。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The text writer to output code to.</source>
          <target state="translated">コードの出力先となるテキスト ライター。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>The options to use for generating code.</source>
          <target state="translated">コード生成に使用するオプション。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source>Generates code for the specified Code Document Object Model (CodeDOM) type declaration and outputs it to the specified text writer using the specified options.</source>
          <target state="translated">指定した Code Document Object Model (CodeDOM) の型宣言のコードを生成し、指定したオプションを使用して、指定したテキスト ライターに出力します。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> is not available.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="w" /&gt;</ph> が使用できません。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
          <source><ph id="ph1">&lt;paramref name="w" /&gt;</ph> may have been closed before the method call was made.</source>
          <target state="translated">メソッドの呼び出しが行われる前に <ph id="ph1">&lt;paramref name="w" /&gt;</ph> が閉じられた可能性があります。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The type to return.</source>
          <target state="translated">返す型。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>Gets the type indicated by the specified <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> で示される型を取得します。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)">
          <source>The name of the data type reference.</source>
          <target state="translated">データ型参照の名前。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)">
          <source>The value to test.</source>
          <target state="translated">テストする値。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)">
          <source>Gets a value that indicates whether the specified value is a valid identifier for the current language.</source>
          <target state="translated">指定した値が現在の言語で有効な識別子かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter is a valid identifier; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="value" /&gt;</ph> パラメーターが有効な識別子である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>The capabilities to test the generator for.</source>
          <target state="translated">コード ジェネレーターがサポートしているかどうかをテストする対象の機能。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source>Gets a value indicating whether the generator provides support for the language features represented by the specified <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.GeneratorSupport" /&gt;</ph> object.</source>
          <target state="translated">ジェネレーターが、指定した <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.GeneratorSupport" /&gt;</ph> オブジェクトで表される言語機能のサポートを提供するかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified capabilities are supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定した機能がサポートされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)">
          <source>The identifier to validate.</source>
          <target state="translated">検証する識別子。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)">
          <source>Throws an exception if the specified value is not a valid identifier.</source>
          <target state="translated">指定した値が有効な識別子ではない場合に、例外をスローします。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)">
          <source>The identifier to test for validity as an identifier.</source>
          <target state="translated">識別子として有効かどうかをテストする対象の識別子。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)">
          <source>Throws an exception if the specified string is not a valid identifier.</source>
          <target state="translated">指定した文字列が有効な識別子ではない場合に、例外をスローします。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)">
          <source>If the specified identifier is invalid or conflicts with reserved or language keywords.</source>
          <target state="translated">指定した識別子が無効な場合、または予約済みキーワードや言語キーワードと競合する場合。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>An object to test for invalid identifiers.</source>
          <target state="translated">無効な識別子をテストするオブジェクト。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>Attempts to validate each identifier field contained in the specified <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeObject" /&gt;</ph> or <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> tree.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeObject" /&gt;</ph> または <ph id="ph2">&lt;see cref="N:System.CodeDom" /&gt;</ph> のツリーに格納されている各識別子フィールドの検証を試みます。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>It is possible for the identifier fields of <ph id="ph1">&lt;xref:System.CodeDom.CodeObject&gt;</ph> objects to contain field escape characters and hidden code which can allow security violations.</source>
          <target state="translated">識別子フィールドについて可能であれば<ph id="ph1">&lt;xref:System.CodeDom.CodeObject&gt;</ph>フィールド エスケープ文字およびことができるようにセキュリティ違反を非表示のコードを格納するオブジェクト。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>This method checks the literal fields of each <ph id="ph1">&lt;xref:System.CodeDom.CodeObject&gt;</ph> in a <ph id="ph2">&lt;xref:System.CodeDom&gt;</ph> tree for characters which could be used to hide code, and throws an exception if an identifier field contains an invalid character.</source>
          <target state="translated">このメソッドは、それぞれのリテラル フィールドを確認<ph id="ph1">&lt;xref:System.CodeDom.CodeObject&gt;</ph>で、<ph id="ph2">&lt;xref:System.CodeDom&gt;</ph>ツリーの文字が、コードを非表示に使用可能であり、識別子のフィールドに無効な文字が含まれている場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier%2A&gt;</ph> method to validate each identifier in the specified <ph id="ph2">&lt;xref:System.CodeDom.CodeObject&gt;</ph> or <ph id="ph3">&lt;xref:System.CodeDom&gt;</ph> tree, and throws an exception if an identifier is invalid or contains invalid characters.</source>
          <target state="translated">このメソッドは、 <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier%2A&gt;</ph> 、指定した各識別子を検証するメソッドを<ph id="ph2">&lt;xref:System.CodeDom.CodeObject&gt;</ph>または<ph id="ph3">&lt;xref:System.CodeDom&gt;</ph>ツリー、および識別子が無効であるか、無効な文字が含まれている場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>Call this method and pass it the <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> containing the code graph to generate before generating code to block the use of certain character sequences that can be used to include hidden code within an identifier field.</source>
          <target state="translated">このメソッドを呼び出すし、それを渡す、<ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>識別子フィールド内の非表示のコードを含めるために使用できる特定の文字のシーケンスの使用をブロックするためのコードを生成する前に生成するコードのグラフを含むです。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>This method is not called automatically by any generate code methods.</source>
          <target state="translated">このメソッドは、コード生成メソッドでは自動的に呼び出されません。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeObject" /&gt;</ph> contains an invalid identifier.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeObject" /&gt;</ph> に無効な識別子が含まれています。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>