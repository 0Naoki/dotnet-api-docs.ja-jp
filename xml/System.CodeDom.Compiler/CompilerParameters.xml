<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CompilerParameters.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ad30b59e17093683b1fcc60cde054e6174c16ca7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad30b59e17093683b1fcc60cde054e6174c16ca7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>Represents the parameters used to invoke a compiler.</source>
          <target state="translated">コンパイラを呼び出すために使用するパラメーターを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> object represents the settings and options for an <ph id="ph2">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> interface.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>オブジェクトは、設定を表し、オプション、<ph id="ph2">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>If you are compiling an executable program, you must set the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">設定する必要がある実行可能プログラムをコンパイルする場合、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>When the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, the compiler will generate a class library.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;</ph>に設定されている<ph id="ph2">`false`</ph>コンパイラはクラス ライブラリを生成します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>By default, a new <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> is initialized with its <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;</ph> property set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">既定では、新しい<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>で初期化がその<ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;</ph>プロパティに設定<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>If you are compiling an executable from a CodeDOM graph, a <ph id="ph1">&lt;xref:System.CodeDom.CodeEntryPointMethod&gt;</ph> must be defined in the graph.</source>
          <target state="translated">CodeDOM グラフから実行可能ファイルをコンパイルする場合、グラフに <ph id="ph1">&lt;xref:System.CodeDom.CodeEntryPointMethod&gt;</ph> を定義する必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>If there are multiple code entry points, you can indicate the class that defines the entry point to use by setting the name of the class to the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A&gt;</ph> property.</source>
          <target state="translated">クラスの名前を設定して使用するエントリ ポイントを定義するクラスを指定するには、複数のコード エントリ ポイントがある場合、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>You can specify a file name for the output assembly in the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A&gt;</ph> property.</source>
          <target state="translated">出力内のアセンブリ ファイル名を指定することができます、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>Otherwise, a default output file name will be used.</source>
          <target state="translated">指定しない場合、既定の出力ファイル名が使用されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>To include debug information in a generated assembly, set the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">生成されたアセンブリのデバッグ情報は、設定、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>If your project references any assemblies, you must specify the assembly names as items in a <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> set to the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> used when invoking compilation.</source>
          <target state="translated">内の項目としてアセンブリ名を指定する必要があります、プロジェクトは、すべてのアセンブリを参照する場合、<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>に設定、<ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>コンパイルを起動するときに使用します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>You can compile an assembly that is written to memory rather than disk by setting the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">設定して、ディスクではなく、メモリに書き込まれるアセンブリをコンパイルすることができます、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>When an assembly is generated in memory, your code can obtain a reference to the generated assembly from the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;</ph>.</source>
          <target state="translated">アセンブリをメモリに生成すると、<ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;</ph> の <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt;</ph> プロパティから生成されたアセンブリの参照がコードに与えられることがあります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>If an assembly is written to disk, you can obtain the path to the generated assembly from the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;</ph>.</source>
          <target state="translated">アセンブリが記述されている場合、ディスクから生成されたアセンブリ パスを取得することができます、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>To specify a warning level at which to halt compilation, set the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A&gt;</ph> property to an integer that represents the warning level at which to halt compilation.</source>
          <target state="translated">コンパイルを中止する警告レベルを指定するには、コンパイルを中止する警告レベルを表す整数に <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A&gt;</ph> プロパティを設定します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>You can also configure the compiler to halt compilation if warnings are encountered by setting the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">設定によって警告が発生した場合は、コンパイルを停止するようにコンパイラを構成することも、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>To specify a custom command-line arguments string to use when invoking the compilation process, set the string in the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A&gt;</ph> property.</source>
          <target state="translated">コンパイル プロセスを呼び出すときに使用するカスタムのコマンドライン引数を指定するには、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A&gt;</ph> プロパティに文字列を設定します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>If a Win32 security token is required to invoke the compiler process, specify the token in the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A&gt;</ph> property.</source>
          <target state="translated">コンパイラ プロセスの呼び出しに Win32 セキュリティ トークンが必要な場合、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A&gt;</ph> プロパティにトークンを指定します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>To include .NET Framework resource files in the compiled assembly, add the names of the resource files to the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph> property.</source>
          <target state="translated">.NET Framework リソース ファイル、コンパイルされたアセンブリで、追加するリソース ファイルの名前、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>To reference .NET Framework resources in another assembly, add the names of the resource files to the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph> property.</source>
          <target state="translated">別のアセンブリ内の .NET Framework のリソースを参照するに追加するリソース ファイルの名前、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>To include a Win32 resource file in the compiled assembly, specify the name of the Win32 resource file in the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A&gt;</ph> property.</source>
          <target state="translated">コンパイルされたアセンブリで Win32 リソース ファイルを含めるで Win32 リソース ファイルの名前を指定、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可がない場合にスローされます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
          <target state="translated">セキュリティ要求の詳細については、「<bpt id="p1">[</bpt>リンク確認要求<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>と<bpt id="p2">[</bpt>継承確認要求<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>The following example builds a CodeDOM source graph for a simple Hello World program.</source>
          <target state="translated">次の例では、単純な Hello World プログラムの CodeDOM ソース グラフを構築します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>The source is then saved to a file, compiled into an executable, and run.</source>
          <target state="translated">ソースは、実行可能ファイルにコンパイルされ、実行、ファイルに保存されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>The <ph id="ph1">`CompileCode`</ph> method illustrates how to use the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class to specify various compiler settings and options.</source>
          <target state="translated"><ph id="ph1">`CompileCode`</ph>メソッドを使用する方法を示しています、<ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定するクラス。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">このクラスは、部分的に信頼されたコードでは使用できません。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>for full trust for inheritors.</source>
          <target state="translated">継承時の完全な信頼。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>This class cannot be inherited by partially trusted code.</source>
          <target state="translated">部分信頼コードでこのクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="T:System.CodeDom.Compiler.CompilerParameters">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">このクラスは、部分的に信頼されたコードでは使用できません。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])">
          <source>The names of the assemblies to reference.</source>
          <target state="translated">参照するアセンブリの名前。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> class using the specified assembly names.</source>
          <target state="translated">指定したアセンブリ名を使用して、<ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">このクラスは、部分的に信頼されたコードでは使用できません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)">
          <source>The names of the assemblies to reference.</source>
          <target state="translated">参照するアセンブリの名前。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)">
          <source>The output file name.</source>
          <target state="translated">出力ファイル名。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> class using the specified assembly names and output file name.</source>
          <target state="translated">指定したアセンブリ名と出力ファイル名を使用して、<ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">このクラスは、部分的に信頼されたコードでは使用できません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
          <source>The names of the assemblies to reference.</source>
          <target state="translated">参照するアセンブリの名前。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
          <source>The output file name.</source>
          <target state="translated">出力ファイル名。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include debug information; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to exclude debug information.</source>
          <target state="translated">デバッグ情報を含める場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。デバッグ情報を除外する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> class using the specified assembly names, output name, and a value indicating whether to include debug information.</source>
          <target state="translated">指定したアセンブリ名、出力名、デバッグ情報を含めるかどうかを示す値を使用して、<ph id="ph1">&lt;see cref="T:System.CodeDom.Compiler.CompilerParameters" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)">
          <source>This class cannot be used by partially trusted code.</source>
          <target state="translated">このクラスは、部分的に信頼されたコードでは使用できません。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.CompilerOptions">
          <source>Gets or sets optional command-line arguments to use when invoking the compiler.</source>
          <target state="translated">コンパイラを起動するときに使用する、オプションのコマンド ライン引数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CompilerOptions">
          <source>Any additional command-line arguments for the compiler.</source>
          <target state="translated">コンパイラに対する追加のコマンド ライン引数。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CompilerOptions">
          <source>An <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> typically includes this string on the command line when invoking a command-line compiler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph>通常コマンド ライン コンパイラを呼び出すときに、コマンドラインでは、この文字列が含まれています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CompilerOptions">
          <source>By default, this property contains an empty string.</source>
          <target state="translated">既定では、このプロパティには、空の文字列が含まれています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CompilerOptions">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CompilerOptions">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName">
          <source>Gets or sets the name of the core or standard assembly that contains basic types such as <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, or <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>、<ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph> などの基本型を含むコアまたは標準アセンブリの名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName">
          <source>The name of the core assembly that contains basic types.</source>
          <target state="translated">基本型を格納しているコア アセンブリの名前。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName">
          <source>If the value of this property is an empty string or <ph id="ph1">`null`</ph>, the compiler uses the default core assembly.</source>
          <target state="translated">かどうか、このプロパティの値は空の文字列または<ph id="ph1">`null`</ph>コンパイラは、既定のコア アセンブリを使用します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName">
          <source>Depending on the compiler version, the default core assembly may be mscorlib.dll or System.Runtime.dll in a Framework directory or reference assembly directory.</source>
          <target state="translated">コンパイラのバージョンに応じて、既定のコア アセンブリがあります mscorlib.dll または System.Runtime.dll Framework ディレクトリまたは参照アセンブリのディレクトリにします。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName">
          <source>If the value of this property is not empty, the Code Document Object Model (CodeDOM) explicitly references the specified assembly and emits compiler options that cause the compiler to not reference any assemblies implicitly during compilation..</source>
          <target state="translated">このプロパティの値が空でない場合、Code Document Object Model (CodeDOM) は明示的に指定されたアセンブリを参照し、コンパイラがコンパイル時にアセンブリを暗黙的に参照しないコンパイラ オプションを出力.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName">
          <source>For compilers that reference the core or standard assembly only implicitly by default, this property can be used on its own.</source>
          <target state="translated">既定では、コアまたは標準のアセンブリをのみによって暗黙的に参照するコンパイラのこのプロパティは、独自に使用できます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName">
          <source>For compilers that implicitly reference assemblies in addition to the core or standard assembly, using this option may require specifying additional entries in the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">コンパイラに暗黙的にアセンブリを参照するさらにコアまたは標準のアセンブリには、このオプションを使用することがあります指定する必要に追加エントリ、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=nameWithType&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName">
          <source>An <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> or <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation may choose to ignore this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph>または<ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph>実装は、このプロパティを無視することができます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
          <source>Gets the .NET Framework resource files to include when compiling the assembly output.</source>
          <target state="translated">アセンブリ出力をコンパイルするときに含める .NET Framework リソース ファイルを取得します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
          <source>A collection that contains the file paths of .NET Framework resources to include in the generated assembly.</source>
          <target state="translated">生成されるアセンブリに含めるための .NET Framework リソースのファイル パスを格納するコレクション。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
          <source>Embedded resources are built into the generated assembly output file.</source>
          <target state="translated">埋め込みリソースは、生成されたアセンブリの出力ファイルに組み込まれます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
          <source>Including files through this property is similar to the <ph id="ph1">`/resource`</ph> command-line argument supported by many of the .NET Framework compilers.</source>
          <target state="translated">このプロパティを使用してファイルを含むに似ていますが、<ph id="ph1">`/resource`</ph>さまざまな .NET Framework コンパイラでサポートされているコマンドラインの引数。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
          <source>Not all compilers support .NET Framework resource files, so you should test for this support by calling the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph> method with the flag <ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.Resources&gt;</ph>.</source>
          <target state="translated">呼び出すことによって、このサポートをテストする必要があります、.NET Framework リソース ファイルをサポートしていないすべてのコンパイラ、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph>フラグ メソッド<ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.Resources&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
          <source>Add one or more .NET Framework resource file paths to the returned <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> to embed the file resources in the compiled assembly.</source>
          <target state="translated">返された 1 つまたは複数の .NET Framework リソース ファイル パスを追加する<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>コンパイルされたアセンブリにファイルのリソースを埋め込みます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
          <source>Adding a duplicate or invalid file path results in compilation errors; ensure that each string specifies a unique path to a valid .NET Framework resource file.</source>
          <target state="translated">コンパイル エラーが発生します。 重複しているか、無効なファイル パスは結果を追加します。各文字列が有効な .NET Framework リソース ファイルを一意のパスを指定することを確認します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph> to include default or neutral culture .NET Framework resources for an assembly; use the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph> property to reference .NET Framework resources in satellite assemblies.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph>; アセンブリの既定値またはニュートラル カルチャの .NET Framework のリソースを含めるを使用して、 <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph> .NET Framework のリソースをサテライト アセンブリを参照するプロパティです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.Evidence">
          <source>Specifies an evidence object that represents the security policy permissions to grant the compiled assembly.</source>
          <target state="translated">コンパイルしたアセンブリに与えるセキュリティ ポリシーのアクセス許可を表す証拠オブジェクトを指定します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.Evidence">
          <source>An  object that represents the security policy permissions to grant the compiled assembly.</source>
          <target state="translated">コンパイルしたアセンブリに与えるセキュリティ ポリシーのアクセス許可を表す  オブジェクト。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.Evidence">
          <source>for the ability control evidence.</source>
          <target state="translated">機能の制御の証拠の</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.Evidence">
          <source>Permission value: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph></source>
          <target state="translated">アクセス許可の値:<ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /&gt;</ph>セキュリティ アクション。 <ph id="ph2">&lt;see cref="F:System.Security.Permissions.SecurityAction.Demand" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable">
          <source>Gets or sets a value indicating whether to generate an executable.</source>
          <target state="translated">実行可能ファイルを生成するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an executable should be generated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">実行可能ファイルを生成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable">
          <source>If the value of this property is <ph id="ph1">`false`</ph>, a DLL will be generated.</source>
          <target state="translated">このプロパティの値が場合<ph id="ph1">`false`</ph>DLL が生成されます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable">
          <source>By default, the value of this property is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定では、このプロパティの値は <ph id="ph1">`false`</ph> です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory">
          <source>Gets or sets a value indicating whether to generate the output in memory.</source>
          <target state="translated">メモリ内で出力を生成するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the compiler should generate the output in memory; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コンパイラがメモリ内で出力を生成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation">
          <source>Gets or sets a value indicating whether to include debug information in the compiled executable.</source>
          <target state="translated">コンパイルされた実行可能ファイルにデバッグ情報を含めるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if debug information should be generated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">デバッグ情報を生成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
          <source>Gets the .NET Framework resource files that are referenced in the current source.</source>
          <target state="translated">現在のソースで参照されている .NET Framework リソース ファイルを取得します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
          <source>A collection that contains the file paths of .NET Framework resources that are referenced by the source.</source>
          <target state="translated">ソースによって参照される .NET Framework リソースのファイル パスを格納するコレクション。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
          <source>Linked resource files allow your assembly to reference .NET Framework resources without embedding the actual resources in the assembly.</source>
          <target state="translated">リンクされたリソース ファイルには、リソースを参照する .NET Framework アセンブリで実際のリソースを埋め込まなくても、アセンブリが許可されます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
          <source>Referencing files through this property is similar to the <ph id="ph1">`/linkresource`</ph> command-line argument supported by many of the .NET Framework compilers.</source>
          <target state="translated">に似ていますがこのプロパティを使用してファイルを参照する、<ph id="ph1">`/linkresource`</ph>さまざまな .NET Framework コンパイラでサポートされているコマンドラインの引数。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
          <source>Not all compilers support .NET Framework resource files, so you should test for this support by calling the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph> method with the flag <ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.Resources&gt;</ph>.</source>
          <target state="translated">呼び出すことによって、このサポートをテストする必要があります、.NET Framework リソース ファイルをサポートしていないすべてのコンパイラ、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph>フラグ メソッド<ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.Resources&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
          <source>Add one or more .NET Framework resource file paths to the returned <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> to create links for the resources in the compiled assembly.</source>
          <target state="translated">返された 1 つまたは複数の .NET Framework リソース ファイル パスを追加する<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>コンパイルされたアセンブリでリソースへのリンクを作成します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
          <source>Adding a duplicate or invalid file path results in compilation errors; ensure that each string specifies a unique path to a valid .NET Framework resource file.</source>
          <target state="translated">コンパイル エラーが発生します。 重複しているか、無効なファイル パスは結果を追加します。各文字列が有効な .NET Framework リソース ファイルを一意のパスを指定することを確認します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph> to reference .NET Framework resources in satellite assemblies, localized for a particular culture; use the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph> property to embed the resources into the compiled assembly.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph>特定のカルチャのローカライズされたサテライト アセンブリに .NET Framework のリソースを参照する。 を使用して、<ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph>プロパティを、コンパイルされたアセンブリにリソースを埋め込みます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.LinkedResources">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.MainClass">
          <source>Gets or sets the name of the main class.</source>
          <target state="translated">main クラスの名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.MainClass">
          <source>The name of the main class.</source>
          <target state="translated">main クラスの名前。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.MainClass">
          <source>The main class contains the entry point for the program.</source>
          <target state="translated">メイン クラスには、プログラムのエントリ ポイントが含まれています。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.MainClass">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.MainClass">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.OutputAssembly">
          <source>Gets or sets the name of the output assembly.</source>
          <target state="translated">出力アセンブリの名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.OutputAssembly">
          <source>The name of the output assembly.</source>
          <target state="translated">出力アセンブリの名前。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.OutputAssembly">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.OutputAssembly">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies">
          <source>Gets the assemblies referenced by the current project.</source>
          <target state="translated">現在のプロジェクトで参照されるアセンブリを取得します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies">
          <source>A collection that contains the assembly names that are referenced by the source to compile.</source>
          <target state="translated">コンパイルするソースで参照されるアセンブリ名を格納するコレクション。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies">
          <source>The string collection should consist of, or include, the assemblies referenced by the current project.</source>
          <target state="translated">文字列のコレクションに含まれるか、含めるには、現在のプロジェクトによって参照されるアセンブリください。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies">
          <source>Add assembly file names to the returned <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> to import the assembly manifest and reference the assembly type information in the current project.</source>
          <target state="translated">返されたアセンブリ ファイル名を追加<ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph>をアセンブリ マニフェストをインポートし、現在のプロジェクトでアセンブリの型情報を参照します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>Gets or sets the collection that contains the temporary files.</source>
          <target state="translated">一時ファイルを格納するコレクションを取得または設定します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>A collection that contains the temporary files.</source>
          <target state="translated">一時ファイルを含むコレクション。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt;</ph> property in the collection.</source>
          <target state="translated">コレクション内の一時ファイルを保持またはの値に基づいてコンパイラ アクティビティの完了時に削除された、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt;</ph>コレクション内のプロパティです。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt;</ph> property is set if the collection is created using the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor with the <ph id="ph3">`keepFiles`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt;</ph>プロパティを使用して、コレクションを作成する場合、<ph id="ph2">&lt;xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph>を持つコンス トラクター、<ph id="ph3">`keepFiles`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
          <target state="translated">このクラスには、リンク確認要求し、すべてのメンバーに適用されるクラス レベルの継承確認要求が含まれています。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph>直前の呼び出し元または派生クラスのいずれかに完全信頼アクセス許可がない場合にスローされます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
          <target state="translated">セキュリティ要求の詳細については、「<bpt id="p1">[</bpt>リンク確認要求<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept>と<bpt id="p2">[</bpt>継承確認要求<ept id="p2">](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>for full trust for the immediate caller.</source>
          <target state="translated">直前の呼び出し元に対する完全な信頼。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TempFiles">
          <source>This member cannot be used by partially trusted code.</source>
          <target state="translated">このメンバーは、部分的に信頼されているコードから使用することはできません。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors">
          <source>Gets or sets a value indicating whether to treat warnings as errors.</source>
          <target state="translated">警告をエラーとして扱うかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if warnings should be treated as errors; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">警告をエラーとして扱う場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.UserToken">
          <source>Gets or sets the user token to use when creating the compiler process.</source>
          <target state="translated">コンパイラ プロセスを作成するときに使用するユーザー トークンを取得または設定します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.UserToken">
          <source>The user token to use.</source>
          <target state="translated">使用するユーザー トークン。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.WarningLevel">
          <source>Gets or sets the warning level at which the compiler aborts compilation.</source>
          <target state="translated">コンパイラがコンパイルを中止する警告レベルを取得または設定します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.WarningLevel">
          <source>The warning level at which the compiler aborts compilation.</source>
          <target state="translated">コンパイラがコンパイルを中止する警告レベル。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.WarningLevel">
          <source>The following example illustrates using <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> to specify various compiler settings and options.</source>
          <target state="translated">次の例を使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>さまざまなコンパイラ設定とオプションを指定します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.WarningLevel">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> class.</source>
          <target state="translated">このコード例に示されている例の一部である、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource">
          <source>Gets or sets the file name of a Win32 resource file to link into the compiled assembly.</source>
          <target state="translated">コンパイルされるアセンブリにリンクする Win32 リソース ファイルの名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource">
          <source>A Win32 resource file that will be linked into the compiled assembly.</source>
          <target state="translated">コンパイルされるアセンブリにリンクする Win32 リソース ファイル。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource">
          <source>Linking files through this property is similar to the <ph id="ph1">`/winres`</ph> and <ph id="ph2">`/winresource`</ph> command-line arguments supported by many of the .NET Framework compilers.</source>
          <target state="translated">このプロパティを使用してファイルをリンクと似ています、<ph id="ph1">`/winres`</ph>と<ph id="ph2">`/winresource`</ph>さまざまな .NET Framework コンパイラでサポートされているコマンドラインの引数。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A&gt;</ph> to compile a Win32 resource file into the assembly.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A&gt;</ph>をアセンブリに Win32 リソース ファイルをコンパイルします。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph> to compile with .NET Framework resource files.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph>を .NET Framework リソース ファイルをコンパイルします。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.Compiler.CompilerParameters.Win32Resource">
          <source>Not all compilers support Win32 resource files, so you should test a code generator for this support before linking a resource file by calling the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph> method with the flag <ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.Win32Resources&gt;</ph>.</source>
          <target state="translated">いないすべてのコンパイラは、Win32 リソース ファイルをサポートするため、呼び出すことによって、リソース ファイルをリンクする前にこのサポートのコード ジェネレーターをテストする必要があります、<ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph>フラグ メソッド<ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.Win32Resources&gt;</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>