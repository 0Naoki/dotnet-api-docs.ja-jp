<Type Name="XmlnsPrefixAttribute" FullName="System.Windows.Markup.XmlnsPrefixAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="735b38aa6c41bd59e7a936ee494af9325edd1b23" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37559573" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlnsPrefixAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlnsPrefixAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XmlnsPrefixAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlnsPrefixAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlnsPrefixAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type XmlnsPrefixAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="de64a-101">XAML ファイルに要素と属性を書き込む (シリアル化する) ときや、XAML 編集機能を持つデザイン環境とやり取りするときに、XAML で使用するために XAML 名前空間に関連付ける推奨プレフィックスを示します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="de64a-101">Identifies a recommended prefix to associate with a XAML namespace for XAML usage, when writing elements and attributes in a XAML file (serialization) or when interacting with a design environment that has XAML editing features.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de64a-102">XAML プロセッサまたは XAML、または XAML シリアル化を実行する任意のプロセスが組み込まれたフレームワークは、一般に推奨されるプレフィックスを優先します。</span><span class="sxs-lookup"><span data-stu-id="de64a-102">XAML processors or frameworks that incorporate XAML, or any process that performs XAML serialization, should generally honor the recommended prefix.</span></span> <span data-ttu-id="de64a-103">いずれの場合も、元の XAML ソース内の特定のマッピングのプレフィックスはなんらかの理由でランタイムのオブジェクト グラフ内に保持されますか、または必要フレームワークやテクノロジでそれ以外の場合に格納されているプレフィックスを使用する場合があります。</span><span class="sxs-lookup"><span data-stu-id="de64a-103">The prefix might be necessary in any case where prefixes from specific mappings in the original XAML source are not somehow preserved in the runtime object graph or otherwise stored by a framework or technology.</span></span> <span data-ttu-id="de64a-104">フレームワークは、独自のアセンブリからの推奨されるプレフィックスを無視する、独自の型をシリアル化する方法について特定の設定があります。これは、既定の XAML 名前空間を一貫して昇格を行う可能性があります。</span><span class="sxs-lookup"><span data-stu-id="de64a-104">A framework might have specific preferences for how to serialize its own types that ignore the recommended prefix from its own assemblies; this might be done to consistently promote a default XAML namespace.</span></span> <span data-ttu-id="de64a-105">ただし、このようなフレームワークは XAML の型で可能なサード パーティおよびツールの使用推奨プレフィックスを提供する必要がありますもします。</span><span class="sxs-lookup"><span data-stu-id="de64a-105">However, such a framework should still provide recommended prefixes for possible third-party and tool usages of its XAML types.</span></span> <span data-ttu-id="de64a-106">以下の「ベスト プラクティス XAML デザイナーのサポートや一般的なシリアル化」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="de64a-106">See "Best Practice for XAML Designer Support or General Serialization" section below.</span></span>  
  
 <span data-ttu-id="de64a-107">プレフィックスの一般的な推奨事項では、プレフィックスは、通常 XAML 名前空間に由来するすべてのシリアル化された要素に適用するために、短い文字列を使用します。</span><span class="sxs-lookup"><span data-stu-id="de64a-107">A general recommendation for prefixes is to use short strings, because the prefix is typically applied to all serialized elements that come from the XAML namespace.</span></span> <span data-ttu-id="de64a-108">プレフィックス文字列の長さには、XAML のシリアル化された出力のサイズに影響が及ぶことができます。</span><span class="sxs-lookup"><span data-stu-id="de64a-108">The prefix string length can have a noticeable effect on the size of serialized XAML output.</span></span>  
  
 <span data-ttu-id="de64a-109">要求されているプレフィックスが既に別以前発生/シリアル化された XAML 名前空間の識別子で使用されている場合、動作は指定されていません (動作は、それぞれ個別の XAML プロセッサ実装までです)。</span><span class="sxs-lookup"><span data-stu-id="de64a-109">If a prefix being requested is already in use by another previously encountered/serialized XAML namespace identifier, the behavior is unspecified (behavior is up to each individual XAML processor implementation).</span></span>  
  
 <span data-ttu-id="de64a-110">適用するほとんどの場合、<xref:System.Windows.Markup.XmlnsPrefixAttribute>少なくとも 1 つを適用した場合にのみ<xref:System.Windows.Markup.XmlnsDefinitionAttribute>その同じ XAML 名前空間のアセンブリにします。</span><span class="sxs-lookup"><span data-stu-id="de64a-110">In most cases, you apply <xref:System.Windows.Markup.XmlnsPrefixAttribute> only if you have also applied at least one <xref:System.Windows.Markup.XmlnsDefinitionAttribute> in the assembly for that same XAML namespace.</span></span>  
  
 <span data-ttu-id="de64a-111">.NET Framework の以前のバージョンでは、このクラスは、WPF 固有の WindowsBase アセンブリに存在します。</span><span class="sxs-lookup"><span data-stu-id="de64a-111">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="de64a-112">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.Windows.Markup.XmlnsPrefixAttribute>は System.Xaml アセンブリにします。</span><span class="sxs-lookup"><span data-stu-id="de64a-112">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.XmlnsPrefixAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="de64a-113">詳細については、次を参照してください。 [WPF から System.Xaml に移行した型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)します。</span><span class="sxs-lookup"><span data-stu-id="de64a-113">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="best-practice-for-xaml-designer-support-or-general-serialization"></a><span data-ttu-id="de64a-114">XAML デザイナー サポートや一般的なシリアル化のためのベスト プラクティス</span><span class="sxs-lookup"><span data-stu-id="de64a-114">Best Practice for XAML Designer Support or General Serialization</span></span>  
 <span data-ttu-id="de64a-115">フレームワークまたはライブラリのほとんどの使用例の既定の XAML 名前空間に関連付けられている XAML 名前空間をする場合でも、空でない文字列を指定する XAML 名前空間の推奨されるプレフィックスとしてする必要があります。</span><span class="sxs-lookup"><span data-stu-id="de64a-115">Even if you intend the associated XAML namespace to be the default XAML namespace in most usage cases for your framework or library, you should still specify a non-empty string as the recommended prefix for a XAML namespace.</span></span> <span data-ttu-id="de64a-116">既定の XAML 名前空間の情報は、個々 の XAML ファイルと XAML ノード ストリームで実行されます。</span><span class="sxs-lookup"><span data-stu-id="de64a-116">Default XAML namespace information is carried in individual XAML files and XAML node streams.</span></span> <span data-ttu-id="de64a-117">既定の XAML 名前空間と指定した XAML ソースで定義されているどのできます簡単にする永続的なもののケースあたりのシリアル化を使用せず<xref:System.Windows.Markup.XmlnsPrefixAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="de64a-117">The default XAML namespace and how it is defined in a given XAML source can easily be perpetuated for per-case serialization without using <xref:System.Windows.Markup.XmlnsPrefixAttribute>.</span></span> <span data-ttu-id="de64a-118">ただし、 <xref:System.Windows.Markup.XmlnsPrefixAttribute> XAML 作成者が既定の XAML 名前空間を別のものにマップする選択した場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="de64a-118">However, the <xref:System.Windows.Markup.XmlnsPrefixAttribute> is useful for cases where the XAML author has chosen to map the default XAML namespace to something else.</span></span> <span data-ttu-id="de64a-119">このシナリオの設計に埋め込まれている XAML テキスト エディターで環境を使用できます<xref:System.Windows.Markup.XmlnsPrefixAttribute>初期の XAML 名前空間のヒントとして`xmlns`マッピングします。</span><span class="sxs-lookup"><span data-stu-id="de64a-119">In this scenario a XAML text editor embedded in a design environment can use <xref:System.Windows.Markup.XmlnsPrefixAttribute> as a hint for an initial XAML namespace `xmlns` mapping.</span></span> <span data-ttu-id="de64a-120">または、デザイン環境は、オブジェクトをツールボックスから、ビジュアル デ ザイン サーフェイスにドラッグするなどのデザインのメタファのバッキング XAML をジャストイン タイムのマッピングを追加できます。</span><span class="sxs-lookup"><span data-stu-id="de64a-120">Or a design environment can add just-in-time mappings to the backing XAML for design metaphors such as dragging objects out of a toolbox and into a visual design surface.</span></span> <span data-ttu-id="de64a-121">また、考えられるは、デザイナーが同時に複数の XAML を有効にするフレームワークをサポート可能性があり、フレームワーク固有のシリアル化ではなく、.NET Framework XAML サービスに依存している一般的な XAML シリアライザーです。</span><span class="sxs-lookup"><span data-stu-id="de64a-121">Also, it is conceivable that a designer could simultaneously support multiple XAML-enabling frameworks, and has a common XAML serializer that relies on .NET Framework XAML Services rather than framework-specific serialization.</span></span> <span data-ttu-id="de64a-122">指定する、<xref:System.Windows.Markup.XmlnsPrefixAttribute>これらのシナリオにすることで、XAML の使用状況の型よりポータブルと信頼性の高い場合は、XAML デザイン ツール間で交換されるまたは XAML エディターやマークアップ コンパイラなどの他のコンシューマーの間のラウンド トリップやその他シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="de64a-122">Specifying a <xref:System.Windows.Markup.XmlnsPrefixAttribute> for these scenarios helps make the XAML usage for your types more portable and robust if the XAML is exchanged between design tools, or undergoes a round trip between XAML editors and other consumers such as markup compilers or other serialization.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlnsPrefixAttribute (string xmlNamespace, string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string xmlNamespace, string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlnsPrefixAttribute.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlNamespace As String, prefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlnsPrefixAttribute(System::String ^ xmlNamespace, System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XmlnsPrefixAttribute : string * string -&gt; System.Windows.Markup.XmlnsPrefixAttribute" Usage="new System.Windows.Markup.XmlnsPrefixAttribute (xmlNamespace, prefix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">
          <span data-ttu-id="de64a-123">XAML 名前空間識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de64a-123">The XAML namespace indentifier.</span>
          </span>
        </param>
        <param name="prefix">
          <span data-ttu-id="de64a-124">推奨されるプレフィックス文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de64a-124">The recommended prefix string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de64a-125">
            <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de64a-125">Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsPrefixAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de64a-126">
            <paramref name="xmlNamespace" /> または <paramref name="prefix" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de64a-126">
              <paramref name="xmlNamespace" /> or <paramref name="prefix" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlnsPrefixAttribute.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Windows.Markup.XmlnsPrefixAttribute.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de64a-127">この属性に関連付けられているお勧めのプレフィックスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de64a-127">Gets the recommended prefix associated with this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de64a-128">推奨されるプレフィックス文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de64a-128">The recommended prefix string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespace">
      <MemberSignature Language="C#" Value="public string XmlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlNamespace : string" Usage="System.Windows.Markup.XmlnsPrefixAttribute.XmlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de64a-129">この属性に関連付けられた XAML 名前空間識別子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de64a-129">Gets the XAML namespace identifier associated with this attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de64a-130">XAML 名前空間識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="de64a-130">The XAML namespace identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>