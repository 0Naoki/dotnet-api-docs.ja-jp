<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="55dd6cc03b82733e7cc9502b48929ccdfcd92546" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="27db0-101">プロパティまたは型をアンビエントとして扱うように指定しています。</span>
      <span class="sxs-lookup">
        <span data-stu-id="27db0-101">Specifies that a property or type should be treated as ambient.</span>
      </span>
      <span data-ttu-id="27db0-102">アンビエントの概念は XAML プロセッサがメンバーの型の所有者を確認する方法と関連します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="27db0-102">The ambient concept relates to how XAML processors determine type owners of members.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27db0-103">アンビエント プロパティには、プロパティがあるが、オブジェクト グラフを作成するときに、即時の XAML ノードが作成されている設定のための一般的な型メンバーの参照が中断されている、パーサー コンテキストで使用できる値が予期されるときです。</span><span class="sxs-lookup"><span data-stu-id="27db0-103">An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</span></span> <span data-ttu-id="27db0-104">アンビエントの概念を次の 2 つの主な方法があります。</span><span class="sxs-lookup"><span data-stu-id="27db0-104">There are two main scenarios for the ambient concept:</span></span>  
  
-   <span data-ttu-id="27db0-105">同じオブジェクトの他のいくつかのプロパティは影響し、そのオブジェクトとプロパティ検索の動作を修飾します。</span><span class="sxs-lookup"><span data-stu-id="27db0-105">Some other property of the same object influences and qualifies how that object-property lookup should work.</span></span>  
  
-   <span data-ttu-id="27db0-106">プロパティはより大きな遅延メカニズムを表し、現在のオブジェクトに含まれるすべてのオブジェクトにメンバーの値を検索するためのアンビエント機能を拡張します。</span><span class="sxs-lookup"><span data-stu-id="27db0-106">The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</span></span>  
  
 <span data-ttu-id="27db0-107">この属性は、アンビエント プロパティの検索動作を有効にするコンテナーを必要とする特定のプロパティに適用できますか、そのプロパティの値の型のすべてのケースにアンビエント プロパティの動作を有効にするクラスに適用できます。</span><span class="sxs-lookup"><span data-stu-id="27db0-107">This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</span></span>  
  
 <span data-ttu-id="27db0-108"><xref:System.Windows.Markup.AmbientAttribute> アンビエントとして XAML アタッチ可能なプロパティの属性をサポートするために、CLR のメソッドにも適用できます。</span><span class="sxs-lookup"><span data-stu-id="27db0-108"><xref:System.Windows.Markup.AmbientAttribute> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</span></span> <span data-ttu-id="27db0-109">これは、CLR 実装、XAML で添付プロパティが実装されている/表されているためアクセサー パターンととしてのリフレクションを必要な可能性のある`get`と`set`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="27db0-109">This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with `get` and `set` methods.</span></span> <span data-ttu-id="27db0-110">属性に実際の CLR プロパティが存在しないための使用量を制限する<xref:System.AttributeTargets>に`Property`が有効にしていないアンビエントとしてアタッチ可能なメンバーを指定します。</span><span class="sxs-lookup"><span data-stu-id="27db0-110">No actual CLR property to attribute exists, so restricting usage for <xref:System.AttributeTargets> to `Property` would not have enabled specifying an attachable member as ambient.</span></span> <span data-ttu-id="27db0-111">アタッチ可能なメンバーは、レポートを作成するアンビエントとして、属性、`get`アクセサー。</span><span class="sxs-lookup"><span data-stu-id="27db0-111">For an attachable member that you want to report as ambient, attribute the `get` accessor.</span></span> <span data-ttu-id="27db0-112">必要がありますいないしようとするサポート方法を具体的にはアタッチ可能なメンバーではない属性のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="27db0-112">You should not attempt to attribute methods that are not specifically support methods of attachable members.</span></span>  
  
 <span data-ttu-id="27db0-113">.NET Framework の以前のバージョンでは、このクラスは WindowsBase WPF 固有のアセンブリに存在しています。</span><span class="sxs-lookup"><span data-stu-id="27db0-113">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="27db0-114">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.Windows.Markup.AmbientAttribute>は System.Xaml アセンブリにします。</span><span class="sxs-lookup"><span data-stu-id="27db0-114">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="27db0-115">詳細については、次を参照してください。 [WPF から System.Xaml に移行した型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)です。</span><span class="sxs-lookup"><span data-stu-id="27db0-115">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 <span data-ttu-id="27db0-116">アンビエント型 (型 where<xref:System.Windows.Markup.AmbientAttribute>型レベルで適用されます) 状況によっては XAML の処理プロパティの型する必要がある解決順序どおりに使用できます。</span><span class="sxs-lookup"><span data-stu-id="27db0-116">Ambient types (types where <xref:System.Windows.Markup.AmbientAttribute> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</span></span>  
  
## <a name="object-writer-scenarios"></a><span data-ttu-id="27db0-117">オブジェクト ライターのシナリオ</span><span class="sxs-lookup"><span data-stu-id="27db0-117">Object Writer Scenarios</span></span>  
 <span data-ttu-id="27db0-118">XAML オブジェクト ライターを定義して、プロパティ、メソッドまたは型が発生した場合、<xref:System.Windows.Markup.AmbientAttribute>が適用すると、通常必要がありますサービスにアクセスする、オブジェクトの書き込みに必要な目的のアンビエント プロパティ検索の動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="27db0-118">If you are defining a XAML object writer, and you encounter a property, method or type where <xref:System.Windows.Markup.AmbientAttribute> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</span></span> <span data-ttu-id="27db0-119">詳細については、「<xref:System.Xaml.IAmbientProvider>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27db0-119">For more information, see <xref:System.Xaml.IAmbientProvider>.</span></span>  
  
## <a name="value-converters"></a><span data-ttu-id="27db0-120">値コンバーター</span><span class="sxs-lookup"><span data-stu-id="27db0-120">Value Converters</span></span>  
 <span data-ttu-id="27db0-121">型コンバーターまたはマークアップ拡張機能は、文字列の名前付きまたは修飾なしでのメンバーまたは型を指定するプロパティなどの間接的な型マッピングを表すプロパティを処理するためにアンビエント情報を知る必要があります。</span><span class="sxs-lookup"><span data-stu-id="27db0-121">Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</span></span> <span data-ttu-id="27db0-122">このシナリオで<xref:System.Windows.Markup.AmbientAttribute>値コンバーター コード ロジックに直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="27db0-122">In this scenario, <xref:System.Windows.Markup.AmbientAttribute> is not intended to be used directly for value converter code logic.</span></span> <span data-ttu-id="27db0-123">値コンバーターが、XAML ライター処理動作を渡すに依存する必要はなく、<xref:System.Xaml.IAmbientProvider>値コンバーターのメソッドが呼び出されたときにそのサービスのコンテキストでします。</span><span class="sxs-lookup"><span data-stu-id="27db0-123">Rather, the value converter should rely on the XAML writer processing behavior, which will pass <xref:System.Xaml.IAmbientProvider> in its service contexts to your value converter methods when called.</span></span>  
  
## <a name="wpf-scenarios-for-ambientattribute"></a><span data-ttu-id="27db0-124">AmbientAttribute の WPF シナリオ</span><span class="sxs-lookup"><span data-stu-id="27db0-124">WPF Scenarios for AmbientAttribute</span></span>  
  
-   <span data-ttu-id="27db0-125">プロパティ、 <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) のプロパティ名のバッキング参照を検索するために必要なために必要なプロパティ名の参照を修飾できます<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>値。</span><span class="sxs-lookup"><span data-stu-id="27db0-125">A property of a <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values.</span></span>  
  
-   <span data-ttu-id="27db0-126">内のすべてのコンテンツ、`Resources`プロパティ (の項目、 <xref:System.Windows.ResourceDictionary>) だけでなく、テンプレートのコンテンツを値として他のピアにアクセスすることにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="27db0-126">All content within a `Resources` property (items of a <xref:System.Windows.ResourceDictionary>) as well as template content, should be able to access other peers as values.</span></span> <span data-ttu-id="27db0-127">全体を宣言する`Resources`アンビエントとしてプロパティを WPF XAML パーサーでこれを有効にするロジックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="27db0-127">Declaring the entire `Resources` property as ambient invokes logic that enables this in the WPF XAML parser.</span></span>  
  
 <span data-ttu-id="27db0-128">参照してください<xref:System.Windows.ResourceDictionary>設定用のシナリオ例については<xref:System.Windows.Markup.AmbientAttribute>型レベルでします。</span><span class="sxs-lookup"><span data-stu-id="27db0-128">See <xref:System.Windows.ResourceDictionary> for an example of a scenario for setting <xref:System.Windows.Markup.AmbientAttribute> at type level.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27db0-129">
            <see cref="T:System.Windows.Markup.AmbientAttribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="27db0-129">Initializes a new instance of the <see cref="T:System.Windows.Markup.AmbientAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>