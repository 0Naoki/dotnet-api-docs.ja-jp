<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f9e45dec13ae9f7f6870fdbf3ec38e5e3c747ca" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48627492" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>プロパティまたは型をアンビエントとして扱うように指定しています。 アンビエントの概念は XAML プロセッサがメンバーの型の所有者を確認する方法と関連します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アンビエント プロパティは、即時の XAML ノードが作成されるセットのために一般的な型メンバーの参照が中断されているが、オブジェクト グラフを作成するときに、パーサー コンテキストで使用できる値が必要な場所のプロパティです。 アンビエントの概念の 2 つの主なシナリオがあります。  
  
-   同じオブジェクトのさまざまなプロパティは影響し、そのオブジェクトとプロパティ検索のしくみを修飾します。  
  
-   プロパティは遅延の大きいメカニズムを表し、メンバー値を検索するためのアンビエント機能は、現在のオブジェクト内に含まれるすべてのオブジェクトに拡張します。  
  
 この属性は、アンビエント プロパティの検索動作を有効にするコンテナーを必要とする特定のプロパティに適用できるか、プロパティの値型のすべてのケースでのアンビエント プロパティの動作を有効にするクラスに適用できます。  
  
 <xref:System.Windows.Markup.AmbientAttribute> XAML のアタッチ可能なプロパティをアンビエントとして属性設定をサポートするために、CLR メソッドにも適用できます。 これは、CLR の実装を XAML で添付プロパティを実装/表されるでアクセサー パターンとしてリフレクションのために必要な可能性のある`get`と`set`メソッド。 属性に実際の CLR プロパティが存在しないための使用量を制限する<xref:System.AttributeTargets>に`Property`が有効にしていないアンビエントとしてアタッチ可能なメンバーを指定することです。 アンビエントとして報告するアタッチ可能なメンバー、属性、`get`アクセサー。 アタッチ可能なメンバーのサポート方法を具体的にはない属性のメソッドにはしないでください。  
  
 .NET Framework の以前のバージョンでは、このクラスは、WPF 固有の WindowsBase アセンブリに存在します。 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.Windows.Markup.AmbientAttribute>は System.Xaml アセンブリにします。 詳細については、次を参照してください。 [WPF から System.Xaml に移行した型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)します。  
  
 アンビエント型 (型 where<xref:System.Windows.Markup.AmbientAttribute>型レベルで適用されます)、プロパティの型解決が必要誤順序の特定の XAML の処理状況のために使用できます。  
  
## <a name="object-writer-scenarios"></a>オブジェクト ライターのシナリオ  
 XAML オブジェクト ライターを定義して、プロパティ、メソッドまたは型が発生した場合、<xref:System.Windows.Markup.AmbientAttribute>が適用するには、通常必要がありますサービスにアクセスする、オブジェクトを記述するために必要な目的のアンビエント プロパティ検索の動作を決定します。 詳細については、「<xref:System.Xaml.IAmbientProvider>」を参照してください。  
  
## <a name="value-converters"></a>値コンバーター  
 型コンバーターまたはマークアップ拡張機能は、文字列名または修飾なしで、メンバーまたは型を指定するプロパティなどの間接的な型マッピングを表すプロパティを処理するために、アンビエント情報を把握する必要があります。 このシナリオで<xref:System.Windows.Markup.AmbientAttribute>値コンバーター コード ロジックに直接使用するものではありません。 XAML のライター処理動作が合格する必要があります、値コンバーターを利用ではなく、<xref:System.Xaml.IAmbientProvider>値コンバーターのメソッドが呼び出されたときにそのサービスのコンテキストでします。  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>AmbientAttribute の WPF のシナリオ  
  
-   プロパティを<xref:System.Windows.Style>(<xref:System.Windows.Style.TargetType%2A>) のプロパティ名のバッキングの参照を検索するために必要なために必要なプロパティ名の参照を修飾できます<xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType>値。  
  
-   内のすべてのコンテンツを`Resources`プロパティ (の項目を<xref:System.Windows.ResourceDictionary>) テンプレートの内容とする必要がありますにアクセスできる他のピアとして値。 全体を宣言する`Resources`プロパティをアンビエントとしては、WPF XAML パーサーでこのようにするロジックを呼び出します。  
  
 参照してください<xref:System.Windows.ResourceDictionary>設定用のシナリオ例については<xref:System.Windows.Markup.AmbientAttribute>型レベル。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="http://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">カスタム型およびライブラリの XAML 関連の CLR 属性</related>
    <related type="Article" href="http://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">.NET Framework XAML サービスで使用するためのカスタム型の定義</related>
    <related type="Article" href="http://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">NET XAML サービスの概念に関するドキュメント</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.AmbientAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>