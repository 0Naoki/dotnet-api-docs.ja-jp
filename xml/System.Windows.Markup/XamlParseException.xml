<Type Name="XamlParseException" FullName="System.Windows.Markup.XamlParseException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd8ab4818dca17ed336db8ea716f0aa6e42f194b" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39819892" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlParseException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit XamlParseException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlParseException" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlParseException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlParseException : SystemException" />
  <TypeSignature Language="F#" Value="type XamlParseException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="70a5e-101">WPF XAML パーサーからのパーサー固有の例外の例外クラスを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="70a5e-101">Represents the exception class for parser-specific exceptions from a WPF XAML parser.</span>
      </span>
      <span data-ttu-id="70a5e-102">この例外は、.NET Framework 3.0 および .NET Framework 3.5 からの XAML API または WPF XAML パーサーの操作で使用されるか、または <see cref="T:System.Windows.Markup.XamlReader" /> API を呼び出すことによって WPF XAML パーサーの特定の用途に使用されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="70a5e-102">This exception is used in XAML API or WPF XAML parser operations from .NET Framework 3.0 and .NET Framework 3.5, or for specific use of the WPF XAML parser by calling <see cref="T:System.Windows.Markup.XamlReader" /> API.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70a5e-103"><xref:System.Windows.Markup.XamlParseException> WPF アプリケーションの解析と読み込みの XAML を実行する XAML の WPF 実装パーサーにのみ使用されます。</span><span class="sxs-lookup"><span data-stu-id="70a5e-103"><xref:System.Windows.Markup.XamlParseException> is used only for the WPF-implemented XAML parser that performs the XAML parsing and loading for WPF applications.</span></span> <span data-ttu-id="70a5e-104">具体的には、例外は対象とするアプリケーションに関連する、のみ[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]と[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="70a5e-104">Specifically, the exception is only relevant when an application targets [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span> <span data-ttu-id="70a5e-105">例外が実行時の呼び出しを実行中の WPF アプリケーション内から XAML を読み込む XAML の WPF 実装パーサーをフックする Api でユーザー コードから取得できますも (たとえば、呼び出し<xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="70a5e-105">The exception can also originate from user code in run-time calls to APIs that hook up the WPF-implemented XAML parser to load XAML from within a running WPF application (for example, calls to <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="70a5e-106">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]、<xref:System.Xaml.XamlParseException>通常 XAML 処理例外を報告する例外が別の名前空間で定義されている (<xref:System.Xaml>) と別のアセンブリ (System.Xaml)。</span><span class="sxs-lookup"><span data-stu-id="70a5e-106">For [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <xref:System.Xaml.XamlParseException> exception that typically reports XAML processing exceptions is defined in a different namespace (<xref:System.Xaml>) and a different assembly (System.Xaml).</span></span>  
  
 <span data-ttu-id="70a5e-107">WPF XAML パーサーへの同等の書き込みまたはを使用する場合を除き、[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]と[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]を対象とする一般的にはスローされません<xref:System.Windows.Markup.XamlParseException>独自のコードから。</span><span class="sxs-lookup"><span data-stu-id="70a5e-107">Unless you are writing an equivalent to the WPF XAML parser or working with [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] and [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] targeting, you generally will not throw <xref:System.Windows.Markup.XamlParseException> from your own code.</span></span> <span data-ttu-id="70a5e-108">ただし、例外の処理は必要があります。</span><span class="sxs-lookup"><span data-stu-id="70a5e-108">However, handling for the exception is sometimes necessary.</span></span> <span data-ttu-id="70a5e-109">アプリケーションのシナリオで、XAML の解析エラーを抑制することがあります、 <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.Dispatcher.UnhandledException>アプリケーション レベルのイベント ハンドラーが実行時に処理する方法の 1 つ<xref:System.Windows.Markup.XamlParseException>します。</span><span class="sxs-lookup"><span data-stu-id="70a5e-109">For application scenarios, where you may want to suppress XAML parse errors, a <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.Dispatcher.UnhandledException> event handler at the application level is one way to handle a run-time <xref:System.Windows.Markup.XamlParseException>.</span></span> <span data-ttu-id="70a5e-110">またはそれらのユーザー コードにセキュリティ例外を抑制するかどうかは、XAML の読み込みのためにアプリケーションを設計する方法に依存し、アプリケーション、XAML に割り当てることの信頼レベルを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="70a5e-110">Whether to suppress exceptions or let them surface to user code depends on how you design your application for purposes of loading XAML, and the trust level that you assign to the XAML your application loads.</span></span> <span data-ttu-id="70a5e-111">詳細については、次を参照してください。 [XAML セキュリティの考慮事項](~/docs/framework/xaml-services/xaml-security-considerations.md)または"XAML セキュリティ」セクションの[XAML の概要 (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md)します。</span><span class="sxs-lookup"><span data-stu-id="70a5e-111">For more information, see [XAML Security Considerations](~/docs/framework/xaml-services/xaml-security-considerations.md) or "XAML Security" section of [XAML Overview (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span></span>  
  
 <span data-ttu-id="70a5e-112">アプリケーションのページのときに、<xref:System.Windows.Markup.XamlParseException>がスローされると、それは通常のコンテキストで、`InitializeComponent`ページごとのレベルでの WPF XAML パーサーの WPF アプリケーション モデルの使用法のエントリ ポイントは、ページ クラスによって行われた呼び出しです。</span><span class="sxs-lookup"><span data-stu-id="70a5e-112">For pages of an application, when the <xref:System.Windows.Markup.XamlParseException> is thrown, it is usually in the context of the `InitializeComponent` call made by your page class, which is the entry point for the WPF application model's usage of the WPF XAML parser at the per-page level.</span></span> <span data-ttu-id="70a5e-113">そのためもう 1 つの可能な処理方法は、配置する`try/catch`ブロック`InitializeComponent`します。</span><span class="sxs-lookup"><span data-stu-id="70a5e-113">Therefore another possible handling strategy is to place `try/catch` blocks in `InitializeComponent`.</span></span> <span data-ttu-id="70a5e-114">ただし、この手法は、テンプレート、ビジュアル デザイン画面では統合されませんおよびをそのフックをソース生成他`InitializeComponent`します。</span><span class="sxs-lookup"><span data-stu-id="70a5e-114">However, this technique does not integrate well with templates, visual design surfaces and other generated sources that hook up `InitializeComponent`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="70a5e-115">
            <see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-115">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="70a5e-116">
            <see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-116">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlParseException : string -&gt; System.Windows.Markup.XamlParseException" Usage="new System.Windows.Markup.XamlParseException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="70a5e-117">例外メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-117">The exception message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70a5e-118">指定した例外メッセージ文字列を使用して、<see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-118">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlParseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlParseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlParseException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Windows.Markup.XamlParseException" Usage="new System.Windows.Markup.XamlParseException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="70a5e-119">オブジェクトのシリアル化または逆シリアル化に必要な情報をすべて含みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-119">Contains all the information that is required to serialize or deserialize the object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="70a5e-120">シリアル化ストリームの転送元および転送先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-120">The source and destination of a serialized stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70a5e-121">
            <see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-121">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70a5e-122">この型の例外をアプリケーション ドメインまたはコンピューターの境界を越えてマーシャ リングする場合、このコンス トラクターはシリアル化に使用します。</span><span class="sxs-lookup"><span data-stu-id="70a5e-122">This constructor is used for serialization when marshaling an exception of this type across an application domain or machine boundary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlParseException : string * Exception -&gt; System.Windows.Markup.XamlParseException" Usage="new System.Windows.Markup.XamlParseException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="70a5e-123">例外メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-123">The exception message.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="70a5e-124">発生した最初の例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-124">The initial exception that occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70a5e-125">指定した例外メッセージ文字列と内部例外を使用して、<see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-125">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string and inner exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70a5e-126">前回の例外の直接の結果としてスローされる例外は、前の例外への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="70a5e-126">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception.</span></span> <span data-ttu-id="70a5e-127"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`null` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<xref:System.Exception.InnerException%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="70a5e-127">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlParseException : string * int * int -&gt; System.Windows.Markup.XamlParseException" Usage="new System.Windows.Markup.XamlParseException (message, lineNumber, linePosition)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="70a5e-128">例外メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-128">The exception message.</span>
          </span>
        </param>
        <param name="lineNumber">
          <span data-ttu-id="70a5e-129">例外が発生した行番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-129">The line number where the exception occurred.</span>
          </span>
        </param>
        <param name="linePosition">
          <span data-ttu-id="70a5e-130">例外が発生した行内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-130">The position in the line at which the exception occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70a5e-131">指定した例外メッセージ文字列、指定した行番号、および行の位置を使用して、<see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-131">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string, and the specified line number and position in the line.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, int lineNumber, int linePosition, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 lineNumber, int32 linePosition, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, lineNumber As Integer, linePosition As Integer, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, int lineNumber, int linePosition, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlParseException : string * int * int * Exception -&gt; System.Windows.Markup.XamlParseException" Usage="new System.Windows.Markup.XamlParseException (message, lineNumber, linePosition, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="70a5e-132">例外メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-132">The exception message.</span>
          </span>
        </param>
        <param name="lineNumber">
          <span data-ttu-id="70a5e-133">例外が発生した行番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-133">The line number where the exception occurred.</span>
          </span>
        </param>
        <param name="linePosition">
          <span data-ttu-id="70a5e-134">例外が発生した行内の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-134">The position in the line at which the exception occurred.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="70a5e-135">発生した最初の例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-135">The initial exception that occurred.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70a5e-136">指定した例外メッセージ、内部例外、行番号、および行の位置を使用して、<see cref="T:System.Windows.Markup.XamlParseException" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-136">Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message, inner exception, line number, and position in the line.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70a5e-137">前回の例外の直接の結果としてスローされる例外は、前の例外への参照を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="70a5e-137">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception.</span></span> <span data-ttu-id="70a5e-138"><xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`null` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、<xref:System.Exception.InnerException%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="70a5e-138">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Windows.Markup.XamlParseException.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70a5e-139">例外がスローされたときのベース URI を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-139">Gets base URI information when the exception is thrown.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70a5e-140">パーサー コンテキストのベース URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-140">The parser context base URI.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70a5e-141">ベース URI は、例外が発生したときに、パーサー コンテキストのため利用可能な可能性があります。</span><span class="sxs-lookup"><span data-stu-id="70a5e-141">Base URI is potentially available because of parser context when the exception occurred.</span></span> <span data-ttu-id="70a5e-142">ベースを知ること URI はリソースの解決エラーが原因である場合のデバッグに役に立ちます。</span><span class="sxs-lookup"><span data-stu-id="70a5e-142">Knowing the base URI can be useful for debugging cases where a resource resolution error is the underlying cause.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="xamlParseException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="70a5e-143">シリアル化データを追加するシリアル化情報オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-143">The serialization information object to add the serialization data to.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="70a5e-144">このシリアル化のシリアル化先。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-144">The destination for this serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="70a5e-145">指定した <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトを設定することにより、指定したオブジェクトのシリアル化に必要なデータを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-145">Gets the data that is required to serialize the specified object by populating the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70a5e-146"><xref:System.Windows.Markup.XamlParseException.GetObjectData%2A> 設定、<xref:System.Runtime.Serialization.SerializationInfo>オブジェクトをシリアル化の対象となるすべての例外オブジェクト データ。</span><span class="sxs-lookup"><span data-stu-id="70a5e-146"><xref:System.Windows.Markup.XamlParseException.GetObjectData%2A> sets a <xref:System.Runtime.Serialization.SerializationInfo> object with all the exception object data targeted for serialization.</span></span> <span data-ttu-id="70a5e-147">逆シリアル化中に、ストリームで転送された <xref:System.Runtime.Serialization.SerializationInfo> から例外が再構成されます。</span><span class="sxs-lookup"><span data-stu-id="70a5e-147">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="70a5e-148">シリアル化サービスを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-148">for providing serialization services.</span>
          </span>
          <span data-ttu-id="70a5e-149">列挙型に関連付けられている:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" />セキュリティ アクション:<see cref="M:System.Security.PermissionSet.Demand" />します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="M:System.Security.PermissionSet.Demand" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="KeyContext">
      <MemberSignature Language="C#" Value="public object KeyContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object KeyContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.KeyContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ KeyContext { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyContext : obj" Usage="System.Windows.Markup.XamlParseException.KeyContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70a5e-150">例外が発生したディクショナリにある項目のキーの値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-150">Gets or sets the key value of the item in a dictionary where the exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70a5e-151">関連する XAML の <see langword="x:Key" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-151">The relevant XAML <see langword="x:Key" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.ResourceDictionary" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Windows.Markup.XamlParseException.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70a5e-152">例外が発生した行番号を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-152">Gets the line number where the exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70a5e-153">行番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-153">The line number.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Windows.Markup.XamlParseException.LinePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70a5e-154">例外が発生した行内の位置を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-154">Gets the position in the line where the exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70a5e-155">行番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-155">The line position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameContext">
      <MemberSignature Language="C#" Value="public string NameContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.NameContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameContext { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameContext : string" Usage="System.Windows.Markup.XamlParseException.NameContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70a5e-156">例外が発生したオブジェクトの XAML 名を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-156">Gets or sets the XAML name of the object where the exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70a5e-157">オブジェクトの XAML 名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-157">The XAML name of the object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UidContext">
      <MemberSignature Language="C#" Value="public string UidContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UidContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.UidContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UidContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UidContext { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UidContext : string" Usage="System.Windows.Markup.XamlParseException.UidContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="70a5e-158">例外が発生したオブジェクトの [x:Uid ディレクティブ](~/docs/framework/xaml-services/x-uid-directive.md)を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-158">Gets or sets the [x:Uid Directive](~/docs/framework/xaml-services/x-uid-directive.md) of the object where the exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="70a5e-159">
            <see langword="Uid" /> 文字列の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="70a5e-159">The value of the <see langword="Uid" /> string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>