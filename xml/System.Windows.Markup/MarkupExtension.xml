<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f36d9706c5d26b97dcc9537ee7078eceaf138fc8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5cc72-101">.NET Framework XAML サービスおよびその他の XAML リーダーと XAML ライターによってサポートされる XAML マークアップ拡張機能の実装のための基底クラスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5cc72-101">Provides a base class for XAML markup extension implementations that can be supported by .NET Framework XAML Services and other XAML readers and XAML writers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cc72-102">マークアップ拡張機能は、入力の文字列属性値または XAML でのマークアップ要素に基づいて、呼び出し元にオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-102">Markup extensions return objects to callers, based on the input of string attribute values or markup elements in XAML.</span></span> <span data-ttu-id="5cc72-103">マークアップ拡張機能は、型コンバーターのみを行うよりもより高度な方法でオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-103">Markup extensions return objects in a more sophisticated way than type converters alone can accomplish.</span></span> <span data-ttu-id="5cc72-104">XAML オブジェクト ライターでは、型またはメンバーに関連付けられている型コンバーターの実装があるために、型コンバーターが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5cc72-104">A XAML object writer invokes a type converter because a type or member has a type converter implementation associated with it.</span></span> <span data-ttu-id="5cc72-105">CLR の基準枠、つまり、型またはメンバーが<xref:System.ComponentModel.TypeConverterAttribute>に起因します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-105">From the CLR frame of reference, this means that a type or member is <xref:System.ComponentModel.TypeConverterAttribute> attributed.</span></span> <span data-ttu-id="5cc72-106">XAML 型システムの観点から、つまり、XAML 型または XAML メンバーが値をその`TypeConverter`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="5cc72-106">From the XAML type system perspective, this means that a XAML type or a XAML member has a value for its `TypeConverter` property.</span></span> <span data-ttu-id="5cc72-107">型コンバーターの呼び出しでは、型またはプロパティの定義に関連付けられていますおよび、このような場合の XAML 処理では、常に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5cc72-107">The invocation of a type converter is tied to the type or property definition, and is always invoked by XAML processing for these cases.</span></span> <span data-ttu-id="5cc72-108">これに対し、マークアップ拡張機能ユーザー コードとユーザー生成のマークアップの制御下にある詳細は、アプリケーション シナリオが要求するたびに適用することができます。</span><span class="sxs-lookup"><span data-stu-id="5cc72-108">In contrast, a markup extension is more under the control of user code and user-produced markup, and can be applied whenever an application scenario demands it.</span></span> <span data-ttu-id="5cc72-109">マークアップ拡張機能では、呼び出すことができ、マークアップ拡張機能の戻り値の型はその値を割り当てることができる限り、さまざまな型メンバーの値を設定するため使用されることができます。</span><span class="sxs-lookup"><span data-stu-id="5cc72-109">A markup extension can be invoked and can be used for setting different type-member values, so long as the markup extension's return type is assignable to that value.</span></span>  
  
 <span data-ttu-id="5cc72-110">カスタム マークアップ拡張機能を作成する方法については、次を参照してください。<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5cc72-110">For information on creating a custom markup extension, see <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>.</span></span> <span data-ttu-id="5cc72-111">一般にマークアップ拡張機能の詳細については、次を参照してください。 [XAML の概要のマークアップ拡張機能](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-111">For more information on markup extensions in general, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span></span> <span data-ttu-id="5cc72-112">WPF とを使用して、または XAML のマークアップ拡張機能の作成を構築する、他の関連情報がトピックに記載されて[マークアップ拡張機能と WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)です。</span><span class="sxs-lookup"><span data-stu-id="5cc72-112">If you are building on WPF and using or creating markup extensions for XAML, other relevant information can be found in the topic [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span></span>  
  
 <span data-ttu-id="5cc72-113"><xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>それぞれマークアップ拡張機能の実装の方法を使用することができます、<xref:System.IServiceProvider>実行時コンテキストを提供できます。</span><span class="sxs-lookup"><span data-stu-id="5cc72-113">The <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of each markup extension implementation can use an <xref:System.IServiceProvider> at run time that can provide context.</span></span> <span data-ttu-id="5cc72-114">これは、<xref:System.IServiceProvider>などの情報を渡す特定のサービスを照会し、<xref:System.Windows.Markup.IProvideValueTarget>または<xref:System.Windows.Markup.IXamlTypeResolver>です。</span><span class="sxs-lookup"><span data-stu-id="5cc72-114">This  <xref:System.IServiceProvider> is then queried for specific services that pass information, such as <xref:System.Windows.Markup.IProvideValueTarget> or <xref:System.Windows.Markup.IXamlTypeResolver>.</span></span> <span data-ttu-id="5cc72-115">マークアップ拡張機能のサービス コンテキストの詳細については、次を参照してください。[サービスで使用できるコンテキスト型コンバーターおよびマークアップ拡張機能](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-115">For more information on service contexts for a markup extension, see [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="5cc72-116">派生クラスの属性を使用する必要があります<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>からマークアップ拡張機能の使用可能な最も固有の戻り値の型のコンシューマーに通知する<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>実装します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-116">Derived classes should be attributed with <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> to inform consumers of the most specific return type available from the markup extension's <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5cc72-117">
            <see cref="T:System.Windows.Markup.MarkupExtension" /> から派生したクラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cc72-117">Initializes a new instance of a class derived from <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cc72-118"><xref:System.Windows.Markup.MarkupExtension>抽象クラスが初期化を必要とする任意のプライベート値を保持しません。</span><span class="sxs-lookup"><span data-stu-id="5cc72-118">The <xref:System.Windows.Markup.MarkupExtension> abstract class does not hold any private values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5cc72-119">機能のマークアップ拡張機能は、独自のパブリックな既定コンス トラクターを定義します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5cc72-119">A functional markup extension should define its own public default constructor.</span>
            </span>
            <span data-ttu-id="5cc72-120">さらに、マークアップ拡張機能では、拡張機能の目的の機能およびマークアップの使用に適したコンス トラクターを実装する必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5cc72-120">Additionally, the markup extension should implement constructors that are appropriate for the extension's intended capabilities and markup usage.</span>
            </span>
            <span data-ttu-id="5cc72-121">詳細については、次を参照してください。 [XAML の概要のマークアップ拡張機能](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5cc72-121">For more information, see [Markup Extensions for XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="5cc72-122">マークアップ拡張機能のサービスを提供できるサービス プロバイダーのヘルパー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cc72-122">A service provider helper that can provide services for the markup extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5cc72-123">派生クラスで実装された場合、このマークアップ拡張機能のターゲット プロパティの値として提供されるオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cc72-123">When implemented in a derived class, returns an object that is provided as the value of the target property for this markup extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5cc72-124">拡張機能が適用されたプロパティで設定するオブジェクト値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5cc72-124">The object value to set on the property where the extension is applied.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5cc72-125">呼び出す、XAML プロセッサは、マークアップ拡張機能は、型のノードとメンバー値を処理するとき、<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>そのマークアップ拡張機能のメソッド、オブジェクト グラフやシリアル化ストリームに結果を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5cc72-125">When a XAML processor processes a type node and member value that is a markup extension, it invokes the <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> method of that markup extension and writes the result into the object graph or serialization stream.</span></span> <span data-ttu-id="5cc72-126">XAML オブジェクト ライターがによるそのような実装を各にサービス コンテキストを渡す、`serviceProvider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5cc72-126">The XAML object writer passes service context to each such implementation through the `serviceProvider` parameter.</span></span>  
  
 <span data-ttu-id="5cc72-127">実装する方法についての詳細を参照してください「ノート実行者」セクション<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>カスタム マークアップ拡張機能です。</span><span class="sxs-lookup"><span data-stu-id="5cc72-127">See "Notes to Implementers" section for more information on how to implement <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> in a custom markup extension.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="5cc72-128">WPF の使用上の注意</span><span class="sxs-lookup"><span data-stu-id="5cc72-128">WPF Usage Notes</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5cc72-129">マークアップのセットの操作で特定の相互作用の WPF クラスに依存しないように<xref:System.Windows.Markup.IReceiveMarkupExtension>の[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]実装します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-129">WPF classes that have specific interactions with markup set operations should not rely on <xref:System.Windows.Markup.IReceiveMarkupExtension> for a [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] implementation.</span></span> <span data-ttu-id="5cc72-130">使用して<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-属性付きコールバックを代わりにします。</span><span class="sxs-lookup"><span data-stu-id="5cc72-130">Use <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-attributed callbacks instead.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="5cc72-131">通常使用できるカスタム、または既存する既定のサービス プロバイダーによって返される一般的なサービス<see cref="T:System.Windows.Markup.MarkupExtension" />実装には、次のプライマリ サービスが含まれます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="5cc72-131">Common services returned by the default service provider that is typically available to a custom or existing <see cref="T:System.Windows.Markup.MarkupExtension" /> implementation include the following primary services.</span>
            </span>  
  
-   <span data-ttu-id="5cc72-132"><see cref="T:System.Windows.Markup.IProvideValueTarget" /> オブジェクト参照が、マークアップ拡張機能が使用されているコンテキストからプロパティの識別子を報告します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-132"><see cref="T:System.Windows.Markup.IProvideValueTarget" /> reports the object reference and a property identifier from the context where the markup extension is used</span></span>  
  
-   <span data-ttu-id="5cc72-133"><see cref="T:System.Windows.Markup.IXamlTypeResolver" /> 匹敵全般の XAML オブジェクトの提供できる動作を記述するサービスを公開、 <see cref="T:System.Type" /> XAML 型名を基にします。</span><span class="sxs-lookup"><span data-stu-id="5cc72-133"><see cref="T:System.Windows.Markup.IXamlTypeResolver" /> exposes a service that parallels the general XAML object writing behavior that can provide a <see cref="T:System.Type" /> based on a XAML type name.</span></span><span data-ttu-id="5cc72-134">名前は、マップされている XAML 名前空間のプレフィックスを含めることができます必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="5cc72-134">The name can optionally include a prefix for a mapped XAML namespace.</span></span>  
  
-   <span data-ttu-id="5cc72-135"><see cref="T:System.Xaml.IXamlSchemaContextProvider" /> アクティブな XAML スキーマ コンテキストを直接公開します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-135"><see cref="T:System.Xaml.IXamlSchemaContextProvider" /> exposes the active XAML schema context directly.</span></span><span data-ttu-id="5cc72-136">報告された<see cref="T:System.Xaml.XamlSchemaContext" />、XAML スキーマ コンテキスト情報の種類のサポート、アセンブリ内の適切なプレフィックスのアセンブリがマップされている方法の一覧などのそれぞれを取得する<see cref="T:System.Xaml.XamlType" />アセンブリ、およびようにします。</span><span class="sxs-lookup"><span data-stu-id="5cc72-136">From the reported <see cref="T:System.Xaml.XamlSchemaContext" />, you can obtain XAML schema context information such as how assemblies are mapped for type support, preferred prefix in assemblies, lists of each <see cref="T:System.Xaml.XamlType" /> in an assembly, and so on.</span></span>  
  
-   <span data-ttu-id="5cc72-137">特殊なマークアップ拡張機能のシナリオに使用できるその他のサービスは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="5cc72-137">Other services available for more specialized markup extension scenarios include:</span></span>  
  
    -   <see cref="T:System.Windows.Markup.IUriContext" />  
  
    -   <see cref="T:System.Xaml.IAmbientProvider" />  
  
    -   <see cref="T:System.Xaml.IDestinationTypeProvider" />  
  
    -   <see cref="T:System.Xaml.IRootObjectProvider" />  
  
    -   <see cref="T:System.Xaml.IXamlNameResolver" />  
  
    -   <see cref="T:System.Xaml.IXamlNamespaceResolver" /><span data-ttu-id="5cc72-138">実装では、可能性のある<see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />無視することができます、<paramref name="serviceProvider" />パラメーター。</span><span class="sxs-lookup"><span data-stu-id="5cc72-138">Potentially, implementations of <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> can ignore the <paramref name="serviceProvider" /> parameter.</span></span><span data-ttu-id="5cc72-139">これは、コンテキストまったくが存在しない値を返すために必要ないくつかの基本的なシナリオの実行可能です。</span><span class="sxs-lookup"><span data-stu-id="5cc72-139">This is viable for some basic scenarios, where no context at all is required for returning a value.</span></span><span data-ttu-id="5cc72-140">一般的な使用法]、[.NET Framework XAML サービス、および実装した XAML オブジェクト ライターが XAML の中に呼び出されるすべての値コンバーターのメソッドに、サービス プロバイダーを提供する処理します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-140">In typical usage, the .NET Framework XAML Services and the implemented XAML object writers will provide a service provider to all value converter methods that are invoked during XAML processing.</span></span><span data-ttu-id="5cc72-141">ただし、堅牢性、サービス プロバイダー自体と、要求されたサービスの両方にコード パスを null 値に提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5cc72-141">However, for robustness, you should provide code paths for null values both for the service provider itself and for any requested service.</span></span><span data-ttu-id="5cc72-142">Null 値が発生する状況でマークアップ拡張機能が適用される場合 XAML プロセッサ インフラストラクチャによって提供される一般的なサービス サポートは使用できません。</span><span class="sxs-lookup"><span data-stu-id="5cc72-142">Null values might occur if your markup extension is applied in a circumstance where the typical service support provided by a XAML processor infrastructure is not available.</span></span><span data-ttu-id="5cc72-143">使用可能なサービスから XAML サービス プロバイダー コンテキストとその使用方法の詳細については、次を参照してください。[型コンバーターと XAML のマークアップ拡張機能](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-143">For more information on available services from the XAML service provider context and how to use them, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).</span></span><span data-ttu-id="5cc72-144">特定のサービスを便利な生成するために使用できるを使用して実装する<see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />そのサービスが利用できない場合に例外をスローする予測結果。</span><span class="sxs-lookup"><span data-stu-id="5cc72-144">Implementations that require a certain service to be available in order to produce a useful <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> result are expected to throw exceptions if that service is not available.</span></span><span data-ttu-id="5cc72-145">推奨される例外をスローするは<see cref="T:System.InvalidOperationException" />します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-145">The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.</span></span><span data-ttu-id="5cc72-146">カスタム マークアップ拡張機能は、値は null を提供するために必要な引数の 1 つはそのデータ型に対して無効またはマークアップ拡張機能が処理できる値が含まれていない場合、実装は例外をスローできます。</span><span class="sxs-lookup"><span data-stu-id="5cc72-146">The implementation may also throw exceptions if one of the arguments that the custom markup extension needs in order to provide a value is null, is invalid for its data type, or does not contain a value that the markup extension is capable of processing.</span></span><span data-ttu-id="5cc72-147">推奨される例外をスローするは<see cref="T:System.InvalidOperationException" />します。</span><span class="sxs-lookup"><span data-stu-id="5cc72-147">The recommended exception to throw is <see cref="T:System.InvalidOperationException" />.</span></span></para>
        </block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
  </Members>
</Type>