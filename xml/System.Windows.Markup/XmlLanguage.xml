<Type Name="XmlLanguage" FullName="System.Windows.Markup.XmlLanguage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="022116ef3ac51cfc15562c3554ff8eba19216867" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69166394" /></Metadata><TypeSignature Language="C#" Value="public class XmlLanguage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlLanguage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XmlLanguage" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlLanguage" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlLanguage" />
  <TypeSignature Language="F#" Value="type XmlLanguage = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.XmlLanguageConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>XAML マークアップで使用するための言語タグを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 言語タグに、XAML が解釈されるシステム<xref:System.Globalization.CultureInfo>に登録されているが存在する場合とない場合があります。  
  
 このクラスは、XML でを使用して`xml:lang`表される値を処理する場合に便利です。  
  
 言語タグは、2文字の形式で指定することも、ハイフネーションの言語ロケール形式で指定することもできます。 [RFC 3066](https://go.microsoft.com/fwlink/?LinkId=132454)を参照してください。  
  
 XML 仕様では`xml:lang`、RFC 3066 では許可されていませんが、空の文字列が許可されることに注意してください。したがって、型は "" (空の<xref:System.Windows.Markup.XmlLanguage>属性文字列) を許可します。 既定で構築<xref:System.Windows.Markup.XmlLanguage>されるは、"" (空の文字列) を使用して構築された場合と同様に動作します。  
  
<a name="xamlAttributeUsage_XmlLanguage"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object property="prefix"/>  
- or -  
<object property="prefix-subcode"/>  
```  
  
<a name="xamlValues_XmlLanguage"></a>   
## <a name="xaml-values"></a>XAML 値  
 *prefix*  
 ISO 639-1 言語のプレフィックス値を使用した言語プレフィックス。 たとえば、"en"、"zh-tw" などです。 大文字の値は許容され、小文字に変換されます。 空の属性 "" でもかまいません。  
  
 *subcode*  
 指定する場合、の前に1つのハイフンを付ける必要があります。 次に、RFC 3066 で定義されているサブコードを指定します。 最も一般的な使用方法と、に<xref:System.Globalization.CultureInfo>適切にマップされる可能性が最も高いのは、"-us" や "-hk" などの国または地域の指定です。 大文字の値は許容され、小文字に変換されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XmlLanguage Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XmlLanguage Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlLanguage.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XmlLanguage ^ Empty { System::Windows::Markup::XmlLanguage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Markup.XmlLanguage" Usage="System.Windows.Markup.XmlLanguage.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>空の属性文字列の言語タグを使用して <see cref="T:System.Windows.Markup.XmlLanguage" /> で作成される静的な <see cref="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)" /> インスタンスを取得します。</summary>
        <value>比較演算で使用するための空の言語タグの <see cref="T:System.Windows.Markup.XmlLanguage" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値は<xref:System.Windows.Markup.XmlLanguage> 、に対応するに設定され、 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> <xref:System.Windows.Markup.XmlLanguage.GetEquivalentCulture%2A>結果はに<xref:System.String.Empty?displayProperty=nameWithType>なります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEquivalentCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetEquivalentCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetEquivalentCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetEquivalentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEquivalentCulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetEquivalentCulture();" />
      <MemberSignature Language="F#" Value="member this.GetEquivalentCulture : unit -&gt; System.Globalization.CultureInfo" Usage="xmlLanguage.GetEquivalentCulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Globalization.CultureInfo" /> がこの <see cref="T:System.Windows.Markup.XmlLanguage" /> の <see cref="T:System.Globalization.CultureInfo" /> 値に登録されている場合にのみ、この <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> に対する同等の適切な <see cref="T:System.Windows.Markup.XmlLanguage" /> を返します。</summary>
        <returns>その型を引数として受け取るローカリゼーション/グローバリゼーション API の呼び出しに使用できる <see cref="T:System.Globalization.CultureInfo" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 同等<xref:System.Globalization.CultureInfo>のものが生成されない場合、このメソッドは例外を発生させます。 例外を処理しない場合は、代わりにを<xref:System.Windows.Markup.XmlLanguage.GetSpecificCulture%2A>呼び出します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Globalization.CultureInfo" /> の呼び出しで、指定された <see cref="T:System.Windows.Markup.XmlLanguage" /> に登録されている <see cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" /> が存在しないと判断されました。</exception>
        <altmember cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguage">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XmlLanguage GetLanguage (string ietfLanguageTag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.XmlLanguage GetLanguage(string ietfLanguageTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguage (ietfLanguageTag As String) As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::XmlLanguage ^ GetLanguage(System::String ^ ietfLanguageTag);" />
      <MemberSignature Language="F#" Value="static member GetLanguage : string -&gt; System.Windows.Markup.XmlLanguage" Usage="System.Windows.Markup.XmlLanguage.GetLanguage ietfLanguageTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ietfLanguageTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ietfLanguageTag">RFC 3066 言語文字列または空の文字列。</param>
        <summary>RFC 3066 で言語を表す文字列に基づく <see cref="T:System.Windows.Markup.XmlLanguage" /> インスタンスを返します。</summary>
        <returns><see cref="T:System.Windows.Markup.XmlLanguage" /> 値として指定された文字列を持つ新しい <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、実質的にコンストラクターです。  
  
 言語の文字列が空であるか、または[RFC 3066](https://go.microsoft.com/fwlink/?LinkId=132454)の規則に準拠している必要があります。  
  
-   最初のサブタグは、文字[!INCLUDE[TLA#tla_ascii](~/includes/tlasharptla-ascii-md.md)]のみで構成されている必要があります。  
  
-   追加のサブタグ[!INCLUDE[TLA#tla_ascii](~/includes/tlasharptla-ascii-md.md)]は、文字または数字で構成する必要があります。  
  
-   サブタグは、1つのハイフン文字で区切られます。  
  
-   すべてのサブタグの長さは 1 ~ 8 文字でなければなりません。  
  
-   先頭または末尾にハイフンを使用することはできません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ietfLanguageTag" /> パラメーターに null を指定することはできません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="ietfLanguageTag" /> パラメーターは空ではありませんでしたが、RFC 3066 で指定されている構文に準拠していません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpecificCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetSpecificCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetSpecificCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetSpecificCulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpecificCulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetSpecificCulture();" />
      <MemberSignature Language="F#" Value="member this.GetSpecificCulture : unit -&gt; System.Globalization.CultureInfo" Usage="xmlLanguage.GetSpecificCulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Globalization.CultureInfo" /> に最も密接に関連するニュートラル以外の <see cref="T:System.Windows.Markup.XmlLanguage" /> を返します。</summary>
        <returns>その型を引数として受け取るローカライズ/グローバリゼーション [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] の呼び出しに使用できる <see cref="T:System.Globalization.CultureInfo" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この<xref:System.Windows.Markup.XmlLanguage>がに等しい場合<xref:System.Windows.Markup.XmlLanguage.Empty%2A?displayProperty=nameWithType> 、このメソッドはを<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>返します。  
  
 このメソッドは、この<xref:System.Globalization.CultureInfo> <xref:System.Windows.Markup.XmlLanguage>の最も有効なプレフィックスに一致する登録を検索します。 登録<xref:System.Globalization.CultureInfo>されているが<xref:System.Globalization.CultureInfo.IsNeutralCulture%2A>ニュートラル`true`(is) の場合、このメソッドはの<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>呼び出しに依存して<xref:System.Globalization.CultureInfo> 、ニュートラルから特定のにマップします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在の <see cref="T:System.Windows.Markup.XmlLanguage" /><see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> に関連するニュートラル以外の <see cref="T:System.Globalization.CultureInfo" /> が登録されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string" Usage="System.Windows.Markup.XmlLanguage.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>言語タグの文字列表現を取得します。</summary>
        <value>言語タグの文字列表現。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、に<xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>提供されている最初に指定された文字列の正規化されたバージョンを返す場合があります。  
  
 このプロパティは、空<xref:System.String.Empty>の文字列がに指定され<xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>ている場合にもを返すことがあります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xmlLanguage.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.String" /> を表す <see cref="T:System.Windows.Markup.XmlLanguage" /> を返します</summary>
        <returns>現在の <see cref="T:System.Windows.Markup.XmlLanguage" /> を表す <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これにより<xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A> 、現在<xref:System.Windows.Markup.XmlLanguage>のの値が返されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
