<Type Name="XmlLanguage" FullName="System.Windows.Markup.XmlLanguage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e20deb4f9779b1954c5e036406f5e89684c7bd45" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37502465" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlLanguage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlLanguage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XmlLanguage" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlLanguage" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlLanguage" />
  <TypeSignature Language="F#" Value="type XmlLanguage = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.XmlLanguageConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a language tag for use in XAML markup.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 言語タグの可能性がありますか、登録されていることがない可能性があります<xref:System.Globalization.CultureInfo>XAML が解釈されます、システムに存在します。  
  
 このクラスを使用して表される値を処理するための便利な`xml:lang`xml。  
  
 フォームの 2 文字またはハイフンでつながれた言語ロケールの形式で、言語タグを指定できます。 参照してください[RFC 3066](http://go.microsoft.com/fwlink/?LinkId=132454)します。  
  
 XML 仕様での空の文字列はことに注意してください。`xml:lang`する RFC 3066; では許可されていませんが、そのため、、<xref:System.Windows.Markup.XmlLanguage>入力許可""(空の属性の文字列)。 既定で構築される<xref:System.Windows.Markup.XmlLanguage>で構築された場合と同様に""(空の文字列)。  
  
<a name="xamlAttributeUsage_XmlLanguage"></a>   
## <a name="xaml-attribute-usage"></a>XAML 属性の使用方法  
  
```  
<object property="prefix"/>  
- or -  
<object property="prefix-subcode"/>  
```  
  
<a name="xamlValues_XmlLanguage"></a>   
## <a name="xaml-values"></a>XAML 値  
 *prefix*  
 言語プレフィックス、ISO 639-1 言語のプレフィックス値を使用します。 たとえば、"en"や"zh"などです。 大文字の値が受け入れられるし、小文字に変換します。 空の属性もあります""です。  
  
 *subcode*  
 指定するの場合は、1 つのハイフンを付ける必要があります。 次に、サブコード RFC 3066 で定義されています。 最も一般的な使用状況、およびこれを最も適切にマップするには 1 つ、 <xref:System.Globalization.CultureInfo>、国または地域の指定はなど、"-米国"または"-hk"。 大文字の値が受け入れられるし、小文字に変換します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XmlLanguage Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XmlLanguage Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlLanguage.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XmlLanguage ^ Empty { System::Windows::Markup::XmlLanguage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Markup.XmlLanguage" Usage="System.Windows.Markup.XmlLanguage.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a static <see cref="T:System.Windows.Markup.XmlLanguage" /> instance as would be created by <see cref="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)" /> with the language tag as an empty attribute string.</summary>
        <value>空の言語タグ バージョン<see cref="T:System.Windows.Markup.XmlLanguage" />、比較操作で使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値が有効になって、<xref:System.Windows.Markup.XmlLanguage>に対応する<xref:System.String.Empty?displayProperty=nameWithType>が<xref:System.Windows.Markup.XmlLanguage.GetEquivalentCulture%2A>結果は<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEquivalentCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetEquivalentCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetEquivalentCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetEquivalentCulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEquivalentCulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetEquivalentCulture();" />
      <MemberSignature Language="F#" Value="member this.GetEquivalentCulture : unit -&gt; System.Globalization.CultureInfo" Usage="xmlLanguage.GetEquivalentCulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the appropriate equivalent <see cref="T:System.Globalization.CultureInfo" /> for this <see cref="T:System.Windows.Markup.XmlLanguage" />, if and only if such a <see cref="T:System.Globalization.CultureInfo" /> is registered for the <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value of this <see cref="T:System.Windows.Markup.XmlLanguage" /></summary>
        <returns>A <see cref="T:System.Globalization.CultureInfo" /> that can be used for localization-globalization API calls that take that type as an argument.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合同等ありません<xref:System.Globalization.CultureInfo>は、このメソッドで生成された例外が発生します。 例外を処理しない場合は、呼び出す<xref:System.Windows.Markup.XmlLanguage.GetSpecificCulture%2A>代わりにします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No registered <see cref="T:System.Globalization.CultureInfo" /> for the provided <see cref="T:System.Windows.Markup.XmlLanguage" /> exists, as determined by a call to <see cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />.</exception>
        <altmember cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguage">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XmlLanguage GetLanguage (string ietfLanguageTag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.XmlLanguage GetLanguage(string ietfLanguageTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLanguage (ietfLanguageTag As String) As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::XmlLanguage ^ GetLanguage(System::String ^ ietfLanguageTag);" />
      <MemberSignature Language="F#" Value="static member GetLanguage : string -&gt; System.Windows.Markup.XmlLanguage" Usage="System.Windows.Markup.XmlLanguage.GetLanguage ietfLanguageTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ietfLanguageTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ietfLanguageTag">An RFC 3066 language string, or empty string.</param>
        <summary>Returns a <see cref="T:System.Windows.Markup.XmlLanguage" /> instance, based on a string representing the language per RFC 3066.</summary>
        <returns>A new <see cref="T:System.Windows.Markup.XmlLanguage" /> with the provided string as its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、事実上、コンス トラクターです。  
  
 言語識別文字列が空であるかに準拠している必要があります[RFC 3066](http://go.microsoft.com/fwlink/?LinkId=132454)規則。  
  
-   最初のサブタグがのみ成る[!INCLUDE[TLA#tla_ascii](~/includes/tlasharptla-ascii-md.md)]文字。  
  
-   サブタグを追加する必要がありますで構成されている[!INCLUDE[TLA#tla_ascii](~/includes/tlasharptla-ascii-md.md)]文字または数字。  
  
-   サブタグは、1 つのハイフンで区切られます。  
  
-   すべてサブタグは 1 ~ 8 文字である必要があります。  
  
-   先頭または末尾にハイフンが許可されていません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ietfLanguageTag" /> parameter cannot be null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ietfLanguageTag" /> parameter was non-empty, but did not conform to the syntax specified in RFC 3066.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpecificCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetSpecificCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetSpecificCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetSpecificCulture" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpecificCulture () As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Globalization::CultureInfo ^ GetSpecificCulture();" />
      <MemberSignature Language="F#" Value="member this.GetSpecificCulture : unit -&gt; System.Globalization.CultureInfo" Usage="xmlLanguage.GetSpecificCulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the most-closely-related non-neutral <see cref="T:System.Globalization.CultureInfo" /> for this <see cref="T:System.Windows.Markup.XmlLanguage" />.</summary>
        <returns>A <see cref="T:System.Globalization.CultureInfo" /> that can be used for localization-globalization [!INCLUDE[TLA2#tla_api](~/includes/tla2sharptla-api-md.md)] calls that take that type as an argument.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この場合<xref:System.Windows.Markup.XmlLanguage>と等しい<xref:System.Windows.Markup.XmlLanguage.Empty%2A?displayProperty=nameWithType>し、このメソッドが返す<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>します。  
  
 このメソッドは、登録されている検索<xref:System.Globalization.CultureInfo>これの実行可能では最長プレフィックス一致<xref:System.Windows.Markup.XmlLanguage>します。 登録されているかどうか<xref:System.Globalization.CultureInfo>がニュートラル (<xref:System.Globalization.CultureInfo.IsNeutralCulture%2A>は`true`)、しへの呼び出しでこのメソッドが使用して<xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A>、neutral からマップする<xref:System.Globalization.CultureInfo>特定の 1 つにします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No related non-neutral <see cref="T:System.Globalization.CultureInfo" /> is registered for the current <see cref="T:System.Windows.Markup.XmlLanguage" /><see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IetfLanguageTag As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IetfLanguageTag { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IetfLanguageTag : string" Usage="System.Windows.Markup.XmlLanguage.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the string representation of the language tag.</summary>
        <value>言語タグの文字列表現。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、最初に指定された文字列の正規化されたバージョンを返す可能性がありますに提供する<xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>します。  
  
 このプロパティが返す可能性がありますも<xref:System.String.Empty>に空の文字列が提供されている場合<xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xmlLanguage.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Markup.XmlLanguage" />.</summary>
        <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Windows.Markup.XmlLanguage" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これにより返されます、 <xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A> 、現在の値<xref:System.Windows.Markup.XmlLanguage>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>