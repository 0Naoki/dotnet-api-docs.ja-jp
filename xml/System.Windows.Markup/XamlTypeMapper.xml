<Type Name="XamlTypeMapper" FullName="System.Windows.Markup.XamlTypeMapper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3d3958120fe26b80e126a09c20e3314d4c834d3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30658766" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeMapper" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XAML 要素名をアセンブリ内の適切な CLR <see cref="T:System.Type" /> に割り当てます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper> 別のコンテキストを提供する高度な WPF シナリオの一部である<xref:System.Windows.Markup.XamlReader>と<xref:System.Windows.Markup.XamlWriter>です。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] 、WPF アプリケーションを検討してくださいオーバーライド<xref:System.Xaml.XamlSchemaContext>使用しようとするのではなく、このシナリオの<xref:System.Windows.Markup.XamlTypeMapper>します。  
  
 <xref:System.Windows.Markup.XamlTypeMapper> アプリケーションよりも直接的な手法をカスタム マッピング情報を XAML パーサーを提供するために使用できる<xref:System.Windows.Markup.XmlnsDefinitionAttribute>アセンブリ コードの値。 アセンブリでは、すべての CLR 名前空間の統合または再コンパイルすることがなく既存のアセンブリを追加するだけで XAML の準備完了である型を参照するのに役立ちます。 この場合があります<xref:System.Windows.Markup.XmlnsDefinitionAttribute>属性設定します。  
  
 通常を作成する、<xref:System.Windows.Markup.XamlTypeMapper>インスタンスを指定するために、<xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A>のプロパティの値、<xref:System.Windows.Markup.ParserContext>です。 <xref:System.Windows.Markup.ParserContext>さらのコンテキストとして使用できます、<xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType>呼び出します。  
  
## <a name="default-mapper"></a>既定のマッパー  
 使用して既定のマッパーを取得することができます、<xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A>静的プロパティです。 既定のマッパーは、既定のアセンブリ リストでのみ機能します。 アセンブリに関する特定の情報はありません (で定義されている<xref:System.Windows.Markup.XamlTypeMapper>コンス トラクター) を使用します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.NamespaceMapEntry" />
    <altmember cref="T:System.Windows.Markup.ParserContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.XamlTypeMapper" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">
          <see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用するアセンブリ名の配列。</param>
        <summary>
          <see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用するアセンブリ名の配列を指定して、<see cref="T:System.Windows.Markup.XamlTypeMapper" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyNames" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeMapper (string[] assemblyNames, System.Windows.Markup.NamespaceMapEntry[] namespaceMaps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string[] assemblyNames, class System.Windows.Markup.NamespaceMapEntry[] namespaceMaps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyNames As String(), namespaceMaps As NamespaceMapEntry())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeMapper(cli::array &lt;System::String ^&gt; ^ assemblyNames, cli::array &lt;System::Windows::Markup::NamespaceMapEntry ^&gt; ^ namespaceMaps);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyNames" Type="System.String[]" />
        <Parameter Name="namespaceMaps" Type="System.Windows.Markup.NamespaceMapEntry[]" />
      </Parameters>
      <Docs>
        <param name="assemblyNames">
          <see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用するアセンブリ名の配列。</param>
        <param name="namespaceMaps">
          <see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用する名前空間の割り当ての配列。</param>
        <summary>指定されたアセンブリ名の配列と名前空間の割り当てを使用して、<see cref="T:System.Windows.Markup.XamlTypeMapper" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyNames" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddMappingProcessingInstruction">
      <MemberSignature Language="C#" Value="public void AddMappingProcessingInstruction (string xmlNamespace, string clrNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMappingProcessingInstruction(string xmlNamespace, string clrNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMappingProcessingInstruction (xmlNamespace As String, clrNamespace As String, assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMappingProcessingInstruction(System::String ^ xmlNamespace, System::String ^ clrNamespace, System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="clrNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">XML 名前空間のプレフィックス。</param>
        <param name="clrNamespace">割り当てる型が含まれている CLR 名前空間。</param>
        <param name="assemblyName">CLR 名前空間を格納するアセンブリ。</param>
        <summary>XML 名前空間とアセンブリの CLR 名前空間の間の割り当てを定義し、それを <see cref="T:System.Windows.Markup.XamlTypeMapper" /> 情報に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A> マッピングを追加するプログラムによる方法です。  たとえば、次の XAML mapping 命令のさまざまな部分のパラメーターに対応している、 <xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A>:  
  
```  
<Window xmlns:SDK="clr-namespace:Samples;assembly=SDKSamples">  
...  
```  
  
 `xmlNamespace`は`SDK`、`clrNamespace`は`Samples`、および`assemblyName`は`SDKSamples`します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlNamespace" /> は <see langword="null" /> です  
  
 - または -  
  
 <paramref name="clrNamespace" /> は <see langword="null" /> です  
  
 - または -  
  
 <paramref name="assemblyName" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowInternalType">
      <MemberSignature Language="C#" Value="protected virtual bool AllowInternalType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowInternalType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowInternalType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">アクセスする型。</param>
        <summary>特定の内部型にアクセスするために完全な信頼で呼び出される <see cref="T:System.Windows.Markup.XamlTypeMapper" /> の派生型に対して、アクセス許可を要求します。</summary>
        <returns>
          内部型にアクセスできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サブクラスによってオーバーライドされていない場合<xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A>は常に返します`false`です。  
  
 サブクラスによってオーバーライドされると、動作になっているはず<xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A>返す必要があります`true`内部の型は、アクセス、それ以外の場合`false`です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMapper">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XamlTypeMapper DefaultMapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XamlTypeMapper DefaultMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Markup::XamlTypeMapper ^ DefaultMapper { System::Windows::Markup::XamlTypeMapper ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定されていない場合、使用する <see cref="T:System.Windows.Markup.XamlTypeMapper" /> のインスタンスを取得します。</summary>
        <value>既定の型マッパー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のマッパーは、既定のアセンブリ リストでのみ機能します。 アセンブリに関する特定の情報はありません (で定義されている<xref:System.Windows.Markup.XamlTypeMapper>コンス トラクター) を使用します。 既定のアセンブリ リストは、現在の実装: `WindowsBase`、 `PresentationCore`、`PresentationFramework`です。  
  
 既定のマッパーを使用しても、使用できないことカスタム アセンブリ/種類 XAML でまったくとは限りません。 カスタム型とアセンブリを使用する場合とのマッピングを作成する従来の XAML の手法を使用し、必要がありますに過ぎません`xmlns`型またはアセンブリが参照される場所、型マッパー API ではなく各 XAML ページ内の属性です。 詳細については、次を参照してください。 [XAML 名前空間と WPF XAML のマッピングの Namespace](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string xmlNamespace, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetType(string xmlNamespace, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (xmlNamespace As String, localName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ xmlNamespace, System::String ^ localName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlNamespace">指定した XML 名前空間プレフィックス。</param>
        <param name="localName">割り当てられた <see cref="T:System.Type" /> を取得する XAML 要素の "ローカル" 名。 このコンテキストでの "ローカル" とは、提供された <c>xmlNamespace</c> に対して割り当てられたものであることを意味します。</param>
        <summary>指定された XML 名前空間プレフィックスおよび要素名を使用して、特定の XAML 要素が割り当てられる CLR <see cref="T:System.Type" /> を取得します。</summary>
        <returns>オブジェクトの <see cref="T:System.Type" />。割り当てを解決できない場合は、<see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 型が見つからない場合、提供された情報にマップされる`null`が返されます。  
  
 一部として、プレフィックスを含めないでください`localName`です。 XAML 要素の情報を付けるいずれかの分離に`xmlNamespace`と`localName`この API 呼び出しのコンポーネントです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="xmlNamespace" /> は <see langword="null" /> です  
  
 - または -  
  
 <paramref name="localName" /> は <see langword="null" />です。</exception>
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
    <Member MemberName="SetAssemblyPath">
      <MemberSignature Language="C#" Value="public void SetAssemblyPath (string assemblyName, string assemblyPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAssemblyPath(string assemblyName, string assemblyPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAssemblyPath (assemblyName As String, assemblyPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAssemblyPath(System::String ^ assemblyName, System::String ^ assemblyPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="assemblyPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">拡張子やパスを指定しない、アセンブリの短い名前 (<see cref="P:System.Reflection.AssemblyName.Name" /> と等価)。</param>
        <param name="assemblyPath">アセンブリのファイル パス。 アセンブリのパスは、拡張子を含む完全なファイル パスである必要があります。</param>
        <summary>アセンブリの読み込み時に使用するパスを指定します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="assemblyName" /> は <see langword="null" /> です  
  
 - または -  
  
 <paramref name="assemblyPath" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.Windows.Markup.XamlParseException">
          <paramref name="assemblyName" /> は <see cref="F:System.String.Empty" /> です  
  
 - または -  
  
 <paramref name="assemblyPath" /> は <see cref="F:System.String.Empty" /> です  
  
 - または -  
  
 <paramref name="assemblyPath" /> は、拡張子を含むファイルの完全パスではありません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>