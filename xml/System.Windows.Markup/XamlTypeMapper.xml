<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlTypeMapper.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a3d3958120fe26b80e126a09c20e3314d4c834d3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3d3958120fe26b80e126a09c20e3314d4c834d3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>Maps a XAML element name to the appropriate CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in assemblies.</source>
          <target state="translated">XAML 要素名をアセンブリ内の適切な CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> に割り当てます。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> is part of an advanced WPF scenario that supplies alternate context for <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> 別のコンテキストを提供する高度な WPF シナリオの一部である<ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader&gt;</ph>と<ph id="ph3">&lt;xref:System.Windows.Markup.XamlWriter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>For <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> WPF applications, you should consider overriding <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> for this scenario, rather than attempting to use <ph id="ph3">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> 、WPF アプリケーションを検討してくださいオーバーライド<ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph>使用しようとするのではなく、このシナリオの<ph id="ph3">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> can be used to provide the XAML parser with custom mapping information through a more direct technique than the application of <ph id="ph2">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> values on the assembly code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> アプリケーションよりも直接的な手法をカスタム マッピング情報を XAML パーサーを提供するために使用できる<ph id="ph2">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph>アセンブリ コードの値。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>This might be useful for consolidation of all CLR namespaces in an assembly, or for referencing types that are XAML-ready in an existing assembly without having to recompile it just to add <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> attributing.</source>
          <target state="translated">アセンブリでは、すべての CLR 名前空間の統合または再コンパイルすることがなく既存のアセンブリを追加するだけで XAML の準備完了である型を参照するのに役立ちます。 この場合があります<ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph>属性設定します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>You typically create a <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> instance in order to specify the <ph id="ph2">&lt;xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A&gt;</ph> property value for a <ph id="ph3">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph>.</source>
          <target state="translated">通常を作成する、<ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph>インスタンスを指定するために、<ph id="ph2">&lt;xref:System.Windows.Markup.ParserContext.XamlTypeMapper%2A&gt;</ph>のプロパティの値、<ph id="ph3">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph> in turn can be used as the context for a <ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType&gt;</ph> call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.ParserContext&gt;</ph>さらのコンテキストとして使用できます、<ph id="ph2">&lt;xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29?displayProperty=nameWithType&gt;</ph>呼び出します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>Default Mapper</source>
          <target state="translated">既定のマッパー</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>You can obtain a default mapper using the <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A&gt;</ph> static property.</source>
          <target state="translated">使用して既定のマッパーを取得することができます、<ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.DefaultMapper%2A&gt;</ph>静的プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>The default mapper only works on a default assembly list.</source>
          <target state="translated">既定のマッパーは、既定のアセンブリ リストでのみ機能します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>No specific information about assemblies (as is specified in <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> constructors) is used.</source>
          <target state="translated">アセンブリに関する特定の情報はありません (で定義されている<ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph>コンス トラクター) を使用します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.XamlTypeMapper">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
          <source>The array of assembly names the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> should use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> で使用するアセンブリ名の配列。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> class by specifying an array of assembly names that the <ph id="ph2">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> should use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> で使用するアセンブリ名の配列を指定して、<ph id="ph2">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
          <source><ph id="ph1">&lt;paramref name="assemblyNames" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyNames" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
          <source>The array of assembly names the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> should use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> で使用するアセンブリ名の配列。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
          <source>The array of namespace maps the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> should use.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> で使用する名前空間の割り当ての配列。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> class, using the specified array of assembly names and the specified namespace maps.</source>
          <target state="translated">指定されたアセンブリ名の配列と名前空間の割り当てを使用して、<ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
          <source><ph id="ph1">&lt;paramref name="assemblyNames" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyNames" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>The prefix for the XML namespace..</source>
          <target state="translated">XML 名前空間のプレフィックス。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>The CLR  namespace that contains the types to map.</source>
          <target state="translated">割り当てる型が含まれている CLR 名前空間。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>The assembly that contains the CLR  namespace.</source>
          <target state="translated">CLR 名前空間を格納するアセンブリ。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>Defines a mapping between an XML namespace and CLR namespaces in assemblies, and adds these to the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> information.</source>
          <target state="translated">XML 名前空間とアセンブリの CLR 名前空間の間の割り当てを定義し、それを <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> 情報に追加します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A&gt;</ph> is a programmatic way to add a mapping.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A&gt;</ph> マッピングを追加するプログラムによる方法です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>For example, the different parts of the following XAML mapping instruction correspond to the parameters of the <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A&gt;</ph>:</source>
          <target state="translated">たとえば、次の XAML mapping 命令のさまざまな部分のパラメーターに対応している、 <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction%2A&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>The <ph id="ph1">`xmlNamespace`</ph> is <ph id="ph2">`SDK`</ph>, the <ph id="ph3">`clrNamespace`</ph> is <ph id="ph4">`Samples`</ph>, and the <ph id="ph5">`assemblyName`</ph> is <ph id="ph6">`SDKSamples`</ph>.</source>
          <target state="translated"><ph id="ph1">`xmlNamespace`</ph>は<ph id="ph2">`SDK`</ph>、<ph id="ph3">`clrNamespace`</ph>は<ph id="ph4">`Samples`</ph>、および<ph id="ph5">`assemblyName`</ph>は<ph id="ph6">`SDKSamples`</ph>します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="xmlNamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlNamespace" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="clrNamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="clrNamespace" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
          <source>The type to access.</source>
          <target state="translated">アクセスする型。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
          <source>Requests permission for a <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> derived type that is called under full trust to access a specific internal type.</source>
          <target state="translated">特定の内部型にアクセスするために完全な信頼で呼び出される <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> の派生型に対して、アクセス許可を要求します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the internal type can be accessed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">内部型にアクセスできる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
          <source>If not overridden by a subclass, <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A&gt;</ph> always returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">サブクラスによってオーバーライドされていない場合<ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A&gt;</ph>は常に返します<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
          <source>When overridden by a subclass, the behavior should be that <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A&gt;</ph> should return <ph id="ph2">`true`</ph> if the internal type can be accessed; otherwise, <ph id="ph3">`false`</ph>.</source>
          <target state="translated">サブクラスによってオーバーライドされると、動作になっているはず<ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper.AllowInternalType%2A&gt;</ph>返す必要があります<ph id="ph2">`true`</ph>内部の型は、アクセス、それ以外の場合<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>Gets an instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> to use if one has not been specified.</source>
          <target state="translated">指定されていない場合、使用する <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlTypeMapper" /&gt;</ph> のインスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>The default type mapper.</source>
          <target state="translated">既定の型マッパー。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>The default mapper only works on a default assembly list.</source>
          <target state="translated">既定のマッパーは、既定のアセンブリ リストでのみ機能します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>No specific information about assemblies (as is specified in <ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph> constructors) is used.</source>
          <target state="translated">アセンブリに関する特定の情報はありません (で定義されている<ph id="ph1">&lt;xref:System.Windows.Markup.XamlTypeMapper&gt;</ph>コンス トラクター) を使用します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>In the current implementation the default assembly list is: <ph id="ph1">`WindowsBase`</ph>, <ph id="ph2">`PresentationCore`</ph>, <ph id="ph3">`PresentationFramework`</ph>.</source>
          <target state="translated">既定のアセンブリ リストは、現在の実装: <ph id="ph1">`WindowsBase`</ph>、 <ph id="ph2">`PresentationCore`</ph>、<ph id="ph3">`PresentationFramework`</ph>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>Using the default mapper does not mean that you cannot use custom assemblies/types in XAML at all.</source>
          <target state="translated">既定のマッパーを使用しても、使用できないことカスタム アセンブリ/種類 XAML でまったくとは限りません。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>It only means that if you do use custom types/assemblies, you must then use the conventional XAML technique of creating the mappings as <ph id="ph1">`xmlns`</ph> attributes in each XAML page where the types/assemblies are referenced, as opposed to a type mapper API.</source>
          <target state="translated">カスタム型とアセンブリを使用する場合とのマッピングを作成する従来の XAML の手法を使用し、必要がありますに過ぎません<ph id="ph1">`xmlns`</ph>型またはアセンブリが参照される場所、型マッパー API ではなく各 XAML ページ内の属性です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
          <source>For more information, see <bpt id="p1">[</bpt>XAML Namespaces and Namespace Mapping for WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>XAML 名前空間と WPF XAML のマッピングの Namespace<ept id="p1">](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>The specified XML namespace prefix.</source>
          <target state="translated">指定した XML 名前空間プレフィックス。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>The "local" name of the XAML element to obtain the mapped <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for.</source>
          <target state="translated">割り当てられた <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> を取得する XAML 要素の "ローカル" 名。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>Local in this context means as mapped versus the provided <bpt id="p1">&lt;c&gt;</bpt>xmlNamespace<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">このコンテキストでの "ローカル" とは、提供された <bpt id="p1">&lt;c&gt;</bpt>xmlNamespace<ept id="p1">&lt;/c&gt;</ept> に対して割り当てられたものであることを意味します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>Gets the CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that a given XAML element is mapped to, using the specified XML namespace prefix and element name.</source>
          <target state="translated">指定された XML 名前空間プレフィックスおよび要素名を使用して、特定の XAML 要素が割り当てられる CLR <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no mapping could be resolved.</source>
          <target state="translated">オブジェクトの <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。割り当てを解決できない場合は、<ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>If a type cannot be found that maps to the provided information, <ph id="ph1">`null`</ph> is returned.</source>
          <target state="translated">型が見つからない場合、提供された情報にマップされる<ph id="ph1">`null`</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>Do not include the prefix as part of <ph id="ph1">`localName`</ph>.</source>
          <target state="translated">一部として、プレフィックスを含めないでください<ph id="ph1">`localName`</ph>です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>For any prefixed XAML element information, separate it into <ph id="ph1">`xmlNamespace`</ph> and <ph id="ph2">`localName`</ph> components for this API call.</source>
          <target state="translated">XAML 要素の情報を付けるいずれかの分離に<ph id="ph1">`xmlNamespace`</ph>と<ph id="ph2">`localName`</ph>この API 呼び出しのコンポーネントです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="xmlNamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="xmlNamespace" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localName" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>The short name of the assembly without an extension or path specified (equivalent to <ph id="ph1">&lt;see cref="P:System.Reflection.AssemblyName.Name" /&gt;</ph>).</source>
          <target state="translated">拡張子やパスを指定しない、アセンブリの短い名前 (<ph id="ph1">&lt;see cref="P:System.Reflection.AssemblyName.Name" /&gt;</ph> と等価)。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>The file path of the assembly.</source>
          <target state="translated">アセンブリのファイル パス。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>The assembly path must be a full file path containing a file extension.</source>
          <target state="translated">アセンブリのパスは、拡張子を含む完全なファイル パスである必要があります。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>Specifies the path to use when loading an assembly.</source>
          <target state="translated">アセンブリの読み込み時に使用するパスを指定します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> です</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyName" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> is <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> is not a full file path containing a file extension.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyPath" /&gt;</ph> は、拡張子を含むファイルの完全パスではありません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>