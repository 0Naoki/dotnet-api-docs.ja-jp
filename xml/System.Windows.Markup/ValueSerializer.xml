<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="65a7488a614c640ae3cdd3cf8bb8adf47c3ea15d" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64994685" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <TypeSignature Language="F#" Value="type ValueSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="540fc-101">オブジェクト表現からのシリアル化の変換動作を定義する抽象クラス。</span><span class="sxs-lookup"><span data-stu-id="540fc-101">Abstract class that defines conversion behavior for serialization from an object representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-102">シリアル化のためにコンバーターが返す文字列は、損失が発生しないようにする必要があり、コンバーターは常に特定の値に対して同じ文字列を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="540fc-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="540fc-103">型コンバーター (から派生した<xref:System.ComponentModel.TypeConverter>もの) が、文字列出力の`ConvertTo`実装でこれらの要件を満たして<xref:System.Windows.Markup.ValueSerializer>いない場合は、カスタムを宣言する必要があります。</span><span class="sxs-lookup"><span data-stu-id="540fc-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="540fc-104">が要件を満たす<xref:System.Windows.Markup.ValueSerializer> 必要があるか、またはnullが型に関連付けられている必要があります。<xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="540fc-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="540fc-105">は、 <xref:System.Windows.Markup.ValueSerializerAttribute>属性を適用することによって型に関連付けられます。 <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="540fc-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="540fc-106">Null <xref:System.Windows.Markup.ValueSerializer>は、オブジェクトグラフから文字列への変換に対して、型コンバーターが無視される必要があることを示します。</span><span class="sxs-lookup"><span data-stu-id="540fc-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="540fc-107">の実装<xref:System.Windows.Markup.ValueSerializer>では、例外をスローしないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="540fc-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="540fc-108">スローされた例外は、シリアル化を終了できます。</span><span class="sxs-lookup"><span data-stu-id="540fc-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="540fc-109"><xref:System.Windows.Markup.IValueSerializerContext>とその api は、 <xref:System.ComponentModel.TypeConverter>の場合と<xref:System.ComponentModel.ITypeDescriptorContext>似ています。 <xref:System.Windows.Markup.ValueSerializer></span><span class="sxs-lookup"><span data-stu-id="540fc-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="540fc-110">実際には<xref:System.Windows.Markup.IValueSerializerContext> 、 <xref:System.ComponentModel.ITypeDescriptorContext>はを継承します。</span><span class="sxs-lookup"><span data-stu-id="540fc-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="540fc-111"><xref:System.Windows.Markup.ValueSerializer>派生クラス API が呼び出されると、呼び出し元 (通常はシリアライザープロセス) は、特定のサービスを提供する可能性のあるコンテキストを渡します。</span><span class="sxs-lookup"><span data-stu-id="540fc-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="540fc-112">一般的なガイダンスにより、は<xref:System.Windows.Markup.ValueSerializer>例外をスローしないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="540fc-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="540fc-113">コンテキストから特定のサービスを返さないと、例外もスローされません。</span><span class="sxs-lookup"><span data-stu-id="540fc-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="540fc-114">以前のバージョンの .NET Framework では、このクラスは WPF 固有のアセンブリ WindowsBase に存在していました。</span><span class="sxs-lookup"><span data-stu-id="540fc-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="540fc-115">で[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]は<xref:System.Windows.Markup.ValueSerializer> 、は、システムの .xaml アセンブリにあります。</span><span class="sxs-lookup"><span data-stu-id="540fc-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="540fc-116">詳細については、「 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="540fc-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="540fc-117"><see cref="T:System.Windows.Markup.ValueSerializer" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="540fc-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-118">このコンストラクターの本体は空です。クラス<xref:System.Windows.Markup.ValueSerializer>に、初期化を必要とする値が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="540fc-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="540fc-119">変換の評価対象となる文字列。</span><span class="sxs-lookup"><span data-stu-id="540fc-119">The string to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="540fc-120">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="540fc-120">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="540fc-121">派生クラスでオーバーライドされると、指定した <see cref="T:System.String" /> が、<see cref="T:System.Windows.Markup.ValueSerializer" /> の実装でサポートされる型のインスタンスに変換できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="540fc-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="540fc-122">値を変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="540fc-122"><see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-123">基本実装では、常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="540fc-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="540fc-124">変換の評価対象となるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="540fc-124">The object to evaluate for conversion.</span></span></param>
        <param name="context"><span data-ttu-id="540fc-125">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="540fc-125">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="540fc-126">派生クラスでオーバーライドされたとき、指定されたオブジェクトを <see cref="T:System.String" /> に変換できるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="540fc-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="540fc-127"><paramref name="value" /> を <see cref="T:System.String" /> に変換できる場合は <see langword="true" />。それ以外は <see langword="false." />。</span><span class="sxs-lookup"><span data-stu-id="540fc-127"><see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-128">基本実装では、常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="540fc-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj&#xA;override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="valueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="540fc-129">変換する文字列。</span><span class="sxs-lookup"><span data-stu-id="540fc-129">The string to convert.</span></span></param>
        <param name="context"><span data-ttu-id="540fc-130">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="540fc-130">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="540fc-131">派生クラスでオーバーライドされると、<see cref="T:System.String" /> を、<see cref="T:System.Windows.Markup.ValueSerializer" /> の実装でサポートされる型のインスタンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="540fc-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span></span></summary>
        <returns><span data-ttu-id="540fc-132">指定された <paramref name="value" /> に基づいて <see cref="T:System.Windows.Markup.ValueSerializer" /> の実装でサポートされる型の新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="540fc-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-133">基本実装では、常に例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="540fc-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="540fc-134"><paramref name="value" /> を変換できません。</span><span class="sxs-lookup"><span data-stu-id="540fc-134"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="540fc-135">実装から例外をスローしないようにします。</span><span class="sxs-lookup"><span data-stu-id="540fc-135">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="540fc-136">以下を参照してください。<see cref="T:System.Windows.Markup.ValueSerializer" /></span><span class="sxs-lookup"><span data-stu-id="540fc-136">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string&#xA;override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="valueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="540fc-137">文字列に変換するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="540fc-137">The object to convert into a string.</span></span></param>
        <param name="context"><span data-ttu-id="540fc-138">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="540fc-138">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="540fc-139">派生クラスでオーバーライドされると、指定したオブジェクトを <see cref="T:System.String" /> に変換します。</span><span class="sxs-lookup"><span data-stu-id="540fc-139">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="540fc-140">指定されたオブジェクトの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="540fc-140">A string representation of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-141">基本実装では、常に例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="540fc-141">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="540fc-142"><paramref name="value" /> を変換できません。</span><span class="sxs-lookup"><span data-stu-id="540fc-142"><paramref name="value" /> cannot be converted.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="540fc-143">実装から例外をスローしないようにします。</span><span class="sxs-lookup"><span data-stu-id="540fc-143">Avoid throwing exceptions from implementations.</span></span> <span data-ttu-id="540fc-144">以下を参照してください。<see cref="T:System.Windows.Markup.ValueSerializer" /></span><span class="sxs-lookup"><span data-stu-id="540fc-144">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="valueSerializer.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="540fc-145">変換できなかったオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="540fc-145">The object that could not be converted.</span></span></param>
        <summary><span data-ttu-id="540fc-146">変換を実行できなかった場合にスローされる例外を返します。</span><span class="sxs-lookup"><span data-stu-id="540fc-146">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="540fc-147"><see langword="ConvertFrom" /> の変換を実行できない場合にスローされる例外の <see cref="T:System.Exception" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="540fc-147">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-148">このメソッド`throw`では、実際のキーワードが呼び出されないため、一般的`throw GetConvertFromException`な使用方法は (パラメーターを指定した) です。</span><span class="sxs-lookup"><span data-stu-id="540fc-148">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="540fc-149">返される特定の例外<xref:System.InvalidOperationException>は`value` 、例外メッセージで渡されるです。</span><span class="sxs-lookup"><span data-stu-id="540fc-149">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="540fc-150">使用パターンは、の<xref:System.ComponentModel.TypeConverter>例外ユーティリティのパターンと同じです。</span><span class="sxs-lookup"><span data-stu-id="540fc-150">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="valueSerializer.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="destinationType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="540fc-151">変換できなかったオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="540fc-151">The object that could not be converted.</span></span></param>
        <param name="destinationType"><span data-ttu-id="540fc-152">コンバーターが変換しようとした型を表す型。</span><span class="sxs-lookup"><span data-stu-id="540fc-152">A type that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="540fc-153">変換を実行できなかった場合にスローされる例外を返します。</span><span class="sxs-lookup"><span data-stu-id="540fc-153">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="540fc-154"><see langword="ConvertTo" /> の変換を実行できない場合にスローされる例外の <see cref="T:System.Exception" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="540fc-154">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-155">このメソッド`throw`では、実際のキーワードが呼び出されないため、一般的`throw GetConvertToException`な使用`value`方法は (パラメーターを指定した) です。</span><span class="sxs-lookup"><span data-stu-id="540fc-155">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="540fc-156">返される特定の例外<xref:System.InvalidOperationException>は`value` 、例外メッセージで渡されるです。</span><span class="sxs-lookup"><span data-stu-id="540fc-156">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="540fc-157">使用パターンは、の<xref:System.ComponentModel.TypeConverter>例外ユーティリティのパターンと同じです。</span><span class="sxs-lookup"><span data-stu-id="540fc-157">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="540fc-158">オブジェクトの <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="540fc-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor descriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="540fc-159">シリアル化するプロパティの CLR プロパティ記述子。</span><span class="sxs-lookup"><span data-stu-id="540fc-159">The CLR property descriptor for the property to be serialized.</span></span></param>
        <summary><span data-ttu-id="540fc-160">プロパティの CLR プロパティ記述子を渡すことにより、プロパティに対して宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="540fc-160">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span></span></summary>
        <returns><span data-ttu-id="540fc-161">指定したプロパティに関連付けられているシリアライザー。</span><span class="sxs-lookup"><span data-stu-id="540fc-161">The serializer associated with the specified property.</span></span> <span data-ttu-id="540fc-162"><see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="540fc-162">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-163">プロパティ<xref:System.Windows.Markup.ValueSerializer>の、またはプロパティの値として使用される型については、プロパティまたは型<xref:System.Windows.Markup.ValueSerializerAttribute>の宣言に属性を適用することによって示されます。</span><span class="sxs-lookup"><span data-stu-id="540fc-163">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="540fc-164">メソッドは、CLR 型システム情報を読み取り、プロパティで見つかった場合は属性<xref:System.Windows.Markup.ValueSerializer>に基づいて新しいクラスを返すユーティリティメソッドです。プロパティの型で見つかった場合は、このメソッドを返します。 <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A></span><span class="sxs-lookup"><span data-stu-id="540fc-164">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="540fc-165">`null`そのようなシリアライザーが存在しない場合は、が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="540fc-165">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="540fc-166">`null`型またはプロパティに null 値が意図的に指定<xref:System.Windows.Markup.ValueSerializerAttribute>されている場合にも返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="540fc-166">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="540fc-167">をサポートする<xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A>別のモードでは`TypeConverterValueSerializer` 、内部<xref:System.Windows.Markup.ValueSerializer>クラスを返します。これは<xref:System.ComponentModel.TypeConverter> 、をラップ`Convert`し、 `Convert*String`メソッドをメソッドに変換する実装です (たとえば<xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>、は、 <xref:System.String>型の入力を使用して呼び出され<xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>、に変換されます。</span><span class="sxs-lookup"><span data-stu-id="540fc-167">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="540fc-168">これは、次のすべてが当てはまる場合にのみ実行されます。</span><span class="sxs-lookup"><span data-stu-id="540fc-168">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="540fc-169">は<xref:System.ComponentModel.TypeConverterAttribute> 、関連するプロパティ、または関連するプロパティの型にあります。</span><span class="sxs-lookup"><span data-stu-id="540fc-169">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="540fc-170">指定<xref:System.ComponentModel.TypeConverter>されたは正常に構築できます。</span><span class="sxs-lookup"><span data-stu-id="540fc-170">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="540fc-171">は<xref:System.ComponentModel.TypeConverter> 、 `true`型<xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>の参照<xref:System.String>と呼ばれるを返します。</span><span class="sxs-lookup"><span data-stu-id="540fc-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="540fc-172">は<xref:System.ComponentModel.TypeConverter> 、 `true`型<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>の参照<xref:System.String>と呼ばれるを返します。</span><span class="sxs-lookup"><span data-stu-id="540fc-172">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="540fc-173">は<xref:System.ComponentModel.TypeConverter> 、 `true`型<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>の参照<xref:System.String>と呼ばれるを返します。</span><span class="sxs-lookup"><span data-stu-id="540fc-173">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="540fc-174">次に特殊なケースを<xref:System.DateTime>示します。 <xref:System.Windows.Markup.DateTimeValueSerializer>型はを返します。型は内部では機能するシリアライザー`StringValueSerializer`() を返します。 <xref:System.String></span><span class="sxs-lookup"><span data-stu-id="540fc-174">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="540fc-175"><paramref name="descriptor" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="540fc-175"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="540fc-176"><see cref="T:System.Windows.Markup.ValueSerializer" /> を取得する対象の型。</span><span class="sxs-lookup"><span data-stu-id="540fc-176">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <summary><span data-ttu-id="540fc-177">指定した型に宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="540fc-177">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span></span></summary>
        <returns><span data-ttu-id="540fc-178">指定した型に関連付けられているシリアライザー。</span><span class="sxs-lookup"><span data-stu-id="540fc-178">The serializer associated with the specified type.</span></span> <span data-ttu-id="540fc-179"><see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="540fc-179">May return <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-180">型<xref:System.Windows.Markup.ValueSerializer>のは、型宣言に<xref:System.Windows.Markup.ValueSerializerAttribute>属性を適用することによって示されます。</span><span class="sxs-lookup"><span data-stu-id="540fc-180">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="540fc-181">メソッドは、CLR 型システム情報を読み取り、指定さ`type`れたで見つかった<xref:System.Windows.Markup.ValueSerializer>場合は属性に基づいて新しいクラスを返すユーティリティメソッドです。 <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A></span><span class="sxs-lookup"><span data-stu-id="540fc-181">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="540fc-182">`null`そのようなシリアライザーが存在しない場合は、が返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="540fc-182">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="540fc-183">`null`型に null 値が意図的に指定<xref:System.Windows.Markup.ValueSerializerAttribute>されている場合にも返されることがあります。</span><span class="sxs-lookup"><span data-stu-id="540fc-183">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="540fc-184">をサポートする<xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A>別のモードでは`TypeConverterValueSerializer` 、内部<xref:System.Windows.Markup.ValueSerializer>クラスを返します。これは<xref:System.ComponentModel.TypeConverter> 、をラップ`Convert`し、 `Convert*String`メソッドをメソッドに変換する実装です (たとえば<xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>、は、 <xref:System.String>型の入力を使用して呼び出され<xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>、に変換されます。</span><span class="sxs-lookup"><span data-stu-id="540fc-184">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="540fc-185">これは、次のすべてが当てはまる場合にのみ実行されます。</span><span class="sxs-lookup"><span data-stu-id="540fc-185">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="540fc-186"><xref:System.ComponentModel.TypeConverterAttribute>がに`type`あります。</span><span class="sxs-lookup"><span data-stu-id="540fc-186">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="540fc-187">指定<xref:System.ComponentModel.TypeConverter>されたは正常に構築できます。</span><span class="sxs-lookup"><span data-stu-id="540fc-187">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="540fc-188">は<xref:System.ComponentModel.TypeConverter> 、 `true`型<xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>の参照<xref:System.String>と呼ばれるを返します。</span><span class="sxs-lookup"><span data-stu-id="540fc-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="540fc-189">は<xref:System.ComponentModel.TypeConverter> 、 `true`型<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>の参照<xref:System.String>と呼ばれるを返します。</span><span class="sxs-lookup"><span data-stu-id="540fc-189">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="540fc-190">は<xref:System.ComponentModel.TypeConverter> 、 `true`型<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>の参照<xref:System.String>と呼ばれるを返します。</span><span class="sxs-lookup"><span data-stu-id="540fc-190">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="540fc-191">次に特殊なケースを<xref:System.DateTime>示します。 <xref:System.Windows.Markup.DateTimeValueSerializer>型はを返します。型は内部では機能するシリアライザー`StringValueSerializer`() を返します。 <xref:System.String></span><span class="sxs-lookup"><span data-stu-id="540fc-191">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="540fc-192"><paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="540fc-192"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (descriptor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="descriptor"><span data-ttu-id="540fc-193">シリアル化するプロパティの記述子。</span><span class="sxs-lookup"><span data-stu-id="540fc-193">Descriptor for the property to be serialized.</span></span></param>
        <param name="context"><span data-ttu-id="540fc-194">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="540fc-194">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="540fc-195">指定したコンテキストを使用して、指定されたプロパティに宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="540fc-195">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="540fc-196">指定したプロパティに関連付けられているシリアライザー。</span><span class="sxs-lookup"><span data-stu-id="540fc-196">The serializer associated with the specified property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-197">このオーバーロードは、CLR 型システムで報告される属性のみを使用するの`context`ではなく、をサービスとして使用し<xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>、のサービスの実装を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="540fc-197">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="540fc-198">通常<xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> 、実装はに依存`descriptor`しますが、特定のコンテキストに対して特殊な動作を実装することもあります。</span><span class="sxs-lookup"><span data-stu-id="540fc-198">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="540fc-199">このメソッドは、呼び出し元がサービスから使用できる<xref:System.Windows.Markup.IValueSerializerContext>を持っている場合に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="540fc-199">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="540fc-200">これにより、特定の<xref:System.Windows.Markup.ValueSerializer>コンテキストに対して正しいが返されます。</span><span class="sxs-lookup"><span data-stu-id="540fc-200">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="540fc-201">指定した<xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>の`null`コンテキストがから返され`descriptor`た場合、または指定した`null`コンテキストがの場合、動作はオーバーロード<xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29>の呼び出しと同じになります。</span><span class="sxs-lookup"><span data-stu-id="540fc-201">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="540fc-202"><paramref name="descriptor" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="540fc-202"><paramref name="descriptor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (type, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="540fc-203"><see cref="T:System.Windows.Markup.ValueSerializer" /> を取得する対象の型。</span><span class="sxs-lookup"><span data-stu-id="540fc-203">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span></span></param>
        <param name="context"><span data-ttu-id="540fc-204">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="540fc-204">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="540fc-205">指定したコンテキストを使用して、指定された型に宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="540fc-205">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="540fc-206">指定した型に関連付けられているシリアライザー。</span><span class="sxs-lookup"><span data-stu-id="540fc-206">The serializer associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-207">このオーバーロードは、CLR 型システムで報告される属性のみを使用するの`context`ではなく、をサービスとして使用し<xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>、のサービスの実装を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="540fc-207">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="540fc-208">通常<xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> 、実装はに依存`type`しますが、特定のコンテキストに対して特殊な動作を実装することもあります。</span><span class="sxs-lookup"><span data-stu-id="540fc-208">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="540fc-209">このメソッドは、呼び出し元がサービスから使用できる<xref:System.Windows.Markup.IValueSerializerContext>を持っている場合に呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="540fc-209">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="540fc-210">これにより、特定の<xref:System.Windows.Markup.ValueSerializer>コンテキストに対して正しいが返されます。</span><span class="sxs-lookup"><span data-stu-id="540fc-210">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="540fc-211">指定した<xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>の`null`コンテキストがから返され`type`た場合、または指定した`null`コンテキストがの場合、動作はオーバーロード<xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29>の呼び出しと同じになります。</span><span class="sxs-lookup"><span data-stu-id="540fc-211">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="540fc-212"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="540fc-212"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;&#xA;override this.TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;" Usage="valueSerializer.TypeReferences (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="540fc-213">シリアル化されている型。</span><span class="sxs-lookup"><span data-stu-id="540fc-213">The value being serialized.</span></span></param>
        <param name="context"><span data-ttu-id="540fc-214">変換に使用されるコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="540fc-214">Context information that is used for conversion.</span></span></param>
        <summary><span data-ttu-id="540fc-215"><see cref="T:System.Windows.Markup.ValueSerializer" /> によって参照される型の列挙体を取得します。</span><span class="sxs-lookup"><span data-stu-id="540fc-215">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span></span></summary>
        <returns><span data-ttu-id="540fc-216">このシリアライザーによって変換された型。</span><span class="sxs-lookup"><span data-stu-id="540fc-216">The types converted by this serializer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="540fc-217">返される列挙<xref:System.Windows.Markup.ValueSerializer>体には、変換が含まれているすべての型を含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="540fc-217">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="540fc-218">これにより、シリアライザーは、このシリアライザーが変換する型に関する十分な情報を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="540fc-218">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="540fc-219">このメソッドをオーバーライドすることは高度なシナリオです。</span><span class="sxs-lookup"><span data-stu-id="540fc-219">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="540fc-220">オーバーライドが必要になるのは、XAML スキーマコンテキストで使用できる CLR 型システム ownertype リレーションシップが十分な情報を報告しないシステムを実装している場合のみです。</span><span class="sxs-lookup"><span data-stu-id="540fc-220">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="540fc-221">WPF の使用上の注意</span><span class="sxs-lookup"><span data-stu-id="540fc-221">WPF Usage Notes</span></span>  
 <span data-ttu-id="540fc-222">プロパティ[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]システムは、依存関係プロパティに所有者<xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A>を追加できるという概念があるため、をオーバーライドする内部値シリアライザーを実装します。</span><span class="sxs-lookup"><span data-stu-id="540fc-222">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="540fc-223">式には、特別な内部処理もあります。</span><span class="sxs-lookup"><span data-stu-id="540fc-223">expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>