<Type Name="ValueSerializer" FullName="System.Windows.Markup.ValueSerializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59030ed027457420aa960fc21555efb478355923" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48750978" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ValueSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ValueSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ValueSerializer" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValueSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValueSerializer abstract" />
  <TypeSignature Language="F#" Value="type ValueSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4025f-101">オブジェクト表現からのシリアル化の変換動作を定義する抽象クラス。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4025f-101">Abstract class that defines conversion behavior for serialization from an object representation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-102">シリアル化のためのコンバーターを返す文字列は損失のないである必要があり、コンバーターでは、特定の値と同じ文字列を返す必要があります常にします。</span><span class="sxs-lookup"><span data-stu-id="4025f-102">The string a converter returns for serialization must be loss-less and the converter must always return the same string for a particular value.</span></span>  <span data-ttu-id="4025f-103">型コンバーターの場合 (から派生した<xref:System.ComponentModel.TypeConverter>) でこれらの要件を満たさないその`ConvertTo`文字列出力の実装、カスタム<xref:System.Windows.Markup.ValueSerializer>宣言する必要があります。</span><span class="sxs-lookup"><span data-stu-id="4025f-103">If a type converter (derived from <xref:System.ComponentModel.TypeConverter>) does not meet these requirements in its `ConvertTo` implementations for string output, a custom <xref:System.Windows.Markup.ValueSerializer> must be declared.</span></span> <span data-ttu-id="4025f-104">いずれか、<xref:System.Windows.Markup.ValueSerializer>要件、または null に満たす必要があります<xref:System.Windows.Markup.ValueSerializer>型を関連付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="4025f-104">Either the <xref:System.Windows.Markup.ValueSerializer> should meet the requirements, or a null <xref:System.Windows.Markup.ValueSerializer> should be associated with the type.</span></span> <span data-ttu-id="4025f-105">A<xref:System.Windows.Markup.ValueSerializer>適用することで、種類に関連付けられて、<xref:System.Windows.Markup.ValueSerializerAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="4025f-105">A <xref:System.Windows.Markup.ValueSerializer> is associated with a type by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute.</span></span>  
  
 <span data-ttu-id="4025f-106">Null<xref:System.Windows.Markup.ValueSerializer>オブジェクト グラフから文字列への変換の変換の型コンバーターを無視するかを示します。</span><span class="sxs-lookup"><span data-stu-id="4025f-106">A null <xref:System.Windows.Markup.ValueSerializer> indicates the type converter should be ignored for convert-to-string conversions from the object graph.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4025f-107">実装<xref:System.Windows.Markup.ValueSerializer>例外のスローは避ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="4025f-107">Implementation of <xref:System.Windows.Markup.ValueSerializer> should avoid throwing exceptions.</span></span> <span data-ttu-id="4025f-108">スローされた例外は、シリアル化を終了でした。</span><span class="sxs-lookup"><span data-stu-id="4025f-108">Any exceptions thrown could terminate serialization.</span></span>  
  
 <span data-ttu-id="4025f-109"><xref:System.Windows.Markup.IValueSerializerContext> <xref:System.Windows.Markup.ValueSerializer>であり、その Api に似ています<xref:System.ComponentModel.ITypeDescriptorContext>の<xref:System.ComponentModel.TypeConverter>します。</span><span class="sxs-lookup"><span data-stu-id="4025f-109"><xref:System.Windows.Markup.IValueSerializerContext> for a <xref:System.Windows.Markup.ValueSerializer> and its APIs is analogous to <xref:System.ComponentModel.ITypeDescriptorContext> for a <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="4025f-110">実際、<xref:System.Windows.Markup.IValueSerializerContext>継承<xref:System.ComponentModel.ITypeDescriptorContext>します。</span><span class="sxs-lookup"><span data-stu-id="4025f-110">In fact, <xref:System.Windows.Markup.IValueSerializerContext> inherits <xref:System.ComponentModel.ITypeDescriptorContext>.</span></span> <span data-ttu-id="4025f-111">ときに、<xref:System.Windows.Markup.ValueSerializer>派生クラスの API が呼び出されると、呼び出し元 (通常はシリアライザー プロセス) は、特定のサービスを提供するコンテキストを渡します。</span><span class="sxs-lookup"><span data-stu-id="4025f-111">When a <xref:System.Windows.Markup.ValueSerializer> derived class API is called, the caller (typically a serializer process) passes a context that may provide certain services.</span></span> <span data-ttu-id="4025f-112">一般的なガイダンスのためを<xref:System.Windows.Markup.ValueSerializer>例外をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4025f-112">Because of the general guidance that a <xref:System.Windows.Markup.ValueSerializer> must not throw exceptions.</span></span> <span data-ttu-id="4025f-113">エラーを特定のサービスをコンテキストから返す必要がありますも例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="4025f-113">Failure to return a particular service from the context must also not throw any exceptions.</span></span>  
  
 <span data-ttu-id="4025f-114">.NET Framework の以前のバージョンでは、このクラスは、WPF 固有の WindowsBase アセンブリに存在します。</span><span class="sxs-lookup"><span data-stu-id="4025f-114">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="4025f-115">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.Windows.Markup.ValueSerializer>は System.Xaml アセンブリにします。</span><span class="sxs-lookup"><span data-stu-id="4025f-115">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.ValueSerializer> is in the System.Xaml assembly.</span></span> <span data-ttu-id="4025f-116">詳細については、次を参照してください。 [WPF から System.Xaml に移行した型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)します。</span><span class="sxs-lookup"><span data-stu-id="4025f-116">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlXmlWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValueSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4025f-117">
            <see cref="T:System.Windows.Markup.ValueSerializer" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-117">Initializes a new instance of the <see cref="T:System.Windows.Markup.ValueSerializer" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-118">このコンス トラクターの本体は空です。<xref:System.Windows.Markup.ValueSerializer>クラスに初期化を必要とする任意の値が含まれていません。</span><span class="sxs-lookup"><span data-stu-id="4025f-118">The body of this constructor is empty; the <xref:System.Windows.Markup.ValueSerializer> class does not contain any values that require initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFromString (value As String, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4025f-119">変換の評価対象となる文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-119">The string to evaluate for conversion.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4025f-120">変換に使用されるコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-120">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-121">派生クラスでオーバーライドされると、指定した <see cref="T:System.String" /> が、<see cref="T:System.Windows.Markup.ValueSerializer" /> の実装でサポートされる型のインスタンスに変換できるかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-121">When overridden in a derived class, determines whether the specified <see cref="T:System.String" /> can be converted to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-122">値を変換できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-122">
              <see langword="true" /> if the value can be converted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-123">基本実装では、常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="4025f-123">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertToString">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertToString (value As Object, context As IValueSerializerContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool&#xA;override this.CanConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; bool" Usage="valueSerializer.CanConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4025f-124">変換の評価対象となるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-124">The object to evaluate for conversion.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4025f-125">変換に使用されるコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-125">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-126">派生クラスでオーバーライドされたとき、指定されたオブジェクトを <see cref="T:System.String" /> に変換できるかどうかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-126">When overridden in a derived class, determines whether the specified object can be converted into a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-127">
            <paramref name="value" /> を <see cref="T:System.String" /> に変換できる場合は <see langword="true" />。それ以外は <see langword="false." />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-127">
              <see langword="true" /> if the <paramref name="value" /> can be converted into a <see cref="T:System.String" />; otherwise, <see langword="false." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-128">基本実装では、常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="4025f-128">The base implementation always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public virtual object ConvertFromString (string value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFromString(string value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFromString (value As String, context As IValueSerializerContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFromString(System::String ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj&#xA;override this.ConvertFromString : string * System.Windows.Markup.IValueSerializerContext -&gt; obj" Usage="valueSerializer.ConvertFromString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4025f-129">変換する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-129">The string to convert.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4025f-130">変換に使用されるコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-130">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-131">派生クラスでオーバーライドされると、<see cref="T:System.String" /> を、<see cref="T:System.Windows.Markup.ValueSerializer" /> の実装でサポートされる型のインスタンスに変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-131">When overridden in a derived class, converts a <see cref="T:System.String" /> to an instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-132">指定された <paramref name="value" /> に基づいて <see cref="T:System.Windows.Markup.ValueSerializer" /> の実装でサポートされる型の新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-132">A new instance of the type that the implementation of <see cref="T:System.Windows.Markup.ValueSerializer" /> supports based on the supplied <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-133">基本の実装は常に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4025f-133">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4025f-134">
            <paramref name="value" /> を変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-134">
              <paramref name="value" /> cannot be converted.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4025f-135">実装からの例外のスローは避けます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4025f-135">Avoid throwing exceptions from implementations.</span>
            </span>
            <span data-ttu-id="4025f-136">以下を参照してください。<see cref="T:System.Windows.Markup.ValueSerializer" /></span>
            <span class="sxs-lookup">
              <span data-stu-id="4025f-136">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public virtual string ConvertToString (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ConvertToString(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.ConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertToString (value As Object, context As IValueSerializerContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ConvertToString(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string&#xA;override this.ConvertToString : obj * System.Windows.Markup.IValueSerializerContext -&gt; string" Usage="valueSerializer.ConvertToString (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4025f-137">文字列に変換するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-137">The object to convert into a string.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4025f-138">変換に使用されるコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-138">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-139">派生クラスでオーバーライドされると、指定したオブジェクトを <see cref="T:System.String" /> に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-139">When overridden in a derived class, converts the specified object to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-140">指定されたオブジェクトの文字列表現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-140">A string representation of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-141">基本の実装は常に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="4025f-141">The base implementation always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="4025f-142">
            <paramref name="value" /> を変換できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-142">
              <paramref name="value" /> cannot be converted.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="4025f-143">実装からの例外のスローは避けます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="4025f-143">Avoid throwing exceptions from implementations.</span>
            </span>
            <span data-ttu-id="4025f-144">以下を参照してください。<see cref="T:System.Windows.Markup.ValueSerializer" /></span>
            <span class="sxs-lookup">
              <span data-stu-id="4025f-144">See <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="valueSerializer.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4025f-145">変換できなかったオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-145">The object that could not be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-146">変換を実行できないときにスローする例外を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-146">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-147">
            <see langword="ConvertFrom" /> の変換を実行できない場合にスローされる例外の <see cref="T:System.Exception" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-147">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertFrom" /> conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-148">実際、`throw`キーワードはこのメソッドによって呼び出されませんが、一般的な使用方法は、そのため`throw GetConvertFromException`(で指定されたパラメーター)。</span><span class="sxs-lookup"><span data-stu-id="4025f-148">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertFromException` (with parameters provided).</span></span>  
  
 <span data-ttu-id="4025f-149">特定の例外が返される<xref:System.InvalidOperationException>で`value`例外メッセージで渡されます。</span><span class="sxs-lookup"><span data-stu-id="4025f-149">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="4025f-150">使用状況のパターンは、例外ユーティリティと同じ<xref:System.ComponentModel.TypeConverter>します。</span><span class="sxs-lookup"><span data-stu-id="4025f-150">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="valueSerializer.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4025f-151">変換できなかったオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-151">The object that could not be converted.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="4025f-152">コンバーターが変換しようとした型を表す型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-152">A type that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-153">変換を実行できないときにスローする例外を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-153">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-154">
            <see langword="ConvertTo" /> の変換を実行できない場合にスローされる例外の <see cref="T:System.Exception" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-154">An <see cref="T:System.Exception" /> object for the exception to throw when a <see langword="ConvertTo" /> conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-155">実際、`throw`キーワードはこのメソッドによって呼び出されませんが、一般的な使用方法は、そのため`throw GetConvertToException`(で`value`指定されたパラメーター)。</span><span class="sxs-lookup"><span data-stu-id="4025f-155">The actual `throw` keyword is not invoked by this method, therefore the typical usage is `throw GetConvertToException` (with `value` parameter provided).</span></span>  
  
 <span data-ttu-id="4025f-156">特定の例外が返される<xref:System.InvalidOperationException>で`value`例外メッセージで渡されます。</span><span class="sxs-lookup"><span data-stu-id="4025f-156">The specific exception returned is <xref:System.InvalidOperationException>, with `value` passed in the exception message.</span></span> <span data-ttu-id="4025f-157">使用状況のパターンは、例外ユーティリティと同じ<xref:System.ComponentModel.TypeConverter>します。</span><span class="sxs-lookup"><span data-stu-id="4025f-157">The pattern for usage is the same as for exception utilities in <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSerializerFor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4025f-158">オブジェクトの <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-158">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> for an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor descriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="descriptor">
          <span data-ttu-id="4025f-159">シリアル化するプロパティの CLR プロパティ記述子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-159">The CLR property descriptor for the property to be serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-160">プロパティの CLR プロパティ記述子を渡すことにより、プロパティに対して宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-160">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for a property, by passing a CLR property descriptor for the property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-161">指定したプロパティに関連付けられているシリアライザー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-161">The serializer associated with the specified property.</span>
          </span>
          <span data-ttu-id="4025f-162">
            <see langword="null" /> を返す場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-162">May return <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-163">A<xref:System.Windows.Markup.ValueSerializer>適用することで、プロパティまたはプロパティの値として使用される型が示されます、<xref:System.Windows.Markup.ValueSerializerAttribute>プロパティまたは型の宣言で属性。</span><span class="sxs-lookup"><span data-stu-id="4025f-163">A <xref:System.Windows.Markup.ValueSerializer> for a property, or for a type that is used as the value for a property, is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the property or type declaration.</span></span> <span data-ttu-id="4025f-164"><xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A>メソッドは、CLR 型システムの情報を読み取り、新しいを返しますユーティリティ メソッド<xref:System.Windows.Markup.ValueSerializer>場合に、クラスが属性に基づく、プロパティが見つからないか、プロパティの型で検出された場合。</span><span class="sxs-lookup"><span data-stu-id="4025f-164">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the property, or then if found on the property's type.</span></span> <span data-ttu-id="4025f-165">`null` このようなシリアライザーが存在しないかどうかに返されます。</span><span class="sxs-lookup"><span data-stu-id="4025f-165">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="4025f-166">`null` 型またはプロパティが null 値を持つ属性が意図的にかどうかは返される可能性がありますも<xref:System.Windows.Markup.ValueSerializerAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="4025f-166">`null` might also be returned if a type or property is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="4025f-167">別のモードを<xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A>サポートは、内部で返すことが`TypeConverterValueSerializer`はクラス、<xref:System.Windows.Markup.ValueSerializer>実装をラップする、<xref:System.ComponentModel.TypeConverter>し、変換、`Convert`メソッドを`Convert*String`メソッド (インスタンスの<xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>の入力を呼び出すと、<xref:System.String>型、およびに変換されます<xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>します。</span><span class="sxs-lookup"><span data-stu-id="4025f-167">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="4025f-168">これは、次のすべてが true の場合にのみ行います。</span><span class="sxs-lookup"><span data-stu-id="4025f-168">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="4025f-169">A<xref:System.ComponentModel.TypeConverterAttribute>に関連するプロパティ、または関連するプロパティの型が見つかった。</span><span class="sxs-lookup"><span data-stu-id="4025f-169">A <xref:System.ComponentModel.TypeConverterAttribute> is found on the relevant property, or the relevant property's type.</span></span>  
  
-   <span data-ttu-id="4025f-170">指定された<xref:System.ComponentModel.TypeConverter>正常に作成できます。</span><span class="sxs-lookup"><span data-stu-id="4025f-170">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="4025f-171"><xref:System.ComponentModel.TypeConverter>返します`true`の<xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>を参照するという、<xref:System.String>型。</span><span class="sxs-lookup"><span data-stu-id="4025f-171">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="4025f-172"><xref:System.ComponentModel.TypeConverter>返します`true`の<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>を参照するという、<xref:System.String>型。</span><span class="sxs-lookup"><span data-stu-id="4025f-172">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="4025f-173"><xref:System.ComponentModel.TypeConverter>返します`true`の<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>を参照するという、<xref:System.String>型。</span><span class="sxs-lookup"><span data-stu-id="4025f-173">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4025f-174">特殊なケースを次に示します:<xref:System.DateTime>戻り値の型を<xref:System.Windows.Markup.DateTimeValueSerializer>;<xref:System.String>型は、内部の機能がシリアライザーを返します (`StringValueSerializer`)。</span><span class="sxs-lookup"><span data-stu-id="4025f-174">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4025f-175">
            <paramref name="descriptor" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-175">
              <paramref name="descriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4025f-176">
            <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得する対象の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-176">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-177">指定した型に宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-177">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-178">指定した型に関連付けられているシリアライザー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-178">The serializer associated with the specified type.</span>
          </span>
          <span data-ttu-id="4025f-179">
            <see langword="null" /> を返す場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-179">May return <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-180">A<xref:System.Windows.Markup.ValueSerializer>適用することで、種類が示されるため、<xref:System.Windows.Markup.ValueSerializerAttribute>型宣言の属性。</span><span class="sxs-lookup"><span data-stu-id="4025f-180">A <xref:System.Windows.Markup.ValueSerializer> for a type is indicated by applying the <xref:System.Windows.Markup.ValueSerializerAttribute> attribute on the type declaration.</span></span> <span data-ttu-id="4025f-181"><xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A>メソッドは、CLR 型システムの情報を読み取り、新しいを返しますユーティリティ メソッド<xref:System.Windows.Markup.ValueSerializer>場合に、クラスが属性に基づく、指定した検出`type`します。</span><span class="sxs-lookup"><span data-stu-id="4025f-181">The <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> method is a utility method that reads the CLR type system information and returns a new <xref:System.Windows.Markup.ValueSerializer> class based on the attribute if found on the specified `type`.</span></span> <span data-ttu-id="4025f-182">`null` このようなシリアライザーが存在しないかどうかに返されます。</span><span class="sxs-lookup"><span data-stu-id="4025f-182">`null` might be returned if no such serializer exists.</span></span> <span data-ttu-id="4025f-183">`null` 型に意図的に属性を null 値が返される可能性がありますも<xref:System.Windows.Markup.ValueSerializerAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="4025f-183">`null` might also be returned if a type is deliberately attributed with a null-value <xref:System.Windows.Markup.ValueSerializerAttribute>.</span></span>  
  
 <span data-ttu-id="4025f-184">別のモードを<xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A>サポートは、内部で返すことが`TypeConverterValueSerializer`はクラス、<xref:System.Windows.Markup.ValueSerializer>実装をラップする、<xref:System.ComponentModel.TypeConverter>し、変換、`Convert`メソッドを`Convert*String`メソッド (インスタンスの<xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>の入力を呼び出すと、<xref:System.String>型、およびに変換されます<xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>します。</span><span class="sxs-lookup"><span data-stu-id="4025f-184">Another mode that <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%2A> supports is returning the internal `TypeConverterValueSerializer` class, which is a <xref:System.Windows.Markup.ValueSerializer> implementation that wraps a <xref:System.ComponentModel.TypeConverter> and translates the `Convert` methods to `Convert*String` methods (for instance <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType> is called with input of the <xref:System.String> type, and translates to <xref:System.Windows.Markup.ValueSerializer.ConvertToString%2A>.</span></span> <span data-ttu-id="4025f-185">これは、次のすべてが true の場合にのみ行います。</span><span class="sxs-lookup"><span data-stu-id="4025f-185">This is done only in cases where all of the following are true:</span></span>  
  
-   <span data-ttu-id="4025f-186">A<xref:System.ComponentModel.TypeConverterAttribute>で見つかった`type`します。</span><span class="sxs-lookup"><span data-stu-id="4025f-186">A <xref:System.ComponentModel.TypeConverterAttribute> is found on `type`.</span></span>  
  
-   <span data-ttu-id="4025f-187">指定された<xref:System.ComponentModel.TypeConverter>正常に作成できます。</span><span class="sxs-lookup"><span data-stu-id="4025f-187">The indicated <xref:System.ComponentModel.TypeConverter> can be successfully constructed.</span></span>  
  
-   <span data-ttu-id="4025f-188"><xref:System.ComponentModel.TypeConverter>返します`true`の<xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>を参照するという、<xref:System.String>型。</span><span class="sxs-lookup"><span data-stu-id="4025f-188">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.ConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="4025f-189"><xref:System.ComponentModel.TypeConverter>返します`true`の<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>を参照するという、<xref:System.String>型。</span><span class="sxs-lookup"><span data-stu-id="4025f-189">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
-   <span data-ttu-id="4025f-190"><xref:System.ComponentModel.TypeConverter>返します`true`の<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>を参照するという、<xref:System.String>型。</span><span class="sxs-lookup"><span data-stu-id="4025f-190">The <xref:System.ComponentModel.TypeConverter> returns `true` for <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A?displayProperty=nameWithType>, called referencing the <xref:System.String> type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4025f-191">特殊なケースを次に示します:<xref:System.DateTime>戻り値の型を<xref:System.Windows.Markup.DateTimeValueSerializer>;<xref:System.String>型は、内部の機能がシリアライザーを返します (`StringValueSerializer`)。</span><span class="sxs-lookup"><span data-stu-id="4025f-191">The following are special cases: <xref:System.DateTime> types return a <xref:System.Windows.Markup.DateTimeValueSerializer>; <xref:System.String> types return an internal but functional serializer (`StringValueSerializer`).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4025f-192">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-192">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (System.ComponentModel.PropertyDescriptor descriptor, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.ComponentModel.PropertyDescriptor descriptor, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.ComponentModel.PropertyDescriptor,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSerializerFor (descriptor As PropertyDescriptor, context As IValueSerializerContext) As ValueSerializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(System::ComponentModel::PropertyDescriptor ^ descriptor, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : System.ComponentModel.PropertyDescriptor * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (descriptor, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="descriptor">
          <span data-ttu-id="4025f-193">シリアル化するプロパティの記述子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-193">Descriptor for the property to be serialized.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4025f-194">変換に使用されるコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-194">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-195">指定したコンテキストを使用して、指定されたプロパティに宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-195">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified property, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-196">指定したプロパティに関連付けられているシリアライザー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-196">The serializer associated with the specified property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-197">純粋に頼ることがなく属性で報告される CLR 型システムで、このオーバー ロードを使用して、 `context` 、サービスとしてのサービスの実装を呼び出して、<xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4025f-197">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4025f-198"><xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>にも依存する通常の実装、`descriptor`が、特定のコンテキストの特別な動作を実装する場合があります。</span><span class="sxs-lookup"><span data-stu-id="4025f-198">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `descriptor`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="4025f-199">呼び出し元がある、使用可能なときに、このメソッドを呼び出す必要があります<xref:System.Windows.Markup.IValueSerializerContext>サービスから。</span><span class="sxs-lookup"><span data-stu-id="4025f-199">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span>  <span data-ttu-id="4025f-200">これにより、正しい<xref:System.Windows.Markup.ValueSerializer>の特定のコンテキストが返されます。</span><span class="sxs-lookup"><span data-stu-id="4025f-200">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="4025f-201">コンテキストを返す場合`null`からその<xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>、指定された`descriptor`、または指定したコンテキストが`null`、動作を呼び出すことと同じですし、<xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="4025f-201">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `descriptor`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.ComponentModel.PropertyDescriptor%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4025f-202">
            <paramref name="descriptor" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-202">
              <paramref name="descriptor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSerializerFor">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.ValueSerializer GetSerializerFor (Type type, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.ValueSerializer GetSerializerFor(class System.Type type, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.GetSerializerFor(System.Type,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::ValueSerializer ^ GetSerializerFor(Type ^ type, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetSerializerFor : Type * System.Windows.Markup.IValueSerializerContext -&gt; System.Windows.Markup.ValueSerializer" Usage="System.Windows.Markup.ValueSerializer.GetSerializerFor (type, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.ValueSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="4025f-203">
            <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得する対象の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-203">The type to get the <see cref="T:System.Windows.Markup.ValueSerializer" /> for.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4025f-204">変換に使用されるコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-204">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-205">指定したコンテキストを使用して、指定された型に宣言された <see cref="T:System.Windows.Markup.ValueSerializer" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-205">Gets the <see cref="T:System.Windows.Markup.ValueSerializer" /> declared for the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-206">指定した型に関連付けられているシリアライザー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-206">The serializer associated with the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-207">純粋に頼ることがなく属性で報告される CLR 型システムで、このオーバー ロードを使用して、 `context` 、サービスとしてのサービスの実装を呼び出して、<xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="4025f-207">Rather than relying purely on attributes reported in the CLR type system, this overload uses the `context` as a service, and calls the service's implementation of <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="4025f-208"><xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>にも依存する通常の実装、`type`が、特定のコンテキストの特別な動作を実装する場合があります。</span><span class="sxs-lookup"><span data-stu-id="4025f-208">The <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> implementation would typically also rely on the `type`, but might implement special behavior for certain contexts.</span></span>  
  
 <span data-ttu-id="4025f-209">呼び出し元がある、使用可能なときに、このメソッドを呼び出す必要があります<xref:System.Windows.Markup.IValueSerializerContext>サービスから。</span><span class="sxs-lookup"><span data-stu-id="4025f-209">This method should be called when the caller has an available <xref:System.Windows.Markup.IValueSerializerContext> from a service.</span></span> <span data-ttu-id="4025f-210">これにより、正しい<xref:System.Windows.Markup.ValueSerializer>の特定のコンテキストが返されます。</span><span class="sxs-lookup"><span data-stu-id="4025f-210">This will ensure that the correct <xref:System.Windows.Markup.ValueSerializer> is returned for the specific context.</span></span>  
  
 <span data-ttu-id="4025f-211">コンテキストを返す場合`null`からその<xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType>、指定された`type`、または指定したコンテキストが`null`、動作を呼び出すことと同じですし、<xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="4025f-211">If the context returns `null` from its <xref:System.Windows.Markup.IValueSerializerContext.GetValueSerializerFor%2A?displayProperty=nameWithType> for your specified `type`, or if the context you specify is `null`, then behavior is identical to calling the <xref:System.Windows.Markup.ValueSerializer.GetSerializerFor%28System.Type%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4025f-212">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-212">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences (object value, System.Windows.Markup.IValueSerializerContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences(object value, class System.Windows.Markup.IValueSerializerContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ValueSerializer.TypeReferences(System.Object,System.Windows.Markup.IValueSerializerContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TypeReferences (value As Object, context As IValueSerializerContext) As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences(System::Object ^ value, System::Windows::Markup::IValueSerializerContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;&#xA;override this.TypeReferences : obj * System.Windows.Markup.IValueSerializerContext -&gt; seq&lt;Type&gt;" Usage="valueSerializer.TypeReferences (value, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="context" Type="System.Windows.Markup.IValueSerializerContext" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="4025f-213">シリアル化する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-213">The value being serialized.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="4025f-214">変換に使用されるコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-214">Context information that is used for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4025f-215">
            <see cref="T:System.Windows.Markup.ValueSerializer" /> によって参照される型の列挙体を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-215">Gets an enumeration of the types referenced by the <see cref="T:System.Windows.Markup.ValueSerializer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4025f-216">このシリアライザーによって変換された型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4025f-216">The types converted by this serializer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4025f-217">任意の型を<xref:System.Windows.Markup.ValueSerializer>返された列挙体に含めるかに変換します。</span><span class="sxs-lookup"><span data-stu-id="4025f-217">Any types a <xref:System.Windows.Markup.ValueSerializer> converts should be included in the returned enumeration.</span></span>  <span data-ttu-id="4025f-218">これにより、除外のシリアライザーは、シリアライザーは変換の種類について十分な情報を持つようにするためのシリアライザー。</span><span class="sxs-lookup"><span data-stu-id="4025f-218">This allows a serializer to ensure a de-serializer has enough information about the types this serializer converts.</span></span>  
  
 <span data-ttu-id="4025f-219">高度なシナリオは、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="4025f-219">Overriding this method is an advanced scenario.</span></span> <span data-ttu-id="4025f-220">オーバーライドは、必ずシステムを実装している場合に必要な CLR 型システムの ownertype プロパティ関係が XAML スキーマ コンテキストを使用できると十分な情報が報告しません。</span><span class="sxs-lookup"><span data-stu-id="4025f-220">Overriding should only be necessary if you are implementing a system where CLR type system ownertype-property relationships available to a XAML schema context do not report enough information.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="4025f-221">WPF の使用上の注意</span><span class="sxs-lookup"><span data-stu-id="4025f-221">WPF Usage Notes</span></span>  
 <span data-ttu-id="4025f-222">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]プロパティ システムの実装をオーバーライドする内部値シリアライザー<xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A>ことができますが追加の所有者の概念が依存関係プロパティ。</span><span class="sxs-lookup"><span data-stu-id="4025f-222">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system implements an internal value serializer that overrides <xref:System.Windows.Markup.ValueSerializer.TypeReferences%2A> because a dependency property has a concept that it can have added owners.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="4025f-223">式では、特別な処理の内部処理もあります。</span><span class="sxs-lookup"><span data-stu-id="4025f-223"> expressions also have special internal handling.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>