<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="INameScope.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5387741b6254120f3bedc817966a2f93b51df1d15.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">387741b6254120f3bedc817966a2f93b51df1d15</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.INameScope">
          <source>Defines a contract for how names of elements should be accessed within a particular XAML namescope, and how to enforce uniqueness of names within that XAML namescope.</source>
          <target state="translated">特定の XAML 名前スコープ内で要素の名前にアクセスする方法、およびその XAML 名前スコープ内で名前の一意性を確保する方法のコントラクトを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>This interface is implemented by classes that have child elements that are intended to be reused through the template or defer metaphor.</source>
          <target state="translated">このインターフェイスは、テンプレートを使って再利用するか、比喩を延期するものでは子要素を持つクラスで実装されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>Templates, factories and similar constructs must have unique XAML namescopes that are separate from a main object graph and root XAML.</source>
          <target state="translated">テンプレート、ファクトリと類似したコンストラクトには、主要なオブジェクト グラフから切り離し、XAML のルートを一意の XAML 名前スコープがある場合があります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>The principle here is that there should be no name collisions when objects created from those child elements are introduced to an application's object graph, and so that DOM operations and XAML reference techniques that rely on the name identifier can rely on name uniqueness in each XAML namescope.</source>
          <target state="translated">ここでの原則は、ことはないはずの名前の衝突の DOM 操作および名前の識別子に依存する XAML の参照方法は、各 XAML 名前スコープの名前の一意性に依存できるように、それらの子要素から作成されたオブジェクトは、アプリケーションのオブジェクト グラフを導入するときにします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">.NET Framework の以前のバージョンでは、このインターフェイスは、WPF 固有の WindowsBase アセンブリに存在します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>、<ph id="ph2">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>は System.Xaml アセンブリにします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>WPF から System.Xaml に移行した型<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>WPF Usage Notes</source>
          <target state="translated">WPF の使用上の注意</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>This interface is implemented by the WPF class <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>.</source>
          <target state="translated">このインターフェイスは、WPF クラスによって実装<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>Most XAML namescope operations in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> operate by using <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> instances, but information is occasionally communicated internally by using <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope&gt;</ph> references.</source>
          <target state="translated">ほとんどの XAML 名前スコープ操作で<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>を使用して動作<ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph>情報は、インスタンスがときどき伝えられた内部的を使用して<ph id="ph3">&lt;xref:System.Windows.Markup.INameScope&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>Examples of WPF classes that use a factory or defer metaphor combined with XAML representation are <ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph>.</source>
          <target state="translated">ファクトリを使用してまたは XAML 表現と組み合わせる比喩を延期する WPF クラスの例としては<ph id="ph1">&lt;xref:System.Windows.Style&gt;</ph>と<ph id="ph2">&lt;xref:System.Windows.FrameworkTemplate&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.INameScope">
          <source>These implementations usually rely on the explicit versions of the interface methods available from the <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> class.</source>
          <target state="translated">これらの実装は、通常から使用可能なインターフェイス メソッドの明示的なバージョンに依存、<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.FindName(System.String)">
          <source>The name identifier for the object being requested.</source>
          <target state="translated">要求されたオブジェクトの名前の識別子。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.FindName(System.String)">
          <source>Returns an object that has the provided identifying name.</source>
          <target state="translated">指定された識別名を持つオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.FindName(System.String)">
          <source>The object, if found.</source>
          <target state="translated">見つかった場合はオブジェクト。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.FindName(System.String)">
          <source>Returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no object of that name was found.</source>
          <target state="translated">その名前のオブジェクトが見つからなかった場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.FindName(System.String)">
          <source>Valid name strings in XAML markup must match the requirements documented in <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">XAML マークアップで有効な名前の文字列に記載されている要件に一致する必要があります<bpt id="p1">[</bpt>XamlName の文法<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>The name to register.</source>
          <target state="translated">登録する名前。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>The specific element that the provided <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> refers to.</source>
          <target state="translated">指定した <bpt id="p1">&lt;c&gt;</bpt>name<ept id="p1">&lt;/c&gt;</ept> が参照する特定の要素。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>Registers the provided name into the current XAML namescope.</source>
          <target state="translated">現在の XAML 名前スコープに指定された名前を登録します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>Duplicate names in a XAML namescope are not permitted.</source>
          <target state="translated">XAML 名前スコープで重複する名前を指定することはできません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>Do not permit duplicate names to be registered.</source>
          <target state="translated">重複する名前の登録を許可されていません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>If the input <ph id="ph1">&lt;paramref name="name" /&gt;</ph> is already assigned to an existing element in the internal collection representation of the XAML namescope (even if it is the same as <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph>), throw an exception.</source>
          <target state="translated">場合、入力<ph id="ph1">&lt;paramref name="name" /&gt;</ph>XAML 名前スコープのコレクションの内部表現内の既存の要素に既に割り当てられている (と同じである場合でも<ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph>)、例外をスローします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)">
          <source>Also consider throwing an exception if the provided name does not conform to <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">指定された名前は準拠していない場合、例外がスローも検討<bpt id="p1">[</bpt>XamlName の文法<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
          <source>The name to unregister.</source>
          <target state="translated">登録解除する名前。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
          <source>Unregisters the provided name from the current XAML namescope.</source>
          <target state="translated">指定された名前を現在の XAML 名前スコープから登録解除します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
          <source>If the input name does not exist, throw an exception.</source>
          <target state="translated">入力名が存在しない場合は、例外をスローします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.INameScope.UnregisterName(System.String)">
          <source>You should remove the name and the previously registered element it refers to from the collection representation of the XAML namescope, so that the same name could potentially be registered again in the future.</source>
          <target state="translated">今後、同じ名前をもう一度登録できるように、名前と XAML 名前スコープのコレクションの表現を参照している登録済みの要素を削除する必要があります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>