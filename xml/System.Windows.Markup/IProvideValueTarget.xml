<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="751dd22e836a1cf2c79339b7d1f0f24ddcfa69f4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37560211" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="478e9-101">マークアップ拡張機能の評価に対する状況的なオブジェクトとプロパティの関係を報告するサービスを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="478e9-101">Represents a service that reports situational object-property relationships for markup extension evaluation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="478e9-102"><xref:System.Windows.Markup.IProvideValueTarget> 値コンバーターの起動が周囲オブジェクト プロパティ構造に関する情報を報告するサービスを表します。</span><span class="sxs-lookup"><span data-stu-id="478e9-102"><xref:System.Windows.Markup.IProvideValueTarget> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</span></span>  
  
 <span data-ttu-id="478e9-103">型コンバーターおよびマークアップ拡張機能を照会できます<xref:System.Windows.Markup.IProvideValueTarget>XAML オブジェクト ライターが値の変換動作を呼び出すと、XAML オブジェクト ライターによって提供されるサービスのコンテキストでサービスとして。</span><span class="sxs-lookup"><span data-stu-id="478e9-103">Type converters and markup extensions can query for <xref:System.Windows.Markup.IProvideValueTarget> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="478e9-104">詳細については、次を参照してください。[型コンバーターと XAML のマークアップ拡張機能](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)と[Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)します。</span><span class="sxs-lookup"><span data-stu-id="478e9-104">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="478e9-105">マークアップ拡張機能のシナリオでは具体的には、場所<xref:System.Windows.Markup.IProvideValueTarget>に便利ですが、マークアップ拡張機能の状況把握の使用状況の有効性を判断することです。</span><span class="sxs-lookup"><span data-stu-id="478e9-105">For markup extensions specifically, a scenario where <xref:System.Windows.Markup.IProvideValueTarget> is useful is to determine the validity of your markup extension's situational usage.</span></span> <span data-ttu-id="478e9-106">たとえば、マークアップ拡張機能が値の遅延のメカニズムを実装がそのメカニズムを使用して可能性があります、対象オブジェクトが実行時に、遅延のメカニズムの他のコンポーネントを使用できる場合に適しています。</span><span class="sxs-lookup"><span data-stu-id="478e9-106">For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</span></span> <span data-ttu-id="478e9-107">として返されるオブジェクトの型システムの特性を調べることもできます<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>し、そのオブジェクトは、遅延の手法をサポートしているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="478e9-107">You could check the type system characteristics of the object returned as <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> and make sure that object supports your deferral technique.</span></span> <span data-ttu-id="478e9-108">マークアップ拡張機能の値を返す場合は、マークアップ拡張機能はによって取得される内部例外として、XAML オブジェクト ライター例外がスローされない場合は、.</span><span class="sxs-lookup"><span data-stu-id="478e9-108">If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</span></span> <span data-ttu-id="478e9-109">型システムの特性を確認して、特定のプロパティが、機能をサポートしているようなシナリオを確保、<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>します。</span><span class="sxs-lookup"><span data-stu-id="478e9-109">A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span></span>  
  
 <span data-ttu-id="478e9-110">API 名<xref:System.Windows.Markup.IProvideValueTarget>こととの関連付けを示唆<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>、によって報告された、情報<xref:System.Windows.Markup.IProvideValueTarget>もに役に立ちます、<xref:System.ComponentModel.TypeConverter>または<xref:System.Windows.Markup.ValueSerializer>。</span><span class="sxs-lookup"><span data-stu-id="478e9-110">Although the API name <xref:System.Windows.Markup.IProvideValueTarget> might imply an association with <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, the information reported by <xref:System.Windows.Markup.IProvideValueTarget> can also be useful to a <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="478e9-111">A<xref:System.ComponentModel.TypeConverter>または<xref:System.Windows.Markup.ValueSerializer>型の特定のターゲットまたはターゲット プロパティの場合は、自分専用のために、マークアップ拡張機能をより詳細なコンテキストを通常があるし、状況把握の有効性が型システムでは、通常、予測可能なためです。</span><span class="sxs-lookup"><span data-stu-id="478e9-111">A <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</span></span> <span data-ttu-id="478e9-112">ただし、他のシナリオがあります。</span><span class="sxs-lookup"><span data-stu-id="478e9-112">However, other scenarios exist.</span></span> <span data-ttu-id="478e9-113">型コンバーターまたはマークアップ拡張機能によって実装される可能性をいくつかのシナリオの一覧を次には。</span><span class="sxs-lookup"><span data-stu-id="478e9-113">The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</span></span>  
  
-   <span data-ttu-id="478e9-114">取得<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>そのオブジェクトの他のプロパティのインスタンスの値を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="478e9-114">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read instance values of other properties on that object.</span></span> <span data-ttu-id="478e9-115">処理をここで必要とする可能性のターゲット オブジェクトの XAML メンバーの処理順序は非決定的であることができますので、設定されていない値は、堅牢であることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="478e9-115">Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</span></span>  
  
-   <span data-ttu-id="478e9-116">取得<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>型レベルのメタデータを読み取る、または型が必要なインターフェイスを実装することを確認します。</span><span class="sxs-lookup"><span data-stu-id="478e9-116">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read type-level metadata, or to verify that required interfaces are implemented by the type.</span></span>  
  
-   <span data-ttu-id="478e9-117">取得<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>プロパティ メタデータを読み取る。</span><span class="sxs-lookup"><span data-stu-id="478e9-117">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to read property metadata.</span></span>  
  
 <span data-ttu-id="478e9-118">1 つのシナリオは、使用する<xref:System.Windows.Markup.IProvideValueTarget>については、どのオブジェクトまたはプロパティは、マークアップ拡張機能によって設定する許可を制限します。</span><span class="sxs-lookup"><span data-stu-id="478e9-118">One scenario is to use <xref:System.Windows.Markup.IProvideValueTarget> information to limit which objects or properties are permitted to be set by your markup extension.</span></span>  
  
 <span data-ttu-id="478e9-119">サービスを使用する前に、サービス自体ができないことを確認します`null`コンテキストを使用する、関連するサービス プロバイダーのパラメーターで返されるときにします。</span><span class="sxs-lookup"><span data-stu-id="478e9-119">Before attempting to use the service, make sure that the service itself is not `null` when returned by the relevant service provider parameter you are using for context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="478e9-120">によって参照されるオブジェクトを変更することがなく、特に重要ですが、サービスを使用する場合、<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>プロパティ、またはそのオブジェクトによって参照される他のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="478e9-120">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object.</span></span> <span data-ttu-id="478e9-121">WPF 具体的には、これらの変更により、予期しない変更、WPF プロパティ システムを無効にします。</span><span class="sxs-lookup"><span data-stu-id="478e9-121">For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="478e9-122">型を使用しないで<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>正確な種類をマークアップ拡張機能または型コンバーターを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="478e9-122">Do not use the type of <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to determine which precise type a markup extension or type converter should return.</span></span> <span data-ttu-id="478e9-123">ベスト プラクティスでないです。</span><span class="sxs-lookup"><span data-stu-id="478e9-123">That is not a best practice.</span></span> <span data-ttu-id="478e9-124">戻り値の型の属性と一致する必要があります (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>のマークアップ拡張機能) またはパターン (型コンバーターのクラス名)。</span><span class="sxs-lookup"><span data-stu-id="478e9-124">Your return type should be consistent with attributing (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> for markup extensions) or patterns (class name of the type converter).</span></span>  
  
 <span data-ttu-id="478e9-125">.NET Framework の以前のバージョンでは、このインターフェイスは、WPF 固有の WindowsBase アセンブリに存在します。</span><span class="sxs-lookup"><span data-stu-id="478e9-125">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="478e9-126">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.Windows.Markup.IProvideValueTarget>は System.Xaml アセンブリにします。</span><span class="sxs-lookup"><span data-stu-id="478e9-126">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> is in the System.Xaml assembly.</span></span> <span data-ttu-id="478e9-127">詳細については、次を参照してください。 [WPF から System.Xaml に移行した型](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)します。</span><span class="sxs-lookup"><span data-stu-id="478e9-127">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="478e9-128">WPF の使用上の注意</span><span class="sxs-lookup"><span data-stu-id="478e9-128">WPF Usage Notes</span></span>  
 <span data-ttu-id="478e9-129">このサービスは、依存関係プロパティのバインドなどのフレームワーク機能をサポートします。</span><span class="sxs-lookup"><span data-stu-id="478e9-129">This service supports framework features such as binding on a dependency property.</span></span>  
  
 <span data-ttu-id="478e9-130">WPF では、によって表されるサービス<xref:System.Windows.Markup.IProvideValueTarget>マークアップ拡張機能または型コンバーターから返される値をコンテキストに依存する場所の状況のオブジェクトとプロパティを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="478e9-130">In WPF, the service represented by <xref:System.Windows.Markup.IProvideValueTarget> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</span></span>  
  
 <span data-ttu-id="478e9-131"><xref:System.Windows.Markup.IProvideValueTarget> 内部の実装で頻繁に利用して<xref:System.Windows.Data.BindingBase>WPF の依存関係プロパティのバインディング機構を実装するクラス。</span><span class="sxs-lookup"><span data-stu-id="478e9-131"><xref:System.Windows.Markup.IProvideValueTarget> is leveraged heavily in the internal implementation of <xref:System.Windows.Data.BindingBase>, the class that implements the binding mechanism for dependency properties in WPF.</span></span>  
  
 <span data-ttu-id="478e9-132">WPF 実装の既定の内部サービス プロバイダー<xref:System.Windows.Markup.IProvideValueTarget>カスタム マークアップ拡張機能または型コンバーターが使用できます。</span><span class="sxs-lookup"><span data-stu-id="478e9-132">A default internal service provider for WPF implements <xref:System.Windows.Markup.IProvideValueTarget> for usage by a custom markup extension or type converter.</span></span> <span data-ttu-id="478e9-133">によって報告されたオブジェクトとプロパティ<xref:System.Windows.Markup.IProvideValueTarget>WPF サービスの内部でのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="478e9-133">The object and property reported by <xref:System.Windows.Markup.IProvideValueTarget> can only be set by the internal WPF service.</span></span> <span data-ttu-id="478e9-134">この方法の定義の先を行く<xref:System.Windows.Markup.IProvideValueTarget>は少なくとも実装する独自のサービス プロバイダーのマークアップ拡張機能と型コンバーターの使用を定義する必要があります、<xref:System.Windows.Markup.IProvideValueTarget>と<xref:System.Windows.Markup.IXamlTypeResolver>サービス、およびは高度なここで記述されていないシナリオです。</span><span class="sxs-lookup"><span data-stu-id="478e9-134">Going beyond this definition of how <xref:System.Windows.Markup.IProvideValueTarget> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <xref:System.Windows.Markup.IProvideValueTarget> and <xref:System.Windows.Markup.IXamlTypeResolver> services, and that is an advanced scenario that is not described here.</span></span>  
  
 <span data-ttu-id="478e9-135">Null 値を<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>または<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>は必ずしもことは、マークアップ拡張機能または型コンバーターが機能しませんが、実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="478e9-135">A null value for <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> or <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</span></span> <span data-ttu-id="478e9-136">例のケースから値<xref:System.Windows.Markup.IProvideValueTarget>が null の場合、サービスが使用可能な場合でも、マークアップ拡張機能が別のマークアップ拡張機能内でなど入れ子になったかどうか、<xref:System.Windows.Data.Binding>します。</span><span class="sxs-lookup"><span data-stu-id="478e9-136">An example case where the values from <xref:System.Windows.Markup.IProvideValueTarget> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="478e9-137">実装に依存している<xref:System.Windows.Markup.IProvideValueTarget>null 値の場合は、その特定の例外をスローするために、意図した設計が、専用の場合に常に確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="478e9-137">An implementation that relies on <xref:System.Windows.Markup.IProvideValueTarget> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="478e9-138">報告されるターゲット オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="478e9-138">Gets the target object being reported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="478e9-139">報告されるターゲット オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="478e9-139">The target object being reported.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="478e9-140">によって返される値<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>の実際の参照、型システム識別子またはその他の識別子。</span><span class="sxs-lookup"><span data-stu-id="478e9-140">The value returned by <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> is the actual reference, not a type system identifier or other identifier.</span></span> <span data-ttu-id="478e9-141">値を指定できますも`null`; を参照してください<xref:System.Windows.Markup.IProvideValueTarget>します。</span><span class="sxs-lookup"><span data-stu-id="478e9-141">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="478e9-142">によって参照されるオブジェクトを変更することがなく、特に重要ですが、サービスを使用する場合、<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>プロパティ、または場合は、具体的には、値の変換ではないプロパティとしては、そのオブジェクトによって参照される他のオブジェクトを処理します。</span><span class="sxs-lookup"><span data-stu-id="478e9-142">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</span></span> <span data-ttu-id="478e9-143">WPF の具体的には、ターゲット オブジェクトを変更する変更される可能性が予期しない WPF プロパティ システムを無効にします。</span><span class="sxs-lookup"><span data-stu-id="478e9-143">For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="478e9-144">報告されるターゲット プロパティの識別子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="478e9-144">Gets an identifier for the target property being reported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="478e9-145">報告されるターゲット プロパティの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="478e9-145">An identifier for the target property being reported.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="478e9-146">値を指定できますも`null`; を参照してください<xref:System.Windows.Markup.IProvideValueTarget>します。</span><span class="sxs-lookup"><span data-stu-id="478e9-146">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="478e9-147">WPF の使用上の注意</span><span class="sxs-lookup"><span data-stu-id="478e9-147">WPF Usage Notes</span></span>  
 <span data-ttu-id="478e9-148">依存関係プロパティの既定の WPF サービスが返す可能性があります、<xref:System.Windows.DependencyProperty>マークアップ拡張機能または型コンバーターは、メタデータを使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="478e9-148">For a dependency property, the default WPF service may return a <xref:System.Windows.DependencyProperty>, such that the markup extension or type converter can use metadata.</span></span> <span data-ttu-id="478e9-149">それ以外の場合、返されたオブジェクトができる、 <xref:System.Reflection.PropertyInfo> CLR プロパティ。</span><span class="sxs-lookup"><span data-stu-id="478e9-149">Otherwise, the returned object can be a <xref:System.Reflection.PropertyInfo> for a CLR property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>