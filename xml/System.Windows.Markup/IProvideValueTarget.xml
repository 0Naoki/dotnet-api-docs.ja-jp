<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3ee33577ac89d42592b4312a85b5bb89b3f04916" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004479" /></Metadata><TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e2554-101">マークアップ拡張機能の評価に対する状況的なオブジェクトとプロパティの関係を報告するサービスを表します。</span><span class="sxs-lookup"><span data-stu-id="e2554-101">Represents a service that reports situational object-property relationships for markup extension evaluation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2554-102"><xref:System.Windows.Markup.IProvideValueTarget>値コンバーターが呼び出される場所を囲むオブジェクトプロパティ構造に関する情報を報告するサービスを表します。</span><span class="sxs-lookup"><span data-stu-id="e2554-102"><xref:System.Windows.Markup.IProvideValueTarget> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</span></span>  
  
 <span data-ttu-id="e2554-103">型コンバーターとマークアップ拡張機能は<xref:System.Windows.Markup.IProvideValueTarget> 、xaml オブジェクトライターが値の変換動作を呼び出すと、xaml オブジェクトライターによって提供されるサービスコンテキストで、サービスとしてのクエリを実行できます。</span><span class="sxs-lookup"><span data-stu-id="e2554-103">Type converters and markup extensions can query for <xref:System.Windows.Markup.IProvideValueTarget> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</span></span> <span data-ttu-id="e2554-104">詳細については、「 [XAML の型コンバーターとマークアップ拡張機能](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)」および「[型コンバーターとマークアップ拡張機能で使用できるサービスコンテキスト](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e2554-104">For more information, see [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) and [Service Contexts Available to Type Converters and Markup Extensions](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).</span></span>  
  
 <span data-ttu-id="e2554-105">マークアップ拡張機能の場合、 <xref:System.Windows.Markup.IProvideValueTarget>特にが役に立つのは、マークアップ拡張機能の状況の使用状況の有効性を判断することです。</span><span class="sxs-lookup"><span data-stu-id="e2554-105">For markup extensions specifically, a scenario where <xref:System.Windows.Markup.IProvideValueTarget> is useful is to determine the validity of your markup extension's situational usage.</span></span> <span data-ttu-id="e2554-106">たとえば、マークアップ拡張機能は値の遅延メカニズムを実装する場合がありますが、対象オブジェクトが実行時に遅延メカニズムの他のコンポーネントを使用できる場合にのみ、そのメカニズムを使用することが適しています。</span><span class="sxs-lookup"><span data-stu-id="e2554-106">For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</span></span> <span data-ttu-id="e2554-107">として<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>返されるオブジェクトの型システムの特性を確認し、オブジェクトが遅延手法をサポートしていることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="e2554-107">You could check the type system characteristics of the object returned as <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> and make sure that object supports your deferral technique.</span></span> <span data-ttu-id="e2554-108">その場合は、マークアップ拡張機能によって値が返されます。そうでない場合、マークアップ拡張機能は、XAML オブジェクトライターによって内部例外として取得される例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="e2554-108">If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</span></span> <span data-ttu-id="e2554-109">同様のシナリオでは、 <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>特定のプロパティがの型システム特性をチェックすることによって、機能をサポートしていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="e2554-109">A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.</span></span>  
  
 <span data-ttu-id="e2554-110"><xref:System.Windows.Markup.IProvideValueTarget> API 名<xref:System.Windows.Markup.ValueSerializer>はと<xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>の関連付けを意味する場合がありますが<xref:System.Windows.Markup.IProvideValueTarget> 、によって報告さ<xref:System.ComponentModel.TypeConverter>れる情報はまたはにも役立ちます。</span><span class="sxs-lookup"><span data-stu-id="e2554-110">Although the API name <xref:System.Windows.Markup.IProvideValueTarget> might imply an association with <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, the information reported by <xref:System.Windows.Markup.IProvideValueTarget> can also be useful to a <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="e2554-111">また<xref:System.ComponentModel.TypeConverter> は<xref:System.Windows.Markup.ValueSerializer>は、通常、マークアップ拡張機能よりも多くのコンテキストを持ちます。これは、特定のターゲット型またはターゲットプロパティ専用であるため、通常は型システムでの状況の有効性が予測可能であるためです。</span><span class="sxs-lookup"><span data-stu-id="e2554-111">A <xref:System.ComponentModel.TypeConverter> or <xref:System.Windows.Markup.ValueSerializer> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</span></span> <span data-ttu-id="e2554-112">ただし、その他のシナリオもあります。</span><span class="sxs-lookup"><span data-stu-id="e2554-112">However, other scenarios exist.</span></span> <span data-ttu-id="e2554-113">型コンバーターまたはマークアップ拡張機能のいずれかによって実装される可能性のあるいくつかのシナリオの一覧を次に示します。</span><span class="sxs-lookup"><span data-stu-id="e2554-113">The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</span></span>  
  
-   <span data-ttu-id="e2554-114">オブジェクト<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>の他のプロパティのインスタンス値の読み取りを取得します。</span><span class="sxs-lookup"><span data-stu-id="e2554-114">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read instance values of other properties on that object.</span></span> <span data-ttu-id="e2554-115">ここでの処理は、ターゲットオブジェクトの XAML メンバーの処理順序が非決定的であるため、設定されていない値に対して堅牢である必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e2554-115">Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</span></span>  
  
-   <span data-ttu-id="e2554-116"><xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>型レベルのメタデータを読み取るか、または必要なインターフェイスが型によって実装されていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="e2554-116">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> to read type-level metadata, or to verify that required interfaces are implemented by the type.</span></span>  
  
-   <span data-ttu-id="e2554-117">プロパティのメタデータを読み取ります。<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A></span><span class="sxs-lookup"><span data-stu-id="e2554-117">Get <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to read property metadata.</span></span>  
  
 <span data-ttu-id="e2554-118">1つのシナリオは<xref:System.Windows.Markup.IProvideValueTarget> 、マークアップ拡張機能によって設定できるオブジェクトまたはプロパティを制限するために情報を使用することです。</span><span class="sxs-lookup"><span data-stu-id="e2554-118">One scenario is to use <xref:System.Windows.Markup.IProvideValueTarget> information to limit which objects or properties are permitted to be set by your markup extension.</span></span>  
  
 <span data-ttu-id="e2554-119">サービスを使用する前に、サービス自体が、コンテキストに使用し`null`ている関連するサービスプロバイダーパラメーターによって返されないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="e2554-119">Before attempting to use the service, make sure that the service itself is not `null` when returned by the relevant service provider parameter you are using for context.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e2554-120">サービスを使用する場合は、 <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>プロパティによって参照されるオブジェクトや、そのオブジェクトによって参照されるその他のオブジェクトを変更しないことが特に重要です。</span><span class="sxs-lookup"><span data-stu-id="e2554-120">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object.</span></span> <span data-ttu-id="e2554-121">特に WPF の場合、これらの変更によって、WPF プロパティシステムを無効にする予期しない変更が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e2554-121">For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e2554-122">マークアップ拡張機能または<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>型コンバーターが返す必要のある正確な型を判断するには、の型を使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="e2554-122">Do not use the type of <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> to determine which precise type a markup extension or type converter should return.</span></span> <span data-ttu-id="e2554-123">これはベストプラクティスではありません。</span><span class="sxs-lookup"><span data-stu-id="e2554-123">That is not a best practice.</span></span> <span data-ttu-id="e2554-124">戻り値の型は、属性 (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>マークアップ拡張機能の場合) またはパターン (型コンバーターのクラス名) と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="e2554-124">Your return type should be consistent with attributing (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> for markup extensions) or patterns (class name of the type converter).</span></span>  
  
 <span data-ttu-id="e2554-125">以前のバージョンの .NET Framework では、このインターフェイスは WPF 固有のアセンブリ WindowsBase に存在していました。</span><span class="sxs-lookup"><span data-stu-id="e2554-125">In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="e2554-126">で[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]は<xref:System.Windows.Markup.IProvideValueTarget> 、は、システムの .xaml アセンブリにあります。</span><span class="sxs-lookup"><span data-stu-id="e2554-126">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> is in the System.Xaml assembly.</span></span> <span data-ttu-id="e2554-127">詳細については、「 [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e2554-127">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="e2554-128">WPF の使用上の注意</span><span class="sxs-lookup"><span data-stu-id="e2554-128">WPF Usage Notes</span></span>  
 <span data-ttu-id="e2554-129">このサービスは、依存関係プロパティでのバインディングなどのフレームワークの機能をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="e2554-129">This service supports framework features such as binding on a dependency property.</span></span>  
  
 <span data-ttu-id="e2554-130">WPF では、によって<xref:System.Windows.Markup.IProvideValueTarget>表されるサービスは、マークアップ拡張機能または型コンバーターから返される値がコンテキストに依存する場合に、オブジェクトとプロパティを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="e2554-130">In WPF, the service represented by <xref:System.Windows.Markup.IProvideValueTarget> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</span></span>  
  
 <span data-ttu-id="e2554-131"><xref:System.Windows.Markup.IProvideValueTarget>は、WPF の依存関係プロパティの<xref:System.Windows.Data.BindingBase>バインディング機構を実装するクラスであるの内部実装において、大きく活用されています。</span><span class="sxs-lookup"><span data-stu-id="e2554-131"><xref:System.Windows.Markup.IProvideValueTarget> is leveraged heavily in the internal implementation of <xref:System.Windows.Data.BindingBase>, the class that implements the binding mechanism for dependency properties in WPF.</span></span>  
  
 <span data-ttu-id="e2554-132">WPF の既定の内部サービスプロバイダーは<xref:System.Windows.Markup.IProvideValueTarget> 、カスタムマークアップ拡張機能または型コンバーターによる使用のためにを実装します。</span><span class="sxs-lookup"><span data-stu-id="e2554-132">A default internal service provider for WPF implements <xref:System.Windows.Markup.IProvideValueTarget> for usage by a custom markup extension or type converter.</span></span> <span data-ttu-id="e2554-133">によって<xref:System.Windows.Markup.IProvideValueTarget>報告されたオブジェクトとプロパティは、内部 WPF サービスでのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="e2554-133">The object and property reported by <xref:System.Windows.Markup.IProvideValueTarget> can only be set by the internal WPF service.</span></span> <span data-ttu-id="e2554-134">このように動作する方法<xref:System.Windows.Markup.IProvideValueTarget>の定義を超えるには、 <xref:System.Windows.Markup.IProvideValueTarget>そのサービスプロバイダーを定義して、少なくともサービスと<xref:System.Windows.Markup.IXamlTypeResolver>サービスでを実装する型コンバーターの使用を定義する必要があります。ここでは説明されていないシナリオです。</span><span class="sxs-lookup"><span data-stu-id="e2554-134">Going beyond this definition of how <xref:System.Windows.Markup.IProvideValueTarget> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <xref:System.Windows.Markup.IProvideValueTarget> and <xref:System.Windows.Markup.IXamlTypeResolver> services, and that is an advanced scenario that is not described here.</span></span>  
  
 <span data-ttu-id="e2554-135">または<xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>の null 値は、必ずしもの実装に依存しますが、マークアップ拡張機能または型コンバーターが動作しないことを意味するわけではありません。</span><span class="sxs-lookup"><span data-stu-id="e2554-135">A null value for <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> or <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</span></span> <span data-ttu-id="e2554-136">サービスが使用可能な場合で<xref:System.Windows.Markup.IProvideValueTarget>もの値が null になる例として、マークアップ拡張機能がなどの別のマークアップ<xref:System.Windows.Data.Binding>拡張機能に入れ子になっている場合があります。</span><span class="sxs-lookup"><span data-stu-id="e2554-136">An example case where the values from <xref:System.Windows.Markup.IProvideValueTarget> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="e2554-137">に<xref:System.Windows.Markup.IProvideValueTarget>依存する実装では、特定の例外をスローする目的の場合にのみ、常に null 値をチェックする必要があります (これが意図された設計である場合)。</span><span class="sxs-lookup"><span data-stu-id="e2554-137">An implementation that relies on <xref:System.Windows.Markup.IProvideValueTarget> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2554-138">報告されるターゲット オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e2554-138">Gets the target object being reported.</span></span></summary>
        <value><span data-ttu-id="e2554-139">報告されるターゲット オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e2554-139">The target object being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2554-140">によって<xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>返される値は、型システム識別子またはその他の識別子ではなく、実際の参照です。</span><span class="sxs-lookup"><span data-stu-id="e2554-140">The value returned by <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> is the actual reference, not a type system identifier or other identifier.</span></span> <span data-ttu-id="e2554-141">値はで`null`もかまいません<xref:System.Windows.Markup.IProvideValueTarget>。「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e2554-141">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e2554-142">サービスを使用する場合、特に、 <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A>プロパティによって参照されるオブジェクト、またはそのオブジェクトによって参照される他のオブジェクトを、特に処理中の値変換のケースではないプロパティとして変更しないようにすることが重要です。</span><span class="sxs-lookup"><span data-stu-id="e2554-142">When using the service, it is particularly important not to modify the object referenced by the <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</span></span> <span data-ttu-id="e2554-143">特に WPF の場合、ターゲットオブジェクトを変更すると、WPF プロパティシステムを無効にする予期しない変更が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e2554-143">For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="e2554-144">XAML の型コンバーターまたはマークアップ拡張機能</span><span class="sxs-lookup"><span data-stu-id="e2554-144">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e2554-145">報告されるターゲット プロパティの識別子を取得します。</span><span class="sxs-lookup"><span data-stu-id="e2554-145">Gets an identifier for the target property being reported.</span></span></summary>
        <value><span data-ttu-id="e2554-146">報告されるターゲット プロパティの識別子。</span><span class="sxs-lookup"><span data-stu-id="e2554-146">An identifier for the target property being reported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2554-147">値はで`null`もかまいません<xref:System.Windows.Markup.IProvideValueTarget>。「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e2554-147">The value can also be `null`; see <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
## <a name="wpf-usage-notes"></a><span data-ttu-id="e2554-148">WPF の使用上の注意</span><span class="sxs-lookup"><span data-stu-id="e2554-148">WPF Usage Notes</span></span>  
 <span data-ttu-id="e2554-149">依存関係プロパティの場合、既定の WPF サービスはを<xref:System.Windows.DependencyProperty>返すことがあります。これは、マークアップ拡張機能または型コンバーターがメタデータを使用できるようにするためです。</span><span class="sxs-lookup"><span data-stu-id="e2554-149">For a dependency property, the default WPF service may return a <xref:System.Windows.DependencyProperty>, such that the markup extension or type converter can use metadata.</span></span> <span data-ttu-id="e2554-150">それ以外の場合、返されるオブジェクト<xref:System.Reflection.PropertyInfo>は CLR プロパティのになります。</span><span class="sxs-lookup"><span data-stu-id="e2554-150">Otherwise, the returned object can be a <xref:System.Reflection.PropertyInfo> for a CLR property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
        <related type="Article" href="https://msdn.microsoft.com/library/db07a952-05ce-4aa4-b6f9-aac7397d0326"><span data-ttu-id="e2554-151">XAML の型コンバーターまたはマークアップ拡張機能</span><span class="sxs-lookup"><span data-stu-id="e2554-151">Type Converters or Markup Extensions for XAML</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>