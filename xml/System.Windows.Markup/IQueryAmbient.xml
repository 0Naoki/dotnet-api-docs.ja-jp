<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7d4497235ac96c9f7db24eb5de821fa75e1ed4de" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30656136" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f06cc-101">指定されたプロパティを現在のスコープでアンビエントとして扱う必要があるかどうかを照会します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f06cc-101">Queries for whether a specified property should be treated as ambient in the current scope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f06cc-102">アンビエント プロパティ メカニズムの目的は、通知することが分かっている、オブジェクトが一時的と実行時の一般的なアプリケーションに適していない値である場合、特定のオブジェクトをインスタンス化しないように、XAML オブジェクト ライターで解析時間を向上させるためにです。</span><span class="sxs-lookup"><span data-stu-id="f06cc-102">The purpose of an ambient property mechanism is to improve parsing time by informing a XAML object writer to avoid instantiating certain objects, in cases where it is known that the objects are for values that are temporary and not useful for a typical run time application.</span></span> <span data-ttu-id="f06cc-103">通常は、XAML 実行するルックアップや XAML の処理プロパティの get アクセサーの必要がありますをすぐに使用できる値を持つオブジェクト グラフ表現を入力するには、このようなオブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="f06cc-103">Normally, XAML lookups or XAML processing of a property get accessor would need to instantiate such objects to fill the object graph representation with ready-to-use values.</span></span>  
  
 <span data-ttu-id="f06cc-104"><xref:System.Windows.Markup.IQueryAmbient> 1 つのメンバー:<xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f06cc-104"><xref:System.Windows.Markup.IQueryAmbient> has one member: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.</span></span>  
  
 <span data-ttu-id="f06cc-105"><xref:System.Windows.Markup.IQueryAmbient> 並列メカニズム<xref:System.Windows.Markup.AmbientAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="f06cc-105"><xref:System.Windows.Markup.IQueryAmbient> is a parallel mechanism to <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="f06cc-106"><xref:System.Windows.Markup.IQueryAmbient> リフレクションを使用して、情報を決定するを回避する特殊なメカニズムは、act を上回りことも (レポートするように選択されたオブジェクト`true`または`false`の<xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>) 属性は基本的には静的、分析)。</span><span class="sxs-lookup"><span data-stu-id="f06cc-106"><xref:System.Windows.Markup.IQueryAmbient> is the specialized mechanism that avoids using reflection to determine information, and can also act situationally (a given object could choose to report `true` or `false` for <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), whereas the attribute is essentially static analysis).</span></span> <span data-ttu-id="f06cc-107"><xref:System.Windows.Markup.AmbientAttribute> XAML オブジェクト ライターによって使用できる通常専用の XAML 型システムのプロパティに関連する一般的なメカニズムは、<xref:System.Xaml.XamlMember.IsAmbient%2A>と<xref:System.Xaml.XamlType.IsAmbient%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f06cc-107"><xref:System.Windows.Markup.AmbientAttribute> is the general mechanism that can be used by XAML object writers and that typically correlates to the dedicated XAML type system properties <xref:System.Xaml.XamlMember.IsAmbient%2A> and <xref:System.Xaml.XamlType.IsAmbient%2A>.</span></span>  
  
## <a name="wpf-implementations-of-iqueryambient"></a><span data-ttu-id="f06cc-108">IQueryAmbient の WPF 実装</span><span class="sxs-lookup"><span data-stu-id="f06cc-108">WPF Implementations of IQueryAmbient</span></span>  
 <span data-ttu-id="f06cc-109">WPF では、<xref:System.Windows.Markup.IQueryAmbient>リソース ディクショナリのルックアップ プロセスのために使用します。</span><span class="sxs-lookup"><span data-stu-id="f06cc-109">In WPF, <xref:System.Windows.Markup.IQueryAmbient> is used for the resource dictionary lookup process.</span></span> <span data-ttu-id="f06cc-110">照合プロセスを連続する取得`Resources`WPF の論理ツリー全体で値が検出されるまで、キーのリソースのスコープのルートに向かって実行またはスコープに存在するキーが決定されます。</span><span class="sxs-lookup"><span data-stu-id="f06cc-110">The lookup process gets successive `Resources` values throughout the WPF logical tree, working towards the root of the resource scope until either a key is found or the key is determined to not exist in scope.</span></span> <span data-ttu-id="f06cc-111">通常、行うには、インスタンス化する、<xref:System.Windows.ResourceDictionary>結果を受信するたびにします。</span><span class="sxs-lookup"><span data-stu-id="f06cc-111">Normally, doing so would require instantiating a <xref:System.Windows.ResourceDictionary> each time to receive the results.</span></span> <span data-ttu-id="f06cc-112">内容を宣言する`Resources`限りアンビエントとして`Resources`が存在するこの照合プロセスを最適化します。</span><span class="sxs-lookup"><span data-stu-id="f06cc-112">Declaring the contents of `Resources` as ambient so long as `Resources` exists optimizes this lookup process.</span></span> <span data-ttu-id="f06cc-113">WPF では、このインターフェイスは、次の場合。</span><span class="sxs-lookup"><span data-stu-id="f06cc-113">In WPF, this interface is implemented in the following cases:</span></span>  
  
-   <span data-ttu-id="f06cc-114"><xref:System.Windows.FrameworkElement> 実装する<xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A>を返す`true`既存が含まれている場合、すべてのプロパティ名の<xref:System.Windows.ResourceDictionary>の<xref:System.Windows.FrameworkElement.Resources%2A>、クエリを使用しない限り、および、<xref:System.Windows.FrameworkElement.Resources%2A>プロパティ自体です。</span><span class="sxs-lookup"><span data-stu-id="f06cc-114"><xref:System.Windows.FrameworkElement> implements <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> to return `true` for all property names if it contains an existing <xref:System.Windows.ResourceDictionary> for <xref:System.Windows.FrameworkElement.Resources%2A>, and so long as the query is not for the <xref:System.Windows.FrameworkElement.Resources%2A> property itself.</span></span>  
  
-   <span data-ttu-id="f06cc-115"><xref:System.Windows.Style> 同じパターンを実装、<xref:System.Windows.Style.Resources%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f06cc-115"><xref:System.Windows.Style> implements the same pattern for its <xref:System.Windows.Style.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="f06cc-116"><xref:System.Windows.Application> 同じパターンを実装、<xref:System.Windows.Application.Resources%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f06cc-116"><xref:System.Windows.Application> implements the same pattern for its <xref:System.Windows.Application.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="f06cc-117"><xref:System.Windows.FrameworkContentElement> 同じパターンを実装、<xref:System.Windows.FrameworkContentElement.Resources%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f06cc-117"><xref:System.Windows.FrameworkContentElement> implements the same pattern for its <xref:System.Windows.FrameworkContentElement.Resources%2A>.</span></span>  
  
-   <span data-ttu-id="f06cc-118"><xref:System.Windows.FrameworkTemplate> 同じパターンを実装、<xref:System.Windows.FrameworkTemplate.Resources%2A>です。</span><span class="sxs-lookup"><span data-stu-id="f06cc-118"><xref:System.Windows.FrameworkTemplate> implements the same pattern for its <xref:System.Windows.FrameworkTemplate.Resources%2A>.</span></span> <span data-ttu-id="f06cc-119">報告<xref:System.Windows.FrameworkTemplate.Template%2A>アンビエントは返しますコンテンツ`false`のクエリを実行する場合<xref:System.Windows.FrameworkTemplate.Template%2A>自体です。</span><span class="sxs-lookup"><span data-stu-id="f06cc-119">It also reports <xref:System.Windows.FrameworkTemplate.Template%2A> content as ambient but returns `false` if querying for <xref:System.Windows.FrameworkTemplate.Template%2A> itself.</span></span>  
  
-   <span data-ttu-id="f06cc-120">このような場合、関連する各`Resources`プロパティ (および<xref:System.Windows.FrameworkTemplate.Template%2A>) として属性<xref:System.Windows.Markup.AmbientAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="f06cc-120">In each of these cases, the relevant `Resources` property (and <xref:System.Windows.FrameworkTemplate.Template%2A>) are attributed as <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="f06cc-121">一般的な使用されないプロパティを照会する、<xref:System.Windows.Markup.AmbientAttribute>インターフェイスを定義するオブジェクトのプロパティの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="f06cc-121">The typical usage is to query for the properties that are NOT the <xref:System.Windows.Markup.AmbientAttribute> attributed properties of the object that defines the interface.</span></span> <span data-ttu-id="f06cc-122">つまり、オブジェクト グラフの作成時に、潜在的な実行時間の値を提供するために、リソース ディクショナリが存在する限り、リソース ディクショナリのプロパティのコンテナーだけでなく、他のプロパティ扱えるアンビエントとして。</span><span class="sxs-lookup"><span data-stu-id="f06cc-122">In other words, so long as a resource dictionary exists in order to provide the potential run time value when the object graph is created, any other property besides the resource dictionary's property container can be treated as ambient.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="f06cc-123">アンビエンス状態を確認するプロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f06cc-123">The name of the property to check for ambience state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f06cc-124">指定された名前付きプロパティを現在のスコープでアンビエントと見なすことができるかどうかを照会します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f06cc-124">Queries for whether a specified named property can be considered ambient in the current scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f06cc-125">要求されたプロパティをアンビエントと見なすことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f06cc-125">
              <see langword="true" /> if the requested property can be considered ambient; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>