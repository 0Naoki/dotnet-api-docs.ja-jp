<Type Name="ParserContext" FullName="System.Windows.Markup.ParserContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="191cb3aef2586784df60b0cd2c1e4bf4a7a33bca" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51877243" /></Metadata><TypeSignature Language="C#" Value="public class ParserContext : System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParserContext extends System.Object implements class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ParserContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ParserContext&#xA;Implements IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ParserContext : System::Windows::Markup::IUriContext" />
  <TypeSignature Language="F#" Value="type ParserContext = class&#xA;    interface IUriContext" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>XAML パーサーが必要とするコンテキスト情報を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンテキストを参照する XAML パーサーが、[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]時代 (年号) で公開されるとおり、WPF の実装に固有である XAML パーサー API<xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType>と<xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType>します。  
  
 XAML システム[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]より高度な XAML 型システムを使用し、したがっても XAML 処理操作を別の種類のコンテキストを使用します。 詳細については、「<xref:System.Xaml.XamlSchemaContext>」を参照してください。  
  
 A<xref:System.Windows.Markup.ParserContext>への呼び出しの入力として使用は、通常、<xref:System.Windows.Markup.XamlReader>操作。 このような場合のオーバー ロードを使用している<xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>または<xref:System.Windows.Markup.XamlReader.LoadAsync%2A?displayProperty=nameWithType>指定場所、 <xref:System.Windows.Markup.ParserContext> XAML へのマッピングまたは XML 処理の既定値の変更の種類などの要因をより細かく制御を提供します。 使用して、<xref:System.Windows.Markup.ParserContext>を使用してではなく<xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType>既定の動作は高度なシナリオです。  
  
 `xml:lang` `xml:space`動作がオーバーライドできるコンテキストの側面の 1 つ。 既定では、パーサー コンテキストを使用して`en-us`ベースの値。 XAML の言語レベルのコンテキストを使用する理由の詳細については`en-us`、カルチャに依存しない値ではなく、次を参照してください。 [WPF のグローバリゼーションおよびローカリゼーションの概要](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md)します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XamlReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Markup.ParserContext" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ParserContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Markup.ParserContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParserContext (System.Xml.XmlParserContext xmlParserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlParserContext xmlParserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParserContext(System::Xml::XmlParserContext ^ xmlParserContext);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.ParserContext : System.Xml.XmlParserContext -&gt; System.Windows.Markup.ParserContext" Usage="new System.Windows.Markup.ParserContext xmlParserContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlParserContext" Type="System.Xml.XmlParserContext" />
      </Parameters>
      <Docs>
        <param name="xmlParserContext">新しい <see cref="T:System.Windows.Markup.ParserContext" /> の基となる XML 処理コンテキスト。</param>
        <summary>指定された <see cref="T:System.Windows.Markup.ParserContext" /> を使用して、<see cref="T:System.Xml.XmlParserContext" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xmlParserContext" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ParserContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.Windows.Markup.ParserContext.BaseUri" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコンテキストのベース URI を取得または設定します。</summary>
        <value>ベース URI の文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.ParserContext.BaseUri%2A> XAML で参照されている外部のリソースを解決するために使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlParserContext.BaseURI" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Xml.XmlParserContext (System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Xml.XmlParserContext op_Implicit(class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Xml::XmlParserContext ^(System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Windows.Markup.ParserContext -&gt; System.Xml.XmlParserContext" Usage="System.Windows.Markup.ParserContext.op_Implicit parserContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlParserContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="parserContext"><see cref="T:System.Xml.XmlParserContext" /> に変換する XAML パーサー コンテキスト。</param>
        <summary>XAML の <see cref="T:System.Windows.Markup.ParserContext" /> を <see cref="T:System.Xml.XmlParserContext" /> に変換します。</summary>
        <returns>変換された XML パーサー コンテキスト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parserContext" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXmlParserContext">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlParserContext ToXmlParserContext (System.Windows.Markup.ParserContext parserContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlParserContext ToXmlParserContext(class System.Windows.Markup.ParserContext parserContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlParserContext ^ ToXmlParserContext(System::Windows::Markup::ParserContext ^ parserContext);" />
      <MemberSignature Language="F#" Value="static member ToXmlParserContext : System.Windows.Markup.ParserContext -&gt; System.Xml.XmlParserContext" Usage="System.Windows.Markup.ParserContext.ToXmlParserContext parserContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlParserContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parserContext" Type="System.Windows.Markup.ParserContext" />
      </Parameters>
      <Docs>
        <param name="parserContext"><see cref="T:System.Xml.XmlParserContext" /> に変換するコンテキスト。</param>
        <summary><see cref="T:System.Windows.Markup.ParserContext" /> を <see cref="T:System.Xml.XmlParserContext" /> に変換します。</summary>
        <returns>XML パーサー コンテキスト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parserContext" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="XamlTypeMapper">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XamlTypeMapper XamlTypeMapper { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XamlTypeMapper XamlTypeMapper" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ParserContext.XamlTypeMapper" />
      <MemberSignature Language="VB.NET" Value="Public Property XamlTypeMapper As XamlTypeMapper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XamlTypeMapper ^ XamlTypeMapper { System::Windows::Markup::XamlTypeMapper ^ get(); void set(System::Windows::Markup::XamlTypeMapper ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XamlTypeMapper : System.Windows.Markup.XamlTypeMapper with get, set" Usage="System.Windows.Markup.ParserContext.XamlTypeMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XamlTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Windows.Markup.XamlTypeMapper" /> で使用する <see cref="T:System.Windows.Markup.ParserContext" /> を取得または設定します。</summary>
        <value>XAML 要素を CLR 型に割り当てるときに使用する型マッパー。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.XamlTypeMapper" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public string XmlLang { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ParserContext.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlLang { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string with get, set" Usage="System.Windows.Markup.ParserContext.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコンテキストの <see langword="xml:lang" /> 文字列を取得または設定します。</summary>
        <value><see langword="xml:lang" /> の文字列値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに似ています<xref:System.Xml.XmlReader.XmlLang%2A?displayProperty=nameWithType>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XmlLanguage" />
        <altmember cref="T:System.Windows.Markup.XmlLangPropertyAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/7aac0078-a1c5-41f8-b8b0-975510d9dca0">xml:lang 属性</related>
      </Docs>
    </Member>
    <Member MemberName="XmlnsDictionary">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlnsDictionary XmlnsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlnsDictionary XmlnsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ParserContext.XmlnsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlnsDictionary As XmlnsDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlnsDictionary ^ XmlnsDictionary { System::Windows::Markup::XmlnsDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlnsDictionary : System.Windows.Markup.XmlnsDictionary" Usage="System.Windows.Markup.ParserContext.XmlnsDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlnsDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この XAML パーサー コンテキストの XAML 名前空間ディクショナリを取得します。</summary>
        <value>XAML 名前空間ディクショナリ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の辞書は、最初は空<xref:System.Windows.Markup.XmlnsDictionary>します。  
  
 <xref:System.Windows.Markup.XmlnsDictionary> XAML 名前空間プレフィックスをキーと完全な XAML 名前空間の識別子 (通常は文字列形式の URI) として値として使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XmlnsDictionary" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public string XmlSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ParserContext.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlSpace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XmlSpace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : string with get, set" Usage="System.Windows.Markup.ParserContext.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="xml:space" /> またはこのコンテキストの文字を取得または設定します。</summary>
        <value><see langword="xml:space" /> またはこのコンテキストの文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティに似ています<xref:System.Xml.XmlReader.XmlSpace%2A?displayProperty=nameWithType>します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5e1814f0-5b30-43d5-8c88-dede335a89d7">xml:space 属性</related>
      </Docs>
    </Member>
  </Members>
</Type>