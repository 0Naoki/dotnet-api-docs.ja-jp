<Type Name="XamlValueConverter&lt;TConverterBase&gt;" FullName="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14f64c06d0c6afea97193bb13524fbf8204f703e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69427752" /></Metadata><TypeSignature Language="C#" Value="public class XamlValueConverter&lt;TConverterBase&gt; : IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt; where TConverterBase : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlValueConverter`1&lt;class TConverterBase&gt; extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt;&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlValueConverter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlValueConverter(Of TConverterBase)&#xA;Implements IEquatable(Of XamlValueConverter(Of TConverterBase))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TConverterBase&gt;&#xA; where TConverterBase : classpublic ref class XamlValueConverter : IEquatable&lt;System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^&gt;" />
  <TypeSignature Language="F#" Value="type XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; = class&#xA;    interface IEquatable&lt;XamlValueConverter&lt;'ConverterBase&gt;&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TConverterBase">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TConverterBase"><span data-ttu-id="987e2-101">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> が表す特定のコンバーターの CLR 基本クラス。</span><span class="sxs-lookup"><span data-stu-id="987e2-101">The CLR base class for the particular converter that this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> represents.</span></span> <span data-ttu-id="987e2-102">これは通常 <see cref="T:System.ComponentModel.TypeConverter" />、<see cref="T:System.Windows.Markup.MarkupExtension" />、または <see cref="T:System.Windows.Markup.ValueSerializer" /> のいずれかです。</span><span class="sxs-lookup"><span data-stu-id="987e2-102">Typically this is one of the following: <see cref="T:System.ComponentModel.TypeConverter" />; <see cref="T:System.Windows.Markup.MarkupExtension" />; <see cref="T:System.Windows.Markup.ValueSerializer" />;</span></span></typeparam>
    <summary><span data-ttu-id="987e2-103">最終的な変換先の型以外の入力に基づいて XAML の初期化値またはシリアル化値を生成する手法の共通 API サーフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="987e2-103">Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type.</span></span> <span data-ttu-id="987e2-104">これには、マークアップ拡張機能および型コンバーターが含まれます。</span><span class="sxs-lookup"><span data-stu-id="987e2-104">This includes markup extensions and type converters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987e2-105">この型のインスタンスは、などの XAML スキーマ API <xref:System.Xaml.XamlType.LookupTypeConverter%2A>のメソッドによって返されます。</span><span class="sxs-lookup"><span data-stu-id="987e2-105">Instances of this type are returned by methods of the XAML schema API such as <xref:System.Xaml.XamlType.LookupTypeConverter%2A>.</span></span> <span data-ttu-id="987e2-106">の<xref:System.Xaml.Schema.XamlValueConverter%601>ジェネリック実装は、システム .xaml アセンブリの間接参照を提供します。これにより、基本的な xaml スキーマと型システムは、通常は他のの実装であるさまざまな値変換手法に依存する必要がなくなります。アセンブリ.</span><span class="sxs-lookup"><span data-stu-id="987e2-106">The generic implementation of <xref:System.Xaml.Schema.XamlValueConverter%601> provides indirection for the System.Xaml assembly so that the basic XAML schema and type system does not have to take dependencies on different value conversion techniques that are typically implementations in other assemblies.</span></span>  
  
 <span data-ttu-id="987e2-107">は<xref:System.Xaml.Schema.XamlValueConverter%601> 、null 実装型を使用して構築できますが<xref:System.Xaml.Schema.XamlValueConverter%601> 、この`null`よう<xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>なはに対してを返します。</span><span class="sxs-lookup"><span data-stu-id="987e2-107">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="987e2-108">の<xref:System.Xaml.Schema.XamlValueConverter%601>コンストラクターシグネチャは、 `converterType`変換動作を実装する特定の型を参照するパラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="987e2-108">Constructor signatures for <xref:System.Xaml.Schema.XamlValueConverter%601> use a `converterType` parameter that references the specific type that implements the conversion behavior.</span></span> <span data-ttu-id="987e2-109">適切に機能<xref:System.Xaml.Schema.XamlValueConverter%601>する (null <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>以外の) の場合、 `converterType`型は`TConverterBase`制約に対してキャストであると想定されます。</span><span class="sxs-lookup"><span data-stu-id="987e2-109">For a properly functioning <xref:System.Xaml.Schema.XamlValueConverter%601> (one that has a nonnull <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>), the `converterType` type is expected to be castable to the `TConverterBase` constraint.</span></span> <span data-ttu-id="987e2-110">不一致条件はコンストラクターによって適用されませんが<xref:System.InvalidCastException> 、実行時にが生成される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="987e2-110">A mismatch condition is not enforced by constructors, but might produce an <xref:System.InvalidCastException> at run time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="987e2-111"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="987e2-111">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; : Type * System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;" Usage="new System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; (converterType, targetType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="converterType"><span data-ttu-id="987e2-112">コンバーターの動作を実装する <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-112">The <see cref="T:System.Type" /> that implements the converter behavior.</span></span></param>
        <param name="targetType"><span data-ttu-id="987e2-113"><see cref="T:System.Xaml.XamlType" /> の対象/変換先の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-113">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></param>
        <summary><span data-ttu-id="987e2-114"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を実装するコンバーターと、<see cref="T:System.Type" /> の対象/変換先の型に基づいて、<see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="987e2-114">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> and the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlValueConverter (Type converterType, System.Xaml.XamlType targetType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type converterType, class System.Xaml.XamlType targetType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (converterType As Type, targetType As XamlType, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlValueConverter(Type ^ converterType, System::Xaml::XamlType ^ targetType, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; : Type * System.Xaml.XamlType * string -&gt; System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;" Usage="new System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; (converterType, targetType, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="converterType" Type="System.Type" />
        <Parameter Name="targetType" Type="System.Xaml.XamlType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="converterType"><span data-ttu-id="987e2-115">コンバーターの動作を実装する <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-115">The <see cref="T:System.Type" /> that implements the converter behavior.</span></span></param>
        <param name="targetType"><span data-ttu-id="987e2-116"><see cref="T:System.Xaml.XamlType" /> の対象/変換先の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-116">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></param>
        <param name="name"><span data-ttu-id="987e2-117">文字列名。</span><span class="sxs-lookup"><span data-stu-id="987e2-117">The string name.</span></span></param>
        <summary><span data-ttu-id="987e2-118"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を実装するコンバーター、<see cref="T:System.Type" /> の対象/変換先の型、および文字列名に基づいて、<see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="987e2-118">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> class, based on a converter implementing <see cref="T:System.Type" /> the target/destination type of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, and a string name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987e2-119">が`name`として`null`指定されている場合は、また`converterType`は`targetType`のいずれかに基づいて既定の名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="987e2-119">If `name` is provided as `null`, a default name is generated based on either `converterType` or `targetType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="987e2-120">すべての 3 つのパラメーターが <see langword="null" /> です (少なくとも 1 つは null でないことが必要です)。</span><span class="sxs-lookup"><span data-stu-id="987e2-120">All three parameters are <see langword="null" /> (at least one is required to be non-null).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConverterInstance">
      <MemberSignature Language="C#" Value="public TConverterBase ConverterInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TConverterBase ConverterInstance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterInstance As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TConverterBase ConverterInstance { TConverterBase get(); };" />
      <MemberSignature Language="F#" Value="member this.ConverterInstance : 'ConverterBase" Usage="System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;.ConverterInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="987e2-121">コンバーター実装の作成されたインスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="987e2-121">Gets a created instance of the converter implementation.</span></span></summary>
        <value><span data-ttu-id="987e2-122">コンバーター実装の作成されたインスタンス、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-122">A created instance of the converter implementation, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987e2-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>の値を取得するため<xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>に、の保護された既定の実装を呼び出し<xref:System.Xaml.Schema.XamlValueConverter%601>ます<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> 。が既に1回呼び出されている場合は、格納されている値にアクセスする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="987e2-123"><xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> calls the protected default implementation of <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> to get its value (and might be accessing a stored value if <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> was already called once on this <xref:System.Xaml.Schema.XamlValueConverter%601>.</span></span>  
  
 <span data-ttu-id="987e2-124">は<xref:System.Xaml.Schema.XamlValueConverter%601> 、null 実装型を使用して構築できますが<xref:System.Xaml.Schema.XamlValueConverter%601> 、この`null`よう<xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>なはに対してを返します。</span><span class="sxs-lookup"><span data-stu-id="987e2-124">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterType">
      <MemberSignature Language="C#" Value="public Type ConverterType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ConverterType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConverterType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ConverterType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConverterType : Type" Usage="System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;.ConverterType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="987e2-125">コンバーターの動作を実装するクラスの <see cref="T:System.Type" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="987e2-125">Gets the <see cref="T:System.Type" /> for the class that implements the converter behavior.</span></span></summary>
        <value><span data-ttu-id="987e2-126">コンバーターの動作を実装するクラスの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-126">The <see cref="T:System.Type" /> for the class that implements the converter behavior.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual TConverterBase CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TConverterBase CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As TConverterBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TConverterBase CreateInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : unit -&gt; 'ConverterBase&#xA;override this.CreateInstance : unit -&gt; 'ConverterBase" Usage="xamlValueConverter.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TConverterBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="987e2-127">コンバーター実装のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="987e2-127">Returns an instance of the converter implementation.</span></span></summary>
        <returns><span data-ttu-id="987e2-128">コンバーター実装のインスタンス、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-128">An instance of the converter implementation, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987e2-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>は保護されています。</span><span class="sxs-lookup"><span data-stu-id="987e2-129"><xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A> is protected.</span></span> <span data-ttu-id="987e2-130">パブリック API を使用してコンバーターインスタンスを取得するには、 <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="987e2-130">To get a converter instance with a public API, get the value of <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>.</span></span>  
  
 <span data-ttu-id="987e2-131">は<xref:System.Xaml.Schema.XamlValueConverter%601> 、null 実装型を使用して構築できますが<xref:System.Xaml.Schema.XamlValueConverter%601> 、この`null`よう<xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>なはに対してを返します。</span><span class="sxs-lookup"><span data-stu-id="987e2-131">A <xref:System.Xaml.Schema.XamlValueConverter%601> can be constructed with a null implementation type, but such a <xref:System.Xaml.Schema.XamlValueConverter%601> will return `null` for <xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlSchemaException"><span data-ttu-id="987e2-132">コンバーターは正しい基本型を実装しませんでした。</span><span class="sxs-lookup"><span data-stu-id="987e2-132">Converter did not implement the correct base type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="987e2-133"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> のこのインスタンスと、オブジェクトの値が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="987e2-133">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and an object have the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="xamlValueConverter.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="987e2-134">比較対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="987e2-134">The object to compare.</span></span></param>
        <summary><span data-ttu-id="987e2-135"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> のこのインスタンスと、指定したオブジェクトの値が同一かどうかを判断します。<see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="987e2-135">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and a specified object, which must also be a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, have the same value.</span></span></summary>
        <returns><span data-ttu-id="987e2-136"><see langword="true" /> が <paramref name="obj" /> で、このインスタンスと同じ値を保持している場合は <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-136"><see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; -&gt; bool" Usage="xamlValueConverter.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="987e2-137">比較対象の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-137">The <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> to compare.</span></span></param>
        <summary><span data-ttu-id="987e2-138"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> のこのインスタンスと、別の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトの値が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="987e2-138">Determines whether this instance of <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and another <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object have the same value.</span></span></summary>
        <returns><span data-ttu-id="987e2-139"><paramref name="other" /> が <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> で、このインスタンスと同じ値を保持している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-139"><see langword="true" /> if <paramref name="other" /> is a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="xamlValueConverter.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="987e2-140">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> のハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="987e2-140">Returns the hash code for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <returns><span data-ttu-id="987e2-141">整数のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="987e2-141">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="987e2-142">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の文字列名を取得します。</span><span class="sxs-lookup"><span data-stu-id="987e2-142">Gets a string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <value><span data-ttu-id="987e2-143">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> の文字列名。</span><span class="sxs-lookup"><span data-stu-id="987e2-143">A string name for this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987e2-144">このプロパティの値は、次のいずれかによって確立されます。</span><span class="sxs-lookup"><span data-stu-id="987e2-144">The value of this property is established by one of the following:</span></span>  
  
-   <span data-ttu-id="987e2-145">コンストラクターパラメーター (を参照<xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="987e2-145">A constructor parameter (see <xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType>).</span></span>  
  
-   <span data-ttu-id="987e2-146">他のコンストラクター入力を処理し、文字列を形成する内部ロジック。</span><span class="sxs-lookup"><span data-stu-id="987e2-146">Internal logic that processes other constructor inputs and forms a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; * System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; -&gt; bool" Usage="converter1 = converter2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1"><span data-ttu-id="987e2-147"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-147">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <param name="converter2"><span data-ttu-id="987e2-148"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-148">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="987e2-149">指定した 2 つの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトの値が同一かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="987e2-149">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="987e2-150"><paramref name="converter1" /> の値が <paramref name="converter2" /> の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-150"><see langword="true" /> if the value of <paramref name="converter1" /> is the same as the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter1, System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt; converter2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter1, class System.Xaml.Schema.XamlValueConverter`1&lt;!TConverterBase&gt; converter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (converter1 As XamlValueConverter(Of TConverterBase), converter2 As XamlValueConverter(Of TConverterBase)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter1, System::Xaml::Schema::XamlValueConverter&lt;TConverterBase&gt; ^ converter2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; * System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt; -&gt; bool" Usage="System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;.op_Inequality (converter1, converter2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converter1" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
        <Parameter Name="converter2" Type="System.Xaml.Schema.XamlValueConverter&lt;TConverterBase&gt;" />
      </Parameters>
      <Docs>
        <param name="converter1"><span data-ttu-id="987e2-151"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-151">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <param name="converter2"><span data-ttu-id="987e2-152"><see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-152">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="987e2-153">指定した 2 つの <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> オブジェクトの値が異なるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="987e2-153">Determines whether two specified <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="987e2-154"><paramref name="converter1" /> の値が <paramref name="converter2" /> の値と異なる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-154"><see langword="true" /> if the value of <paramref name="converter1" /> is different than the value of <paramref name="converter2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlValueConverter`1.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetType : System.Xaml.XamlType" Usage="System.Xaml.Schema.XamlValueConverter&lt;'ConverterBase (requires 'ConverterBase : null)&gt;.TargetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="987e2-155"><see cref="T:System.Xaml.XamlType" /> の対象/変換先の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="987e2-155">Gets the target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <value><span data-ttu-id="987e2-156"><see cref="T:System.Xaml.XamlType" /> の対象/変換先の <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-156">The target/destination <see cref="T:System.Xaml.XamlType" /> of the <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlValueConverter`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="xamlValueConverter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="987e2-157">この <see cref="T:System.String" /> を表す <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="987e2-157">Returns a <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></summary>
        <returns><span data-ttu-id="987e2-158">この <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> を表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="987e2-158">A <see cref="T:System.String" /> that represents this <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="987e2-159">値<xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A>は、に基づい<xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>ています。</span><span class="sxs-lookup"><span data-stu-id="987e2-159">The <xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A> value is based on <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
