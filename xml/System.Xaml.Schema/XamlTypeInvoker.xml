<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="504f5574033cb4de7a3c6a42e6208306d4dd86e5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="315ea-101">リフレクションまたはコンストラクター以外の方法で XAML 型のインスタンスを構築できる拡張ポイントを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="315ea-101">Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315ea-102">目的は、<xref:System.Xaml.Schema.XamlTypeInvoker>拡張の XAML 型システム、スキーマ、および、動作中の CLR 属性を使用してリフレクション情報などの CLR 機能に完全に依存せずに実行を有効にするのには、<xref:System.Type>と<xref:System.Reflection.MemberInfo>のようにします。</span><span class="sxs-lookup"><span data-stu-id="315ea-102">The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="315ea-103">サブクラス<xref:System.Xaml.Schema.XamlTypeInvoker>などの XAML スキーマのクラスの別のコンス トラクターの入力パラメーターとして使用されます<xref:System.Xaml.XamlType>です。</span><span class="sxs-lookup"><span data-stu-id="315ea-103">Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="315ea-104">サブクラス<xref:System.Xaml.XamlType>を渡すと、<xref:System.Xaml.Schema.XamlTypeInvoker>を通じて、基底コンス トラクターにします。</span><span class="sxs-lookup"><span data-stu-id="315ea-104">You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor.</span></span> <span data-ttu-id="315ea-105">定義すると共に、 <xref:System.Xaml.Schema.XamlTypeInvoker> 、コンス トラクターも指定してください用の上書きには、少なくともいくつかの`Lookup`のメソッド<xref:System.Xaml.XamlType>です。</span><span class="sxs-lookup"><span data-stu-id="315ea-105">Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.</span></span>  
  
 <span data-ttu-id="315ea-106"><xref:System.Xaml.Schema.XamlTypeInvoker> 既定の実装があります。</span><span class="sxs-lookup"><span data-stu-id="315ea-106"><xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation.</span></span> <span data-ttu-id="315ea-107">既定の実装では、類似のモデルを XAML スキーマの種類の既定の実装に依存<xref:System.Xaml.XamlType>と<xref:System.Xaml.XamlMember>: インスタンス化、値、および CLR 属性の使用を含む、参照の CLR 型システムが使用される<xref:System.Type>と<xref:System.Reflection.MemberInfo>のようにします。</span><span class="sxs-lookup"><span data-stu-id="315ea-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="315ea-108"><xref:System.Xaml.Schema.XamlTypeInvoker> 基本的なインスタンス化するメソッドを提供 (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) とメソッドの種類に関連する場所、<xref:System.Xaml.XamlType>コレクション、ディクショナリまたは配列を表します (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>です。<xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>;<xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>;<xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>;<xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span><span class="sxs-lookup"><span data-stu-id="315ea-108"><xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="315ea-109">
            <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-109">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="315ea-110">
            <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-110">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315ea-111">既定の実装は、空です。</span><span class="sxs-lookup"><span data-stu-id="315ea-111">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="315ea-112">値を指定するこのコンス トラクターが内部的に呼び出される<xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>です。</span><span class="sxs-lookup"><span data-stu-id="315ea-112">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="315ea-113"><xref:System.Xaml.Schema.XamlTypeInvoker>サブクラスは、いずれかを使用することを想定して、<xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29>を作成するための署名を呼び出すオーバーライドを提供または<xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29>基本です。</span><span class="sxs-lookup"><span data-stu-id="315ea-113">For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base.</span></span> <span data-ttu-id="315ea-114">提供する、<xref:System.Xaml.XamlType>既定の実装パターン where<xref:System.Xaml.Schema.XamlTypeInvoker>は変更できません。</span><span class="sxs-lookup"><span data-stu-id="315ea-114">Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="315ea-115">この <see cref="T:System.Xaml.XamlType" /> に関連する固有の XAML 型の <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-115">The <see cref="T:System.Xaml.XamlType" /> value for the specific XAML type relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315ea-116">提供された <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づいて、<see cref="T:System.Xaml.XamlType" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-116">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315ea-117">このコンス トラクターは内部でに基づいてと呼ばれる、<xref:System.Xaml.XamlType>場所、<xref:System.Xaml.Schema.XamlTypeInvoker>構築に使用します。</span><span class="sxs-lookup"><span data-stu-id="315ea-117">This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction.</span></span> <span data-ttu-id="315ea-118">`type`の他のすべてのメソッドの呼び出しに関連するここでは<xref:System.Xaml.Schema.XamlTypeInvoker>します。</span><span class="sxs-lookup"><span data-stu-id="315ea-118">The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="315ea-119">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-119">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="315ea-120">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を構築するために使用した <see cref="T:System.Xaml.XamlType" /> によって指定された型のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-120">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="315ea-121">追加する項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-121">The item to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315ea-122">指定した項目を、この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連する型のインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-122">Adds the provided item to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315ea-123">のみこのメソッドを呼び出す必要があります、<xref:System.Xaml.XamlType>を表すコレクション。</span><span class="sxs-lookup"><span data-stu-id="315ea-123">You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="315ea-124">不明な <see cref="T:System.Xaml.XamlType" /> に基づく <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-124">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="315ea-125">** -または- **</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-125">**-or-**</span>
          </span>
          <span data-ttu-id="315ea-126">関連する型がコレクションではない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="315ea-127">
            <paramref name="instance" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-127">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="315ea-128">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> の <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> は、<see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-128">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="315ea-129">基底の実装には、内部ヘルパーの呼び出しが含まれています。 <c>ThrowIfUnknown</c>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-129">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="315ea-130">このヘルパーは常に場合にスロー場所、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" />は不明なに基づいて<see cref="T:System.Xaml.XamlType" />であるケースが含まれている、<see cref="P:System.Xaml.XamlType.UnderlyingType" />の<see cref="T:System.Xaml.XamlType" />は<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-130">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="315ea-131">基底の実装の呼び出しでは内部的には、 <see cref="P:System.Xaml.XamlType.IsCollection" />、し、結果は場合スロー<see langword="false" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-131">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsCollection" />, and throws if the result is <see langword="false" />.</span>
            </span>
            <span data-ttu-id="315ea-132">基底の実装は必ずしも使用独自<see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />実装します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-132">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span>
            </span>
            <span data-ttu-id="315ea-133">最初の cast<paramref name="instance" />に<see cref="T:System.Collections.IList" />しようとするとします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-133">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IList" /> is attempted.</span>
            </span>
            <span data-ttu-id="315ea-134">これが成功するへの呼び出し<see cref="M:System.Collections.IList.Add(System.Object)" />が行われますが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-134">If this succeeds, a call to <see cref="M:System.Collections.IList.Add(System.Object)" /> is made and the method returns.</span>
            </span>
            <span data-ttu-id="315ea-135">基底の実装が CLR を使用する場合は、<see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />を呼び出す、基になる<see langword="Add" />メソッドへの呼び出しから取得した<see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />この<paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-135">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            </span>
            <span data-ttu-id="315ea-136">基本の実装で例外は発生しない場合、このレベルで<paramref name="item" />は<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-136">In the base implementation no exception is raised at this level if <paramref name="item" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="315ea-137">可能性がありますする、基になる<see langword="Add" />メソッドが呼び出されたときに例外を発生させます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-137">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span>
            </span>
            <span data-ttu-id="315ea-138">他の実行時例外が考えられる場合<see cref="P:System.Xaml.XamlType.ItemType" />は有効な結果を返しません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-138">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="315ea-139">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を構築するために使用した <see cref="T:System.Xaml.XamlType" /> によって指定された型のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-139">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="315ea-140">追加するアイテムのディクショナリ キー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-140">Dictionary key for the item to add.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="315ea-141">追加する項目値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-141">The item value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315ea-142">指定したキーと項目の値を、この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に関連する型のインスタンスに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-142">Adds the provided key and item value to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315ea-143">のみこのメソッドを呼び出す必要があります、<xref:System.Xaml.XamlType>を表すディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="315ea-143">You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="315ea-144">不明な <see cref="T:System.Xaml.XamlType" /> に基づく <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-144">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="315ea-145">** -または- **</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-145">**-or-**</span>
          </span>
          <span data-ttu-id="315ea-146">関連する型がディクショナリではない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-146">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="315ea-147">
            <paramref name="instance" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-147">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="315ea-148">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> の <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> は、<see langword="null" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-148">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="315ea-149">基底の実装には、内部ヘルパーの呼び出しが含まれています。 <c>ThrowIfUnknown</c>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-149">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="315ea-150">このヘルパーは常に場合にスロー場所、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" />は不明なに基づいて<see cref="T:System.Xaml.XamlType" />であるケースが含まれている、<see cref="P:System.Xaml.XamlType.UnderlyingType" />の<see cref="T:System.Xaml.XamlType" />は<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-150">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="315ea-151">基底の実装の呼び出しでは内部的には、 <see cref="P:System.Xaml.XamlType.IsDictionary" />、し、結果は場合スロー<see langword="false" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-151">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsDictionary" />, and throws if the result is <see langword="false" />.</span>
            </span>
            <span data-ttu-id="315ea-152">基底の実装は必ずしも使用独自<see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />実装します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-152">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span>
            </span>
            <span data-ttu-id="315ea-153">最初の cast<paramref name="instance" />に<see cref="T:System.Collections.IDictionary" />しようとするとします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-153">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IDictionary" /> is attempted.</span>
            </span>
            <span data-ttu-id="315ea-154">これが成功するへの呼び出し<see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />が行われますが返されます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-154">If this succeeds, a call to <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> is made and the method returns.</span>
            </span>
            <span data-ttu-id="315ea-155">基底の実装が CLR を使用する場合は、<see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />を呼び出す、基になる<see langword="Add" />メソッドへの呼び出しから取得した<see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />この<paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-155">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            </span>
            <span data-ttu-id="315ea-156">基本の実装で例外は発生しない場合、このレベルで<paramref name="item" />または<paramref name="key" />は<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-156">In the base implementation no exception is raised at this level if <paramref name="item" /> or <paramref name="key" /> are <see langword="null" />.</span>
            </span>
            <span data-ttu-id="315ea-157">可能性がありますする、基になる<see langword="Add" />メソッドが呼び出されたときに例外を発生させます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-157">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span>
            </span>
            <span data-ttu-id="315ea-158">他の実行時例外が考えられる場合<see cref="P:System.Xaml.XamlType.ItemType" />は有効な結果を返しません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-158">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="315ea-159">インスタンスの <see langword="x:ConstructorArgs" /> を指定するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-159">An array of objects that supply the <see langword="x:ConstructorArgs" /> for the instance.</span>
          </span>
          <span data-ttu-id="315ea-160">
            <see langword="null" /> を必要としないか、または使用しない型の場合は <see langword="x:ConstructorArgs" /> にできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-160">May be <see langword="null" /> for types that do not require or use <see langword="x:ConstructorArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315ea-161">この <see cref="T:System.Xaml.XamlType" /> の構築が開始された <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づいて、オブジェクト インスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-161">Creates an object instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="315ea-162">この <see cref="T:System.Xaml.XamlType" /> の構築が開始された <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> に基づいて作成されたインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-162">The created instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="315ea-163">コンストラクターを解決できませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-163">Could not resolve a constructor.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="315ea-164">基底の実装には、内部ヘルパーの呼び出しが含まれています。 <c>ThrowIfUnknown</c>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-164">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="315ea-165">このヘルパーは常に場合にスロー場所、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" />は不明なに基づいて<see cref="T:System.Xaml.XamlType" />であるケースが含まれている、<see cref="P:System.Xaml.XamlType.UnderlyingType" />の<see cref="T:System.Xaml.XamlType" />は<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-165">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <span data-ttu-id="315ea-166">
            <see langword="Add" /> メソッドで使用されるアイテムの種類の <see cref="T:System.Xaml.XamlType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-166">
              <see cref="T:System.Xaml.XamlType" /> for the item type that is used by the <see langword="Add" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315ea-167">コレクションまたはディクショナリに関連する <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> の関連する <see langword="Add" /> メソッドを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-167">Returns the relevant <see langword="Add" /> method for a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is relevant to a collection or dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="315ea-168">
            <see langword="Add" /> メソッドの CLR <see cref="T:System.Reflection.MethodInfo" /> 情報、または null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-168">CLR <see cref="T:System.Reflection.MethodInfo" /> information for the <see langword="Add" /> method, or null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315ea-169">このメソッドが返す`null`のケースの場所、<xref:System.Xaml.XamlType>この<xref:System.Xaml.Schema.XamlTypeInvoker>書き込み可能なコレクションまたはディクショナリではありません。</span><span class="sxs-lookup"><span data-stu-id="315ea-169">This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary.</span></span> <span data-ttu-id="315ea-170">具体的には、返す必要があります`null`のケースの<xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType>返します`None`です。</span><span class="sxs-lookup"><span data-stu-id="315ea-170">Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="315ea-171">このメソッドにレポート false する可能性がある場合は、完全に信頼された XAML 型システムにアクセスしている場合、<xref:System.Reflection.MethodInfo>呼び出し元情報です。</span><span class="sxs-lookup"><span data-stu-id="315ea-171">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="315ea-172">
            <paramref name="contentType" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-172">
              <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="315ea-173">基底の実装を返します<see langword="null" />のケースの場所、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" />は不明なに基づいて<see cref="T:System.Xaml.XamlType" />であるケースが含まれている、<see cref="P:System.Xaml.XamlType.UnderlyingType" />の<see cref="T:System.Xaml.XamlType" />は<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-173">The base implementation returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="315ea-174">返します<see langword="null" />場合<see cref="P:System.Xaml.XamlType.ItemType" />は<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-174">It also returns <see langword="null" /> if <see cref="P:System.Xaml.XamlType.ItemType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="315ea-175">XAML のコレクションに可能性がある 1 つ以上<see langword="Add" />メソッド、XAML コレクションが 1 つ以上のコンテンツ タイプをサポートできる可能性がありますので (を参照してください<see cref="P:System.Xaml.XamlType.AllowedContentTypes" />、または参照してください<see cref="T:System.Windows.Markup.ContentWrapperAttribute" />WPF でのこの概念の 1 つの実装方法について)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-175">XAML collections potentially have more than one <see langword="Add" /> method, because a XAML collection can potentially support more than one content type (see <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, or see <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> for information about one implementation of this concept in WPF).</span>
            </span>
            <span data-ttu-id="315ea-176">既定の実装では、内部ロジックを使用して、署名と指定された型に基づいて最適な一致を返す<paramref name="contentType" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-176">The default implementation uses internal logic to return the best match based on the signatures and the type of the supplied <paramref name="contentType" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="315ea-177">アイテムを列挙できるメソッドを表すオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-177">Returns an object representing a method that can enumerate over items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="315ea-178">列挙子メソッドの <see cref="T:System.Reflection.MethodInfo" />、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-178">
              <see cref="T:System.Reflection.MethodInfo" /> for an enumerator method, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315ea-179">返す必要があります`null`のケースの<xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType>返します`None`です。</span><span class="sxs-lookup"><span data-stu-id="315ea-179">Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="315ea-180">このメソッドにレポート false する可能性がある場合は、完全に信頼された XAML 型システムにアクセスしている場合、<xref:System.Reflection.MethodInfo>呼び出し元情報です。</span><span class="sxs-lookup"><span data-stu-id="315ea-180">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="315ea-181">基底の実装では、内部のヘルパー メソッドを呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-181">The base implementation calls an internal helper method.</span>
            </span>
            <span data-ttu-id="315ea-182">そのヘルパーを返します<see langword="null" />のケースの場所、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" />は不明なに基づいて<see cref="T:System.Xaml.XamlType" />であるケースが含まれている、<see cref="P:System.Xaml.XamlType.UnderlyingType" />の<see cref="T:System.Xaml.XamlType" />は<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-182">That helper returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="315ea-183">返します<see langword="null" />のケースの<see cref="M:System.Xaml.XamlType.LookupCollectionKind" />返します<see langword="None" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-183">It also returns <see langword="null" /> for cases where <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> returns <see langword="None" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="315ea-184">この <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を構築するために使用した <see cref="T:System.Xaml.XamlType" /> によって指定された型のインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-184">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="315ea-185">アイテムのセットを表す <see cref="T:System.Collections.IEnumerator" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-185">Returns an <see cref="T:System.Collections.IEnumerator" /> object representing the set of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="315ea-186">
            <see cref="T:System.Collections.IEnumerator" /> オブジェクト、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-186">An <see cref="T:System.Collections.IEnumerator" /> object, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="315ea-187">不明な <see cref="T:System.Xaml.XamlType" /> に基づく <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で、このメソッドを呼び出しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-187">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="315ea-188">** -または- **</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-188">**-or-**</span>
          </span>
          <span data-ttu-id="315ea-189">このメソッドを、関連する型がコレクションまたは辞書でない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> で呼び出しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-189">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection or dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="315ea-190">
            <paramref name="instance" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-190">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="315ea-191">基底の実装には、内部ヘルパーの呼び出しが含まれています。 <c>ThrowIfUnknown</c>です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-191">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="315ea-192">このヘルパーは常に場合にスロー場所、<see cref="T:System.Xaml.Schema.XamlTypeInvoker" />は不明なに基づいて<see cref="T:System.Xaml.XamlType" />であるケースが含まれている、<see cref="P:System.Xaml.XamlType.UnderlyingType" />の<see cref="T:System.Xaml.XamlType" />は<see langword="null" />します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-192">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="315ea-193">基底の実装は必ずしも使用独自<see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />実装します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-193">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementation.</span>
            </span>
            <span data-ttu-id="315ea-194">最初の cast<paramref name="instance" />に<see cref="T:System.Collections.IEnumerable" />しようとするとします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-194">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IEnumerable" /> is attempted.</span>
            </span>
            <span data-ttu-id="315ea-195">これが成功するへの呼び出し<see cref="M:System.Collections.IEnumerable.GetEnumerator" />が行われますと値を返すメソッドを返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-195">If this succeeds, a call to <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> is made and the method returns that return value.</span>
            </span>
            <span data-ttu-id="315ea-196">基底の実装が CLR を使用する場合は、<see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" />を呼び出す、基になる<see langword="GetEnumerator" />メソッドへの呼び出しから取得した<see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />この<paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="315ea-196">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="GetEnumerator" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="315ea-197">
            <see cref="T:System.Xaml.XamlObjectWriter" /> が実装された <see cref="T:System.Windows.Markup.MarkupExtension" /> を呼び出すときに使用するハンドラーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-197">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into an implemented <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="315ea-198">このような場合の処理を行うハンドラーの実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-198">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315ea-199">イベント ハンドラーがに基づいて<xref:System.EventHandler%601>で制約<xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs>イベント データ。</span><span class="sxs-lookup"><span data-stu-id="315ea-199">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="315ea-200">返される値を呼び出す、<xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A>の動作、<xref:System.Xaml.XamlType>を<xref:System.Xaml.Schema.XamlTypeInvoker>に基づきます。</span><span class="sxs-lookup"><span data-stu-id="315ea-200">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="315ea-201">戻り値は`null`の<xref:System.Xaml.Schema.XamlTypeInvoker>不明に基づく<xref:System.Xaml.XamlType>です。</span><span class="sxs-lookup"><span data-stu-id="315ea-201">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="315ea-202">
            <see cref="T:System.Xaml.XamlObjectWriter" /> が CLR によって実装された <see cref="T:System.ComponentModel.TypeConverter" /> を呼び出したときに使用するハンドラーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-202">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into a CLR-implemented <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="315ea-203">このような場合の処理を行うハンドラーの実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-203">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315ea-204">イベント ハンドラーがに基づいて<xref:System.EventHandler%601>で制約<xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs>イベント データ。</span><span class="sxs-lookup"><span data-stu-id="315ea-204">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="315ea-205">返される値を呼び出す、<xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A>の動作、<xref:System.Xaml.XamlType>を<xref:System.Xaml.Schema.XamlTypeInvoker>に基づきます。</span><span class="sxs-lookup"><span data-stu-id="315ea-205">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="315ea-206">戻り値は`null`の<xref:System.Xaml.Schema.XamlTypeInvoker>不明に基づく<xref:System.Xaml.XamlType>です。</span><span class="sxs-lookup"><span data-stu-id="315ea-206">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="315ea-207">不明な、完全に実装されていない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を表す静的な値を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-207">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="315ea-208">不明な、完全に実装されていない <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> を表す静的な値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="315ea-208">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="315ea-209">この値を指定する、 <xref:System.Xaml.Schema.XamlTypeInvoker> System.Xaml のパラメーターには、API が定義されている例外をスローすると呼ばれるコードを通常発生することです。</span><span class="sxs-lookup"><span data-stu-id="315ea-209">Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>