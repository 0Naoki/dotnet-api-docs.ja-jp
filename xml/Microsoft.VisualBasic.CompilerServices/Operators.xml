<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37850a070290bb0b00b90cde518bb1490aa18790" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53229351" /></Metadata><TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a5e17-101">Visual Basic コンパイラが内部的に使用する、<see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> や <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" /> などの遅延バインディング数値演算子を提供します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-102">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md"><span data-ttu-id="a5e17-103">演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-103">Operators (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-104">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-104">Required.</span></span> <span data-ttu-id="a5e17-105">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-105">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-106">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-106">Required.</span></span> <span data-ttu-id="a5e17-107">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-107">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-108">Visual Basic の加算 (+) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-108">Represents the Visual Basic addition (+) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-109"><paramref name="Left" /> と <paramref name="Right" /> の合計。</span><span class="sxs-lookup"><span data-stu-id="a5e17-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-110">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="a5e17-111">+ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-111">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-112">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-112">Required.</span></span> <span data-ttu-id="a5e17-113">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-114">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-114">Required.</span></span> <span data-ttu-id="a5e17-115">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-116">Visual Basic の <see langword="And" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-116">Represents the Visual Basic <see langword="And" /> operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-117"><see langword="Boolean" /> 演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも <see langword="True" /> と評価される場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="a5e17-118">ビットごとの演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも 1 と評価される場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="a5e17-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-119">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="a5e17-120">And 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-121">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-121">Required.</span></span> <span data-ttu-id="a5e17-122">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-122">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-123">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-123">Required.</span></span> <span data-ttu-id="a5e17-124">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-124">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-125">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-125">Required.</span></span> <span data-ttu-id="a5e17-126">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-126"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-127">Visual Basic の比較演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-127">Represents Visual Basic comparison operators.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="a5e17-128">[値]</span><span class="sxs-lookup"><span data-stu-id="a5e17-128">Value</span></span> 
 </term>
              <description> <span data-ttu-id="a5e17-129">条件</span><span class="sxs-lookup"><span data-stu-id="a5e17-129">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="a5e17-130">-1</span><span class="sxs-lookup"><span data-stu-id="a5e17-130">-1</span></span> 
 </term>
              <description><span data-ttu-id="a5e17-131">
                <paramref name="Left" /> は <paramref name="Right" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-131">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="a5e17-132">0</span><span class="sxs-lookup"><span data-stu-id="a5e17-132">0</span></span> 
 </term>
              <description><span data-ttu-id="a5e17-133">
                <paramref name="Left" /> と <paramref name="Right" /> が等しい。</span><span class="sxs-lookup"><span data-stu-id="a5e17-133">
                <paramref name="Left" /> and <paramref name="Right" /> are equal.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="a5e17-134">1</span><span class="sxs-lookup"><span data-stu-id="a5e17-134">1</span></span> 
 </term>
              <description><span data-ttu-id="a5e17-135">
                <paramref name="Left" /> が <paramref name="Right" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="a5e17-135">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-136">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="a5e17-137">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-137">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-138">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-138">Required.</span></span> <span data-ttu-id="a5e17-139">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-139">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-140">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-140">Required.</span></span> <span data-ttu-id="a5e17-141">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-141">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-142">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-142">Required.</span></span> <span data-ttu-id="a5e17-143">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-143"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-144">Visual Basic の等値 (=) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-144">Represents the Visual Basic equal (=) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-145"><see langword="True" /> と <paramref name="Left" /> が等しい場合は <paramref name="Right" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-145"><see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-146">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="a5e17-147">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-147">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-148">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-148">Required.</span></span> <span data-ttu-id="a5e17-149">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-149">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-150">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-150">Required.</span></span> <span data-ttu-id="a5e17-151">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-151">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-152">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-152">Required.</span></span> <span data-ttu-id="a5e17-153">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-153"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-154">Visual Basic のより大きい (&gt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-154">Represents the Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-155"><see langword="True" /> が <paramref name="Left" /> より大きい場合は <paramref name="Right" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-155"><see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-156">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-156">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="a5e17-157">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-157">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-158">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-158">Required.</span></span> <span data-ttu-id="a5e17-159">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-159">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-160">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-160">Required.</span></span> <span data-ttu-id="a5e17-161">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-161">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-162">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-162">Required.</span></span> <span data-ttu-id="a5e17-163">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-163"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-164">Visual Basic のより大か等しい (&gt;=) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-164">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-165"><paramref name="Left" /> が <paramref name="Right" /> 以上の場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-165"><see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-166">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-166">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="a5e17-167">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-167">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-168">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-168">Required.</span></span> <span data-ttu-id="a5e17-169">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-169">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-170">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-170">Required.</span></span> <span data-ttu-id="a5e17-171">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-171">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-172">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-172">Required.</span></span> <span data-ttu-id="a5e17-173">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-173"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-174">Visual Basic のより小さい (&lt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-174">Represents the Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-175"><paramref name="Left" /> が <paramref name="Right" /> より小さい場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-175"><see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-176">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-176">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="a5e17-177">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-177">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-178">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-178">Required.</span></span> <span data-ttu-id="a5e17-179">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-179">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-180">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-180">Required.</span></span> <span data-ttu-id="a5e17-181">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-181">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-182">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-182">Required.</span></span> <span data-ttu-id="a5e17-183">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-183"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-184">Visual Basic のより小さいか等しい (&lt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-184">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-185"><paramref name="Left" /> が <paramref name="Right" /> 以下の場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-185"><see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-186">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-186">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="a5e17-187">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-187">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-188">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-188">Required.</span></span> <span data-ttu-id="a5e17-189">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-189">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-190">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-190">Required.</span></span> <span data-ttu-id="a5e17-191">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-191">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-192">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-192">Required.</span></span> <span data-ttu-id="a5e17-193">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-193"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-194">Visual Basic の不等号 (&lt;&gt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-194">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-195"><see langword="True" /> が <paramref name="Left" /> と等しくない場合は <paramref name="Right" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-195"><see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-196">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-196">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="a5e17-197">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-197">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-198">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-198">Required.</span></span> <span data-ttu-id="a5e17-199">任意のブール型 ( <see langword="String" /> ) の式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-199">Any <see langword="String" /> expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-200">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-200">Required.</span></span> <span data-ttu-id="a5e17-201">任意のブール型 ( <see langword="String" /> ) の式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-201">Any <see langword="String" /> expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-202">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-202">Required.</span></span> <span data-ttu-id="a5e17-203">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-203"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-204">指定された 2 つの文字列に対して、バイナリ文字列比較またはテキスト文字列比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-204">Performs binary or text string comparison when given two strings.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="a5e17-205">[値]</span><span class="sxs-lookup"><span data-stu-id="a5e17-205">Value</span></span> 
 </term>
              <description> <span data-ttu-id="a5e17-206">条件</span><span class="sxs-lookup"><span data-stu-id="a5e17-206">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="a5e17-207">-1</span><span class="sxs-lookup"><span data-stu-id="a5e17-207">-1</span></span> 
 </term>
              <description><span data-ttu-id="a5e17-208">
                <paramref name="Left" /> は <paramref name="Right" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-208">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="a5e17-209">0</span><span class="sxs-lookup"><span data-stu-id="a5e17-209">0</span></span> 
 </term>
              <description><span data-ttu-id="a5e17-210">
                <paramref name="Left" /> と <paramref name="Right" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-210">
                <paramref name="Left" /> is equal to <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="a5e17-211">1</span><span class="sxs-lookup"><span data-stu-id="a5e17-211">1</span></span> 
 </term>
              <description><span data-ttu-id="a5e17-212">
                <paramref name="Left" /> が <paramref name="Right" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="a5e17-212">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-213">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-213">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="a5e17-214">文字列を渡して、Visual Basic の等値演算子を使用すると、2 つの文字列を比較すると、ときに、<xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A>メソッドの値と`False`の`TextCompare`引数。</span><span class="sxs-lookup"><span data-stu-id="a5e17-214">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="a5e17-215">これは、序数に基づくか、ステートメントの値に応じて、現在のカルチャに基づいて、大文字小文字の比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-215">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="a5e17-216">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-217">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-217">Required.</span></span> <span data-ttu-id="a5e17-218">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-218">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-219">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-219">Required.</span></span> <span data-ttu-id="a5e17-220">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-220">Any expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-221">Visual Basic の連結 (&amp;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-221">Represents the Visual Basic concatenation (&amp;) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-222"><paramref name="Left" /> と <paramref name="Right" /> の連結を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="a5e17-222">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-223">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-223">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="a5e17-224">&amp; 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-224">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-225">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-225">Required.</span></span> <span data-ttu-id="a5e17-226">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-226">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-227">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-227">Required.</span></span> <span data-ttu-id="a5e17-228">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-228">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-229">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-229">Required.</span></span> <span data-ttu-id="a5e17-230">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-230"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-231">Visual Basic のオーバーロードされた等値 (=) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-231">Represents the overloaded Visual Basic equals (=) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-232">オーバーロードされた等値演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="a5e17-232">The result of the overloaded equals operator.</span></span> <span data-ttu-id="a5e17-233">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-233"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-234">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-234">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="a5e17-235">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="a5e17-235">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-236">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-236">Required.</span></span> <span data-ttu-id="a5e17-237">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-237">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-238">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-238">Required.</span></span> <span data-ttu-id="a5e17-239">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-239">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-240">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-240">Required.</span></span> <span data-ttu-id="a5e17-241">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-241"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-242">Visual Basic のオーバーロードされたより大きい (&gt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-242">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-243">オーバーロードされた大なり演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="a5e17-243">The result of the overloaded greater-than operator.</span></span> <span data-ttu-id="a5e17-244">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-244"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-245">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-245">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="a5e17-246">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="a5e17-246">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-247">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-247">Required.</span></span> <span data-ttu-id="a5e17-248">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-248">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-249">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-249">Required.</span></span> <span data-ttu-id="a5e17-250">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-250">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-251">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-251">Required.</span></span> <span data-ttu-id="a5e17-252">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-252"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-253">Visual Basic のオーバーロードされたより大か等しい (&gt;=) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-253">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-254">オーバーロードされた以上演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="a5e17-254">The result of the overloaded greater-than or equal-to operator.</span></span> <span data-ttu-id="a5e17-255">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-255"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-256">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-256">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="a5e17-257">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="a5e17-257">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-258">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-258">Required.</span></span> <span data-ttu-id="a5e17-259">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-259">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-260">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-260">Required.</span></span> <span data-ttu-id="a5e17-261">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-261">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-262">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-262">Required.</span></span> <span data-ttu-id="a5e17-263">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-263"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-264">Visual Basic のオーバーロードされたより小さい (&lt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-264">Represents the overloaded Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-265">オーバーロードされた小なり演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="a5e17-265">The result of the overloaded less-than operator.</span></span> <span data-ttu-id="a5e17-266">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-266"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-267">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="a5e17-268">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="a5e17-268">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-269">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-269">Required.</span></span> <span data-ttu-id="a5e17-270">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-270">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-271">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-271">Required.</span></span> <span data-ttu-id="a5e17-272">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-272">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-273">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-273">Required.</span></span> <span data-ttu-id="a5e17-274">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-274"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-275">Visual Basic のオーバーロードされたより小さいか等しい (&lt;=) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-275">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-276">オーバーロードされた以下演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="a5e17-276">The result of the overloaded less-than or equal-to operator.</span></span> <span data-ttu-id="a5e17-277">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-277"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-278">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-278">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="a5e17-279">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="a5e17-279">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-280">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-280">Required.</span></span> <span data-ttu-id="a5e17-281">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-281">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-282">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-282">Required.</span></span> <span data-ttu-id="a5e17-283">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-283">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="a5e17-284">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-284">Required.</span></span> <span data-ttu-id="a5e17-285">大文字と小文字を区別せずに文字列を比較する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-285"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-286">Visual Basic のオーバーロードされた不等号 (&lt;&gt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-286">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-287">オーバーロードされた不等演算子の結果。</span><span class="sxs-lookup"><span data-stu-id="a5e17-287">The result of the overloaded not-equal operator.</span></span> <span data-ttu-id="a5e17-288">演算子のオーバーロードがサポートされていない場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-288"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-289">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-289">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="a5e17-290">演算子プロシージャ</span><span class="sxs-lookup"><span data-stu-id="a5e17-290">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-291">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-291">Required.</span></span> <span data-ttu-id="a5e17-292">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-292">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-293">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-293">Required.</span></span> <span data-ttu-id="a5e17-294">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-294">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-295">Visual Basic の除算 (/) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-295">Represents the Visual Basic division (/) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-296"><paramref name="Left" /> を <paramref name="Right" /> で割った、剰余を含む完全な商。</span><span class="sxs-lookup"><span data-stu-id="a5e17-296">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-297">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="a5e17-298">/ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-298">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-299">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-299">Required.</span></span> <span data-ttu-id="a5e17-300">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-300">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-301">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-301">Required.</span></span> <span data-ttu-id="a5e17-302">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-302">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-303">Visual Basic の指数 (^) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-303">Represents the Visual Basic exponent (^) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-304"><paramref name="Left" /> を <paramref name="Right" /> で累乗した結果。</span><span class="sxs-lookup"><span data-stu-id="a5e17-304">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-305">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-305">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="a5e17-306">^ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-306">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp"><span data-ttu-id="a5e17-307">ユーザー定義の演算子。</span><span class="sxs-lookup"><span data-stu-id="a5e17-307">The user-defined operator.</span></span></param>
        <param name="Arguments"><span data-ttu-id="a5e17-308">ユーザー定義の演算子に渡す引数値。</span><span class="sxs-lookup"><span data-stu-id="a5e17-308">Argument values to pass to the user-defined operator.</span></span></param>
        <summary><span data-ttu-id="a5e17-309">ユーザー定義の演算子の遅延バインディング評価を実行します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-309">Executes a late-bound evaluation of a user-defined operator.</span></span> <span data-ttu-id="a5e17-310">このヘルパー メソッドは、コードから直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-310">This helper method is not meant to be called directly from your code.</span></span></summary>
        <returns><span data-ttu-id="a5e17-311">ユーザー定義の演算子から返される結果。</span><span class="sxs-lookup"><span data-stu-id="a5e17-311">The result returned from the user-defined operator.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-312">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-312">Required.</span></span> <span data-ttu-id="a5e17-313">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-313">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-314">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-314">Required.</span></span> <span data-ttu-id="a5e17-315">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-315">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-316">Visual Basic の整数除算 (\\) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-316">Represents the Visual Basic integer division (\\) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-317"><paramref name="Left" /> を <paramref name="Right" /> で割った整数の商。余りはすべて破棄され、整数部分だけが保持されます。</span><span class="sxs-lookup"><span data-stu-id="a5e17-317">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-318">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-318">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="a5e17-319">\ 演算子</span><span class="sxs-lookup"><span data-stu-id="a5e17-319">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="a5e17-320">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-320">Required.</span></span> <span data-ttu-id="a5e17-321">整数の式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-321">Integral numeric expression.</span></span> <span data-ttu-id="a5e17-322">シフトされるビット パターンです。</span><span class="sxs-lookup"><span data-stu-id="a5e17-322">The bit pattern to be shifted.</span></span> <span data-ttu-id="a5e17-323">データ型は整数型 (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" />、<see langword="ULong" />) である必要があります。</span><span class="sxs-lookup"><span data-stu-id="a5e17-323">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="a5e17-324">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-324">Required.</span></span> <span data-ttu-id="a5e17-325">数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-325">Numeric expression.</span></span> <span data-ttu-id="a5e17-326">ビット パターンは、このビット数だけシフトされます。</span><span class="sxs-lookup"><span data-stu-id="a5e17-326">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="a5e17-327">データ型は、整数型 (<see langword="Integer" />) であるか、整数型 (<see langword="Integer" />) に拡大変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a5e17-327">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-328">Visual Basic の算術左シフト (&lt;&lt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-328">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-329">整数値。</span><span class="sxs-lookup"><span data-stu-id="a5e17-329">An integral numeric value.</span></span> <span data-ttu-id="a5e17-330">ビット パターンをシフトした結果が格納されます。</span><span class="sxs-lookup"><span data-stu-id="a5e17-330">The result of shifting the bit pattern.</span></span> <span data-ttu-id="a5e17-331">データ型は、<paramref name="Operand" /> の型と同じになります。</span><span class="sxs-lookup"><span data-stu-id="a5e17-331">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-332">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-332">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="a5e17-333">&lt;&lt; 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-333">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="a5e17-334">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-334">Required.</span></span> <span data-ttu-id="a5e17-335">任意の式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-335">Any expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="a5e17-336">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-336">Required.</span></span> <span data-ttu-id="a5e17-337">「Like 演算子」で説明されているパターン一致規則に準拠した任意の文字列式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-337">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="a5e17-338">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-338">Required.</span></span> <span data-ttu-id="a5e17-339">演算でテキスト比較とバイナリ比較のどちらを使用するかを指定する <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 値。</span><span class="sxs-lookup"><span data-stu-id="a5e17-339">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="a5e17-340">Visual Basic の <see langword="Like" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-340">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-341"><paramref name="Source" /> の値の文字列表現が <paramref name="Pattern" /> で指定されているパターンを満たす場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-341"><see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="a5e17-342"><paramref name="Source" /> と <paramref name="Pattern" /> が両方とも <see langword="True" /> の場合は <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-342"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-343">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-343">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="a5e17-344">Like 演算子</span><span class="sxs-lookup"><span data-stu-id="a5e17-344">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="a5e17-345">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-345">Required.</span></span> <span data-ttu-id="a5e17-346">任意のブール型 ( <see langword="String" /> ) の式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-346">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="a5e17-347">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-347">Required.</span></span> <span data-ttu-id="a5e17-348">パターン一致規則に適合させる任意の文字列 (<see langword="String" />) 式を指定します。規則については「Like 演算子」で説明します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-348">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="a5e17-349">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-349">Required.</span></span> <span data-ttu-id="a5e17-350">演算でテキスト比較とバイナリ比較のどちらを使用するかを指定する <see cref="T:Microsoft.VisualBasic.CompareMethod" /> 値。</span><span class="sxs-lookup"><span data-stu-id="a5e17-350">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="a5e17-351">Visual Basic の <see langword="Like" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-351">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-352"><paramref name="Source" /> の値が <paramref name="Pattern" /> で指定されているパターンを満たす場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-352"><see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="a5e17-353"><paramref name="Source" /> と <paramref name="Pattern" /> が両方とも空の場合は <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-353"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-354">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-354">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="a5e17-355">Like 演算子</span><span class="sxs-lookup"><span data-stu-id="a5e17-355">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-356">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-356">Required.</span></span> <span data-ttu-id="a5e17-357">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-357">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-358">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-358">Required.</span></span> <span data-ttu-id="a5e17-359">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-359">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-360">Visual Basic の <see langword="Mod" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-360">Represents the Visual Basic <see langword="Mod" /> operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-361"><paramref name="Left" /> を <paramref name="Right" /> で除算した後の剰余。</span><span class="sxs-lookup"><span data-stu-id="a5e17-361">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-362">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-362">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="a5e17-363">Mod 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-363">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-364">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-364">Required.</span></span> <span data-ttu-id="a5e17-365">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-365">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-366">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-366">Required.</span></span> <span data-ttu-id="a5e17-367">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-367">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-368">Visual Basic の乗算 (\*) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-368">Represents the Visual Basic multiply (\*) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-369"><paramref name="Left" /> と <paramref name="Right" /> の積。</span><span class="sxs-lookup"><span data-stu-id="a5e17-369">The product of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-370">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="a5e17-371">\* 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-371">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="a5e17-372">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-372">Required.</span></span> <span data-ttu-id="a5e17-373">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-373">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-374">Visual Basic の単項マイナス (-) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-374">Represents the Visual Basic unary minus (-) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-375"><paramref name="Operand" /> の負の値。</span><span class="sxs-lookup"><span data-stu-id="a5e17-375">The negative value of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-376">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="a5e17-377">- 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-377">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="a5e17-378">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-378">Required.</span></span> <span data-ttu-id="a5e17-379">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-379">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-380">Visual Basic の <see langword="Not" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-380">Represents the Visual Basic <see langword="Not" /> operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-381"><see langword="Boolean" /> 演算では、<paramref name="Operand" /> が <see langword="False" /> の場合は <see langword="True" />。それ以外の場合は <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-381">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="a5e17-382">ビットごとの演算では、<paramref name="Operand" /> が 0 の場合は 1。それ以外の場合は 0。</span><span class="sxs-lookup"><span data-stu-id="a5e17-382">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-383">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="a5e17-384">Not 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-384">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-385">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-385">Required.</span></span> <span data-ttu-id="a5e17-386">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-386">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-387">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-387">Required.</span></span> <span data-ttu-id="a5e17-388">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-388">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-389">Visual Basic の <see langword="Or" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-389">Represents the Visual Basic <see langword="Or" /> operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-390"><see langword="Boolean" /> 演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも <see langword="False" /> と評価される場合は <see langword="False" />。それ以外の場合は <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="a5e17-390">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="a5e17-391">ビットごとの演算では、<paramref name="Left" /> と <paramref name="Right" /> が両方とも 0 と評価される場合は 0。それ以外の場合は 1。</span><span class="sxs-lookup"><span data-stu-id="a5e17-391">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-392">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-392">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="a5e17-393">Or 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-393">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="a5e17-394">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-394">Required.</span></span> <span data-ttu-id="a5e17-395">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-395">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-396">Visual Basic の単項プラス (+) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-396">Represents the Visual Basic unary plus (+) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-397"><paramref name="Operand" /> の値。</span><span class="sxs-lookup"><span data-stu-id="a5e17-397">The value of <paramref name="Operand" />.</span></span> <span data-ttu-id="a5e17-398">(<paramref name="Operand" /> の符号は変更されません)。</span><span class="sxs-lookup"><span data-stu-id="a5e17-398">(The sign of the <paramref name="Operand" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-399">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-399">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="a5e17-400">+ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-400">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="a5e17-401">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-401">Required.</span></span> <span data-ttu-id="a5e17-402">整数の式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-402">Integral numeric expression.</span></span> <span data-ttu-id="a5e17-403">シフトされるビット パターンです。</span><span class="sxs-lookup"><span data-stu-id="a5e17-403">The bit pattern to be shifted.</span></span> <span data-ttu-id="a5e17-404">データ型は整数型 (<see langword="SByte" />、<see langword="Byte" />、<see langword="Short" />、<see langword="UShort" />、<see langword="Integer" />、<see langword="UInteger" />、<see langword="Long" />、<see langword="ULong" />) である必要があります。</span><span class="sxs-lookup"><span data-stu-id="a5e17-404">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="a5e17-405">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-405">Required.</span></span> <span data-ttu-id="a5e17-406">数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-406">Numeric expression.</span></span> <span data-ttu-id="a5e17-407">ビット パターンは、このビット数だけシフトされます。</span><span class="sxs-lookup"><span data-stu-id="a5e17-407">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="a5e17-408">データ型は、整数型 (<see langword="Integer" />) であるか、整数型 (<see langword="Integer" />) に拡大変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a5e17-408">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="a5e17-409">Visual Basic の算術右シフト (&gt;&gt;) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-409">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-410">整数値。</span><span class="sxs-lookup"><span data-stu-id="a5e17-410">An integral numeric value.</span></span> <span data-ttu-id="a5e17-411">ビット パターンをシフトした結果が格納されます。</span><span class="sxs-lookup"><span data-stu-id="a5e17-411">The result of shifting the bit pattern.</span></span> <span data-ttu-id="a5e17-412">データ型は、<paramref name="Operand" /> の型と同じになります。</span><span class="sxs-lookup"><span data-stu-id="a5e17-412">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-413">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-413">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="a5e17-414">&gt;&gt; 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-414">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-415">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-415">Required.</span></span> <span data-ttu-id="a5e17-416">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-416">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-417">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-417">Required.</span></span> <span data-ttu-id="a5e17-418">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="a5e17-418">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-419">Visual Basic の減算 (-) 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-419">Represents the Visual Basic subtraction (-) operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-420"><paramref name="Left" /> と <paramref name="Right" /> の差。</span><span class="sxs-lookup"><span data-stu-id="a5e17-420">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-421">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-421">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="a5e17-422">- 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-422">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="a5e17-423">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-423">Required.</span></span> <span data-ttu-id="a5e17-424">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-424">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="a5e17-425">必須です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-425">Required.</span></span> <span data-ttu-id="a5e17-426">任意のブール型 (<see langword="Boolean" />) または数式を指定します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-426">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="a5e17-427">Visual Basic の <see langword="Xor" /> 演算子を表します。</span><span class="sxs-lookup"><span data-stu-id="a5e17-427">Represents the Visual Basic <see langword="Xor" /> operator.</span></span></summary>
        <returns><span data-ttu-id="a5e17-428"><see langword="Boolean" /> 値または数値。</span><span class="sxs-lookup"><span data-stu-id="a5e17-428">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="a5e17-429"><see langword="Boolean" /> 式の比較の場合、戻り値は 2 つの <see langword="Boolean" /> 値の排他的論理和です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-429">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="a5e17-430">ビットごとの (数値) 演算の場合、戻り値は 2 つの数値ビット パターンのビットごとの排他的論理和を表す数値です。</span><span class="sxs-lookup"><span data-stu-id="a5e17-430">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="a5e17-431">詳細については、「<see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor 演算子</see>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a5e17-431">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5e17-432">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="a5e17-432">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="a5e17-433">Xor 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="a5e17-433">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>