<Type Name="ObjectType" FullName="Microsoft.VisualBasic.CompilerServices.ObjectType">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b451b86a3f1309daea6673349b4569b41ce95c0" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65156739" /></Metadata><TypeSignature Language="C#" Value="public sealed class ObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectType sealed" />
  <TypeSignature Language="F#" Value="type ObjectType = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="efcd3-101">このクラスは Visual Basic 2005 以降推奨されています。</span><span class="sxs-lookup"><span data-stu-id="efcd3-101">This class has been deprecated as of Visual Basic 2005.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-102">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="efcd3-103"><see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-104">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-104">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddObj">
      <MemberSignature Language="C#" Value="public static object AddObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member AddObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="efcd3-105">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-105">Required.</span></span> <span data-ttu-id="efcd3-106">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-106">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="efcd3-107">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-107">Required.</span></span> <span data-ttu-id="efcd3-108">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-108">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-109">加算 (+) 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-109">Performs an addition (+) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-110"><paramref name="o1" /> と <paramref name="o2" /> の合計。</span><span class="sxs-lookup"><span data-stu-id="efcd3-110">The sum of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-111">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-111">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="efcd3-112">+ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-112">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitAndObj">
      <MemberSignature Language="C#" Value="public static object BitAndObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitAndObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitAndObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitAndObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitAndObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="efcd3-113">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-113">Required.</span></span> <span data-ttu-id="efcd3-114">すべて<see langword="Boolean" />または数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-114">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="efcd3-115">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-115">Required.</span></span> <span data-ttu-id="efcd3-116">すべて<see langword="Boolean" />または数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-116">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-117">排他的 or 演算<see langword="And" />操作。</span><span class="sxs-lookup"><span data-stu-id="efcd3-117">Performs a bitwise <see langword="And" /> operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-118">どちらの場合は 1<paramref name="obj1" />と<paramref name="obj2" />評価を 1 には 0。</span><span class="sxs-lookup"><span data-stu-id="efcd3-118">1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-119">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="efcd3-120">And 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitOrObj">
      <MemberSignature Language="C#" Value="public static object BitOrObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitOrObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitOrObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitOrObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitOrObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="efcd3-121">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-121">Required.</span></span> <span data-ttu-id="efcd3-122">すべて<see langword="Boolean" />または数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-122">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="efcd3-123">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-123">Required.</span></span> <span data-ttu-id="efcd3-124">すべて<see langword="Boolean" />または数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-124">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-125">排他的 or 演算<see langword="Or" />操作。</span><span class="sxs-lookup"><span data-stu-id="efcd3-125">Performs a bitwise <see langword="Or" /> operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-126"><paramref name="obj1" /> と <paramref name="obj2" /> が両方とも 0 と評価される場合は 0。それ以外の場合は 1。</span><span class="sxs-lookup"><span data-stu-id="efcd3-126">0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-127">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-127">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="efcd3-128">Or 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-128">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BitXorObj">
      <MemberSignature Language="C#" Value="public static object BitXorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitXorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitXorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitXorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitXorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="efcd3-129">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-129">Required.</span></span> <span data-ttu-id="efcd3-130">すべて<see langword="Boolean" />または数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-130">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="efcd3-131">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-131">Required.</span></span> <span data-ttu-id="efcd3-132">すべて<see langword="Boolean" />または数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-132">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-133">実行、<see langword="Xor" />操作。</span><span class="sxs-lookup"><span data-stu-id="efcd3-133">Performs an <see langword="Xor" /> operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-134">2 つの数値ビット パターンのビットごとの除外 (排他的なビットごとの論理和) を表す数値。</span><span class="sxs-lookup"><span data-stu-id="efcd3-134">A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="efcd3-135">詳細については、「<see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor 演算子</see>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="efcd3-135">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-136">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="efcd3-137">Xor 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-137">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivObj">
      <MemberSignature Language="C#" Value="public static object DivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member DivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="efcd3-138">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-138">Required.</span></span> <span data-ttu-id="efcd3-139">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-139">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="efcd3-140">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-140">Required.</span></span> <span data-ttu-id="efcd3-141">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-141">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-142">除算 (/) 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-142">Performs a division (/) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-143">完全な商<paramref name="o1" />で割った値<paramref name="o2" />剰余を含むです。</span><span class="sxs-lookup"><span data-stu-id="efcd3-143">The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-144">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="efcd3-145">/ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-145">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectValuePrimitive">
      <MemberSignature Language="C#" Value="public static object GetObjectValuePrimitive (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObjectValuePrimitive(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValuePrimitive (o As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValuePrimitive(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetObjectValuePrimitive : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="efcd3-146">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-146">Required.</span></span> <span data-ttu-id="efcd3-147">任意の式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-147">Any expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-148">ボックス化されたプリミティブ値を返します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-148">Returns a boxed primitive value.</span></span> <span data-ttu-id="efcd3-149">このメソッドを防ぐために使用される構造体を複数回コピーします。</span><span class="sxs-lookup"><span data-stu-id="efcd3-149">This method is used to prevent copying structures multiple times.</span></span></summary>
        <returns><span data-ttu-id="efcd3-150">プリミティブ値<paramref name="o" />オブジェクトとして型指定されます。</span><span class="sxs-lookup"><span data-stu-id="efcd3-150">The primitive value of <paramref name="o" /> typed as object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-151">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-151">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IDivObj">
      <MemberSignature Language="C#" Value="public static object IDivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IDivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IDivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IDivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member IDivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="efcd3-152">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-152">Required.</span></span> <span data-ttu-id="efcd3-153">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-153">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="efcd3-154">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-154">Required.</span></span> <span data-ttu-id="efcd3-155">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-155">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-156">整数除算 (\\) 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-156">Performs an integer division (\\) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-157">整数の商<paramref name="o1" />で割った値<paramref name="o2" />余りはすべて破棄され、整数部分だけが保持されます。</span><span class="sxs-lookup"><span data-stu-id="efcd3-157">The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-158">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-158">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="efcd3-159">\ 演算子</span><span class="sxs-lookup"><span data-stu-id="efcd3-159">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObj">
      <MemberSignature Language="C#" Value="public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeObj(object vLeft, object vRight, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObj (vLeft As Object, vRight As Object, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeObj(System::Object ^ vLeft, System::Object ^ vRight, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObj : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj (vLeft, vRight, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="efcd3-160">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-160">Required.</span></span> <span data-ttu-id="efcd3-161">任意の式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-161">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="efcd3-162">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-162">Required.</span></span> <span data-ttu-id="efcd3-163">Like 演算子で説明されているパターン一致規則に準拠している任意の文字列式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-163">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="efcd3-164">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-164">Required.</span></span> <span data-ttu-id="efcd3-165">A<see cref="T:Microsoft.VisualBasic.CompareMethod" />操作がテキストまたはバイナリの比較を使用することを指定する値。</span><span class="sxs-lookup"><span data-stu-id="efcd3-165">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="efcd3-166">実行、<see langword="Like" />比較します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-166">Performs a <see langword="Like" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="efcd3-167"><see langword="True" /> 場合、値の文字列表現<paramref name="vLeft" />に含まれているパターンを満たす<paramref name="vRight" />、それ以外の<see langword="False" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-167"><see langword="True" /> if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="efcd3-168"><see langword="True" /> 両方<paramref name="vLeft" />と<paramref name="vRight" />は<see langword="Nothing" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-168"><see langword="True" /> if both <paramref name="vLeft" /> and <paramref name="vRight" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-169">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-169">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="efcd3-170">Like 演算子</span><span class="sxs-lookup"><span data-stu-id="efcd3-170">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObj">
      <MemberSignature Language="C#" Value="public static object ModObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member ModObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="efcd3-171">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-171">Required.</span></span> <span data-ttu-id="efcd3-172">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-172">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="efcd3-173">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-173">Required.</span></span> <span data-ttu-id="efcd3-174">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-174">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-175">係数を実行します (<see langword="Mod" />) 操作。</span><span class="sxs-lookup"><span data-stu-id="efcd3-175">Performs a modulus (<see langword="Mod" />) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-176">剰余<paramref name="o1" />で除算<paramref name="o2" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-176">The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-177">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="efcd3-178">Mod 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-178">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MulObj">
      <MemberSignature Language="C#" Value="public static object MulObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MulObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MulObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MulObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member MulObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="efcd3-179">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-179">Required.</span></span> <span data-ttu-id="efcd3-180">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-180">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="efcd3-181">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-181">Required.</span></span> <span data-ttu-id="efcd3-182">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-182">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-183">乗算 (\*) 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-183">Performs a multiplication (\*) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-184"><paramref name="o1" /> と <paramref name="o2" /> の積。</span><span class="sxs-lookup"><span data-stu-id="efcd3-184">The product of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-185">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-185">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="efcd3-186">\* 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-186">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegObj">
      <MemberSignature Language="C#" Value="public static object NegObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NegObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="efcd3-187">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-187">Required.</span></span> <span data-ttu-id="efcd3-188">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-188">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-189">単項マイナス (-) 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-189">Performs a unary minus (-) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-190">負の値<paramref name="obj" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-190">The negative value of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-191">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-191">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="efcd3-192">- 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-192">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObj">
      <MemberSignature Language="C#" Value="public static object NotObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NotObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="efcd3-193">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-193">Required.</span></span> <span data-ttu-id="efcd3-194">すべて<see langword="Boolean" />または数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-194">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-195">実行、<see langword="Not" />操作。</span><span class="sxs-lookup"><span data-stu-id="efcd3-195">Performs a <see langword="Not" /> operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-196"><see langword="Boolean" />操作、<see langword="False" />場合<paramref name="obj" />は<see langword="True" />、それ以外の<see langword="True" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-196">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="obj" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="efcd3-197">ビットごとの演算の場合は、1<paramref name="obj" />は 0。 それ以外の場合、0。</span><span class="sxs-lookup"><span data-stu-id="efcd3-197">For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-198">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="efcd3-199">Not 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-199">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ObjTst">
      <MemberSignature Language="C#" Value="public static int ObjTst (object o1, object o2, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 ObjTst(object o1, object o2, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjTst (o1 As Object, o2 As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ObjTst(System::Object ^ o1, System::Object ^ o2, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ObjTst : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst (o1, o2, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="efcd3-200">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-200">Required.</span></span> <span data-ttu-id="efcd3-201">任意の式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-201">Any expression.</span></span></param>
        <param name="o2"><span data-ttu-id="efcd3-202">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-202">Required.</span></span> <span data-ttu-id="efcd3-203">任意の式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-203">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="efcd3-204">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-204">Required.</span></span> <span data-ttu-id="efcd3-205"><see langword="True" /> 大文字の文字列比較では; を実行するにはそれ以外の場合、<see langword="False" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-205"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="efcd3-206">指定された 2 つのオブジェクトとのバイナリまたはテキスト文字列の比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-206">Performs binary or text string comparison when given two objects.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="efcd3-207">値</span><span class="sxs-lookup"><span data-stu-id="efcd3-207">Value</span></span> 
 </term>
              <description> <span data-ttu-id="efcd3-208">条件</span><span class="sxs-lookup"><span data-stu-id="efcd3-208">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="efcd3-209">-1</span><span class="sxs-lookup"><span data-stu-id="efcd3-209">-1</span></span> 
 </term>
              <description><span data-ttu-id="efcd3-210">
                <paramref name="o1" /> は <paramref name="o2" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-210">
                <paramref name="o1" /> is less than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="efcd3-211">0</span><span class="sxs-lookup"><span data-stu-id="efcd3-211">0</span></span> 
 </term>
              <description><span data-ttu-id="efcd3-212">
                <paramref name="o1" /> と <paramref name="o2" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-212">
                <paramref name="o1" /> is equal to <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="efcd3-213">1</span><span class="sxs-lookup"><span data-stu-id="efcd3-213">1</span></span> 
 </term>
              <description><span data-ttu-id="efcd3-214">
                <paramref name="o1" /> が <paramref name="o2" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="efcd3-214">
                <paramref name="o1" /> is greater than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-215">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-215">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="efcd3-216">比較演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObj">
      <MemberSignature Language="C#" Value="public static object PlusObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member PlusObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="efcd3-217">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-217">Required.</span></span> <span data-ttu-id="efcd3-218">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-218">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-219">単項プラス (+) の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-219">Performs a unary plus (+) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-220"><paramref name="obj" /> の値。</span><span class="sxs-lookup"><span data-stu-id="efcd3-220">The value of <paramref name="obj" />.</span></span> <span data-ttu-id="efcd3-221">(の符号、<paramref name="obj" />は変更されません)。</span><span class="sxs-lookup"><span data-stu-id="efcd3-221">(The sign of the <paramref name="obj" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-222">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-222">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="efcd3-223">+ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-223">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PowObj">
      <MemberSignature Language="C#" Value="public static object PowObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PowObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PowObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member PowObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="efcd3-224">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-224">Required.</span></span> <span data-ttu-id="efcd3-225">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-225">Any numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="efcd3-226">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-226">Required.</span></span> <span data-ttu-id="efcd3-227">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-227">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-228">指数 (^) 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-228">Performs an exponent (^) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-229">結果<paramref name="obj1" />の累乗<paramref name="obj2" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-229">The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-230">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-230">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="efcd3-231">^ 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-231">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftObj">
      <MemberSignature Language="C#" Value="public static object ShiftLeftObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftLeftObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftLeftObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftLeftObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="efcd3-232">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-232">Required.</span></span> <span data-ttu-id="efcd3-233">整数の数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-233">Integral numeric expression.</span></span> <span data-ttu-id="efcd3-234">シフトするビット パターンです。</span><span class="sxs-lookup"><span data-stu-id="efcd3-234">The bit pattern to be shifted.</span></span> <span data-ttu-id="efcd3-235">データ型は整数型である必要があります (<see langword="SByte" />、 <see langword="Byte" />、 <see langword="Short" />、 <see langword="UShort" />、 <see langword="Integer" />、 <see langword="UInteger" />、 <see langword="Long" />、または<see langword="ULong" />)。</span><span class="sxs-lookup"><span data-stu-id="efcd3-235">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="efcd3-236">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-236">Required.</span></span> <span data-ttu-id="efcd3-237">数値式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-237">Numeric expression.</span></span> <span data-ttu-id="efcd3-238">ビット パターンをシフトするビット数。</span><span class="sxs-lookup"><span data-stu-id="efcd3-238">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="efcd3-239">データ型である必要があります<see langword="Integer" />に拡大変換または<see langword="Integer" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-239">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="efcd3-240">算術左シフト (&lt;&lt;) 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-240">Performs an arithmetic left shift (&lt;&lt;) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-241">整数値。</span><span class="sxs-lookup"><span data-stu-id="efcd3-241">An integral numeric value.</span></span> <span data-ttu-id="efcd3-242">ビット パターンのシフトの結果。</span><span class="sxs-lookup"><span data-stu-id="efcd3-242">The result of shifting the bit pattern.</span></span> <span data-ttu-id="efcd3-243">データ型がの場合と同じ<paramref name="o1" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-243">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-244">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-244">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="efcd3-245">&lt;&lt; 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-245">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ShiftRightObj">
      <MemberSignature Language="C#" Value="public static object ShiftRightObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftRightObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftRightObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftRightObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="efcd3-246">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-246">Required.</span></span> <span data-ttu-id="efcd3-247">整数の数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-247">Integral numeric expression.</span></span> <span data-ttu-id="efcd3-248">シフトするビット パターンです。</span><span class="sxs-lookup"><span data-stu-id="efcd3-248">The bit pattern to be shifted.</span></span> <span data-ttu-id="efcd3-249">データ型は整数型である必要があります (<see langword="SByte" />、 <see langword="Byte" />、 <see langword="Short" />、 <see langword="UShort" />、 <see langword="Integer" />、 <see langword="UInteger" />、 <see langword="Long" />、または<see langword="ULong" />)。</span><span class="sxs-lookup"><span data-stu-id="efcd3-249">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="efcd3-250">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-250">Required.</span></span> <span data-ttu-id="efcd3-251">数値式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-251">Numeric expression.</span></span> <span data-ttu-id="efcd3-252">ビット パターンをシフトするビット数。</span><span class="sxs-lookup"><span data-stu-id="efcd3-252">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="efcd3-253">データ型である必要があります<see langword="Integer" />に拡大変換または<see langword="Integer" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-253">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="efcd3-254">算術右シフト (&gt;&gt;) 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-254">Performs an arithmetic right shift (&gt;&gt;) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-255">整数値。</span><span class="sxs-lookup"><span data-stu-id="efcd3-255">An integral numeric value.</span></span> <span data-ttu-id="efcd3-256">ビット パターンのシフトの結果。</span><span class="sxs-lookup"><span data-stu-id="efcd3-256">The result of shifting the bit pattern.</span></span> <span data-ttu-id="efcd3-257">データ型がの場合と同じ<paramref name="o1" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-257">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-258">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="efcd3-259">&gt;&gt; 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-259">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="StrCatObj">
      <MemberSignature Language="C#" Value="public static object StrCatObj (object vLeft, object vRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrCatObj(object vLeft, object vRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCatObj (vLeft As Object, vRight As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrCatObj(System::Object ^ vLeft, System::Object ^ vRight);" />
      <MemberSignature Language="F#" Value="static member StrCatObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj (vLeft, vRight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="efcd3-260">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-260">Required.</span></span> <span data-ttu-id="efcd3-261">任意の式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-261">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="efcd3-262">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-262">Required.</span></span> <span data-ttu-id="efcd3-263">任意の式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-263">Any expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-264">文字列の連結 (&amp;) 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-264">Performs a string concatenation (&amp;) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-265">文字列の連結を表す<paramref name="vLeft" />と<paramref name="vRight" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-265">A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-266">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-266">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="efcd3-267">&amp; 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-267">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubObj">
      <MemberSignature Language="C#" Value="public static object SubObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member SubObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="efcd3-268">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-268">Required.</span></span> <span data-ttu-id="efcd3-269">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-269">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="efcd3-270">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-270">Required.</span></span> <span data-ttu-id="efcd3-271">任意の数式。</span><span class="sxs-lookup"><span data-stu-id="efcd3-271">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-272">減算 (-) 演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-272">Performs a subtraction (-) operation.</span></span></summary>
        <returns><span data-ttu-id="efcd3-273">間の差<paramref name="o1" />と<paramref name="o2" />します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-273">The difference between <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-274">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-274">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="efcd3-275">- 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-275">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObj">
      <MemberSignature Language="C#" Value="public static object XorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member XorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="efcd3-276">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-276">Required.</span></span> <span data-ttu-id="efcd3-277">すべて<see langword="Boolean" />または数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-277">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="efcd3-278">必須。</span><span class="sxs-lookup"><span data-stu-id="efcd3-278">Required.</span></span> <span data-ttu-id="efcd3-279">すべて<see langword="Boolean" />または数値式です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-279">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="efcd3-280">実行、<see langword="Xor" />比較します。</span><span class="sxs-lookup"><span data-stu-id="efcd3-280">Performs an <see langword="Xor" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="efcd3-281">A<see langword="Boolean" />値または数値です。</span><span class="sxs-lookup"><span data-stu-id="efcd3-281">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="efcd3-282"><see langword="Boolean" />比較、戻り値では、2 つの論理和 (排他的論理和)<see langword="Boolean" />値。</span><span class="sxs-lookup"><span data-stu-id="efcd3-282">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="efcd3-283">演算 (数値)、戻り値は、ビットごと (排他的論理和) の 2 つの数値ビット パターンを表す数値。</span><span class="sxs-lookup"><span data-stu-id="efcd3-283">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="efcd3-284">詳細については、「<see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor 演算子</see>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="efcd3-284">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="efcd3-285">このクラスは、Visual Basic コンパイラをサポートしているし、コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="efcd3-285">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="efcd3-286">Xor 演算子 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="efcd3-286">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>