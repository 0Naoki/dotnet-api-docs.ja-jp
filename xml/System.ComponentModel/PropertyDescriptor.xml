<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PropertyDescriptor.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e059b64b5fedee627a7dad23bafc67c4252df0d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e059b64b5fedee627a7dad23bafc67c4252df0d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Provides an abstraction of a property on a class.</source>
          <target state="translated">クラスのプロパティの抽象化を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</source>
          <target state="translated">プロパティの説明は、名前、その属性、プロパティが関連付けられているコンポーネントのクラスおよびプロパティの型で構成されます。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> provides the following properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> 次のプロパティとメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;</ph> contains the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> for this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.Converter%2A&gt;</ph> 含まれています、<ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>このプロパティにします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;</ph> indicates whether this property should be localized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A&gt;</ph> このプロパティをローカライズする必要があるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;</ph> returns an editor of the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A&gt;</ph> 指定した型のエディターを返します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> also provides the following <ph id="ph2">`abstract`</ph> properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> また、次を提供<ph id="ph2">`abstract`</ph>プロパティとメソッド。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;</ph> contains the type of component this property is bound to.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A&gt;</ph> このプロパティにバインドされているコンポーネントの型が含まれています。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;</ph> indicates whether this property is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A&gt;</ph> このプロパティは読み取り専用であるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> gets the type of the property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A&gt;</ph> プロパティの型を取得します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;</ph> indicates whether resetting the component changes the value of the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A&gt;</ph> コンポーネントをリセットすると、コンポーネントの値で変更するかどうかを示します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</ph> returns the current value of the property on a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetValue%2A&gt;</ph> コンポーネントのプロパティの現在の値を返します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;</ph> resets the value for this property of the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A&gt;</ph> このコンポーネントのプロパティの値にリセットします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> sets the value of the component to a different value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> 別の値をコンポーネントの値を設定します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;</ph> indicates whether the value of this property needs to be persisted.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A&gt;</ph> このプロパティの値が永続化する必要があるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Typically, the <ph id="ph1">`abstract`</ph> members are implemented through reflection.</source>
          <target state="translated">通常、<ph id="ph1">`abstract`</ph>メンバーは、リフレクションを介して実装されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">リフレクションに関する詳細については、トピックを参照してください。<bpt id="p1">[</bpt>リフレクション<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code example is built upon the example in the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> class.</source>
          <target state="translated">次のコード例が例では、に基づいて構築されており、<ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>It prints the information (category, description, display name) of the text of a button in a text box.</source>
          <target state="translated">テキスト ボックスにボタンのテキストの情報 (カテゴリ、説明、表示名) を出力します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>It assumes that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textbox1`</ph> have been instantiated on a form.</source>
          <target state="translated">いるものと<ph id="ph1">`button1`</ph>と<ph id="ph2">`textbox1`</ph>フォームでインスタンス化されています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</source>
          <target state="translated">次のコード例では、プロパティをラップする読み取り専用のラッパーを提供するカスタム プロパティ記述子を実装する方法を示します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> is used in a custom designer to provide a read-only property descriptor for the control's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph>カスタム デザイナーでのコントロールの読み取り専用のプロパティ記述子を提供するために使用<ph id="ph2">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>The following code examples show how to use the <ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph> in a custom designer.</source>
          <target state="translated">次のコード例を使用する方法を示して、<ph id="ph1">`SerializeReadOnlyPropertyDescriptor`</ph>カスタム デザイナーです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that contains the name of the property and its attributes.</source>
          <target state="translated">プロパティの名前と属性を格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the name and attributes in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> 内の名前と属性を使用して、<ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> containing the name of the member and its attributes.</source>
          <target state="translated">メンバーの名前とその属性を格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array containing the attributes you want to associate with the property.</source>
          <target state="translated">プロパティに関連付ける属性を格納している <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the name in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the attributes in both the <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> array.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> 内の名前と、<ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> および <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> 配列の両方に格納されている属性を使用して、<ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>This constructor appends the attributes in the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> array to the attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</source>
          <target state="translated">このコンス トラクター内の属性を追加する、<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>配列内の属性を<ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>The name of the property.</source>
          <target state="translated">プロパティの名前。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that contains the property attributes.</source>
          <target state="translated">プロパティの属性を格納している <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> class with the specified name and attributes.</source>
          <target state="translated">名前と属性を指定して、<ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The component to add the handler for.</source>
          <target state="translated">ハンドラーを追加する対象のコンポーネント。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to add as a listener.</source>
          <target state="translated">リスナーとして追加されるデリゲート。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">プロパティが変更されたときに、ほかのオブジェクトに通知できるようにします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> または <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>The component to test for reset capability.</source>
          <target state="translated">リセット機能について調べる対象のコンポーネント。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>When overridden in a derived class, returns whether resetting an object changes its value.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、オブジェクトをリセットしたときに、そのオブジェクトの値が変化するかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if resetting the component changes its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コンポーネントをリセットするとコンポーネントの値が変化する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>When overridden in a derived class, this method looks for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、このメソッドを検索、<ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If it finds one, it compares the value of the attribute with the property's current value.</source>
          <target state="translated">1 つが見つかると、プロパティの現在の値の属性の値を比較します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>It returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> when the default value does not match the property's current value.</source>
          <target state="translated">返します<ph id="ph1">&lt;see langword="true" /&gt;</ph>既定値では、プロパティの現在の値に一致しない場合。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself.</source>
          <target state="translated">このメソッドを見つけられない場合、 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>、自分で実装する必要のある"ShouldPersistMyProperty"メソッドを検索します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> returns what "ShouldPersistMyProperty" returns.</source>
          <target state="translated">これが見つかった場合、 <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> "ShouldPersistMyProperty"が返されますを返します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself.</source>
          <target state="translated">それ以外の場合、自分で実装する必要のある"ResetMyProperty"メソッドを検索します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If this is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph> returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">これが見つかった場合、<ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /&gt;</ph>返します<ph id="ph2">&lt;see langword="true" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
          <source>If it cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">見つからない場合、 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>、その"ShouldPersistMyProperty"メソッドの場合、または"ResetMyProperty"メソッドを返します<ph id="ph2">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>When overridden in a derived class, gets the type of the component this property is bound to.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、プロパティが関連付けられているコンポーネントの型を取得します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component this property is bound to.</source>
          <target state="translated">プロパティが関連付けられているコンポーネントの型を表す <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>When the <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> methods are invoked, the object specified might be an instance of this type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> メソッドまたは <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> メソッドが呼び出される場合、指定されたオブジェクトはこの型のインスタンスである可能性があります。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.ComponentType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">通常、このプロパティは、リフレクションを介して実装されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.Converter">
          <source>Gets the type converter for this property.</source>
          <target state="translated">プロパティの型コンバーターを取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.Converter">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> that is used to convert the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> of this property.</source>
          <target state="translated">プロパティの <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> を変換するために使用する <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type to create.</source>
          <target state="translated">作成する型を表す <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Creates an instance of the specified type.</source>
          <target state="translated">指定した型のインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>A new instance of the type.</source>
          <target state="translated">指定した型の新しいインスタンス。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A&gt;</ph> looks for a constructor that takes the specified type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A&gt;</ph> 指定された型を受け取るコンス トラクターを検索します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>If it finds a constructor, the type of the property is passed in.</source>
          <target state="translated">コンス トラクターが見つかると、プロパティの型に渡されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Converters and editors use this method to create versions of a component.</source>
          <target state="translated">コンバーターとエディターは、このメソッドを使用して、コンポーネントのバージョンを作成します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>This method enables a single component to be reused for more than one type.</source>
          <target state="translated">このメソッドは、1 つのコンポーネントを 1 つ以上の型の再利用できます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>for access to private class members and metadata.</source>
          <target state="translated">プライベート クラス メンバーは、メタデータにアクセスします。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">関連する列挙。 <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source>The object to compare to this <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> と比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source>Compares this to another object to see if they are equivalent.</source>
          <target state="translated">プロパティ記述子を別のオブジェクトと比較して、等しいかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the values are equivalent; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">両方の値が等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> that lists the attributes in the parent class.</source>
          <target state="translated">親クラスの属性を格納している <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>Initially, this is empty.</source>
          <target state="translated">初期状態では、このリストは空です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>Adds the attributes of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> to the specified list of attributes in the parent class.</source>
          <target state="translated">指定した親クラスの属性リストに <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> の属性を追加します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)">
          <source>For duplicate attributes, the last one added to the list will be kept.</source>
          <target state="translated">重複する属性を一覧に追加された最後の 1 つは保持します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.PropertyDescriptor">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>Returns the default <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>.</source>
          <target state="translated">既定の <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>A collection of property descriptor.</source>
          <target state="translated">プロパティ記述子のコレクション。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>This method passes <ph id="ph1">`null`</ph> for both the <ph id="ph2">`instance`</ph> parameter and the <ph id="ph3">`filter`</ph> parameter.</source>
          <target state="translated">このメソッドは成功<ph id="ph1">`null`</ph>両方に対して、<ph id="ph2">`instance`</ph>パラメーターおよび<ph id="ph3">`filter`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the container can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">プロパティ、<ph id="ph1">`instance`</ph>パラメーターとは異なる、クラスのプロパティ、コンテナーは追加したり、場合に、プロパティを削除するため、<ph id="ph2">`instance`</ph>パラメーターが配置されています。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph>パラメーターを混在させること<ph id="ph2">&lt;xref:System.Type&gt;</ph>と<ph id="ph3">&lt;xref:System.Attribute&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">フィルター処理は、次のルールによって定義されます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Type&gt;</ph>オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、<ph id="ph2">&lt;xref:System.Type&gt;</ph>属性のセットにします。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">プロパティがない場合、<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>同じクラスのプロパティは含まれません、返された配列。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">属性がのインスタンスの場合<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>プロパティは、返された配列に含まれると、完全に一致する必要があります。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> and it is the default property, it will be included in the returned array, even if there is no instance of <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">指定した場合、<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>と既定のプロパティに含められます、返された配列のインスタンスがない場合でも<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>プロパティにします。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">フィルターとして使用される、<ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> using a specified array of attributes as a filter.</source>
          <target state="translated">指定した属性配列をフィルターとして使用して、<ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes.</source>
          <target state="translated">指定した属性に一致するプロパティを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`instance`</ph> parameter.</source>
          <target state="translated">このメソッドは渡します<ph id="ph1">`null`</ph>の<ph id="ph2">`instance`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">プロパティを<ph id="ph1">`instance`</ph>パラメーターが、サイトは追加したり、場合に、プロパティを削除するため、クラスのプロパティと異なる場合が、<ph id="ph2">`instance`</ph>パラメーターが配置されています。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph>パラメーターを混在させること<ph id="ph2">&lt;xref:System.Type&gt;</ph>と<ph id="ph3">&lt;xref:System.Attribute&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">フィルター処理は、次のルールによって定義されます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Type&gt;</ph>オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、<ph id="ph2">&lt;xref:System.Type&gt;</ph>属性のセットにします。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">プロパティがない場合、<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>同じクラスのプロパティは含まれません、返された配列。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">属性がのインスタンスの場合<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>プロパティは、返された配列に含まれると、完全に一致する必要があります。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">指定した場合、<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>インスタンスと、既定のプロパティはのインスタンスがない場合でもには、返される配列に含められますが、<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>プロパティにします。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A component to get the properties for.</source>
          <target state="translated">プロパティを取得する対象のコンポーネント。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> for a given object.</source>
          <target state="translated">指定したオブジェクトの <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties for the specified component.</source>
          <target state="translated">指定したコンポーネントのプロパティを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>This method passes <ph id="ph1">`null`</ph> for the <ph id="ph2">`filter`</ph> parameter.</source>
          <target state="translated">このメソッドは渡します<ph id="ph1">`null`</ph>の<ph id="ph2">`filter`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">プロパティを<ph id="ph1">`instance`</ph>パラメーターが、サイトは追加したり、場合に、プロパティを削除するため、クラスのプロパティと異なる場合が、<ph id="ph2">`instance`</ph>パラメーターが配置されています。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph>パラメーターを混在させること<ph id="ph2">&lt;xref:System.Type&gt;</ph>と<ph id="ph3">&lt;xref:System.Attribute&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">フィルター処理は、次のルールによって定義されます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Type&gt;</ph>オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、<ph id="ph2">&lt;xref:System.Type&gt;</ph>属性のセットにします。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">プロパティがない場合、<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>同じクラスのプロパティは含まれません、返された配列。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">属性がのインスタンスの場合<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>プロパティは、返された配列に含まれると、完全に一致する必要があります。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">指定した場合、<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>インスタンスと、既定のプロパティはのインスタンスがない場合でもには、返される配列に含められますが、<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>プロパティにします。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A component to get the properties for.</source>
          <target state="translated">プロパティを取得する対象のコンポーネント。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> to use as a filter.</source>
          <target state="translated">フィルターとして使用される、<ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> for a given object using a specified array of attributes as a filter.</source>
          <target state="translated">指定した属性配列をフィルターとして使用して、指定したオブジェクトの <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph> with the properties that match the specified attributes for the specified component.</source>
          <target state="translated">指定したコンポーネントのプロパティのうち、指定した属性に一致するプロパティを格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptorCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>The properties for the <ph id="ph1">`instance`</ph> parameter can differ from the properties of a class, because the site can add or remove properties if the <ph id="ph2">`instance`</ph> parameter is sited.</source>
          <target state="translated">プロパティを<ph id="ph1">`instance`</ph>パラメーターが、サイトは追加したり、場合に、プロパティを削除するため、クラスのプロパティと異なる場合が、<ph id="ph2">`instance`</ph>パラメーターが配置されています。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>The <ph id="ph1">`filter`</ph> parameter can mix <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">`filter`</ph>パラメーターを混在させること<ph id="ph2">&lt;xref:System.Type&gt;</ph>と<ph id="ph3">&lt;xref:System.Attribute&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Filtering is defined by the following rules:</source>
          <target state="translated">フィルター処理は、次のルールによって定義されます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object is treated as a wildcard; it matches any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Type&gt;</ph>オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、<ph id="ph2">&lt;xref:System.Type&gt;</ph>属性のセットにします。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
          <target state="translated">プロパティがない場合、<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>同じクラスのプロパティは含まれません、返された配列。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match to be included in the returned array.</source>
          <target state="translated">属性がのインスタンスの場合<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>プロパティは、返された配列に含まれると、完全に一致する必要があります。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>If you specify an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
          <target state="translated">指定した場合、<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>インスタンスと、既定のプロパティはのインスタンスがない場合でもには、返される配列に含められますが、<ph id="ph2">&lt;xref:System.Attribute&gt;</ph>プロパティにします。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
          <source>Generally, child properties should be returned by implementing the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph> member of the <ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> returned from this property.</source>
          <target state="translated">子のプロパティを実装することによって返される一般的に、<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetProperties%2A&gt;</ph>のメンバー、<ph id="ph2">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>このプロパティからが返されます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>The base type of editor, which is used to differentiate between multiple editors that a property supports.</source>
          <target state="translated">プロパティがサポートしている複数のエディターを区別するために使用される、エディターの基本型。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>Gets an editor of the specified type.</source>
          <target state="translated">指定した型のエディターを取得します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
          <source>An instance of the requested editor type, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if an editor cannot be found.</source>
          <target state="translated">要求したエディター型のインスタンス。エディターが見つからない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
          <source>Returns the hash code for this object.</source>
          <target state="translated">このオブジェクトのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetHashCode">
          <source>The hash code for this object.</source>
          <target state="translated">このオブジェクトのハッシュ コード。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the invocation target.</source>
          <target state="translated">呼び出し対象の <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The potential invocation target.</source>
          <target state="translated">呼び出し対象になる可能性があるインスタンス。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>This method returns the object that should be used during invocation of members.</source>
          <target state="translated">このメソッドでは、メンバーの呼び出し中に使用するオブジェクトが返されます。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that should be used during invocation of members.</source>
          <target state="translated">メンバーの呼び出し中に使用する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>Typically, the return value will be the same as the <ph id="ph1">`instance`</ph> passed in.</source>
          <target state="translated">通常、戻り値は、同じにする、<ph id="ph1">`instance`</ph>で渡されます。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)">
          <source>If someone associated another object with this instance, or if the instance is a custom type descriptor, the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A&gt;</ph> method may return a different value.</source>
          <target state="translated">別のオブジェクトをこのインスタンスに関連付けられた他のユーザー インスタンスが、カスタム型記述子である場合や、<ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A&gt;</ph>メソッドは、別の値を返す可能性があります。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>The assembly-qualified name of the type to retrieve.</source>
          <target state="translated">取得する型のアセンブリ修飾名。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>Returns a type using its name.</source>
          <target state="translated">型名を使用して型を返します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that matches the given type name, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if a match cannot be found.</source>
          <target state="translated">指定した型名と一致する <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。一致する型が見つからない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>To find the appropriate type, this method first checks the assembly of the type that this <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> references.</source>
          <target state="translated">適切な型を検索するには、このメソッドはまず、アセンブリ、型のこの<ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)">
          <source>If it does not find the type in the assembly, it calls <ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">呼び出しが見つからない場合、型アセンブリ内、<ph id="ph1">&lt;xref:System.Type.GetType%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>The component with the property for which to retrieve the value.</source>
          <target state="translated">値の取得対象であるプロパティを持つコンポーネント。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>When overridden in a derived class, gets the current value of the property on a component.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、コンポーネントのプロパティの現在の値を取得します。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>The value of a property for a given component.</source>
          <target state="translated">指定したコンポーネントのプロパティの値。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>This method automatically calls the pre-change method, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph>, and post-change method, <ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>, of the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>.</source>
          <target state="translated">このメソッドに自動的には、前の変更、 <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A&gt;</ph>、変更適用後のメソッド、および<ph id="ph2">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.ComponentModel.Design.IComponentChangeService&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、実装する必要があります"GetMyProperty"メソッドを呼び出すことによって、プロパティの現在の値を取得します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
          <source>An exception in that method should pass through.</source>
          <target state="translated">そのメソッドで例外が通過する必要があります。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>The component for which to retrieve event handlers.</source>
          <target state="translated">イベント ハンドラーの取得対象のコンポーネント。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>Retrieves the current set of <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> event handlers for a specific component</source>
          <target state="translated">特定のコンポーネントについて現在の <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> イベント ハンドラー セットを取得します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)">
          <source>A combined multicast event handler, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no event handlers are currently assigned to <ph id="ph2">&lt;paramref name="component" /&gt;</ph>.</source>
          <target state="translated">結合されたマルチキャスト イベント ハンドラー。現在イベント ハンドラーが <ph id="ph2">&lt;paramref name="component" /&gt;</ph> に関連付けられていない場合は、<ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>Gets a value indicating whether this property should be localized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph>.</source>
          <target state="translated">プロパティをローカライズする必要があるかどうかを示す、<ph id="ph1">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> で指定されている値を取得します。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the member is marked with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> set to <ph id="ph3">&lt;see langword="true" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">メンバーの <ph id="ph2">&lt;see cref="T:System.ComponentModel.LocalizableAttribute" /&gt;</ph> が <ph id="ph1">&lt;see langword="true" /&gt;</ph> に設定されている場合は <ph id="ph3">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>When a property is marked with the <ph id="ph1">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> set to <ph id="ph2">`true`</ph> and used in a visual designer, its values are saved in a resource file.</source>
          <target state="translated">プロパティにマークされている場合、 <ph id="ph1">&lt;xref:System.ComponentModel.LocalizableAttribute&gt;</ph> 'éý'<ph id="ph2">`true`</ph>とその値は、ビジュアル デザイナーで使用されているリソース ファイルに保存されます。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsLocalizable">
          <source>If you mark a property with the attribute and then set the property in code, resource files are not used.</source>
          <target state="translated">属性でプロパティをマークし、コードでプロパティを設定すると、リソース ファイルは使用されません。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
          <source>When overridden in a derived class, gets a value indicating whether this property is read-only.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、プロパティが読み取り専用かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is read-only; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プロパティが読み取り専用の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>The object that raises the event.</source>
          <target state="translated">イベントを発生させるオブジェクト。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>Raises the <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> event that you implemented.</source>
          <target state="translated">実装した <bpt id="p1">&lt;c&gt;</bpt>ValueChanged<ept id="p1">&lt;/c&gt;</ept> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
          <source>This method should be called by your property descriptor implementation when the property value has changed.</source>
          <target state="translated">このメソッドは、プロパティの値が変更されたときに、プロパティ記述子の実装によって呼び出す必要があります。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>When overridden in a derived class, gets the type of the property.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、プロパティの型を取得します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the property.</source>
          <target state="translated">プロパティの型を表す <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.PropertyType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">通常、このプロパティは、リフレクションを介して実装されます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The component to remove the handler for.</source>
          <target state="translated">ハンドラーを削除する対象のコンポーネント。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>The delegate to remove as a listener.</source>
          <target state="translated">リスナーとして削除されるデリゲート。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source>Enables other objects to be notified when this property changes.</source>
          <target state="translated">プロパティが変更されたときに、ほかのオブジェクトに通知できるようにします。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> or <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> または <ph id="ph2">&lt;paramref name="handler" /&gt;</ph> が <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The component with the property value that is to be reset to the default value.</source>
          <target state="translated">既定値にリセットする対象のプロパティ値を持つコンポーネント。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>When overridden in a derived class, resets the value for this property of the component to the default value.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、コンポーネントのプロパティの値を既定値にリセットします。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>This method determines the value to reset the property to in the following order of precedence:</source>
          <target state="translated">このメソッドは、次の優先順位にするプロパティをリセットする値を決定します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a shadowed property for this property.</source>
          <target state="translated">このプロパティの影付きのプロパティがあります。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> for this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph>このプロパティにします。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</source>
          <target state="translated">渡すプロパティの名前を"MyProperty"がここでは、実装している"ResetMyProperty"メソッドがあります。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automatically in the following order:</source>
          <target state="translated">このメソッドを作成、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>次の順序で自動的に。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> to represent the changes.</source>
          <target state="translated">メソッドの呼び出し、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph>メソッドを作成、新しい<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>を変更を表します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">このメソッドの呼び出し、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph>メソッドをトランザクションが開始され、変更が発生することを示します。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">メソッドは、このメソッドのチェックの順序によって決定される値にプロパティをリセットします。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the changes have occurred.</source>
          <target state="translated">このメソッドの呼び出し、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph>メソッドを変更が発生したことを示します。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The method calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> to indicate that the transaction is completed.</source>
          <target state="translated">このメソッドの呼び出し<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph>をトランザクションが完了したことを示します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">トランザクションの目的は、サポートする<ph id="ph1">`Undo`</ph>と<ph id="ph2">`Redo`</ph>機能します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>When overridden in a derived class, this method looks for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">派生クラスでオーバーライドされると、このメソッドを検索、<ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If it finds one, it sets the value of the property to the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> it found.</source>
          <target state="translated">プロパティの値が設定、見つかった場合、<ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>見つかったことです。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ResetMyProperty" method that you need to implement.</source>
          <target state="translated">このメソッドを見つけられない場合、 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>、"ResetMyProperty"メソッドを実装する必要がありますを検索します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If this is found, the <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> method invokes it.</source>
          <target state="translated">これが見つかった場合、<ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph>これメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
          <source>If <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph> cannot find a <ph id="ph2">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</source>
          <target state="translated">場合<ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /&gt;</ph>見つけることができません、<ph id="ph2">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>または"ResetMyProperty"メソッドを実装している操作は実行されません。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
          <source>Gets a value indicating whether this property should be serialized, as specified in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /&gt;</ph>.</source>
          <target state="translated">プロパティをシリアル化する必要があるかどうかを示す、<ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /&gt;</ph> で指定されている値を取得します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> enumeration values that specifies whether this property should be serialized.</source>
          <target state="translated">プロパティをシリアル化する必要があるかどうかを指定する <ph id="ph1">&lt;see cref="T:System.ComponentModel.DesignerSerializationVisibility" /&gt;</ph> 列挙値の 1 つ。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The component with the property value that is to be set.</source>
          <target state="translated">設定する対象のプロパティ値を持つコンポーネント。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The new value.</source>
          <target state="translated">新しい値。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>When overridden in a derived class, sets the value of the component to a different value.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、コンポーネントの値を別の値に設定します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>This method creates a <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> automatically in the following order:</source>
          <target state="translated">このメソッドを作成、<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>次の順序で自動的に。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph> method to create a new <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph> to represent the changes.</source>
          <target state="translated">メソッドの呼び出し、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType&gt;</ph>メソッドを作成、新しい<ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerTransaction&gt;</ph>を変更を表します。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the transaction has begun and the changes are about to occur.</source>
          <target state="translated">このメソッドの呼び出し、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType&gt;</ph>メソッドをトランザクションが開始され、変更が発生することを示します。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method resets the property to the value determined by this method's checking order.</source>
          <target state="translated">メソッドは、このメソッドのチェックの順序によって決定される値にプロパティをリセットします。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph> method to indicate that the changes have occurred.</source>
          <target state="translated">このメソッドの呼び出し、<ph id="ph1">&lt;xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType&gt;</ph>メソッドを変更が発生したことを示します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The method calls <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph> to indicate that the transaction is complete.</source>
          <target state="translated">このメソッドの呼び出し<ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType&gt;</ph>をトランザクションが完了したことを示します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>The purpose of the transaction is to support <ph id="ph1">`Undo`</ph> and <ph id="ph2">`Redo`</ph> functionality.</source>
          <target state="translated">トランザクションの目的は、サポートする<ph id="ph1">`Undo`</ph>と<ph id="ph2">`Redo`</ph>機能します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement.</source>
          <target state="translated">このメソッドをオーバーライドする場合を実装する必要があります。 適切な"SetMyProperty"メソッドを呼び出すことによって、プロパティの値を設定にする必要があります。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>If the value specified is not valid, the component should throw an exception, which is passed up.</source>
          <target state="translated">指定された値が有効でない場合、コンポーネントを渡すことが例外をスローする必要があります。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)">
          <source>You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</source>
          <target state="translated">(次のように実装して) いる"SetMyProperty"メソッド"GetMyProperty"メソッド"SetMyProperty"メソッドが例外をスローしていないときに渡された値が返しますされるように、プロパティをデザインする必要があります。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The component with the property to be examined for persistence.</source>
          <target state="translated">永続性について調べる対象のプロパティを持つコンポーネント。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、プロパティの値を永続化する必要があるかどうかを示す値を決定します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property should be persisted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">プロパティを永続化する必要がある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>When overridden in a derived class, this method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current value of the property is different from its default value.</source>
          <target state="translated">派生クラスでオーバーライドされると、このメソッドが戻る<ph id="ph1">&lt;see langword="true" /&gt;</ph>プロパティの現在の値が既定値と異なる場合。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>It looks for a default value by first looking for a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>.</source>
          <target state="translated">既定値の場合、まずは検索、<ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If the method finds this attribute, it compares the value of the attribute with the property's current value.</source>
          <target state="translated">メソッドには、この属性が検出されると、プロパティの現在の値の属性の値を比較します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>, it looks for a "ShouldSerializeMyProperty" method that you need to implement.</source>
          <target state="translated">このメソッドを見つけられない場合、 <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>、"ShouldSerializeMyProperty"メソッドを実装する必要がありますを検索します。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If it is found, <ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /&gt;</ph> invokes it.</source>
          <target state="translated">見つかった場合は、<ph id="ph1">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /&gt;</ph>これを呼び出します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>If this method cannot find a <ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <ph id="ph2">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">このメソッドを見つけられない場合、<ph id="ph1">&lt;see cref="T:System.ComponentModel.DefaultValueAttribute" /&gt;</ph>や"ShouldSerializeMyProperty"メソッドの最適化を作成できないことを返します<ph id="ph2">&lt;see langword="true" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph> class implements special serialization logic for inherited components.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph>クラスは継承されたコンポーネントの特別なシリアル化ロジックを実装します。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
          <source>For more information, see <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.ComponentDesigner" /&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</source>
          <target state="translated">このプロパティの値変更通知をプロパティ記述子以外から発生させてよいかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if value change notifications may originate from outside the property descriptor; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">値変更通知をプロパティ記述子以外から発生させてよい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は、<ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A&gt;</ph> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A&gt;</ph>プロパティは、このプロパティの値の変更通知可能性があります以外から発生させてプロパティ記述子など、コンポーネント自体、またはに加えられたかどうか通知は、直接の呼び出しから発信されますのみかどうかを示します、<ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor.SetValue%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents">
          <source>For example, the component may implement the <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface, or may have an explicit <ph id="ph2">`name.Changed`</ph> event for this property.</source>
          <target state="translated">たとえば、コンポーネントが実装することが、<ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>インターフェイス、または明示的な場合があります<ph id="ph2">`name.Changed`</ph>このプロパティのイベントです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>