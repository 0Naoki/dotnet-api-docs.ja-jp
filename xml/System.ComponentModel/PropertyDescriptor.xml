<Type Name="PropertyDescriptor" FullName="System.ComponentModel.PropertyDescriptor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e059b64b5fedee627a7dad23bafc67c4252df0d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30381226" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PropertyDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6ff05-101">クラスのプロパティの抽象化を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6ff05-101">Provides an abstraction of a property on a class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-102">プロパティの説明は、名前、その属性、プロパティが関連付けられているコンポーネントのクラスおよびプロパティの型で構成されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-102">A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</span></span>  
  
 <span data-ttu-id="6ff05-103"><xref:System.ComponentModel.PropertyDescriptor> 次のプロパティとメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-103"><xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:</span></span>  
  
-   <span data-ttu-id="6ff05-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> 含まれています、<xref:System.ComponentModel.TypeConverter>このプロパティにします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property.</span></span>  
  
-   <span data-ttu-id="6ff05-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> このプロパティをローカライズする必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized.</span></span>  
  
-   <span data-ttu-id="6ff05-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> 指定した型のエディターを返します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type.</span></span>  
  
 <span data-ttu-id="6ff05-107"><xref:System.ComponentModel.PropertyDescriptor> また、次を提供`abstract`プロパティとメソッド。</span><span class="sxs-lookup"><span data-stu-id="6ff05-107"><xref:System.ComponentModel.PropertyDescriptor> also provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="6ff05-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> このプロパティにバインドされているコンポーネントの型が含まれています。</span><span class="sxs-lookup"><span data-stu-id="6ff05-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to.</span></span>  
  
-   <span data-ttu-id="6ff05-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> このプロパティは読み取り専用であるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only.</span></span>  
  
-   <span data-ttu-id="6ff05-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> プロパティの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property.</span></span>  
  
-   <span data-ttu-id="6ff05-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> コンポーネントをリセットすると、コンポーネントの値で変更するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component.</span></span>  
  
-   <span data-ttu-id="6ff05-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> コンポーネントのプロパティの現在の値を返します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component.</span></span>  
  
-   <span data-ttu-id="6ff05-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> このコンポーネントのプロパティの値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component.</span></span>  
  
-   <span data-ttu-id="6ff05-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> 別の値をコンポーネントの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value.</span></span>  
  
-   <span data-ttu-id="6ff05-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> このプロパティの値が永続化する必要があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted.</span></span>  
  
 <span data-ttu-id="6ff05-116">通常、`abstract`メンバーは、リフレクションを介して実装されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-116">Typically, the `abstract` members are implemented through reflection.</span></span> <span data-ttu-id="6ff05-117">リフレクションに関する詳細については、トピックを参照してください。[リフレクション](~/docs/framework/reflection-and-codedom/reflection.md)です。</span><span class="sxs-lookup"><span data-stu-id="6ff05-117">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ff05-118">次のコード例が例では、に基づいて構築されており、<xref:System.ComponentModel.PropertyDescriptorCollection>クラスです。</span><span class="sxs-lookup"><span data-stu-id="6ff05-118">The following code example is built upon the example in the <xref:System.ComponentModel.PropertyDescriptorCollection> class.</span></span> <span data-ttu-id="6ff05-119">テキスト ボックスにボタンのテキストの情報 (カテゴリ、説明、表示名) を出力します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-119">It prints the information (category, description, display name) of the text of a button in a text box.</span></span> <span data-ttu-id="6ff05-120">いるものと`button1`と`textbox1`フォームでインスタンス化されています。</span><span class="sxs-lookup"><span data-stu-id="6ff05-120">It assumes that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[PropertyDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyDescriptor/CPP/propertydescriptor.cpp#1)]
 [!code-csharp[PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyDescriptor/CS/propertydescriptor.cs#1)]
 [!code-vb[PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyDescriptor/VB/propertydescriptor.vb#1)]  
  
 <span data-ttu-id="6ff05-121">次のコード例では、プロパティをラップする読み取り専用のラッパーを提供するカスタム プロパティ記述子を実装する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-121">The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</span></span> <span data-ttu-id="6ff05-122">`SerializeReadOnlyPropertyDescriptor`カスタム デザイナーでのコントロールの読み取り専用のプロパティ記述子を提供するために使用<xref:System.Windows.Forms.Control.Size%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="6ff05-122">The `SerializeReadOnlyPropertyDescriptor` is used in a custom designer to provide a read-only property descriptor for the control's <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/SerializeReadOnlyPropertyDescriptor.cs#1)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/SerializeReadOnlyPropertyDescriptor.vb#1)]  
  
 <span data-ttu-id="6ff05-123">次のコード例を使用する方法を示して、`SerializeReadOnlyPropertyDescriptor`カスタム デザイナーです。</span><span class="sxs-lookup"><span data-stu-id="6ff05-123">The following code examples show how to use the `SerializeReadOnlyPropertyDescriptor` in a custom designer.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControlDesigner.cs#10)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControlDesigner.vb#10)]  
[!code-csharp[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControl.cs#100)]
[!code-vb[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControl.vb#100)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-124">
            <see cref="T:System.ComponentModel.PropertyDescriptor" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-124">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="6ff05-125">プロパティの名前と属性を格納している <see cref="T:System.ComponentModel.MemberDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-125">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the property and its attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-126">指定した <see cref="T:System.ComponentModel.PropertyDescriptor" /> 内の名前と属性を使用して、<see cref="T:System.ComponentModel.MemberDescriptor" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-126">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr">
          <span data-ttu-id="6ff05-127">メンバーの名前とその属性を格納している <see cref="T:System.ComponentModel.MemberDescriptor" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-127">A <see cref="T:System.ComponentModel.MemberDescriptor" /> containing the name of the member and its attributes.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="6ff05-128">プロパティに関連付ける属性を格納している <see cref="T:System.Attribute" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-128">An <see cref="T:System.Attribute" /> array containing the attributes you want to associate with the property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-129">指定した <see cref="T:System.ComponentModel.PropertyDescriptor" /> 内の名前と、<see cref="T:System.ComponentModel.MemberDescriptor" /> および <see cref="T:System.ComponentModel.MemberDescriptor" /> 配列の両方に格納されている属性を使用して、<see cref="T:System.Attribute" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-129">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-130">このコンス トラクター内の属性を追加する、<xref:System.Attribute>配列内の属性を<xref:System.ComponentModel.MemberDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="6ff05-130">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="6ff05-131">プロパティの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-131">The name of the property.</span>
          </span>
        </param>
        <param name="attrs">
          <span data-ttu-id="6ff05-132">プロパティの属性を格納している <see cref="T:System.Attribute" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-132">An array of type <see cref="T:System.Attribute" /> that contains the property attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-133">名前と属性を指定して、<see cref="T:System.ComponentModel.PropertyDescriptor" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-133">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the specified name and attributes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public virtual void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="6ff05-134">ハンドラーを追加する対象のコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-134">The component to add the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6ff05-135">リスナーとして追加されるデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-135">The delegate to add as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-136">プロパティが変更されたときに、ほかのオブジェクトに通知できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-136">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ff05-137">
            <paramref name="component" /> または <paramref name="handler" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-137">
              <paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public abstract bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="6ff05-138">リセット機能について調べる対象のコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-138">The component to test for reset capability.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-139">派生クラスでオーバーライドされた場合、オブジェクトをリセットしたときに、そのオブジェクトの値が変化するかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-139">When overridden in a derived class, returns whether resetting an object changes its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-140">コンポーネントをリセットするとコンポーネントの値が変化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-140">
              <see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-141">通常、このメソッドはリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-141">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6ff05-142">派生クラスでオーバーライドされると、このメソッドを検索、<see cref="T:System.ComponentModel.DefaultValueAttribute" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-142">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span>
            </span>
            <span data-ttu-id="6ff05-143">1 つが見つかると、プロパティの現在の値の属性の値を比較します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-143">If it finds one, it compares the value of the attribute with the property's current value.</span>
            </span>
            <span data-ttu-id="6ff05-144">返します<see langword="true" />既定値では、プロパティの現在の値に一致しない場合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-144">It returns <see langword="true" /> when the default value does not match the property's current value.</span>
            </span>
            <span data-ttu-id="6ff05-145">このメソッドを見つけられない場合、 <see cref="T:System.ComponentModel.DefaultValueAttribute" />、自分で実装する必要のある"ShouldPersistMyProperty"メソッドを検索します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-145">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself.</span>
            </span>
            <span data-ttu-id="6ff05-146">これが見つかった場合、 <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> "ShouldPersistMyProperty"が返されますを返します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-146">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns what "ShouldPersistMyProperty" returns.</span>
            </span>
            <span data-ttu-id="6ff05-147">それ以外の場合、自分で実装する必要のある"ResetMyProperty"メソッドを検索します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-147">Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself.</span>
            </span>
            <span data-ttu-id="6ff05-148">これが見つかった場合、<see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />返します<see langword="true" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-148">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns <see langword="true" />.</span>
            </span>
            <span data-ttu-id="6ff05-149">見つからない場合、 <see cref="T:System.ComponentModel.DefaultValueAttribute" />、その"ShouldPersistMyProperty"メソッドの場合、または"ResetMyProperty"メソッドを返します<see langword="false" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-149">If it cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <see langword="false" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-150">派生クラスでオーバーライドされた場合、プロパティが関連付けられているコンポーネントの型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-150">When overridden in a derived class, gets the type of the component this property is bound to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ff05-151">プロパティが関連付けられているコンポーネントの型を表す <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-151">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span>
          </span>
          <span data-ttu-id="6ff05-152">
            <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> メソッドまたは <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> メソッドが呼び出される場合、指定されたオブジェクトはこの型のインスタンスである可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-152">When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods are invoked, the object specified might be an instance of this type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-153">通常、このプロパティは、リフレクションを介して実装されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-153">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-154">プロパティの型コンバーターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-154">Gets the type converter for this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ff05-155">プロパティの <see cref="T:System.ComponentModel.TypeConverter" /> を変換するために使用する <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-155">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ CreateInstance(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6ff05-156">作成する型を表す <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-156">A <see cref="T:System.Type" /> that represents the type to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-157">指定した型のインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-157">Creates an instance of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-158">指定した型の新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-158">A new instance of the type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> 指定された型を受け取るコンス トラクターを検索します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type.</span></span> <span data-ttu-id="6ff05-160">コンス トラクターが見つかると、プロパティの型に渡されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-160">If it finds a constructor, the type of the property is passed in.</span></span>  
  
 <span data-ttu-id="6ff05-161">コンバーターとエディターは、このメソッドを使用して、コンポーネントのバージョンを作成します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-161">Converters and editors use this method to create versions of a component.</span></span> <span data-ttu-id="6ff05-162">このメソッドは、1 つのコンポーネントを 1 つ以上の型の再利用できます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-162">This method enables a single component to be reused for more than one type.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="6ff05-163">プライベート クラス メンバーは、メタデータにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-163">for access to private class members and metadata.</span>
          </span>
          <span data-ttu-id="6ff05-164">関連する列挙。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-164">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Drawing.Design.UITypeEditor" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="6ff05-165">この <see cref="T:System.ComponentModel.PropertyDescriptor" /> と比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-165">The object to compare to this <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-166">プロパティ記述子を別のオブジェクトと比較して、等しいかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-166">Compares this to another object to see if they are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-167">両方の値が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-167">
              <see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAttributes">
      <MemberSignature Language="C#" Value="protected override void FillAttributes (System.Collections.IList attributeList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FillAttributes(class System.Collections.IList attributeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FillAttributes (attributeList As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FillAttributes(System::Collections::IList ^ attributeList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeList" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="attributeList">
          <span data-ttu-id="6ff05-168">親クラスの属性を格納している <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-168">An <see cref="T:System.Collections.IList" /> that lists the attributes in the parent class.</span>
          </span>
          <span data-ttu-id="6ff05-169">初期状態では、このリストは空です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-169">Initially, this is empty.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-170">指定した親クラスの属性リストに <see cref="T:System.ComponentModel.PropertyDescriptor" /> の属性を追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-170">Adds the attributes of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the specified list of attributes in the parent class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-171">重複する属性を一覧に追加された最後の 1 つは保持します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-171">For duplicate attributes, the last one added to the list will be kept.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-172">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-172">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-173">既定の <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-173">Returns the default <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-174">プロパティ記述子のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-174">A collection of property descriptor.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-175">このメソッドは成功`null`両方に対して、`instance`パラメーターおよび`filter`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6ff05-175">This method passes `null` for both the `instance` parameter and the `filter` parameter.</span></span>  
  
 <span data-ttu-id="6ff05-176">プロパティ、`instance`パラメーターとは異なる、クラスのプロパティ、コンテナーは追加したり、場合に、プロパティを削除するため、`instance`パラメーターが配置されています。</span><span class="sxs-lookup"><span data-stu-id="6ff05-176">The properties for the `instance` parameter can differ from the properties of a class, because the container can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="6ff05-177">`filter`パラメーターを混在させること<xref:System.Type>と<xref:System.Attribute>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6ff05-177">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="6ff05-178">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-178">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="6ff05-179">A<xref:System.Type>オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、<xref:System.Type>属性のセットにします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-179">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="6ff05-180">プロパティがない場合、<xref:System.Attribute>同じクラスのプロパティは含まれません、返された配列。</span><span class="sxs-lookup"><span data-stu-id="6ff05-180">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="6ff05-181">属性がのインスタンスの場合<xref:System.Attribute>プロパティは、返された配列に含まれると、完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6ff05-181">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="6ff05-182">指定した場合、<xref:System.Attribute>と既定のプロパティに含められます、返された配列のインスタンスがない場合でも<xref:System.Attribute>プロパティにします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-182">If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="6ff05-183">フィルターとして使用される、<see cref="T:System.Attribute" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-183">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-184">指定した属性配列をフィルターとして使用して、<see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-184">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-185">指定した属性に一致するプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-186">このメソッドは渡します`null`の`instance`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6ff05-186">This method passes `null` for the `instance` parameter.</span></span>  
  
 <span data-ttu-id="6ff05-187">プロパティを`instance`パラメーターが、サイトは追加したり、場合に、プロパティを削除するため、クラスのプロパティと異なる場合が、`instance`パラメーターが配置されています。</span><span class="sxs-lookup"><span data-stu-id="6ff05-187">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="6ff05-188">`filter`パラメーターを混在させること<xref:System.Type>と<xref:System.Attribute>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6ff05-188">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="6ff05-189">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-189">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="6ff05-190">A<xref:System.Type>オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、<xref:System.Type>属性のセットにします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-190">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="6ff05-191">プロパティがない場合、<xref:System.Attribute>同じクラスのプロパティは含まれません、返された配列。</span><span class="sxs-lookup"><span data-stu-id="6ff05-191">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="6ff05-192">属性がのインスタンスの場合<xref:System.Attribute>プロパティは、返された配列に含まれると、完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6ff05-192">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="6ff05-193">指定した場合、<xref:System.Attribute>インスタンスと、既定のプロパティはのインスタンスがない場合でもには、返される配列に含められますが、<xref:System.Attribute>プロパティにします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-193">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (instance As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="6ff05-194">プロパティを取得する対象のコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-194">A component to get the properties for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-195">指定したオブジェクトの <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-195">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-196">指定したコンポーネントのプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-196">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-197">このメソッドは渡します`null`の`filter`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="6ff05-197">This method passes `null` for the `filter` parameter.</span></span>  
  
 <span data-ttu-id="6ff05-198">プロパティを`instance`パラメーターが、サイトは追加したり、場合に、プロパティを削除するため、クラスのプロパティと異なる場合が、`instance`パラメーターが配置されています。</span><span class="sxs-lookup"><span data-stu-id="6ff05-198">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="6ff05-199">`filter`パラメーターを混在させること<xref:System.Type>と<xref:System.Attribute>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6ff05-199">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="6ff05-200">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-200">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="6ff05-201">A<xref:System.Type>オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、<xref:System.Type>属性のセットにします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-201">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="6ff05-202">プロパティがない場合、<xref:System.Attribute>同じクラスのプロパティは含まれません、返された配列。</span><span class="sxs-lookup"><span data-stu-id="6ff05-202">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="6ff05-203">属性がのインスタンスの場合<xref:System.Attribute>プロパティは、返された配列に含まれると、完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6ff05-203">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="6ff05-204">指定した場合、<xref:System.Attribute>インスタンスと、既定のプロパティはのインスタンスがない場合でもには、返される配列に含められますが、<xref:System.Attribute>プロパティにします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-204">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="6ff05-205">プロパティを取得する対象のコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-205">A component to get the properties for.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="6ff05-206">フィルターとして使用される、<see cref="T:System.Attribute" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-206">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-207">指定した属性配列をフィルターとして使用して、指定したオブジェクトの <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-207">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object using a specified array of attributes as a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-208">指定したコンポーネントのプロパティのうち、指定した属性に一致するプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-208">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-209">プロパティを`instance`パラメーターが、サイトは追加したり、場合に、プロパティを削除するため、クラスのプロパティと異なる場合が、`instance`パラメーターが配置されています。</span><span class="sxs-lookup"><span data-stu-id="6ff05-209">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="6ff05-210">`filter`パラメーターを混在させること<xref:System.Type>と<xref:System.Attribute>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6ff05-210">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="6ff05-211">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-211">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="6ff05-212">A<xref:System.Type>オブジェクトが、ワイルドカードとして扱われます。 があるプロパティと一致する、<xref:System.Type>属性のセットにします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-212">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="6ff05-213">プロパティがない場合、<xref:System.Attribute>同じクラスのプロパティは含まれません、返された配列。</span><span class="sxs-lookup"><span data-stu-id="6ff05-213">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="6ff05-214">属性がのインスタンスの場合<xref:System.Attribute>プロパティは、返された配列に含まれると、完全に一致する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6ff05-214">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="6ff05-215">指定した場合、<xref:System.Attribute>インスタンスと、既定のプロパティはのインスタンスがない場合でもには、返される配列に含められますが、<xref:System.Attribute>プロパティにします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-215">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 <span data-ttu-id="6ff05-216">子のプロパティを実装することによって返される一般的に、<xref:System.ComponentModel.TypeConverter.GetProperties%2A>のメンバー、<xref:System.ComponentModel.TypeConverter>このプロパティからが返されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-216">Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public virtual object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType">
          <span data-ttu-id="6ff05-217">プロパティがサポートしている複数のエディターを区別するために使用される、エディターの基本型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-217">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-218">指定した型のエディターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-218">Gets an editor of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-219">要求したエディター型のインスタンス。エディターが見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-219">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-220">このオブジェクトのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-220">Returns the hash code for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-221">このオブジェクトのハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-221">The hash code for this object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationTarget">
      <MemberSignature Language="C#" Value="protected override object GetInvocationTarget (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetInvocationTarget(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetInvocationTarget(Type ^ type, System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="6ff05-222">呼び出し対象の <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-222">The <see cref="T:System.Type" /> of the invocation target.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="6ff05-223">呼び出し対象になる可能性があるインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-223">The potential invocation target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-224">このメソッドでは、メンバーの呼び出し中に使用するオブジェクトが返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-224">This method returns the object that should be used during invocation of members.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-225">メンバーの呼び出し中に使用する <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-225">The <see cref="T:System.Object" /> that should be used during invocation of members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-226">通常、戻り値は、同じにする、`instance`で渡されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-226">Typically, the return value will be the same as the `instance` passed in.</span></span> <span data-ttu-id="6ff05-227">別のオブジェクトをこのインスタンスに関連付けられた他のユーザー インスタンスが、カスタム型記述子である場合や、<xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A>メソッドは、別の値を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="6ff05-227">If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromName">
      <MemberSignature Language="C#" Value="protected Type GetTypeFromName (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Type GetTypeFromName(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTypeFromName (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Type ^ GetTypeFromName(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">
          <span data-ttu-id="6ff05-228">取得する型のアセンブリ修飾名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-228">The assembly-qualified name of the type to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-229">型名を使用して型を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-229">Returns a type using its name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-230">指定した型名と一致する <see cref="T:System.Type" />。一致する型が見つからない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-230">A <see cref="T:System.Type" /> that matches the given type name, or <see langword="null" /> if a match cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-231">適切な型を検索するには、このメソッドはまず、アセンブリ、型のこの<xref:System.ComponentModel.PropertyDescriptor>参照します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-231">To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references.</span></span> <span data-ttu-id="6ff05-232">呼び出しが見つからない場合、型アセンブリ内、<xref:System.Type.GetType%2A?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="6ff05-232">If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="6ff05-233">値の取得対象であるプロパティを持つコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-233">The component with the property for which to retrieve the value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-234">派生クラスでオーバーライドされた場合、コンポーネントのプロパティの現在の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-234">When overridden in a derived class, gets the current value of the property on a component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-235">指定したコンポーネントのプロパティの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-235">The value of a property for a given component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-236">通常、このメソッドはリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-236">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="6ff05-237">このメソッドに自動的には、前の変更、 <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>、変更適用後のメソッド、および<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>の<xref:System.ComponentModel.Design.IComponentChangeService>です。</span><span class="sxs-lookup"><span data-stu-id="6ff05-237">This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6ff05-238">このメソッドをオーバーライドする場合は、実装する必要があります"GetMyProperty"メソッドを呼び出すことによって、プロパティの現在の値を取得します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-238">When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="6ff05-239">そのメソッドで例外が通過する必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-239">An exception in that method should pass through.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetValueChangedHandler">
      <MemberSignature Language="C#" Value="protected internal EventHandler GetValueChangedHandler (object component);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.EventHandler GetValueChangedHandler(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueChangedHandler (component As Object) As EventHandler" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; EventHandler ^ GetValueChangedHandler(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="6ff05-240">イベント ハンドラーの取得対象のコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-240">The component for which to retrieve event handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-241">特定のコンポーネントについて現在の <c>ValueChanged</c> イベント ハンドラー セットを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-241">Retrieves the current set of <c>ValueChanged</c> event handlers for a specific component</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-242">結合されたマルチキャスト イベント ハンドラー。現在イベント ハンドラーが <paramref name="component" /> に関連付けられていない場合は、<see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-242">A combined multicast event handler, or <see langword="null" /> if no event handlers are currently assigned to <paramref name="component" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public virtual bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-243">プロパティをローカライズする必要があるかどうかを示す、<see cref="T:System.ComponentModel.LocalizableAttribute" /> で指定されている値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-243">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ff05-244">メンバーの <see cref="T:System.ComponentModel.LocalizableAttribute" /> が <see langword="true" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-244">
              <see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> set to <see langword="true" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-245">プロパティにマークされている場合、 <xref:System.ComponentModel.LocalizableAttribute> 'éý'`true`とその値は、ビジュアル デザイナーで使用されているリソース ファイルに保存されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-245">When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file.</span></span> <span data-ttu-id="6ff05-246">属性でプロパティをマークし、コードでプロパティを設定すると、リソース ファイルは使用されません。</span><span class="sxs-lookup"><span data-stu-id="6ff05-246">If you mark a property with the attribute and then set the property in code, resource files are not used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.LocalizableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-247">派生クラスでオーバーライドされた場合、プロパティが読み取り専用かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-247">When overridden in a derived class, gets a value indicating whether this property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ff05-248">プロパティが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-248">
              <see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (object component, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(object component, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (component As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(System::Object ^ component, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="6ff05-249">イベントを発生させるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-249">The object that raises the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="6ff05-250">イベント データを格納している <see cref="T:System.EventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-250">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-251">実装した <c>ValueChanged</c> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-251">Raises the <c>ValueChanged</c> event that you implemented.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-252">このメソッドは、プロパティの値が変更されたときに、プロパティ記述子の実装によって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="6ff05-252">This method should be called by your property descriptor implementation when the property value has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-253">派生クラスでオーバーライドされた場合、プロパティの型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-253">When overridden in a derived class, gets the type of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ff05-254">プロパティの型を表す <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-254">A <see cref="T:System.Type" /> that represents the type of the property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-255">通常、このプロパティは、リフレクションを介して実装されます。</span><span class="sxs-lookup"><span data-stu-id="6ff05-255">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public virtual void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="6ff05-256">ハンドラーを削除する対象のコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-256">The component to remove the handler for.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6ff05-257">リスナーとして削除されるデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-257">The delegate to remove as a listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-258">プロパティが変更されたときに、ほかのオブジェクトに通知できるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-258">Enables other objects to be notified when this property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6ff05-259">
            <paramref name="component" /> または <paramref name="handler" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-259">
              <paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public abstract void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="6ff05-260">既定値にリセットする対象のプロパティ値を持つコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-260">The component with the property value that is to be reset to the default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-261">派生クラスでオーバーライドされた場合、コンポーネントのプロパティの値を既定値にリセットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-261">When overridden in a derived class, resets the value for this property of the component to the default value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-262">通常、このメソッドはリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-262">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="6ff05-263">このメソッドは、次の優先順位にするプロパティをリセットする値を決定します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-263">This method determines the value to reset the property to in the following order of precedence:</span></span>  
  
1.  <span data-ttu-id="6ff05-264">このプロパティの影付きのプロパティがあります。</span><span class="sxs-lookup"><span data-stu-id="6ff05-264">There is a shadowed property for this property.</span></span>  
  
2.  <span data-ttu-id="6ff05-265"><xref:System.ComponentModel.DefaultValueAttribute>このプロパティにします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-265">There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property.</span></span>  
  
3.  <span data-ttu-id="6ff05-266">渡すプロパティの名前を"MyProperty"がここでは、実装している"ResetMyProperty"メソッドがあります。</span><span class="sxs-lookup"><span data-stu-id="6ff05-266">There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</span></span>  
  
 <span data-ttu-id="6ff05-267">このメソッドを作成、<xref:System.ComponentModel.Design.DesignerTransaction>次の順序で自動的に。</span><span class="sxs-lookup"><span data-stu-id="6ff05-267">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="6ff05-268">メソッドの呼び出し、<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType>メソッドを作成、新しい<xref:System.ComponentModel.Design.DesignerTransaction>を変更を表します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-268">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="6ff05-269">このメソッドの呼び出し、<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType>メソッドをトランザクションが開始され、変更が発生することを示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-269">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="6ff05-270">メソッドは、このメソッドのチェックの順序によって決定される値にプロパティをリセットします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-270">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="6ff05-271">このメソッドの呼び出し、<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType>メソッドを変更が発生したことを示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-271">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="6ff05-272">このメソッドの呼び出し<xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType>をトランザクションが完了したことを示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-272">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is completed.</span></span>  
  
 <span data-ttu-id="6ff05-273">トランザクションの目的は、サポートする`Undo`と`Redo`機能します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-273">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6ff05-274">派生クラスでオーバーライドされると、このメソッドを検索、<see cref="T:System.ComponentModel.DefaultValueAttribute" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-274">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span>
            </span>
            <span data-ttu-id="6ff05-275">プロパティの値が設定、見つかった場合、<see cref="T:System.ComponentModel.DefaultValueAttribute" />見つかったことです。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-275">If it finds one, it sets the value of the property to the <see cref="T:System.ComponentModel.DefaultValueAttribute" /> it found.</span>
            </span>
            <span data-ttu-id="6ff05-276">このメソッドを見つけられない場合、 <see cref="T:System.ComponentModel.DefaultValueAttribute" />、"ResetMyProperty"メソッドを実装する必要がありますを検索します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-276">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ResetMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="6ff05-277">これが見つかった場合、<see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />これメソッドを呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-277">If this is found, the <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> method invokes it.</span>
            </span>
            <span data-ttu-id="6ff05-278">場合<see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />見つけることができません、<see cref="T:System.ComponentModel.DefaultValueAttribute" />または"ResetMyProperty"メソッドを実装している操作は実行されません。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-278">If <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-279">プロパティをシリアル化する必要があるかどうかを示す、<see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" /> で指定されている値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-279">Gets a value indicating whether this property should be serialized, as specified in the <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ff05-280">プロパティをシリアル化する必要があるかどうかを指定する <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> 列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-280">One of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration values that specifies whether this property should be serialized.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="6ff05-281">設定する対象のプロパティ値を持つコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-281">The component with the property value that is to be set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="6ff05-282">新しい値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-282">The new value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-283">派生クラスでオーバーライドされた場合、コンポーネントの値を別の値に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-283">When overridden in a derived class, sets the value of the component to a different value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-284">通常、このメソッドはリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-284">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="6ff05-285">このメソッドを作成、<xref:System.ComponentModel.Design.DesignerTransaction>次の順序で自動的に。</span><span class="sxs-lookup"><span data-stu-id="6ff05-285">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="6ff05-286">メソッドの呼び出し、<xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType>メソッドを作成、新しい<xref:System.ComponentModel.Design.DesignerTransaction>を変更を表します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-286">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="6ff05-287">このメソッドの呼び出し、<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType>メソッドをトランザクションが開始され、変更が発生することを示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-287">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="6ff05-288">メソッドは、このメソッドのチェックの順序によって決定される値にプロパティをリセットします。</span><span class="sxs-lookup"><span data-stu-id="6ff05-288">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="6ff05-289">このメソッドの呼び出し、<xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType>メソッドを変更が発生したことを示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-289">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="6ff05-290">このメソッドの呼び出し<xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType>をトランザクションが完了したことを示します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-290">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is complete.</span></span>  
  
 <span data-ttu-id="6ff05-291">トランザクションの目的は、サポートする`Undo`と`Redo`機能します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-291">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6ff05-292">このメソッドをオーバーライドする場合を実装する必要があります。 適切な"SetMyProperty"メソッドを呼び出すことによって、プロパティの値を設定にする必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-292">When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="6ff05-293">指定された値が有効でない場合、コンポーネントを渡すことが例外をスローする必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-293">If the value specified is not valid, the component should throw an exception, which is passed up.</span>
            </span>
            <span data-ttu-id="6ff05-294">(次のように実装して) いる"SetMyProperty"メソッド"GetMyProperty"メソッド"SetMyProperty"メソッドが例外をスローしていないときに渡された値が返しますされるように、プロパティをデザインする必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-294">You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public abstract bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="6ff05-295">永続性について調べる対象のプロパティを持つコンポーネント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-295">The component with the property to be examined for persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6ff05-296">派生クラスでオーバーライドされた場合、プロパティの値を永続化する必要があるかどうかを示す値を決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-296">When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6ff05-297">プロパティを永続化する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-297">
              <see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-298">通常、このメソッドはリフレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="6ff05-298">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="6ff05-299">派生クラスでオーバーライドされると、このメソッドが戻る<see langword="true" />プロパティの現在の値が既定値と異なる場合。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-299">When overridden in a derived class, this method returns <see langword="true" /> if the current value of the property is different from its default value.</span>
            </span>
            <span data-ttu-id="6ff05-300">既定値の場合、まずは検索、<see cref="T:System.ComponentModel.DefaultValueAttribute" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-300">It looks for a default value by first looking for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span>
            </span>
            <span data-ttu-id="6ff05-301">メソッドには、この属性が検出されると、プロパティの現在の値の属性の値を比較します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-301">If the method finds this attribute, it compares the value of the attribute with the property's current value.</span>
            </span>
            <span data-ttu-id="6ff05-302">このメソッドを見つけられない場合、 <see cref="T:System.ComponentModel.DefaultValueAttribute" />、"ShouldSerializeMyProperty"メソッドを実装する必要がありますを検索します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-302">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldSerializeMyProperty" method that you need to implement.</span>
            </span>
            <span data-ttu-id="6ff05-303">見つかった場合は、<see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />これを呼び出します。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-303">If it is found, <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> invokes it.</span>
            </span>
            <span data-ttu-id="6ff05-304">このメソッドを見つけられない場合、<see cref="T:System.ComponentModel.DefaultValueAttribute" />や"ShouldSerializeMyProperty"メソッドの最適化を作成できないことを返します<see langword="true" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="6ff05-304">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <see langword="true" />.</span>
            </span>
            <block subset="none" type="note">
              <para>
                <span data-ttu-id="6ff05-305">
                  <see cref="T:System.ComponentModel.Design.ComponentDesigner" />クラスは継承されたコンポーネントの特別なシリアル化ロジックを実装します。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6ff05-305">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class implements special serialization logic for inherited components.</span>
                </span>
                <span data-ttu-id="6ff05-306">詳細については、「<see cref="T:System.ComponentModel.Design.ComponentDesigner" />」を参照してください。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6ff05-306">For more information, see <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span>
                </span>
              </para>
            </block>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6ff05-307">このプロパティの値変更通知をプロパティ記述子以外から発生させてよいかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-307">Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6ff05-308">値変更通知をプロパティ記述子以外から発生させてよい場合は <see langword="true" />。それ以外の場合は、<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6ff05-308">
              <see langword="true" /> if value change notifications may originate from outside the property descriptor; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ff05-309"><xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A>プロパティは、このプロパティの値の変更通知可能性があります以外から発生させてプロパティ記述子など、コンポーネント自体、またはに加えられたかどうか通知は、直接の呼び出しから発信されますのみかどうかを示します、<xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="6ff05-309">The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method.</span></span> <span data-ttu-id="6ff05-310">たとえば、コンポーネントが実装することが、<xref:System.ComponentModel.INotifyPropertyChanged>インターフェイス、または明示的な場合があります`name.Changed`このプロパティのイベントです。</span><span class="sxs-lookup"><span data-stu-id="6ff05-310">For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>