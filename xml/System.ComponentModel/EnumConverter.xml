<Type Name="EnumConverter" FullName="System.ComponentModel.EnumConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7fe72c0294af54213d4091a40312f4eccc846f3e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37693607" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EnumConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.EnumConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type EnumConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f4d0e-101">
        <see cref="T:System.Enum" /> 型オブジェクトのさまざまな表現への変換や、その逆の変換を行う型コンバーターを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f4d0e-101">Provides a type converter to convert <see cref="T:System.Enum" /> objects to and from various other representations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d0e-102">このコンバーター列挙オブジェクト</span><span class="sxs-lookup"><span data-stu-id="f4d0e-102">This converter can only convert an enumeration object to and from a string.</span></span> <span data-ttu-id="f4d0e-103"><xref:System.ComponentModel.EnumConverter>クラスには、<xref:System.ComponentModel.EnumConverter.Comparer%2A>を取得するプロパティ、<xref:System.Collections.IComparer>インターフェイス、列挙の値を並べ替えに使用できます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-103">The <xref:System.ComponentModel.EnumConverter> class provides the <xref:System.ComponentModel.EnumConverter.Comparer%2A> property to get an <xref:System.Collections.IComparer> interface that can be used to sort the values of the enumeration.</span></span> <span data-ttu-id="f4d0e-104">既定では、列挙値は、ファイルに表示される順序で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-104">By default, the enumeration values are sorted in the order they appear in the file.</span></span>  
  
 <span data-ttu-id="f4d0e-105">型コンバーターの詳細については、次を参照してください。、<xref:System.ComponentModel.TypeConverter>基底クラスと[方法: 型コンバーターを実装](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)します。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-105">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f4d0e-106">インスタンスを作成しないで、<xref:System.ComponentModel.EnumConverter>します。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-106">You should never create an instance of an <xref:System.ComponentModel.EnumConverter>.</span></span> <span data-ttu-id="f4d0e-107">代わりに、<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> クラスの <xref:System.ComponentModel.TypeDescriptor> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-107">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="f4d0e-108">詳細については、例を参照してください、<xref:System.ComponentModel.TypeConverter>基本クラス。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-108">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f4d0e-109">次のコード例は、型の変数を変換<xref:System.Enum>文字列、またはその逆です。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-109">The following code example converts a variable of type <xref:System.Enum> to a string, and vice versa.</span></span> <span data-ttu-id="f4d0e-110">例では、宣言している必要があります、<xref:System.Enum>と呼ばれる`Servers`と、次のメンバーがあります。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-110">The example requires that you have declared an <xref:System.Enum> called `Servers` and that it has the following members:</span></span>  
  
```  
Windows=1, Exchange=2, BizTalk=3  
```  
  
 [!code-cpp[Converters#12](~/samples/snippets/cpp/VS_Snippets_Winforms/Converters/CPP/converters.cpp#12)]
 [!code-csharp[Converters#12](~/samples/snippets/csharp/VS_Snippets_Winforms/Converters/CS/converters.cs#12)]
 [!code-vb[Converters#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Converters/VB/converters.vb#12)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="f4d0e-111">
        <para>値を異なる順序に並べ替える場合は、オーバーライド、<see cref="P:System.ComponentModel.EnumConverter.Comparer" />プロパティ。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="f4d0e-111">
          <para>If you want to sort the values into a different order, override the <see cref="P:System.ComponentModel.EnumConverter.Comparer" /> property.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EnumConverter.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnumConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.EnumConverter : Type -&gt; System.ComponentModel.EnumConverter" Usage="new System.ComponentModel.EnumConverter type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f4d0e-112">この列挙体コンバーターに関連付ける列挙体の型を表す <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-112">A <see cref="T:System.Type" /> that represents the type of enumeration to associate with this enumeration converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d0e-113">特定の型の <see cref="T:System.ComponentModel.EnumConverter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-113">Initializes a new instance of the <see cref="T:System.ComponentModel.EnumConverter" /> class for the given type.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="enumConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4d0e-114">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="f4d0e-115">変換前の型を表す <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-115">A <see cref="T:System.Type" /> that represents the type you wish to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d0e-116">このコンバーターが、指定したコンテキストを使用して特定の型のオブジェクトを列挙オブジェクトに変換できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-116">Gets a value indicating whether this converter can convert an object in the given source type to an enumeration object using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d0e-117">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-117">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d0e-118">このコンバーター列挙オブジェクト</span><span class="sxs-lookup"><span data-stu-id="f4d0e-118">This converter can only convert an enumeration object to and from a string.</span></span>  
  
 <span data-ttu-id="f4d0e-119">`context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-119">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="f4d0e-120">これは `null` の場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-120">This can be `null`, so always check.</span></span> <span data-ttu-id="f4d0e-121">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-121">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="enumConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4d0e-122">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-122">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="f4d0e-123">変換後の型を表す <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-123">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d0e-124">このコンバーターが、コンテキストを使用してオブジェクトを特定の目的の型に変換できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-124">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d0e-125">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-125">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d0e-126">`context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-126">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="f4d0e-127">これは `null` の場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-127">This can be `null`, so always check.</span></span> <span data-ttu-id="f4d0e-128">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-128">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f4d0e-129">
            <para>独自の変換要件を提供するのには、このメソッドをオーバーライドします。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-129">
              <para>Override this method to provide your own conversion requirements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="Comparer">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IComparer Comparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer Comparer" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EnumConverter.Comparer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Comparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::IComparer ^ Comparer { System::Collections::IComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Comparer : System.Collections.IComparer" Usage="System.ComponentModel.EnumConverter.Comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4d0e-130">列挙値を並べ替えるために使用できる <see cref="T:System.Collections.IComparer" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-130">Gets an <see cref="T:System.Collections.IComparer" /> that can be used to sort the values of the enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4d0e-131">列挙値を並べ替えるための <see cref="T:System.Collections.IComparer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-131">An <see cref="T:System.Collections.IComparer" /> for sorting the enumeration values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d0e-132">既定では、列挙値は、ファイルに表示される順序で並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-132">By default, the enumeration values are sorted in the order they appear in the file.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="f4d0e-133">
            <para>値を異なる順序に並べ替える場合は、このプロパティをオーバーライドします。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-133">
              <para>If you want to sort the values into a different order, override this property.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="enumConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4d0e-134">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-134">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="f4d0e-135">オプションの <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-135">An optional <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="f4d0e-136">指定されなかった場合は、現在のカルチャが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-136">If not supplied, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4d0e-137">変換対象の <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-137">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d0e-138">指定した値オブジェクトを列挙オブジェクトに変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-138">Converts the specified value object to an enumeration object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d0e-139">変換後の <paramref name="value" /> を表す <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-139">An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d0e-140">このコンバーター列挙オブジェクト</span><span class="sxs-lookup"><span data-stu-id="f4d0e-140">This converter can only convert an enumeration object to and from a string.</span></span>  
  
 <span data-ttu-id="f4d0e-141">`context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-141">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="f4d0e-142">これは `null` の場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-142">This can be `null`, so always check.</span></span> <span data-ttu-id="f4d0e-143">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-143">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="f4d0e-144">
            <paramref name="value" /> は、変換後の型として有効な値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-144">
              <paramref name="value" /> is not a valid value for the target type.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4d0e-145">変換を実行できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-145">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="enumConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4d0e-146">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-146">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="f4d0e-147">オプションの <see cref="T:System.Globalization.CultureInfo" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-147">An optional <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="f4d0e-148">指定されなかった場合は、現在のカルチャが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-148">If not supplied, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4d0e-149">変換対象の <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-149">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="f4d0e-150">値の変換後の <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-150">The <see cref="T:System.Type" /> to convert the value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d0e-151">値オブジェクトを目的の型に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-151">Converts the given value object to the specified destination type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d0e-152">変換後の <paramref name="value" /> を表す <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-152">An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d0e-153">このコンバーター列挙オブジェクト</span><span class="sxs-lookup"><span data-stu-id="f4d0e-153">This converter can only convert an enumeration object to and from a string.</span></span>  
  
 <span data-ttu-id="f4d0e-154">`context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-154">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="f4d0e-155">これは `null` の場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-155">This can be `null`, so always check.</span></span> <span data-ttu-id="f4d0e-156">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-156">Also, properties on the context object can return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f4d0e-157">動作、<xref:System.ComponentModel.EnumConverter.ConvertTo%2A>メソッドは、列挙体が同じ値を持つ複数のフィールドを持つ場合は定義されません。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-157">The behavior of the <xref:System.ComponentModel.EnumConverter.ConvertTo%2A> method is undefined if the enumeration has multiple fields with the same value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f4d0e-158">
            <paramref name="destinationType" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-158">
              <paramref name="destinationType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f4d0e-159">
            <paramref name="value" /> は、列挙体に対して有効な値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-159">
              <paramref name="value" /> is not a valid value for the enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f4d0e-160">変換を実行できません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-160">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnumType">
      <MemberSignature Language="C#" Value="protected Type EnumType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EnumType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EnumConverter.EnumType" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property EnumType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Type ^ EnumType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnumType : Type" Usage="System.ComponentModel.EnumConverter.EnumType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4d0e-161">このコンバーターが関連付けられている列挙子の型を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-161">Specifies the type of the enumerator this converter is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4d0e-162">このコンバーターが関連付けられている列挙子の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-162">The type of the enumerator this converter is associated with.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="enumConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4d0e-163">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-163">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d0e-164">検証コントロールがデザインされた対象のデータ型の標準値のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-164">Gets a collection of standard values for the data type this validator is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d0e-165">有効値の標準セットを保持している <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />。データ型が標準値セットをサポートしていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-165">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d0e-166">`context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-166">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="f4d0e-167">これは `null` の場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-167">This can be `null`, so always check.</span></span> <span data-ttu-id="f4d0e-168">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-168">Also, properties on the context object can return `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f4d0e-169">マークされている列挙の任意フィールド<xref:System.ComponentModel.BrowsableAttribute>設定`false`は返されません。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-169">Any fields of the enumeration that are marked with <xref:System.ComponentModel.BrowsableAttribute> set to `false` will not be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="enumConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4d0e-170">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-170">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d0e-171">指定したコンテキストを使用して、<see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> から返された標準値のリストが排他的リストかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-171">Gets a value indicating whether the list of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d0e-172">
            <see langword="true" /> から返された <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> が、有効値の排他的なリストの場合は <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />。他の値も有効である場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-172">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d0e-173">`context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-173">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="f4d0e-174">これは `null` の場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-174">This can be `null`, so always check.</span></span> <span data-ttu-id="f4d0e-175">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-175">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="enumConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4d0e-176">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-176">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d0e-177">指定したコンテキストを使用して、リストから選択できる標準値セットをオブジェクトがサポートするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-177">Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d0e-178">オブジェクトがサポートしている標準値セットを見つけるために <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> を呼び出す必要があるので、<see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-178">
              <see langword="true" /> because <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports.</span>
          </span>
          <span data-ttu-id="f4d0e-179">このメソッドが <see langword="false" /> を返すことはありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-179">This method never returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d0e-180">`context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-180">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="f4d0e-181">これは `null` の場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-181">This can be `null`, so always check.</span></span> <span data-ttu-id="f4d0e-182">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-182">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="enumConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f4d0e-183">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-183">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f4d0e-184">テスト対象の <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-184">The <see cref="T:System.Object" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f4d0e-185">指定したオブジェクトの値がこの型に対して有効かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-185">Gets a value indicating whether the given object value is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f4d0e-186">指定した値がオブジェクトに対して有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-186">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f4d0e-187">`context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-187">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="f4d0e-188">これは `null` の場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-188">This can be `null`, so always check.</span></span> <span data-ttu-id="f4d0e-189">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="f4d0e-189">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.TypeConverter.StandardValuesCollection Values { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter/StandardValuesCollection Values" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.EnumConverter.Values" />
      <MemberSignature Language="VB.NET" Value="Protected Property Values As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::TypeConverter::StandardValuesCollection ^ Values { System::ComponentModel::TypeConverter::StandardValuesCollection ^ get(); void set(System::ComponentModel::TypeConverter::StandardValuesCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.ComponentModel.TypeConverter.StandardValuesCollection with get, set" Usage="System.ComponentModel.EnumConverter.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f4d0e-190">この列挙体の有効な値を指定する <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-190">Gets or sets a <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that specifies the possible values for the enumeration.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f4d0e-191">この列挙体の有効な値を指定する <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f4d0e-191">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that specifies the possible values for the enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>