<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f481b34feb6da5934d7304387e22b436d3287b0" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70691814" /></Metadata><TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="78c45-101">値の型を他の型に変換し、標準値とサブプロパティにアクセスするための統一的な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="78c45-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-102">最も一般的なコンバーターの種類は、テキスト表現との間で変換を行うものです。</span><span class="sxs-lookup"><span data-stu-id="78c45-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="78c45-103">クラスの型コンバーターは、を<xref:System.ComponentModel.TypeConverterAttribute>使用してクラスにバインドされます。</span><span class="sxs-lookup"><span data-stu-id="78c45-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="78c45-104">この属性がオーバーライドされない限り、このクラスを継承するすべてのクラスは、基底クラスと同じ型コンバーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="78c45-105">一般的な型システムの目的では、型コンバーターに直接アクセスしないでください。</span><span class="sxs-lookup"><span data-stu-id="78c45-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="78c45-106">代わりに、を使用<xref:System.ComponentModel.TypeDescriptor>して適切なコンバーターにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="78c45-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="78c45-107">詳細については、提供されているコード例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-107">For more information, see the code examples provided.</span></span> 
>
> <span data-ttu-id="78c45-108">ただし、xaml を使用する場合、xaml プロセッサはを<xref:System.ComponentModel.TypeConverterAttribute>経由<xref:System.ComponentModel.TypeDescriptor>せずにを直接検索します。</span><span class="sxs-lookup"><span data-stu-id="78c45-108">However, when using XAML, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="78c45-109">コードからインスタンスを<xref:System.ComponentModel.TypeDescriptor>作成する場合や、WPF リソースで共有インスタンスを作成する場合は、 <xref:System.ComponentModel.TypeDescriptor>または他のリフレクションと型システムのサポートを使用せずに、直接構築することもできます。</span><span class="sxs-lookup"><span data-stu-id="78c45-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="78c45-110">から<xref:System.ComponentModel.TypeConverter>派生したクラスは、多くの場合、XAML プロセッサが属性または初期化テキスト値をマークアップ (本質的には文字列) から変換し、実行時表現用のオブジェクトを生成する方法の一部として参照されます。</span><span class="sxs-lookup"><span data-stu-id="78c45-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="78c45-111">XAML の型変換動作をサポートするカスタム型の作成者は、通常<xref:System.ComponentModel.TypeConverter> 、文字列から独自の固有`ConvertFrom`の動作をサポートするクラスを実装します。</span><span class="sxs-lookup"><span data-stu-id="78c45-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="78c45-112">この動作により、XAML 属性値として指定された文字列からの型変換が可能になり、文字列からオブジェクトを作成するために必要なサポートを XAML プロセッサに提供できるようになります。これにより、解析されたオブジェクトグラフでオブジェクトが生成されるようになります。</span><span class="sxs-lookup"><span data-stu-id="78c45-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="78c45-113">カスタム型のカスタム型またはカスタムメンバーは、 <xref:System.ComponentModel.TypeConverterAttribute>カスタム<xref:System.ComponentModel.TypeConverter>実装を参照する属性を使用して、定義にを適用することによって示されます。</span><span class="sxs-lookup"><span data-stu-id="78c45-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="78c45-114">詳細については、「 [XAML の型コンバーターの概要](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78c45-115">型コンバーターのインスタンスを作成してクラスにバインドする方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="78c45-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="78c45-116">コンバーターを`MyClassConverter`実装するクラスは、 <xref:System.ComponentModel.TypeConverter>クラスから継承する必要があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="78c45-117">列挙型を持つプロパティがある場合は、プロパティを設定する前に、列挙値が有効かどうかを確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="78c45-118">次のコード例では、という`MyPropertyEnum`列挙体が宣言されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="78c45-119">もう1つの一般的な型コンバーターの使用方法は、オブジェクトを文字列に変換することです。</span><span class="sxs-lookup"><span data-stu-id="78c45-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="78c45-120">次のコード例では、変数<xref:System.Drawing.Color> `c`に格納されているの名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="78c45-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="78c45-121">また、次のコード例に示すように、型コンバーターを使用して、名前から値を変換することもできます。</span><span class="sxs-lookup"><span data-stu-id="78c45-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="78c45-122">次のコード例では、型コンバーターを使用して、オブジェクトがサポートする標準値のセットを出力できます。</span><span class="sxs-lookup"><span data-stu-id="78c45-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="78c45-123">を<see cref="T:System.ComponentModel.TypeConverter" />継承して、独自の変換要件を実装します。</span><span class="sxs-lookup"><span data-stu-id="78c45-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span></span> <span data-ttu-id="78c45-124">このクラスから継承する場合は、次のメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="78c45-124">When you inherit from this class, you can override the following methods:</span></span> 
<span data-ttu-id="78c45-125">-カスタムの型変換をサポートするに<see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />は<see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />、 <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />、、 <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" /> 、およびの各メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-125">-   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" /> methods.</span></span>  
  
<span data-ttu-id="78c45-126">-オブジェクトを再作成する必要がある型を変換して値を変更する<see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />に<see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />は、メソッドとメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-126">-   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" /> methods.</span></span>  
  
<span data-ttu-id="78c45-127">-プロパティをサポートする型を変換するに<see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />は<see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> 、メソッドとメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-127">-   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> methods.</span></span> <span data-ttu-id="78c45-128">変換するクラスにプロパティがなく、プロパティを実装する必要がある場合は、プロパティ記述子を実装<see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />するためのベースとしてクラスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="78c45-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span> <span data-ttu-id="78c45-129">から<see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />継承する場合は、メソッド<see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />と<see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />メソッドをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
<span data-ttu-id="78c45-130">-標準値をサポートする型を変換するに<see cref="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />は<see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />、 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" /> 、 <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> 、およびの各メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-130">-   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> methods.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="78c45-131">派生型はまたは<see langword="internal" /> <see langword="private" />としてマークされている場合がありますが、 <see cref="T:System.ComponentModel.TypeDescriptor" />クラスを使用して型のインスタンスを作成できます。</span><span class="sxs-lookup"><span data-stu-id="78c45-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span> <span data-ttu-id="78c45-132">呼び出し元が信頼されていることを前提として、安全ではないコードを記述しないでください。</span><span class="sxs-lookup"><span data-stu-id="78c45-132">Do not write insecure code by assuming the caller is trusted.</span></span> <span data-ttu-id="78c45-133">代わりに、呼び出し元が部分信頼で型のインスタンスを作成する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-133">Assume instead that callers might create instances of your type in partial trust.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="78c45-134">一般的な (XAML 以外の) 目的での型コンバーターの詳細については、「[方法: 型コンバーター](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120))または一般化された[型変換](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada)を実装する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) or [Generalized Type Conversion](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para></block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7"><span data-ttu-id="78c45-135">XAML の型コンバーターの概要</span><span class="sxs-lookup"><span data-stu-id="78c45-135">Type Converters for XAML Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1"><span data-ttu-id="78c45-136">カスタム型およびライブラリの XAML 関連の CLR 属性</span><span class="sxs-lookup"><span data-stu-id="78c45-136">XAML-Related CLR Attributes For Custom Types and Libraries</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4"><span data-ttu-id="78c45-137">.NET Framework XAML サービスで使用するためのカスタム型の定義</span><span class="sxs-lookup"><span data-stu-id="78c45-137">Defining Custom Types for Use with .NET Framework XAML Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211"><span data-ttu-id="78c45-138">NET XAML サービスの概念説明ドキュメント</span><span class="sxs-lookup"><span data-stu-id="78c45-138">NET XAML Services Conceptual Documentation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78c45-139"><see cref="T:System.ComponentModel.TypeConverter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="78c45-139">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-140">コンバーターが特定の型のオブジェクトをコンバーターの型に変換できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-140">Returns whether this converter can convert an object of one type to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertFrom : Type -&gt; bool" Usage="typeConverter.CanConvertFrom sourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType"><span data-ttu-id="78c45-141">変換元の型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-141">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="78c45-142">コンバーターが特定の型のオブジェクトをコンバーターの型に変換できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-142">Returns whether this converter can convert an object of the given type to the type of this converter.</span></span></summary>
        <returns><span data-ttu-id="78c45-143">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-143"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-144">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-144">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="78c45-145">返さ`true`れることはありません。</span><span class="sxs-lookup"><span data-stu-id="78c45-145">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-146">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-146">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="78c45-147">変換前の型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-147">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="78c45-148">このコンバーターが、指定したコンテキストを使用して、指定された型のオブジェクトをこのコンバーターの型に変換できるかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-148">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-149">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-149"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-150">このクラスで実装される場合、が`false`の場合`sourceType`を除き<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>、このメソッドはを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-150">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-151">独自の変換要件を指定するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-151">Override this method to provide your own conversion requirements.</span></span>  
  
<span data-ttu-id="78c45-152">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-152">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-153">このパラメーターはに<see langword="null" />することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-153">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="78c45-154">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-154">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-155">コンバーターがオブジェクトを指定した型に変換できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-155">Returns whether this converter can convert the object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertTo : Type -&gt; bool" Usage="typeConverter.CanConvertTo destinationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType"><span data-ttu-id="78c45-156">変換後の型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-156">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="78c45-157">コンバーターがオブジェクトを指定した型に変換できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-157">Returns whether this converter can convert the object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="78c45-158">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-158"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-159">が`destinationType`文字列の場合、の既定の<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>実装は常`true`にを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-159">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-160">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-160">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="78c45-161">変換後の型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-161">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="78c45-162">このコンバーターが指定のコンテキストを使用して、オブジェクトを指定の型に変換できるかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-162">Returns whether this converter can convert the object to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-163">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-163"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-164">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-164">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-165">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-165">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-166">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-166">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="78c45-167">が`destinationType`文字列の場合、の既定の<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>実装は常`true`にを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-167">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-168">独自の変換要件を指定するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-168">Override this method to provide your own conversion requirements.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-169">指定した値をコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-169">Converts the given value to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertFrom : obj -&gt; obj" Usage="typeConverter.ConvertFrom value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="78c45-170">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-170">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-171">指定した値をコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-171">Converts the given value to the type of this converter.</span></span></summary>
        <returns><span data-ttu-id="78c45-172">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-172">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-173">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-173">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-174">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-174">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="78c45-175">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" /> 。</span><span class="sxs-lookup"><span data-stu-id="78c45-175">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="78c45-176">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-176">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-177">指定したコンテキストとカルチャ情報を使用して、指定されたオブジェクトをこのコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-177">Converts the given object to the type of this converter, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="78c45-178">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-178">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-179">XAML の型変換動作をサポートするカスタム型の作成者は、通常<xref:System.ComponentModel.TypeConverter> 、文字列から<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>の動作をサポートするクラスを実装します。</span><span class="sxs-lookup"><span data-stu-id="78c45-179">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="78c45-180">この動作により、XAML 属性値として指定された文字列からの型変換が可能になり、文字列からオブジェクトを作成するために必要なサポートを XAML プロセッサに提供できるようになります。これにより、解析されたオブジェクトグラフでオブジェクトが生成されるようになります。</span><span class="sxs-lookup"><span data-stu-id="78c45-180">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="78c45-181">カスタム型のカスタム型またはカスタムメンバーは、 <xref:System.ComponentModel.TypeConverterAttribute>カスタム<xref:System.ComponentModel.TypeConverter>実装を参照する属性を使用して、定義にを適用することによって示されます。</span><span class="sxs-lookup"><span data-stu-id="78c45-181">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="78c45-182">XAML の目的では、通常、に`culture`基づいて分岐の実装を提供することはありません。</span><span class="sxs-lookup"><span data-stu-id="78c45-182">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="78c45-183">これは、XAML が開発環境のコンテキストでプリコンパイルされており、xaml の型変換には、ランタイム XAML のカルチャ固有の情報が関係しないためです。</span><span class="sxs-lookup"><span data-stu-id="78c45-183">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="78c45-184">詳細については、「 [XAML の型コンバーターの概要](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-184">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-185">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-185">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-186">独自の変換要件を指定するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-186">Override this method to provide your own conversion requirements.</span></span>  
  
<span data-ttu-id="78c45-187">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-187">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-188">このパラメーターはに<see langword="null" />することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-188">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="78c45-189">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-189">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
<span data-ttu-id="78c45-190">XAML およびカスタム型のサポートに使用される型コンバーターの実装パターンについては、「 [xaml の型コンバーターの概要](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-190">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7"><span data-ttu-id="78c45-191">XAML の型コンバーターの概要</span><span class="sxs-lookup"><span data-stu-id="78c45-191">Type Converters for XAML Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-192">インバリアント カルチャを使用して、値をコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-192">Converts the value to a type of this converter, using the invariant culture.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="78c45-193">変換対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-193">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-194">インバリアント カルチャを使用して、指定した文字列をコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-194">Converts the given string to the type of this converter, using the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="78c45-195">変換後のテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-195">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-196">既定の実装では、常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-196">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-197">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-197">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-198">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-198">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="78c45-199">変換対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-199">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-200">インバリアント カルチャと指定したコンテキストを使用して、指定した文字列をコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-200">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-201">変換後のテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-201">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-202">文字列を適切なオブジェクトに変換できない場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="78c45-202">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="78c45-203">既定の実装では、常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-203">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="78c45-204">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-204">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-205">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-205">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-206">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-206">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-207">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-207">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-208">指定したテキストをオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-208">Converts the specified text to an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : string -&gt; obj" Usage="typeConverter.ConvertFromString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="78c45-209">変換対象のオブジェクトのテキスト形式。</span><span class="sxs-lookup"><span data-stu-id="78c45-209">The text representation of the object to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-210">指定したテキストをオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-210">Converts the specified text to an object.</span></span></summary>
        <returns><span data-ttu-id="78c45-211">変換後のテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-211">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-212">既定の実装では、常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-212">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78c45-213">この関数の例については、 <xref:System.ComponentModel.TypeConverter>クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-213">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-214">文字列を適切なオブジェクトに変換できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-214">The string cannot be converted into the appropriate object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-215">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-215">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="78c45-216">変換対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-216">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-217">指定したコンテキストを使用して、指定したテキストをオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-217">Converts the given text to an object, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-218">変換後のテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-218">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-219">文字列を適切なオブジェクトに変換できない場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="78c45-219">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="78c45-220">既定の実装では、常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-220">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="78c45-221">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-221">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-222">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-222">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-223">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-223">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-224">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-224">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, culture, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-225">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-225">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="78c45-226"><see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-226">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="78c45-227"><see langword="null" /> を渡すと、現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="78c45-227">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="text"><span data-ttu-id="78c45-228">変換対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-228">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-229">指定したコンテキストとカルチャ情報を使用して、指定したテキストをオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-229">Converts the given text to an object, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="78c45-230">変換後のテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-230">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-231">文字列を適切なオブジェクトに変換できない場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="78c45-231">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="78c45-232">既定の実装では、常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-232">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="78c45-233">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-233">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-234">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-234">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-235">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-235">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-236">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-236">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-237">指定した値オブジェクトを、指定した型に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-237">Converts the given value object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.ConvertTo : obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="78c45-238">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-238">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="78c45-239"><paramref name="value" /> パラメーターの変換後の <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-239">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span></span></param>
        <summary><span data-ttu-id="78c45-240">引数を使用して、指定した値オブジェクトを、指定した型に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-240">Converts the given value object to the specified type, using the arguments.</span></span></summary>
        <returns><span data-ttu-id="78c45-241">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-241">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-242">との間で変換を行う最も一般的な型は文字列オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="78c45-242">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="78c45-243">この実装で<xref:System.Object.ToString%2A>は、オブジェクトが有効で、変換先の型が文字列である場合、オブジェクトに対してを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="78c45-243">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="78c45-244"><paramref name="destinationType" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="78c45-244">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-245">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-245">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-246">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-246">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="78c45-247"><see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-247">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="78c45-248"><see langword="null" /> を渡すと、現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="78c45-248">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="78c45-249">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-249">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="78c45-250"><paramref name="value" /> パラメーターの変換後の <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-250">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span></span></param>
        <summary><span data-ttu-id="78c45-251">指定したコンテキストとカルチャ情報を使用して、指定した値オブジェクトを、指定した型に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-251">Converts the given value object to the specified type, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="78c45-252">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-252">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-253">変換前後の型として最もよく使用されるのは文字列オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="78c45-253">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="78c45-254">この実装で<xref:System.Object.ToString%2A>は、オブジェクトが有効で、変換先の型が文字列である場合、オブジェクトに対してを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="78c45-254">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="78c45-255">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-255">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-256">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-256">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-257">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-257">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="78c45-258">XAML の型変換動作をサポートするカスタム型の作成者は、通常<xref:System.ComponentModel.TypeConverter> 、文字列から<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>の動作をサポートするクラスを実装します。</span><span class="sxs-lookup"><span data-stu-id="78c45-258">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="78c45-259">これらの型コンバーターは、 <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> XAML へのシリアル化をサポートするためにを実装する場合もあります。</span><span class="sxs-lookup"><span data-stu-id="78c45-259">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="78c45-260">XAML シリアル化のシナリオによっては<xref:System.ComponentModel.TypeConverter> 、単独では適切に対処できない場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-260">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="78c45-261">このような場合は、によって<xref:System.Windows.Markup.ValueSerializer> <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>処理される可能性があるシリアル化ケースを処理するを定義することが必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-261">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="78c45-262">詳細については、「<xref:System.Windows.Markup.ValueSerializer>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-262">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="78c45-263"><paramref name="destinationType" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="78c45-263">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-264">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-264">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-265">独自の変換要件を指定するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-265">Override this method to provide your own conversion requirements.</span></span>  
  
<span data-ttu-id="78c45-266">XAML およびカスタム型のサポートに使用される型コンバーターの実装パターンについては、「 [xaml の型コンバーターの概要](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-266">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7"><span data-ttu-id="78c45-267">XAML の型コンバーターの概要</span><span class="sxs-lookup"><span data-stu-id="78c45-267">Type Converters for XAML Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-268">指定した値を、インバリアント カルチャを使用した文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-268">Converts the specified value to a culture-invariant string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : obj -&gt; string" Usage="typeConverter.ConvertToInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="78c45-269">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-269">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-270">指定した値を、インバリアント カルチャを使用した文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-270">Converts the specified value to a culture-invariant string representation.</span></span></summary>
        <returns><span data-ttu-id="78c45-271">変換後の値を表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-271">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-272">`context`パラメーターを使用すると、このコンバーターが呼び出されている環境に関する追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="78c45-272">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="78c45-273">これは `null` の場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-273">This can be `null`, so always check.</span></span> <span data-ttu-id="78c45-274">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-274">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="78c45-275">値フォーマッタの実装によっては、返された文字列を値フォーマッタに渡して、オブジェクトのインスタンスを再作成することができます。</span><span class="sxs-lookup"><span data-stu-id="78c45-275">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-276">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-276">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToInvariantString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-277">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-277">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="78c45-278">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-278">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-279">指定したコンテキストを使用して、指定した値をインバリアント カルチャを使用した文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-279">Converts the specified value to a culture-invariant string representation, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-280">変換後の値を表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-280">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-281">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-281">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-282">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-282">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-283">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-283">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="78c45-284">値フォーマッタの実装によっては、返された文字列を値フォーマッタに渡して、オブジェクトのインスタンスを再作成することができます。</span><span class="sxs-lookup"><span data-stu-id="78c45-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-285">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-285">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-286">指定した値を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-286">Converts the specified value to a string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : obj -&gt; string" Usage="typeConverter.ConvertToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="78c45-287">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-287">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-288">指定した値を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-288">Converts the specified value to a string representation.</span></span></summary>
        <returns><span data-ttu-id="78c45-289">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-289">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-290">値フォーマッタの実装によっては、返された文字列を値フォーマッタに渡して、オブジェクトのインスタンスを再作成することができます。</span><span class="sxs-lookup"><span data-stu-id="78c45-290">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78c45-291">この関数の例については、 <xref:System.ComponentModel.TypeConverter>クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-291">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-292">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-292">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-293">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-293">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="78c45-294">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-294">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-295">指定したコンテキストを使用して、指定した値を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-295">Converts the given value to a string representation, using the given context.</span></span></summary>
        <returns><span data-ttu-id="78c45-296">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-296">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-297">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-297">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-298">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-298">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-299">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-299">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="78c45-300">値フォーマッタの実装によっては、返された文字列を値フォーマッタに渡して、オブジェクトのインスタンスを再作成することができます。</span><span class="sxs-lookup"><span data-stu-id="78c45-300">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-301">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-301">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; string" Usage="typeConverter.ConvertToString (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-302">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-302">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="78c45-303"><see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-303">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="78c45-304"><see langword="null" /> を渡すと、現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="78c45-304">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="78c45-305">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-305">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="78c45-306">指定したコンテキストとカルチャ情報を使用して、指定した値を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="78c45-306">Converts the given value to a string representation, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="78c45-307">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-307">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-308">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-308">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-309">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-309">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-310">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-310">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="78c45-311">値フォーマッタの実装によっては、返された文字列を値フォーマッタに渡して、オブジェクトのインスタンスを再作成することができます。</span><span class="sxs-lookup"><span data-stu-id="78c45-311">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-312">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="78c45-312">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-313"><see cref="T:System.Object" /> の一連のプロパティ値を指定して、そのオブジェクトを再作成します。</span><span class="sxs-lookup"><span data-stu-id="78c45-313">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance propertyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues"><span data-ttu-id="78c45-314">新しいプロパティ値のディクショナリを表す <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-314">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span></span></param>
        <summary><span data-ttu-id="78c45-315"><see cref="T:System.Object" /> の一連のプロパティ値を指定して、そのオブジェクトを再作成します。</span><span class="sxs-lookup"><span data-stu-id="78c45-315">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="78c45-316">指定した <see cref="T:System.Object" /> を表す <see cref="T:System.Collections.IDictionary" />。オブジェクトを作成できない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-316">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="78c45-317">このメソッドは常に <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-317">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-318">このメソッドは、変更できないが、変更可能なプロパティを提供するオブジェクトに対して使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-318">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="78c45-319">`propertyValues`パラメーターによって提供されるディクショナリには、から<xref:System.ComponentModel.TypeConverter.GetProperties%2A>返された各プロパティに1つずつ、一連の名前と値のペアが含まれています。</span><span class="sxs-lookup"><span data-stu-id="78c45-319">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj&#xA;override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-320">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-320">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="78c45-321">新しいプロパティ値の <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-321">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span></span></param>
        <summary><span data-ttu-id="78c45-322">この <see cref="T:System.ComponentModel.TypeConverter" /> を関連付ける型のインスタンスを作成します。指定されたコンテキストと、与えられているオブジェクトのプロパティ値のセットを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-322">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="78c45-323">指定した <see cref="T:System.Object" /> を表す <see cref="T:System.Collections.IDictionary" />。オブジェクトを作成できない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-323">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="78c45-324">このメソッドは常に <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-324">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-325">このメソッドは、変更できないが、変更可能なプロパティを提供するオブジェクトに対して使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-325">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-326">変換する型で値を変更するには、オブジェクトを再作成する必要がある場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-326">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
<span data-ttu-id="78c45-327">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-327">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-328">このパラメーターはに<see langword="null" />することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-328">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="78c45-329">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-329">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
<span data-ttu-id="78c45-330"><paramref name="propertyValues" />パラメーターによって提供されるディクショナリには、から<see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />返された各プロパティに1つずつ、一連の名前と値のペアが含まれています。</span><span class="sxs-lookup"><span data-stu-id="78c45-330">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="typeConverter.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="78c45-331">変換対象の <see cref="T:System.Object" />。オブジェクトを使用できない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-331">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <summary><span data-ttu-id="78c45-332">変換を実行できなかった場合にスローされる例外を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-332">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="78c45-333">変換を実行できなかった場合にスローされる例外を表す <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-333">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-334">このメソッドによって自動的にスローされます。</span><span class="sxs-lookup"><span data-stu-id="78c45-334">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="typeConverter.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="78c45-335">変換対象の <see cref="T:System.Object" />。オブジェクトを使用できない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-335">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <param name="destinationType"><span data-ttu-id="78c45-336">変換しようとした型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-336">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="78c45-337">変換を実行できなかった場合にスローされる例外を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-337">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="78c45-338">変換を実行できなかった場合にスローされる例外を表す <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-338">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="78c45-339">このメソッドによって自動的にスローされます。</span><span class="sxs-lookup"><span data-stu-id="78c45-339">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-340">このオブジェクトの値を変更するときに <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> メソッドを呼び出して、新しい値を作成する必要があるかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-340">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberSignature Language="F#" Value="member this.GetCreateInstanceSupported : unit -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78c45-341">このオブジェクトの値を変更するときに <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> メソッドを呼び出して、新しい値を作成する必要があるかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-341">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
        <returns><span data-ttu-id="78c45-342">このオブジェクトのプロパティを変更するときに <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> を呼び出して新しい値を作成する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-342"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-343">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-343">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="78c45-344">このオブジェクトの値を変更するときに、指定したコンテキストを使用して <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> を呼び出して、新しい値を作成する必要があるかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-344">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-345">このオブジェクトのプロパティを変更するときに <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> を呼び出して新しい値を作成する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-345"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-346">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-346">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-347">変換する型で値を変更するには、オブジェクトを再作成する必要がある場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-347">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
<span data-ttu-id="78c45-348">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-348">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-349">このパラメーターはに<see langword="null" />することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-349">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="78c45-350">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-350">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-351">value パラメーターに指定された配列型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-351">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="78c45-352">プロパティを取得する対象となる配列の型を指定する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-352">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="78c45-353">value パラメーターに指定された配列型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-353">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
        <returns><span data-ttu-id="78c45-354">指定されたデータ型に対して公開されているプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。コレクションにプロパティが格納されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-354">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-355">このクラスに実装されると、このメソッドは常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-355">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="78c45-356">既定では、型はプロパティを返しません。</span><span class="sxs-lookup"><span data-stu-id="78c45-356">By default, a type does not return properties.</span></span> <span data-ttu-id="78c45-357">このメソッドの簡単な実装では<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 、正しいデータ型に対してを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="78c45-357">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-358">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-358">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="78c45-359">プロパティを取得する対象となる配列の型を指定する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-359">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="78c45-360">指定したコンテキストを使用して、value パラメーターで指定された配列型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-360">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-361">指定されたデータ型に対して公開されているプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。コレクションにプロパティが格納されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-361">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-362">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-362">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-363">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-363">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-364">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-364">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="78c45-365">このクラスに実装されると、このメソッドは常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-365">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="78c45-366">既定では、型はプロパティを返しません。</span><span class="sxs-lookup"><span data-stu-id="78c45-366">By default, a type does not return properties.</span></span> <span data-ttu-id="78c45-367">このメソッドの簡単な実装では<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 、正しいデータ型に対してを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="78c45-367">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-368">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-368">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="78c45-369">プロパティを取得する対象となる配列の型を指定する <see cref="T:System.Object" /> 。</span><span class="sxs-lookup"><span data-stu-id="78c45-369">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <param name="attributes"><span data-ttu-id="78c45-370">フィルターとして使用される、<see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="78c45-370">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span></span></param>
        <summary><span data-ttu-id="78c45-371">指定したコンテキストと属性を使用して、value パラメーターで指定された配列型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-371">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span></span></summary>
        <returns><span data-ttu-id="78c45-372">指定されたデータ型に対して公開されているプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。コレクションにプロパティが格納されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-372">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-373">このクラスに実装されると、このメソッドは常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-373">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-374">変換する型がプロパティをサポートする場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-374">Override this method if the type you want to convert supports properties.</span></span>  
  
<span data-ttu-id="78c45-375">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-375">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-376">このパラメーターはに<see langword="null" />することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-376">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="78c45-377">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-377">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
<span data-ttu-id="78c45-378">属性配列は、配列をフィルター処理するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="78c45-378">The attributes array is used to filter the array.</span></span> <span data-ttu-id="78c45-379">属性には、オブジェクト<see cref="T:System.Type" />と<see cref="T:System.Attribute" />オブジェクトを混在させることができます。</span><span class="sxs-lookup"><span data-stu-id="78c45-379">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span></span> <span data-ttu-id="78c45-380">フィルター処理は、次の規則によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="78c45-380">Filtering is defined by the following rules:</span></span> 
<span data-ttu-id="78c45-381">-A <see cref="T:System.Type" />はワイルドカードとして扱われ、属性のセット<see cref="T:System.Type" />にを持つプロパティと一致します。</span><span class="sxs-lookup"><span data-stu-id="78c45-381">-   A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
<span data-ttu-id="78c45-382">-プロパティが同じクラス<see cref="T:System.Attribute" />のを持たない場合、プロパティは返された配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="78c45-382">-   If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
<span data-ttu-id="78c45-383">-属性がのインスタンスの<see cref="T:System.Attribute" />場合、プロパティは完全に一致しているか、返された配列に含まれていません。</span><span class="sxs-lookup"><span data-stu-id="78c45-383">-   If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
<span data-ttu-id="78c45-384">- <see cref="T:System.Attribute" />インスタンスが指定されていて、それが既定のプロパティである場合は、 <see cref="T:System.Attribute" />プロパティにのインスタンスが存在しない場合でも、返された配列に含まれます。</span><span class="sxs-lookup"><span data-stu-id="78c45-384">-   If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-385">オブジェクトがプロパティをサポートしているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-385">Returns whether this object supports properties.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetPropertiesSupported : unit -&gt; bool" Usage="typeConverter.GetPropertiesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78c45-386">オブジェクトがプロパティをサポートしているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-386">Returns whether this object supports properties.</span></span></summary>
        <returns><span data-ttu-id="78c45-387">このオブジェクトのプロパティを見つけるために <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> を呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-387"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-388">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-388">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-389">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-389">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="78c45-390">指定したコンテキストを使用して、オブジェクトがプロパティをサポートしているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-390">Returns whether this object supports properties, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-391">このオブジェクトのプロパティを見つけるために <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> を呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-391"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-392">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-392">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-393">変換する型がプロパティをサポートする場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-393">Override this method if the type you want to convert supports properties.</span></span>  
  
<span data-ttu-id="78c45-394">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-394">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-395">このパラメーターはに<see langword="null" />することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-395">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="78c45-396">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-396">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-397">型コンバーターがデザインされた対象のデータ型の標準値のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-397">Returns a collection of standard values for the data type this type converter is designed for.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValues : unit -&gt; System.Collections.ICollection" Usage="typeConverter.GetStandardValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78c45-398">型コンバーターがデザインされた対象であるデータ型の既定のコンテキストから、標準値のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-398">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span></span></summary>
        <returns><span data-ttu-id="78c45-399">有効値の標準セットを格納している <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />。データ型が標準値セットをサポートしていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-399">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-400">このクラスに実装されると、このメソッドは常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-400">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-401">書式コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。これを使用すると、このコンバーターが呼び出される環境についての追加情報を抽出できます。</span><span class="sxs-lookup"><span data-stu-id="78c45-401">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-402">このパラメーターまたはこのパラメーターのプロパティには、<see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="78c45-402">This parameter or properties of this parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="78c45-403">書式指定コンテキストが指定されている場合、型コンバーターがデザインされた対象のデータ型の標準値のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-403">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span></span></summary>
        <returns><span data-ttu-id="78c45-404">有効値の標準セットを保持している <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />。データ型が標準値セットをサポートしていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-404">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-405">で実装さ<xref:System.ComponentModel.TypeConverter>れているように`null`、このメソッドは常にを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-405">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="78c45-406">この関数の例については、 <xref:System.ComponentModel.TypeConverter>クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-406">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-407">変換する型が標準値をサポートする場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-407">Override this method if the type you want to convert supports standard values.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-408"><see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> から返された標準値のコレクションが、排他的なリストかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-408">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesExclusive : unit -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78c45-409"><see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> から返された標準値のコレクションが、排他的なリストかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-409">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
        <returns><span data-ttu-id="78c45-410"><see langword="true" /> から返された <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> が、有効値の排他的なリストの場合は <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />。他の値も有効である場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-410"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-411">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-411">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="78c45-412">列挙型の値リストのように、リストが排他的な場合は、他の値は有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="78c45-412">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="78c45-413">リストが排他的ではない場合、<xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> メソッドが提供する標準値に加えて、他にも有効な値が存在する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-413">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="78c45-414">値が排他的である場合、<xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> で返されるリストでこれらの値を編集することはできません。</span><span class="sxs-lookup"><span data-stu-id="78c45-414">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-415">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-415">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="78c45-416">指定したコンテキストを使用して、<see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> から返された標準値のコレクションが有効値の排他的なリストかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-416">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-417"><see langword="true" /> から返された <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> が、有効値の排他的なリストの場合は <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />。他の値も有効である場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-417"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-418">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-418">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="78c45-419">列挙型の値リストのように、リストが排他的な場合は、他の値は有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="78c45-419">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="78c45-420">リストが排他的ではない場合、<xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> メソッドが提供する標準値に加えて、他にも有効な値が存在する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-420">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="78c45-421">値が排他的である場合、<xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> で返されるリストでこれらの値を編集することはできません。</span><span class="sxs-lookup"><span data-stu-id="78c45-421">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-422">変換する型が標準値をサポートする場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-422">Override this method if the type you want to convert supports standard values.</span></span>  
  
<span data-ttu-id="78c45-423">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-423">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-424">このパラメーターはに<see langword="null" />することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-424">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="78c45-425">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-425">Also, properties on the context object can return <see langword="null" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-426">リストから選択できる標準値セットをオブジェクトがサポートするかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-426">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesSupported : unit -&gt; bool" Usage="typeConverter.GetStandardValuesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="78c45-427">リストから選択できる標準値セットをオブジェクトがサポートするかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-427">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
        <returns><span data-ttu-id="78c45-428">オブジェクトがサポートしている標準値セットを見つけるために <see langword="true" /> を呼び出す必要がある場合は <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-428"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-429">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-429">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="78c45-430">指定したコンテキストを使用して、リストから選択できる標準値セットをオブジェクトがサポートするかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-430">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-431">オブジェクトがサポートしている標準値セットを見つけるために <see langword="true" /> を呼び出す必要がある場合は <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-431"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-432">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-432">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="78c45-433">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-433">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-434">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-434">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-435">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-435">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-436">変換する型が標準値をサポートする場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-436">Override this method if the type you want to convert supports standard values.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="78c45-437">指定した値オブジェクトが型に対して有効かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-437">Returns whether the given value object is valid for this type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsValid : obj -&gt; bool" Usage="typeConverter.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="78c45-438">有効かどうかを確認する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="78c45-438">The object to test for validity.</span></span></param>
        <summary><span data-ttu-id="78c45-439">指定した値オブジェクトが型に対して有効かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-439">Returns whether the given value object is valid for this type.</span></span></summary>
        <returns><span data-ttu-id="78c45-440">指定した値がオブジェクトに対して有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-440"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-441">以降で[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]は、 <xref:System.ComponentModel.TypeConverter.IsValid%2A> メソッドは <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> メソッドおよびメソッドから例外をキャッチします。 <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A></span><span class="sxs-lookup"><span data-stu-id="78c45-441">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="78c45-442">入力値の型によっ<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>てが`false`返される場合、または入力<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>値によって例外が<xref:System.ComponentModel.TypeConverter.IsValid%2A>発生する`false`場合、メソッドはを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-442">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="78c45-443">従来の動作を有効にするには、アプリケーションの構成ファイルに次の行を挿入します (たとえば、アプリケーション 1)。</span><span class="sxs-lookup"><span data-stu-id="78c45-443">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-444">変換する型で、検証可能な標準値がサポートされている場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-444">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
<span data-ttu-id="78c45-445">メソッドは、が指定された型に変換できるか<paramref name="value" />どうかを判断するためにではなく、型の値を検証するために使用されます。 <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="78c45-445">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="78c45-446">たとえば、は<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> 、特定の値が列挙型に対して有効かどうかを判断するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="78c45-446">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="78c45-447">例については、「<see cref="T:System.ComponentModel.EnumConverter" />」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-447">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span>  
  
<span data-ttu-id="78c45-448">メソッド<see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" />とメソッドを例外ブロックにラップすることによって<see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> <c>、独自の</c>を作成できます。</span><span class="sxs-lookup"><span data-stu-id="78c45-448">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool&#xA;override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="typeConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="78c45-449">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-449">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="78c45-450">有効かどうかを確認する対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-450">The <see cref="T:System.Object" /> to test for validity.</span></span></param>
        <summary><span data-ttu-id="78c45-451">指定した値オブジェクトが、型および指定したコンテキストに対して有効かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-451">Returns whether the given value object is valid for this type and for the specified context.</span></span></summary>
        <returns><span data-ttu-id="78c45-452">指定した値がオブジェクトに対して有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-452"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-453">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="78c45-453">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="78c45-454">このパラメーターはに`null`することができるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-454">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="78c45-455">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="78c45-455">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="78c45-456">以降で[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]は、 <xref:System.ComponentModel.TypeConverter.IsValid%2A> メソッドは <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> メソッドおよびメソッドから例外をキャッチします。 <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A></span><span class="sxs-lookup"><span data-stu-id="78c45-456">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="78c45-457">入力値の型によっ<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>てが`false`返される場合、または入力<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>値によって例外が<xref:System.ComponentModel.TypeConverter.IsValid%2A>発生する`false`場合、メソッドはを返します。</span><span class="sxs-lookup"><span data-stu-id="78c45-457">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="78c45-458">従来の動作を有効にするには、アプリケーションの構成ファイルに次の行を挿入します (たとえば、アプリケーション 1)。</span><span class="sxs-lookup"><span data-stu-id="78c45-458">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="78c45-459">この関数の例については、 <xref:System.ComponentModel.TypeConverter>クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-459">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="78c45-460">変換する型で、検証可能な標準値がサポートされている場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="78c45-460">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
<span data-ttu-id="78c45-461">メソッドは、が指定された型に変換できるか<paramref name="value" />どうかを判断するためにではなく、型の値を検証するために使用されます。 <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /></span><span class="sxs-lookup"><span data-stu-id="78c45-461">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="78c45-462">たとえば、は<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> 、特定の値が列挙型に対して有効かどうかを判断するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="78c45-462">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="78c45-463">例については、「<see cref="T:System.ComponentModel.EnumConverter" />」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="78c45-463">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.SortProperties : System.ComponentModel.PropertyDescriptorCollection * string[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.SortProperties (props, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props"><span data-ttu-id="78c45-464">並べ替える対象のプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-464">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span></span></param>
        <param name="names"><span data-ttu-id="78c45-465">コレクション内でプロパティを並べ替える順序で並べた名前の配列。</span><span class="sxs-lookup"><span data-stu-id="78c45-465">An array of names in the order you want the properties to appear in the collection.</span></span></param>
        <summary><span data-ttu-id="78c45-466">プロパティのコレクションを並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="78c45-466">Sorts a collection of properties.</span></span></summary>
        <returns><span data-ttu-id="78c45-467">並べ替えられたプロパティを格納した <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="78c45-467">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="78c45-468">コレクション内の名前の配列にまだ存在しないすべてのプロパティは、アルファベット順に末尾に追加されます。</span><span class="sxs-lookup"><span data-stu-id="78c45-468">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="78c45-469">パラメーターが空の配列または`null`である場合、コレクション内のすべてのプロパティがアルファベット順に並べ替えられます。 `names`</span><span class="sxs-lookup"><span data-stu-id="78c45-469">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>
