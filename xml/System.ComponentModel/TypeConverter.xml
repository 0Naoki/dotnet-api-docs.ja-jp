<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d8315-101">値の型を他の型に変換し、標準値とサブプロパティにアクセスするための統一的な方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="d8315-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-102">コンバーターの最も一般的な型は、いずれかのテキスト表現との間に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="d8315-103">クラスの型コンバーターは、クラスにバインドされて、<xref:System.ComponentModel.TypeConverterAttribute>です。</span><span class="sxs-lookup"><span data-stu-id="d8315-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="d8315-104">この属性がオーバーライドされない限り、このクラスから継承するすべてのクラスは基底クラスとして同じの型コンバーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d8315-105">一般的な種類のシステムの目的で、直接アクセスしないで実行する型コンバーター。</span><span class="sxs-lookup"><span data-stu-id="d8315-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="d8315-106">代わりに、適切なコンバーターを使用してアクセス<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="d8315-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="d8315-107">詳細については、提供されたコード例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d8315-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="d8315-108">**注**XAML の目的で、XAML プロセッサがの検索、<xref:System.ComponentModel.TypeConverterAttribute>経由ではなく、直接<xref:System.ComponentModel.TypeDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="d8315-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="d8315-109">行う必要がある場合の<xref:System.ComponentModel.TypeDescriptor>インスタンスをコードまたは WPF の共有インスタンスを作成する、リソースが参照することがなく直接構築するために許容される<xref:System.ComponentModel.TypeDescriptor>または他のリフレクションおよび型システムをサポートします。</span><span class="sxs-lookup"><span data-stu-id="d8315-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="d8315-110">派生したクラス<xref:System.ComponentModel.TypeConverter>は多くの場合は、XAML プロセッサは属性値または初期化のテキスト値のマークアップ (これは文字列では本質的に) に変換する方法の一部として参照し、実行時の表現のオブジェクトを生成します。</span><span class="sxs-lookup"><span data-stu-id="d8315-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="d8315-111">通常、XAML の型変換動作をサポートするカスタム型の作成者を実装する、<xref:System.ComponentModel.TypeConverter>独自一意をサポートするクラス`ConvertFrom`文字列からの動作です。</span><span class="sxs-lookup"><span data-stu-id="d8315-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="d8315-112">この動作は、XAML 属性の値として指定された文字列からの型変換を有効にし、解析済みのオブジェクト グラフのオブジェクトを生成できるように、文字列からオブジェクトを作成するために必要なサポートされるように、XAML プロセッサを提供します。</span><span class="sxs-lookup"><span data-stu-id="d8315-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="d8315-113">カスタム型のメンバー、またはカスタムの型が適用することによって示される<xref:System.ComponentModel.TypeConverterAttribute>、定義する属性で参照するカスタム<xref:System.ComponentModel.TypeConverter>実装します。</span><span class="sxs-lookup"><span data-stu-id="d8315-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="d8315-114">詳細については、次を参照してください。[型コンバーターの XAML の概要の](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="d8315-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8315-115">次のコード例では、型コンバーターのインスタンスを作成し、クラスにバインドする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d8315-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="d8315-116">コンバーターを実装するクラス`MyClassConverter`から継承する必要があります、<xref:System.ComponentModel.TypeConverter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="d8315-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="d8315-117">列挙型を持つプロパティがある場合は、プロパティを設定する前に、列挙値が有効かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="d8315-118">次のコード例では、列挙が呼び出されることが必要です`MyPropertyEnum`は宣言されています。</span><span class="sxs-lookup"><span data-stu-id="d8315-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="d8315-119">別の一般的な型コンバーターの使用では、オブジェクトを文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="d8315-120">次のコード例の名前を出力、<xref:System.Drawing.Color>変数に格納されている`c`です。</span><span class="sxs-lookup"><span data-stu-id="d8315-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="d8315-121">次のコード例に示すように、その名前から値を変換するのに型コンバーターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="d8315-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="d8315-122">次のコード例では、オブジェクトがサポートする標準の値のセットを印刷する型コンバーターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="d8315-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="d8315-123">継承<see cref="T:System.ComponentModel.TypeConverter" />を独自の変換要件を実装します。</span><span class="sxs-lookup"><span data-stu-id="d8315-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span></span> <span data-ttu-id="d8315-124">このクラスから継承する場合は、次のメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="d8315-124">When you inherit from this class, you can override the following methods:</span></span>  
  
-   <span data-ttu-id="d8315-125">カスタム型の変換をサポートするためにオーバーライド、 <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />、 <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />、 <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />、および<see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8315-125">To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span></span>  
  
-   <span data-ttu-id="d8315-126">型に変換する値を変更するオブジェクトを再作成する必要があります、オーバーライド、<see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />と<see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8315-126">To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span></span>  
  
-   <span data-ttu-id="d8315-127">型に変換するプロパティをサポートする、オーバーライド、<see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />と<see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8315-127">To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span></span> <span data-ttu-id="d8315-128">変換するクラスには、プロパティがないとプロパティを実装する必要があります、使用することができる場合、<see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />プロパティ記述子を実装するためのベースとしてのクラスです。</span><span class="sxs-lookup"><span data-stu-id="d8315-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span></span> <span data-ttu-id="d8315-129">継承する場合<see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />、オーバーライドする必要があります、<see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />と<see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8315-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span></span>  
  
-   <span data-ttu-id="d8315-130">型に変換する標準的な値をサポートする、オーバーライド、 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />、 <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />、<see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />と<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8315-130">To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="d8315-131">として、派生型をマークすることがあります<see langword="internal" />または<see langword="private" />で、型のインスタンスを作成できますが、<see cref="T:System.ComponentModel.TypeDescriptor" />クラスです。</span><span class="sxs-lookup"><span data-stu-id="d8315-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span> <span data-ttu-id="d8315-132">呼び出し元を有することにより、安全でないコードが信頼されているとは書き込みません。</span><span class="sxs-lookup"><span data-stu-id="d8315-132">Do not write insecure code by assuming the caller is trusted.</span></span> <span data-ttu-id="d8315-133">代わりに呼び出し元が部分的な信頼で、型のインスタンスを作成可能性がありますを前提としています。</span><span class="sxs-lookup"><span data-stu-id="d8315-133">Assume instead that callers might create instances of your type in partial trust.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="d8315-134">[全般] (XAML ではない) 目的の型コンバーターの詳細については、次を参照してください。[する方法: 実行する型コンバーターの実装](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)または[一般的な型変換](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada)です。</span><span class="sxs-lookup"><span data-stu-id="d8315-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56) or [Generalized Type Conversion](http://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span></span></para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8315-135"><see cref="T:System.ComponentModel.TypeConverter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d8315-135">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-136">コンバーターが特定の型のオブジェクトをコンバーターの型に変換できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-136">Returns whether this converter can convert an object of one type to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType"><span data-ttu-id="d8315-137">変換前の型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-137">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="d8315-138">コンバーターが特定の型のオブジェクトをコンバーターの型に変換できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-138">Returns whether this converter can convert an object of the given type to the type of this converter.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-139">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-139"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-140">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-140">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="d8315-141">値が戻りません`true`です。</span><span class="sxs-lookup"><span data-stu-id="d8315-141">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-142">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-142">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="d8315-143">変換前の型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-143">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="d8315-144">このコンバーターが、指定したコンテキストを使用して、指定された型のオブジェクトをこのコンバーターの型に変換できるかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-144">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-145">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-145"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-146">このメソッドが戻る、このクラスに実装された`false`がない限り、`sourceType`は、<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>です。</span><span class="sxs-lookup"><span data-stu-id="d8315-146">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-147">独自の変換要件を指定するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-147">Override this method to provide your own conversion requirements.</span></span>  
  
 <span data-ttu-id="d8315-148">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-148">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-149">このパラメーターを指定できます<see langword="null" />、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-149">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="d8315-150">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-150">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-151">コンバーターがオブジェクトを指定した型に変換できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-151">Returns whether this converter can convert the object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType"><span data-ttu-id="d8315-152">変換後の型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-152">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="d8315-153">コンバーターがオブジェクトを指定した型に変換できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-153">Returns whether this converter can convert the object to the specified type.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-154">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-154"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-155">場合`destinationType`文字列型の既定の実装は、<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>は常に返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="d8315-155">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-156">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-156">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="d8315-157">変換後の型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-157">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="d8315-158">このコンバーターが指定のコンテキストを使用して、オブジェクトを指定の型に変換できるかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-158">Returns whether this converter can convert the object to the specified type, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-159">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-159"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-160">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-160">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-161">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-161">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-162">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-162">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="d8315-163">場合`destinationType`文字列型の既定の実装は、<xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>は常に返します`true`です。</span><span class="sxs-lookup"><span data-stu-id="d8315-163">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-164">独自の変換要件を指定するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-164">Override this method to provide your own conversion requirements.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-165">指定した値をコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-165">Converts the given value to the type of this converter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8315-166">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-166">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-167">指定した値をコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-167">Converts the given value to the type of this converter.</span></span></summary>
        <returns><span data-ttu-id="d8315-168">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-168">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-169">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-169">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-170">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-170">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="d8315-171">現在のカルチャとして使用する <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-171">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="d8315-172">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-172">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-173">指定したコンテキストとカルチャ情報を使用して、指定されたオブジェクトをこのコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-173">Converts the given object to the type of this converter, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="d8315-174">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-174">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-175">通常、XAML の型変換動作をサポートするカスタム型の作成者を実装する、<xref:System.ComponentModel.TypeConverter>をサポートするクラス<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>文字列からの動作です。</span><span class="sxs-lookup"><span data-stu-id="d8315-175">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="d8315-176">この動作は、XAML 属性の値として指定された文字列からの型変換を有効にし、解析済みのオブジェクト グラフのオブジェクトを生成できるように、文字列からオブジェクトを作成するために必要なサポートされるように、XAML プロセッサを提供します。</span><span class="sxs-lookup"><span data-stu-id="d8315-176">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="d8315-177">カスタム型のメンバー、またはカスタムの型が適用することによって示される<xref:System.ComponentModel.TypeConverterAttribute>、定義する属性で参照するカスタム<xref:System.ComponentModel.TypeConverter>実装します。</span><span class="sxs-lookup"><span data-stu-id="d8315-177">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="d8315-178">XAML の目的で、通常を指定しないに基づいて分岐実装`culture`です。</span><span class="sxs-lookup"><span data-stu-id="d8315-178">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="d8315-179">これは、XAML がコンテキストでは、開発環境、プリコンパイル済みランタイムのカルチャに固有の情報 XAML は、XAML の型変換に関連するではないためです。</span><span class="sxs-lookup"><span data-stu-id="d8315-179">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="d8315-180">詳細については、次を参照してください。[型コンバーターの XAML の概要の](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="d8315-180">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-181">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-181">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-182">独自の変換要件を指定するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-182">Override this method to provide your own conversion requirements.</span></span>  
  
 <span data-ttu-id="d8315-183">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-183">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-184">このパラメーターを指定できます<see langword="null" />、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-184">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="d8315-185">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-185">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
 <span data-ttu-id="d8315-186">XAML とカスタムの型をサポートするために使用される型コンバーターの実装パターンの次を参照してください。[型コンバーターの XAML の概要の](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="d8315-186">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-187">インバリアント カルチャを使用して、値をコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-187">Converts the value to a type of this converter, using the invariant culture.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="d8315-188">変換対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-188">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-189">インバリアント カルチャを使用して、指定した文字列をコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-189">Converts the given string to the type of this converter, using the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="d8315-190">変換後のテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-190">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-191">既定の実装では、常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-191">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-192">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-192">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-193">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-193">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="d8315-194">変換対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-194">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-195">インバリアント カルチャと指定したコンテキストを使用して、指定した文字列をコンバーターの型に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-195">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span></span></summary>
        <returns><span data-ttu-id="d8315-196">変換後のテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-196">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-197">文字列は、適切なオブジェクトに変換できない場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="d8315-197">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="d8315-198">既定の実装では、常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-198">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="d8315-199">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-199">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-200">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-200">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-201">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-201">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-202">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-202">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-203">指定したテキストをオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-203">Converts the specified text to an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="d8315-204">変換対象のオブジェクトのテキスト形式。</span><span class="sxs-lookup"><span data-stu-id="d8315-204">The text representation of the object to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-205">指定したテキストをオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-205">Converts the specified text to an object.</span></span></summary>
        <returns><span data-ttu-id="d8315-206">変換後のテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-206">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-207">既定の実装では、常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-207">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8315-208">この関数の例は、次を参照してください。、<xref:System.ComponentModel.TypeConverter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="d8315-208">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-209">文字列を適切なオブジェクトに変換できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-209">The string cannot be converted into the appropriate object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-210">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-210">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="text"><span data-ttu-id="d8315-211">変換対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-211">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-212">指定したコンテキストを使用して、指定したテキストをオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-212">Converts the given text to an object, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="d8315-213">変換後のテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-213">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-214">文字列は、適切なオブジェクトに変換できない場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="d8315-214">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="d8315-215">既定の実装では、常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-215">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="d8315-216">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-216">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-217">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-217">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-218">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-218">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-219">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-219">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-220">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-220">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="d8315-221"><see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-221">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="d8315-222"><see langword="null" /> を渡すと、現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8315-222">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="text"><span data-ttu-id="d8315-223">変換対象の <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-223">The <see cref="T:System.String" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-224">指定したコンテキストとカルチャ情報を使用して、指定したテキストをオブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-224">Converts the given text to an object, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="d8315-225">変換後のテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-225">An <see cref="T:System.Object" /> that represents the converted text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-226">文字列は、適切なオブジェクトに変換できない場合は、例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="d8315-226">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="d8315-227">既定の実装では、常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-227">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="d8315-228">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-228">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-229">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-229">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-230">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-230">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-231">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-231">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-232">指定した値オブジェクトを、指定した型に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-232">Converts the given value object to the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8315-233">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-233">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="d8315-234"><c>value</c> パラメーターの変換先の <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-234">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span></span></param>
        <summary><span data-ttu-id="d8315-235">引数を使用して、指定した値オブジェクトを、指定した型に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-235">Converts the given value object to the specified type, using the arguments.</span></span></summary>
        <returns><span data-ttu-id="d8315-236">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-236">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-237">最も一般的な型との間の変換には、文字列オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d8315-237">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="d8315-238">この実装を呼び出す<xref:System.Object.ToString%2A>オブジェクトのオブジェクトが有効な場合、および変換先の型が文字列の場合。</span><span class="sxs-lookup"><span data-stu-id="d8315-238">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d8315-239"><paramref name="destinationType" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d8315-239">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-240">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-240">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-241">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-241">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="d8315-242"><see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-242">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="d8315-243"><see langword="null" /> を渡すと、現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8315-243">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="d8315-244">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-244">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="d8315-245"><c>value</c> パラメーターの変換先の <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-245">The <see cref="T:System.Type" /> to convert the <c>value</c> parameter to.</span></span></param>
        <summary><span data-ttu-id="d8315-246">指定したコンテキストとカルチャ情報を使用して、指定した値オブジェクトを、指定した型に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-246">Converts the given value object to the specified type, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="d8315-247">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-247">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-248">変換前後の型として最もよく使用されるのは文字列オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d8315-248">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="d8315-249">この実装を呼び出す<xref:System.Object.ToString%2A>オブジェクトのオブジェクトが有効な場合、および変換先の型が文字列の場合。</span><span class="sxs-lookup"><span data-stu-id="d8315-249">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="d8315-250">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-250">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-251">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-251">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-252">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-252">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="d8315-253">通常、XAML の型変換動作をサポートするカスタム型の作成者を実装する、<xref:System.ComponentModel.TypeConverter>をサポートするクラス<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>文字列からの動作です。</span><span class="sxs-lookup"><span data-stu-id="d8315-253">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="d8315-254">これらの型コンバーターを実装することがありますも<xref:System.ComponentModel.TypeConverter.ConvertTo%2A>XAML にシリアル化をサポートするためにします。</span><span class="sxs-lookup"><span data-stu-id="d8315-254">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="d8315-255">は一部の XAML シリアル化のシナリオを適切に対処できない<xref:System.ComponentModel.TypeConverter>だけです。</span><span class="sxs-lookup"><span data-stu-id="d8315-255">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="d8315-256">このような場合でも定義するために必要な場合があります、<xref:System.Windows.Markup.ValueSerializer>によって行われるシリアル化のケースを処理する<xref:System.ComponentModel.TypeConverter.ConvertTo%2A>です。</span><span class="sxs-lookup"><span data-stu-id="d8315-256">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="d8315-257">詳細については、「<xref:System.Windows.Markup.ValueSerializer>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d8315-257">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d8315-258"><paramref name="destinationType" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d8315-258">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-259">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-259">The conversion cannot be performed.</span></span></exception>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-260">独自の変換要件を指定するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-260">Override this method to provide your own conversion requirements.</span></span>  
  
 <span data-ttu-id="d8315-261">XAML とカスタムの型をサポートするために使用される型コンバーターの実装パターンの次を参照してください。[型コンバーターの XAML の概要の](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md)します。</span><span class="sxs-lookup"><span data-stu-id="d8315-261">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-262">指定した値を、インバリアント カルチャを使用した文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-262">Converts the specified value to a culture-invariant string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8315-263">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-263">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-264">指定した値を、インバリアント カルチャを使用した文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-264">Converts the specified value to a culture-invariant string representation.</span></span></summary>
        <returns><span data-ttu-id="d8315-265">変換後の値を表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-265">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-266">`context`パラメーターを使用するをこのコンバーターの呼び出される環境に関する追加情報を抽出します。</span><span class="sxs-lookup"><span data-stu-id="d8315-266">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="d8315-267">これは `null` の場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="d8315-267">This can be `null`, so always check.</span></span> <span data-ttu-id="d8315-268">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-268">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="d8315-269">値のフォーマッタの実装によっては、オブジェクトのインスタンスを再作成する値のフォーマッタに返される文字列を渡すことがあります。</span><span class="sxs-lookup"><span data-stu-id="d8315-269">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-270">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-270">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-271">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-271">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="d8315-272">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-272">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-273">指定したコンテキストを使用して、指定した値をインバリアント カルチャを使用した文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-273">Converts the specified value to a culture-invariant string representation, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="d8315-274">変換後の値を表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-274">A <see cref="T:System.String" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-275">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-275">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-276">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-276">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-277">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-277">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="d8315-278">値のフォーマッタの実装によっては、オブジェクトのインスタンスを再作成する値のフォーマッタに返される文字列を渡すことがあります。</span><span class="sxs-lookup"><span data-stu-id="d8315-278">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-279">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-279">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-280">指定した値を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-280">Converts the specified value to a string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8315-281">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-281">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-282">指定した値を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-282">Converts the specified value to a string representation.</span></span></summary>
        <returns><span data-ttu-id="d8315-283">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-283">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-284">値のフォーマッタの実装によっては、オブジェクトのインスタンスを再作成する値のフォーマッタに返される文字列を渡すことがあります。</span><span class="sxs-lookup"><span data-stu-id="d8315-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8315-285">この関数の例は、次を参照してください。、<xref:System.ComponentModel.TypeConverter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="d8315-285">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-286">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-286">The conversion cannot be performed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-287">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-287">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="d8315-288">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-288">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-289">指定したコンテキストを使用して、指定した値を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-289">Converts the given value to a string representation, using the given context.</span></span></summary>
        <returns><span data-ttu-id="d8315-290">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-290">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-291">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-291">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-292">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-292">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-293">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-293">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="d8315-294">値のフォーマッタの実装によっては、オブジェクトのインスタンスを再作成する値のフォーマッタに返される文字列を渡すことがあります。</span><span class="sxs-lookup"><span data-stu-id="d8315-294">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-295">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-295">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-296">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-296">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="d8315-297"><see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-297">A <see cref="T:System.Globalization.CultureInfo" />.</span></span> <span data-ttu-id="d8315-298"><see langword="null" /> を渡すと、現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8315-298">If <see langword="null" /> is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="d8315-299">変換対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-299">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="d8315-300">指定したコンテキストとカルチャ情報を使用して、指定した値を文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="d8315-300">Converts the given value to a string representation, using the specified context and culture information.</span></span></summary>
        <returns><span data-ttu-id="d8315-301">変換後の値を表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-301">An <see cref="T:System.Object" /> that represents the converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-302">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-302">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-303">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-303">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-304">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-304">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="d8315-305">値のフォーマッタの実装によっては、オブジェクトのインスタンスを再作成する値のフォーマッタに返される文字列を渡すことがあります。</span><span class="sxs-lookup"><span data-stu-id="d8315-305">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-306">変換を実行できません。</span><span class="sxs-lookup"><span data-stu-id="d8315-306">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-307"><see cref="T:System.Object" /> の一連のプロパティ値を指定して、そのオブジェクトを再作成します。</span><span class="sxs-lookup"><span data-stu-id="d8315-307">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues"><span data-ttu-id="d8315-308">新しいプロパティ値のディクショナリを表す <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-308">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span></span></param>
        <summary><span data-ttu-id="d8315-309"><see cref="T:System.Object" /> の一連のプロパティ値を指定して、そのオブジェクトを再作成します。</span><span class="sxs-lookup"><span data-stu-id="d8315-309">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="d8315-310">指定した <see cref="T:System.Object" /> を表す <see cref="T:System.Collections.IDictionary" />。オブジェクトを作成できない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-310">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="d8315-311">このメソッドは常に <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-311">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-312">不変であって変更可能なプロパティを提供するオブジェクトに対してこのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-312">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="d8315-313">によって提供される、ディクショナリ、`propertyValues`パラメーターが、一連の名前/値ペアを持つ各プロパティのいずれかから返された<xref:System.ComponentModel.TypeConverter.GetProperties%2A>です。</span><span class="sxs-lookup"><span data-stu-id="d8315-313">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-314">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-314">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="d8315-315">新しいプロパティ値の <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-315">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span></span></param>
        <summary><span data-ttu-id="d8315-316">この <see cref="T:System.ComponentModel.TypeConverter" /> を関連付ける型のインスタンスを作成します。指定されたコンテキストと、与えられているオブジェクトのプロパティ値のセットを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-316">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="d8315-317">指定した <see cref="T:System.Object" /> を表す <see cref="T:System.Collections.IDictionary" />。オブジェクトを作成できない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-317">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span></span> <span data-ttu-id="d8315-318">このメソッドは常に <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-318">This method always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-319">不変であって変更可能なプロパティを提供するオブジェクトに対してこのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-319">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-320">変換する型からその値を変更するオブジェクトを再作成する必要がある場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-320">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
 <span data-ttu-id="d8315-321">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-321">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-322">このパラメーターを指定できます<see langword="null" />、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-322">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="d8315-323">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-323">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
 <span data-ttu-id="d8315-324">によって提供される、ディクショナリ、<paramref name="propertyValues" />パラメーターが、一連の名前/値ペアを持つ各プロパティのいずれかから返された<see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />です。</span><span class="sxs-lookup"><span data-stu-id="d8315-324">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8315-325">変換対象の <see cref="T:System.Object" />。オブジェクトを使用できない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-325">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <summary><span data-ttu-id="d8315-326">変換を実行できないときにスローする例外を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-326">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="d8315-327">変換を実行できなかった場合にスローされる例外を表す <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-327">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-328">このメソッドによって自動的にスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8315-328">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8315-329">変換対象の <see cref="T:System.Object" />。オブジェクトを使用できない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-329">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span></span></param>
        <param name="destinationType"><span data-ttu-id="d8315-330">変換しようとした型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-330">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span></span></param>
        <summary><span data-ttu-id="d8315-331">変換を実行できないときにスローする例外を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-331">Returns an exception to throw when a conversion cannot be performed.</span></span></summary>
        <returns><span data-ttu-id="d8315-332">変換を実行できなかった場合にスローされる例外を表す <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-332">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d8315-333">このメソッドによって自動的にスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8315-333">Automatically thrown by this method.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-334">このオブジェクトの値を変更するときに <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> メソッドを呼び出して、新しい値を作成する必要があるかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-334">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8315-335">このオブジェクトの値を変更するときに <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> メソッドを呼び出して、新しい値を作成する必要があるかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-335">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-336">このオブジェクトのプロパティを変更するときに <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> を呼び出して新しい値を作成する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-336"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-337">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-337">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="d8315-338">このオブジェクトの値を変更するときに、指定したコンテキストを使用して <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> を呼び出して、新しい値を作成する必要があるかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-338">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-339">このオブジェクトのプロパティを変更するときに <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> を呼び出して新しい値を作成する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-339"><see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-340">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-340">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-341">変換する型からその値を変更するオブジェクトを再作成する必要がある場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-341">Override this method if the type you want to convert must re-create the object to change its value.</span></span>  
  
 <span data-ttu-id="d8315-342">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-342">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-343">このパラメーターを指定できます<see langword="null" />、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-343">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="d8315-344">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-344">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-345">value パラメーターに指定された配列型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-345">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8315-346">プロパティを取得する対象となる配列の型を指定する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-346">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="d8315-347">value パラメーターに指定された配列型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-347">Returns a collection of properties for the type of array specified by the value parameter.</span></span></summary>
        <returns><span data-ttu-id="d8315-348">指定されたデータ型に対して公開されているプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。コレクションにプロパティが格納されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-348">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-349">このクラスに実装されると、このメソッドは常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-349">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="d8315-350">既定では、型はプロパティを返しません。</span><span class="sxs-lookup"><span data-stu-id="d8315-350">By default, a type does not return properties.</span></span> <span data-ttu-id="d8315-351">このメソッドの簡単な実装を呼び出すことができます<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>の正しいデータ型。</span><span class="sxs-lookup"><span data-stu-id="d8315-351">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-352">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-352">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="d8315-353">プロパティを取得する対象となる配列の型を指定する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-353">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <summary><span data-ttu-id="d8315-354">指定したコンテキストを使用して、value パラメーターで指定された配列型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-354">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="d8315-355">指定されたデータ型に対して公開されているプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。コレクションにプロパティが格納されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-355">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-356">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-356">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-357">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-357">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-358">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-358">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="d8315-359">このクラスに実装されると、このメソッドは常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-359">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="d8315-360">既定では、型はプロパティを返しません。</span><span class="sxs-lookup"><span data-stu-id="d8315-360">By default, a type does not return properties.</span></span> <span data-ttu-id="d8315-361">このメソッドの簡単な実装を呼び出すことができます<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>の正しいデータ型。</span><span class="sxs-lookup"><span data-stu-id="d8315-361">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-362">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-362">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="d8315-363">プロパティを取得する対象となる配列の型を指定する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-363">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span></span></param>
        <param name="attributes"><span data-ttu-id="d8315-364">フィルターとして使用される、<see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="d8315-364">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span></span></param>
        <summary><span data-ttu-id="d8315-365">指定されたコンテキストと属性を使用して、値パラメーターで指定された配列型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-365">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span></span></summary>
        <returns><span data-ttu-id="d8315-366">指定されたデータ型に対して公開されているプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。コレクションにプロパティが格納されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-366">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-367">このクラスに実装されると、このメソッドは常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-367">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-368">変換する型のプロパティをサポートしている場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-368">Override this method if the type you want to convert supports properties.</span></span>  
  
 <span data-ttu-id="d8315-369">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-369">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-370">このパラメーターを指定できます<see langword="null" />、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-370">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="d8315-371">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-371">Also, properties on the context object can return <see langword="null" />.</span></span>  
  
 <span data-ttu-id="d8315-372">属性の配列は、配列をフィルター処理に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8315-372">The attributes array is used to filter the array.</span></span> <span data-ttu-id="d8315-373">属性が混在していることができます<see cref="T:System.Type" />と<see cref="T:System.Attribute" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d8315-373">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span></span> <span data-ttu-id="d8315-374">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d8315-374">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="d8315-375">A <see cref="T:System.Type" /> ; ワイルドカードとして扱われるを持つプロパティと一致する、<see cref="T:System.Type" />属性のセットにします。</span><span class="sxs-lookup"><span data-stu-id="d8315-375">A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="d8315-376">プロパティがない場合、<see cref="T:System.Attribute" />同じクラスのプロパティに含まれていない、返される配列。</span><span class="sxs-lookup"><span data-stu-id="d8315-376">If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="d8315-377">属性がのインスタンスの場合<see cref="T:System.Attribute" />プロパティは完全に一致する必要があります、または返される配列に含まれていません。</span><span class="sxs-lookup"><span data-stu-id="d8315-377">If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="d8315-378">場合、<see cref="T:System.Attribute" />インスタンスが指定されて、既定のプロパティは、のインスタンスがない場合でも返される配列に含まれている、<see cref="T:System.Attribute" />プロパティにします。</span><span class="sxs-lookup"><span data-stu-id="d8315-378">If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-379">オブジェクトがプロパティをサポートしているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-379">Returns whether this object supports properties.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8315-380">オブジェクトがプロパティをサポートしているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-380">Returns whether this object supports properties.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-381">このオブジェクトのプロパティを見つけるために <see langword="true" /> を呼び出す必要がある場合は <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-381"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-382">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-382">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-383">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-383">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="d8315-384">指定したコンテキストを使用して、このオブジェクトがプロパティをサポートするかどうかを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-384">Returns whether this object supports properties, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-385">このオブジェクトのプロパティを見つけるために <see langword="true" /> を呼び出す必要がある場合は <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-385"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-386">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-386">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-387">変換する型のプロパティをサポートしている場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-387">Override this method if the type you want to convert supports properties.</span></span>  
  
 <span data-ttu-id="d8315-388">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-388">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-389">このパラメーターを指定できます<see langword="null" />、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-389">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="d8315-390">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-390">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-391">型コンバーターがデザインされた対象のデータ型の標準値のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-391">Returns a collection of standard values for the data type this type converter is designed for.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8315-392">型コンバーターがデザインされた対象であるデータ型の既定のコンテキストから、標準値のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-392">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span></span></summary>
        <returns><span data-ttu-id="d8315-393">有効値の標準セットを格納している <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />。データ型が標準値セットをサポートしていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-393">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-394">このクラスに実装されると、このメソッドは常に `null` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-394">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-395">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。このパラメーターは、コンバーターが呼び出される環境に関する追加情報を抽出するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="d8315-395">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-396">このパラメーターまたはこのパラメーターのプロパティには、<see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d8315-396">This parameter or properties of this parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d8315-397">フォーマット コンテキストが提供されている場合、この型コンバーターが対象とするデータ型の標準値のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-397">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span></span></summary>
        <returns><span data-ttu-id="d8315-398">有効値の標準セットを保持している <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />。データ型が標準値セットをサポートしていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-398">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-399">実装されている<xref:System.ComponentModel.TypeConverter>、このメソッドは常に返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="d8315-399">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8315-400">この関数の例は、次を参照してください。、<xref:System.ComponentModel.TypeConverter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="d8315-400">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-401">変換する型は、標準の値をサポートしている場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-401">Override this method if the type you want to convert supports standard values.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-402"><see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> から返された標準値のコレクションが、排他的なリストかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-402">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8315-403"><see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> から返された標準値のコレクションが、排他的なリストかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-403">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-404"><see langword="true" /> から返された <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> が、有効値の排他的なリストの場合は <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />。他の値も有効である場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-404"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-405">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-405">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="d8315-406">列挙型の値リストのように、リストが排他的な場合は、他の値は有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="d8315-406">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="d8315-407">リストが排他的ではない場合、<xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> メソッドが提供する標準値に加えて、他にも有効な値が存在する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-407">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="d8315-408">値が排他的である場合、<xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> で返されるリストでこれらの値を編集することはできません。</span><span class="sxs-lookup"><span data-stu-id="d8315-408">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-409">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-409">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="d8315-410">指定したコンテキストを使用して、<see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> から返された標準値のコレクションが有効値の排他的なリストかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-410">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-411"><see langword="true" /> から返された <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> が、有効値の排他的なリストの場合は <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />。他の値も有効である場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-411"><see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-412">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-412">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="d8315-413">列挙型の値リストのように、リストが排他的な場合は、他の値は有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="d8315-413">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="d8315-414">リストが排他的ではない場合、<xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> メソッドが提供する標準値に加えて、他にも有効な値が存在する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-414">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="d8315-415">値が排他的である場合、<xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> で返されるリストでこれらの値を編集することはできません。</span><span class="sxs-lookup"><span data-stu-id="d8315-415">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-416">変換する型は、標準の値をサポートしている場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-416">Override this method if the type you want to convert supports standard values.</span></span>  
  
 <span data-ttu-id="d8315-417">コンバーターが呼び出される環境に関する追加情報を抽出するには、<paramref name="context" /> パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-417">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-418">このパラメーターを指定できます<see langword="null" />、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-418">This parameter can be <see langword="null" />, so always check it.</span></span> <span data-ttu-id="d8315-419">また、コンテキスト オブジェクトのプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-419">Also, properties on the context object can return <see langword="null" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-420">リストから選択できる標準値セットをオブジェクトがサポートするかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-420">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d8315-421">リストから選択できる標準値セットをオブジェクトがサポートするかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-421">Returns whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-422">オブジェクトがサポートしている標準値セットを見つけるために <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> を呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-422"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-423">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-423">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="d8315-424">指定したコンテキストを使用して、リストから選択できる標準値セットをオブジェクトがサポートするかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-424">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-425">オブジェクトがサポートしている標準値セットを見つけるために <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> を呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-425"><see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-426">このクラスに実装されると、このメソッドは常に `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-426">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="d8315-427">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-427">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-428">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-428">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-429">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-429">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-430">変換する型は、標準の値をサポートしている場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-430">Override this method if the type you want to convert supports standard values.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d8315-431">指定した値オブジェクトが型に対して有効かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-431">Returns whether the given value object is valid for this type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d8315-432">有効かどうかを確認する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d8315-432">The object to test for validity.</span></span></param>
        <summary><span data-ttu-id="d8315-433">指定した値オブジェクトが型に対して有効かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-433">Returns whether the given value object is valid for this type.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-434">指定した値がオブジェクトに対して有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-434"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-435">以降で[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.ComponentModel.TypeConverter.IsValid%2A>メソッドからの例外のキャッチ、<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>と<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8315-435">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="d8315-436">入力値の型が発生した場合<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>を返す`false`、入力値が発生した場合または<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>で例外が発生する、<xref:System.ComponentModel.TypeConverter.IsValid%2A>メソッドを返します。`false`です。</span><span class="sxs-lookup"><span data-stu-id="d8315-436">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="d8315-437">従来の動作を有効にするには、application1.exe.config など、アプリケーションの構成ファイルに次の行を挿入します。</span><span class="sxs-lookup"><span data-stu-id="d8315-437">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-438">変換する型は、検証可能な標準の値をサポートしている場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-438">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
 <span data-ttu-id="d8315-439"><see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />かどうかをするのではなく、型の中で値を検証するメソッドが使用される<paramref name="value" />指定された型に変換できます。</span><span class="sxs-lookup"><span data-stu-id="d8315-439">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="d8315-440">たとえば、<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />の特定の値が列挙型の有効なかどうかを判断するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="d8315-440">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="d8315-441">例については、「<see cref="T:System.ComponentModel.EnumConverter" />」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d8315-441">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span>  
  
 <span data-ttu-id="d8315-442">独自に記述することができます<c>WillConvertSucceed</c>メソッドをラップすることによって、<see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" />と<see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" />例外ブロック内のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8315-442">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="d8315-443">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-443">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="value"><span data-ttu-id="d8315-444">有効かどうかを確認する対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-444">The <see cref="T:System.Object" /> to test for validity.</span></span></param>
        <summary><span data-ttu-id="d8315-445">指定した値オブジェクトが、この型に対して有効か、指定したコンテキストに対して有効かを返します。</span><span class="sxs-lookup"><span data-stu-id="d8315-445">Returns whether the given value object is valid for this type and for the specified context.</span></span></summary>
        <returns>
          <span data-ttu-id="d8315-446">指定した値がオブジェクトに対して有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-446"><see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-447">コンバーターが呼び出される環境に関する追加情報を抽出するには、`context` パラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8315-447">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="d8315-448">このパラメーターを指定できます`null`、ので、常に確認します。</span><span class="sxs-lookup"><span data-stu-id="d8315-448">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="d8315-449">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="d8315-449">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="d8315-450">以降で[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]、<xref:System.ComponentModel.TypeConverter.IsValid%2A>メソッドからの例外のキャッチ、<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>と<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d8315-450">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="d8315-451">入力値の型が発生した場合<xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>を返す`false`、入力値が発生した場合または<xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>で例外が発生する、<xref:System.ComponentModel.TypeConverter.IsValid%2A>メソッドを返します。`false`です。</span><span class="sxs-lookup"><span data-stu-id="d8315-451">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="d8315-452">従来の動作を有効にするには、application1.exe.config など、アプリケーションの構成ファイルに次の行を挿入します。</span><span class="sxs-lookup"><span data-stu-id="d8315-452">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="d8315-453">この関数の例は、次を参照してください。、<xref:System.ComponentModel.TypeConverter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="d8315-453">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="d8315-454">変換する型は、検証可能な標準の値をサポートしている場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="d8315-454">Override this method if the type you want to convert supports standard values that can be validated.</span></span>  
  
 <span data-ttu-id="d8315-455"><see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />かどうかをするのではなく、型の中で値を検証するメソッドが使用される<paramref name="value" />指定された型に変換できます。</span><span class="sxs-lookup"><span data-stu-id="d8315-455">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span></span> <span data-ttu-id="d8315-456">たとえば、<see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />の特定の値が列挙型の有効なかどうかを判断するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="d8315-456">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span></span> <span data-ttu-id="d8315-457">例については、「<see cref="T:System.ComponentModel.EnumConverter" />」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d8315-457">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span></span></para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props"><span data-ttu-id="d8315-458">並べ替える対象のプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-458">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span></span></param>
        <param name="names"><span data-ttu-id="d8315-459">コレクション内でプロパティを並べ替える順序で並べた名前の配列。</span><span class="sxs-lookup"><span data-stu-id="d8315-459">An array of names in the order you want the properties to appear in the collection.</span></span></param>
        <summary><span data-ttu-id="d8315-460">プロパティのコレクションを並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="d8315-460">Sorts a collection of properties.</span></span></summary>
        <returns><span data-ttu-id="d8315-461">並べ替えられたプロパティを格納した <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="d8315-461">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8315-462">既にに含まれていない名前の配列、コレクション内のすべてのプロパティは、最後にアルファベット順に追加されます。</span><span class="sxs-lookup"><span data-stu-id="d8315-462">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="d8315-463">場合、`names`パラメーターが空の配列または`null`コレクション内のすべてのプロパティがアルファベット順に並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="d8315-463">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>