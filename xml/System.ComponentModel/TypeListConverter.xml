<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeListConverter.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5544ec8217d41b38a4b106c84564444373301f2f9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">544ec8217d41b38a4b106c84564444373301f2f9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.TypeListConverter">
          <source>Provides a type converter that can be used to populate a list box with available types.</source>
          <target state="translated">利用可能な型でリスト ボックスの内容を設定するために使用できる型コンバーターを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>You must provide the list of types to the constructor of this <ph id="ph1">`abstract`</ph> class.</source>
          <target state="translated">このコンス トラクターに型の一覧を指定する必要があります<ph id="ph1">`abstract`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
          <target state="translated">型コンバーターの詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>基底クラスと<bpt id="p1">[</bpt>する方法: 実行する型コンバーターを実装する<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>You should never create an instance of a <ph id="ph1">&lt;xref:System.ComponentModel.TypeListConverter&gt;</ph>.</source>
          <target state="translated">インスタンスは作成しないで、<ph id="ph1">&lt;xref:System.ComponentModel.TypeListConverter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method of <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
          <target state="translated">代わりを呼び出して、<ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph>メソッドの<ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>For more information, see the examples in the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class.</source>
          <target state="translated">詳細については、例を参照してください、<ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>基本クラスです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeListConverter" /&gt;</ph>, you can override the following methods.</source>
          <target state="translated">継承する場合<ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeListConverter" /&gt;</ph>、次のメソッドをオーバーライドすることができます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>To support custom type conversion, override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" /&gt;</ph>, and <ph id="ph4">&lt;see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /&gt;</ph> methods.</source>
          <target state="translated">カスタム型の変換をサポートするためにオーバーライド、 <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" /&gt;</ph>、 <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" /&gt;</ph>、 <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" /&gt;</ph>、および<ph id="ph4">&lt;see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>To convert types that must re-create the object to change its value, override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /&gt;</ph> methods.</source>
          <target state="translated">型に変換する値を変更するオブジェクトを再作成する必要があります、オーバーライド、<ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>To convert types that support properties, override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /&gt;</ph> methods.</source>
          <target state="translated">型に変換するプロパティをサポートする、オーバーライド、<ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>If the class you are converting does not have properties, and you need to implement properties, you can use the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph> class as a base for implementing the property descriptors.</source>
          <target state="translated">変換するクラスには、プロパティがないとプロパティを実装する必要があります、使用することができる場合、<ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph>プロパティ記述子を実装するためのベースとしてのクラスです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>When you inherit from <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph>, you must override the <ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph> and <ph id="ph3">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph> methods.</source>
          <target state="translated">継承する場合<ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /&gt;</ph>、オーバーライドする必要があります、<ph id="ph2">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /&gt;</ph>と<ph id="ph3">&lt;see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.TypeListConverter">
          <source>To convert types that support standard values, override the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph>, <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /&gt;</ph> and <ph id="ph4">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /&gt;</ph> methods.</source>
          <target state="translated">型に変換する標準的な値をサポートする、オーバーライド、 <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /&gt;</ph>、 <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" /&gt;</ph>、<ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /&gt;</ph>と<ph id="ph4">&lt;see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])">
          <source>The array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to use as the available types.</source>
          <target state="translated">使用可能な型として使用する <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeListConverter" /&gt;</ph> class using the type array as the available types.</source>
          <target state="translated">使用可能な型として型の配列を使用して、<ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeListConverter" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.#ctor(System.Type[])">
          <source>The types provided in the <ph id="ph1">`types`</ph> parameter can be used to populate a list box with the available types.</source>
          <target state="translated">提供される型、<ph id="ph1">`types`</ph>パラメーターは、利用可能な型でリスト ボックスの設定を使用することができます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">書式指定コンテキストを提供する <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the source object.</source>
          <target state="translated">ソース オブジェクトの <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Gets a value indicating whether this converter can convert the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the source object using the given context.</source>
          <target state="translated">このコンバーターが、特定のコンテキストを使用してソース オブジェクトの特定の <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> を変換できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this converter can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コンバーターが変換を実行できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">書式指定コンテキストを提供する <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type you wish to convert to.</source>
          <target state="translated">変換後の型を表す <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</source>
          <target state="translated">このコンバーターが、コンテキストを使用してオブジェクトを特定の目的の型に変換できるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this converter can perform the conversion; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コンバーターが変換を実行できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated"><ph id="ph1">`context`</ph> パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">これは <ph id="ph1">`null`</ph> の場合があるため、常に確認してください。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">また、コンテキスト オブジェクトのプロパティも <ph id="ph1">`null`</ph> を返す場合があります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <source>Override this method to provide your own conversion requirements.</source>
          <target state="translated">独自の変換要件を指定するには、このメソッドをオーバーライドします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">書式指定コンテキストを提供する <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that specifies the culture used to represent the font.</source>
          <target state="translated">フォントを表すときに使用するカルチャを指定する <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">変換対象の <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>Converts the specified object to the native type of the converter.</source>
          <target state="translated">指定したオブジェクトをコンバーターのネイティブな型に変換します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted value.</source>
          <target state="translated">変換後の値を表す <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">書式指定コンテキストを提供する <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An optional <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>.</source>
          <target state="translated">オプションの <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>If not supplied, the current culture is assumed.</source>
          <target state="translated">指定されなかった場合は、現在のカルチャが使用されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to convert.</source>
          <target state="translated">変換対象の <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to convert the value to.</source>
          <target state="translated">値の変換後の <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Converts the given value object to the specified destination type.</source>
          <target state="translated">値オブジェクトを目的の型に変換します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents the converted <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">変換後の <ph id="ph2">&lt;paramref name="value" /&gt;</ph> を表す <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This method most commonly converts types to and from string objects.</source>
          <target state="translated">このメソッドは、最も一般的には、文字列オブジェクトに対する型の機能を変換します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated"><ph id="ph1">`context`</ph> パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">これは <ph id="ph1">`null`</ph> の場合があるため、常に確認してください。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">また、コンテキスト オブジェクトのプロパティも <ph id="ph1">`null`</ph> を返す場合があります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source><ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destinationType" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <source>The conversion cannot be performed.</source>
          <target state="translated">変換を実行できません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">書式指定コンテキストを提供する <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a collection of standard values for the data type this validator is designed for.</source>
          <target state="translated">検証コントロールがデザインされた対象のデータ型の標準値のコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> that holds a standard set of valid values, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the data type does not support a standard set of values.</source>
          <target state="translated">有効値の標準セットを保持している <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph>。データ型が標準値セットをサポートしていない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated"><ph id="ph1">`context`</ph> パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">これは <ph id="ph1">`null`</ph> の場合があるため、常に確認してください。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">また、コンテキスト オブジェクトのプロパティも <ph id="ph1">`null`</ph> を返す場合があります。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">書式指定コンテキストを提供する <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a value indicating whether the list of standard values returned from the <ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> method is an exclusive list.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> メソッドから返された標準値のリストが、排他的リストかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> because the <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> returned from <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> is an exhaustive list of possible values.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /&gt;</ph> から返された <ph id="ph3">&lt;see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> が有効値の排他的リストであるため、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>This method never returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このメソッドが <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返すことはありません。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated"><ph id="ph1">`context`</ph> パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">これは <ph id="ph1">`null`</ph> の場合があるため、常に確認してください。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">また、コンテキスト オブジェクトのプロパティも <ph id="ph1">`null`</ph> を返す場合があります。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <source>When the list is exclusive, no other values are valid besides the list of standard values the <ph id="ph1">&lt;xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A&gt;</ph> method provides.</source>
          <target state="translated">リストが排他的なときは、その他の値は無効標準値のリストだけでなく、<ph id="ph1">&lt;xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A&gt;</ph>メソッドを提供します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph> that provides a format context.</source>
          <target state="translated">書式指定コンテキストを提供する <ph id="ph1">&lt;see cref="T:System.ComponentModel.ITypeDescriptorContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.</source>
          <target state="translated">指定したコンテキストを使用して、リストから選択できる標準値セットをオブジェクトがサポートするかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> because <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> should be called to find a common set of values the object supports.</source>
          <target state="translated">オブジェクトがサポートしている標準値セットを見つけるために <ph id="ph2">&lt;see cref="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /&gt;</ph> を呼び出す必要があるので、<ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This method never returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">このメソッドが <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返すことはありません。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
          <target state="translated"><ph id="ph1">`context`</ph> パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
          <target state="translated">これは <ph id="ph1">`null`</ph> の場合があるため、常に確認してください。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
          <target state="translated">また、コンテキスト オブジェクトのプロパティも <ph id="ph1">`null`</ph> を返す場合があります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>