<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="487d8f80afe19a48da2d943e861f20020a0daf20" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52196570" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizeInvoke" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizeInvoke" />
  <TypeSignature Language="F#" Value="type ISynchronizeInvoke = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9f3ef-101">デリゲートを同期的または非同期的に実行する方法を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9f3ef-101">Provides a way to synchronously or asynchronously execute a delegate.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f3ef-102"><xref:System.ComponentModel.ISynchronizeInvoke>インターフェイスは、イベントの発生についてのオブジェクト間の同期および非同期の通信を提供します。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-102">The <xref:System.ComponentModel.ISynchronizeInvoke> interface provides synchronous and asynchronous communication between objects about the occurrence of an event.</span></span> <span data-ttu-id="9f3ef-103">このインターフェイスを実装するオブジェクトには、イベントが発生すると、およびイベントに関するクエリに応答できることを示す通知を受信できます。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-103">Objects that implement this interface can receive notification that an event has occurred, and they can respond to queries about the event.</span></span> <span data-ttu-id="9f3ef-104">これにより、クライアントは、最初の完了に依存する後続の要求を送信する前に、その 1 つの要求が処理された保証できます。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-104">In this way, clients can ensure that one request has been processed before they submit a subsequent request that depends on completion of the first.</span></span>  
  
 <span data-ttu-id="9f3ef-105"><xref:System.ComponentModel.ISynchronizeInvoke>クラスには、プロセスを開始する 2 つの方法が用意されています。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-105">The <xref:System.ComponentModel.ISynchronizeInvoke> class provides two ways to invoke a process:</span></span>  
  
1.  <span data-ttu-id="9f3ef-106">使用して、非同期的に、<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-106">Asynchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> method.</span></span> <span data-ttu-id="9f3ef-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> プロセスを開始し、すぐに返します。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-107"><xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> starts a process and then returns immediately.</span></span> <span data-ttu-id="9f3ef-108">使用<xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A>によって開始されたプロセスを待機する<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>が完了するとします。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-108">Use <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to wait until the process started by <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> completes.</span></span>  
  
2.  <span data-ttu-id="9f3ef-109">使用して同期的に、<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-109">Synchronously, by using the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method.</span></span> <span data-ttu-id="9f3ef-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> プロセス、待機を完了するまで、および返しますを開始します。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-110"><xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> starts a process, waits until it completes, and then returns.</span></span> <span data-ttu-id="9f3ef-111">使用<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>スレッドが適切なスレッドの呼び出しをマーシャ リングする呼び出し元のスレッドからさまざまなコントロールのメインとします。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-111">Use <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when the control's main thread is different from the calling thread to marshal the call to the proper thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f3ef-112"><xref:System.Security.Permissions.HostProtectionAttribute>このクラスに適用される属性が次<xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A>プロパティ値: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>します。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-112">The <xref:System.Security.Permissions.HostProtectionAttribute> attribute applied to this class has the following <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> property value: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>.</span></span> <span data-ttu-id="9f3ef-113"><xref:System.Security.Permissions.HostProtectionAttribute> は、デスクトップ アプリケーション (通常、アイコンのダブルクリック、コマンドの入力、またはブラウザーへの URL の入力により起動されます) には影響しません。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-113">The <xref:System.Security.Permissions.HostProtectionAttribute> does not affect desktop applications (which are typically started by double-clicking an icon, typing a command, or entering a URL in a browser).</span></span> <span data-ttu-id="9f3ef-114">詳細については、次を参照してください。、<xref:System.Security.Permissions.HostProtectionAttribute>クラスまたは[SQL Server プログラミングとホスト保護属性](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md)します。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-114">For more information, see the <xref:System.Security.Permissions.HostProtectionAttribute> class or [SQL Server Programming and Host Protection Attributes](~/docs/framework/performance/sql-server-programming-and-host-protection-attributes.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="iSynchronizeInvoke.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="9f3ef-115">
            <paramref name="args" /> に指定されているのと同じ数および型のパラメーターをとるメソッドへの <see cref="T:System.Delegate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-115">A <see cref="T:System.Delegate" /> to a method that takes parameters of the same number and type that are contained in <paramref name="args" />.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="9f3ef-116">特定のメソッドに引数として渡す <see cref="T:System.Object" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-116">An array of type <see cref="T:System.Object" /> to pass as arguments to the given method.</span>
          </span>
          <span data-ttu-id="9f3ef-117">引数が必要ない場合は、<see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-117">This can be <see langword="null" /> if no arguments are needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f3ef-118">このオブジェクトを作成したスレッド上でデリゲートを非同期的に実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-118">Asynchronously executes the delegate on the thread that created this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f3ef-119">このメソッドを呼び出すことによって開始された非同期操作を表す <see cref="T:System.IAsyncResult" /> インターフェイス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-119">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling this method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f3ef-120">`method`をスレッドではなく、オブジェクトを作成したスレッドでデリゲートが実行される<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>が呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-120">The `method` delegate is executed on the thread that created the object, instead of the thread on which <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> was called.</span></span>  
  
 <span data-ttu-id="9f3ef-121">デリゲートを非同期的に呼び出され、このメソッドがすぐに返します。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-121">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="9f3ef-122">このメソッドは、任意のスレッドから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-122">You can call this method from any thread.</span></span> <span data-ttu-id="9f3ef-123">このメソッドを使用して開始されたプロセスからの戻り値が必要な場合は、呼び出す<xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A>値を取得します。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-123">If you need the return value from a process started with this method, call <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> to get the value.</span></span>  
  
 <span data-ttu-id="9f3ef-124">使用して、デリゲートを同期的に呼び出す必要がある場合、<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>メソッド代わりにします。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-124">If you need to call the delegate synchronously, use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj" Usage="iSynchronizeInvoke.EndInvoke result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="9f3ef-125">
            <see cref="T:System.IAsyncResult" /> の呼び出しによって開始された非同期操作を表す <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> インターフェイス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-125">An <see cref="T:System.IAsyncResult" /> interface that represents the asynchronous operation started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f3ef-126">
            <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> の呼び出しによって開始されたプロセスが完了するまで待機し、そのプロセスによって生成された値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-126">Waits until the process started by calling <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> completes, and then returns the value generated by the process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f3ef-127">非同期操作によって生成された戻り値を表す <see cref="T:System.Object" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-127">An <see cref="T:System.Object" /> that represents the return value generated by the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f3ef-128">このメソッドによって表される非同期操作の戻り値の取得、<xref:System.IAsyncResult>このインターフェイスによって渡されます。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-128">This method gets the return value of the asynchronous operation represented by the <xref:System.IAsyncResult> passed by this interface.</span></span> <span data-ttu-id="9f3ef-129">非同期操作が完了していない場合、このメソッドは、結果が利用可能になるまで待機します。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-129">If the asynchronous operation has not completed, this method will wait until the result is available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj" Usage="iSynchronizeInvoke.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">
          <span data-ttu-id="9f3ef-130">コントロールのスレッドのコンテキストにおいて、呼び出すメソッドを格納している <see cref="T:System.Delegate" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-130">A <see cref="T:System.Delegate" /> that contains a method to call, in the context of the thread for the control.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="9f3ef-131">特定のメソッドに渡す引数を表す、<see cref="T:System.Object" /> 型の配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-131">An array of type <see cref="T:System.Object" /> that represents the arguments to pass to the given method.</span>
          </span>
          <span data-ttu-id="9f3ef-132">引数が必要ない場合は、<see langword="null" /> を指定できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-132">This can be <see langword="null" /> if no arguments are needed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9f3ef-133">このオブジェクトを作成したスレッド上でデリゲートを同期的に呼び出し、その呼び出しを作成元のスレッドにマーシャリングします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-133">Synchronously executes the delegate on the thread that created this object and marshals the call to the creating thread.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9f3ef-134">呼び出されているデリゲートからの戻り値を表す <see cref="T:System.Object" />。デリゲートに戻り値がない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-134">An <see cref="T:System.Object" /> that represents the return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f3ef-135">異なり<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>待機は、戻る前に、プロセスが完了するまで、このメソッドは同期的に動作します。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-135">Unlike <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, this method operates synchronously, that is, it waits until the process completes before returning.</span></span> <span data-ttu-id="9f3ef-136">呼び出し中に発生した例外は、呼び出し元に反映されます。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-136">Exceptions raised during the call are propagated back to the caller.</span></span>  
  
 <span data-ttu-id="9f3ef-137">別のスレッドからメソッドを呼び出すときにこのメソッドを使用して、適切なスレッドの呼び出しをマーシャ リングします。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-137">Use this method when calling a method from a different thread to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9f3ef-138">このインターフェイスを実装するオブジェクトを呼び出すときに、呼び出し元が <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> を呼び出す必要があるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-138">Gets a value indicating whether the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> when calling an object that implements this interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9f3ef-139">呼び出し元が <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> を呼び出す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9f3ef-139">
              <see langword="true" /> if the caller must call <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f3ef-140">このプロパティは、呼び出し元が呼び出す必要があるかどうかを決定します<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>ときに、このインターフェイスを実装するオブジェクトのメソッド呼び出しを行います。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-140">This property determines whether the caller must call <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> when making method calls to an object that implements this interface.</span></span> <span data-ttu-id="9f3ef-141">このようなオブジェクトは、特定のスレッドにバインドされ、スレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-141">Such objects are bound to a specific thread and are not thread-safe.</span></span> <span data-ttu-id="9f3ef-142">使用する必要がある別のスレッドからメソッドを呼び出す場合、<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A>を適切なスレッドの呼び出しをマーシャ リングするメソッド。</span><span class="sxs-lookup"><span data-stu-id="9f3ef-142">If you are calling a method from a different thread, you must use the <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> method to marshal the call to the proper thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>