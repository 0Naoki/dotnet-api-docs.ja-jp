<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Component.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b0a8013be72c2cd4641c3e28d3054ee2b64844f0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0a8013be72c2cd4641c3e28d3054ee2b64844f0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Component">
          <source>Provides the base implementation for the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> interface and enables object sharing between applications.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> インターフェイスの基本実装を提供し、アプリケーション間でオブジェクトを共有できるようにします。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is the base class for all components in the common language runtime that marshal by reference.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 共通言語ランタイムのすべてのコンポーネントの基本クラスをその参照渡しでマーシャ リングする. です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is remotable and derives from the <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> リモートにできるは、その派生元の<ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> provides an implementation of the <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> 実装を提供、<ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph> provides an implementation of <ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph> that marshals by value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>の実装を提供<ph id="ph2">&lt;xref:System.ComponentModel.IComponent&gt;</ph>値をマーシャ リングします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>You can host a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> in any object that implements the <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interface, and you can query and get services from its container.</source>
          <target state="translated">ホストすることができます、<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>を実装する任意のオブジェクトで、<ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>インターフェイス、することができますを照会およびコンテナーからサービスを取得します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The container creates an <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> for each <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> it contains.</source>
          <target state="translated">コンテナーを作成、<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>各<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>が含まれています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>The container uses the site to manage the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> and is used by the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> to communicate with its container.</source>
          <target state="translated">コンテナーを管理するサイトを使用する、<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>によって使用されると、<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>コンテナーと通信するためにします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> should release resources explicitly by calls to its <ph id="ph2">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method, without waiting for automatic memory management through an implicit call to the <ph id="ph3">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>への呼び出しによって明示的にリソースを解放する必要があります、<ph id="ph2">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>の自動メモリ管理への暗黙的な呼び出しを待機することがなく、メソッド、<ph id="ph3">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Component">
          <source>When a <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> is disposed, all components within the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> are also disposed.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>破棄されると、すべてのコンポーネント、<ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>も破棄されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Gets a value indicating whether the component can raise an event.</source>
          <target state="translated">コンポーネントがイベントを発生させることがきるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the component can raise events; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コンポーネントがイベントを発生させることができる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>The default implementation of this property always returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">このプロパティの既定の実装は、常に返します<ph id="ph1">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> class should override this property to provide the ability to disable the raising of events.</source>
          <target state="translated">継承するクラス、<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>クラスは、イベントの生成を無効にする機能を提供するには、このプロパティをオーバーライドする必要があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>For example, in the <ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph> class, if the control is being hosted as an ActiveX control, the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property returns <ph id="ph3">`false`</ph> if the ActiveX control has its events frozen.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Windows.Forms.Control&gt;</ph>クラス、コントロールは、ActiveX コントロールとしてホストされている場合、<ph id="ph2">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph>プロパティから返される<ph id="ph3">`false`</ph>ActiveX コントロールがあるそのイベントが固定されている場合。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>If you override this method in a deriving class and change it to return <ph id="ph1">&lt;see langword="false" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> collection returned by the <ph id="ph3">&lt;see cref="P:System.ComponentModel.Component.Events" /&gt;</ph> property returns <ph id="ph4">&lt;see langword="null" /&gt;</ph> for an event.</source>
          <target state="translated">派生クラスでは、このメソッドをオーバーライドし、変更を返すかどうか<ph id="ph1">&lt;see langword="false" /&gt;</ph>、<ph id="ph2">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>によって返されるコレクション、<ph id="ph3">&lt;see cref="P:System.ComponentModel.Component.Events" /&gt;</ph>プロパティから返される<ph id="ph4">&lt;see langword="null" /&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.CanRaiseEvents">
          <source>Events can still be added and removed from the collection, but the collection's <ph id="ph1">&lt;see cref="P:System.ComponentModel.EventHandlerList.Item(System.Object)" /&gt;</ph> property will always return <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">イベントはまだ追加され、コレクション内でも、コレクションの削除<ph id="ph1">&lt;see cref="P:System.ComponentModel.EventHandlerList.Item(System.Object)" /&gt;</ph>プロパティは常に返します<ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Container">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> を格納している <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> that contains the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is not encapsulated in an <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> を格納している <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> (存在する場合)。または <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> が <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> にカプセル化されていない場合には、<ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</source>
          <target state="translated">先入れ先出しの一覧でも、コンテナー内のコンポーネントの順序を定義するコンテナー内のコンポーネントが追跡されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Container">
          <source>The last component added is the last component in the list.</source>
          <target state="translated">追加された最後のコンポーネントは、一覧の最後のコンポーネントです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.DesignMode">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is currently in design mode.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> が現在デザイン モードかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.DesignMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is in design mode; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> がデザイン モードの場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.DesignMode">
          <source>The design mode indicator is stored in the <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>; therefore, if the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> does not have an <ph id="ph3">&lt;xref:System.ComponentModel.ISite&gt;</ph> associated with it, the value of this property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">デザイン モードのインジケーターが格納されている、 <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>。 したがって、場合、<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>はありません、<ph id="ph3">&lt;xref:System.ComponentModel.ISite&gt;</ph>関連付けられている、このプロパティの値は、<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Component">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> で使用したリソースを解放します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> によって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> を使い終わったら <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> メソッドによって、<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> は使用不可の状態になります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>へのすべての参照を解放する必要があります、<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>ガベージ コレクターがメモリを再利用できるようにする、<ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>占有されていた。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> への最後の参照を解放する前に、必ず <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> を呼び出してください。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">そうしないと、ガベージ コレクターが <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> オブジェクトの <ph id="ph2">`Finalize`</ph> メソッドを呼び出すまで、使用されているリソースは解放されません。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> パラメーターが <ph id="ph2">`true`</ph> の場合、このメソッドは、この <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose()`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> をオーバーライドする場合は、以前に <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Component.Disposed">
          <source>Occurs when the component is disposed by a call to the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ComponentModel.Component.Dispose" /&gt;</ph> メソッドの呼び出しによってコンポーネントが破棄されると発生します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>When you create a <ph id="ph1">&lt;xref:System.ComponentModel.Component.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Disposed&gt;</ph> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
          <target state="translated">イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>The event handler is called whenever the event occurs, unless you remove the delegate.</source>
          <target state="translated">デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ComponentModel.Component.Disposed">
          <source>For more information about the event handler delegates, see <bpt id="p1">[</bpt>NIB: Events and Delegates<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>.</source>
          <target state="translated">イベント ハンドラー デリゲートの詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントとデリゲート<ept id="p1">](http://msdn.microsoft.com/library/d98fd58b-fa4f-4598-8378-addf4355a115)</ept>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Events">
          <source>Gets the list of event handlers that are attached to this <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> に結び付けられているイベント ハンドラーのリストを取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that provides the delegates for this component.</source>
          <target state="translated">コンポーネントのデリゲートを提供する <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Events">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">イベント処理の詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: イベントの利用<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> がガベージ コレクションによってクリアされる前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
          <target state="translated">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの<ph id="ph1">`Finalize`</ph>への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Finalize メソッドおよびデストラクター<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>、<bpt id="p2">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>、および<bpt id="p3">[</bpt>Finalize メソッドをオーバーライドする<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>A service provided by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> が提供するサービス。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>Returns an object that represents a service provided by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> or by its <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> またはその <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> で提供されるサービスを表すオブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that represents a service provided by the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> does not provide the specified service.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> によって提供されるサービスを表す <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>。または <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> が指定されたサービスを提供しない場合には <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.GetService(System.Type)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">このメソッドは、派生クラスでオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Component.Site">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> の <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> を取得または設定します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is not encapsulated in an <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>, the <ph id="ph6">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> does not have an <ph id="ph7">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> associated with it, or the <ph id="ph8">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is removed from its <ph id="ph9">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> に関連付けられている <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>。<ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> が <ph id="ph5">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> にカプセル化されていない場合、<ph id="ph6">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> に <ph id="ph7">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> が関連付けられていない場合、または <ph id="ph8">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> が <ph id="ph9">&lt;see cref="T:System.ComponentModel.IContainer" /&gt;</ph> から削除された場合には、<ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> will have an <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> if it has been added to an <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> and the <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assigns an <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> to it.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>が、<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>に追加されている場合、<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>と<ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph>割り当てます、<ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph>にします。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> is responsible for assigning the <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> to the <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph>を割り当てますが、<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>を<ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>Changing the value of the component's <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> does not necessarily change the name of the site the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> is assigned to.</source>
          <target state="translated">コンポーネントの値を変更する<ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>が必ずしも変更サイトの名前、<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>に割り当てられます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph> property should be set only by an <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Component.Site%2A&gt;</ph>だけでプロパティを設定する必要があります、<ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The property value is <ph id="ph1">`null`</ph> if the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> is removed from its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">プロパティの値が<ph id="ph1">`null`</ph>場合、<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>から削除されて、<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>Assigning <ph id="ph1">`null`</ph> to this property does not necessarily remove the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> from the <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">割り当てる<ph id="ph1">`null`</ph>にこのプロパティが必ずしも削除される、<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>から、<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> might or might not have a name.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>可能性がありますか、名前がない可能性があります。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>If a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is given a name, the name must be unique among other <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> objects within its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>は名前を指定するには、名前必要がありますで一意になるその他の<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>内のオブジェクトはその<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Component.Site">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> stores the name of the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>; therefore, you can only name a <ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph> if it has an <ph id="ph4">&lt;xref:System.ComponentModel.ISite&gt;</ph> associated with it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>の名前を格納、 <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>。 したがって、のみ名前を付けることができます、<ph id="ph3">&lt;xref:System.ComponentModel.Component&gt;</ph>がある場合、<ph id="ph4">&lt;xref:System.ComponentModel.ISite&gt;</ph>関連付けられています。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> の名前 (存在する場合) を格納する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>This method should not be overridden.</source>
          <target state="translated">このメソッドはオーバーライドできません。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the name of the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph>, if any, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the <ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> is unnamed.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> の名前 (存在する場合) を格納する <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。<ph id="ph4">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> に名前が付いていない場合は <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> may or may not have a name.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>可能性がありますまたは名前がない可能性があります。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>If a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is given a name, the name is unique among other <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph> objects within its <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>は名前を指定するには、名前は他の間で一意で<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>内のオブジェクトはその<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph> stores the name of the <ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.ISite&gt;</ph>の名前を格納、<ph id="ph2">&lt;xref:System.ComponentModel.Component&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Component.ToString">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> can only have an <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> if it has been added to an <ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph> and the <ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph> assigns an <ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph> to it.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>しか持てない、<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>に追加されている場合、<ph id="ph3">&lt;xref:System.ComponentModel.IContainer&gt;</ph>と<ph id="ph4">&lt;xref:System.ComponentModel.IContainer&gt;</ph>割り当てます、<ph id="ph5">&lt;xref:System.ComponentModel.ISite&gt;</ph>にします。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>