<Type Name="Container" FullName="System.ComponentModel.Container">
  <TypeSignature Language="C#" Value="public class Container : IDisposable, System.ComponentModel.IContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Container extends System.Object implements class System.ComponentModel.IContainer, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Container" />
  <TypeSignature Language="VB.NET" Value="Public Class Container&#xA;Implements IContainer, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Container : IDisposable, System::ComponentModel::IContainer" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="04ec8-101">0 個以上のコンポーネントをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-101">Encapsulates zero or more components.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-102"><xref:System.ComponentModel.Container>クラスは、の既定の実装、<xref:System.ComponentModel.IContainer>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="04ec8-102">The <xref:System.ComponentModel.Container> class is the default implementation for the <xref:System.ComponentModel.IContainer> interface.</span></span>  
  
 <span data-ttu-id="04ec8-103">コンテナーとは、カプセル化し、0 個以上のコンポーネントを追跡するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="04ec8-103">Containers are objects that encapsulate and track zero or more components.</span></span> <span data-ttu-id="04ec8-104">このコンテキストでは、包含構造は、論理的なコンテインメント、非ビジュアルの包含を指します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-104">In this context, containment refers to logical containment, not visual containment.</span></span> <span data-ttu-id="04ec8-105">コンポーネントと、さまざまな視覚的および非ビジュアルの両方であるシナリオを含むシナリオでコンテナーを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-105">You can use components and containers in a variety of scenarios, including scenarios that are both visual and not visual.</span></span>  
  
 <span data-ttu-id="04ec8-106">先入れ先出しの一覧でも、コンテナー内のコンポーネントの順序を定義するコンテナー内のコンポーネントが追跡されます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-106">The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</span></span> <span data-ttu-id="04ec8-107">追加したコンポーネントは、リストの末尾に付加されます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-107">Added components are appended to the end of the list.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IContainer" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.Component" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Container ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Container();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04ec8-108"><see cref="T:System.ComponentModel.Container" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-108">Initializes a new instance of the <see cref="T:System.ComponentModel.Container" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04ec8-109"><see cref="T:System.ComponentModel.Component" /> を <see cref="T:System.ComponentModel.Container" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-109">Adds a <see cref="T:System.ComponentModel.Component" /> to the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="04ec8-110">追加するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="04ec8-110">The component to add.</span></span></param>
        <summary><span data-ttu-id="04ec8-111">指定した <see cref="T:System.ComponentModel.Component" /> を <see cref="T:System.ComponentModel.Container" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-111">Adds the specified <see cref="T:System.ComponentModel.Component" /> to the <see cref="T:System.ComponentModel.Container" />.</span></span> <span data-ttu-id="04ec8-112">コンポーネントに名前が付いていません。</span><span class="sxs-lookup"><span data-stu-id="04ec8-112">The component is unnamed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-113">このメソッドは、派生クラスでオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-113">This method can be overridden by a derived class.</span></span>  
  
 <span data-ttu-id="04ec8-114">新しい<xref:System.ComponentModel.Component>がリストの末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-114">The new <xref:System.ComponentModel.Component> is added to the end of the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04ec8-115"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-115"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (component As IComponent, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IContainer.Add(System.ComponentModel.IComponent,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="04ec8-116">追加するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="04ec8-116">The component to add.</span></span></param>
        <param name="name"><span data-ttu-id="04ec8-117">コンポーネントに割り当てる、大文字小文字を区別しない一意の名前。</span><span class="sxs-lookup"><span data-stu-id="04ec8-117">The unique, case-insensitive name to assign to the component.</span></span>  
  
 <span data-ttu-id="04ec8-118">- または -</span><span class="sxs-lookup"><span data-stu-id="04ec8-118">-or-</span></span>  
  
 <span data-ttu-id="04ec8-119">コンポーネントに名前を付けない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04ec8-119"><see langword="null" />, which leaves the component unnamed.</span></span></param>
        <summary><span data-ttu-id="04ec8-120">指定した <see cref="T:System.ComponentModel.Component" /> を <see cref="T:System.ComponentModel.Container" /> に追加し、名前を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-120">Adds the specified <see cref="T:System.ComponentModel.Component" /> to the <see cref="T:System.ComponentModel.Container" /> and assigns it a name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-121">このメソッドは、派生クラスでオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-121">This method can be overridden by a derived class.</span></span>  
  
 <span data-ttu-id="04ec8-122">新しい<xref:System.ComponentModel.Component>がリストの末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-122">The new <xref:System.ComponentModel.Component> is added to the end of the list.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04ec8-123"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-123"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04ec8-124"><paramref name="name" /> が一意ではありません。</span><span class="sxs-lookup"><span data-stu-id="04ec8-124"><paramref name="name" /> is not unique.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="Components">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ComponentCollection Components { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ComponentCollection Components" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Container.Components" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Components As ComponentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ComponentCollection ^ Components { System::ComponentModel::ComponentCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IContainer.Components</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ComponentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04ec8-125"><see cref="T:System.ComponentModel.Container" /> 内のすべてのコンポーネントを取得します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-125">Gets all the components in the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
        <value><span data-ttu-id="04ec8-126"><see cref="T:System.ComponentModel.Container" /> 内のコンポーネントを格納しているコレクション。</span><span class="sxs-lookup"><span data-stu-id="04ec8-126">A collection that contains the components in the <see cref="T:System.ComponentModel.Container" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-127">このメソッドは、派生クラスでオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-127">This method can be overridden by a derived class.</span></span>  
  
 <span data-ttu-id="04ec8-128">追加されたとして、コレクション内のコンポーネントが同じ順序で格納されて、<xref:System.ComponentModel.Container>です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-128">The components in the collection are stored in the same order as they were added to the <xref:System.ComponentModel.Container>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSite">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.ISite CreateSite(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateSite (component As IComponent, name As String) As ISite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::ISite ^ CreateSite(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="04ec8-129">サイトを作成する <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="04ec8-129">The <see cref="T:System.ComponentModel.IComponent" /> to create a site for.</span></span></param>
        <param name="name"><span data-ttu-id="04ec8-130"><c>component</c> に割り当てる名前。名前の割り当てをスキップする場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04ec8-130">The name to assign to <c>component</c>, or <see langword="null" /> to skip the name assignment.</span></span></param>
        <summary><span data-ttu-id="04ec8-131">指定した <see cref="T:System.ComponentModel.ISite" /> 用にサイト <see cref="T:System.ComponentModel.IComponent" /> を作成し、そのサイトに特定の名前を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-131">Creates a site <see cref="T:System.ComponentModel.ISite" /> for the given <see cref="T:System.ComponentModel.IComponent" /> and assigns the given name to the site.</span></span></summary>
        <returns><span data-ttu-id="04ec8-132">新規作成されたサイト。</span><span class="sxs-lookup"><span data-stu-id="04ec8-132">The newly created site.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-133">場合、`name`パラメーターは`null`、<xref:System.ComponentModel.IComponent>に追加、<xref:System.ComponentModel.Container>識別名がない場合。</span><span class="sxs-lookup"><span data-stu-id="04ec8-133">If the `name` parameter is `null`, the <xref:System.ComponentModel.IComponent> is added to the <xref:System.ComponentModel.Container> without an identifying name.</span></span>  
  
 <span data-ttu-id="04ec8-134">このメソッドは、派生クラスでオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-134">This method can be overridden by a derived class.</span></span> <span data-ttu-id="04ec8-135">実装をオーバーライドする必要がある、<xref:System.ComponentModel.Container.CreateSite%2A>メソッドを実装するクラスを使用して、カスタム実装を提供できます、<xref:System.ComponentModel.ISite>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="04ec8-135">Implementers that need to override the <xref:System.ComponentModel.Container.CreateSite%2A> method can provide a custom implementation through a class that implements the <xref:System.ComponentModel.ISite> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="04ec8-136">
          <see cref="T:System.ComponentModel.Container" /> で使用したリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-136">Releases the resources used by the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04ec8-137">
          <see cref="T:System.ComponentModel.Container" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-137">Releases all resources used by the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-138"><xref:System.ComponentModel.Container.Dispose%2A> を使い終わったら <xref:System.ComponentModel.Container> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-138">Call <xref:System.ComponentModel.Container.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="04ec8-139"><xref:System.ComponentModel.Container.Dispose%2A> メソッドによって、<xref:System.ComponentModel.Container> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="04ec8-139">The <xref:System.ComponentModel.Container.Dispose%2A> method leaves the <xref:System.ComponentModel.Container> in an unusable state.</span></span> <span data-ttu-id="04ec8-140">呼び出した後<xref:System.ComponentModel.Container.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.ComponentModel.Container>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.ComponentModel.Container>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="04ec8-140">After calling <xref:System.ComponentModel.Container.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Container> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Container> was occupying.</span></span> <span data-ttu-id="04ec8-141">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="04ec8-142"><xref:System.ComponentModel.Container.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.ComponentModel.Container> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="04ec8-142">Always call <xref:System.ComponentModel.Container.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="04ec8-143">そうしないと、ガベージ コレクターが <xref:System.ComponentModel.Container> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="04ec8-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Container> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="04ec8-144">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="04ec8-144"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="04ec8-145"><see cref="T:System.ComponentModel.Container" /> が使用しているアンマネージ リソースを解放します。オプションとして、マネージ リソースを解放することもできます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-145">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Container" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-146">このメソッドは、パブリック`Dispose`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="04ec8-146">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="04ec8-147">`Dispose` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-147">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="04ec8-148"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="04ec8-149">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.ComponentModel.Container>参照します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-149">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.ComponentModel.Container> references.</span></span> <span data-ttu-id="04ec8-150">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-150">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="04ec8-151"><see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-151"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="04ec8-152">オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-152">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="04ec8-153">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-153">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="04ec8-154">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-154">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Container ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Container ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04ec8-155"><see cref="T:System.ComponentModel.Container" /> がガベージ コレクションによってクリアされる前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-155">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.ComponentModel.Container" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-156">このメソッドは、<xref:System.Object.Finalize%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="04ec8-156">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="04ec8-157">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの`Finalize`への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="04ec8-157">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="04ec8-158">詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)、および[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-158">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected virtual object GetService (Type service);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetService(class System.Type service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetService (service As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetService(Type ^ service);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="service"><span data-ttu-id="04ec8-159">取得するサービスの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="04ec8-159">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="04ec8-160">指定した型のサービス オブジェクトがある場合は、そのオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-160">Gets the service object of the specified type, if it is available.</span></span></summary>
        <returns><span data-ttu-id="04ec8-161">要求したサービスを実装している <see cref="T:System.Object" />。サービスを解決できない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04ec8-161">An <see cref="T:System.Object" /> implementing the requested service, or <see langword="null" /> if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-162">場合、このメソッドの既定の実装がクラスの現在のインスタンスを返します`service`は、 <xref:System.ComponentModel.IContainer>、それ以外を返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-162">The default implementation of this method returns the current instance of the class if `service` is an <xref:System.ComponentModel.IContainer>; otherwise, it returns `null`.</span></span> <span data-ttu-id="04ec8-163">サービス オブジェクトを返すためのカスタム実装を提供するには、このメソッドをオーバーライドすることができます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-163">You can override this method to provide a custom implementation to return a service object.</span></span> <span data-ttu-id="04ec8-164">詳細については、<xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="04ec8-164">For more information, see the <xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IContainer.Remove(System.ComponentModel.IComponent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="04ec8-165">削除するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="04ec8-165">The component to remove.</span></span></param>
        <summary><span data-ttu-id="04ec8-166"><see cref="T:System.ComponentModel.Container" /> からコンポーネントを削除します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-166">Removes a component from the <see cref="T:System.ComponentModel.Container" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-167">このメソッドは、派生クラスでオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-167">This method can be overridden by a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveWithoutUnsiting">
      <MemberSignature Language="C#" Value="protected void RemoveWithoutUnsiting (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveWithoutUnsiting(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveWithoutUnsiting (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveWithoutUnsiting(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="04ec8-168">削除するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="04ec8-168">The component to remove.</span></span></param>
        <summary><span data-ttu-id="04ec8-169"><see cref="T:System.ComponentModel.Container" /> に <see langword="null" /> を設定しないで、<see cref="P:System.ComponentModel.IComponent.Site" /> からコンポーネントを削除します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-169">Removes a component from the <see cref="T:System.ComponentModel.Container" /> without setting <see cref="P:System.ComponentModel.IComponent.Site" /> to <see langword="null" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-170"><xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A>メソッドは、サイトを通常どおり、クリーンアップが、コンポーネントは設定しません<xref:System.ComponentModel.IComponent.Site%2A>プロパティを`null`です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-170">The <xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A> method cleans up the site as usual, but it does not set the component's <xref:System.ComponentModel.IComponent.Site%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateName">
      <MemberSignature Language="C#" Value="protected virtual void ValidateName (System.ComponentModel.IComponent component, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateName(class System.ComponentModel.IComponent component, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateName (component As IComponent, name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateName(System::ComponentModel::IComponent ^ component, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="04ec8-171">名前付きコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="04ec8-171">The named component.</span></span></param>
        <param name="name"><span data-ttu-id="04ec8-172">検証対象のコンポーネント名。</span><span class="sxs-lookup"><span data-stu-id="04ec8-172">The component name to validate.</span></span></param>
        <summary><span data-ttu-id="04ec8-173">コンポーネント名がこのコンテナーで一意であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="04ec8-173">Determines whether the component name is unique for this container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="04ec8-174"><xref:System.ComponentModel.Container.ValidateName%2A>メソッドによって呼び出されます、<xref:System.ComponentModel.Container.Add%2A>かどうかをメソッドの名前、`component`これに対して一意では、追加される<xref:System.ComponentModel.Container>です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-174">The <xref:System.ComponentModel.Container.ValidateName%2A> method is called by the <xref:System.ComponentModel.Container.Add%2A> method to determine if the name of the `component` being added is unique for this <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="04ec8-175">場合、`name`パラメーターではありません`null`が一意でないと、<xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="04ec8-175">If the `name` parameter is not `null` and is not unique, an <xref:System.ArgumentException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="04ec8-176"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="04ec8-176"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="04ec8-177"><paramref name="name" /> が一意ではありません。</span><span class="sxs-lookup"><span data-stu-id="04ec8-177"><paramref name="name" /> is not unique.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>