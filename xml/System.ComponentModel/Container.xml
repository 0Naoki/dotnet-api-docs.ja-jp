<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Container.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac59fa6bbbc17aa353499d9fe0e1402c1a610c8f597.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fa6bbbc17aa353499d9fe0e1402c1a610c8f597</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Container">
          <source>Encapsulates zero or more components.</source>
          <target state="translated">0 個以上のコンポーネントをカプセル化します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> class is the default implementation for the <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>クラスは、の既定の実装、<ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>Containers are objects that encapsulate and track zero or more components.</source>
          <target state="translated">コンテナーとは、カプセル化し、0 個以上のコンポーネントを追跡するオブジェクトです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>In this context, containment refers to logical containment, not visual containment.</source>
          <target state="translated">このコンテキストでは、包含構造は、論理的なコンテインメント、非ビジュアルの包含を指します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>You can use components and containers in a variety of scenarios, including scenarios that are both visual and not visual.</source>
          <target state="translated">コンポーネントと、さまざまな視覚的および非ビジュアルの両方であるシナリオを含むシナリオでコンテナーを使用することができます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>The components in a container are tracked in a first-in, first-out list, which also defines the order of the components within the container.</source>
          <target state="translated">先入れ先出しの一覧でも、コンテナー内のコンポーネントの順序を定義するコンテナー内のコンポーネントが追跡されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Container">
          <source>Added components are appended to the end of the list.</source>
          <target state="translated">追加したコンポーネントは、リストの末尾に付加されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Container">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> を <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> に追加します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>The component to add.</source>
          <target state="translated">追加するコンポーネント。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> を <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> に追加します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>The component is unnamed.</source>
          <target state="translated">コンポーネントに名前が付いていません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">このメソッドは、派生クラスでオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source>The new <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is added to the end of the list.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>がリストの末尾に追加します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>The component to add.</source>
          <target state="translated">追加するコンポーネント。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>The unique, case-insensitive name to assign to the component.</source>
          <target state="translated">コンポーネントに割り当てる、大文字小文字を区別しない一意の名前。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph>, which leaves the component unnamed.</source>
          <target state="translated">コンポーネントに名前を付けない場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> and assigns it a name.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.ComponentModel.Component" /&gt;</ph> を <ph id="ph2">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> に追加し、名前を割り当てます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">このメソッドは、派生クラスでオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source>The new <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> is added to the end of the list.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph>がリストの末尾に追加します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not unique.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> が一意ではありません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Container.Components">
          <source>Gets all the components in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> 内のすべてのコンポーネントを取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Container.Components">
          <source>A collection that contains the components in the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> 内のコンポーネントを格納しているコレクション。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Container.Components">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">このメソッドは、派生クラスでオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Container.Components">
          <source>The components in the collection are stored in the same order as they were added to the <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated">追加されたとして、コレクション内のコンポーネントが同じ順序で格納されて、<ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> to create a site for.</source>
          <target state="translated">サイトを作成する <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>The name to assign to <bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept>, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to skip the name assignment.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>component<ept id="p1">&lt;/c&gt;</ept> に割り当てる名前。名前の割り当てをスキップする場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>Creates a site <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the given <ph id="ph2">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> and assigns the given name to the site.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> 用にサイト <ph id="ph2">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> を作成し、そのサイトに特定の名前を割り当てます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>The newly created site.</source>
          <target state="translated">新規作成されたサイト。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>If the <ph id="ph1">`name`</ph> parameter is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.ComponentModel.IComponent&gt;</ph> is added to the <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph> without an identifying name.</source>
          <target state="translated">場合、<ph id="ph1">`name`</ph>パラメーターは<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.ComponentModel.IComponent&gt;</ph>に追加、<ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>識別名がない場合。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">このメソッドは、派生クラスでオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
          <source>Implementers that need to override the <ph id="ph1">&lt;xref:System.ComponentModel.Container.CreateSite%2A&gt;</ph> method can provide a custom implementation through a class that implements the <ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph> interface.</source>
          <target state="translated">実装をオーバーライドする必要がある、<ph id="ph1">&lt;xref:System.ComponentModel.Container.CreateSite%2A&gt;</ph>メソッドを実装するクラスを使用して、カスタム実装を提供できます、<ph id="ph2">&lt;xref:System.ComponentModel.ISite&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Container">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> で使用したリソースを解放します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> によって使用されているすべてのリソースを解放します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> を使い終わったら <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> in an unusable state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> メソッドによって、<ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> は使用不可の状態になります。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph> was occupying.</source>
          <target state="translated">呼び出した後<ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph>へのすべての参照を解放する必要があります、<ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>ガベージ コレクターがメモリを再利用できるようにする、<ph id="ph3">&lt;xref:System.ComponentModel.Container&gt;</ph>占有されていた。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Dispose メソッドの実装<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container.Dispose%2A&gt;</ph> への最後の参照を解放する前に、必ず <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> を呼び出してください。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">そうしないと、ガベージ コレクターが <ph id="ph1">&lt;xref:System.ComponentModel.Container&gt;</ph> オブジェクトの <ph id="ph2">`Finalize`</ph> メソッドを呼び出すまで、使用されているリソースは解放されません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>, and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> が使用しているアンマネージ リソースを解放します。オプションとして、マネージ リソースを解放することもできます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">`Dispose`</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> プロテクト呼び出します<ph id="ph2">`Dispose(Boolean)`</ph>メソッドを<ph id="ph3">`disposing`</ph>パラメーターに設定<ph id="ph4">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> references.</source>
          <target state="translated">ときに、<ph id="ph1">`disposing`</ph>パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph>参照します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">`Dispose`</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">オーバーライドする場合<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Finalize">
          <source>Releases unmanaged resources and performs other cleanup operations before the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> がガベージ コレクションによってクリアされる前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> をオーバーライドします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">`Finalize`</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph> method.</source>
          <target state="translated">アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの<ph id="ph1">`Finalize`</ph>への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Finalize メソッドおよびデストラクター<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>、<bpt id="p2">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>、および<bpt id="p3">[</bpt>Finalize メソッドをオーバーライドする<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the service to retrieve.</source>
          <target state="translated">取得するサービスの <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>Gets the service object of the specified type, if it is available.</source>
          <target state="translated">指定した型のサービス オブジェクトがある場合は、そのオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> implementing the requested service, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the service cannot be resolved.</source>
          <target state="translated">要求したサービスを実装している <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。サービスを解決できない場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>The default implementation of this method returns the current instance of the class if <ph id="ph1">`service`</ph> is an <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>; otherwise, it returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">場合、このメソッドの既定の実装がクラスの現在のインスタンスを返します<ph id="ph1">`service`</ph>は、 <ph id="ph2">&lt;xref:System.ComponentModel.IContainer&gt;</ph>、それ以外を返します<ph id="ph3">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>You can override this method to provide a custom implementation to return a service object.</source>
          <target state="translated">サービス オブジェクトを返すためのカスタム実装を提供するには、このメソッドをオーバーライドすることができます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.GetService(System.Type)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A?displayProperty=nameWithType&gt;</ph> メソッドを参照してください。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
          <source>The component to remove.</source>
          <target state="translated">削除するコンポーネント。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
          <source>Removes a component from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> からコンポーネントを削除します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
          <source>This method can be overridden by a derived class.</source>
          <target state="translated">このメソッドは、派生クラスでオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
          <source>The component to remove.</source>
          <target state="translated">削除するコンポーネント。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
          <source>Removes a component from the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> without setting <ph id="ph2">&lt;see cref="P:System.ComponentModel.IComponent.Site" /&gt;</ph> to <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Container" /&gt;</ph> に <ph id="ph3">&lt;see langword="null" /&gt;</ph> を設定しないで、<ph id="ph2">&lt;see cref="P:System.ComponentModel.IComponent.Site" /&gt;</ph> からコンポーネントを削除します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A&gt;</ph> method cleans up the site as usual, but it does not set the component's <ph id="ph2">&lt;xref:System.ComponentModel.IComponent.Site%2A&gt;</ph> property to <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container.RemoveWithoutUnsiting%2A&gt;</ph>メソッドは、サイトを通常どおり、クリーンアップが、コンポーネントは設定しません<ph id="ph2">&lt;xref:System.ComponentModel.IComponent.Site%2A&gt;</ph>プロパティを<ph id="ph3">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>The named component.</source>
          <target state="translated">名前付きコンポーネント。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>The component name to validate.</source>
          <target state="translated">検証対象のコンポーネント名。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>Determines whether the component name is unique for this container.</source>
          <target state="translated">コンポーネント名がこのコンテナーで一意であるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Container.ValidateName%2A&gt;</ph> method is called by the <ph id="ph2">&lt;xref:System.ComponentModel.Container.Add%2A&gt;</ph> method to determine if the name of the <ph id="ph3">`component`</ph> being added is unique for this <ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Container.ValidateName%2A&gt;</ph>メソッドによって呼び出されます、<ph id="ph2">&lt;xref:System.ComponentModel.Container.Add%2A&gt;</ph>かどうかをメソッドの名前、<ph id="ph3">`component`</ph>これに対して一意では、追加される<ph id="ph4">&lt;xref:System.ComponentModel.Container&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source>If the <ph id="ph1">`name`</ph> parameter is not <ph id="ph2">`null`</ph> and is not unique, an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
          <target state="translated">場合、<ph id="ph1">`name`</ph>パラメーターではありません<ph id="ph2">`null`</ph>が一意でないと、<ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="component" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="component" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is not unique.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> が一意ではありません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>