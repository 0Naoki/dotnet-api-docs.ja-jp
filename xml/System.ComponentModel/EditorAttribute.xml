<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EditorAttribute.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5495aede3622b9f43cf3fd2d0c3ad3202723ac3b8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">495aede3622b9f43cf3fd2d0c3ad3202723ac3b8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EditorAttribute">
          <source>Specifies the editor to use to change a property.</source>
          <target state="translated">プロパティの変更に使用するエディターを指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EditorAttribute">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>When editing the property, a visual designer should create a new instance of the specified editor through a dialog box or drop-down window.</source>
          <target state="translated">プロパティを編集するときに、ビジュアル デザイナーは ダイアログ ボックスまたはドロップダウン ウィンドウで、指定されたエディターの新しいインスタンスを作成する必要があります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A&gt;</ph> property to find this editor's base type.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A&gt;</ph>エディターの基本型を検索するプロパティです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>The only available base type is <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>.</source>
          <target state="translated">のみ使用可能な基本データ型は<ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A&gt;</ph> property to get the name of the type of editor associated with this attribute.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorTypeName%2A&gt;</ph>この属性に関連付けられているエディターの種類の名前を取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>For general information on using attributes.</source>
          <target state="translated">属性の使用に関する一般情報はします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>see <bpt id="p1">[</bpt>Attributes<ept id="p1">](~/docs/standard/attributes/index.md)</ept>.</source>
          <target state="translated">参照してください<bpt id="p1">[</bpt>属性<ept id="p1">](~/docs/standard/attributes/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>For more information on design-time attributes, see <bpt id="p1">[</bpt>Attributes and Design-Time Support<ept id="p1">](http://msdn.microsoft.com/library/7aed9eb4-124b-4a15-a0a3-458f37ac9ef7)</ept>.</source>
          <target state="translated">デザイン時属性の詳細については、次を参照してください。<bpt id="p1">[</bpt>属性およびデザイン時サポート<ept id="p1">](http://msdn.microsoft.com/library/7aed9eb4-124b-4a15-a0a3-458f37ac9ef7)</ept>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>The following code example creates the <ph id="ph1">`MyImage`</ph> class.</source>
          <target state="translated">次のコード例を作成、<ph id="ph1">`MyImage`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>The class is marked with an <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> that specifies the <ph id="ph2">&lt;xref:System.Drawing.Design.ImageEditor&gt;</ph> as its editor.</source>
          <target state="translated">クラスが付いて、<ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph>を指定する、<ph id="ph2">&lt;xref:System.Drawing.Design.ImageEditor&gt;</ph>エディターとして。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EditorAttribute">
          <source>The following code example creates an instance of the <ph id="ph1">`MyImage`</ph> class, gets the attributes for the class, and then prints the name of the editor used by <ph id="ph2">`myNewImage`</ph>.</source>
          <target state="translated">次のコード例は、のインスタンスを作成、<ph id="ph1">`MyImage`</ph>クラス、クラスの属性を取得しで使用するエディターの名前を出力<ph id="ph2">`myNewImage`</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EditorAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> class with the default editor, which is no editor.</source>
          <target state="translated">既定のエディターを指定して、<ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。つまり、エディターは指定されません。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>The fully qualified type name of the editor.</source>
          <target state="translated">エディターの完全修飾型名。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>The fully qualified type name of the base class or interface to use as a lookup key for the editor.</source>
          <target state="translated">エディターを検索するためのキーとして使用する基本クラスまたは基本インターフェイスの完全修飾型名。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>This class must be or derive from <ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph>.</source>
          <target state="translated">このクラスは、<ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph> であるか、またはそこから派生している必要があります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> class with the type name and base type name of the editor.</source>
          <target state="translated">エディターの型名と基本型名を指定して、<ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">`typeName`</ph> parameter must be in the <ph id="ph2">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph> format.</source>
          <target state="translated"><ph id="ph1">`typeName`</ph>パラメーターでなければなりません、<ph id="ph2">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph>形式です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type&gt;</ph> represented by the <ph id="ph2">`typeName`</ph> parameter must either derive from or implement the base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type&gt;</ph>によって表される、<ph id="ph2">`typeName`</ph>パラメーターから派生させるか、基本クラスを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Type&gt;</ph> represented by the <ph id="ph2">`baseTypeName`</ph> parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type&gt;</ph>によって表される、<ph id="ph2">`baseTypeName`</ph>パラメーターは使用をキーとして特定のエディターを検索するため、データ型が関連付けられている 1 つ以上のエディターを持つことができます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
          <source>This can be any class, but is typically <ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph>.</source>
          <target state="translated">これは任意のクラスを指定できますが、通常は<ph id="ph1">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>または<ph id="ph2">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>The fully qualified type name of the editor.</source>
          <target state="translated">エディターの完全修飾型名。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the base class or interface to use as a lookup key for the editor.</source>
          <target state="translated">エディターを検索するためのキーとして使用する基本クラスまたは基本インターフェイスの <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>This class must be or derive from <ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph>.</source>
          <target state="translated">このクラスは、<ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph> であるか、またはそこから派生している必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> class with the type name and the base type.</source>
          <target state="translated">型名と基本型を指定して、<ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">`typeName`</ph> parameter must be in the <ph id="ph2">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph> format.</source>
          <target state="translated"><ph id="ph1">`typeName`</ph>パラメーターでなければなりません、<ph id="ph2">&lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType&gt;</ph>形式です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type&gt;</ph> represented by the <ph id="ph2">`typeName`</ph> must either derive from or implement the base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type&gt;</ph>によって表される、<ph id="ph2">`typeName`</ph>から派生または基本クラスを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
          <source>The <ph id="ph1">`baseType`</ph> parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.</source>
          <target state="translated"><ph id="ph1">`baseType`</ph>パラメーターは使用をキーとして特定のエディターを検索するため、データ型が関連付けられている 1 つ以上のエディターを持つことができます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of the editor.</source>
          <target state="translated">エディターの型を表す <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the base class or interface to use as a lookup key for the editor.</source>
          <target state="translated">エディターを検索するためのキーとして使用する基本クラスまたは基本インターフェイスの <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>This class must be or derive from <ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph>.</source>
          <target state="translated">このクラスは、<ph id="ph1">&lt;see cref="T:System.Drawing.Design.UITypeEditor" /&gt;</ph> であるか、またはそこから派生している必要があります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> class with the type and the base type.</source>
          <target state="translated">型と基本型を指定して、<ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Type&gt;</ph> represented by the <ph id="ph2">`type`</ph> parameter must either derive from or implement the base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Type&gt;</ph>によって表される、<ph id="ph2">`type`</ph>パラメーターから派生させるか、基本クラスを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
          <source>The <ph id="ph1">`baseType`</ph> parameter is used as a key to find a particular editor, because a data type can have more than one editor associated with it.</source>
          <target state="translated"><ph id="ph1">`baseType`</ph>パラメーターは使用をキーとして特定のエディターを検索するため、データ型が関連付けられている 1 つ以上のエディターを持つことができます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
          <source>Gets the name of the base class or interface serving as a lookup key for this editor.</source>
          <target state="translated">エディターを検索するためのキーとして使用する基本クラスまたは基本インターフェイスの名前を取得します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
          <source>The name of the base class or interface serving as a lookup key for this editor.</source>
          <target state="translated">エディターを検索するためのキーとして機能する基本クラスまたは基本インターフェイスの名前。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A&gt;</ph> property is an assembly qualified type name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.EditorBaseTypeName%2A&gt;</ph>プロパティは、アセンブリ修飾型名。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.EditorBaseTypeName">
          <source>The <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> provides both <ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph> as valid base classes, but any value is valid here.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>両方<ph id="ph2">&lt;xref:System.Drawing.Design.UITypeEditor&gt;</ph>と<ph id="ph3">&lt;xref:System.ComponentModel.ComponentEditor&gt;</ph>ように、有効な基底クラスですが任意の値が有効ではここでします。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EditorAttribute.EditorTypeName">
          <source>Gets the name of the editor class in the <ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph> format.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph> 形式のエディター クラス名を取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.EditorTypeName">
          <source>The name of the editor class in the <ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph> format.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Type.AssemblyQualifiedName" /&gt;</ph> 形式のエディター クラス名。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
          <source>The object to test the value equality of.</source>
          <target state="translated">値が等しいかどうかを確認するオブジェクト。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
          <source>Returns whether the value of the given object is equal to the current <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph>.</source>
          <target state="translated">指定したオブジェクトの値が現在の <ph id="ph1">&lt;see cref="T:System.ComponentModel.EditorAttribute" /&gt;</ph> と等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the given object is equal to that of the current object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定したオブジェクトの値が現在のオブジェクトの値と等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">このインスタンスのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EditorAttribute.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 ビット符号付き整数ハッシュ コード。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EditorAttribute.TypeId">
          <source>Gets a unique ID for this attribute type.</source>
          <target state="translated">この属性型の一意の ID を取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.TypeId">
          <source>A unique ID for this attribute type.</source>
          <target state="translated">この属性型の一意の ID。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.TypeId">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.TypeId%2A&gt;</ph> property is used by filtering algorithms to identify two attributes that are the same type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute.TypeId%2A&gt;</ph>プロパティは、同じ型である 2 つの属性を識別するアルゴリズムをフィルター処理で使用します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.TypeId">
          <source>For most attributes, this just returns the <ph id="ph1">&lt;xref:System.Type&gt;</ph> instance for the attribute.</source>
          <target state="translated">ほとんどの属性だけが返されます、<ph id="ph1">&lt;xref:System.Type&gt;</ph>属性のインスタンス。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EditorAttribute.TypeId">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> overrides this to include the type of the editor base type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EditorAttribute&gt;</ph> このエディターの基本型の型を含めるメソッドをオーバーライドします。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>