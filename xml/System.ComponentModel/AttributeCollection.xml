<Type Name="AttributeCollection" FullName="System.ComponentModel.AttributeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dbf7378a81e18413a351d314b89963bd874f6a25" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63898498" /></Metadata><TypeSignature Language="C#" Value="public class AttributeCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AttributeCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class AttributeCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type AttributeCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8d468-101">属性のコレクションを表します。</span><span class="sxs-lookup"><span data-stu-id="8d468-101">Represents a collection of attributes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d468-102"><xref:System.ComponentModel.AttributeCollection>クラスは読み取り専用; 属性を追加または削除メソッドを実装しません。</span><span class="sxs-lookup"><span data-stu-id="8d468-102">The <xref:System.ComponentModel.AttributeCollection> class is read-only; it does not implement methods to add or remove attributes.</span></span> <span data-ttu-id="8d468-103">これらのメソッドを実装するには、このクラスから継承する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8d468-103">You must inherit from this class to implement these methods.</span></span>  
  
 <span data-ttu-id="8d468-104">使用して、<xref:System.ComponentModel.AttributeCollection.Count%2A>コレクション内に存在する属性の数を検索するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="8d468-104">Use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to find the number of attributes that exist in the collection.</span></span>  
  
 <span data-ttu-id="8d468-105">その内容のコレクションをクエリするのにこのクラスのメソッドを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="8d468-105">You can also use the methods of this class to query the collection about its contents.</span></span> <span data-ttu-id="8d468-106">呼び出す、<xref:System.ComponentModel.AttributeCollection.Contains%2A>メソッドを指定された属性または属性配列をコレクションに存在することを確認します。</span><span class="sxs-lookup"><span data-stu-id="8d468-106">Call the <xref:System.ComponentModel.AttributeCollection.Contains%2A> method to verify that a specified attribute or attribute array exists in the collection.</span></span> <span data-ttu-id="8d468-107">呼び出す、<xref:System.ComponentModel.AttributeCollection.Matches%2A>メソッドは、コレクション内に指定された属性または属性の配列が存在して、指定された属性の値は、コレクション内の値と同じことを確認します。</span><span class="sxs-lookup"><span data-stu-id="8d468-107">Call the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method to verify that a specified attribute or array of attributes exists in the collection, and that the values of the specified attributes are the same as the values in the collection.</span></span>  
  
 <span data-ttu-id="8d468-108">ほとんどの属性には、既定値がありますが、既定値は必要ありません。</span><span class="sxs-lookup"><span data-stu-id="8d468-108">While most attributes have default values, default values are not required.</span></span> <span data-ttu-id="8d468-109">属性は、既定値を持たない場合`null`が、型を受け取るインデックス付きプロパティから返されます。</span><span class="sxs-lookup"><span data-stu-id="8d468-109">If an attribute has no default value, `null` is returned from the indexed property that takes a type.</span></span> <span data-ttu-id="8d468-110">独自の属性を定義するときに、"Default"という名前の属性型のパブリックな静的フィールドを定義するか、引数を受け取らないコンス トラクターを提供する既定値を宣言できます。</span><span class="sxs-lookup"><span data-stu-id="8d468-110">When defining your own attributes, you can declare a default value by either providing a constructor that takes no arguments, or defining a public static field of your attribute type named "Default".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d468-111">最初のコード例を表示するチェックするかどうか、<xref:System.ComponentModel.BrowsableAttribute>がこのコレクションに設定されています。</span><span class="sxs-lookup"><span data-stu-id="8d468-111">The first code example checks to see whether the <xref:System.ComponentModel.BrowsableAttribute> has been set in this collection.</span></span> <span data-ttu-id="8d468-112">2 番目のコード例の実際の値を取得する、<xref:System.ComponentModel.DescriptionAttribute>ボタン。</span><span class="sxs-lookup"><span data-stu-id="8d468-112">The second code example gets the actual value of the <xref:System.ComponentModel.DescriptionAttribute> for a button.</span></span> <span data-ttu-id="8d468-113">どちらの例では、する必要があります`button1`と`textBox1`フォーム上に作成します。</span><span class="sxs-lookup"><span data-stu-id="8d468-113">Both examples require that `button1` and `textBox1` have been created on a form.</span></span> <span data-ttu-id="8d468-114">属性を使用する場合は、属性が設定されている、または値へのアクセスを確認します。</span><span class="sxs-lookup"><span data-stu-id="8d468-114">When using attributes, verify that an attribute has been set, or access its value.</span></span>  
  
 [!code-cpp[Classic AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#1)]  
  
 [!code-cpp[Classic AttributeCollection Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection Example/CPP/source.cpp#2)]
 [!code-csharp[Classic AttributeCollection Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection Example/CS/source.cs#2)]
 [!code-vb[Classic AttributeCollection Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection Example/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
    <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d468-115"><see cref="T:System.ComponentModel.AttributeCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8d468-115">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AttributeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d468-116"><see cref="T:System.ComponentModel.AttributeCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8d468-116">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeCollection (params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.#ctor(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ParamArray attributes As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeCollection(... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.AttributeCollection : Attribute[] -&gt; System.ComponentModel.AttributeCollection" Usage="new System.ComponentModel.AttributeCollection attributes" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="8d468-117">コレクションの属性を提供する <see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="8d468-117">An array of type <see cref="T:System.Attribute" /> that provides the attributes for this collection.</span></span></param>
        <summary><span data-ttu-id="8d468-118"><see cref="T:System.ComponentModel.AttributeCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8d468-118">Initializes a new instance of the <see cref="T:System.ComponentModel.AttributeCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d468-119">次のコード例を作成する新しい<xref:System.ComponentModel.AttributeCollection>で属性を使用して`button1`します。</span><span class="sxs-lookup"><span data-stu-id="8d468-119">The following code example creates a new <xref:System.ComponentModel.AttributeCollection> using the attributes on `button1`.</span></span> <span data-ttu-id="8d468-120">前提としています`button1`がフォーム上に作成されました。</span><span class="sxs-lookup"><span data-stu-id="8d468-120">It assumes that `button1` has been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.AttributeCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.AttributeCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d468-121"><paramref name="attributes" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8d468-121"><paramref name="attributes" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="protected virtual Attribute[] Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute[] Attributes" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Attributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Attributes As Attribute()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;Attribute ^&gt; ^ Attributes { cli::array &lt;Attribute ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : Attribute[]" Usage="System.ComponentModel.AttributeCollection.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d468-122">属性のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="8d468-122">Gets the attribute collection.</span></span></summary>
        <value><span data-ttu-id="8d468-123">属性のコレクション。</span><span class="sxs-lookup"><span data-stu-id="8d468-123">The attribute collection.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d468-124">指定した属性または属性配列が属性コレクションに格納されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="8d468-124">Determines whether this collection of attributes has the specified attribute or array of attributes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(Attribute ^ attribute);" />
      <MemberSignature Language="F#" Value="member this.Contains : Attribute -&gt; bool" Usage="attributeCollection.Contains attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Attribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="8d468-125">コレクション内で検索する <see cref="T:System.Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-125">An <see cref="T:System.Attribute" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="8d468-126">指定した属性が属性コレクションに格納されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="8d468-126">Determines whether this collection of attributes has the specified attribute.</span></span></summary>
        <returns><span data-ttu-id="8d468-127">指定した属性がコレクションに格納されているか、指定した属性型の既定の属性が格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-127"><see langword="true" /> if the collection contains the attribute or is the default attribute for the type of attribute; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d468-128">このコレクションでは、指定した型の属性は、コレクションに存在する場合と、指定した属性の値がコレクション内の属性のインスタンスの値と同じである場合に指定した属性があります。</span><span class="sxs-lookup"><span data-stu-id="8d468-128">This collection has the specified attribute if the specified type of attribute exists in the collection, and if the value of the specified attribute is the same as the value of the instance of the attribute in the collection.</span></span>  
  
 <span data-ttu-id="8d468-129">間の差、<xref:System.ComponentModel.AttributeCollection.Matches%2A>と<xref:System.ComponentModel.AttributeCollection.Contains%2A>メソッドは、<xref:System.ComponentModel.AttributeCollection.Matches%2A>呼び出し、<xref:System.Attribute.Match%2A>属性、メソッドと<xref:System.ComponentModel.AttributeCollection.Contains%2A>呼び出し、<xref:System.Object.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8d468-129">The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="8d468-130">ほとんどの属性は、これらのメソッドは、同じ操作を行います。</span><span class="sxs-lookup"><span data-stu-id="8d468-130">For most attributes, these methods do the same thing.</span></span> <span data-ttu-id="8d468-131">ただし、複数のフラグを持たない可能性のある属性の<xref:System.Attribute.Match%2A>は返されるように、通常実装`true`フラグのいずれかが満たされている場合。</span><span class="sxs-lookup"><span data-stu-id="8d468-131">For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied.</span></span> <span data-ttu-id="8d468-132">たとえば、"SupportsSql"、"SupportsOleDb"および"SupportsXml"ブール フラグでのデータ バインディング属性があるとします。</span><span class="sxs-lookup"><span data-stu-id="8d468-132">For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</span></span> <span data-ttu-id="8d468-133">この属性は、次の 3 つすべてのデータ バインディング方法をサポートしているプロパティに存在する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8d468-133">This attribute may be present on a property that supports all three data-binding approaches.</span></span> <span data-ttu-id="8d468-134">プログラマは、特定の方法は、使用可能なかどうかにのみ知る必要がある場合もあります 3 つすべてがありません。</span><span class="sxs-lookup"><span data-stu-id="8d468-134">It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</span></span> <span data-ttu-id="8d468-135">そのため、プログラマが使用できます<xref:System.Attribute.Match%2A>プログラマ フラグのみを含む属性のインスタンスに必要があります。</span><span class="sxs-lookup"><span data-stu-id="8d468-135">Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d468-136">次のコード例をコレクションがあるかどうかを確認するチェックを<xref:System.ComponentModel.BrowsableAttribute>に設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="8d468-136">The following code example checks to see whether the collection has a <xref:System.ComponentModel.BrowsableAttribute> set to `true`.</span></span> <span data-ttu-id="8d468-137">前提としています`button1`と`textBox1`フォーム上に作成します。</span><span class="sxs-lookup"><span data-stu-id="8d468-137">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (attributes As Attribute()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Contains : Attribute[] -&gt; bool" Usage="attributeCollection.Contains attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="8d468-138">コレクション内で検索する <see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="8d468-138">An array of type <see cref="T:System.Attribute" /> to find in the collection.</span></span></param>
        <summary><span data-ttu-id="8d468-139">属性配列にある指定したすべての属性が属性コレクションに格納されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="8d468-139">Determines whether this attribute collection contains all the specified attributes in the attribute array.</span></span></summary>
        <returns><span data-ttu-id="8d468-140">コレクションにすべての属性が格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-140"><see langword="true" /> if the collection contains all the attributes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d468-141">このコレクションでは、すべての指定した属性型がコレクション内に存在する場合と、指定した配列内の各属性がコレクション内の属性と同じである場合、属性の指定した配列があります。</span><span class="sxs-lookup"><span data-stu-id="8d468-141">This collection has the specified array of attributes if all the specified attribute types exist in the collection and if each attribute in the specified array is the same as an attribute in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d468-142">次のコード例で属性を比較して`button1`と`textBox1`ボタンの属性がテキスト ボックスの属性に含まれるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="8d468-142">The following code example compares the attributes in `button1` and `textBox1` to see whether the attributes for the button are contained in the attributes for the text box.</span></span> <span data-ttu-id="8d468-143">これでは、両方`button1`と`textBox1`フォームで作成されました。</span><span class="sxs-lookup"><span data-stu-id="8d468-143">It assumes that both `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Contains1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Contains1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="attributeCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8d468-144">コレクションのコピー先の <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-144">The <see cref="T:System.Array" /> to copy the collection to.</span></span></param>
        <param name="index"><span data-ttu-id="8d468-145">コピーの開始位置を示すインデックス。</span><span class="sxs-lookup"><span data-stu-id="8d468-145">The index to start from.</span></span></param>
        <summary><span data-ttu-id="8d468-146">指定したインデックスを開始位置として、配列にコレクションをコピーします。</span><span class="sxs-lookup"><span data-stu-id="8d468-146">Copies the collection to an array, starting at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.ComponentModel.AttributeCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d468-147">属性の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="8d468-147">Gets the number of attributes.</span></span></summary>
        <value><span data-ttu-id="8d468-148">属性の数。</span><span class="sxs-lookup"><span data-stu-id="8d468-148">The number of attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d468-149">使用することができます、<xref:System.ComponentModel.AttributeCollection.Count%2A>オブジェクトのコレクションを反復処理するループの制限を設定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="8d468-149">You can use the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to set the limits of a loop that iterates through a collection of objects.</span></span> <span data-ttu-id="8d468-150">コレクションの 0 から始まる場合、必ず使用`Count - 1`ループの上限の境界として。</span><span class="sxs-lookup"><span data-stu-id="8d468-150">If the collection is zero-based, be sure to use `Count - 1` as the upper boundary of the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d468-151">次のコード例では、<xref:System.ComponentModel.AttributeCollection.Count%2A>プロパティにプロパティの数を印刷する`button1`テキスト ボックスにします。</span><span class="sxs-lookup"><span data-stu-id="8d468-151">The following code example uses the <xref:System.ComponentModel.AttributeCollection.Count%2A> property to print the number of properties on `button1` in a text box.</span></span> <span data-ttu-id="8d468-152">前提としています`button1`と`textBox1`フォーム上に作成します。</span><span class="sxs-lookup"><span data-stu-id="8d468-152">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Count Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Count Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.AttributeCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.AttributeCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.AttributeCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As AttributeCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::AttributeCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.AttributeCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d468-153">新しいコレクションを作成するのではなく、使用できる空のコレクションを指定します。</span><span class="sxs-lookup"><span data-stu-id="8d468-153">Specifies an empty collection that you can use, rather than creating a new one.</span></span> <span data-ttu-id="8d468-154">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="8d468-154">This field is read-only.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromExisting">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection FromExisting (System.ComponentModel.AttributeCollection existing, params Attribute[] newAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection FromExisting(class System.ComponentModel.AttributeCollection existing, class System.Attribute[] newAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromExisting (existing As AttributeCollection, ParamArray newAttributes As Attribute()) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ FromExisting(System::ComponentModel::AttributeCollection ^ existing, ... cli::array &lt;Attribute ^&gt; ^ newAttributes);" />
      <MemberSignature Language="F#" Value="static member FromExisting : System.ComponentModel.AttributeCollection * Attribute[] -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.AttributeCollection.FromExisting (existing, newAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existing" Type="System.ComponentModel.AttributeCollection" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="newAttributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="existing"><span data-ttu-id="8d468-155">コピー元の <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-155">An <see cref="T:System.ComponentModel.AttributeCollection" /> from which to create the copy.</span></span></param>
        <param name="newAttributes"><span data-ttu-id="8d468-156">コレクションの属性を提供する <see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="8d468-156">An array of type <see cref="T:System.Attribute" /> that provides the attributes for this collection.</span></span> <span data-ttu-id="8d468-157"><see langword="null" /> の可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8d468-157">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8d468-158">既存の <see cref="T:System.ComponentModel.AttributeCollection" /> から新しい <see cref="T:System.ComponentModel.AttributeCollection" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="8d468-158">Creates a new <see cref="T:System.ComponentModel.AttributeCollection" /> from an existing <see cref="T:System.ComponentModel.AttributeCollection" />.</span></span></summary>
        <returns><span data-ttu-id="8d468-159"><paramref name="existing" /> のコピーである新しい <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-159">A new <see cref="T:System.ComponentModel.AttributeCollection" /> that is a copy of <paramref name="existing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d468-160">場合、`newAttributes`パラメーターを指定すると、その<xref:System.Attribute>エントリとのマージ、`existing`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="8d468-160">If the `newAttributes` parameter is provided, its <xref:System.Attribute> entries are merged with those of the `existing` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d468-161"><paramref name="existing" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8d468-161"><paramref name="existing" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultAttribute">
      <MemberSignature Language="C#" Value="protected Attribute GetDefaultAttribute (Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Attribute GetDefaultAttribute(class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultAttribute (attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Attribute ^ GetDefaultAttribute(Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultAttribute : Type -&gt; Attribute" Usage="attributeCollection.GetDefaultAttribute attributeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="8d468-162">取得する属性の <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-162">The <see cref="T:System.Type" /> of the attribute to retrieve.</span></span></param>
        <summary><span data-ttu-id="8d468-163">指定した <see cref="T:System.Attribute" /> の既定の <see cref="T:System.Type" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8d468-163">Returns the default <see cref="T:System.Attribute" /> of a given <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="8d468-164">指定された <paramref name="attributeType" /> の既定の <see cref="T:System.Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-164">The default <see cref="T:System.Attribute" /> of a given <paramref name="attributeType" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="attributeCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d468-165">このコレクションの列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="8d468-165">Gets an enumerator for this collection.</span></span></summary>
        <returns><span data-ttu-id="8d468-166"><see cref="T:System.Collections.IEnumerator" /> 型の列挙子。</span><span class="sxs-lookup"><span data-stu-id="8d468-166">An enumerator of type <see cref="T:System.Collections.IEnumerator" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8d468-167">次のコード例では、属性の列挙子を取得`button1`します。</span><span class="sxs-lookup"><span data-stu-id="8d468-167">The following code example gets an enumerator for the attributes on `button1`.</span></span> <span data-ttu-id="8d468-168">列挙子を使用して、コレクション内の属性の名前を出力します。</span><span class="sxs-lookup"><span data-stu-id="8d468-168">It uses the enumerator to print the names of the attributes in the collection.</span></span> <span data-ttu-id="8d468-169">前提としています`button1`と`textBox1`フォーム上に作成します。</span><span class="sxs-lookup"><span data-stu-id="8d468-169">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CPP/Source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.GetEnumerator Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.GetEnumerator Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d468-170">指定したインデックスの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8d468-170">Gets the attribute with the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Attribute this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Attribute ^ default[int] { Attribute ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : Attribute" Usage="System.ComponentModel.AttributeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d468-171"><see cref="T:System.ComponentModel.AttributeCollection" /> の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="8d468-171">The zero-based index of <see cref="T:System.ComponentModel.AttributeCollection" />.</span></span></param>
        <summary><span data-ttu-id="8d468-172">指定したインデックス番号の属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8d468-172">Gets the attribute with the specified index number.</span></span></summary>
        <value><span data-ttu-id="8d468-173">指定したインデックス番号を持つ <see cref="T:System.Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-173">The <see cref="T:System.Attribute" /> with the specified index number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d468-174">インデックス番号は 0 から始まります。</span><span class="sxs-lookup"><span data-stu-id="8d468-174">The index number is zero-based.</span></span> <span data-ttu-id="8d468-175">そのため、特定の位置を表す数値から 1 を減算する必要があります<xref:System.Attribute>にアクセスする<xref:System.Attribute>します。</span><span class="sxs-lookup"><span data-stu-id="8d468-175">Therefore, you must subtract 1 from the numerical position of a particular <xref:System.Attribute> to access that <xref:System.Attribute>.</span></span> <span data-ttu-id="8d468-176">たとえば、3 つ目を取得する<xref:System.Attribute>を指定する必要がある`myColl[2]`します。</span><span class="sxs-lookup"><span data-stu-id="8d468-176">For example, to get the third <xref:System.Attribute>, you need to specify `myColl[2]`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d468-177">次のコード例では、<xref:System.ComponentModel.AttributeCollection.Item%2A>プロパティの名前を印刷する、<xref:System.Attribute>テキスト ボックス内のインデックス番号を指定します。</span><span class="sxs-lookup"><span data-stu-id="8d468-177">The following code example uses the <xref:System.ComponentModel.AttributeCollection.Item%2A> property to print the name of the <xref:System.Attribute> specified by the index number in a text box.</span></span> <span data-ttu-id="8d468-178">このコード例が、2 つ目の名前を出力インデックス番号は 0 から始まるため、<xref:System.Attribute>テキスト ボックスにします。</span><span class="sxs-lookup"><span data-stu-id="8d468-178">Because the index number is zero-based, this code example prints the name of the second <xref:System.Attribute> in a text box.</span></span> <span data-ttu-id="8d468-179">想定して`button1`と`textBox1`フォーム上に作成します。</span><span class="sxs-lookup"><span data-stu-id="8d468-179">It assumes `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.this Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.this Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual Attribute this[Type attributeType] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Attribute Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Attribute ^ default[Type ^] { Attribute ^ get(Type ^ attributeType); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : Attribute" Usage="System.ComponentModel.AttributeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="8d468-180">コレクションから取得する <see cref="T:System.Type" /> の <see cref="T:System.Attribute" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-180">The <see cref="T:System.Type" /> of the <see cref="T:System.Attribute" /> to get from the collection.</span></span></param>
        <summary><span data-ttu-id="8d468-181">指定した型の属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="8d468-181">Gets the attribute with the specified type.</span></span></summary>
        <value><span data-ttu-id="8d468-182">指定した型の <see cref="T:System.Attribute" />。そのような属性が存在しない場合は、指定した属性型の既定値。</span><span class="sxs-lookup"><span data-stu-id="8d468-182">The <see cref="T:System.Attribute" /> with the specified type or, if the attribute does not exist, the default value for the attribute type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d468-183">コレクション内の属性が存在しない場合、このプロパティは、属性の型の既定値を返します。</span><span class="sxs-lookup"><span data-stu-id="8d468-183">If the attribute does not exist in the collection, this property returns the default value for the attribute type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d468-184">次のコード例の取得、<xref:System.ComponentModel.DesignerAttribute>コレクションからその値を出力します。</span><span class="sxs-lookup"><span data-stu-id="8d468-184">The following code example gets the <xref:System.ComponentModel.DesignerAttribute> from the collection and prints its value.</span></span> <span data-ttu-id="8d468-185">前提としています`button1`と`textBox1`フォーム上に作成します。</span><span class="sxs-lookup"><span data-stu-id="8d468-185">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 <span data-ttu-id="8d468-186">このコード例を実行するには、完全修飾アセンブリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8d468-186">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="8d468-187">完全修飾アセンブリ名を取得する方法については、次を参照してください。[アセンブリ名](~/docs/framework/app-domains/assembly-names.md)します。</span><span class="sxs-lookup"><span data-stu-id="8d468-187">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Matches">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d468-188">指定した属性または属性配列がコレクション内の属性または属性配列と同じかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="8d468-188">Determines whether a specified attribute or array of attributes is the same as an attribute or array of attributes in the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (Attribute attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Attribute attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(Attribute ^ attribute);" />
      <MemberSignature Language="F#" Value="member this.Matches : Attribute -&gt; bool" Usage="attributeCollection.Matches attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Attribute" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="8d468-189">コレクション内の属性と比較する対象の <see cref="T:System.Attribute" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="8d468-189">An instance of <see cref="T:System.Attribute" /> to compare with the attributes in this collection.</span></span></param>
        <summary><span data-ttu-id="8d468-190">指定した属性がコレクション内の属性と同じかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="8d468-190">Determines whether a specified attribute is the same as an attribute in the collection.</span></span></summary>
        <returns><span data-ttu-id="8d468-191">指定した属性がコレクションに格納されていて、その値がコレクション内の属性の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-191"><see langword="true" /> if the attribute is contained within the collection and has the same value as the attribute in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d468-192">属性は、一致するサポートを提供できます。</span><span class="sxs-lookup"><span data-stu-id="8d468-192">An attribute can provide support for matching.</span></span>  
  
 <span data-ttu-id="8d468-193">間の差、<xref:System.ComponentModel.AttributeCollection.Matches%2A>と<xref:System.ComponentModel.AttributeCollection.Contains%2A>メソッドは、<xref:System.ComponentModel.AttributeCollection.Matches%2A>呼び出し、<xref:System.Attribute.Match%2A>属性、メソッドと<xref:System.ComponentModel.AttributeCollection.Contains%2A>呼び出し、<xref:System.Object.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="8d468-193">The difference between the <xref:System.ComponentModel.AttributeCollection.Matches%2A> and <xref:System.ComponentModel.AttributeCollection.Contains%2A> methods is that <xref:System.ComponentModel.AttributeCollection.Matches%2A> calls the <xref:System.Attribute.Match%2A> method on an attribute, and <xref:System.ComponentModel.AttributeCollection.Contains%2A> calls the <xref:System.Object.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="8d468-194">ほとんどの属性は、これらのメソッドは、同じ操作を行います。</span><span class="sxs-lookup"><span data-stu-id="8d468-194">For most attributes, these methods do the same thing.</span></span> <span data-ttu-id="8d468-195">ただし、複数のフラグを持たない可能性のある属性の<xref:System.Attribute.Match%2A>は返されるように、通常実装`true`フラグのいずれかが満たされている場合。</span><span class="sxs-lookup"><span data-stu-id="8d468-195">For attributes that may have multiple flags, however, <xref:System.Attribute.Match%2A> is typically implemented so that it returns `true` if any of the flags are satisfied.</span></span> <span data-ttu-id="8d468-196">たとえば、"SupportsSql"、"SupportsOleDb"および"SupportsXml"ブール フラグでのデータ バインディング属性があるとします。</span><span class="sxs-lookup"><span data-stu-id="8d468-196">For example, consider a data binding attribute with the Boolean flags "SupportsSql", "SupportsOleDb", and "SupportsXml".</span></span> <span data-ttu-id="8d468-197">この属性は、すべての 3 つのデータ バインディング方法をサポートしているプロパティに存在する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8d468-197">This attribute may be present on a property that supports all three data binding approaches.</span></span> <span data-ttu-id="8d468-198">プログラマは、特定の方法は、使用可能なかどうかにのみ知る必要がある場合もあります 3 つすべてがありません。</span><span class="sxs-lookup"><span data-stu-id="8d468-198">It will often be the case that a programmer needs to know only if a particular approach is available, not all three.</span></span> <span data-ttu-id="8d468-199">そのため、プログラマが使用できます<xref:System.Attribute.Match%2A>プログラマ フラグのみを含む属性のインスタンスに必要があります。</span><span class="sxs-lookup"><span data-stu-id="8d468-199">Therefore, a programmer could use <xref:System.Attribute.Match%2A> with an instance of the attribute containing only the flags the programmer needs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d468-200">次のコード例では、ことを確認、<xref:System.ComponentModel.BrowsableAttribute>がコレクションのメンバーであり設定されている`true`します。</span><span class="sxs-lookup"><span data-stu-id="8d468-200">The following code example verifies that the <xref:System.ComponentModel.BrowsableAttribute> is a member of the collection and that it has been set to `true`.</span></span> <span data-ttu-id="8d468-201">前提としています`button1`と`textBox1`フォーム上に作成します。</span><span class="sxs-lookup"><span data-stu-id="8d468-201">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Matches Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Matches Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.BrowsableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public bool Matches (Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Matches(class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Matches (attributes As Attribute()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Matches(cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="member this.Matches : Attribute[] -&gt; bool" Usage="attributeCollection.Matches attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="8d468-202">コレクション内の属性と比較する対象の <see cref="T:System.CodeDom.MemberAttributes" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="8d468-202">An array of <see cref="T:System.CodeDom.MemberAttributes" /> to compare with the attributes in this collection.</span></span></param>
        <summary><span data-ttu-id="8d468-203">指定した配列内の属性がコレクション内の属性と同じかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="8d468-203">Determines whether the attributes in the specified array are the same as the attributes in the collection.</span></span></summary>
        <returns><span data-ttu-id="8d468-204">配列内の属性がコレクションに格納されていて、その値がコレクション内の属性の値と同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-204"><see langword="true" /> if all the attributes in the array are contained in the collection and have the same values as the attributes in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d468-205">属性は、一致するサポートを提供できます。</span><span class="sxs-lookup"><span data-stu-id="8d468-205">An attribute can provide support for matching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d468-206">次のコード例では、ボタンと一致するかどうかを表示するテキスト ボックス内の属性を比較します。</span><span class="sxs-lookup"><span data-stu-id="8d468-206">The following code example compares the attributes in a button and a text box to see whether they match.</span></span> <span data-ttu-id="8d468-207">前提としています`button1`と`textBox1`フォーム上に作成します。</span><span class="sxs-lookup"><span data-stu-id="8d468-207">It assumes that `button1` and `textBox1` have been created on a form.</span></span>  
  
 [!code-cpp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeCollection.Matches1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic AttributeCollection.Matches1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d468-208">コレクションに格納されている要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="8d468-208">Gets the number of elements contained in the collection.</span></span></summary>
        <value><span data-ttu-id="8d468-209">コレクションに格納されている要素の数。</span><span class="sxs-lookup"><span data-stu-id="8d468-209">The number of elements contained in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d468-210">コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8d468-210">Gets a value indicating whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="8d468-211">コレクションへのアクセスが同期されている (スレッド セーフである) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-211"><see langword="true" /> if access to the collection is synchronized (thread-safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d468-212">コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="8d468-212">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="8d468-213">コレクションへのアクセスを同期するために使用できるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8d468-213">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d468-214"><see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Collections.IDictionary" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="8d468-214">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <returns><span data-ttu-id="8d468-215"><see cref="T:System.Collections.IEnumerator" /> の <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="8d468-215">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.IDictionary" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>