<Type Name="TypeDescriptor" FullName="System.ComponentModel.TypeDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88fbd55a266da70cd710aa6d70c1000a3267fa3a" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57916089" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptor sealed" />
  <TypeSignature Language="F#" Value="type TypeDescriptor = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b1781-101">属性、プロパティ、イベントなど、コンポーネントの特性に関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="b1781-101">Provides information about the characteristics for a component, such as its attributes, properties, and events.</span></span> <span data-ttu-id="b1781-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="b1781-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-103">.NET Framework には、型のメタデータにアクセスする 2 つの方法が用意されています: で提供される API のリフレクション、<xref:System.Reflection?displayProperty=nameWithType>名前空間、および<xref:System.ComponentModel.TypeDescriptor>クラス。</span><span class="sxs-lookup"><span data-stu-id="b1781-103">The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=nameWithType> namespace, and the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="b1781-104">リフレクションは、すべての種類に使用できる一般的なメカニズムでその基礎が確立されているため、<xref:System.Object.GetType%2A>ルートのメソッド<xref:System.Object>クラス。</span><span class="sxs-lookup"><span data-stu-id="b1781-104">Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class.</span></span> <span data-ttu-id="b1781-105">コンパイル対象の型の後に変更できないことに、型が返されます情報は、拡張可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="b1781-105">The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</span></span> <span data-ttu-id="b1781-106">詳細については、トピックを参照してください。[リフレクション](~/docs/framework/reflection-and-codedom/reflection.md)します。</span><span class="sxs-lookup"><span data-stu-id="b1781-106">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="b1781-107">これに対し、<xref:System.ComponentModel.TypeDescriptor>コンポーネント用検査の拡張メカニズムです。 実装するクラスのもの、<xref:System.ComponentModel.IComponent>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="b1781-107">In contrast, <xref:System.ComponentModel.TypeDescriptor> is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface.</span></span> <span data-ttu-id="b1781-108">リフレクションとは異なり、メソッドのことは検査されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-108">Unlike reflection, it does not inspect for methods.</span></span> <span data-ttu-id="b1781-109"><xref:System.ComponentModel.TypeDescriptor> 対象のコンポーネントで使用できるいくつかのサービスによって動的に拡張できます。<xref:System.ComponentModel.Component.Site%2A>します。</span><span class="sxs-lookup"><span data-stu-id="b1781-109"><xref:System.ComponentModel.TypeDescriptor> can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>.</span></span> <span data-ttu-id="b1781-110">次の表では、これらのサービスを示します。</span><span class="sxs-lookup"><span data-stu-id="b1781-110">The following table shows these services.</span></span>  
  
|<span data-ttu-id="b1781-111">サービス名</span><span class="sxs-lookup"><span data-stu-id="b1781-111">Service name</span></span>|<span data-ttu-id="b1781-112">説明</span><span class="sxs-lookup"><span data-stu-id="b1781-112">Description</span></span>|  
|------------------|-----------------|  
|<xref:System.ComponentModel.IExtenderProvider>|<span data-ttu-id="b1781-113">別のクラスを行う<xref:System.Windows.Forms.ToolTip>、コンポーネントの追加のプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="b1781-113">Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="b1781-114">コンポーネントによって公開される標準のメタデータを変更する別のオブジェクトを有効にします。</span><span class="sxs-lookup"><span data-stu-id="b1781-114">Enables another object to modify the standard metadata that is exposed by a component.</span></span>|  
|<xref:System.ComponentModel.ICustomTypeDescriptor>|<span data-ttu-id="b1781-115">標準的な検査メカニズムを置き換えて、独自のメタデータを完全に動的に指定するクラスを有効に<xref:System.ComponentModel.TypeDescriptor>します。</span><span class="sxs-lookup"><span data-stu-id="b1781-115">Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <xref:System.ComponentModel.TypeDescriptor>.</span></span>|  
  
 <span data-ttu-id="b1781-116">によって提供される extensibility<xref:System.ComponentModel.TypeDescriptor>により、異なるは、実際の実行時表現、コンポーネントのデザイン時の表現<xref:System.ComponentModel.TypeDescriptor>デザイン時のインフラストラクチャを構築するために便利です。</span><span class="sxs-lookup"><span data-stu-id="b1781-116">The extensibility provided by <xref:System.ComponentModel.TypeDescriptor> allows the design-time representation of a component to differ from its actual run-time representation, which makes <xref:System.ComponentModel.TypeDescriptor> useful for building design-time infrastructure.</span></span>  
  
 <span data-ttu-id="b1781-117">すべてのメソッド<xref:System.ComponentModel.TypeDescriptor>は`static`します。</span><span class="sxs-lookup"><span data-stu-id="b1781-117">All the methods in <xref:System.ComponentModel.TypeDescriptor> are `static`.</span></span> <span data-ttu-id="b1781-118">このクラスのインスタンスを作成することはできませんし、このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="b1781-118">You cannot create an instance of this class, and this class cannot be inherited.</span></span>  
  
 <span data-ttu-id="b1781-119">プロパティを設定して、イベントの値の 2 つの方法: コンポーネントのクラスで指定またはデザイン時に変更します。</span><span class="sxs-lookup"><span data-stu-id="b1781-119">You can set property and event values two different ways: specify them in the component class or change them at design time.</span></span> <span data-ttu-id="b1781-120">これらを設定するための値のオーバー ロードされたメソッドの 2 つの方法<xref:System.ComponentModel.TypeDescriptor>パラメーターの 2 つのさまざまな種類: クラス型またはオブジェクトのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1781-120">Because you can set these values two ways, the overloaded methods of <xref:System.ComponentModel.TypeDescriptor> take two different types of parameters: a class type or an object instance.</span></span>  
  
 <span data-ttu-id="b1781-121">アクセスするときに<xref:System.ComponentModel.TypeDescriptor>情報とするオブジェクトのインスタンスがある、コンポーネントを呼び出して取得するメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b1781-121">When you want to access <xref:System.ComponentModel.TypeDescriptor> information and you have an instance of the object, use the method that calls for a component.</span></span> <span data-ttu-id="b1781-122">クラス型オブジェクトのインスタンスがあるない場合にのみ呼び出すメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b1781-122">Use the method that calls for the class type only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="b1781-123">プロパティとイベントがによってキャッシュ<xref:System.ComponentModel.TypeDescriptor>速度。</span><span class="sxs-lookup"><span data-stu-id="b1781-123">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="b1781-124">通常、これらは定数オブジェクトの有効期間です。</span><span class="sxs-lookup"><span data-stu-id="b1781-124">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="b1781-125">ただし、拡張プロバイダーとデザイナーは、一連のオブジェクトのプロパティを変更できます。</span><span class="sxs-lookup"><span data-stu-id="b1781-125">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="b1781-126">この場合は、次に、<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>キャッシュを更新するメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1781-126">If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="N:System.Reflection" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.ISite" />
    <related type="Article" href="https://msdn.microsoft.com/library/e81b8e2f-e06e-44fa-8129-7bdb0230101f"><span data-ttu-id="b1781-127">型記述子の概要</span><span class="sxs-lookup"><span data-stu-id="b1781-127">Type Descriptor Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/d1a58e7f-fb39-4d50-bf84-e3b8f9bf9775"><span data-ttu-id="b1781-128">リフレクション</span><span class="sxs-lookup"><span data-stu-id="b1781-128">Reflection</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-129">対象コンポーネントにクラス レベルの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-129">Adds class-level attributes to the target component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAttributes (instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(System::Object ^ instance, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : obj * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b1781-130">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1781-130">An instance of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-131">コンポーネントのクラスに追加する <see cref="T:System.Attribute" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-131">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span></span></param>
        <summary><span data-ttu-id="b1781-132">対象コンポーネントのインスタンスにクラス レベルの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-132">Adds class-level attributes to the target component instance.</span></span></summary>
        <returns><span data-ttu-id="b1781-133">指定した属性を追加する際に使用された、新しく作成された <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-133">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-134"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29>メソッドは、指定したコンポーネントのインスタンスにクラス レベルの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-134">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified instance of a component.</span></span> <span data-ttu-id="b1781-135">これは、Visual Studio Windows フォーム デザイナーとのプロパティ ウィンドウを使用してアプリケーションの一般的な要件であるため、このメソッドは、既に属性で指定した属性をマージする型説明プロバイダーを作成して、ショートカットを提供します。クラスに存在します。</span><span class="sxs-lookup"><span data-stu-id="b1781-135">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="b1781-136">戻り値は、属性を追加するために使用された型説明のプロバイダーです。</span><span class="sxs-lookup"><span data-stu-id="b1781-136">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="b1781-137">このプロバイダーに渡すことが後で、<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>メソッドに追加された属性は不要になったとき。</span><span class="sxs-lookup"><span data-stu-id="b1781-137">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-138">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-138">One or both of the parameters is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="b1781-139">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="b1781-139">for full access to system resources.</span></span> <span data-ttu-id="b1781-140">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-140">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b1781-141">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="b1781-141">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : Type * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b1781-142">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-142">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-143">コンポーネントのクラスに追加する <see cref="T:System.Attribute" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-143">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span></span></param>
        <summary><span data-ttu-id="b1781-144">対象のコンポーネントの型にクラス レベルの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-144">Adds class-level attributes to the target component type.</span></span></summary>
        <returns><span data-ttu-id="b1781-145">指定した属性を追加する際に使用された、新しく作成された <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-145">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-146"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29>メソッドは、コンポーネントの指定した型にクラス レベルの属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-146">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified type of a component.</span></span> <span data-ttu-id="b1781-147">これは、Visual Studio Windows フォーム デザイナーとのプロパティ ウィンドウを使用してアプリケーションの一般的な要件であるため、このメソッドは、既に属性で指定した属性をマージする型説明プロバイダーを作成して、ショートカットを提供します。クラスに存在します。</span><span class="sxs-lookup"><span data-stu-id="b1781-147">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="b1781-148">戻り値は、属性を追加するために使用された型説明のプロバイダーです。</span><span class="sxs-lookup"><span data-stu-id="b1781-148">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="b1781-149">このプロバイダーに渡すことが後で、<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>メソッドに追加された属性は不要になったとき。</span><span class="sxs-lookup"><span data-stu-id="b1781-149">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-150">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-150">One or both of the parameters is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="b1781-151">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="b1781-151">for full access to system resources.</span></span> <span data-ttu-id="b1781-152">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-152">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b1781-153">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="b1781-153">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddEditorTable">
      <MemberSignature Language="C#" Value="public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEditorTable(class System.Type editorBaseType, class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddEditorTable (editorBaseType As Type, table As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddEditorTable(Type ^ editorBaseType, System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddEditorTable : Type * System.Collections.Hashtable -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddEditorTable (editorBaseType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="b1781-154">エディター テーブルを追加する対象のエディター基本型。</span><span class="sxs-lookup"><span data-stu-id="b1781-154">The editor base type to add the editor table for.</span></span> <span data-ttu-id="b1781-155">この型のテーブルが既に存在する場合、このメソッドは何も実行しません。</span><span class="sxs-lookup"><span data-stu-id="b1781-155">If a table already exists for this type, this method will do nothing.</span></span></param>
        <param name="table"><span data-ttu-id="b1781-156">追加する <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-156">The <see cref="T:System.Collections.Hashtable" /> to add.</span></span></param>
        <summary><span data-ttu-id="b1781-157">指定されたエディターの基本型のエディター テーブルを追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-157">Adds an editor table for the given editor base type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-158"><xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A>メソッドは、特定のエディターの基本型のエディター テーブルを追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-158">The <xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> method adds an editor table for the given editor base type.</span></span> <span data-ttu-id="b1781-159">通常、エディターは、コンポーネントのメタデータとして指定されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-159">Typically, editors are specified as metadata on a component.</span></span> <span data-ttu-id="b1781-160">ただし場合の要求されたエディターの基本のメタデータのない型が見つからないコンポーネントは、関連付けられている<xref:System.ComponentModel.TypeDescriptor>はいずれか見つかった場合は、エディターの型のエディター テーブルを検索します。</span><span class="sxs-lookup"><span data-stu-id="b1781-160">However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found.</span></span> <span data-ttu-id="b1781-161">エディター テーブルは、型記述子に追加されると、削除することはできず、型記述子が所有します。</span><span class="sxs-lookup"><span data-stu-id="b1781-161">Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</span></span> <span data-ttu-id="b1781-162">型記述子では、このテーブルに変更を自由に加える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b1781-162">The type descriptor may freely make modifications to this table.</span></span>  
  
 <span data-ttu-id="b1781-163">エディターのテーブルの形式は、値として、キーおよびエディターとしてのデータ型を使用します。</span><span class="sxs-lookup"><span data-stu-id="b1781-163">The format for an editor table uses data types as keys and editors as values.</span></span> <span data-ttu-id="b1781-164">テーブル内のエントリの値の部分では、エディターのインスタンスを表します。</span><span class="sxs-lookup"><span data-stu-id="b1781-164">The value portion of an entry in the table represents an editor instance.</span></span> <span data-ttu-id="b1781-165">3 つの値のいずれかのことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-165">It can have one of three values.</span></span> <span data-ttu-id="b1781-166">文字列を含む、型記述子オブジェクトの種類、およびし負荷、型の完全修飾名は、これと想定されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-166">If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</span></span> <span data-ttu-id="b1781-167">型が含まれている場合がこの型のインスタンスを作成してエディターを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1781-167">If it contains a type, an instance of this type will be created to obtain an editor.</span></span> <span data-ttu-id="b1781-168">最後に、値の部分では、実際のエディターのインスタンスを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-168">Finally, the value portion may contain an actual editor instance.</span></span> <span data-ttu-id="b1781-169">型記述子では、エディターがインスタンスに解決する場合は、将来の使用については、表に、インスタンスが格納されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-169">If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-170">この型記述子のプロバイダーのリストに型説明のプロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-170">Adds a type description provider to the list of providers for this type descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b1781-171">追加する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-171">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="instance"><span data-ttu-id="b1781-172">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1781-172">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-173">コンポーネントの単一インスタンスの型説明の提供元を追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-173">Adds a type description provider for a single instance of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-174"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>メソッド装置がコンポーネントの 1 つのインスタンスの情報を入力する型説明プロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-174">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method adds a type description provider that supplies type information for a single instance of a component.</span></span> <span data-ttu-id="b1781-175">このメソッドによって、プロバイダーのプロバイダーが追加されたかどうか<xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>インスタンスが既に存在するので、メソッドは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-175">If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.</span></span>  
  
 <span data-ttu-id="b1781-176">コンポーネントの最終処理を妨げることはないために、このメソッドは、コンポーネントへの強い参照を保持できません。</span><span class="sxs-lookup"><span data-stu-id="b1781-176">This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</span></span>  
  
 <span data-ttu-id="b1781-177">同じ型またはオブジェクトの複数の型説明プロバイダーを追加することになります。</span><span class="sxs-lookup"><span data-stu-id="b1781-177">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="b1781-178">このような場合、最初型説明のプロバイダーが発生しました型情報を提供するが排他的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-178">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="b1781-179">型情報プロバイダーは、スタックに格納される、ために追加の最新のプロバイダーがクエリを実行する 1 つになります。</span><span class="sxs-lookup"><span data-stu-id="b1781-179">Since type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="b1781-180">この動作により、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>と<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>プッシュし、ポップを使用するメソッドを特定のシナリオに必要な説明のプロバイダーを入力します。</span><span class="sxs-lookup"><span data-stu-id="b1781-180">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="b1781-181">かどうかは成功すると、このメソッドは、<xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29>メソッドを`instance`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b1781-181">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1781-182">このメソッドの 2 つのバージョンでは、異なるスコープを持つ結果を生成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-182">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="b1781-183"><xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>を受け取るメソッドを<xref:System.Object>パラメーターが指定されたコンポーネントのインスタンスを 1 つだけに影響します。</span><span class="sxs-lookup"><span data-stu-id="b1781-183">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="b1781-184">これに対し、他のオーバー ロード、移動、<xref:System.Type>パラメーター、その型によって記述されたコンポーネントのすべてのインスタンスに影響を与えます。</span><span class="sxs-lookup"><span data-stu-id="b1781-184">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="b1781-185">使用して、<xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>メソッドを部分信頼コードから呼び出す必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-185">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-186">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-186">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="b1781-187">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="b1781-187">for full access to system resources.</span></span> <span data-ttu-id="b1781-188">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-188">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b1781-189">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="b1781-189">Associated state:</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b1781-190">追加する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-190">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="type"><span data-ttu-id="b1781-191">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-191">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-192">コンポーネント クラスの型説明のプロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-192">Adds a type description provider for a component class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-193"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>メソッドは、提供が、指定したクラス、派生クラス、およびこれらの型のすべてのインスタンスの情報を入力型説明プロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-193">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1781-194">`type`パラメーターがインターフェイスを含む、任意の型を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b1781-194">The `type` parameter can be any type, including an interface.</span></span> <span data-ttu-id="b1781-195">たとえば、カスタムの型とすべてのコンポーネントのインスタンス情報を提供するには指定した`typeof(IComponent)`します。</span><span class="sxs-lookup"><span data-stu-id="b1781-195">For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`.</span></span> <span data-ttu-id="b1781-196">渡す`typeof(object)`はすべての型の型情報を指定するプロバイダーを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-196">Passing `typeof(object)` will call the provider to supply type information for all types.</span></span>  
  
 <span data-ttu-id="b1781-197">このメソッドは、任意のオブジェクトへの強い参照を保持しないため、オブジェクトの最終処理を妨げることはできません。</span><span class="sxs-lookup"><span data-stu-id="b1781-197">This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</span></span>  
  
 <span data-ttu-id="b1781-198">同じ型またはオブジェクトの複数の型説明プロバイダーを追加することになります。</span><span class="sxs-lookup"><span data-stu-id="b1781-198">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="b1781-199">このような場合、最初型説明のプロバイダーが発生しました型情報を提供するが排他的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-199">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="b1781-200">スタックには、型情報プロバイダーが格納されている、ため、追加の最新のプロバイダーがクエリを実行する 1 つになります。</span><span class="sxs-lookup"><span data-stu-id="b1781-200">Because type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="b1781-201">この動作により、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>と<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A>プッシュし、ポップを使用するメソッドを特定のシナリオに必要な説明のプロバイダーを入力します。</span><span class="sxs-lookup"><span data-stu-id="b1781-201">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="b1781-202">かどうかは成功すると、このメソッドは、<xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29>メソッドを`type`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b1781-202">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1781-203">このメソッドの 2 つのバージョンでは、異なるスコープを持つ結果を生成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-203">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="b1781-204"><xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>を受け取るメソッドを<xref:System.Object>パラメーターが指定されたコンポーネントのインスタンスを 1 つだけに影響します。</span><span class="sxs-lookup"><span data-stu-id="b1781-204">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="b1781-205">これに対し、他のオーバー ロード、移動、<xref:System.Type>パラメーター、その型によって記述されたコンポーネントのすべてのインスタンスに影響を与えます。</span><span class="sxs-lookup"><span data-stu-id="b1781-205">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="b1781-206">使用して、<xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>メソッドを部分信頼コードから呼び出す必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-206">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-207">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-207">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="b1781-208">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="b1781-208">for full access to system resources.</span></span> <span data-ttu-id="b1781-209">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-209">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b1781-210">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="b1781-210">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-211">この型記述子のプロバイダーのリストに型説明のプロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-211">Adds a type description provider to the list of providers for this type descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b1781-212">追加する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-212">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="instance"><span data-ttu-id="b1781-213">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1781-213">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-214">コンポーネントの単一インスタンスの型説明の提供元を追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-214">Adds a type description provider for a single instance of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-215">このメソッドは、部分的に信頼されているコードから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-215">This method can be called from partially trusted code.</span></span> <span data-ttu-id="b1781-216">場合<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>が定義されている場合、呼び出し元できますプロバイダーを登録する指定したインスタンスの型が部分的に信頼されたもある場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-216">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="b1781-217">使用して、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>メソッドを部分信頼コードから呼び出す必要がない場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-217">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-218">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-218">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="b1781-219">レジストリ アクセスします。</span><span class="sxs-lookup"><span data-stu-id="b1781-219">For registry access.</span></span> <span data-ttu-id="b1781-220">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b1781-221">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="b1781-221">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="b1781-222">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-222">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b1781-223">関連付けられている型。<see cref="T:System.Security.PermissionSet" />を定義するアセンブリに必要な<paramref name="instance" />パラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="b1781-223">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b1781-224">追加する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-224">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="type"><span data-ttu-id="b1781-225">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-225">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-226">コンポーネント クラスの型説明のプロバイダーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b1781-226">Adds a type description provider for a component class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-227">このメソッドは、部分的に信頼されているコードから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-227">This method can be called from partially trusted code.</span></span> <span data-ttu-id="b1781-228">場合<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>が定義されている場合、呼び出し元できますプロバイダーを登録する指定した型のも部分的に信頼されている場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-228">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="b1781-229">使用して、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>メソッドを部分信頼コードから呼び出す必要がない場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-229">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-230">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-230">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="b1781-231">レジストリ アクセスします。</span><span class="sxs-lookup"><span data-stu-id="b1781-231">For registry access.</span></span> <span data-ttu-id="b1781-232">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-232">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b1781-233">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="b1781-233">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="b1781-234">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-234">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b1781-235">関連付けられている型。<see cref="T:System.Security.PermissionSet" />を定義するアセンブリに必要な<paramref name="type" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-235">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ComNativeDescriptorHandler">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ComNativeDescriptorHandler As IComNativeDescriptorHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::IComNativeDescriptorHandler ^ ComNativeDescriptorHandler { System::ComponentModel::IComNativeDescriptorHandler ^ get(); void set(System::ComponentModel::IComNativeDescriptorHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComNativeDescriptorHandler : System.ComponentModel.IComNativeDescriptorHandler with get, set" Usage="System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComNativeDescriptorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1781-236">ターゲット コンポーネントの Component Object Model (COM) 型情報のプロバイダーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b1781-236">Gets or sets the provider for the Component Object Model (COM) type information for the target component.</span></span></summary>
        <value><span data-ttu-id="b1781-237">COM 型情報プロバイダーを表す <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1781-237">An <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> instance representing the COM type information provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-238"><xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A>プロパティおよび<xref:System.ComponentModel.IComNativeDescriptorHandler>インターフェイスが廃止されています。</span><span class="sxs-lookup"><span data-stu-id="b1781-238">The <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete.</span></span> <span data-ttu-id="b1781-239">詳細については、<xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1781-239">For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="b1781-240">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="b1781-240">for full access to system resources.</span></span> <span data-ttu-id="b1781-241">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-241">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b1781-242">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="b1781-242">Associated state:</span></span></permission>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      </Docs>
    </Member>
    <Member MemberName="ComObjectType">
      <MemberSignature Language="C#" Value="public static Type ComObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type ComObjectType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ComObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ ComObjectType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComObjectType : Type" Usage="System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1781-243">対象となるコンポーネントによって表されるコンポーネント オブジェクト モデル (COM) の型を取得します。</span><span class="sxs-lookup"><span data-stu-id="b1781-243">Gets the type of the Component Object Model (COM) object represented by the target component.</span></span></summary>
        <value><span data-ttu-id="b1781-244">このコンポーネントによって表される COM オブジェクトの <see cref="T:System.Type" />。COM 以外のオブジェクトの場合 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-244">The <see cref="T:System.Type" /> of the COM object represented by this component, or <see langword="null" /> for non-COM objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-245"><xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>プロパティに渡すことができる型を返します、 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> COM 型の型説明プロバイダーを定義するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-245">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.</span></span>  
  
 <span data-ttu-id="b1781-246"><xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>プロパティおよびその他のメンバーでは、このクラスで廃止された機能を置き換える<xref:System.ComponentModel.IComNativeDescriptorHandler>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="b1781-246">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface.</span></span> <span data-ttu-id="b1781-247">COM オブジェクト間のマッピング レイヤーを実装して<xref:System.ComponentModel.TypeDescriptor>、追加、<xref:System.ComponentModel.TypeDescriptionProvider>型を処理する<xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>します。</span><span class="sxs-lookup"><span data-stu-id="b1781-247">To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateAssociation">
      <MemberSignature Language="C#" Value="public static void CreateAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member CreateAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.CreateAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="secondary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="b1781-248">プライマリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-248">The primary <see cref="T:System.Object" />.</span></span></param>
        <param name="secondary"><span data-ttu-id="b1781-249">セカンダリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-249">The secondary <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="b1781-250">2 つのオブジェクト間にプライマリとセカンダリの関連付けを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-250">Creates a primary-secondary association between two objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-251"><xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>メソッドは、プライマリとセカンダリのオブジェクト間のアソシエーションを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-251">The <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method creates an association between a primary and a secondary object.</span></span> <span data-ttu-id="b1781-252">アソシエーションが作成されると、デザイナー、またはその他のフィルター処理メカニズムは、プライマリ オブジェクトのプロパティ セットにいずれかのオブジェクトにルーティングするプロパティを追加できます。</span><span class="sxs-lookup"><span data-stu-id="b1781-252">Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</span></span> <span data-ttu-id="b1781-253">プライマリのオブジェクトに対してプロパティの呼び出しが行われたときに、<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>型パラメーターに関連付けられている実際のオブジェクト インスタンスを解決するのには、メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-253">When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.</span></span>  
  
 <span data-ttu-id="b1781-254">A<xref:System.WeakReference>を使用するプライマリとセカンダリのオブジェクト間の関連付けを維持。 そのため、このメソッドはありません防止いずれかのオブジェクト作成が完了し、ガベージ コレクションによって解放します。</span><span class="sxs-lookup"><span data-stu-id="b1781-254">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-255">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-255">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1781-256"><paramref name="primary" /> と <paramref name="secondary" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="b1781-256"><paramref name="primary" /> is equal to <paramref name="secondary" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="b1781-257">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="b1781-257">for full access to system resources.</span></span> <span data-ttu-id="b1781-258">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-258">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b1781-259">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="b1781-259">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDesigner (component As IComponent, designerBaseType As Type) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="static member CreateDesigner : System.ComponentModel.IComponent * Type -&gt; System.ComponentModel.Design.IDesigner" Usage="System.ComponentModel.TypeDescriptor.CreateDesigner (component, designerBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="designerBaseType" Type="System.Type" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-260">デザイナーに関連付けるコンポーネントを指定する <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-260">An <see cref="T:System.ComponentModel.IComponent" /> that specifies the component to associate with the designer.</span></span></param>
        <param name="designerBaseType"><span data-ttu-id="b1781-261">作成するデザイナーの型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-261">A <see cref="T:System.Type" /> that represents the type of designer to create.</span></span></param>
        <summary><span data-ttu-id="b1781-262">指定したコンポーネントに関連するデザイナーおよび指定した型のデザイナーのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-262">Creates an instance of the designer associated with the specified component and of the specified type of designer.</span></span></summary>
        <returns><span data-ttu-id="b1781-263">コンポーネントのデザイナーのインスタンスである <see cref="T:System.ComponentModel.Design.IDesigner" />。デザイナーが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-263">An <see cref="T:System.ComponentModel.Design.IDesigner" /> that is an instance of the designer for the component, or <see langword="null" /> if no designer can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-264">このメソッドは、有効な見つけられない場合<xref:System.ComponentModel.DesignerAttribute>デザイナーのクラス階層を検索します。</span><span class="sxs-lookup"><span data-stu-id="b1781-264">If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer.</span></span> <span data-ttu-id="b1781-265">返すかどうか、クラス階層で、デザイナーに見つからない、`null`します。</span><span class="sxs-lookup"><span data-stu-id="b1781-265">If it cannot find a designer in the class hierarchy, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-266">既存のイベント記述子と同じである新しいイベント記述子を作成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-266">Creates a new event descriptor that is identical to an existing event descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, class System.ComponentModel.EventDescriptor oldEventDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvent (componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::ComponentModel::EventDescriptor ^ oldEventDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * System.ComponentModel.EventDescriptor * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, oldEventDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldEventDescriptor" Type="System.ComponentModel.EventDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-267">新しいイベントを作成するコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="b1781-267">The type of the component for which to create the new event.</span></span></param>
        <param name="oldEventDescriptor"><span data-ttu-id="b1781-268">既存のイベント情報。</span><span class="sxs-lookup"><span data-stu-id="b1781-268">The existing event information.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-269">新しい属性。</span><span class="sxs-lookup"><span data-stu-id="b1781-269">The new attributes.</span></span></param>
        <summary><span data-ttu-id="b1781-270">既存の <see cref="T:System.ComponentModel.EventDescriptor" /> が渡された場合、既存のイベント記述子と同じである新しいイベント記述子を作成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-270">Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <see cref="T:System.ComponentModel.EventDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="b1781-271">指定されたメタデータ属性と既存のメタデータ属性をマージした新しい <see cref="T:System.ComponentModel.EventDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-271">A new <see cref="T:System.ComponentModel.EventDescriptor" /> that has merged the specified metadata attributes with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="b1781-272">コンポーネントの非パブリック メンバーを検査する必要です。</span><span class="sxs-lookup"><span data-stu-id="b1781-272">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="b1781-273">要求時アクセスのために必要なリンク<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />型<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-273">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * string * Type * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-274">イベントが関連付けられているコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="b1781-274">The type of the component the event lives on.</span></span></param>
        <param name="name"><span data-ttu-id="b1781-275">イベントの名前です。</span><span class="sxs-lookup"><span data-stu-id="b1781-275">The name of the event.</span></span></param>
        <param name="type"><span data-ttu-id="b1781-276">イベントを処理するデリゲートの型。</span><span class="sxs-lookup"><span data-stu-id="b1781-276">The type of the delegate that handles the event.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-277">イベントの属性。</span><span class="sxs-lookup"><span data-stu-id="b1781-277">The attributes for this event.</span></span></param>
        <summary><span data-ttu-id="b1781-278">型で指定したイベントから記述子情報を動的に生成することによって既存のイベント記述子と同じになる新しいイベント記述子を作成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-278">Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</span></span></summary>
        <returns><span data-ttu-id="b1781-279">型にバインドされている <see cref="T:System.ComponentModel.EventDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-279">An <see cref="T:System.ComponentModel.EventDescriptor" /> that is bound to a type.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="b1781-280">コンポーネントの非パブリック メンバーを検査する必要です。</span><span class="sxs-lookup"><span data-stu-id="b1781-280">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="b1781-281">要求時アクセスのために必要なリンク<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />型<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-281">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="objectType" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="argTypes" Type="System.Type[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b1781-282"><see cref="T:System.ComponentModel.TypeDescriptionProvider" /> サービスを提供するサービス プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="b1781-282">The service provider that provides a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> service.</span></span> <span data-ttu-id="b1781-283">このパラメーターは、<see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="b1781-283">This parameter can be <see langword="null" />.</span></span></param>
        <param name="objectType"><span data-ttu-id="b1781-284">作成するオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-284">The <see cref="T:System.Type" /> of object to create.</span></span></param>
        <param name="argTypes"><span data-ttu-id="b1781-285">オブジェクトのコンストラクターに渡されるパラメーター型の配列 (省略可能)。</span><span class="sxs-lookup"><span data-stu-id="b1781-285">An optional array of parameter types to be passed to the object's constructor.</span></span> <span data-ttu-id="b1781-286">このパラメーターは、<see langword="null" /> にすることも長さ 0 の配列にすることもできます。</span><span class="sxs-lookup"><span data-stu-id="b1781-286">This parameter can be <see langword="null" /> or an array of zero length.</span></span></param>
        <param name="args"><span data-ttu-id="b1781-287">オブジェクトのコンストラクターに渡すパラメーターの値の省略可能な配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-287">An optional array of parameter values to pass to the object's constructor.</span></span> <span data-ttu-id="b1781-288"><see langword="null" /> でない場合、要素の数は <paramref name="argTypes" /> と同じでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="b1781-288">If not <see langword="null" />, the number of elements must be the same as <paramref name="argTypes" />.</span></span></param>
        <summary><span data-ttu-id="b1781-289">別のデータ型の代わりに使用できるオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-289">Creates an object that can substitute for another data type.</span></span></summary>
        <returns><span data-ttu-id="b1781-290">関連付けられた <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> が検出される場合は代替のデータ型のインスタンス。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-290">An instance of the substitute data type if an associated <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> is found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-291"><xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A>メソッドは検索、 <xref:System.ComponentModel.TypeDescriptionProvider> 、指定された関連付けられている`objectType`データ型。</span><span class="sxs-lookup"><span data-stu-id="b1781-291">The <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type.</span></span> <span data-ttu-id="b1781-292">このメソッドは最初から、型説明プロバイダーを取得しよう、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b1781-292">This method first tries to obtain a type description provider from the `provider` parameter.</span></span> <span data-ttu-id="b1781-293">プロバイダーを独自の内部テーブルを検索できない場合は、(前の呼び出しでこれらのエントリが作成された<xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>)。</span><span class="sxs-lookup"><span data-stu-id="b1781-293">If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span></span> <span data-ttu-id="b1781-294">プロバイダーが検出されると、このメソッドはそのオブジェクトを作成呼び出しを委任します。</span><span class="sxs-lookup"><span data-stu-id="b1781-294">If it finds a provider, this method will delegate the creation call to that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-295"><paramref name="objectType" /> は <see langword="null" /> です。または、<paramref name="args" /> が <see langword="null" /> ではないときは、<paramref name="argTypes" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-295"><paramref name="objectType" /> is <see langword="null" />, or <paramref name="args" /> is <see langword="null" /> when <paramref name="argTypes" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1781-296"><paramref name="argTypes" /> と <paramref name="args" /> の要素数が異なります。</span><span class="sxs-lookup"><span data-stu-id="b1781-296"><paramref name="argTypes" /> and <paramref name="args" /> have different number of elements.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="b1781-297">派生クラスで代替インスタンスが提供されない場合、このメソッドは、基本実装を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1781-297">If the derived class does not provide a substitute instance, this method should call the base implementation.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-298">コンポーネントの既存のプロパティのための新しいプロパティ記述子を作成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-298">Creates a new property descriptor for an existing property of a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, class System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProperty (componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::ComponentModel::PropertyDescriptor ^ oldPropertyDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * System.ComponentModel.PropertyDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, oldPropertyDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldPropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-299">プロパティをメンバーとして持つコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-299">The <see cref="T:System.Type" /> of the component that the property is a member of.</span></span></param>
        <param name="oldPropertyDescriptor"><span data-ttu-id="b1781-300">既存のプロパティ記述子。</span><span class="sxs-lookup"><span data-stu-id="b1781-300">The existing property descriptor.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-301">プロパティの新しい属性。</span><span class="sxs-lookup"><span data-stu-id="b1781-301">The new attributes for this property.</span></span></param>
        <summary><span data-ttu-id="b1781-302">指定した既存の <see cref="T:System.ComponentModel.PropertyDescriptor" /> と属性配列を使用して、既存のプロパティ記述子から新しいプロパティ記述子を作成します。</span><span class="sxs-lookup"><span data-stu-id="b1781-302">Creates a new property descriptor from an existing property descriptor, using the specified existing <see cref="T:System.ComponentModel.PropertyDescriptor" /> and attribute array.</span></span></summary>
        <returns><span data-ttu-id="b1781-303">指定したメタデータ属性を既存のメタデータ属性にマージした、新しい <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-303">A new <see cref="T:System.ComponentModel.PropertyDescriptor" /> that has the specified metadata attributes merged with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="b1781-304">コンポーネントの非パブリック メンバーを検査する必要です。</span><span class="sxs-lookup"><span data-stu-id="b1781-304">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="b1781-305">要求時アクセスのために必要なリンク<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />型<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-305">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * string * Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-1.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-306">プロパティをメンバーとして持つコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-306">The <see cref="T:System.Type" /> of the component that the property is a member of.</span></span></param>
        <param name="name"><span data-ttu-id="b1781-307">プロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="b1781-307">The name of the property.</span></span></param>
        <param name="type"><span data-ttu-id="b1781-308">プロパティの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-308">The <see cref="T:System.Type" /> of the property.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-309">プロパティの新しい属性。</span><span class="sxs-lookup"><span data-stu-id="b1781-309">The new attributes for this property.</span></span></param>
        <summary><span data-ttu-id="b1781-310">指定したプロパティ名、型、および属性配列を使用して、プロパティ記述子を作成し、型に動的に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b1781-310">Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</span></span></summary>
        <returns><span data-ttu-id="b1781-311">指定した型に関連付けられ、指定したメタデータ属性が既存のメタデータ属性にマージされている <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-311">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="b1781-312">コンポーネントの非パブリック メンバーを検査する必要です。</span><span class="sxs-lookup"><span data-stu-id="b1781-312">Required to inspect non-public members of the component.</span></span> <span data-ttu-id="b1781-313">要求時アクセスのために必要なリンク<see cref="T:System.Security.Permissions.ReflectionPermissionFlag" />型<see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-313">Link demand access required for <see cref="T:System.Security.Permissions.ReflectionPermissionFlag" /> type <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetAssociation">
      <MemberSignature Language="C#" Value="public static object GetAssociation (Type type, object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAssociation(class System.Type type, object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAssociation(Type ^ type, System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member GetAssociation : Type * obj -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetAssociation (type, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="primary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b1781-314">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-314">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="primary"><span data-ttu-id="b1781-315">関連付けのプライマリ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1781-315">The primary object of the association.</span></span></param>
        <summary><span data-ttu-id="b1781-316">指定したプライマリ オブジェクトに関連付けられた型のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-316">Returns an instance of the type associated with the specified primary object.</span></span></summary>
        <returns><span data-ttu-id="b1781-317">関連付けが存在する場合は、プライマリ オブジェクトに関連付けられているセカンダリの型のインスタンス。指定した関連付けが存在しない場合は <paramref name="primary" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-317">An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <paramref name="primary" /> if no specified association exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-318">以前の関連付けが行われている場合、`type`パラメーターを使用して、<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>メソッド、<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>メソッドを呼び出す要求された型に対して正しいセカンダリ オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-318">If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method returns the correct secondary object to invoke for the requested type.</span></span> <span data-ttu-id="b1781-319">それ以外の場合、<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A>の互換性のあるデザイナーの検索`type`し、見つかった場合は、デザイナーを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-319">Otherwise, <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> searches for a compatible designer for `type` and returns the designer if one is found.</span></span> <span data-ttu-id="b1781-320">このメソッドが `null` を返すことはありません。</span><span class="sxs-lookup"><span data-stu-id="b1781-320">This method never returns `null`.</span></span>  
  
 <span data-ttu-id="b1781-321">A<xref:System.WeakReference>を使用するプライマリとセカンダリのオブジェクト間の関連付けを維持。 そのため、このメソッドはありません防止プライマリまたはセカンダリのいずれかのオブジェクト作成が完了し、ガベージ コレクションによって解放します。</span><span class="sxs-lookup"><span data-stu-id="b1781-321">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-322">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-322">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-323">コンポーネントまたは型の属性のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-323">Returns the collection of attributes for a component or a type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-324">属性を取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-324">The component for which you want to get attributes.</span></span></param>
        <summary><span data-ttu-id="b1781-325">指定したコンポーネントの属性のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-325">Returns the collection of attributes for the specified component.</span></span></summary>
        <returns><span data-ttu-id="b1781-326">コンポーネントの属性を格納している <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-326">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for the component.</span></span> <span data-ttu-id="b1781-327"><paramref name="component" /> が <see langword="null" /> の場合、このメソッドは空のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-327">If <paramref name="component" /> is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-328">によって返される属性、<xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>メソッドを一覧表示する拡張プロバイダーによって元のコンポーネントのソースから動的に変更可能性があります (<xref:System.ComponentModel.IExtenderProvider>)、サービスのフィルター (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>)、およびフィルターの属性します。</span><span class="sxs-lookup"><span data-stu-id="b1781-328">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="b1781-329">カスタム属性を定義するとき<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>に設定`true`、オーバーライドする必要があります、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>プロパティを一意になるようにします。</span><span class="sxs-lookup"><span data-stu-id="b1781-329">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="b1781-330">属性のすべてのインスタンスが一意の場合は、オーバーライド<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>を属性のオブジェクト id を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-330">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="b1781-331">場合のみ、属性のいくつかのインスタンスが一意から値を返す<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>等しいかどうかを返すような場合は。</span><span class="sxs-lookup"><span data-stu-id="b1781-331">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="b1781-332">たとえば、いくつかの属性は、一意のキーとして機能するコンス トラクター パラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="b1781-332">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="b1781-333">これらの属性のコンス トラクターのパラメーターの値を返す、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-333">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1781-334">既定の実装<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>の値に関係なく、型 id を返します、<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-334">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b1781-335">複数のインスタンスを返すために、<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性を<xref:System.ComponentModel.AttributeCollection>、属性をオーバーライドする必要があります、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-335">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1781-336">このメソッドの例は、次を参照してください。、<xref:System.ComponentModel.AttributeCollection.Matches%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-336">For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (componentType As Type) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-337">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-337">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-338">指定したコンポーネントの型の属性のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-338">Returns a collection of attributes for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="b1781-339">コンポーネントの型の属性を格納している <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-339">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the type of the component.</span></span> <span data-ttu-id="b1781-340">コンポーネントが <see langword="null" /> の場合、このメソッドは空のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-340">If the component is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-341">オブジェクトのインスタンスがあるない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-341">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="b1781-342">属性の場合<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>設定`true`、属性コレクションには、重複するインスタンスが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-342">For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, the attribute collection removes duplicate instances.</span></span> <span data-ttu-id="b1781-343">これらは、インスタンスを<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>プロパティと等しい値を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-343">These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property returns equal values.</span></span>  
  
 <span data-ttu-id="b1781-344">カスタム属性を定義するとき<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>に設定`true`、オーバーライドする必要があります、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>プロパティを一意になるようにします。</span><span class="sxs-lookup"><span data-stu-id="b1781-344">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="b1781-345">属性のすべてのインスタンスが一意の場合は、オーバーライド<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>を属性のオブジェクト id を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-345">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="b1781-346">場合のみ、属性のいくつかのインスタンスが一意から値を返す<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>等しいかどうかを返すような場合は。</span><span class="sxs-lookup"><span data-stu-id="b1781-346">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="b1781-347">たとえば、いくつかの属性は、一意のキーとして機能するコンス トラクター パラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="b1781-347">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="b1781-348">これらの属性のコンス トラクターのパラメーターの値を返す、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-348">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1781-349">既定の実装<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>の値に関係なく、型 id を返します、<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-349">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b1781-350">複数のインスタンスを返すために、<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性を<xref:System.ComponentModel.AttributeCollection>、属性をオーバーライドする必要があります、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-350">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object, noCustomTypeDesc As Boolean) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj * bool -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-351">属性を取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-351">The component for which you want to get attributes.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-352"><paramref name="component" /> が <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> 型の場合に、カスタムの型記述子から属性のベースライン セットを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-352"><see langword="true" /> to use a baseline set of attributes from the custom type descriptor if <paramref name="component" /> is of type <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1781-353">指定したコンポーネントの属性のコレクションと、カスタムの型記述子が作成されていることを示すブール値を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-353">Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</span></span></summary>
        <returns><span data-ttu-id="b1781-354">コンポーネントの属性を格納している <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-354">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the component.</span></span> <span data-ttu-id="b1781-355">コンポーネントが <see langword="null" /> の場合、このメソッドは空のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-355">If the component is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-356">によって返される属性、<xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A>メソッドを一覧表示する拡張プロバイダーによって元のコンポーネント ソースから動的に変更可能性があります (<xref:System.ComponentModel.IExtenderProvider>)、サービスのフィルター (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>)、およびフィルターの属性します。</span><span class="sxs-lookup"><span data-stu-id="b1781-356">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="b1781-357">カスタム属性を定義するとき<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>に設定`true`、オーバーライドする必要があります、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>プロパティを一意になるようにします。</span><span class="sxs-lookup"><span data-stu-id="b1781-357">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="b1781-358">属性のすべてのインスタンスが一意の場合は、オーバーライド<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>を属性のオブジェクト id を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-358">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="b1781-359">場合のみ、属性のいくつかのインスタンスが一意から値を返す<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>等しいかどうかを返すような場合は。</span><span class="sxs-lookup"><span data-stu-id="b1781-359">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="b1781-360">たとえば、いくつかの属性は、一意のキーとして機能するコンス トラクター パラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="b1781-360">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="b1781-361">これらの属性のコンス トラクターのパラメーターの値を返す、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-361">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1781-362">既定の実装<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>の値に関係なく、型 id を返します、<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-362">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b1781-363">複数のインスタンスを返すために、<xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType>属性を<xref:System.ComponentModel.AttributeCollection>、属性をオーバーライドする必要があります、<xref:System.Attribute.TypeId%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-363">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClassName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-364">指定したコンポーネントのクラスの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-364">Returns the name of the class for the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-365">クラス名を取得する対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-365">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <summary><span data-ttu-id="b1781-366">既定の型記述子を使用して、指定したコンポーネントのクラスの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-366">Returns the name of the class for the specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-367">指定したコンポーネントのクラスの名前を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-367">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-368">通常、このメソッドは、完全なを返します<xref:System.Type>の名前、`component`パラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="b1781-368">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="b1781-369">たとえば、ボタンのクラス名は"System.Windows.Forms.Button"が。</span><span class="sxs-lookup"><span data-stu-id="b1781-369">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="b1781-370">場合`component`実装<xref:System.ComponentModel.ICustomTypeDescriptor>、代替名を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-370">If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 <span data-ttu-id="b1781-371">このメソッドはオーバー ロードされたのと同じ<xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29>メソッドの 2 番目のパラメーターを`false`します。</span><span class="sxs-lookup"><span data-stu-id="b1781-371">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-372"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-372"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (componentType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetClassName : Type -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-373">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-373">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-374">指定した型のクラスの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-374">Returns the name of the class for the specified type.</span></span></summary>
        <returns><span data-ttu-id="b1781-375">指定したコンポーネントの型のクラス名を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-375">A <see cref="T:System.String" /> containing the name of the class for the specified component type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-376">このメソッドでは、指定した型のキャッシュされているカスタム型記述子を使用して、関連付けられているクラス名を検出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-376">This method uses the cached custom type descriptor for the specified type to discover the associated class name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-377"><paramref name="componentType" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-377"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-378">クラス名を取得する対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-378">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-379">カスタムの型の記述情報を考慮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-379"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1781-380">カスタムの型記述子を使用して、指定したコンポーネントのクラスの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-380">Returns the name of the class for the specified component using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-381">指定したコンポーネントのクラスの名前を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-381">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-382">通常、このメソッドは、完全なを返します<xref:System.Type>の名前、`component`パラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="b1781-382">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="b1781-383">たとえば、ボタンのクラス名は"System.Windows.Forms.Button"が。</span><span class="sxs-lookup"><span data-stu-id="b1781-383">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="b1781-384">場合、`component`パラメーター実装<xref:System.ComponentModel.ICustomTypeDescriptor>、代替名を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-384">If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-385"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-385"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-386"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-386"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-387">指定したコンポーネントの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-387">Returns the name of the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-388">クラス名を取得する対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-388">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <summary><span data-ttu-id="b1781-389">既定の型記述子を使用して、指定したコンポーネントの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-389">Returns the name of the specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-390">指定したコンポーネントの名前を格納している <see cref="T:System.String" />。コンポーネント名が存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-390">A <see cref="T:System.String" /> containing the name of the specified component, or <see langword="null" /> if there is no component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-391">通常、このメソッドは、1 つが存在する場合、コンポーネントのサイトの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-391">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="b1781-392">たとえば、ボタンのクラス名は"System.Windows.Forms.Button"が。</span><span class="sxs-lookup"><span data-stu-id="b1781-392">For example, the class name for a button is "System.Windows.Forms.Button".</span></span>  
  
 <span data-ttu-id="b1781-393">このメソッドはオーバー ロードされたのと同じ<xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29>メソッドの 2 番目のパラメーターを`false`します。</span><span class="sxs-lookup"><span data-stu-id="b1781-393">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 <span data-ttu-id="b1781-394">このメソッドは、コンポーネントのインスタンスの名前を取得するデザイン時に使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-394">This method is used at design time to retrieve the name of an instance of a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-395"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-395"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-396"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-396"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-397">クラス名を取得する対象の <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-397">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-398">カスタムの型の記述情報を考慮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-398"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1781-399">カスタムの型記述子を使用して、指定したコンポーネントの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-399">Returns the name of the specified component using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-400">指定したコンポーネントのクラスの名前。コンポーネント名が存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-400">The name of the class for the specified component, or <see langword="null" /> if there is no component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-401">このメソッドは、コンポーネントのインスタンスの名前を取得するデザイン時に使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-401">This method is used at design time to retrieve the name of an instance of a component.</span></span> <span data-ttu-id="b1781-402">通常、このメソッドは、1 つが存在する場合、コンポーネントのサイトの名前を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-402">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="b1781-403">たとえば、ボタンのクラス名は"System.Windows.Forms.Button"が。</span><span class="sxs-lookup"><span data-stu-id="b1781-403">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="b1781-404">コンポーネントが実装されている場合、<xref:System.ComponentModel.ICustomTypeDescriptor>インターフェイス、その代替名を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-404">If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-405"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-405"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-406"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-406"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConverter">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-407">コンポーネントまたは型の型コンバーターを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-407">Returns a type converter for a component or a type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-408">コンバーターを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-408">A component to get the converter for.</span></span></param>
        <summary><span data-ttu-id="b1781-409">指定したコンポーネントの型の型コンバーターを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-409">Returns a type converter for the type of the specified component.</span></span></summary>
        <returns><span data-ttu-id="b1781-410">指定したコンポーネントの <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-410">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-411">このメソッドを探すことによって適切な型コンバーターを検索、<xref:System.ComponentModel.TypeConverterAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="b1781-411">This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="b1781-412">見つからない場合、 <xref:System.ComponentModel.TypeConverterAttribute>、プリミティブ型が見つかるまでに、クラスの基本クラスの階層構造を走査します。</span><span class="sxs-lookup"><span data-stu-id="b1781-412">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 <span data-ttu-id="b1781-413">このメソッドはオーバー ロードされたのと同じ<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>メソッドの 2 番目のパラメーターを`false`します。</span><span class="sxs-lookup"><span data-stu-id="b1781-413">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1781-414">このメソッドを使用しての例は、次を参照してください。、<xref:System.ComponentModel.TypeConverter>クラス。</span><span class="sxs-lookup"><span data-stu-id="b1781-414">For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-415"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-415"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-416"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-416"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b1781-417">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-417">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-418">指定した型の型コンバーターを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-418">Returns a type converter for the specified type.</span></span></summary>
        <returns><span data-ttu-id="b1781-419">指定した型の <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-419">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-420">オブジェクトのインスタンスがあるない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-420">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="b1781-421">このメソッドを適切な型コンバーターを探すことによって検索、<xref:System.ComponentModel.TypeConverterAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="b1781-421">This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="b1781-422">見つからない場合、 <xref:System.ComponentModel.TypeConverterAttribute>、プリミティブ型が見つかるまでに、クラスの基本クラスの階層構造を走査します。</span><span class="sxs-lookup"><span data-stu-id="b1781-422">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-423"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-423"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object, noCustomTypeDesc As Boolean) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj * bool -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-424">コンバーターを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-424">A component to get the converter for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-425">カスタムの型の記述情報を考慮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-425"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1781-426">カスタムの型記述子を使用して、指定したコンポーネントの型の型コンバーターを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-426">Returns a type converter for the type of the specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-427">指定したコンポーネントの <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-427">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-428">このメソッドが検出することによって、適切な型コンバーターは、<xref:System.ComponentModel.TypeConverterAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="b1781-428">This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="b1781-429">見つからない場合、 <xref:System.ComponentModel.TypeConverterAttribute>、プリミティブ型が見つかるまでに、クラスの基本クラスの階層構造を走査します。</span><span class="sxs-lookup"><span data-stu-id="b1781-429">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-430"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-430"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-431"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-431"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-432">コンポーネントまたは型の既定のイベントを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-432">Returns the default event for a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-433">イベントを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-433">The component to get the event for.</span></span></param>
        <summary><span data-ttu-id="b1781-434">指定したコンポーネントの既定のイベントを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-434">Returns the default event for the specified component.</span></span></summary>
        <returns><span data-ttu-id="b1781-435">既定のイベントを保持している <see cref="T:System.ComponentModel.EventDescriptor" />。イベントが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-435">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-436">このメソッドはオーバー ロードされたのと同じ<xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29>メソッドの 2 番目のパラメーターを`false`します。</span><span class="sxs-lookup"><span data-stu-id="b1781-436">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-437"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-437"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-438"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-438"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (componentType As Type) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : Type -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-439">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-439">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-440">指定したコンポーネントの型の既定のイベントを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-440">Returns the default event for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="b1781-441">既定のイベントを保持している <see cref="T:System.ComponentModel.EventDescriptor" />。イベントが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-441">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-442">オブジェクトのインスタンスがあるない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-442">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-443"><paramref name="componentType" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-443"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object, noCustomTypeDesc As Boolean) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj * bool -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-444">イベントを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-444">The component to get the event for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-445">カスタムの型の記述情報を考慮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-445"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1781-446">カスタムの型記述子を使用して、コンポーネントの既定のイベントを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-446">Returns the default event for a component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-447">既定のイベントを保持している <see cref="T:System.ComponentModel.EventDescriptor" />。イベントが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-447">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-448"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-448"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-449"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-449"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-450">コンポーネントの既定のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-450">Returns the default property for a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-451">既定のプロパティを取得するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-451">The component to get the default property for.</span></span></param>
        <summary><span data-ttu-id="b1781-452">指定したコンポーネントの既定のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-452">Returns the default property for the specified component.</span></span></summary>
        <returns><span data-ttu-id="b1781-453">既定のプロパティを保持している <see cref="T:System.ComponentModel.PropertyDescriptor" />。プロパティが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-453">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-454">場合、`component`パラメーターが`null`、このメソッドが戻る`null`します。</span><span class="sxs-lookup"><span data-stu-id="b1781-454">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-455"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-455"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (componentType As Type) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : Type -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-456">プロパティを取得する対象のクラスを表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-456">A <see cref="T:System.Type" /> that represents the class to get the property for.</span></span></param>
        <summary><span data-ttu-id="b1781-457">指定したコンポーネントの型の既定のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-457">Returns the default property for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="b1781-458">既定のプロパティを保持している <see cref="T:System.ComponentModel.PropertyDescriptor" />。プロパティが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-458">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-459">オブジェクトのインスタンスがあるない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-459">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="b1781-460">場合、`componentType`パラメーターが`null`、このメソッドが戻る`null`します。</span><span class="sxs-lookup"><span data-stu-id="b1781-460">If the `componentType` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj * bool -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-461">既定のプロパティを取得するコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-461">The component to get the default property for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-462">カスタムの型の記述情報を考慮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-462"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1781-463">カスタムの型記述子を使用して、指定したコンポーネントの既定のプロパティを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-463">Returns the default property for the specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-464">既定のプロパティを保持している <see cref="T:System.ComponentModel.PropertyDescriptor" />。プロパティが存在しない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-464">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-465">場合、`component`パラメーターが`null`、このメソッドが戻る`null`します。</span><span class="sxs-lookup"><span data-stu-id="b1781-465">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-466"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-466"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-467">指定した基本型のエディターを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-467">Returns an editor with the specified base type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-468">取得するエディターの対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-468">The component to get the editor for.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="b1781-469">検索するエディターの基本型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-469">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span></span></param>
        <summary><span data-ttu-id="b1781-470">指定したコンポーネントで使用される、指定した基本型のエディターを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1781-470">Gets an editor with the specified base type for the specified component.</span></span></summary>
        <returns><span data-ttu-id="b1781-471">指定したエディターの型にキャストできるエディターのインスタンス。要求された型のエディターが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-471">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-472">型`editorBaseType`は通常<xref:System.Drawing.Design.UITypeEditor>、他の種類を使用することもできますが、(たとえば、<xref:System.ComponentModel.ComponentEditor>と<xref:System.ComponentModel.InstanceCreationEditor>)。</span><span class="sxs-lookup"><span data-stu-id="b1781-472">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="b1781-473">プロパティの複数のエディターを定義することができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-473">You can define multiple editors for a property.</span></span> <span data-ttu-id="b1781-474">使用するエディターを選択するのにには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b1781-474">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-475"><paramref name="component" /> または <paramref name="editorBaseType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-475"><paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-476"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-476"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="b1781-477">ユーザー インターフェイス型エディターの概要</span><span class="sxs-lookup"><span data-stu-id="b1781-477">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (Type type, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(class System.Type type, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(Type ^ type, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : Type * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (type, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b1781-478">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-478">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="b1781-479">検索しようとしているエディターの基本型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-479">A <see cref="T:System.Type" /> that represents the base type of the editor you are trying to find.</span></span></param>
        <summary><span data-ttu-id="b1781-480">指定した型で使用される、指定した基本型のエディターを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-480">Returns an editor with the specified base type for the specified type.</span></span></summary>
        <returns><span data-ttu-id="b1781-481">指定した基本型にキャストできるエディター オブジェクトのインスタンス。要求された型のエディターが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-481">An instance of the editor object that can be cast to the given base type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-482">型`editorBaseType`は通常<xref:System.Drawing.Design.UITypeEditor>、他の種類を使用することもできますが、(たとえば<xref:System.ComponentModel.ComponentEditor>と<xref:System.ComponentModel.InstanceCreationEditor>)。</span><span class="sxs-lookup"><span data-stu-id="b1781-482">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="b1781-483">型に対して複数のエディターを定義することができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-483">You can define multiple editors for a type.</span></span> <span data-ttu-id="b1781-484">このメソッドを使用して、使用する 1 つを選択します。</span><span class="sxs-lookup"><span data-stu-id="b1781-484">You use this method to select the one you want to use.</span></span>  
  
 <span data-ttu-id="b1781-485">オブジェクトのインスタンスがあるない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-485">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-486"><paramref name="type" /> または <paramref name="editorBaseType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-486"><paramref name="type" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="b1781-487">ユーザー インターフェイス型エディターの概要</span><span class="sxs-lookup"><span data-stu-id="b1781-487">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type * bool -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-488">取得するエディターの対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-488">The component to get the editor for.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="b1781-489">検索するエディターの基本型を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-489">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-490">カスタムの型の記述情報を考慮する必要があるかどうかを示すフラグ。</span><span class="sxs-lookup"><span data-stu-id="b1781-490">A flag indicating whether custom type description information should be considered.</span></span></param>
        <summary><span data-ttu-id="b1781-491">指定したコンポーネントで使用され、カスタムの型記述子が関連付けられている、指定した基本型のエディターを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-491">Returns an editor with the specified base type and with a custom type descriptor for the specified component.</span></span></summary>
        <returns><span data-ttu-id="b1781-492">指定したエディターの型にキャストできるエディターのインスタンス。要求された型のエディターが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-492">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-493">型`editorBaseType`は通常<xref:System.Drawing.Design.UITypeEditor>、他の種類を使用することもできますが、(たとえば<xref:System.ComponentModel.ComponentEditor>と<xref:System.ComponentModel.InstanceCreationEditor>)。</span><span class="sxs-lookup"><span data-stu-id="b1781-493">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="b1781-494">プロパティの複数のエディターを定義することができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-494">You can define multiple editors for a property.</span></span> <span data-ttu-id="b1781-495">使用するエディターを選択するのにには、このメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b1781-495">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-496"><paramref name="component" /> または <paramref name="editorBaseType" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-496"><paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-497"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-497"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="b1781-498">ユーザー インターフェイス型エディターの概要</span><span class="sxs-lookup"><span data-stu-id="b1781-498">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-499">コンポーネントまたは型のイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-499">Returns the collection of events for a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-500">イベントを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-500">A component to get the events for.</span></span></param>
        <summary><span data-ttu-id="b1781-501">指定したコンポーネントのイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-501">Returns the collection of events for the specified component.</span></span></summary>
        <returns><span data-ttu-id="b1781-502">指定したコンポーネントのイベントを格納している <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-502">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-503">イベントのコレクションを取得する、指定された`component`パラメーター インスタンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="b1781-503">Retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="b1781-504">このコレクションとは異なる一連のイベント クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="b1781-504">This collection can differ from the set of events the class provides.</span></span> <span data-ttu-id="b1781-505">場合、`component`パラメーターが配置されて、サイトを追加またはその他のイベントを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1781-505">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="b1781-506">場合`component`は`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-506">If `component` is `null`, then an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-507">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-507">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1781-508">このメソッドの例は、次を参照してください。、<xref:System.ComponentModel.EventDescriptorCollection.Count%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-508">For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-509"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-509"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-510">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-510">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-511">指定したコンポーネントの型のイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-511">Returns the collection of events for a specified type of component.</span></span></summary>
        <returns><span data-ttu-id="b1781-512">指定したコンポーネントのイベントを格納している <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-512">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-513">オブジェクトのインスタンスがあるない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-513">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="b1781-514">場合、`componentType`パラメーターが`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-514">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-515">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-515">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-516">イベントを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-516">A component to get the events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-517">フィルターとして使用できる、<see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-517">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="b1781-518">指定した属性配列をフィルターとして使用して、指定したコンポーネントのイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-518">Returns the collection of events for a specified component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="b1781-519">指定したコンポーネントのイベントのうち、指定した属性に一致するイベントを格納している <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-519">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-520">イベントを`component`サイトを追加または場合にイベントを削除するために、次のパラメーターがクラスのイベントのとは異なることができます、`component`パラメーターが配置されています。</span><span class="sxs-lookup"><span data-stu-id="b1781-520">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="b1781-521">`attributes`配列が混在していることができます<xref:System.Type>と<xref:System.Attribute>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1781-521">The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="b1781-522">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-522">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="b1781-523">A<xref:System.Type>は、ワイルドカードとして扱われますを持つ任意のイベントと一致する、<xref:System.Type>属性のセットにします。</span><span class="sxs-lookup"><span data-stu-id="b1781-523">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="b1781-524">イベントがない場合、<xref:System.Attribute>同じクラスのイベントが含まれていない、返された配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-524">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-525">属性のインスタンスである場合、<xref:System.Attribute>クラス、イベントは完全に一致する必要がありますまたは返される配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="b1781-525">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-526">場合、<xref:System.Attribute>インスタンスが指定されて、既定のイベントがのインスタンスがない場合でも、返される配列に含まれている、<xref:System.Attribute>イベント。</span><span class="sxs-lookup"><span data-stu-id="b1781-526">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="b1781-527">場合`component`は`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-527">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-528">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-528">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-529"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-529"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-530">イベントを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-530">A component to get the events for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-531">カスタムの型の記述情報を考慮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-531"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1781-532">カスタムの型記述子を使用して、指定したコンポーネントのイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-532">Returns the collection of events for a specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-533">指定したコンポーネントのイベントを格納している <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-533">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-534">このメソッドは、イベントのコレクションを取得する、指定された`component`パラメーター インスタンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="b1781-534">This method retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="b1781-535">これは、一連のイベント クラスを提供と異なる場合がします。</span><span class="sxs-lookup"><span data-stu-id="b1781-535">This can differ from the set of events the class provides.</span></span> <span data-ttu-id="b1781-536">場合、`component`パラメーターが配置されて、サイトを追加またはその他のイベントを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1781-536">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="b1781-537">場合`component`は`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-537">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-538">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-538">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-539"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-539"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-540">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-540">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-541">フィルターとして使用できる、<see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-541">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="b1781-542">指定した属性配列をフィルターとして使用して、指定したコンポーネントの型のイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-542">Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="b1781-543">指定したコンポーネントのイベントのうち、指定した属性に一致するイベントを格納している <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-543">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-544">オブジェクトのインスタンスがあるない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-544">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="b1781-545">`attributes`パラメーター配列が混在していることができます<xref:System.Type>と<xref:System.Attribute>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1781-545">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="b1781-546">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-546">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="b1781-547">A<xref:System.Type>は、ワイルドカードとして扱われますを持つ任意のイベントと一致する、<xref:System.Type>属性のセットにします。</span><span class="sxs-lookup"><span data-stu-id="b1781-547">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="b1781-548">イベントがない場合、<xref:System.Attribute>同じクラスのイベントが含まれていない、返された配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-548">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-549">属性のインスタンスである場合、<xref:System.Attribute>クラス、イベントは完全に一致する必要がありますまたは返される配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="b1781-549">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-550">場合、<xref:System.Attribute>インスタンスが指定されて、既定のイベントがのインスタンスがない場合でも、返される配列に含まれている、<xref:System.Attribute>イベント。</span><span class="sxs-lookup"><span data-stu-id="b1781-550">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="b1781-551">場合、`componentType`パラメーターが`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-551">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-552">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-552">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-553">イベントを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-553">A component to get the events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-554">フィルターとして使用される、<see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-554">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-555">カスタムの型の記述情報を考慮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-555"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1781-556">指定した属性配列をフィルターとして使用し、カスタムの型記述子を使用して、指定したコンポーネントのイベントのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-556">Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-557">指定したコンポーネントのイベントのうち、指定した属性に一致するイベントを格納している <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-557">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-558">イベントを`component`サイトを追加または場合にイベントを削除するために、次のパラメーターがクラスのイベントのとは異なることができます、`component`パラメーターが配置されています。</span><span class="sxs-lookup"><span data-stu-id="b1781-558">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="b1781-559">`attributes`パラメーター配列が混在していることができます<xref:System.Type>と<xref:System.Attribute>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1781-559">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="b1781-560">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-560">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="b1781-561">A<xref:System.Type>は、ワイルドカードとして扱われますを持つ任意のイベントと一致する、<xref:System.Type>属性のセットにします。</span><span class="sxs-lookup"><span data-stu-id="b1781-561">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="b1781-562">イベントがない場合、<xref:System.Attribute>同じクラスのイベントが含まれていない、返された配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-562">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-563">属性のインスタンスである場合、<xref:System.Attribute>クラス、イベントは完全に一致する必要がありますまたは返される配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="b1781-563">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-564">場合、<xref:System.Attribute>インスタンスが指定されて、既定のイベントがのインスタンスがない場合でも、返される配列に含まれている、<xref:System.Attribute>イベント。</span><span class="sxs-lookup"><span data-stu-id="b1781-564">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="b1781-565">場合`component`は`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-565">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-566">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-566">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-567"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-567"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public static string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetFullComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-568">名前の検索対象となる <see cref="T:System.ComponentModel.Component" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-568">The <see cref="T:System.ComponentModel.Component" /> to find the name for.</span></span></param>
        <summary><span data-ttu-id="b1781-569">コンポーネントの完全修飾名を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-569">Returns the fully qualified name of the component.</span></span></summary>
        <returns><span data-ttu-id="b1781-570">指定したコンポーネントの完全修飾名。コンポーネントに名前がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-570">The fully qualified name of the specified component, or <see langword="null" /> if the component has no name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-571">多くの場合、<xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A>メソッドは、同じ値を返します、<xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-571">In many cases, the <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method.</span></span> <span data-ttu-id="b1781-572">ただし、コンポーネントは、入れ子になったコンテナーに存在するか、入れ子になった他のセマンティクスはの場合は、別の完全修飾名を返す可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b1781-572">However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-573"><paramref name="component" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-573"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-574">コンポーネントまたは型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-574">Returns the collection of properties on a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-575">プロパティを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-575">A component to get the properties for.</span></span></param>
        <summary><span data-ttu-id="b1781-576">指定したコンポーネントのプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-576">Returns the collection of properties for a specified component.</span></span></summary>
        <returns><span data-ttu-id="b1781-577">指定したコンポーネントのプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-577">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-578">サイトを追加したり、コンポーネントが配置される場合は、プロパティを削除するため、クラスのプロパティからコンポーネントのプロパティとは異なることができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-578">The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</span></span>  
  
 <span data-ttu-id="b1781-579">場合、`component`パラメーターが`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-579">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-580">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-580">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1781-581">次のコード例は、の使用を示します、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>コントロールのプロパティにアクセスするメソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-581">The following code example demonstrates the use of the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method to access the properties of a control.</span></span> <span data-ttu-id="b1781-582">このコード例が示されている例の一部、<xref:System.ComponentModel.Design.ComponentDesigner>クラス。</span><span class="sxs-lookup"><span data-stu-id="b1781-582">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#8)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-583"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-583"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <related type="Article" href="https://msdn.microsoft.com/library/c186c4b6-076c-438d-9ed3-f13da29c8c1f"><span data-ttu-id="b1781-584">方法: デザイン時サービスにアクセス</span><span class="sxs-lookup"><span data-stu-id="b1781-584">How to: Access Design-time Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-585">プロパティを取得する対象のコンポーネントを表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-585">A <see cref="T:System.Type" /> that represents the component to get properties for.</span></span></param>
        <summary><span data-ttu-id="b1781-586">指定したコンポーネントの型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-586">Returns the collection of properties for a specified type of component.</span></span></summary>
        <returns><span data-ttu-id="b1781-587">指定したコンポーネントの型のプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-587">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified type of component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-588">オブジェクトのインスタンスがあるない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-588">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="b1781-589">場合、`componentType`パラメーターが`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-589">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-590">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-590">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-591">プロパティを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-591">A component to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-592">フィルターとして使用される、<see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-592">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="b1781-593">指定した属性配列をフィルターとして使用して、指定したコンポーネントのプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-593">Returns the collection of properties for a specified component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="b1781-594">指定したコンポーネントのプロパティのうち、指定した属性に一致するプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-594">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-595">プロパティ、`component`ため、サイトが追加またはプロパティを削除する場合に、次のパラメーターがクラスのプロパティのとは異なることができます、`component`パラメーターが配置されています。</span><span class="sxs-lookup"><span data-stu-id="b1781-595">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="b1781-596">`attributes`パラメーター配列は、配列のフィルター処理するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b1781-596">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="b1781-597">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-597">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="b1781-598">プロパティがない場合、<xref:System.Attribute>同じクラスのプロパティは含まれません、返された配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-598">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-599">属性のインスタンスである場合、<xref:System.Attribute>クラス、プロパティは完全に一致する必要がありますまたは返される配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="b1781-599">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-600">場合、<xref:System.Attribute>インスタンスが指定されて、既定のプロパティがのインスタンスがない場合でも、返される配列に含まれている、<xref:System.Attribute>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-600">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="b1781-601">場合`attributes`、既定の属性を持つ、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>メソッド、プロパティに適用される属性があるない場合のケースに一致します。</span><span class="sxs-lookup"><span data-stu-id="b1781-601">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="b1781-602">場合`component`は`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-602">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-603">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-603">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1781-604">次のコード例は、実装する方法を示します、<xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-604">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="b1781-605">このコード例が示されている例の一部、<xref:System.Windows.Forms.Design.PropertyTab>クラス。</span><span class="sxs-lookup"><span data-stu-id="b1781-605">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-606"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-606"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-607">プロパティを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-607">A component to get the properties for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-608">カスタムの型の説明情報を考慮しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-608"><see langword="true" /> to not consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1781-609">既定の型記述子を使用して、指定したコンポーネントのプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-609">Returns the collection of properties for a specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-610">指定したコンポーネントのプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-610">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-611">プロパティ、`component`ため、サイトが追加またはプロパティを削除する場合に、次のパラメーターがクラスのプロパティのとは異なることができます、`component`パラメーターが配置されています。</span><span class="sxs-lookup"><span data-stu-id="b1781-611">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="b1781-612">場合`component`は`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-612">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-613">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-613">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-614"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-614"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="b1781-615">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-615">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-616">フィルターとして使用される、<see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-616">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="b1781-617">指定した属性配列をフィルターとして使用して、指定したコンポーネントの型のプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-617">Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="b1781-618">指定したコンポーネントの型のプロパティのうち、指定した属性に一致するプロパティを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-618">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for this type of component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-619">オブジェクトのインスタンスがあるない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-619">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="b1781-620">`attributes`パラメーター配列は、配列のフィルター処理するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b1781-620">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="b1781-621">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-621">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="b1781-622">プロパティがない場合、<xref:System.Attribute>同じクラスのプロパティは含まれません、返された配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-622">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-623">属性のインスタンスである場合、<xref:System.Attribute>クラス、プロパティは完全に一致する必要がありますまたは返される配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="b1781-623">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-624">場合、<xref:System.Attribute>インスタンスが指定されて、既定のプロパティがのインスタンスがない場合でも、返される配列に含まれている、<xref:System.Attribute>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-624">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="b1781-625">場合`attributes`、既定の属性を持つ、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>メソッド、プロパティに適用される属性があるない場合のケースに一致します。</span><span class="sxs-lookup"><span data-stu-id="b1781-625">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="b1781-626">場合、`componentType`パラメーターが`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-626">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-627">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-627">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1781-628">次のコード例は、実装する方法を示します、<xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-628">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="b1781-629">このコード例が示されている例の一部、<xref:System.Windows.Forms.Design.PropertyTab>クラス。</span><span class="sxs-lookup"><span data-stu-id="b1781-629">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-630">プロパティを取得する対象のコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-630">A component to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="b1781-631">フィルターとして使用される、<see cref="T:System.Attribute" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-631">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="b1781-632">カスタムの型の記述情報を考慮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-632"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b1781-633">指定した属性配列をフィルターとして使用し、カスタムの型記述子を使用して、指定したコンポーネントのプロパティのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-633">Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="b1781-634">指定したコンポーネントのプロパティのうち、指定した属性に一致するイベントを格納している <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-634">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the events that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-635">プロパティを`component`ため、サイトが追加またはプロパティを削除する場合は、クラスのプロパティと異なる場合が、`component`が配置されています。</span><span class="sxs-lookup"><span data-stu-id="b1781-635">The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.</span></span>  
  
 <span data-ttu-id="b1781-636">`attributes`パラメーター配列は、配列のフィルター処理するために使用します。</span><span class="sxs-lookup"><span data-stu-id="b1781-636">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="b1781-637">フィルター処理は、次のルールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-637">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="b1781-638">プロパティがない場合、<xref:System.Attribute>同じクラスのプロパティは含まれません、返された配列。</span><span class="sxs-lookup"><span data-stu-id="b1781-638">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-639">属性のインスタンスである場合、<xref:System.Attribute>クラス、プロパティは完全に一致する必要がありますまたは返される配列には含まれません。</span><span class="sxs-lookup"><span data-stu-id="b1781-639">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="b1781-640">場合、<xref:System.Attribute>インスタンスが指定されて、既定のプロパティがのインスタンスがない場合でも、返される配列に含まれている、<xref:System.Attribute>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="b1781-640">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="b1781-641">場合`attributes`、既定の属性を持つ、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>メソッド、プロパティに適用される属性があるない場合のケースに一致します。</span><span class="sxs-lookup"><span data-stu-id="b1781-641">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="b1781-642">場合、`component`パラメーターが`null`、空のコレクションが返されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-642">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="b1781-643">返されるコレクションの順序は、呼び出しの間と同じで、常に使用する前に注文は保証されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-643">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1781-644"><paramref name="component" /> は、プロセス間のリモート オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b1781-644"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-645">コンポーネントまたは型の型説明のプロバイダーを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-645">Returns the type description provider for the component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetProvider : obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b1781-646">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1781-646">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-647">指定したコンポーネントの型説明のプロバイダーを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-647">Returns the type description provider for the specified component.</span></span></summary>
        <returns><span data-ttu-id="b1781-648">指定したコンポーネントに関連付けられている <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-648">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-649"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>メソッドは、型説明プロバイダーを常に返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-649">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="b1781-650">既定値も<xref:System.ComponentModel.TypeDescriptor>実装が上に構築された、<xref:System.ComponentModel.TypeDescriptionProvider>します。</span><span class="sxs-lookup"><span data-stu-id="b1781-650">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-651"><paramref name="instance" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-651"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetProvider : Type -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b1781-652">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-652">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-653">指定した型の型説明のプロバイダーを返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-653">Returns the type description provider for the specified type.</span></span></summary>
        <returns><span data-ttu-id="b1781-654">指定した型に関連付けられている <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-654">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-655"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A>メソッドは、型説明プロバイダーを常に返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-655">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="b1781-656">既定値も<xref:System.ComponentModel.TypeDescriptor>実装が上に構築された、<xref:System.ComponentModel.TypeDescriptionProvider>します。</span><span class="sxs-lookup"><span data-stu-id="b1781-656">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-657"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-657"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-658">リフレクションの実行に使用できる <see cref="T:System.Type" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-658">Returns a <see cref="T:System.Type" /> that can be used to perform reflection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : obj -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b1781-659">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1781-659">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-660">オブジェクトに応じて、リフレクションの実行に使用できる <see cref="T:System.Type" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-660">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given an object.</span></span></summary>
        <returns><span data-ttu-id="b1781-661">指定したオブジェクトの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-661">A <see cref="T:System.Type" /> for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-662"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>メソッドは、低レベルのバージョンの<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-662">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="b1781-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> カスタム型記述子が見つからないそのときに、オブジェクトに対して標準的なリフレクションを実行する通常使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-663"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-664"><paramref name="instance" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-664"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : Type -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b1781-665">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-665">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-666">クラス型に応じて、リフレクションの実行に使用できる <see cref="T:System.Type" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b1781-666">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given a class type.</span></span></summary>
        <returns><span data-ttu-id="b1781-667">指定したクラスの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-667">A <see cref="T:System.Type" /> of the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-668"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A>メソッドは、低レベルのバージョンの<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-668">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="b1781-669"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> カスタム型記述子が見つからないそのときに、クラスに対して標準的なリフレクションを実行する通常使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-669"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-670"><paramref name="type" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-670"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public static Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1781-671">すべてのインターフェイス型に対する型説明のプロバイダーを表す型を取得します。</span><span class="sxs-lookup"><span data-stu-id="b1781-671">Gets a type that represents a type description provider for all interface types.</span></span></summary>
        <value><span data-ttu-id="b1781-672">すべてのインターフェイス型に対するカスタムの型説明のプロバイダーを表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-672">A <see cref="T:System.Type" /> that represents a custom type description provider for all interface types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-673"><xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A>プロパティの取得、<xref:System.Type>オブジェクトを渡すことができる、<xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>インターフェイス型の型説明プロバイダーを定義するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-673">The <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-674">プロパティとイベントをキャッシュから消去します。</span><span class="sxs-lookup"><span data-stu-id="b1781-674">Clears the properties and events from the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member Refresh : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="b1781-675">プロパティまたはイベントが変更されたコンポーネント。</span><span class="sxs-lookup"><span data-stu-id="b1781-675">A component for which the properties or events have changed.</span></span></param>
        <summary><span data-ttu-id="b1781-676">指定したコンポーネントのプロパティとイベントをキャッシュから消去します。</span><span class="sxs-lookup"><span data-stu-id="b1781-676">Clears the properties and events for the specified component from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-677">プロパティとイベントがによってキャッシュ<xref:System.ComponentModel.TypeDescriptor>速度。</span><span class="sxs-lookup"><span data-stu-id="b1781-677">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="b1781-678">通常、これらは定数オブジェクトの有効期間です。</span><span class="sxs-lookup"><span data-stu-id="b1781-678">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="b1781-679">ただし、拡張プロバイダーとデザイナーは、一連のオブジェクトのプロパティを変更できます。</span><span class="sxs-lookup"><span data-stu-id="b1781-679">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="b1781-680">その場合は、オブジェクトのプロパティとイベント記述子をクリアするには、このメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b1781-680">If they do, they should call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="b1781-681">このメソッドは、デザイン時にだけ使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-681">This method is used only at design time.</span></span> <span data-ttu-id="b1781-682">実行時に使用されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-682">It is not used during run time.</span></span>  
  
 <span data-ttu-id="b1781-683">このメソッドは、<xref:System.ComponentModel.TypeDescriptor.Refreshed>プロパティまたはコンポーネントのイベントを変更したときにイベント。</span><span class="sxs-lookup"><span data-stu-id="b1781-683">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="b1781-684">前回の呼び出しがあった場合、このイベントは発生のみ、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>または<xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>情報をキャッシュするメソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-684">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1781-685">このメソッドを使用しての例は、次を参照してください。、<xref:System.ComponentModel.RefreshEventHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="b1781-685">For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Assembly -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="b1781-686">更新する対象のアセンブリを表す <see cref="T:System.Reflection.Assembly" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-686">The <see cref="T:System.Reflection.Assembly" /> that represents the assembly to refresh.</span></span> <span data-ttu-id="b1781-687">指定したアセンブリ内の各 <see cref="T:System.Type" /> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-687">Each <see cref="T:System.Type" /> in this assembly will be refreshed.</span></span></param>
        <summary><span data-ttu-id="b1781-688">指定したアセンブリのプロパティとイベントをキャッシュから消去します。</span><span class="sxs-lookup"><span data-stu-id="b1781-688">Clears the properties and events for the specified assembly from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-689">プロパティとイベントがによってキャッシュ<xref:System.ComponentModel.TypeDescriptor>速度。</span><span class="sxs-lookup"><span data-stu-id="b1781-689">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="b1781-690">通常、これらは定数オブジェクトの有効期間です。</span><span class="sxs-lookup"><span data-stu-id="b1781-690">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="b1781-691">ただし、拡張プロバイダーとデザイナーは、一連のオブジェクトのプロパティを変更できます。</span><span class="sxs-lookup"><span data-stu-id="b1781-691">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="b1781-692">その場合、オブジェクトのプロパティとイベント記述子をクリアするには、このメソッド呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-692">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="b1781-693">このメソッドは、デザイン時にだけ使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-693">This method is used only at design time.</span></span> <span data-ttu-id="b1781-694">実行時に使用されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-694">It is not used during run time.</span></span>  
  
 <span data-ttu-id="b1781-695">呼び出しを行う前に、 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 、キャッシュをクリアするメソッドを呼び出す必要があります、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>情報を最初にキャッシュする特定のアセンブリのメソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-695">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.</span></span>  
  
 <span data-ttu-id="b1781-696">このメソッドは、<xref:System.ComponentModel.TypeDescriptor.Refreshed>プロパティ設定するコンポーネントの変更の通知を受信するすべてのクラスに通知するイベントです。</span><span class="sxs-lookup"><span data-stu-id="b1781-696">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Module module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Module module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Module ^ module);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Module -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh module" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="module"><span data-ttu-id="b1781-697">更新する対象のモジュールを表す <see cref="T:System.Reflection.Module" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-697">The <see cref="T:System.Reflection.Module" /> that represents the module to refresh.</span></span> <span data-ttu-id="b1781-698">指定したモジュール内の各 <see cref="T:System.Type" /> が更新されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-698">Each <see cref="T:System.Type" /> in this module will be refreshed.</span></span></param>
        <summary><span data-ttu-id="b1781-699">指定したモジュールのプロパティとイベントをキャッシュから消去します。</span><span class="sxs-lookup"><span data-stu-id="b1781-699">Clears the properties and events for the specified module from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-700">プロパティとイベントがによってキャッシュ<xref:System.ComponentModel.TypeDescriptor>速度。</span><span class="sxs-lookup"><span data-stu-id="b1781-700">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="b1781-701">通常、これらは定数オブジェクトの有効期間です。</span><span class="sxs-lookup"><span data-stu-id="b1781-701">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="b1781-702">ただし、拡張プロバイダーとデザイナーは、一連のオブジェクトのプロパティを変更できます。</span><span class="sxs-lookup"><span data-stu-id="b1781-702">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="b1781-703">その場合、オブジェクトのプロパティとイベント記述子をクリアするには、このメソッド呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-703">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="b1781-704">このメソッドは、デザイン時にだけ使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-704">This method is used only at design time.</span></span> <span data-ttu-id="b1781-705">実行時に使用されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-705">It is not used during run time.</span></span>  
  
 <span data-ttu-id="b1781-706">呼び出しを行う前に、 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 、キャッシュをクリアするメソッドを呼び出す必要があります、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>情報を最初にキャッシュする特定のモジュールのメソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-706">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.</span></span>  
  
 <span data-ttu-id="b1781-707">このメソッドは、<xref:System.ComponentModel.TypeDescriptor.Refreshed>プロパティ設定するコンポーネントの変更の通知を受信するすべてのクラスに通知するイベントです。</span><span class="sxs-lookup"><span data-stu-id="b1781-707">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Refresh : Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b1781-708">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-708">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-709">指定したコンポーネントの型のプロパティとイベントをキャッシュから消去します。</span><span class="sxs-lookup"><span data-stu-id="b1781-709">Clears the properties and events for the specified type of component from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-710">オブジェクトのインスタンスがあるない場合にのみ、このバージョンのこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b1781-710">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="b1781-711">プロパティとイベントがによってキャッシュ<xref:System.ComponentModel.TypeDescriptor>速度。</span><span class="sxs-lookup"><span data-stu-id="b1781-711">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="b1781-712">通常、これらは定数オブジェクトの有効期間です。</span><span class="sxs-lookup"><span data-stu-id="b1781-712">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="b1781-713">ただし、拡張プロバイダーとデザイナーは、一連のオブジェクトのプロパティを変更できます。</span><span class="sxs-lookup"><span data-stu-id="b1781-713">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="b1781-714">その場合、オブジェクトのプロパティとイベント記述子をクリアするには、このメソッド呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-714">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="b1781-715">このメソッドは、デザイン時にだけ使用されます。</span><span class="sxs-lookup"><span data-stu-id="b1781-715">This method is used only at design time.</span></span> <span data-ttu-id="b1781-716">実行時に使用されません。</span><span class="sxs-lookup"><span data-stu-id="b1781-716">It is not used during run time.</span></span>  
  
 <span data-ttu-id="b1781-717">このメソッドは、<xref:System.ComponentModel.TypeDescriptor.Refreshed>プロパティまたはコンポーネントのイベントを変更したときにイベント。</span><span class="sxs-lookup"><span data-stu-id="b1781-717">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="b1781-718">前回の呼び出しがあった場合、このイベントは発生のみ、<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>または<xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>情報をキャッシュするメソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-718">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refreshed">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.RefreshEventHandler Refreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RefreshEventHandler Refreshed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Refreshed As RefreshEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::ComponentModel::RefreshEventHandler ^ Refreshed;" />
      <MemberSignature Language="F#" Value="member this.Refreshed : System.ComponentModel.RefreshEventHandler " Usage="member this.Refreshed : System.ComponentModel.RefreshEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RefreshEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1781-719">コンポーネントのキャッシュが消去されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b1781-719">Occurs when the cache for a component is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-720">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="b1781-720">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1781-721">このイベントを使用しての例は、次を参照してください。、<xref:System.ComponentModel.RefreshEventHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="b1781-721">For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociation">
      <MemberSignature Language="C#" Value="public static void RemoveAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="secondary" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="b1781-722">プライマリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-722">The primary <see cref="T:System.Object" />.</span></span></param>
        <param name="secondary"><span data-ttu-id="b1781-723">セカンダリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-723">The secondary <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="b1781-724">2 つのオブジェクト間の関連付けを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1781-724">Removes an association between two objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-725"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A>メソッドで構成される 2 つのオブジェクト間のアソシエーションの削除、<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-725">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="b1781-726">A<xref:System.WeakReference>を使用するプライマリとセカンダリのオブジェクト間の関連付けを維持。 そのため、このメソッドには影響しませんがいずれかのオブジェクトのファイナライズまたはガベージ コレクションによって回収されるときにします。</span><span class="sxs-lookup"><span data-stu-id="b1781-726">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-727">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-727">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="b1781-728">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="b1781-728">for full access to system resources.</span></span> <span data-ttu-id="b1781-729">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-729">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b1781-730">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="b1781-730">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociations">
      <MemberSignature Language="C#" Value="public static void RemoveAssociations (object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociations(object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociations (primary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociations(System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociations : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociations primary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="b1781-731">関連付けにおけるプライマリ <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-731">The primary <see cref="T:System.Object" /> in an association.</span></span></param>
        <summary><span data-ttu-id="b1781-732">プライマリ オブジェクトのすべての関連付けを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1781-732">Removes all associations for a primary object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-733"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A>メソッドは、プライマリ オブジェクトとすべての呼び出しによって作成された、セカンダリ オブジェクト間のすべての関連付けを削除します。、<xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-733">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="b1781-734">A<xref:System.WeakReference>を使用するプライマリとセカンダリのオブジェクト間の関連付けを維持。 そのため、このメソッドには影響しませんときにいずれかのプライマリのセカンダリ オブジェクトのファイナライズまたはガベージ コレクションによって解放します。</span><span class="sxs-lookup"><span data-stu-id="b1781-734">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-735"><paramref name="primary" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-735"><paramref name="primary" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="b1781-736">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="b1781-736">for full access to system resources.</span></span> <span data-ttu-id="b1781-737">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-737">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b1781-738">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="b1781-738">Associated state:</span></span></permission>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-739">以前に追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1781-739">Removes a previously added type description provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b1781-740">削除する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-740">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="instance"><span data-ttu-id="b1781-741">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1781-741">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-742">指定したオブジェクトに関連付けられている、以前に追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1781-742">Removes a previously added type description provider that is associated with the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-743">このメソッドは、以前に追加の型説明プロバイダーを削除、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-743">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="b1781-744">プロバイダーを削除すると、<xref:System.ComponentModel.TypeDescriptor.Refreshed>イベントに関連付けられているオブジェクトに対して発生します。</span><span class="sxs-lookup"><span data-stu-id="b1781-744">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="b1781-745">使用して、<xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>メソッドを部分信頼コードから呼び出す必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-745">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-746">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-746">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="b1781-747">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="b1781-747">for full access to system resources.</span></span> <span data-ttu-id="b1781-748">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-748">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b1781-749">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="b1781-749">Associated state:</span></span></permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b1781-750">削除する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-750">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="type"><span data-ttu-id="b1781-751">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-751">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-752">指定した型に関連付けられている、以前に追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1781-752">Removes a previously added type description provider that is associated with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-753">このメソッドは、以前に追加の型説明プロバイダーを削除、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-753">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="b1781-754">プロバイダーを削除すると、<xref:System.ComponentModel.TypeDescriptor.Refreshed>イベントに関連付けられている型に対して発生します。</span><span class="sxs-lookup"><span data-stu-id="b1781-754">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="b1781-755">使用して、<xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>メソッドを部分信頼コードから呼び出す必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-755">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-756">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-756">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="b1781-757">システム リソースへのフル アクセス。</span><span class="sxs-lookup"><span data-stu-id="b1781-757">for full access to system resources.</span></span> <span data-ttu-id="b1781-758">要求値:<see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-758">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="b1781-759">関連付けられた状態。</span><span class="sxs-lookup"><span data-stu-id="b1781-759">Associated state:</span></span></permission>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1781-760">以前に追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1781-760">Removes a previously added type description provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b1781-761">削除する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-761">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="instance"><span data-ttu-id="b1781-762">対象コンポーネントのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="b1781-762">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-763">指定したオブジェクトに関連付けられている、以前に追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1781-763">Removes a previously added type description provider that is associated with the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-764">このメソッドは、以前に追加の型説明プロバイダーを削除、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-764">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="b1781-765">プロバイダーを削除すると、<xref:System.ComponentModel.TypeDescriptor.Refreshed>イベントに関連付けられているオブジェクトに対して発生します。</span><span class="sxs-lookup"><span data-stu-id="b1781-765">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="b1781-766">このメソッドは、部分的に信頼されているコードから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-766">This method can be called from partially trusted code.</span></span> <span data-ttu-id="b1781-767">場合<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>が定義されている場合、呼び出し元できますプロバイダーを登録する指定したインスタンスの型が部分的に信頼されたもある場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-767">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="b1781-768">使用して、<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29>メソッドを部分信頼コードから呼び出す必要がない場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-768">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-769">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-769">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="b1781-770">レジストリ アクセスします。</span><span class="sxs-lookup"><span data-stu-id="b1781-770">For registry access.</span></span> <span data-ttu-id="b1781-771">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-771">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b1781-772">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="b1781-772">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="b1781-773">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-773">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b1781-774">関連付けられている型。<see cref="T:System.Security.PermissionSet" />を定義するアセンブリに必要な<paramref name="instance" />パラメーターの型。</span><span class="sxs-lookup"><span data-stu-id="b1781-774">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines the <paramref name="instance" /> parameter's type.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b1781-775">削除する <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-775">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="type"><span data-ttu-id="b1781-776">対象のコンポーネントの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-776">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="b1781-777">指定した型に関連付けられている、以前に追加した型説明のプロバイダーを削除します。</span><span class="sxs-lookup"><span data-stu-id="b1781-777">Removes a previously added type description provider that is associated with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1781-778">このメソッドは、以前に追加の型説明プロバイダーを削除、<xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="b1781-778">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="b1781-779">プロバイダーを削除すると、<xref:System.ComponentModel.TypeDescriptor.Refreshed>イベントに関連付けられている型に対して発生します。</span><span class="sxs-lookup"><span data-stu-id="b1781-779">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="b1781-780">このメソッドは、部分的に信頼されているコードから呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b1781-780">This method can be called from partially trusted code.</span></span> <span data-ttu-id="b1781-781">場合<xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>が定義されている場合、呼び出し元登録を解除できます、指定した型のプロバイダーも部分的に信頼されている場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-781">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="b1781-782">使用して、<xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29>メソッドを部分信頼コードから呼び出す必要がない場合。</span><span class="sxs-lookup"><span data-stu-id="b1781-782">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-783">一方または両方のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b1781-783">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.TypeDescriptorPermission"><span data-ttu-id="b1781-784">レジストリ アクセスします。</span><span class="sxs-lookup"><span data-stu-id="b1781-784">For registry access.</span></span> <span data-ttu-id="b1781-785">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-785">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b1781-786">関連付けられた列挙体。 <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span><span class="sxs-lookup"><span data-stu-id="b1781-786">Associated enumeration: <see cref="F:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess" /></span></span></permission>
        <permission cref="P:System.Reflection.Assembly.PermissionSet"><span data-ttu-id="b1781-787">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-787">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="b1781-788">関連付けられている型。<see cref="T:System.Security.PermissionSet" />を定義するアセンブリに必要な<paramref name="type" />します。</span><span class="sxs-lookup"><span data-stu-id="b1781-788">Associated type: The <see cref="T:System.Security.PermissionSet" /> that is required by the assembly that defines <paramref name="type" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptorArray">
      <MemberSignature Language="C#" Value="public static void SortDescriptorArray (System.Collections.IList infos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortDescriptorArray(class System.Collections.IList infos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SortDescriptorArray (infos As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SortDescriptorArray(System::Collections::IList ^ infos);" />
      <MemberSignature Language="F#" Value="static member SortDescriptorArray : System.Collections.IList -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.SortDescriptorArray infos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infos" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="infos"><span data-ttu-id="b1781-789">並べ替える対象の記述子を格納している <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="b1781-789">An <see cref="T:System.Collections.IList" /> that contains the descriptors to sort.</span></span></param>
        <summary><span data-ttu-id="b1781-790">記述子を名前で並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="b1781-790">Sorts descriptors using the name of the descriptor.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1781-791"><paramref name="infos" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="b1781-791"><paramref name="infos" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
  </Members>
</Type>