<Type Name="ReadOnlyAttribute" FullName="System.ComponentModel.ReadOnlyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3354349e27ec39eb35003d32cafd4f2a5993b898" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48761789" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReadOnlyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReadOnlyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ReadOnlyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReadOnlyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReadOnlyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ReadOnlyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c36f2-101">この属性が関連付けられているプロパティを読み取り専用にするか、読み書き両用にするかを指定します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-101">Specifies whether the property this attribute is bound to is read-only or read/write.</span></span> <span data-ttu-id="c36f2-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="c36f2-102">This class cannot be inherited</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36f2-103">マークされているメンバー、<xref:System.ComponentModel.ReadOnlyAttribute>設定`true`がないか、`Set`メソッドを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="c36f2-103">Members that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true` or that do not have a `Set` method cannot be changed.</span></span> <span data-ttu-id="c36f2-104">メンバーをこの属性がないかでマークされている、<xref:System.ComponentModel.ReadOnlyAttribute>設定`false`は読み取り/書き込み、および変更できます。</span><span class="sxs-lookup"><span data-stu-id="c36f2-104">Members that do not have this attribute or that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false` are read/write, and they can be changed.</span></span> <span data-ttu-id="c36f2-105">既定値は、<xref:System.ComponentModel.ReadOnlyAttribute.No> です。</span><span class="sxs-lookup"><span data-stu-id="c36f2-105">The default is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c36f2-106"><xref:System.ComponentModel.PropertyDescriptor>クラスは、強制、<xref:System.ComponentModel.ReadOnlyAttribute>デザイン環境では、実行時にします。</span><span class="sxs-lookup"><span data-stu-id="c36f2-106">The <xref:System.ComponentModel.PropertyDescriptor> class enforces the <xref:System.ComponentModel.ReadOnlyAttribute> in the design environment and at run time.</span></span> <span data-ttu-id="c36f2-107">プロパティをマークすると、<xref:System.ComponentModel.ReadOnlyAttribute>に設定`true`、定数のメンバーにこの属性の値が設定されて<xref:System.ComponentModel.ReadOnlyAttribute.Yes>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-107">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="c36f2-108">マークされたプロパティの<xref:System.ComponentModel.ReadOnlyAttribute>設定`false`、値が<xref:System.ComponentModel.ReadOnlyAttribute.No>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-108">For a property marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="c36f2-109">したがって、コード内でこの属性の値を確認するときは、属性としてを指定する必要があります<xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>または<xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-109">Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> or <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c36f2-110">詳細については、「[属性](~/docs/standard/attributes/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c36f2-110">For more information, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c36f2-111">次のコード例は、プロパティが読み取り専用としてマークします。</span><span class="sxs-lookup"><span data-stu-id="c36f2-111">The following code example marks a property as read-only.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c36f2-112">次のコード例の値を確認する方法を示しています、<xref:System.ComponentModel.ReadOnlyAttribute>の`MyProperty`します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-112">The next code example shows how to check the value of the <xref:System.ComponentModel.ReadOnlyAttribute> for `MyProperty`.</span></span> <span data-ttu-id="c36f2-113">最初に、コードを取得、<xref:System.ComponentModel.PropertyDescriptorCollection>オブジェクトのすべてのプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-113">First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.</span></span> <span data-ttu-id="c36f2-114">次に、そのインデックス、<xref:System.ComponentModel.PropertyDescriptorCollection>を取得する`MyProperty`します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-114">Next, it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.</span></span> <span data-ttu-id="c36f2-115">このプロパティの属性を返し、属性の変数に保存します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-115">Then it returns the attributes for this property and saves them in the attributes variable.</span></span>  
  
 <span data-ttu-id="c36f2-116">値をチェックの 2 つの方法は、<xref:System.ComponentModel.ReadOnlyAttribute>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-116">The example presents two different ways of checking the value of the <xref:System.ComponentModel.ReadOnlyAttribute>.</span></span> <span data-ttu-id="c36f2-117">2 つ目のコード例では、<xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="c36f2-117">In the second code fragment, the example calls the <xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A> method.</span></span> <span data-ttu-id="c36f2-118">例では、最後のコード フラグメントで、<xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A>プロパティ値をチェックします。</span><span class="sxs-lookup"><span data-stu-id="c36f2-118">In the last code fragment, the example uses the <xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A> property to check the value.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic ReadOnlyAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic ReadOnlyAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#2)]  
  
 <span data-ttu-id="c36f2-119">持つクラスをマークされている場合、 <xref:System.ComponentModel.ReadOnlyAttribute>、次のコード例を使用して、値を確認します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-119">If you marked a class with the <xref:System.ComponentModel.ReadOnlyAttribute>, use the following code example to check the value.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#3)]
 [!code-csharp[Classic ReadOnlyAttribute Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#3)]
 [!code-vb[Classic ReadOnlyAttribute Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.AttributeCollection" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyAttribute (bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyAttribute(bool isReadOnly);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.ReadOnlyAttribute : bool -&gt; System.ComponentModel.ReadOnlyAttribute" Usage="new System.ComponentModel.ReadOnlyAttribute isReadOnly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isReadOnly"><span data-ttu-id="c36f2-120">この属性が関連付けられているプロパティが読み取り専用であることを示す場合は <see langword="true" />。プロパティが読み書き可能であることを示す場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c36f2-120"><see langword="true" /> to show that the property this attribute is bound to is read-only; <see langword="false" /> to show that the property is read/write.</span></span></param>
        <summary><span data-ttu-id="c36f2-121"><see cref="T:System.ComponentModel.ReadOnlyAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-121">Initializes a new instance of the <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36f2-122">マークされているメンバー、<xref:System.ComponentModel.ReadOnlyAttribute>設定`true`がないか、`Set`メソッドを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="c36f2-122">Members that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true` or that do not have a `Set` method cannot be changed.</span></span> <span data-ttu-id="c36f2-123">メンバーをこの属性がないかでマークされている、<xref:System.ComponentModel.ReadOnlyAttribute>設定`false`は読み取り/書き込み、および変更できます。</span><span class="sxs-lookup"><span data-stu-id="c36f2-123">Members that do not have this attribute or that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false` are read/write, and they can be changed.</span></span> <span data-ttu-id="c36f2-124">既定値は、<xref:System.ComponentModel.ReadOnlyAttribute.No> です。</span><span class="sxs-lookup"><span data-stu-id="c36f2-124">The default is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c36f2-125">プロパティをマークすると、<xref:System.ComponentModel.ReadOnlyAttribute>に設定`true`、定数のメンバーにこの属性の値が設定されて<xref:System.ComponentModel.ReadOnlyAttribute.Yes>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-125">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="c36f2-126">マークされたプロパティの<xref:System.ComponentModel.ReadOnlyAttribute>設定`false`、値が<xref:System.ComponentModel.ReadOnlyAttribute.No>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-126">For a property marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="c36f2-127">したがって、コード内でこの属性の値を確認するときは、属性としてを指定する必要があります<xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>または<xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-127">Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> or <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c36f2-128">次のコード例は、プロパティが読み取り専用としてマークします。</span><span class="sxs-lookup"><span data-stu-id="c36f2-128">The following code example marks a property as read-only.</span></span> <span data-ttu-id="c36f2-129">このコードを作成する新しい<xref:System.ComponentModel.ReadOnlyAttribute>、その値に設定<xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>、し、プロパティにバインドします。</span><span class="sxs-lookup"><span data-stu-id="c36f2-129">This code creates a new <xref:System.ComponentModel.ReadOnlyAttribute>, sets its value to <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>, and binds it to the property.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c36f2-130"><see cref="T:System.ComponentModel.ReadOnlyAttribute" /> の既定値である <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> を指定します。つまり、この属性が関連付けられたプロパティは読み書き可能です。</span><span class="sxs-lookup"><span data-stu-id="c36f2-130">Specifies the default value for the <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, which is <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (that is, the property this attribute is bound to is read/write).</span></span> <span data-ttu-id="c36f2-131"><see langword="static" /> フィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c36f2-131">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36f2-132">この属性を定数のメンバーに設定されてこの値を持つプロパティをマークすると、<xref:System.ComponentModel.ReadOnlyAttribute.No>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-132">When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="c36f2-133">したがって、属性がコード内でこの値に設定されているかどうかを確認するときは、属性としてを指定する必要があります<xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-133">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.No" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="readOnlyAttribute.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c36f2-134">比較対象のもう 1 つのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c36f2-134">Another object to compare to.</span></span></param>
        <summary><span data-ttu-id="c36f2-135">このインスタンスと指定したオブジェクトが等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-135">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="c36f2-136"><paramref name="value" /> がこのインスタンスと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c36f2-136"><see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="readOnlyAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c36f2-137">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-137">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="c36f2-138">現在の <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="c36f2-138">A hash code for the current <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="override this.IsDefaultAttribute : unit -&gt; bool" Usage="readOnlyAttribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c36f2-139">この属性が既定値かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-139">Determines if this attribute is the default.</span></span></summary>
        <returns><span data-ttu-id="c36f2-140">属性がこの属性クラスの既定値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c36f2-140"><see langword="true" /> if the attribute is the default value for this attribute class; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c36f2-141">この属性が関連付けられているプロパティが読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-141">Gets a value indicating whether the property this attribute is bound to is read-only.</span></span></summary>
        <value><span data-ttu-id="c36f2-142">この属性が関連付けられているプロパティが読み取り専用の場合は <see langword="true" />。プロパティが読み書き可能の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c36f2-142"><see langword="true" /> if the property this attribute is bound to is read-only; <see langword="false" /> if the property is read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c36f2-143">次のコード例をチェックするかどうか`MyProperty`は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c36f2-143">The following code example checks to see whether `MyProperty` is read-only.</span></span> <span data-ttu-id="c36f2-144">まず、コードは、の属性を取得します。`MyProperty`によって、次の手順。</span><span class="sxs-lookup"><span data-stu-id="c36f2-144">First, the code gets the attributes for `MyProperty` by doing the following:</span></span>  
  
-   <span data-ttu-id="c36f2-145">取得、<xref:System.ComponentModel.PropertyDescriptorCollection>オブジェクトのすべてのプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-145">Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.</span></span>  
  
-   <span data-ttu-id="c36f2-146">インデックス付け、<xref:System.ComponentModel.PropertyDescriptorCollection>させる`MyProperty`します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-146">Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.</span></span>  
  
-   <span data-ttu-id="c36f2-147">属性の変数には、このプロパティの属性を保存しています。</span><span class="sxs-lookup"><span data-stu-id="c36f2-147">Saving the attributes for this property in the attributes variable.</span></span>  
  
 <span data-ttu-id="c36f2-148">コード セットし、`myAttribute`の値に、<xref:System.ComponentModel.ReadOnlyAttribute>で、<xref:System.ComponentModel.AttributeCollection>プロパティは読み取り専用かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-148">Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.ReadOnlyAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is read-only.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute No;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute No" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.No" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly No As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ No;" />
      <MemberSignature Language="F#" Value=" staticval mutable No : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c36f2-149">この属性が関連付けられているプロパティが読み書き可能であり、変更できることを指定します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-149">Specifies that the property this attribute is bound to is read/write and can be modified.</span></span> <span data-ttu-id="c36f2-150"><see langword="static" /> フィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c36f2-150">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36f2-151">このフィールドは、この属性の既定の設定です。</span><span class="sxs-lookup"><span data-stu-id="c36f2-151">This field is the default setting for this attribute.</span></span>  
  
 <span data-ttu-id="c36f2-152">プロパティをマークすると、<xref:System.ComponentModel.ReadOnlyAttribute>に設定`false`、定数のメンバーにこの属性の値が設定されて<xref:System.ComponentModel.ReadOnlyAttribute.No>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-152">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="c36f2-153">したがって、属性がコード内でこの値に設定されているかどうかを確認するときは、属性としてを指定する必要があります<xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-153">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute Yes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute Yes" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Yes As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ Yes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Yes : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c36f2-154">この属性が関連付けられているプロパティが読み取り専用であり、サーバー エクスプローラーで変更できないことを指定します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-154">Specifies that the property this attribute is bound to is read-only and cannot be modified in the server explorer.</span></span> <span data-ttu-id="c36f2-155"><see langword="static" /> フィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="c36f2-155">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c36f2-156">プロパティをマークすると、<xref:System.ComponentModel.ReadOnlyAttribute>に設定`true`、定数のメンバーにこの属性の値が設定されて<xref:System.ComponentModel.ReadOnlyAttribute.Yes>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-156">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="c36f2-157">したがって、属性がコード内でこの値に設定されているかどうかを確認するときは、属性としてを指定する必要があります<xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="c36f2-157">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.No" />
      </Docs>
    </Member>
  </Members>
</Type>