<Type Name="AsyncCompletedEventHandler" FullName="System.ComponentModel.AsyncCompletedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a88fe9321bd14a09edfac94c7a3c7e606eb7d19" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58725467" /></Metadata><TypeSignature Language="C#" Value="public delegate void AsyncCompletedEventHandler(object sender, AsyncCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsyncCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub AsyncCompletedEventHandler(sender As Object, e As AsyncCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void AsyncCompletedEventHandler(System::Object ^ sender, AsyncCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventHandler = delegate of obj * AsyncCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.AsyncCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="5691f-101">イベントのソース。</span><span class="sxs-lookup"><span data-stu-id="5691f-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="5691f-102">イベント データを格納している <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="5691f-102">An <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="5691f-103">非同期操作の *MethodName*<see langword="Completed" /> イベントを処理するメソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="5691f-103">Represents the method that will handle the *MethodName*<see langword="Completed" /> event of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5691f-104"><xref:System.ComponentModel.AsyncCompletedEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="5691f-104">When you create an <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="5691f-105">イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="5691f-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="5691f-106">デリゲートを削除しない限り、イベントが発生するたびにイベント ハンドラー メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5691f-106">The event-handler method is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="5691f-107">イベント ハンドラー デリゲートの詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="5691f-107">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="5691f-108">呼ばれる、非同期メソッドの*MethodName*、コンポーネントでは、必要があります、対応する*MethodName* `Completed`イベント、および省略可能な*MethodName*`CompletedEventArgs`クラス。</span><span class="sxs-lookup"><span data-stu-id="5691f-108">For an asynchronous method, called *MethodName*, in your component, you will have a corresponding *MethodName*`Completed` event, and an optional *MethodName*`CompletedEventArgs` class.</span></span>  
  
 <span data-ttu-id="5691f-109">非同期メソッドの複数の同時呼び出しをサポートするコンポーネント、クライアントは、一意のトークンを指定できますか特定のイベントを発生させている非同期タスクを区別するために、タスク ID。</span><span class="sxs-lookup"><span data-stu-id="5691f-109">For a component that supports multiple concurrent invocations of its asynchronous methods, the client can supply a unique token, or task ID, to distinguish which asynchronous task is raising particular events.</span></span> <span data-ttu-id="5691f-110">クライアントの<xref:System.ComponentModel.AsyncCompletedEventHandler>読み取ることができます、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType>プロパティのタスクが完了を報告します。</span><span class="sxs-lookup"><span data-stu-id="5691f-110">The client's <xref:System.ComponentModel.AsyncCompletedEventHandler> can read the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A?displayProperty=nameWithType> property to determine which task is reporting completion.</span></span> <span data-ttu-id="5691f-111">実装を使用する必要があります、<xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType>を作成する、<xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType>保留中の非同期タスクのクライアントのタスクで Id を関連付けます。</span><span class="sxs-lookup"><span data-stu-id="5691f-111">Your implementation should use the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that associates the client's task IDs with pending asynchronous tasks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5691f-112">コード例については、<xref:System.ComponentModel.AsyncCompletedEventHandler>デリゲート、例を参照してください、<xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType>クラス。</span><span class="sxs-lookup"><span data-stu-id="5691f-112">For a code example of the <xref:System.ComponentModel.AsyncCompletedEventHandler> delegate, see the example in the <xref:System.ComponentModel.AsyncCompletedEventArgs?displayProperty=nameWithType> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventArgs" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/792aa8da-918b-458e-b154-9836b97735f3"><span data-ttu-id="5691f-113">コンポーネントの非同期パターン</span><span class="sxs-lookup"><span data-stu-id="5691f-113">Asynchronous Pattern for Components</span></span></related>
  </Docs>
</Type>