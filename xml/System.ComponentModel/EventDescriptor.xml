<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EventDescriptor.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d63614a-fd48-4a83-9dc4-ea1e401b6c154d70129679b536dc9cabf03a9b5cd88593d4f1f3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d70129679b536dc9cabf03a9b5cd88593d4f1f3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4b4804968da1dfdf71c501075a5b66957b54f2e8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/27/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EventDescriptor">
          <source>Provides information about an event.</source>
          <target state="translated">イベントに関する情報を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph>の名前、その属性、イベントにバインドされているコンポーネント、イベント デリゲート、デリゲートの型は、デリゲートはマルチキャストかどうかとします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> provides the following <ph id="ph2">`abstract`</ph> properties and methods:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor&gt;</ph> 次に示します<ph id="ph2">`abstract`</ph>プロパティとメソッド。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.ComponentType%2A&gt;</ph> contains the type of the component this event is declared on.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.ComponentType%2A&gt;</ph> このイベントが宣言されているコンポーネントの種類が含まれています。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.EventType%2A&gt;</ph> contains the type of delegate for the event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.EventType%2A&gt;</ph> イベントのデリゲートの型が含まれています。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.IsMulticast%2A&gt;</ph> contains a value indicating whether the event delegate is a multicast delegate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.IsMulticast%2A&gt;</ph> イベントのデリゲートはマルチキャスト デリゲート、かどうかを示す値が含まれています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A&gt;</ph> binds the event to a component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A&gt;</ph> イベントをコンポーネントにバインドします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A&gt;</ph> unbinds the delegate from the component so that the delegate no longer receives events from the component.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A&gt;</ph> デリゲートは、コンポーネントからイベントを受信しないように、コンポーネントからデリゲートをバインド解除します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>For more information about events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">イベントの詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">リフレクションに関する詳細については、トピックを参照してください。<bpt id="p1">[</bpt>リフレクション<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>The following code example is built upon the example in the <ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection&gt;</ph> class.</source>
          <target state="translated">次のコード例が例では、に基づいて構築されており、<ph id="ph1">&lt;xref:System.ComponentModel.EventDescriptorCollection&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>It prints the information (category, description, and display name) of each event on a button in a text box.</source>
          <target state="translated">テキスト ボックス内のボタンの各イベントに関する情報 (カテゴリ、説明、および表示名) を出力します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.EventDescriptor">
          <source>It requires that <ph id="ph1">`button1`</ph> and <ph id="ph2">`textbox1`</ph> have been instantiated on a form.</source>
          <target state="translated">いる必要があります<ph id="ph1">`button1`</ph>と<ph id="ph2">`textbox1`</ph>フォームでインスタンス化されています。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.EventDescriptor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that contains the name of the event and its attributes.</source>
          <target state="translated">イベントの名前とその属性を格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the name and attributes in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> 内の名前と属性を使用して、<ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> that has the name of the member and its attributes.</source>
          <target state="translated">メンバーの名前とその属性を格納している <ph id="ph1">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> array with the attributes you want to add to this event description.</source>
          <target state="translated">イベントの説明に追加する属性を格納している <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the name in the specified <ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the attributes in both the <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> and the <ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> array.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> 内の名前と、<ph id="ph2">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> および <ph id="ph3">&lt;see cref="T:System.ComponentModel.MemberDescriptor" /&gt;</ph> 配列の両方に格納されている属性を使用して、<ph id="ph4">&lt;see cref="T:System.Attribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
          <source>This constructor appends the attributes in the <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> array to the attributes in the <ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>.</source>
          <target state="translated">このコンス トラクター内の属性を追加する、<ph id="ph1">&lt;xref:System.Attribute&gt;</ph>配列内の属性を<ph id="ph2">&lt;xref:System.ComponentModel.MemberDescriptor&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>The name of the event.</source>
          <target state="translated">イベントの名前です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> that contains the event attributes.</source>
          <target state="translated">イベントの属性を格納している <ph id="ph1">&lt;see cref="T:System.Attribute" /&gt;</ph> 型の配列。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> class with the specified name and attribute array.</source>
          <target state="translated">名前と属性配列を指定して、<ph id="ph1">&lt;see cref="T:System.ComponentModel.EventDescriptor" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>A component that provides events to the delegate.</source>
          <target state="translated">デリゲートにイベントを提供するコンポーネント。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>A delegate that represents the method that handles the event.</source>
          <target state="translated">イベントを処理するメソッドを表すデリゲート。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>When overridden in a derived class, binds the event to the component.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、イベントをコンポーネントに関連付けます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>For more information about reflection, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">リフレクションに関する詳細については、トピックを参照してください。<bpt id="p1">[</bpt>リフレクション<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>For more information about delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">デリゲートの詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
          <source>When you override this method, it should add the delegate to the component's event list by invoking the appropriate <bpt id="p1">&lt;c&gt;</bpt>add_myHandler<ept id="p1">&lt;/c&gt;</ept> method.</source>
          <target state="translated">このメソッドをオーバーライドするときに、必要がありますデリゲートを追加、コンポーネントのイベントの一覧を呼び出して、適切な<bpt id="p1">&lt;c&gt;</bpt>add_myHandler<ept id="p1">&lt;/c&gt;</ept>メソッドです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>When overridden in a derived class, gets the type of component this event is bound to.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、イベントが関連付けられているコンポーネントの型を取得します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of component the event is bound to.</source>
          <target state="translated">イベントが関連付けられているコンポーネントの型を表す <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.ComponentType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">通常、このプロパティは、リフレクションを介して実装されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>When overridden in a derived class, gets the type of delegate for the event.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、イベントのデリゲートの型を取得します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that represents the type of delegate for the event.</source>
          <target state="translated">イベントのデリゲートの型を表す <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.EventType">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">通常、このプロパティは、リフレクションを介して実装されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、イベント デリゲートがマルチキャスト デリゲートかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event delegate is multicast; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">イベント デリゲートがマルチキャストの場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>Typically, this property is implemented through reflection.</source>
          <target state="translated">通常、このプロパティは、リフレクションを介して実装されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>A multicast delegate differs from a regular delegate in that it can contain references to more than just one method.</source>
          <target state="translated">マルチキャスト デリゲートは、1 つ以上のメソッドへの参照を含めることができますに通常のデリゲートとは異なります。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear.</source>
          <target state="translated">マルチキャスト デリゲートのメソッドは、表示される順序で、デリゲートが呼び出されたときに同期的に実行されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.EventDescriptor.IsMulticast">
          <source>If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller.</source>
          <target state="translated">呼び出されたメソッドのいずれかにより、例外が発生した場合、デリゲートは停止し、デリゲートの呼び出し元に例外が反映されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The component that the delegate is bound to.</source>
          <target state="translated">デリゲートが関連付けられているコンポーネント。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The delegate to unbind from the component.</source>
          <target state="translated">コンポーネントとの関連付けを解除するデリゲート。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、コンポーネントとデリゲートの関連付けを解除し、デリゲートがコンポーネントからイベントを受信しなくなるようにします。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>Typically, this method is implemented through reflection.</source>
          <target state="translated">通常、このメソッドはリフレクションを使用します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>For more information, see the topics in <bpt id="p1">[</bpt>Reflection<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>.</source>
          <target state="translated">詳細については、トピックを参照してください。<bpt id="p1">[</bpt>リフレクション<ept id="p1">](~/docs/framework/reflection-and-codedom/reflection.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>For more information about delegates, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">デリゲートの詳細については、次を参照してください。<bpt id="p1">[</bpt>処理とイベントの発生<ept id="p1">](~/docs/standard/events/index.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)">
          <source>When you override this method, it should remove the delegate from the component's event list by invoking the appropriate <bpt id="p1">&lt;c&gt;</bpt>remove_myHandler<ept id="p1">&lt;/c&gt;</ept> method.</source>
          <target state="translated">このメソッドをオーバーライドするときに、必要がありますからデリゲートを削除、コンポーネントのイベントの一覧を呼び出して、適切な<bpt id="p1">&lt;c&gt;</bpt>remove_myHandler<ept id="p1">&lt;/c&gt;</ept>メソッドです。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>