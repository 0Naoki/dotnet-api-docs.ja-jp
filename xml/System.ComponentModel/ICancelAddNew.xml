<Type Name="ICancelAddNew" FullName="System.ComponentModel.ICancelAddNew">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd2446cbe765291b3c6b7f8c8df33e2f265e2481" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36703043" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICancelAddNew" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICancelAddNew" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ICancelAddNew" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICancelAddNew" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICancelAddNew" />
  <TypeSignature Language="F#" Value="type ICancelAddNew = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6b0ce-101">コレクションに新しい項目を追加する際のトランザクション機能を追加します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b0ce-101">Adds transactional capability when adding a new item to a collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b0ce-102"><xref:System.ComponentModel.ICancelAddNew>インターフェイス、拡張性のある方法で新しい項目を追加するコレクションを有効にします。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-102">The <xref:System.ComponentModel.ICancelAddNew> interface enables a collection to add a new item in an extensible way.</span></span> <span data-ttu-id="6b0ce-103">新しい項目は、コミットまたはロールバックする、その後ことができます。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-103">The new item subsequently can be committed or rolled back.</span></span> <span data-ttu-id="6b0ce-104"><xref:System.ComponentModel.IBindingList.AddNew%2A>仮される、次の操作を介してトランザクションは、後で、アイテムを追加するコレクションのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-104">The <xref:System.ComponentModel.IBindingList.AddNew%2A> method of the collection is used to tentatively add the item, which is subsequently transacted through the following operations:</span></span>  
  
-   <span data-ttu-id="6b0ce-105"><xref:System.ComponentModel.ICancelAddNew.EndNew%2A>メソッドは保留中の追加を明示的にコミットします。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-105">The <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> method will explicitly commit the pending addition.</span></span>  
  
-   <span data-ttu-id="6b0ce-106">挿入、削除、または移動など、別のコレクションの操作を実行すると、保留中の追加は暗黙的にコミットします。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-106">Performing another collection operation, such as an insertion, removal, or move will implicitly commit the pending addition.</span></span>  
  
-   <span data-ttu-id="6b0ce-107"><xref:System.ComponentModel.ICancelAddNew.CancelNew%2A>メソッドは元に戻す保留中の追加が既にコミットされていない場合。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-107">The <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> method will roll back the pending addition if it has not already been committed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6b0ce-108">、Windows フォームの複合データ バインディングなど、一部のシナリオで、コレクションが表示される可能性があります<xref:System.ComponentModel.ICancelAddNew.CancelNew%2A>または<xref:System.ComponentModel.ICancelAddNew.EndNew%2A>新しく追加された項目以外のアイテムを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-108">In some scenarios, such as Windows Forms complex data binding, the collection may receive <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> or <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> calls for items other than the newly added item.</span></span> <span data-ttu-id="6b0ce-109">(各項目は通常、データ ビュー内の行) です。これらの呼び出しを無視します。キャンセルまたはその項目のインデックスが指定された場合のみ、新しい項目をコミットします。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-109">(Each item is typically a row in a data view.) Ignore these calls; cancel or commit the new item only when that item's index is specified.</span></span>  
  
 <span data-ttu-id="6b0ce-110">項目をデータ バインドされたコレクションのトランザクションの追加を許可する 2 つのモデルがあります。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-110">There are two models that allow transactional addition of an item to a data-bound collection:</span></span>  
  
-   <span data-ttu-id="6b0ce-111">古いモデルを実装するコレクションに直接依存、<xref:System.ComponentModel.IBindingList>インターフェイスとは、データ バインドを使用して直接、<xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType>クラスです。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-111">The older model relies directly on a collection that implements the <xref:System.ComponentModel.IBindingList> interface and is data-bound directly using the <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="6b0ce-112"><xref:System.Windows.Forms.CurrencyManager.AddNew%2A>、 <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>、および<xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>のメソッド、<xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType>クラスは新しい項目を追加するためのトランザクションのサポートを担当します。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-112">The <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, and <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> methods of the <xref:System.Windows.Forms.CurrencyManager?displayProperty=nameWithType> class are responsible for transactional support for adding new items.</span></span> <span data-ttu-id="6b0ce-113">しかし、この機能を使用してトランザクション動作をサポートするアイテムに依存、<xref:System.ComponentModel.IEditableObject>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-113">However, this functionality depends upon the items supporting transactional behavior through the <xref:System.ComponentModel.IEditableObject> interface.</span></span> <span data-ttu-id="6b0ce-114">項目が後続の呼び出しに関係なく、一覧に常に追加する項目はこのインターフェイスをサポートしていない場合<xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>です。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-114">If the items do not support this interface, the item will always be added to the list, regardless of subsequent calls to <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>.</span></span>  
  
-   <span data-ttu-id="6b0ce-115">新しいモデルが、ジェネリックをより堅牢なデータ バインディング シナリオをサポートしている<xref:System.ComponentModel.BindingList%601>クラスを実装する、<xref:System.ComponentModel.IBindingList>と<xref:System.ComponentModel.ICancelAddNew>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-115">The newer model supports a more robust data-binding scenario through the generic <xref:System.ComponentModel.BindingList%601> class, which implements the <xref:System.ComponentModel.IBindingList> and <xref:System.ComponentModel.ICancelAddNew> interfaces.</span></span> <span data-ttu-id="6b0ce-116">ここでは、トランザクションのサポートで管理されて、<xref:System.ComponentModel.BindingList%601>直接コレクション。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-116">In this case, the transactional support is managed by the <xref:System.ComponentModel.BindingList%601> collection directly.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.IBindingList" />
    <altmember cref="T:System.Windows.Forms.CurrencyManager" />
    <altmember cref="T:System.ComponentModel.IEditableObject" />
    <altmember cref="T:System.ComponentModel.BindingList`1" />
  </Docs>
  <Members>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : int -&gt; unit" Usage="iCancelAddNew.CancelNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">
          <span data-ttu-id="6b0ce-117">コレクションに既に追加されている項目のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b0ce-117">The index of the item that was previously added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b0ce-118">保留中の新しい項目をコレクションから破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b0ce-118">Discards a pending new item from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b0ce-119"><xref:System.ComponentModel.ICancelAddNew.CancelNew%2A>メソッドは保留中の追加をロールバック (<xref:System.ComponentModel.IBindingList.AddNew%2A>) 位置にあるコレクションに追加したアイテムの`itemIndex`します。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-119">The <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> method rolls back a pending addition (<xref:System.ComponentModel.IBindingList.AddNew%2A>) of an item previously added to the collection at position `itemIndex`.</span></span> <span data-ttu-id="6b0ce-120">複数の新しい項目が同時に保留されているために、インデックス パラメーターは必要です。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-120">The index parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.CancelCurrentEdit" />
        <altmember cref="T:System.ComponentModel.IEditableObject" />
      </Docs>
    </Member>
    <Member MemberName="EndNew">
      <MemberSignature Language="C#" Value="public void EndNew (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndNew(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ICancelAddNew.EndNew(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndNew (itemIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndNew(int itemIndex);" />
      <MemberSignature Language="F#" Value="abstract member EndNew : int -&gt; unit" Usage="iCancelAddNew.EndNew itemIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">
          <span data-ttu-id="6b0ce-121">コレクションに既に追加されている項目のインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b0ce-121">The index of the item that was previously added to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6b0ce-122">保留中の新しい項目をコレクションにコミットします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b0ce-122">Commits a pending new item to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b0ce-123"><xref:System.ComponentModel.ICancelAddNew.EndNew%2A>コミットの保留中の追加 (<xref:System.ComponentModel.IBindingList.AddNew%2A>) 位置にあるコレクションに追加したアイテムの`itemIndex`します。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-123">The <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> commits a pending addition (<xref:System.ComponentModel.IBindingList.AddNew%2A>) of an item previously added to the collection at position `itemIndex`.</span></span> <span data-ttu-id="6b0ce-124">複数の新しい項目が同時に保留されているために、インデックス パラメーターは必要です。</span><span class="sxs-lookup"><span data-stu-id="6b0ce-124">The index parameter is necessary because several new items can be simultaneously pending.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.CurrencyManager.EndCurrentEdit" />
      </Docs>
    </Member>
  </Members>
</Type>