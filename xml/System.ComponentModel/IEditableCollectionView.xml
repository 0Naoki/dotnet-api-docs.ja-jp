<Type Name="IEditableCollectionView" FullName="System.ComponentModel.IEditableCollectionView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d11887074c54a7af85492421fa8f02341774506" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37692882" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEditableCollectionView" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEditableCollectionView" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IEditableCollectionView" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEditableCollectionView" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditableCollectionView" />
  <TypeSignature Language="F#" Value="type IEditableCollectionView = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Data.CollectionView" /> が実装するメソッドとプロパティを定義して、コレクションに編集機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクション ビューを実装すると、<xref:System.ComponentModel.IEditableCollectionView>インターフェイスを直接変更できます基になるコレクション、メソッドとプロパティを使用して、に対する変更を許可する場合を<xref:System.ComponentModel.IEditableCollectionView>コレクションの種類に関係なく、公開します。  
  
 種類<xref:System.Windows.Controls.ItemCollection>、 <xref:System.Windows.Data.BindingListCollectionView>、および<xref:System.Windows.Data.ListCollectionView>が付属している型[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]から継承した<xref:System.Windows.Data.CollectionView>します。  これらの型を実装も、<xref:System.ComponentModel.IEditableCollectionView>ので、これらの型のいずれかを使用するコレクションを編集することができます。  <xref:System.Windows.Controls.ItemCollection>、具体的には、多くの場合、ため、<xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=nameWithType>プロパティは、<xref:System.Windows.Controls.ItemCollection>します。  
  
   
  
## Examples  
 次の例で定義されているメソッドを使用してコレクションに項目を追加する方法を示しています。<xref:System.ComponentModel.IEditableCollectionView>します。  このアプリケーションは、販売品目の一覧を表示し、ユーザーの追加、編集、または項目を削除するオプションを提供します。  ユーザーを追加またはアイテムが編集、ときにフォームが新しい項目を入力するユーザーに求めます。  ユーザーは、フォームを送信する、項目がコレクションにコミットします。  ユーザーは、フォームをキャンセルした場合、項目は破棄されます。 サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNew">
      <MemberSignature Language="C#" Value="public object AddNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.AddNew" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNew () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ AddNew();" />
      <MemberSignature Language="F#" Value="abstract member AddNew : unit -&gt; obj" Usage="iEditableCollectionView.AddNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しい項目をコレクションに追加します。</summary>
        <returns>コレクションに追加された新しい項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す<xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>追加トランザクションを開始します。  呼び出す必要があります<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>または<xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>追加トランザクションを終了します。 新しい項目がコレクション ビューに常に表示されます。 フィルター処理、並べ替え、またはグループ化されている適用を新しいビューが適用される項目<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>が呼び出されます。  
  
   
  
## Examples  
 次の例では、作成、<xref:System.Windows.Window>新しい項目を追加するユーザーを要求します。  呼び出して<xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>新しいオブジェクトと設定を作成する、<xref:System.Windows.FrameworkElement.DataContext%2A>の<xref:System.Windows.Window>そのオブジェクトにします。 サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAddNew">
      <MemberSignature Language="C#" Value="public bool CanAddNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanAddNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanAddNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanAddNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanAddNew : bool" Usage="System.ComponentModel.IEditableCollectionView.CanAddNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しい項目をコレクションに追加できるかどうかを示す値を取得します。</summary>
        <value>新しい項目をコレクションに追加できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView>次に該当する場合、新しい項目を追加できます。  
  
-   項目は、基になるコレクションに追加できます。  たとえば、コレクションが読み取り専用<xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A>は`false`します。  
  
-   <xref:System.ComponentModel.IEditableCollectionView>コレクション内にある型のオブジェクトを作成できます。  たとえば、コレクションの型の場合<xref:System.Collections.ObjectModel.ObservableCollection%601>、<xref:System.ComponentModel.IEditableCollectionView>型のオブジェクトを作成できる必要があります`T`します。  
  
   
  
## Examples  
 次の例では、項目をコレクションに追加できるかどうかを確認します。  場合<xref:System.ComponentModel.IEditableCollectionView.CanAddNew%2A>は`false`例は、項目を追加できないことをユーザーに通知します。  それ以外の場合、新しい項目を追加するユーザーに求めるフォームが表示されます。 サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCancelEdit">
      <MemberSignature Language="C#" Value="public bool CanCancelEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCancelEdit" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanCancelEdit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCancelEdit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCancelEdit : bool" Usage="System.ComponentModel.IEditableCollectionView.CanCancelEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できるかどうかを示す値を取得します。</summary>
        <value>コレクション ビューが保留中の変更を破棄して、編集されたオブジェクトの元の値を復元できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> `true`ビューが現在編集済みの項目を「保留中の変更」の概念をサポートするかどうか。   たとえば、コレクション ビューが返す可能性があります`true`編集済みの項目が実装されている場合<xref:System.ComponentModel.IEditableObject>、またはビューがロールに使用できる項目の状態に関する情報を持つかどうかは、変更をバックアップします。 <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> `false`場合は、ビューには、オブジェクトに対する変更が元に戻すことはできません。  その場合は、呼び出す<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>ビュー、状態の編集を終了し、編集されたオブジェクトでの変更を元に戻すロジックを提供します。  
  
   
  
## Examples  
 次の例では、取得<xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>を呼び出す前に編集済みの項目の元の値を復元できるかどうかを確認する<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>します。  値を復元できない場合は、そのためには追加のロジックを指定してください。  例では、呼び出すときに、値は復元可能性がある場合<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>します。   サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="abstract member CancelEdit : unit -&gt; unit" Usage="iEditableCollectionView.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>編集トランザクションを終了し、可能な場合は、項目の元の値を復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> 設定<xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A>に`null`コレクション ビューで状態の編集を終了するとします。  場合<xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>は`true`、<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>も編集されたオブジェクトの元の値を復元します。  
  
   
  
## Examples  
 次の例では、取得<xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>を呼び出す前に編集済みの項目の元の値を復元できるかどうかを確認する<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>します。  値を復元できない場合は、そのためには追加のロジックを指定してください。  例では、呼び出すときに、値は復元可能性がある場合<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>します。 サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[EditingCollectionsSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelNew">
      <MemberSignature Language="C#" Value="public void CancelNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CancelNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelNew();" />
      <MemberSignature Language="F#" Value="abstract member CancelNew : unit -&gt; unit" Usage="iEditableCollectionView.CancelNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>追加トランザクションを終了し、保留中の新しい項目を破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、新しい項目を追加するユーザーに求めるフォームが表示されます。  例では、ユーザーは、フォームを送信する、<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>コレクションに項目を追加します。  例では、ユーザーがフォームを取り消した場合<xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>項目を破棄します。 サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemove">
      <MemberSignature Language="C#" Value="public bool CanRemove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRemove" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRemove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRemove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRemove : bool" Usage="System.ComponentModel.IEditableCollectionView.CanRemove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションから項目を削除できるかどうかを示す値を取得します。</summary>
        <value>コレクションから項目を削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> `false`基になるコレクションが読み取り専用の場合。  
  
   
  
## Examples  
 次の例では<xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A>をコレクションから項目を削除できるかどうかを確認します。  例では、項目が削除できる場合はユーザーがアクションと呼び出しを確認するメッセージが表示されます<xref:System.ComponentModel.IEditableCollectionView.Remove%2A>場合は、ユーザーがクリックした**はい**します。 サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public void CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitEdit();" />
      <MemberSignature Language="F#" Value="abstract member CommitEdit : unit -&gt; unit" Usage="iEditableCollectionView.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>編集トランザクションを終了し、保留中の変更を保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、既存の項目を編集するユーザーに求めるフォームを作成します。  例では、ユーザーは、フォームを送信する、<xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A>をコレクションに変更を保存します。  例では、ユーザーがフォームを取り消した場合<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>変更を破棄します。 サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitNew">
      <MemberSignature Language="C#" Value="public void CommitNew ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommitNew() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.CommitNew" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommitNew ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommitNew();" />
      <MemberSignature Language="F#" Value="abstract member CommitNew : unit -&gt; unit" Usage="iEditableCollectionView.CommitNew " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>追加トランザクションを終了し、保留中の新しい項目を保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フィルター処理、並べ替え、またはグループ化されている適用、<xref:System.Windows.Data.CollectionView>新しいに適用される項目<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>が呼び出されます。  
  
   
  
## Examples  
 次の例では、新しい項目を追加するユーザーに求めるフォームが表示されます。  例では、ユーザーは、フォームを送信する、<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>コレクションに項目を追加します。  例では、ユーザーがフォームを取り消した場合<xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>項目を破棄します。 サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#AddItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#additem)]
 [!code-vb[EditingCollectionsSnippets#AddItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#additem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentAddItem">
      <MemberSignature Language="C#" Value="public object CurrentAddItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentAddItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentAddItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentAddItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentAddItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentAddItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の追加トランザクション処理中に追加される項目を取得します。</summary>
        <value>
          <see cref="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" /> が <see langword="true" /> の場合は追加される項目。それ以外の場合は <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentEditItem">
      <MemberSignature Language="C#" Value="public object CurrentEditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CurrentEditItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentEditItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CurrentEditItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentEditItem : obj" Usage="System.ComponentModel.IEditableCollectionView.CurrentEditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集されているコレクション内の項目を取得します。</summary>
        <value>
          <see cref="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" /> が <see langword="true" /> である場合は、編集されているコレクション内の項目。それ以外の場合は、<see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public void EditItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EditItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EditItem (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EditItem(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member EditItem : obj -&gt; unit" Usage="iEditableCollectionView.EditItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">編集する項目。</param>
        <summary>指定した項目の編集トランザクションを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、既存の項目を編集するユーザーに求めるフォームを作成します。  ユーザーは、フォームを送信する、変更がコレクションにコミットされます。  ユーザーは、フォームをキャンセルした場合、変更は破棄されます。 サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#EditItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#edititem)]
 [!code-vb[EditingCollectionsSnippets#EditItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#edititem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddingNew">
      <MemberSignature Language="C#" Value="public bool IsAddingNew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAddingNew" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAddingNew As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAddingNew { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAddingNew : bool" Usage="System.ComponentModel.IEditableCollectionView.IsAddingNew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>追加トランザクションが実行中かどうかを示す値を取得します。</summary>
        <value>追加トランザクションが実行中の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すことによって、追加のトランザクションを開始する<xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>と呼び出すことによって、追加のトランザクションを終了<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>または<xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditingItem">
      <MemberSignature Language="C#" Value="public bool IsEditingItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditingItem" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditingItem As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditingItem { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditingItem : bool" Usage="System.ComponentModel.IEditableCollectionView.IsEditingItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集トランザクションが実行中かどうかを示す値を取得します。</summary>
        <value>編集トランザクションが実行中である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すことによって編集トランザクションを開始する<xref:System.ComponentModel.IEditableCollectionView.EditItem%2A>呼び出すことによって、トランザクションを終了し、<xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A>または<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItemPlaceholderPosition">
      <MemberSignature Language="C#" Value="public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property NewItemPlaceholderPosition As NewItemPlaceholderPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::NewItemPlaceholderPosition NewItemPlaceholderPosition { System::ComponentModel::NewItemPlaceholderPosition get(); void set(System::ComponentModel::NewItemPlaceholderPosition value); };" />
      <MemberSignature Language="F#" Value="member this.NewItemPlaceholderPosition : System.ComponentModel.NewItemPlaceholderPosition with get, set" Usage="System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.NewItemPlaceholderPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション ビューにある新しい項目のプレースホルダーの位置を取得または設定します。</summary>
        <value>コレクション ビューにある新しい項目のプレースホルダーの位置を指定する列挙値の 1 つ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iEditableCollectionView.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">削除する項目。</param>
        <summary>指定した項目をコレクションから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`item`、コレクション内にない<xref:System.ComponentModel.IEditableCollectionView.Remove%2A>何も行われません。  
  
   
  
## Examples  
 次の例では<xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A>をコレクションから項目を削除できるかどうかを確認します。  例では、項目が削除できる場合はユーザーがアクションと呼び出しを確認するメッセージが表示されます<xref:System.ComponentModel.IEditableCollectionView.Remove%2A>場合は、ユーザーがクリックした**はい**します。 サンプル全体については、次を参照してください。 [IEditableCollectionView サンプルを使用してコレクションを変更する](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/EditingCollections)します。  
  
 [!code-csharp[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/csharp/VS_Snippets_Wpf/EditingCollectionsSnippets/CSharp/Window1.xaml.cs#removeitem)]
 [!code-vb[EditingCollectionsSnippets#RemoveItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EditingCollectionsSnippets/visualbasic/window1.xaml.vb#removeitem)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit" Usage="iEditableCollectionView.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">削除する項目の位置。</param>
        <summary>コレクション内の指定した位置にある項目を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `index` コレクションではなく、コレクション ビューに対する相対パスです。  たとえば、10 個のアイテムと、ビュー、コレクションがある場合は、 <xref:System.ComponentModel.ICollectionView.Filter%2A> 7 個の項目の表示、有効な値のように`index`は 0 ~ 6 です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> が 0 未満か、コレクション ビューに含まれる項目数を上回っています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>