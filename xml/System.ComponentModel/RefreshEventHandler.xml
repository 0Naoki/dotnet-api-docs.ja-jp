<Type Name="RefreshEventHandler" FullName="System.ComponentModel.RefreshEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c6071b0186ef4fd2d5e20e810ede30524fdaec61" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32034808" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RefreshEventHandler(RefreshEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RefreshEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.RefreshEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RefreshEventHandler(e As RefreshEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RefreshEventHandler(RefreshEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="e" Type="System.ComponentModel.RefreshEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="e">
      <span data-ttu-id="617a9-101">変更されたコンポーネントまたは <see cref="T:System.ComponentModel.RefreshEventArgs" /> を格納する <see cref="T:System.Type" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="617a9-101">A <see cref="T:System.ComponentModel.RefreshEventArgs" /> that contains the component or <see cref="T:System.Type" /> that changed.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="617a9-102">デザイン時に <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" /> またはコンポーネントが変更された場合に発生する <see cref="T:System.Type" /> イベントを処理するメソッドを表します</span>
      <span class="sxs-lookup">
        <span data-stu-id="617a9-102">Represents the method that handles the <see cref="E:System.ComponentModel.TypeDescriptor.Refreshed" /> event raised when a <see cref="T:System.Type" /> or component is changed during design time.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="617a9-103"><xref:System.ComponentModel.RefreshEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="617a9-103">When you create a <xref:System.ComponentModel.RefreshEventHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="617a9-104">イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。</span><span class="sxs-lookup"><span data-stu-id="617a9-104">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="617a9-105">デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="617a9-105">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="617a9-106">イベント ハンドラー デリゲートの詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="617a9-106">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="617a9-107">次の例では、使用する方法、<xref:System.ComponentModel.RefreshEventHandler>を処理するデリゲート、<xref:System.ComponentModel.TypeDescriptor.Refreshed>イベントの種類またはコンポーネントが変更されるとします。</span><span class="sxs-lookup"><span data-stu-id="617a9-107">The following sample demonstrates how to use a <xref:System.ComponentModel.RefreshEventHandler> delegate to handle the <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when a type or component changes.</span></span> <span data-ttu-id="617a9-108">コードでは、`OnRefreshed`イベントがイベントを処理し、変更しているコンポーネントが表示されます。</span><span class="sxs-lookup"><span data-stu-id="617a9-108">In the code, the `OnRefreshed` event handles the event and displays the component being changed.</span></span>  
  
 <span data-ttu-id="617a9-109">コードでは、`TextBox`コントロールがフォームに既に配置されています。</span><span class="sxs-lookup"><span data-stu-id="617a9-109">The code assumes that a `TextBox` control is already sited on the form.</span></span>  
  
 [!code-cpp[RefreshEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RefreshEventHandler/CPP/refreshevent.cpp#1)]
 [!code-csharp[RefreshEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RefreshEventHandler/CS/refreshevent.cs#1)]
 [!code-vb[RefreshEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RefreshEventHandler/VB/refreshevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.RefreshEventArgs" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
  </Docs>
</Type>