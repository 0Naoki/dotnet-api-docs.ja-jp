<Type Name="PropertyChangedEventManager" FullName="System.ComponentModel.PropertyChangedEventManager">
  <TypeSignature Language="C#" Value="public class PropertyChangedEventManager : System.Windows.WeakEventManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyChangedEventManager extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyChangedEventManager" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyChangedEventManager&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyChangedEventManager : System::Windows::WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="07164-101"><see cref="T:System.Windows.WeakEventManager" /> を実装することにより、"弱いイベント リスナー" パターンを使用して <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントのリスナーを関連付けられるようにします。</span><span class="sxs-lookup"><span data-stu-id="07164-101">Provides a <see cref="T:System.Windows.WeakEventManager" /> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07164-102">このパターンでリスナーをするために、リスナー オブジェクトを実装する必要があります<xref:System.Windows.IWeakEventListener>です。</span><span class="sxs-lookup"><span data-stu-id="07164-102">In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>.</span></span> <span data-ttu-id="07164-103">実装する必要はありません<xref:System.Windows.IWeakEventListener>イベントのソースであるクラスにします。</span><span class="sxs-lookup"><span data-stu-id="07164-103">You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.IWeakEventListener" />
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(class System.ComponentModel.INotifyPropertyChanged source, class System.EventHandler`1&lt;class System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.AddHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As INotifyPropertyChanged, handler As EventHandler(Of PropertyChangedEventArgs), propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(System::ComponentModel::INotifyPropertyChanged ^ source, EventHandler&lt;System::ComponentModel::PropertyChangedEventArgs ^&gt; ^ handler, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt;" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="07164-104"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントを発生させるソース オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07164-104">The source object that the raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></param>
        <param name="handler"><span data-ttu-id="07164-105"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントを処理するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="07164-105">The delegate that handles the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></param>
        <param name="propertyName"><span data-ttu-id="07164-106">変更をリッスンする <c>source</c> に存在するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="07164-106">The name of the property that exists on <c>source</c> upon which to listen for changes.</span></span> <span data-ttu-id="07164-107"><see cref="F:System.String.Empty" /> を設定し、"任意のプロパティ" を示します。</span><span class="sxs-lookup"><span data-stu-id="07164-107">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span></span></param>
        <summary><span data-ttu-id="07164-108">指定されたソースで指定されたプロパティの <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントが発生したときに呼び出されるイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="07164-108">Adds the specified event handler, which is called when specified source raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event for the specified property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07164-109">定期受信に使用するイベント ハンドラーを指定するには、このメソッドを使用して、<xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>イベント.</span><span class="sxs-lookup"><span data-stu-id="07164-109">Use this method to specify the event handler you want to use to subscribe to the <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> event..</span></span>  <span data-ttu-id="07164-110">リスナー オブジェクトを実装する必要はありませんこのメソッドを使用するときに、<xref:System.Windows.IWeakEventListener>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="07164-110">When you use this method, your listener object does not need to implement the <xref:System.Windows.IWeakEventListener> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="07164-111"><paramref name="handler" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="07164-111"><paramref name="handler" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="07164-112">複数のメソッドが <paramref name="handler" /> に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="07164-112">More than one method is associated with <paramref name="handler" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddListener">
      <MemberSignature Language="C#" Value="public static void AddListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddListener(class System.ComponentModel.INotifyPropertyChanged source, class System.Windows.IWeakEventListener listener, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddListener (source As INotifyPropertyChanged, listener As IWeakEventListener, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddListener(System::ComponentModel::INotifyPropertyChanged ^ source, System::Windows::IWeakEventListener ^ listener, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="07164-113">イベントを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07164-113">The object with the event.</span></span></param>
        <param name="listener"><span data-ttu-id="07164-114">リスナーとして追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07164-114">The object to add as a listener.</span></span></param>
        <param name="propertyName"><span data-ttu-id="07164-115">変更をリッスンする <c>source</c> に存在するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="07164-115">The name of the property that exists on <c>source</c> upon which to listen for changes.</span></span> <span data-ttu-id="07164-116"><see cref="F:System.String.Empty" /> を設定し、"任意のプロパティ" を示します。</span><span class="sxs-lookup"><span data-stu-id="07164-116">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span></span></param>
        <summary><span data-ttu-id="07164-117">指定したリスナーを、指定したソースのリスナーのリストに追加します。</span><span class="sxs-lookup"><span data-stu-id="07164-117">Adds the specified listener to the list of listeners on the specified source.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="07164-118"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントのリスナーを格納する新しいオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="07164-118">Returns a new object to contain listeners to the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></summary>
        <returns><span data-ttu-id="07164-119"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントのリスナーを格納する新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07164-119">A new object to contain listeners to the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="protected override bool Purge (object source, object data, bool purgeAll);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool Purge(object source, object data, bool purgeAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.Purge(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Purge (source As Object, data As Object, purgeAll As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool Purge(System::Object ^ source, System::Object ^ data, bool purgeAll);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="purgeAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="07164-120">すべてのリスナーを削除するソース オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07164-120">Source object to remove all listeners from.</span></span></param>
        <param name="data"><span data-ttu-id="07164-121">削除するデータ。</span><span class="sxs-lookup"><span data-stu-id="07164-121">The data to purge.</span></span> <span data-ttu-id="07164-122">これは <see cref="T:System.Collections.Specialized.HybridDictionary" /> であることが求められます。</span><span class="sxs-lookup"><span data-stu-id="07164-122">This is expected to be a <see cref="T:System.Collections.Specialized.HybridDictionary" />.</span></span></param>
        <param name="purgeAll"><span data-ttu-id="07164-123">リッスンを停止し、すべてのデータを完全に削除する場合は <see langword="true" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="07164-123">Set to <see langword="true" /> to stop listening and to completely remove all data.</span></span></param>
        <summary><span data-ttu-id="07164-124">指定したソースのデータから、アクティブでなくなったリスナーを削除します。</span><span class="sxs-lookup"><span data-stu-id="07164-124">Removes listeners that are no longer active from the data for the provided source.</span></span></summary>
        <returns>
          <span data-ttu-id="07164-125">一部のエントリが削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="07164-125"><see langword="true" /> if some entries were removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (System.ComponentModel.INotifyPropertyChanged source, EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(class System.ComponentModel.INotifyPropertyChanged source, class System.EventHandler`1&lt;class System.ComponentModel.PropertyChangedEventArgs&gt; handler, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.RemoveHandler(System.ComponentModel.INotifyPropertyChanged,System.EventHandler{System.ComponentModel.PropertyChangedEventArgs},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As INotifyPropertyChanged, handler As EventHandler(Of PropertyChangedEventArgs), propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(System::ComponentModel::INotifyPropertyChanged ^ source, EventHandler&lt;System::ComponentModel::PropertyChangedEventArgs ^&gt; ^ handler, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.ComponentModel.PropertyChangedEventArgs&gt;" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="07164-126"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントを発生させるソース オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07164-126">The source object that the raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></param>
        <param name="handler"><span data-ttu-id="07164-127"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントを処理するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="07164-127">The delegate that handles the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span></span></param>
        <param name="propertyName"><span data-ttu-id="07164-128">変更のリッスンを停止する <c>source</c> に存在するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="07164-128">The name of the property that exists on <c>source</c> upon which to stop listening for changes.</span></span> <span data-ttu-id="07164-129"><see cref="F:System.String.Empty" /> を設定し、"任意のプロパティ" を示します。</span><span class="sxs-lookup"><span data-stu-id="07164-129">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span></span></param>
        <summary><span data-ttu-id="07164-130">指定したソースから、指定したイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="07164-130">Removes the specified event handler from the specified source.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="07164-131"><paramref name="handler" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="07164-131"><paramref name="handler" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="07164-132">複数のメソッドが <paramref name="handler" /> に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="07164-132">More than one method is associated with <paramref name="handler" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveListener">
      <MemberSignature Language="C#" Value="public static void RemoveListener (System.ComponentModel.INotifyPropertyChanged source, System.Windows.IWeakEventListener listener, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveListener(class System.ComponentModel.INotifyPropertyChanged source, class System.Windows.IWeakEventListener listener, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveListener (source As INotifyPropertyChanged, listener As IWeakEventListener, propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveListener(System::ComponentModel::INotifyPropertyChanged ^ source, System::Windows::IWeakEventListener ^ listener, System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ComponentModel.INotifyPropertyChanged" />
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="07164-133">リスナーを削除するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07164-133">The object to remove the listener from.</span></span></param>
        <param name="listener"><span data-ttu-id="07164-134">削除するリスナー。</span><span class="sxs-lookup"><span data-stu-id="07164-134">The listener to remove.</span></span></param>
        <param name="propertyName"><span data-ttu-id="07164-135">変更のリッスンを停止する <c>source</c> に存在するプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="07164-135">The name of the property that exists on <c>source</c> upon which to stop listening for changes.</span></span> <span data-ttu-id="07164-136"><see cref="F:System.String.Empty" /> を設定し、"任意のプロパティ" を示します。</span><span class="sxs-lookup"><span data-stu-id="07164-136">Set to <see cref="F:System.String.Empty" /> to indicate "any property".</span></span></param>
        <summary><span data-ttu-id="07164-137">指定したリスナーを、指定したソースのリスナーのリストから削除します。</span><span class="sxs-lookup"><span data-stu-id="07164-137">Removes the specified listener from the list of listeners on the provided source.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="07164-138"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> のリッスンを開始するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07164-138">The object on which to start listening for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span></span></param>
        <summary><span data-ttu-id="07164-139">指定したソースで <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントのリッスンを開始します。</span><span class="sxs-lookup"><span data-stu-id="07164-139">Begins listening for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event on the provided source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07164-140">これは、プロパティが指定されていませんソース上のすべてのプロパティには、イベント マネージャーが開始されると、<xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged>通知を有効にします。</span><span class="sxs-lookup"><span data-stu-id="07164-140">This does not specify a property; once the event manager is started, all properties on the source will have <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> notification enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyChangedEventManager.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="07164-141"><see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> のリッスンを停止するソース オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="07164-141">The source object on which to stop listening for <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span></span></param>
        <summary><span data-ttu-id="07164-142">指定したソースで <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> イベントのリッスンを停止します。</span><span class="sxs-lookup"><span data-stu-id="07164-142">Stops listening for the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event on the provided source.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.IWeakEventListener" />
      </Docs>
    </Member>
  </Members>
</Type>