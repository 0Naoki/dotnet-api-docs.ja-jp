<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6c003194b802b7addceef5c3f5709f3236d0f3e6" /><Meta Name="ms.sourcegitcommit" Value="bc24a3ba616ee1df8b858f9400cae4f058ea3a7e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="06/19/2019" /><Meta Name="ms.locfileid" Value="67242163" /></Metadata><TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ExportAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>型、プロパティ、フィールド、またはメソッドが特定のエクスポートを提供することを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性付きプログラミング モデルで、<xref:System.ComponentModel.Composition.ExportAttribute>宣言の一部をエクスポートするか、合成コンテナー、特定のコントラクトを満たすオブジェクトを提供します。 コントラクトに一致するインポートに関する部分は、構成時に、エクスポートされたオブジェクトで埋められたこれらの依存関係があります。  
  
 <xref:System.ComponentModel.Composition.ExportAttribute>クラス全体、またはプロパティのいずれかのフィールド、またはクラスのメソッドを装飾することができます。 クラス全体が装飾されている場合、クラスのインスタンスは、エクスポートされたオブジェクトです。 クラスのメンバーを装飾すると、エクスポートされたオブジェクトが修飾されたメンバーの値になります。  
  
 コントラクトが一致するかどうかは、主に、コントラクト名とコントラクトの型によって決まります。 詳細については、「<xref:System.ComponentModel.Composition.ImportAttribute>」を参照してください。  
  
   
  
## Examples  
 次の例では、3 つのクラスで修飾された、<xref:System.ComponentModel.Composition.ExportAttribute>とそれに一致する次の 3 つのインポート。  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/6c61b4ec-c6df-4651-80f1-4854f8b14dde">属性付きプログラミング モデルの概要</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.ComponentModel.Composition.ExportAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.ComponentModel.Composition.ExportAttribute" /> クラスの新しいインスタンスを初期化して、この属性でマークされた型またはメンバーを既定のコントラクト名でエクスポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のコントラクト名は、呼び出しの結果、<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>メソッド、プロパティまたはフィールドの種類、またはこの属性でマークされている型。  
  
 この属性でマークされているメソッドを使用してコントラクト名または型を指定する必要があります<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>または<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>します。  
  
 コントラクト名の比較を使用して、<xref:System.StringComparer.Ordinal%2A>プロパティを区別する、非言語的な比較を実行します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">この属性でマークされた型またはメンバーをエクスポートするために使用されるコントラクト名。<see langword="null" /> または空の文字列 ("") を指定すると、既定のコントラクト名が使用されます。</param>
        <summary><see cref="T:System.ComponentModel.Composition.ExportAttribute" /> クラスの新しいインスタンスを初期化して、この属性でマークされた型またはメンバーを指定されたコントラクト名でエクスポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定のコントラクト名は、呼び出しの結果、<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>メソッド、プロパティまたはフィールドの種類、またはこの属性でこれがマークされている型。  
  
 この属性でマークされているメソッドを使用してコントラクト名または型を指定する必要があります<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>または<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>します。  
  
 コントラクト名の比較を使用して、<xref:System.StringComparer.Ordinal%2A>プロパティを区別する、非言語的な比較を実行します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">この属性でマークされた型またはメンバーをエクスポートするために使用されるコントラクト名の派生元の型。<see langword="null" /> を指定すると、既定のコントラクト名が使用されます。</param>
        <summary><see cref="T:System.ComponentModel.Composition.ExportAttribute" /> クラスの新しいインスタンスを初期化して、この属性でマークされた型またはメンバーを、指定された型から派生したコントラクト名でエクスポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントラクト名は、呼び出しの結果、<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>メソッド`contractType`します。  
  
 既定のコントラクト名は、呼び出しの結果、<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>メソッド、プロパティまたはフィールドの種類、またはこの属性でマークされている型。  
  
 この属性でマークされているメソッドを使用してコントラクト名または型を指定する必要があります<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>または<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>します。  
  
 コントラクト名の比較を使用して、<xref:System.StringComparer.Ordinal%2A>プロパティを区別する、非言語的な比較を実行します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.ExportAttribute : string * Type -&gt; System.ComponentModel.Composition.ExportAttribute" Usage="new System.ComponentModel.Composition.ExportAttribute (contractName, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">この属性でマークされた型またはメンバーをエクスポートするために使用されるコントラクト名。<see langword="null" /> または空の文字列 ("") を指定すると、既定のコントラクト名が使用されます。</param>
        <param name="contractType">エクスポートする型。</param>
        <summary><see cref="T:System.ComponentModel.Composition.ExportAttribute" /> クラスの新しいインスタンスを初期化して、指定された型を指定されたコントラクト名でエクスポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

既定のコントラクト名は、呼び出しの結果<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)?displayProperty=nameWithType>これが、この属性でマークされたプロパティまたはフィールドの入力、または型そのものにします。 
                
使用して、非言語的な比較を使用して、コントラクト名を比較<xref:System.StringComparer.Ordinal?displayProperty=nameWithType>します。
                    
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この属性でマークされた型またはメンバーをエクスポートするために使用されるコントラクト名を取得します。</summary>
        <value>この属性でマークされた型またはメンバーをエクスポートするために使用されるコントラクト名。 既定値は、空の文字列 ("") です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この属性がアタッチされたメンバーでエクスポートされるコントラクトの型を取得します。</summary>
        <value>提供されるエクスポートの型。 既定値は <see langword="null" /> です。これは、このエクスポートがアタッチされたメンバーで型を調べることにより、型が取得されることを意味します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>