<Type Name="X509Certificate2" FullName="System.Security.Cryptography.X509Certificates.X509Certificate2">
  <TypeSignature Language="C#" Value="public class X509Certificate2 : System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit X509Certificate2 extends System.Security.Cryptography.X509Certificates.X509Certificate" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />
  <TypeSignature Language="VB.NET" Value="Public Class X509Certificate2&#xA;Inherits X509Certificate" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509Certificate2 : System::Security::Cryptography::X509Certificates::X509Certificate" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.X509Certificates.X509Certificate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7d38d-101">X.509 証明書を表します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-101">Represents an X.509 certificate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-102">X.509 構造体は、作業グループ International Organization for Standardization (ISO) に由来します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-102">The X.509 structure originated in the International Organization for Standardization (ISO) working groups.</span></span> <span data-ttu-id="7d38d-103">さまざまな種類の id、資格、および所有者の属性 (アクセス許可、年齢、性別、場所、属しているなど) を含む情報を表すため、この構造体を使用できます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-103">This structure can be used to represent various types of information including identity, entitlement, and holder attributes (permissions, age, sex, location, affiliation, and so forth).</span></span> <span data-ttu-id="7d38d-104">ISO 仕様は、構造体、自体を最も明確に指定ではないものの、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>クラスは、インターネット技術標準化委員会 (IETF) 公開キー インフラストラクチャ X.509 (PKIX) ワーキング グループによって発行された仕様で定義された使用シナリオをモデル化するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="7d38d-104">Although the ISO specifications are most informative on the structure itself, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class is designed to model the usage scenarios defined in specifications issued by the Internet Engineering Task Force (IETF) Public Key Infrastructure, X.509 (PKIX) working group.</span></span> <span data-ttu-id="7d38d-105">これらの仕様の中で最も有益なの RFC 3280"[証明書と証明書失効リスト (CRL) のプロファイル](http://go.microsoft.com/fwlink/?LinkId=45286)"。</span><span class="sxs-lookup"><span data-stu-id="7d38d-105">The most informative of these specifications is RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-106">以降で、 [!INCLUDE[net_v46](~/includes/net-v46-md.md)]、この型を実装して、<xref:System.IDisposable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="7d38d-106">Starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)], this type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="7d38d-107">型を使用してが完了したらを直接的または間接的にその破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7d38d-107">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="7d38d-108">型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロックします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-108">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="7d38d-109">直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。</span><span class="sxs-lookup"><span data-stu-id="7d38d-109">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="7d38d-110">詳細についてを参照してください"を使用して、オブジェクトを実装する IDisposable"、<xref:System.IDisposable>インターフェイスに関するトピック。</span><span class="sxs-lookup"><span data-stu-id="7d38d-110">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
>   
>  <span data-ttu-id="7d38d-111">対象とするアプリの[!INCLUDE[net_v452](~/includes/net-v452-md.md)]と以前のバージョン、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>クラスを実装しません、<xref:System.IDisposable>インターフェイスし、したがって必要はありません、`Dispose`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7d38d-111">For apps that target the [!INCLUDE[net_v452](~/includes/net-v452-md.md)] and earlier versions, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class does not implement the <xref:System.IDisposable> interface and therefore does not have a `Dispose` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-112">次の例で使用する方法、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>オブジェクトを暗号化し、ファイル暗号化を解除します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-112">The following example demonstrates how to use an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to encrypt and decrypt a file.</span></span>  
  
 [!code-csharp[X509Certificate2#1](~/samples/snippets/csharp/VS_Snippets_CLR/x509certificate2/cs/program.cs#1)]
 [!code-vb[X509Certificate2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/x509certificate2/vb/program.vb#1)]  
  
 <span data-ttu-id="7d38d-113">次の例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-113">The following example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d38d-114"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d38d-115"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-116">このコンス トラクターは、空を作成<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>他のクラスのコンス トラクターこのバイト配列、ポインター、または証明書ファイルから証明書情報を使用するとは異なり、オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="7d38d-116">This constructor creates an empty <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object, unlike the other constructors for this class that use certificate information from a byte array, a pointer, or a certificate file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-117">次のコード例では、現在のユーザー証明書ストアを開いて、アクティブな証明書のみを選択し、1 つまたは複数の証明書を選択することができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-117">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="7d38d-118">この例は、証明書情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-118">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="7d38d-119">X.509 証明書のデータを格納しているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="7d38d-119">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-120">バイト配列の情報を使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-120">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using information from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-121">このコンス トラクターが新たに作成<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>バイト配列から証明書の情報を使用してオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-121">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using certificate information from a byte array.</span></span> <span data-ttu-id="7d38d-122">バイト配列には、バイナリ (DER) エンコードまたは Base64 でエンコードされた X.509 データを指定できます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-122">The byte array can be binary (DER) encoded or Base64-encoded X.509 data.</span></span> <span data-ttu-id="7d38d-123">バイト配列が pkcs7 ですることもできます (Authenticode) で署名されたファイルです。署名者の証明書は、オブジェクトの作成に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-123">The byte array can also be a PKCS7 (Authenticode) signed file; the signer certificate is used to create the object.</span></span>  
  
 <span data-ttu-id="7d38d-124">作成する場合、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> pkcs7 で署名されたファイルのストアを指定することによって証明書`rawData`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>ストア内の証明書のいずれかのではなく、ストアに署名した証明書の作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-124">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-125">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-125">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-126">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-126">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-127">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-127">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-128">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-128">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-129">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-129">The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(IntPtr handle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="7d38d-130">アンマネージ コードの証明書コンテキストへのポインター。</span><span class="sxs-lookup"><span data-stu-id="7d38d-130">A pointer to a certificate context in unmanaged code.</span></span> <span data-ttu-id="7d38d-131">C 構造体は、<see langword="PCCERT_CONTEXT" /> と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-131">The C structure is called <see langword="PCCERT_CONTEXT" />.</span></span></param>
        <summary><span data-ttu-id="7d38d-132">アンマネージ ハンドルを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an unmanaged handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-133">このコンス トラクターが新たに作成<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>オブジェクトのハンドルを使用した Microsoft Cryptographic API 証明書のコンテキストの`PCCERT_CONTEXT`します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-133">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a handle for the Microsoft Cryptographic API certificate context, `PCCERT_CONTEXT`.</span></span> <span data-ttu-id="7d38d-134">このコンス トラクターの直前の呼び出し元がアンマネージ コードのアクセス許可が必要であることを注意してください。</span><span class="sxs-lookup"><span data-stu-id="7d38d-134">Note that the immediate caller of this constructor requires unmanaged code permission.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-135">コンス トラクターでは、証明書のコンテキストのコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-135">The constructor creates a copy of the certificate context.</span></span> <span data-ttu-id="7d38d-136">行うわけでは、コンス トラクターに渡されるコンテキスト構造が無効です。リリースされている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7d38d-136">Do not assume that the context structure you passed to the constructor is valid; it may have been released.</span></span> <span data-ttu-id="7d38d-137">現在のコピーを取得する`PCCERT_CONTEXT`から構造体、<xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A>プロパティが有効の有効期間中にのみ、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-137">You can get a copy of the current `PCCERT_CONTEXT` structure from the <xref:System.Security.Cryptography.X509Certificates.X509Certificate.Handle%2A> property, but it is valid only during the lifetime of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-138">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-138">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-139">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-139">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-140">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-140">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-141">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-141">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-142">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-142">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-143">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-143">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-144">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-144">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-145">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-145">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::Security::Cryptography::X509Certificates::X509Certificate ^ certificate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate"><span data-ttu-id="7d38d-146"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-146">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></param>
        <summary><span data-ttu-id="7d38d-147"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトを使用して <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> クラスの新しいインスタンスを 初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-148">このメソッドは、の新しいインスタンスを作成、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>クラスを使用して、<xref:System.Security.Cryptography.X509Certificates.X509Certificate>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-148">This method creates a new instance of the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> class using an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-149">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-149">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-150">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-150">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-151">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-151">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-152">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-152">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-153">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-153">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-154">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-154">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-155">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-155">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-156">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-156">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="7d38d-157">証明書ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="7d38d-157">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="7d38d-158">証明書ファイル名を使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-158">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-159">このコンス トラクターが新たに作成<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>オブジェクト証明書ファイル名を使用します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-159">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name.</span></span> <span data-ttu-id="7d38d-160">バイナリ (DER) エンコードまたは Base64 エンコードをサポートします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-160">It supports binary (DER) encoding or Base64 encoding.</span></span>  
  
 <span data-ttu-id="7d38d-161">作成する場合、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> pkcs7 で署名されたファイルのストアを指定することによって証明書`fileName`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>ストア内の証明書のいずれかのではなく、ストアに署名した証明書の作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-161">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-162">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-162">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-163">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-163">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-164">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-164">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-165">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-165">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-166">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-166">The certificate's password is incorrect.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="7d38d-167">X.509 証明書のデータを格納しているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="7d38d-167">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-168">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-168">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="7d38d-169">バイト配列とパスワードを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-169">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-170">このコンス トラクターは、証明書の秘密キーが含まれている PKCS12 (PFX) ファイルと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-170">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="7d38d-171">正しいパスワードを使用して、このコンス トラクターを呼び出すと、秘密キーを復号化、キー コンテナーに保存されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-171">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-172">ハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-172">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-173">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-173">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="7d38d-174">作成する場合、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> pkcs7 で署名されたファイルのストアを指定することによって証明書`rawData`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate>ストア内の証明書のいずれかのではなく、ストアに署名した証明書の作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-174">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-175">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-175">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-176">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-176">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-177">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-177">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-178">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-178">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-179">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-179">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-180">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-180">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-181">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-181">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-182">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-182">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="7d38d-183">X.509 証明書のデータを格納しているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="7d38d-183">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-184">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-184">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="7d38d-185">バイト配列とパスワードを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-185">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-186">このコンス トラクターが新たに作成<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>オブジェクトのバイト配列と証明書データにアクセスするために必要なパスワードを使用します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-186">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array and a password that is needed to access the certificate data.</span></span> <span data-ttu-id="7d38d-187">証明書の秘密キーを格納する PKCS12 (PFX) ファイルと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-187">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="7d38d-188">正しいパスワードを使用して、このコンス トラクターを呼び出すと、秘密キーを復号化、キー コンテナーに保存されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-188">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-189">ハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-189">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-190">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-190">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="7d38d-191">作成する場合、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> pkcs7 で署名されたファイルのストアを指定することによって証明書`rawData`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>ストア内の証明書のいずれかのではなく、ストアに署名した証明書の作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-191">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-192">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-192">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-193">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-193">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-194">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-194">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-195">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-195">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-196">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-196">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-197">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-197">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-198">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-198">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-199">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected X509Certificate2 (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; X509Certificate2(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="7d38d-200">新しい <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> を逆シリアル化するために必要なシリアル化情報。</span><span class="sxs-lookup"><span data-stu-id="7d38d-200">The serialization information required to deserialize the new <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</span></span></param>
        <param name="context"><span data-ttu-id="7d38d-201">逆シリアル化するストリームの転送元に関するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="7d38d-201">Contextual information about the source of the stream to be deserialized.</span></span></param>
        <summary><span data-ttu-id="7d38d-202">シリアル化情報とストリーム コンテキスト情報を指定して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-202">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using the specified serialization and stream context information.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-203">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-203">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-204">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-204">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-205">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-205">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="7d38d-206">証明書ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="7d38d-206">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-207">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-207">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="7d38d-208">証明書ファイル名とパスワードを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-208">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-209">このコンス トラクターは、証明書の秘密キーが含まれている PKCS12 (PFX) ファイルと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-209">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="7d38d-210">正しいパスワードを使用して、このコンス トラクターを呼び出すと、秘密キーを復号化、キー コンテナーに保存されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-210">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-211">ハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-211">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-212">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-212">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="7d38d-213">作成する場合、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> pkcs7 で署名されたファイルのストアを指定することによって証明書`fileName`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate>ストア内の証明書のいずれかのではなく、ストアに署名した証明書の作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-213">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-214">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-214">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-215">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-215">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-216">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-216">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-217">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-217">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-218">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-218">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-219">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-219">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-220">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-221">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-221">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="7d38d-222">証明書ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="7d38d-222">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-223">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-223">The password required to access the X.509 certificate data.</span></span></param>
        <summary><span data-ttu-id="7d38d-224">証明書ファイル名と証明書にアクセスするためのパスワードを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-224">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name and a password used to access the certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-225">このコンス トラクターが新たに作成<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>オブジェクトの証明書ファイル名と証明書にアクセスするために必要なパスワードを使用します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-225">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name and a password needed to access the certificate.</span></span> <span data-ttu-id="7d38d-226">証明書の秘密キーを格納する PKCS12 (PFX) ファイルと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-226">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="7d38d-227">正しいパスワードを使用して、このコンス トラクターを呼び出すと、秘密キーを復号化、キー コンテナーに保存されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-227">Calling this constructor with the correct password decrypts the private key and saves it to a key container.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-228">ハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-228">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-229">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-229">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="7d38d-230">作成する場合、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> pkcs7 で署名されたファイルのストアを指定することによって証明書`fileName`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>ストア内の証明書のいずれかのではなく、ストアに署名した証明書の作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-230">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-231">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-231">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-232">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-232">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-233">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-233">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-234">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-234">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-235">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-235">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-236">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-236">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-237">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-237">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-238">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-238">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="7d38d-239">X.509 証明書のデータを格納しているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="7d38d-239">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-240">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-240">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="7d38d-241">証明書をインポートする場所と方法を制御する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7d38d-241">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-242">バイト配列、パスワード、およびキー格納フラグを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-242">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-243">このコンス トラクターは、証明書の秘密キーが含まれている PKCS12 (PFX) ファイルと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-243">This constructor is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="7d38d-244">正しいパスワードを使用して、このコンス トラクターの呼び出しでは、秘密キーの暗号化を解除しに Microsoft Cryptographic API 暗号化サービス プロバイダー (CSP) に保存されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-244">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-245">ハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-245">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-246">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-246">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="7d38d-247">作成する場合、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> pkcs7 で署名されたファイルのストアを指定することによって証明書`rawData`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate>ストア内の証明書のいずれかのではなく、ストアに署名した証明書の作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-247">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-248">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-248">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-249">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-249">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-250">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-250">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-251">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-251">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-252">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-252">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-253">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-253">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-254">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-254">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-255">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-255">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="7d38d-256">X.509 証明書のデータを格納しているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="7d38d-256">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-257">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-257">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="7d38d-258">証明書をインポートする場所と方法を制御する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7d38d-258">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-259">バイト配列、パスワード、およびキー格納フラグを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-259">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-260">このコンス トラクターが新たに作成<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>バイトを使用してオブジェクトの配列、証明書のデータとキーの格納フラグにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-260">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a byte array, a password that is needed to access the certificate data, and a key storage flag.</span></span> <span data-ttu-id="7d38d-261">証明書の秘密キーを格納する PKCS12 (PFX) ファイルと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-261">It is used with PKCS12 (PFX) files that contain the certificate's private key.</span></span> <span data-ttu-id="7d38d-262">正しいパスワードを使用して、このコンス トラクターの呼び出しでは、秘密キーの暗号化を解除しに Microsoft Cryptographic API 暗号化サービス プロバイダー (CSP) に保存されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-262">Calling this constructor with the correct password decrypts the private key and saves it to a Microsoft Cryptographic API Cryptographic Service Provider (CSP).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-263">ハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-263">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-264">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-264">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="7d38d-265">作成する場合、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> pkcs7 で署名されたファイルのストアを指定することによって証明書`rawData`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>ストア内の証明書のいずれかのではなく、ストアに署名した証明書の作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-265">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `rawData`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-266">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-266">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-267">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-267">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-268">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-268">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-269">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-269">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-270">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-270">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-271">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-271">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-272">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-272">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-273">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-273">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="7d38d-274">証明書ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="7d38d-274">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-275">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-275">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="7d38d-276">証明書をインポートする場所と方法を制御する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7d38d-276">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-277">証明書ファイル名、パスワード、およびキー格納フラグを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-277">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-278">作成する場合、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate> pkcs7 で署名されたファイルのストアを指定することによって証明書`fileName`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate>ストア内の証明書のいずれかのではなく、ストアに署名した証明書の作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-278">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-279">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-279">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-280">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-280">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-281">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-281">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-282">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-282">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-283">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-283">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-284">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-284">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-285">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-285">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-286">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-286">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509Certificate2 (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509Certificate2(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="7d38d-287">証明書ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="7d38d-287">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-288">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-288">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="7d38d-289">証明書をインポートする場所と方法を制御する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7d38d-289">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-290">証明書ファイル名、証明書にアクセスするためのパスワード、およびキー格納フラグを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-290">Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class using a certificate file name, a password used to access the certificate, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-291">このコンス トラクターが新たに作成<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>証明書ファイルを使用してオブジェクトの名前、証明書とキーの格納フラグにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-291">This constructor creates a new <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a certificate file name, a password needed to access the certificate, and a key storage flag.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-292">ハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-292">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-293">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-293">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 <span data-ttu-id="7d38d-294">作成する場合、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> pkcs7 で署名されたファイルのストアを指定することによって証明書`fileName`、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>ストア内の証明書のいずれかのではなく、ストアに署名した証明書の作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-294">If you create an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> certificate by specifying a PKCS7 signed file store for `fileName`, the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> is created for the certificate that signed the store rather than for any of the certificates within the store.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-295">証明書でエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="7d38d-295">An error with the certificate occurs.</span></span> <span data-ttu-id="7d38d-296">例:</span><span class="sxs-lookup"><span data-stu-id="7d38d-296">For example:</span></span>  
  
-   <span data-ttu-id="7d38d-297">証明書ファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-297">The certificate file does not exist.</span></span>  
  
-   <span data-ttu-id="7d38d-298">証明書が無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-298">The certificate is invalid.</span></span>  
  
-   <span data-ttu-id="7d38d-299">証明書のパスワードが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-299">The certificate's password is incorrect.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="7d38d-300">アンマネージ コードにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-300">for accessing unmanaged code.</span></span> <span data-ttu-id="7d38d-301">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7d38d-302">関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Archived">
      <MemberSignature Language="C#" Value="public bool Archived { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Archived" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived" />
      <MemberSignature Language="VB.NET" Value="Public Property Archived As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Archived { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-303">X.509 証明書がアーカイブされていることを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-303">Gets or sets a value indicating that an X.509 certificate is archived.</span></span></summary>
        <value>
          <span data-ttu-id="7d38d-304">証明書がアーカイブされている場合は <see langword="true" />。証明書がアーカイブされていない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7d38d-304"><see langword="true" /> if the certificate is archived, <see langword="false" /> if the certificate is not archived.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-305">このプロパティは、ストアに関連付けられている証明書でのみ設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-305">This property is set only on a certificate that is associated with a store.</span></span> <span data-ttu-id="7d38d-306">場合は、プロパティが設定され、証明書ストアに証明書を追加、値が永続化されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-306">If the property is set and the certificate is added to a certificate store, the value is persisted.</span></span> <span data-ttu-id="7d38d-307">プロパティがストアから取得した証明書に設定されている場合、値はすぐに保存されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-307">If the property is set on a certificate retrieved from a store, the value is persisted immediately.</span></span>  
  
 <span data-ttu-id="7d38d-308">X.509 ストア、アーカイブされた証明書は含まれません、返された<xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection>オブジェクトの場合を除き、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A>プロパティに設定されている`true`です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-308">In an X.509 store, archived certificates are not included in the returned <xref:System.Security.Cryptography.X509Certificates.X509Certificate2Collection> object unless the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> property is set to `true`.</span></span> <span data-ttu-id="7d38d-309">物理的なアーカイブ処理が行われない場合、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A>値は設定または解除します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-309">No physical archival activity occurs when the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.Archived%2A> value is set or unset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-310">次のコード例では、現在のユーザー証明書ストアを開いて、アクティブな証明書のみを選択し、1 つまたは複数の証明書を選択することができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-310">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="7d38d-311">この例は、証明書情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-311">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-312">証明書を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-312">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public override byte[] Export (System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Export(valuetype System.Security.Cryptography.X509Certificates.X509ContentType contentType, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Export (contentType As X509ContentType, password As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::X509Certificates::X509ContentType contentType, System::String ^ password);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("X509ContentType.SerializedCert is not supported")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">To be added.</param>
        <param name="password">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509ExtensionCollection Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As X509ExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ Extensions { System::Security::Cryptography::X509Certificates::X509ExtensionCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-313"><see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-313">Gets a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> objects.</span></span></summary>
        <value><span data-ttu-id="7d38d-314"><see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-314">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-315">X.509 v3 証明書の形式で定義された拡張機能は、証明書に含まれるその他のデータを許可します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-315">The extensions defined in the X.509 v3 certificate format allow additional data to be included in the certificate.</span></span> <span data-ttu-id="7d38d-316">RFC 3280 に PKIX によって、また X.509 v3 定義で、ISO で多くの拡張機能が定義されて"[証明書と証明書失効リスト (CRL) のプロファイル](http://go.microsoft.com/fwlink/?LinkId=45286)"。</span><span class="sxs-lookup"><span data-stu-id="7d38d-316">A number of extensions are defined by ISO in the X.509 v3 definition as well as by PKIX in RFC 3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span> <span data-ttu-id="7d38d-317">一般的な拡張機能は、キー使用法に関する情報を含める (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>)、キーの識別子 (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>)、証明書のポリシー、失効情報 (CRL 配布ポイント拡張機能)、およびその他の使用。</span><span class="sxs-lookup"><span data-stu-id="7d38d-317">Common extensions include information regarding key usage (<xref:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension>), key identifiers (<xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>), certificate policies, revocation information (CRL Distribution Point extension), and other uses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-318">次のコード例では、現在のユーザー証明書ストアを開いて、アクティブな証明書のみを選択し、1 つまたは複数の証明書を選択することができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-318">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="7d38d-319">この例は、証明書情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-319">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-320">証明書を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-320">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FriendlyName">
      <MemberSignature Language="C#" Value="public string FriendlyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FriendlyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.FriendlyName" />
      <MemberSignature Language="VB.NET" Value="Public Property FriendlyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FriendlyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-321">証明書に関連付けられたエイリアスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-321">Gets or sets the associated alias for a certificate.</span></span></summary>
        <value><span data-ttu-id="7d38d-322">証明書の表示名。</span><span class="sxs-lookup"><span data-stu-id="7d38d-322">The certificate's friendly name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-323">フレンドリ名は、X.509 証明書ストアに設定できるプロパティです。</span><span class="sxs-lookup"><span data-stu-id="7d38d-323">Friendly names are properties in the X.509 certificate store that can be set.</span></span> <span data-ttu-id="7d38d-324">関連付けるエイリアス証明書が簡単に識別できるようにユーザーを有効に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-324">They are used to enable a user to associate aliases with certificates so they can be easily identified.</span></span>  
  
 <span data-ttu-id="7d38d-325">空の文字列、証明書のフレンドリ名が存在しない場合 ("") が返されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-325">If no friendly name exists for the certificate, an empty string ("") is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-326">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-326">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-327">証明書を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-327">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCertContentType">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d38d-328">バイト配列またはファイルに格納された証明書の種類を示します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-328">Indicates the type of certificate contained in a byte array or file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (rawData As Byte()) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12, Pkcs7 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="7d38d-329">X.509 証明書のデータを格納しているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="7d38d-329">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-330">バイト配列に格納された証明書の種類を示します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-330">Indicates the type of certificate contained in a byte array.</span></span></summary>
        <returns><span data-ttu-id="7d38d-331"><see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-331">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-332">このメソッドでは、ファイル内の証明書の種類を検出することができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-332">This method enables you to discover the type of certificate in a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-333">次のコード例では、現在のユーザー証明書ストアを開いて、アクティブな証明書のみを選択し、1 つまたは複数の証明書を選択することができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-333">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="7d38d-334">この例は、証明書情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-334">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7d38d-335"><paramref name="rawData" /> の長さが 0 であるか、またはその値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-335"><paramref name="rawData" /> has a zero length or is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCertContentType">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ContentType GetCertContentType(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCertContentType (fileName As String) As X509ContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::X509Certificates::X509ContentType GetCertContentType(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Detection limited to Cert, Pfx, Pkcs12 and Unknown")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ContentType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="7d38d-336">証明書ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="7d38d-336">The name of a certificate file.</span></span></param>
        <summary><span data-ttu-id="7d38d-337">ファイルに格納された証明書の種類を示します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-337">Indicates the type of certificate contained in a file.</span></span></summary>
        <returns><span data-ttu-id="7d38d-338"><see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-338">An <see cref="T:System.Security.Cryptography.X509Certificates.X509ContentType" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-339">このメソッドでは、ファイル内の証明書の種類を検出することができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-339">This method enables you to discover the type of certificate in a file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7d38d-340"><paramref name="fileName" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-340"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="7d38d-341">証明書の読み取り。</span><span class="sxs-lookup"><span data-stu-id="7d38d-341">for reading the certificate.</span></span> <span data-ttu-id="7d38d-342">セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-342">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="7d38d-343">関連する列挙。 <see cref="F:System.IO.FileAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="7d38d-343">Associated enumeration: <see cref="F:System.IO.FileAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNameInfo">
      <MemberSignature Language="C#" Value="public string GetNameInfo (System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetNameInfo(valuetype System.Security.Cryptography.X509Certificates.X509NameType nameType, bool forIssuer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNameInfo (nameType As X509NameType, forIssuer As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNameInfo(System::Security::Cryptography::X509Certificates::X509NameType nameType, bool forIssuer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("always return String.Empty for UpnName, DnsFromAlternativeName and UrlName")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameType" Type="System.Security.Cryptography.X509Certificates.X509NameType" />
        <Parameter Name="forIssuer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nameType"><span data-ttu-id="7d38d-344">サブジェクトの <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="7d38d-344">The <see cref="T:System.Security.Cryptography.X509Certificates.X509NameType" /> value for the subject.</span></span></param>
        <param name="forIssuer">
          <span data-ttu-id="7d38d-345">発行者名を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7d38d-345"><see langword="true" /> to include the issuer name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7d38d-346">証明書からサブジェクト名と発行者名を取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-346">Gets the subject and issuer names from a certificate.</span></span></summary>
        <returns><span data-ttu-id="7d38d-347">証明書の名前。</span><span class="sxs-lookup"><span data-stu-id="7d38d-347">The name of the certificate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-348">このメソッドは、複数の場所で、名前と値の多くにあることができますので、証明書を解析する代わり常に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7d38d-348">This method should always be used instead of parsing the certificate, since many of the name values can be located in multiple locations.</span></span> <span data-ttu-id="7d38d-349">このメソッドを使用して、適切な名前が返されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-349">Using this method ensures that the appropriate name is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-350">次のコード例では、現在のユーザー証明書ストアを開いて、アクティブな証明書のみを選択し、1 つまたは複数の証明書を選択することができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-350">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="7d38d-351">この例は、証明書情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-351">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrivateKey">
      <MemberSignature Language="C#" Value="public bool HasPrivateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.HasPrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrivateKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrivateKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-352"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトに秘密キーが格納されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-352">Gets a value that indicates whether an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key.</span></span></summary>
        <value>
          <span data-ttu-id="7d38d-353"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトに秘密キーが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7d38d-353"><see langword="true" /> if the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object contains a private key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-354">証明書のコンテキストが無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-354">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d38d-355">提供された証明書情報を使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-355">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="7d38d-356">X.509 証明書のデータを格納しているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="7d38d-356">A byte array containing data from an X.509 certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-357">バイト配列のデータを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-357">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with data from a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-358">このメソッドは、X.509 証明書の生のバイト配列を受け取るし、作成に使用できます、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>関連する値を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-358">This method can be used to take a raw byte array of an X.509 certificate and populate the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with its associated values.</span></span>  
  
 <span data-ttu-id="7d38d-359">このメソッドは、バイト配列のみを受け入れる、ので、Base64 でエンコードされた、DER でエンコードされた X.509 証明書または PFX/PKCS12 証明書を含む、パスワードを必要としない種類の証明書に対してのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-359">Since this method accepts only a byte array, it can be used only for certificate types that do not require a password, including a Base64-encoded or DER-encoded X.509 certificate or a PFX/PKCS12 certificate.</span></span> <span data-ttu-id="7d38d-360">PFX/PKCS12 証明書が複数の証明書を含めることができますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7d38d-360">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="7d38d-361">その場合は、秘密キーに関連付けられている最初の証明書を使用または、秘密キーが見つからない場合、最初の証明書が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-361">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="7d38d-362">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-362">for full trust for the immediate caller.</span></span> <span data-ttu-id="7d38d-363">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-363">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="7d38d-364">継承時の完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-364">for full trust for inheritors.</span></span> <span data-ttu-id="7d38d-365">このメンバーは、部分的に信頼されたコードでは継承できません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-365">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="7d38d-366">証明書の名前。</span><span class="sxs-lookup"><span data-stu-id="7d38d-366">The name of a certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-367">証明書ファイルからの情報を使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-367">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-368">このメソッドを表す X.509 証明書は追加、.cer 拡張子が付いたファイルなど、証明書ファイルを使用して、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>ファイルに含まれる証明書を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-368">This method uses a certificate file, such as a file with a .cer extension, that represents an X.509 certificate and populates the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with the certificate the file contains.</span></span>  
  
 <span data-ttu-id="7d38d-369">このメソッドは、Base64 でエンコードされた、DER でエンコードされた X.509 証明書、証明書の PFX/PKCS12、Authenticode などの署名証明書など、いくつかの証明書の種類で使用できます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-369">This method can be used with several certificate types, including Base64-encoded or DER-encoded X.509 certificates, PFX/PKCS12 certificates, and signer certificates such as Authenticode.</span></span> <span data-ttu-id="7d38d-370">PFX/PKCS12 証明書が複数の証明書を含めることができますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7d38d-370">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="7d38d-371">その場合は、秘密キーに関連付けられている最初の証明書を使用または、秘密キーが見つからない場合、最初の証明書が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-371">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="7d38d-372">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-372">for full trust for the immediate caller.</span></span> <span data-ttu-id="7d38d-373">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-373">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="7d38d-374">継承時の完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-374">for full trust for inheritors.</span></span> <span data-ttu-id="7d38d-375">このメンバーは、部分的に信頼されたコードでは継承できません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-375">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="7d38d-376">X.509 証明書のデータを格納しているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="7d38d-376">A byte array that contains data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-377">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-377">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="7d38d-378">証明書をインポートする場所と方法を制御する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7d38d-378">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-379">バイト配列のデータ、パスワード、およびキー格納フラグを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-379">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-380">このメソッドは、Base64 でエンコードされた、DER でエンコードされた X.509 証明書または PFX/PKCS12 証明書などの証明書の種類を使用できます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-380">You can use this method for certificate types such as Base64-encoded or DER-encoded X.509 certificates, or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="7d38d-381">PFX/PKCS12 証明書が複数の証明書を含めることができますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7d38d-381">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="7d38d-382">その場合は、秘密キーに関連付けられている最初の証明書を使用または、秘密キーが見つからない場合、最初の証明書が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-382">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-383">ハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-383">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-384">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-384">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="7d38d-385">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-385">for full trust for the immediate caller.</span></span> <span data-ttu-id="7d38d-386">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-386">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="7d38d-387">継承時の完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-387">for full trust for inheritors.</span></span> <span data-ttu-id="7d38d-388">このメンバーは、部分的に信頼されたコードでは継承できません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-388">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (byte[] rawData, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(unsigned int8[] rawData, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (rawData As Byte(), password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(cli::array &lt;System::Byte&gt; ^ rawData, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawData" Type="System.Byte[]" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="rawData"><span data-ttu-id="7d38d-389">X.509 証明書のデータを格納しているバイト配列。</span><span class="sxs-lookup"><span data-stu-id="7d38d-389">A byte array containing data from an X.509 certificate.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-390">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-390">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="7d38d-391">証明書をインポートする場所と方法を制御する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7d38d-391">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-392">バイト配列のデータ、パスワード、および秘密キーのインポート方法を決定するフラグを使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-392">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object using data from a byte array, a password, and flags for determining how to import the private key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-393">このメソッドは、設定を使用することができます、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>オブジェクトのバイト配列で表される証明書のパスワードを使用します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-393">This method can be used to populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object using a password for the certificate represented by the byte array.</span></span> <span data-ttu-id="7d38d-394"><xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>場所と方法を制御する値を使用することができます、秘密キーをインポートします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-394">The <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value can be used to control where and how to import the private key.</span></span>  
  
 <span data-ttu-id="7d38d-395">このメソッドは、バイト配列を受け取り、Base64 でエンコードされた、DER でエンコードされた X.509 証明書または PFX/PKCS12 証明書などの証明書の種類に使用できます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-395">This method accepts a byte array and can be used for certificate types such as Base64-encoded or DER-encoded X.509 certificates or PFX/PKCS12 certificates.</span></span> <span data-ttu-id="7d38d-396">PFX/PKCS12 証明書が複数の証明書を含めることができますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7d38d-396">Note that a PFX/PKCS12 certificate can contain more than one certificate.</span></span> <span data-ttu-id="7d38d-397">その場合は、秘密キーに関連付けられている最初の証明書を使用または、秘密キーが見つからない場合、最初の証明書が使用されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-397">In that case, the first certificate associated with a private key is used or, if no private key is found, the first certificate is used.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-398">ハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-398">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-399">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-399">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-400">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-400">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="7d38d-401">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-401">for full trust for the immediate caller.</span></span> <span data-ttu-id="7d38d-402">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-402">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="7d38d-403">継承時の完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-403">for full trust for inheritors.</span></span> <span data-ttu-id="7d38d-404">このメンバーは、部分的に信頼されたコードでは継承できません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-404">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, System.Security.SecureString password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, class System.Security.SecureString password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As SecureString, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::Security::SecureString ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("SecureString is incomplete")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="7d38d-405">証明書ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="7d38d-405">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-406">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-406">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="7d38d-407">証明書をインポートする場所と方法を制御する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7d38d-407">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-408">証明書ファイルの情報、パスワード、およびキー格納フラグを指定して、<see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-408">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a key storage flag.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-409">**セキュリティに関する注意**をハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-409">**Security Note** Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-410">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-410">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="7d38d-411">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-411">for full trust for the immediate caller.</span></span> <span data-ttu-id="7d38d-412">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-412">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="7d38d-413">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-413">for full trust for the immediate caller.</span></span> <span data-ttu-id="7d38d-414">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-414">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public override void Import (string fileName, string password, System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Import(string fileName, string password, valuetype System.Security.Cryptography.X509Certificates.X509KeyStorageFlags keyStorageFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Import (fileName As String, password As String, keyStorageFlags As X509KeyStorageFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Import(System::String ^ fileName, System::String ^ password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("missing KeyStorageFlags support")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="7d38d-415">証明書ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="7d38d-415">The name of a certificate file.</span></span></param>
        <param name="password"><span data-ttu-id="7d38d-416">X.509 証明書データにアクセスするために必要なパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-416">The password required to access the X.509 certificate data.</span></span></param>
        <param name="keyStorageFlags"><span data-ttu-id="7d38d-417">証明書をインポートする場所と方法を制御する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="7d38d-417">A bitwise combination of the enumeration values that control where and how to import the certificate.</span></span></param>
        <summary><span data-ttu-id="7d38d-418">証明書ファイルの情報、パスワード、および <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> 値を使用して、<see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-418">Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with information from a certificate file, a password, and a <see cref="T:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-419">このメソッドを使用できますの設定、 <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> 、パスワード、証明書ファイルから情報を持つオブジェクトと<xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags>値。</span><span class="sxs-lookup"><span data-stu-id="7d38d-419">This method can be used populate an <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object with information from a certificate file, a password, and an <xref:System.Security.Cryptography.X509Certificates.X509KeyStorageFlags> value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7d38d-420">ハードコードしないでをソース コード内のパスワード。</span><span class="sxs-lookup"><span data-stu-id="7d38d-420">Never hard code a password within your source code.</span></span>  <span data-ttu-id="7d38d-421">パスワードをハードコーディングを使用してアセンブリから取得できる、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)、16 進数のエディターまたは Notepad.exe などのテキスト エディターでアセンブリを開くだけでします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-421">Hard-coded passwords can be retrieved from an assembly using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), a hex editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="7d38d-422">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-422">for full trust for the immediate caller.</span></span> <span data-ttu-id="7d38d-423">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-423">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="7d38d-424">継承時の完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-424">for full trust for inheritors.</span></span> <span data-ttu-id="7d38d-425">このメンバーは、部分的に信頼されたコードでは継承できません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-425">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IssuerName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName IssuerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssuerName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ IssuerName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-426">証明書発行者の識別名を取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-426">Gets the distinguished name of the certificate issuer.</span></span></summary>
        <value><span data-ttu-id="7d38d-427">証明書発行者の名前を格納する <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-427">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that contains the name of the certificate issuer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-428">このプロパティには、証明書を発行した証明機関 (CA) の名前が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7d38d-428">This property contains the name of the certificate authority (CA) that issued the certificate.</span></span> <span data-ttu-id="7d38d-429">証明書の名前を取得するを使用して、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7d38d-429">To obtain the name of a certificate, use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo%2A> method.</span></span>  
  
 <span data-ttu-id="7d38d-430">証明書の識別名は、証明書のサブジェクトまたは発行者のテキスト表現です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-430">The distinguished name for the certificate is a textual representation of the certificate subject or issuer.</span></span> <span data-ttu-id="7d38d-431">この表現は名前の属性 (たとえば、"CN = MyName, OU = MyOrgUnit、C = u. s.") です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-431">This representation consists of name attributes (for example, "CN=MyName, OU=MyOrgUnit, C=US").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-432">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-432">The following code example creates a command-line executable file that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-433">証明書のコンテキストが無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-433">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotAfter">
      <MemberSignature Language="C#" Value="public DateTime NotAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotAfter" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotAfter As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotAfter { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-434">証明書の有効期限を表す日付を現地時間で取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-434">Gets the date in local time after which a certificate is no longer valid.</span></span></summary>
        <value><span data-ttu-id="7d38d-435">証明書の有効期限を表す <see cref="T:System.DateTime" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-435">A <see cref="T:System.DateTime" /> object that represents the expiration date for the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-436">このプロパティは、証明書が無効になる有効期限の日付を示します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-436">This property indicates an expiration date on which the certificate becomes invalid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-437">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-437">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-438">証明書を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-438">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotBefore">
      <MemberSignature Language="C#" Value="public DateTime NotBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NotBefore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.NotBefore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NotBefore As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NotBefore { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-439">証明書が有効になる日付を現地時間で取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-439">Gets the date in local time on which a certificate becomes valid.</span></span></summary>
        <value><span data-ttu-id="7d38d-440">証明書の発効日を表す <see cref="T:System.DateTime" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-440">A <see cref="T:System.DateTime" /> object that represents the effective date of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-441">このプロパティは、証明書が有効になる日付を示します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-441">This property indicates the date on which the certificate becomes valid.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-442">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-442">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-443">証明書を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-443">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PrivateKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PrivateKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PrivateKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PrivateKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrivateKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PrivateKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); void set(System::Security::Cryptography::AsymmetricAlgorithm ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-444">証明書に関連付けられた秘密キーを表す <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-444">Gets or sets the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object that represents the private key associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="7d38d-445">RSA 暗号化サービス プロバイダーまたは DSA 暗号化サービス プロバイダーである <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-445">An <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object, which is either an RSA or DSA cryptographic service provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-446">現在このプロパティをサポートしている RSA や DSA キーのみ、いずれかを返すように、<xref:System.Security.Cryptography.RSACryptoServiceProvider>または<xref:System.Security.Cryptography.DSACryptoServiceProvider>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-446">Currently this property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object.</span></span> <span data-ttu-id="7d38d-447">秘密キーがいないかどうか、証明書に関連付け、それを返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-447">If no private key is associated with the certificate, it returns `null`.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="7d38d-448">このプロパティを設定する場合`null`または削除することがなく別のキーに秘密キー ファイルはディスクに残っています。</span><span class="sxs-lookup"><span data-stu-id="7d38d-448">If you set this property to `null` or to another key without first deleting it, a private key file is left on the disk.</span></span>  
  
 <span data-ttu-id="7d38d-449">このプロパティに関連付けられている秘密キーを正しく削除するには、次のように設定します。`PersistKeyInCsp`に`false`、まず、<xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7d38d-449">To properly delete the private key associated with this property, set `PersistKeyInCsp` to `false`, and then call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-450">次のコード例では、現在のユーザー証明書ストアを開いて、アクティブな証明書のみを選択し、1 つまたは複数の証明書を選択することができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-450">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="7d38d-451">この例は、証明書情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-451">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-452">キーの値が RSA キーと DSA キーのどちらでもないか、またはキーを読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-452">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7d38d-453">このプロパティに設定されている値が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-453">The value being set for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7d38d-454">この秘密キーのキー アルゴリズムはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-454">The key algorithm for this private key is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException"><span data-ttu-id="7d38d-455">X.509 キーが一致しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-455">The X.509 keys do not match.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7d38d-456">暗号化サービス プロバイダーのキーが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-456">The cryptographic service provider key is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.PublicKey PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.PublicKey PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As PublicKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::PublicKey ^ PublicKey { System::Security::Cryptography::X509Certificates::PublicKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.PublicKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-457">証明書に関連付けられた <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-457">Gets a <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object associated with a certificate.</span></span></summary>
        <value><span data-ttu-id="7d38d-458"><see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-458">A <see cref="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-459">このプロパティを返します、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A>オブジェクト、オブジェクト識別子が含まれます (<xref:System.Security.Cryptography.Oid>) 公開キー アルゴリズム、ASN.1 エンコードされたパラメーター、および ASN.1 エンコードされたキーの値を表すです。</span><span class="sxs-lookup"><span data-stu-id="7d38d-459">This property returns a <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> object, which contains the object identifier (<xref:System.Security.Cryptography.Oid>) representing the public key algorithm, the ASN.1-encoded parameters, and the ASN.1-encoded key value.</span></span>  
  
 <span data-ttu-id="7d38d-460">キーを取得することも、<xref:System.Security.Cryptography.AsymmetricAlgorithm>オブジェクトを参照することによって、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7d38d-460">You can also obtain the key as an <xref:System.Security.Cryptography.AsymmetricAlgorithm> object by referencing the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey%2A> property.</span></span> <span data-ttu-id="7d38d-461">このプロパティは、いずれかを返すように RSA や DSA キーのみをサポートしている、<xref:System.Security.Cryptography.RSACryptoServiceProvider>または<xref:System.Security.Cryptography.DSACryptoServiceProvider>公開キーを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-461">This property supports only RSA or DSA keys, so it returns either an <xref:System.Security.Cryptography.RSACryptoServiceProvider> or a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object that represents the public key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-462">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-462">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-463">キーの値が RSA キーと DSA キーのどちらでもないか、またはキーを読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-463">The key value is not an RSA or DSA key, or the key is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RawData">
      <MemberSignature Language="C#" Value="public byte[] RawData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] RawData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.RawData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ RawData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-464">証明書の生データを取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-464">Gets the raw data of a certificate.</span></span></summary>
        <value><span data-ttu-id="7d38d-465">バイト配列としての証明書の生データ。</span><span class="sxs-lookup"><span data-stu-id="7d38d-465">The raw data of the certificate as a byte array.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7d38d-466">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-466">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d38d-467"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> オブジェクトの状態をリセットします。</span><span class="sxs-lookup"><span data-stu-id="7d38d-467">Resets the state of an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-468">このメソッドを使用して、証明書の状態をリセットすることができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-468">This method can be used to reset the state of the certificate.</span></span> <span data-ttu-id="7d38d-469">また、証明書に関連付けられているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-469">It also frees any resources associated with the certificate.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="7d38d-470">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-470">for full trust for the immediate caller.</span></span> <span data-ttu-id="7d38d-471">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-471">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="7d38d-472">継承時の完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="7d38d-472">for full trust for inheritors.</span></span> <span data-ttu-id="7d38d-473">このメンバーは、部分的に信頼されたコードでは継承できません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-473">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SerialNumber">
      <MemberSignature Language="C#" Value="public string SerialNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerialNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerialNumber As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerialNumber { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-474">証明書のシリアル番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-474">Gets the serial number of a certificate.</span></span></summary>
        <value><span data-ttu-id="7d38d-475">証明書のシリアル番号。</span><span class="sxs-lookup"><span data-stu-id="7d38d-475">The serial number of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-476">証明書のシリアル番号は、元の X.509 プロトコルの一部です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-476">The serial number of the certificate is part of the original X.509 protocol.</span></span> <span data-ttu-id="7d38d-477">シリアル番号とは、証明機関 (CA) とも呼ばれる証明書の発行者によって発行された一意の番号です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-477">The serial number is a unique number issued by the certificate issuer, which is also called the Certificate Authority (CA).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-478">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-478">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-479">証明書の署名を作成するために使用するアルゴリズムを取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-479">Gets the algorithm used to create the signature of a certificate.</span></span></summary>
        <value><span data-ttu-id="7d38d-480">署名アルゴリズムのオブジェクト識別子 (<see cref="T:System.Security.Cryptography.Oid" />) を返します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-480">Returns the object identifier (<see cref="T:System.Security.Cryptography.Oid" />) of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-481">オブジェクト識別子 (<xref:System.Security.Cryptography.Oid>) 証明書で使用される署名アルゴリズムの種類を識別します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-481">The object identifier (<xref:System.Security.Cryptography.Oid>) identifies the type of signature algorithm used by the certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-482">次のコード例では、現在のユーザー証明書ストアを開いて、アクティブな証明書のみを選択し、1 つまたは複数の証明書を選択することができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-482">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="7d38d-483">この例は、証明書情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-483">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-484">証明書を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-484">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SubjectName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X500DistinguishedName SubjectName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubjectName As X500DistinguishedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ SubjectName { System::Security::Cryptography::X509Certificates::X500DistinguishedName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X500DistinguishedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-485">証明書からサブジェクトの識別名を取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-485">Gets the subject distinguished name from a certificate.</span></span></summary>
        <value><span data-ttu-id="7d38d-486">証明書のサブジェクトの名前を表す <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-486">An <see cref="T:System.Security.Cryptography.X509Certificates.X500DistinguishedName" /> object that represents the name of the certificate subject.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-487">サブジェクト識別名は、証明書のユーザーの名前です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-487">The subject distinguished name is the name of the user of the certificate.</span></span> <span data-ttu-id="7d38d-488">証明書の識別名は、件名のテキスト表現または証明書の発行者です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-488">The distinguished name for the certificate is a textual representation of the subject or issuer of the certificate.</span></span> <span data-ttu-id="7d38d-489">この表現は名前の属性、たとえば、"CN = MyName, OU = MyOrgUnit、C = u. s."です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-489">This representation consists of name attributes, for example, "CN=MyName, OU=MyOrgUnit, C=US".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-490">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-490">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-491">証明書のコンテキストが無効です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-491">The certificate context is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Thumbprint">
      <MemberSignature Language="C#" Value="public string Thumbprint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Thumbprint" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Thumbprint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Thumbprint { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-492">証明書のサムプリントを取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-492">Gets the thumbprint of a certificate.</span></span></summary>
        <value><span data-ttu-id="7d38d-493">証明書のサムプリント。</span><span class="sxs-lookup"><span data-stu-id="7d38d-493">The thumbprint of the certificate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-494">拇印は、SHA1 アルゴリズムを使用して動的に生成し、証明書に物理的に存在しません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-494">The thumbprint is dynamically generated using the SHA1 algorithm and does not physically exist in the certificate.</span></span> <span data-ttu-id="7d38d-495">拇印が証明書の一意の値であるために、証明書ストアに特定の証明書を見つけるために使用が一般的です。</span><span class="sxs-lookup"><span data-stu-id="7d38d-495">Since the thumbprint is a unique value for the certificate, it is commonly used to find a particular certificate in a certificate store.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-496">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-496">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7d38d-497">X.509 証明書をテキスト形式で表示します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-497">Displays an X.509 certificate in text format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d38d-498">X.509 証明書をテキスト形式で表示します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-498">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="7d38d-499">証明書情報。</span><span class="sxs-lookup"><span data-stu-id="7d38d-499">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-500">すべてのと同様`ToString`メソッドを出力できない可能性があります、.NET Framework のバージョン間で一貫性のあるため、メソッドの結果は、コンテンツの解析してはなりません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-500">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="7d38d-501">プロパティを使用して、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>コンテンツに関する正確な情報を取得または使用するオブジェクト、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A>証明書に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-501">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information about the content or use the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString%2A> method to obtain information about the certificate.</span></span>  
  
 <span data-ttu-id="7d38d-502">このメソッドは、テキスト形式で証明書を表示します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-502">This method displays the certificate in text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-503">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-503">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString (bool verbose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString(bool verbose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString (verbose As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString(bool verbose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verbose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verbose">
          <span data-ttu-id="7d38d-504">公開キー、秘密キー、拡張機能などを表示する場合は <see langword="true" />。サムプリント、シリアル番号、サブジェクト名、発行者名など <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> クラスと類似した情報を表示する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7d38d-504"><see langword="true" /> to display the public key, private key, extensions, and so forth; <see langword="false" /> to display information that is similar to the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> class, including thumbprint, serial number, subject and issuer names, and so on.</span></span></param>
        <summary><span data-ttu-id="7d38d-505">X.509 証明書をテキスト形式で表示します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-505">Displays an X.509 certificate in text format.</span></span></summary>
        <returns><span data-ttu-id="7d38d-506">証明書情報。</span><span class="sxs-lookup"><span data-stu-id="7d38d-506">The certificate information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-507">すべてのと同様`ToString`メソッドを出力できない可能性があります、.NET Framework のバージョン間で一貫性のあるため、メソッドの結果は、コンテンツの解析してはなりません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-507">As with all `ToString` methods, the output might not be consistent across versions of the .NET Framework, so the method results should not be parsed for content.</span></span> <span data-ttu-id="7d38d-508">プロパティを使用して、<xref:System.Security.Cryptography.X509Certificates.X509Certificate2>正確な情報を取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-508">Use the properties on the <xref:System.Security.Cryptography.X509Certificates.X509Certificate2> object to obtain precise information.</span></span>  
  
 <span data-ttu-id="7d38d-509">このメソッドは、テキスト形式で証明書を表示します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-509">This method displays the certificate in text format.</span></span> <span data-ttu-id="7d38d-510">場合、`verbose`にパラメーターが設定されている`true`テキストの表示には、公開キー、秘密キー、および拡張機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7d38d-510">If the `verbose` parameter is set to `true`, the text display includes the public key, private key, and extensions.</span></span> <span data-ttu-id="7d38d-511">場合`verbose`に設定されている`false`テキストの表示には、X.509 証明書の拇印、シリアル番号、サブジェクトと発行者名、および有効期限情報を含むから使用できるフィールドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="7d38d-511">If `verbose` is set to `false`, the text display includes those fields available from the X.509 certificate, including thumbprint, serial number, subject and issuer names, and validity date information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-512">次のコード例では、コマンドライン実行可能ファイルを証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力を作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-512">The following code example creates a command line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.X509Certificates.X509Certificate2.Verify" />
      <MemberSignature Language="VB.NET" Value="Public Function Verify () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Verify();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("by default this depends on the incomplete X509Chain")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d38d-513">基本的な検証ポリシーを使用して X.509 チェーンの検証を実行します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-513">Performs a X.509 chain validation using basic validation policy.</span></span></summary>
        <returns>
          <span data-ttu-id="7d38d-514">検証が成功した場合は <see langword="true" />。検証が失敗した場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7d38d-514"><see langword="true" /> if the validation succeeds; <see langword="false" /> if the validation fails.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-515">このメソッドは、簡単な証明書のチェーンを構築し、そのチェーンにベースのポリシーを適用します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-515">This method builds a simple chain for the certificate and applies the base policy to that chain.</span></span> <span data-ttu-id="7d38d-516">使用して直接証明書の検証の失敗に関する詳細については、必要がある場合、<xref:System.Security.Cryptography.X509Certificates.X509Chain>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7d38d-516">If you need more information about a failure, validate the certificate directly using the <xref:System.Security.Cryptography.X509Certificates.X509Chain> object.</span></span>  
  
 <span data-ttu-id="7d38d-517">使用して、チェーン エンジンの既定をオーバーライドできることに注意してください、<xref:System.Security.Cryptography.CryptoConfig>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7d38d-517">Note that the default chaining engine can be overridden using the <xref:System.Security.Cryptography.CryptoConfig> class.</span></span> <span data-ttu-id="7d38d-518">Microsoft Windows Server 2003 で、既定のエンジンが RFC3280、」に記載の仕様に準拠"[証明書と証明書失効リスト (CRL) のプロファイル](http://go.microsoft.com/fwlink/?LinkId=45286)"。</span><span class="sxs-lookup"><span data-stu-id="7d38d-518">On Microsoft Windows Server 2003, the default engine conforms to the specification described in RFC3280, "[Certificate and Certificate Revocation List (CRL) Profile](http://go.microsoft.com/fwlink/?LinkId=45286)."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-519">次のコード例では、現在のユーザー証明書ストアを開いて、アクティブな証明書のみを選択し、1 つまたは複数の証明書を選択することができます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-519">The following code example opens the current user certificate store, selects only active certificates, then allows the user to select one or more certificates.</span></span> <span data-ttu-id="7d38d-520">この例は、証明書情報をコンソールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-520">The example then writes certificate information to the console.</span></span>  
  
 [!code-cpp[CertSelect#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertSelect/CPP/certselect.cpp#1)]
 [!code-csharp[CertSelect#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertSelect/CS/certselect.cs#1)]
 [!code-vb[CertSelect#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertSelect/VB/certselect.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-521">証明書を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-521">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.X509Certificates</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d38d-522">X.509 形式のバージョンの証明書を取得します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-522">Gets the X.509 format version of a certificate.</span></span></summary>
        <value><span data-ttu-id="7d38d-523">証明書の形式。</span><span class="sxs-lookup"><span data-stu-id="7d38d-523">The certificate format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d38d-524">X.509 証明書のいくつかのバージョンがあります。</span><span class="sxs-lookup"><span data-stu-id="7d38d-524">There are several versions of X.509 certificates.</span></span> <span data-ttu-id="7d38d-525">このプロパティは、証明書で使用する形式を識別します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-525">This property identifies which format the certificate uses.</span></span> <span data-ttu-id="7d38d-526">たとえば、バージョン 3 証明書の「3」が返されます。</span><span class="sxs-lookup"><span data-stu-id="7d38d-526">For example, "3" is returned for a version 3 certificate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d38d-527">次のコード例では、証明書ファイルを引数として受け取り、さまざまな証明書のプロパティをコンソールに出力するコマンドラインの実行可能ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="7d38d-527">The following code example creates a command-line executable that takes a certificate file as an argument and prints various certificate properties to the console.</span></span>  
  
 [!code-cpp[CertInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CertInfo/CPP/certinfo.cpp#1)]
 [!code-csharp[CertInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CertInfo/CS/certinfo.cs#1)]
 [!code-vb[CertInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CertInfo/VB/certinfo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7d38d-528">証明書を読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="7d38d-528">The certificate is unreadable.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>