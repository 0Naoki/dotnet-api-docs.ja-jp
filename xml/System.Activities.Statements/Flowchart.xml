<Type Name="Flowchart" FullName="System.Activities.Statements.Flowchart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bdad65a7439d57885b8d1922ac82536f02fb5a9" />
    <Meta Name="ms.sourcegitcommit" Value="b3480b6208c3cad466469e76294a96f5ab1ef04c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/16/2018" />
    <Meta Name="ms.locfileid" Value="35691357" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Flowchart : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Flowchart extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.Flowchart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Flowchart&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class Flowchart sealed : System::Activities::NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Nodes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e1ba5-101">一般的なフローチャート パラダイムを使用したワークフローのモデル化を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1ba5-101">Represents the models workflows using the familiar flowchart paradigm.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ba5-102"><xref:System.Activities.Statements.Flowchart> アクティビティにより、ノードおよびリンクを使用し、自由形式のワークフローを作成できます。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-102">The <xref:System.Activities.Statements.Flowchart> activity allows free-form creation of a workflow using nodes and links.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1ba5-103"><xref:System.Activities.Statements.Flowchart> アクティビティを作成するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-103">The following code sample demonstrates creating a <xref:System.Activities.Statements.Flowchart> activity.</span></span> <span data-ttu-id="e1ba5-104">この例は、[フローチャート アクティビティを使用して TryCatch でエラーの処理](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-104">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Flowchart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Flowchart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Flowchart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e1ba5-105">
            <see cref="T:System.Activities.Statements.Flowchart" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1ba5-105">Creates a new instance of the <see cref="T:System.Activities.Statements.Flowchart" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1ba5-106"><xref:System.Activities.Statements.Flowchart> アクティビティを作成するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-106">The following code sample demonstrates creating a <xref:System.Activities.Statements.Flowchart> activity.</span></span> <span data-ttu-id="e1ba5-107">この例は、[フローチャート アクティビティを使用して TryCatch でエラーの処理](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-107">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Flowchart.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Flowchart.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Statements.FlowNode&gt; Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Statements.FlowNode&gt; Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Flowchart.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As Collection(Of FlowNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Statements::FlowNode ^&gt; ^ Nodes { System::Collections::ObjectModel::Collection&lt;System::Activities::Statements::FlowNode ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("StartNode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Statements.FlowNode&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1ba5-108">フローチャートに含まれる <see cref="T:System.Activities.Statements.FlowNode" /> オブジェクトのコレクションを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1ba5-108">Gets or sets the collection of <see cref="T:System.Activities.Statements.FlowNode" /> objects contained by the flowchart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1ba5-109">
            <see cref="T:System.Activities.Statements.FlowNode" /> オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1ba5-109">A collection of <see cref="T:System.Activities.Statements.FlowNode" /> objects..</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1ba5-110"><xref:System.Activities.Statements.Flowchart> アクティビティを作成するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-110">The following code sample demonstrates creating a <xref:System.Activities.Statements.Flowchart> activity.</span></span> <span data-ttu-id="e1ba5-111">この例は、[フローチャート アクティビティを使用して TryCatch でエラーの処理](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-111">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Flowchart.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNode">
      <MemberSignature Language="C#" Value="public System.Activities.Statements.FlowNode StartNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Statements.FlowNode StartNode" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Flowchart.StartNode" />
      <MemberSignature Language="VB.NET" Value="Public Property StartNode As FlowNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Statements::FlowNode ^ StartNode { System::Activities::Statements::FlowNode ^ get(); void set(System::Activities::Statements::FlowNode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Variables")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Statements.FlowNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1ba5-112">フローチャートが開始したときに実行される <see cref="T:System.Activities.Statements.FlowNode" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1ba5-112">Gets or sets the <see cref="T:System.Activities.Statements.FlowNode" /> to be executed when the flowchart starts.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1ba5-113">開始ノード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1ba5-113">The starting node.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1ba5-114">1 つの <xref:System.Activities.Statements.Flowchart.StartNode%2A> のみが必要です。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-114">There must only be one <xref:System.Activities.Statements.Flowchart.StartNode%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1ba5-115"><xref:System.Activities.Statements.Flowchart> アクティビティの StartNode を構成するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-115">The following code sample demonstrates configuring the StartNode of a <xref:System.Activities.Statements.Flowchart> activity.</span></span> <span data-ttu-id="e1ba5-116">この例は、[フローチャート アクティビティを使用して TryCatch でエラーの処理](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-116">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInstance">
      <MemberSignature Language="C#" Value="protected override void UpdateInstance (System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateInstance(class System.Activities.DynamicUpdate.NativeActivityUpdateContext updateContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Flowchart.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateInstance (updateContext As NativeActivityUpdateContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateInstance(System::Activities::DynamicUpdate::NativeActivityUpdateContext ^ updateContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateContext" Type="System.Activities.DynamicUpdate.NativeActivityUpdateContext" />
      </Parameters>
      <Docs>
        <param name="updateContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateUnconnectedNodes">
      <MemberSignature Language="C#" Value="public bool ValidateUnconnectedNodes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateUnconnectedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Flowchart.ValidateUnconnectedNodes" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateUnconnectedNodes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateUnconnectedNodes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1ba5-117">未接続コードが検証されるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1ba5-117">Gets or sets a value that indicates whether unconnected nodes are validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1ba5-118">接続されていないノードが検証される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1ba5-118">
              <see langword="true" /> if unconnected nodes are validated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Variables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; Variables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; Variables" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Flowchart.Variables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Variables As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ Variables { System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1ba5-119">
            <see cref="T:System.Activities.Variable" /> に関連付けられている、<see cref="T:System.Activities.Statements.Flowchart" /> オブジェクトのコレクションを取得または設定します。フローチャートに含まれる子アクティビティ間で状態を共有するために使用できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1ba5-119">Gets or sets the collection of <see cref="T:System.Activities.Variable" /> objects associated with the <see cref="T:System.Activities.Statements.Flowchart" />, which are available to share state across the child activities contained within the Flowchart.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1ba5-120">変数のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1ba5-120">The collection of variables.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e1ba5-121"><xref:System.Activities.Statements.Flowchart> アクティビティの Variables を使用したコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-121">The following code sample demonstrates using Variables in a <xref:System.Activities.Statements.Flowchart> activity.</span></span> <span data-ttu-id="e1ba5-122">この例は、[フローチャート アクティビティを使用して TryCatch でエラーの処理](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="e1ba5-122">This example is from the [Fault Handling in a Flowchart Activity Using TryCatch](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md) sample.</span></span>  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#2](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>