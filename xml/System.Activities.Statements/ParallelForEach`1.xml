<Type Name="ParallelForEach&lt;T&gt;" FullName="System.Activities.Statements.ParallelForEach&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b581bee4325b5d8576ac1acf7a3af62dd0db4a46" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30357086" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ParallelForEach&lt;T&gt; : System.Activities.NativeActivity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParallelForEach`1&lt;T&gt; extends System.Activities.NativeActivity" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.ParallelForEach`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ParallelForEach(Of T)&#xA;Inherits NativeActivity" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ParallelForEach sealed : System::Activities::NativeActivity" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.NativeActivity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Body")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="f52d2-101">
        <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" /> コレクションで提供される値の型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f52d2-101">The type of the values provided in the <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" /> collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="f52d2-102">コレクションの要素を列挙し、コレクションの各要素に対して埋め込みステートメントを並列実行します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f52d2-102">Enumerates the elements of a collection and executes an embedded statement for each element of the collection in parallel.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f52d2-103">埋め込みステートメントはまとめてスケジュールされ、非同期で実行されます。ただし、スケジュール済みのアクティビティ自体が非同期でない場合 (メッセージング アクティビティ、<xref:System.Activities.Statements.InvokeMethod>、<xref:System.Activities.AsyncCodeActivity> から派生するアクティビティなど) を除き、別々のスレッドでは実行されません。したがって、それぞれの継続するアクティビティは、その前のスケジュール済みアクティビティが完了するかアイドル状態になるまで実行されません。</span><span class="sxs-lookup"><span data-stu-id="f52d2-103">The embedded statements are scheduled together and run asynchronously, but unless the scheduled activites themselves are asynchronous (such as messaging activities, <xref:System.Activities.Statements.InvokeMethod>, or activities that derive from <xref:System.Activities.AsyncCodeActivity>), they do not run on separate threads, so each successive activity will only execute when the previously scheduled activity completes or goes idle.</span></span>  <span data-ttu-id="f52d2-104">このアクティビティの子アクティビティがどれも非同期ではないか、アイドル状態にならない場合、このアクティビティは <xref:System.Activities.Statements.ForEach%601> アクティビティが実行されるのと同様の方法で実行されます。</span><span class="sxs-lookup"><span data-stu-id="f52d2-104">If none of the child activities of this activity are asynchronous or go idle, this activity execute in the same way that a <xref:System.Activities.Statements.ForEach%601> activity does.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f52d2-105"><xref:System.Activities.Statements.ParallelForEach%601> アクティビティを作成するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="f52d2-105">The following code sample demonstrates creating a <xref:System.Activities.Statements.ParallelForEach%601> activity.</span></span> <span data-ttu-id="f52d2-106">この例は、[企業の購買プロセス](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="f52d2-106">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParallelForEach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ParallelForEach`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ParallelForEach();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f52d2-107">
            <see cref="T:System.Activities.Statements.ParallelForEach\`1" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f52d2-107">Creates a new instance of the <see cref="T:System.Activities.Statements.ParallelForEach`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f52d2-108"><xref:System.Activities.Statements.ParallelForEach%601> アクティビティを作成するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="f52d2-108">The following code sample demonstrates creating a <xref:System.Activities.Statements.ParallelForEach%601> activity.</span></span> <span data-ttu-id="f52d2-109">この例は、[企業の購買プロセス](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="f52d2-109">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityAction&lt;T&gt; Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ActivityAction`1&lt;!T&gt; Body" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.ParallelForEach`1.Body" />
      <MemberSignature Language="VB.NET" Value="Public Property Body As ActivityAction(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ActivityAction&lt;T&gt; ^ Body { System::Activities::ActivityAction&lt;T&gt; ^ get(); void set(System::Activities::ActivityAction&lt;T&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityAction&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f52d2-110">
            <see cref="T:System.Activities.ActivityAction" /> コレクションに格納されている値ごとに 1 回実行される、<see cref="P:System.Activities.Statements.ParallelForEach`1.Values" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f52d2-110">The <see cref="T:System.Activities.ActivityAction" /> that is executed once for every value contained in the <see cref="P:System.Activities.Statements.ParallelForEach`1.Values" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f52d2-111">格納されているアクティビティ操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f52d2-111">The contained activity action.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f52d2-112"><xref:System.Activities.Statements.ParallelForEach%601> アクティビティの Body プロパティを設定するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="f52d2-112">The following code sample demonstrates setting the Body property of a <xref:System.Activities.Statements.ParallelForEach%601> activity.</span></span> <span data-ttu-id="f52d2-113">この例は、[企業の購買プロセス](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="f52d2-113">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMetadata">
      <MemberSignature Language="C#" Value="protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CacheMetadata(valuetype System.Activities.NativeActivityMetadata metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ParallelForEach`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CacheMetadata (metadata As NativeActivityMetadata)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CacheMetadata(System::Activities::NativeActivityMetadata metadata);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletionCondition">
      <MemberSignature Language="C#" Value="public System.Activities.Activity&lt;bool&gt; CompletionCondition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Activity`1&lt;bool&gt; CompletionCondition" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.ParallelForEach`1.CompletionCondition" />
      <MemberSignature Language="VB.NET" Value="Public Property CompletionCondition As Activity(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Activity&lt;bool&gt; ^ CompletionCondition { System::Activities::Activity&lt;bool&gt; ^ get(); void set(System::Activities::Activity&lt;bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Activity&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f52d2-114">各イテレーションの完了後に評価されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f52d2-114">Evaluated after each iteration completes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f52d2-115">完了の式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f52d2-115">The completion expression.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f52d2-116">`true` であると評価する場合、スケジュールされた保留イテレーションはキャンセルされます。</span><span class="sxs-lookup"><span data-stu-id="f52d2-116">If it evaluates to `true`, then the scheduled pending iterations are canceled.</span></span> <span data-ttu-id="f52d2-117">このプロパティが設定されていない場合、スケジュールされたすべてのステートメントは、完了するまで実行されます。</span><span class="sxs-lookup"><span data-stu-id="f52d2-117">If this property is not set, all scheduled statements execute until completion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override void Execute (System.Activities.NativeActivityContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Execute(class System.Activities.NativeActivityContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ParallelForEach`1.Execute(System.Activities.NativeActivityContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Execute (context As NativeActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Execute(System::Activities::NativeActivityContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Activities.NativeActivityContext" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateDynamicUpdateMap">
      <MemberSignature Language="C#" Value="protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCreateDynamicUpdateMap(class System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, class System.Activities.Activity originalActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.ParallelForEach`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnCreateDynamicUpdateMap (metadata As NativeActivityUpdateMapMetadata, originalActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnCreateDynamicUpdateMap(System::Activities::DynamicUpdate::NativeActivityUpdateMapMetadata ^ metadata, System::Activities::Activity ^ originalActivity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadata" Type="System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" />
        <Parameter Name="originalActivity" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="metadata">To be added.</param>
        <param name="originalActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Activities.InArgument&lt;System.Collections.Generic.IEnumerable&lt;T&gt;&gt; Values { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.InArgument`1&lt;class System.Collections.Generic.IEnumerable`1&lt;!T&gt;&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.ParallelForEach`1.Values" />
      <MemberSignature Language="VB.NET" Value="Public Property Values As InArgument(Of IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::InArgument&lt;System::Collections::Generic::IEnumerable&lt;T&gt; ^&gt; ^ Values { System::Activities::InArgument&lt;System::Collections::Generic::IEnumerable&lt;T&gt; ^&gt; ^ get(); void set(System::Activities::InArgument&lt;System::Collections::Generic::IEnumerable&lt;T&gt; ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Activities.RequiredArgument</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.InArgument&lt;System.Collections.Generic.IEnumerable&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f52d2-118">
            <see cref="P:System.Activities.Statements.ParallelForEach`1.Body" /> に格納されているアクティビティのイテレーションごとに、パラメーターとして使用される値のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f52d2-118">The collection of values used as parameters for each iteration of the activity contained in the <see cref="P:System.Activities.Statements.ParallelForEach`1.Body" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f52d2-119">値のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f52d2-119">The collection of values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f52d2-120"><xref:System.Activities.Statements.ParallelForEach%601> アクティビティの Values プロパティを設定するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="f52d2-120">The following code sample demonstrates setting the Values property of a <xref:System.Activities.Statements.ParallelForEach%601> activity.</span></span> <span data-ttu-id="f52d2-121">この例は、[企業の購買プロセス](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="f52d2-121">This example is from the [Corporate Purchase Process](~/docs/framework/windows-workflow-foundation/samples/corporate-purchase-process.md) sample.</span></span>  
  
 [!code-csharp[wfs_PurchaseProcess#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_purchaseprocess/cs/purchaseprocessworkflow.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>