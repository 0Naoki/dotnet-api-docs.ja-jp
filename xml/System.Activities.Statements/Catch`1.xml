<Type Name="Catch&lt;TException&gt;" FullName="System.Activities.Statements.Catch&lt;TException&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f1b6c071e42c7a1058579fd3fca964ffad41b85" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30356116" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Catch&lt;TException&gt; : System.Activities.Statements.Catch where TException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Catch`1&lt;(class System.Exception) TException&gt; extends System.Activities.Statements.Catch" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Statements.Catch`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Catch(Of TException)&#xA;Inherits Catch" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TException&gt;&#xA; where TException : Exceptionpublic ref class Catch sealed : System::Activities::Statements::Catch" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TException">
      <Constraints>
        <BaseTypeName>System.Exception</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Activities.Statements.Catch</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Action")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TException">
      <see cref="T:System.Activities.Statements.Catch`1" /> ブロックが処理している例外の種類。</typeparam>
    <summary>
      <see cref="T:System.Activities.Statements.TryCatchFinally" /> アクティビティの対応する Try ブロックに例外が発生した後に実行される、アクションを含みます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 デザイナーに配置される<xref:System.Activities.Statements.Catch>デザイナーでアクティビティを並べ替えることができません。  コレクションを並べ替えるには<xref:System.Activities.Statements.Catch>アクティビティ、削除して、正しい順序で追加し直すか、ワークフローの xaml (コード) ビューを使用します。  
  
   
  
## Examples  
 <xref:System.Activities.Statements.Catch%601> アクティビティを作成するコード サンプルを次に示します。 この例は、[フローチャート アクティビティを使用して TryCatch でエラーの処理](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)サンプルです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Catch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Statements.Catch`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Catch();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Activities.Statements.Catch`1" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Activities.Statements.Catch%601> アクティビティを作成するコード サンプルを次に示します。 この例は、[フローチャート アクティビティを使用して TryCatch でエラーの処理](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)サンプルです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Activities.ActivityAction&lt;TException&gt; Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.ActivityAction`1&lt;!TException&gt; Action" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Catch`1.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As ActivityAction(Of TException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::ActivityAction&lt;TException&gt; ^ Action { System::Activities::ActivityAction&lt;TException&gt; ^ get(); void set(System::Activities::ActivityAction&lt;TException&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.ActivityAction&lt;TException&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッチされている例外のハンドラー。</summary>
        <value>アクティビティ操作。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 例外ハンドラーは、<xref:System.Activities.ActivityAction%601> オブジェクトで表されます。  
  
   
  
## Examples  
 <xref:System.Activities.Statements.Catch%601> アクティビティの Action プロパティを割り当てるコード サンプルを次に示します。 この例は、[フローチャート アクティビティを使用して TryCatch でエラーの処理](~/docs/framework/windows-workflow-foundation/samples/fault-handling-in-a-flowchart-activity-using-trycatch.md)サンプルです。  
  
 [!code-csharp[wfs_FlowChartWithFaultHandling#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_flowchartwithfaulthandling/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionType">
      <MemberSignature Language="C#" Value="public override Type ExceptionType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ExceptionType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Statements.Catch`1.ExceptionType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ExceptionType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ExceptionType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Activities.Statements.Catch" /> ブロックが処理している例外の種類。</summary>
        <value>例外の種類。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>