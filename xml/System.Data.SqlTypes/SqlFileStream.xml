<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SqlFileStream.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50516599dd46f28677cc07a02600fa694df7bf95a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0516599dd46f28677cc07a02600fa694df7bf95a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>Exposes SQL Server data that is stored with the FILESTREAM column attribute as a sequence of bytes.</source>
          <target state="translated">バイトのシーケンスとして FILESTREAM 列属性に格納されている SQL Server のデータを公開します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream&gt;</ph> class is used to work with <ph id="ph2">`varbinary(max)`</ph> data stored with the FILESTREAM attribute in a SQL Server 2008 database.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream&gt;</ph>と連携するクラスを使用<ph id="ph2">`varbinary(max)`</ph>SQL Server 2008 データベースに FILESTREAM 属性を持つ格納されているデータ。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>You must install the .NET Framework 3.5 SP1 (or later) to use <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream&gt;</ph> to work with FILESTREAM data.</source>
          <target state="translated">.NET Framework 3.5 SP1 をインストールする必要があります (またはそれ以降) を使用する<ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream&gt;</ph>FILESTREAM データを操作します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>Specifying the FILESTREAM attribute on a <ph id="ph1">`varbinary(max)`</ph> column causes SQL Server to store the data in the local NTFS file system instead of in the database file.</source>
          <target state="translated">FILESTREAM を指定する属性を<ph id="ph1">`varbinary(max)`</ph>列により、SQL Server はローカル NTFS ファイル システムの代わりに、データベース ファイル内にデータを格納します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>Transact-SQL statements provide data manipulation capabilities within the server, and Win32 file system interfaces provide streaming access to the data.</source>
          <target state="translated">TRANSACT-SQL ステートメントは、サーバー内のデータ操作機能を提供し、Win32 ファイル システム インターフェイスは、データへのストリーミング アクセスを提供します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>Individual files stored in a FILESTREAM column cannot be opened directly from the NTFS file system.</source>
          <target state="translated">FILESTREAM 列に格納されている個々 のファイルは、NTFS ファイル システムから直接開くことができません。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>Streaming FILESTREAM data works only in the context of a SQL Server transaction.</source>
          <target state="translated">FILESTREAM データのストリーミングは、SQL Server トランザクションのコンテキストでのみ動作します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream&gt;</ph> class is derived from the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which represents an abstraction of a sequence of bytes from some arbitrary data source such as a file or a block of memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream&gt;</ph>から派生したクラスは、<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>クラスで、ファイルやメモリのブロックなどのいくつかの任意のデータ ソースからのバイト シーケンスを抽象化を表します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>You can read from a FILESTREAM by transferring data from a stream into a data structure such as an array of bytes.</source>
          <target state="translated">ストリームからバイトの配列などのデータ構造にデータを転送することによって、FILESTREAM から読み取ることができます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>You can write to a FILESTREAM by transferring the data from a data structure into a stream.</source>
          <target state="translated">ストリームにデータ構造からデータを転送することによって、FILESTREAM に記述できます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>You can also seek within the stream, which allows you to query and modify data at the current position within the stream.</source>
          <target state="translated">クエリや、ストリーム内の現在位置にあるデータを変更することができます、ストリームでシークすることができますも。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>For conceptual documentation and code examples, see <bpt id="p1">[</bpt>FILESTREAM Data<ept id="p1">](~/docs/framework/data/adonet/sql/filestream-data.md)</ept>.</source>
          <target state="translated">概念説明のドキュメントとコード例では、次を参照してください。 <bpt id="p1">[</bpt>FILESTREAM データ<ept id="p1">](~/docs/framework/data/adonet/sql/filestream-data.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>For documentation about setting up and configuring FILESTREAM data on SQL Server,  see <bpt id="p1">[</bpt>Designing and Implementing FILESTREAM Storage<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=121499)</ept> in SQL Server 2008 Books Online.</source>
          <target state="translated">設定して、SQL Server の FILESTREAM データの構成に関するドキュメントについては、次を参照してください。<bpt id="p1">[</bpt>のデザインと実装の FILESTREAM ストレージ<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=121499)</ept>SQL Server 2008 オンライン ブック。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>The following table lists the code access security (CAS) permissions that all callers in the stack must have to use the <ph id="ph1">`SqlFileStream`</ph> constructors.</source>
          <target state="translated">次の表は、コード アクセス セキュリティ (CAS) アクセス許可を使用するため、スタック内のすべての呼び出し元が必要な<ph id="ph1">`SqlFileStream`</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>File access</source>
          <target state="translated">ファイルへのアクセス</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>Permission</source>
          <target state="translated">アクセス許可</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>Read</source>
          <target state="translated">読み取り</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>Write</source>
          <target state="translated">書き込み</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>ReadWrite</source>
          <target state="translated">ReadWrite</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read&gt;</ph> および <ph id="ph2">&lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write&gt;</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.SqlTypes.SqlFileStream">
          <source>For more information about CAS, see <bpt id="p1">[</bpt>Code Access Security and ADO.NET<ept id="p1">](~/docs/framework/data/adonet/code-access-security.md)</ept>.</source>
          <target state="translated">CA の詳細については、次を参照してください。<bpt id="p1">[</bpt>コード アクセス セキュリティと ADO.NET<ept id="p1">](~/docs/framework/data/adonet/code-access-security.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>The logical path to the file.</source>
          <target state="translated">ファイルへの論理パス。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.</source>
          <target state="translated">テーブル内の基になる FILESTREAM 列で Transact-SQL Pathname 関数を使用して、パスを取得できます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>The transaction context for the <ph id="ph1">&lt;see langword="SqlFileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="SqlFileStream" /&gt;</ph> オブジェクトのトランザクション コンテキスト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.</source>
          <target state="translated">アプリケーションが、GET_FILESTREAM_TRANSACTION_CONTEXT メソッドの呼び出しで返されるバイト配列を返す必要があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>The access mode to use when opening the file.</source>
          <target state="translated">ファイルを開くときに使用するアクセス モード。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>Supported <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> enumeration values are <ph id="ph2">&lt;see cref="F:System.IO.FileAccess.Read" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IO.FileAccess.Write" /&gt;</ph>, and <ph id="ph4">&lt;see cref="F:System.IO.FileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">サポートされている <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 列挙値は <ph id="ph2">&lt;see cref="F:System.IO.FileAccess.Read" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.IO.FileAccess.Write" /&gt;</ph>、および <ph id="ph4">&lt;see cref="F:System.IO.FileAccess.ReadWrite" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>When using <ph id="ph1">&lt;see langword="FileAccess.Read" /&gt;</ph>, the <ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> object can be used to read all of the existing data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="FileAccess.Read" /&gt;</ph> を使用する際には、<ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> オブジェクトを使用して、既存のデータをすべて読み取ることができます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>When using <ph id="ph1">&lt;see langword="FileAccess.Write" /&gt;</ph>, <ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> points to a zero byte file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="FileAccess.Write" /&gt;</ph> を使用する際に、<ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> は 0 バイトのファイルを指します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>Existing data will be overwritten when the object is closed and the transaction is committed.</source>
          <target state="translated">オブジェクトが閉じ、トランザクションがコミットされると、既存のデータが上書きされます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>When using <ph id="ph1">&lt;see langword="FileAccess.ReadWrite" /&gt;</ph>, the <ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> points to a file which has all the existing data in it.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="FileAccess.ReadWrite" /&gt;</ph> を使用する際に、<ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> はすべての既存のデータがあるファイルを指します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>The handle is positioned at the beginning of the file.</source>
          <target state="translated">このファイルの先頭にハンドルが配置されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>You can use one of the <ph id="ph1">&lt;see langword="System.IO" /&gt;</ph><ph id="ph2">&lt;see langword="Seek" /&gt;</ph> methods to move the handle position within the file to write or append new data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="System.IO" /&gt;</ph><ph id="ph2">&lt;see langword="Seek" /&gt;</ph> メソッドの 1 つを使用して、ファイル内でハンドルの位置を移動し、新しいデータを書き込んだり付加したりできます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>If an exception is thrown, any open transactions should be rolled back.</source>
          <target state="translated">例外がスローされた場合、開かれたトランザクション ロールバックするか。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>Otherwise, data loss can occur.</source>
          <target state="translated">それ以外の場合、データ損失が発生することができます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a null reference, or <ph id="ph2">&lt;paramref name="transactionContext" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が null 参照か、<ph id="ph2">&lt;paramref name="transactionContext" /&gt;</ph> が null です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> begins with "<ph id="ph2">\\</ph><ph id="ph3">\\</ph>.<ph id="ph4">\\</ph>", for example "<ph id="ph5">\\</ph><ph id="ph6">\\</ph>.\PHYSICALDRIVE0 ".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は "<ph id="ph2">\\</ph><ph id="ph3">\\</ph>.<ph id="ph4">\\</ph>" で始まります。たとえば、"<ph id="ph5">\\</ph><ph id="ph6">\\</ph>.\PHYSICALDRIVE0 " です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>The handle returned by the call to NTCreateFile is not of type FILE_TYPE_DISK.</source>
          <target state="translated">NTCreateFile に対する呼び出しで返されたハンドルの型が FILE_TYPE_DISK ではありません。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> contains an unsupported value.</source>
          <target state="translated">サポートされていない値が <ph id="ph1">&lt;paramref name="options" /&gt;</ph> に含まれています。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>The file cannot be found.</source>
          <target state="translated">ファイルが見つかりません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>The specified <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as being on an unmapped drive.</source>
          <target state="translated">マップされていないドライブにあるなど、指定された <ph id="ph1">&lt;paramref name="path" /&gt;</ph> が正しくありません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>The access requested is not permitted by the operating system for the specified path.</source>
          <target state="translated">指定されたパスへの要求されたアクセスは、オペレーティング システムによって許可されていません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.</source>
          <target state="translated">これは、書き込みアクセスか読み取り/書き込みアクセスが指定されており、ファイルまたはディレクトリが読み取り専用アクセス用に設定されている場合に発生します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)">
          <source>NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.</source>
          <target state="translated">NtCreateFile は失敗し、エラー コードは ERROR_SHARING_VIOLATION に設定されます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The logical path to the file.</source>
          <target state="translated">ファイルへの論理パス。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.</source>
          <target state="translated">テーブル内の基になる FILESTREAM 列で Transact-SQL Pathname 関数を使用して、パスを取得できます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The transaction context for the <ph id="ph1">&lt;see langword="SqlFileStream" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="SqlFileStream" /&gt;</ph> オブジェクトのトランザクション コンテキスト。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>When set to null, an implicit transaction will be used for the <ph id="ph1">&lt;see langword="SqlFileStream" /&gt;</ph> object.</source>
          <target state="translated">null に設定されている場合、<ph id="ph1">&lt;see langword="SqlFileStream" /&gt;</ph>オブジェクトには暗黙のトランザクションが使用されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.</source>
          <target state="translated">アプリケーションは、GET_FILESTREAM_TRANSACTION_CONTEXT メソッドの呼び出しで返されるバイト配列を返す必要があります。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The access mode to use when opening the file.</source>
          <target state="translated">ファイルを開くときに使用するアクセス モード。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>Supported <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> enumeration values are <ph id="ph2">&lt;see cref="F:System.IO.FileAccess.Read" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IO.FileAccess.Write" /&gt;</ph>, and <ph id="ph4">&lt;see cref="F:System.IO.FileAccess.ReadWrite" /&gt;</ph>.</source>
          <target state="translated">サポートされている <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> 列挙値は <ph id="ph2">&lt;see cref="F:System.IO.FileAccess.Read" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.IO.FileAccess.Write" /&gt;</ph>、および <ph id="ph4">&lt;see cref="F:System.IO.FileAccess.ReadWrite" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>When using <ph id="ph1">&lt;see langword="FileAccess.Read" /&gt;</ph>, the <ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> object can be used to read all of the existing data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="FileAccess.Read" /&gt;</ph> を使用する際には、<ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> オブジェクトを使用して、既存のデータをすべて読み取ることができます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>When using <ph id="ph1">&lt;see langword="FileAccess.Write" /&gt;</ph>, <ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> points to a zero byte file.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="FileAccess.Write" /&gt;</ph> を使用する際に、<ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> は 0 バイトのファイルを指します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>Existing data will be overwritten when the object is closed and the transaction is committed.</source>
          <target state="translated">オブジェクトが閉じ、トランザクションがコミットされると、既存のデータが上書きされます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>When using <ph id="ph1">&lt;see langword="FileAccess.ReadWrite" /&gt;</ph>, the <ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> points to a file which has all the existing data in it.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="FileAccess.ReadWrite" /&gt;</ph> を使用する際に、<ph id="ph2">&lt;see langword="SqlFileStream" /&gt;</ph> はすべての既存のデータがあるファイルを指します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The handle is positioned at the beginning of the file.</source>
          <target state="translated">このファイルの先頭にハンドルが配置されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>You can use one of the <ph id="ph1">&lt;see langword="System.IO" /&gt;</ph><ph id="ph2">&lt;see langword="Seek" /&gt;</ph> methods to move the handle position within the file to write or append new data.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="System.IO" /&gt;</ph><ph id="ph2">&lt;see langword="Seek" /&gt;</ph> メソッドの 1 つを使用して、ファイル内でハンドルの位置を移動し、新しいデータを書き込んだり付加したりできます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>Specifies the option to use while opening the file.</source>
          <target state="translated">ファイルを開く際に使用するオプションを指定します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>Supported <ph id="ph1">&lt;see cref="T:System.IO.FileOptions" /&gt;</ph> values are <ph id="ph2">&lt;see cref="F:System.IO.FileOptions.Asynchronous" /&gt;</ph>, <ph id="ph3">&lt;see cref="F:System.IO.FileOptions.WriteThrough" /&gt;</ph>, <ph id="ph4">&lt;see cref="F:System.IO.FileOptions.SequentialScan" /&gt;</ph>, and <ph id="ph5">&lt;see cref="F:System.IO.FileOptions.RandomAccess" /&gt;</ph>.</source>
          <target state="translated">サポートされる <ph id="ph1">&lt;see cref="T:System.IO.FileOptions" /&gt;</ph> 値は <ph id="ph2">&lt;see cref="F:System.IO.FileOptions.Asynchronous" /&gt;</ph>、<ph id="ph3">&lt;see cref="F:System.IO.FileOptions.WriteThrough" /&gt;</ph>、<ph id="ph4">&lt;see cref="F:System.IO.FileOptions.SequentialScan" /&gt;</ph>、および <ph id="ph5">&lt;see cref="F:System.IO.FileOptions.RandomAccess" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The allocation size to use while creating a file.</source>
          <target state="translated">ファイル作成時に使用する割り当てサイズ。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>If set to 0, the default value is used.</source>
          <target state="translated">0 に設定されている場合、既定値が使用されます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>If an exception is thrown, any open transactions should be rolled back.</source>
          <target state="translated">例外がスローされた場合、開かれたトランザクション ロールバックするか。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>Otherwise, data loss can occur.</source>
          <target state="translated">それ以外の場合、データ損失が発生することができます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is a null reference, or <ph id="ph2">&lt;paramref name="transactionContext" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> が null 参照か、<ph id="ph2">&lt;paramref name="transactionContext" /&gt;</ph> が null です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> is an empty string (""), contains only white space, or contains one or more invalid characters.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="path" /&gt;</ph> begins with "<ph id="ph2">\\</ph><ph id="ph3">\\</ph>.<ph id="ph4">\\</ph>", for example "<ph id="ph5">\\</ph><ph id="ph6">\\</ph>.\PHYSICALDRIVE0 ".</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="path" /&gt;</ph> は "<ph id="ph2">\\</ph><ph id="ph3">\\</ph>.<ph id="ph4">\\</ph>" で始まります。たとえば、"<ph id="ph5">\\</ph><ph id="ph6">\\</ph>.\PHYSICALDRIVE0 " です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The handle returned by call to NTCreateFile is not of type FILE_TYPE_DISK.</source>
          <target state="translated">NTCreateFile に対する呼び出しで返されたハンドルの型が FILE_TYPE_DISK ではありません。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="options" /&gt;</ph> contains an unsupported value.</source>
          <target state="translated">サポートされていない値が <ph id="ph1">&lt;paramref name="options" /&gt;</ph> に含まれています。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The file cannot be found.</source>
          <target state="translated">ファイルが見つかりません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>An I/O error occurred.</source>
          <target state="translated">I/O エラーが発生しました。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">呼び出し元に、必要なアクセス許可がありません。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The specified <ph id="ph1">&lt;paramref name="path" /&gt;</ph> is invalid, such as being on an unmapped drive.</source>
          <target state="translated">マップされていないドライブにあるなど、指定された <ph id="ph1">&lt;paramref name="path" /&gt;</ph> が正しくありません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>The access requested is not permitted by the operating system for the specified path.</source>
          <target state="translated">指定されたパスへの要求されたアクセスは、オペレーティング システムによって許可されていません。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.</source>
          <target state="translated">これは、書き込みアクセスか読み取り/書き込みアクセスが指定されており、ファイルまたはディレクトリが読み取り専用アクセス用に設定されている場合に発生します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)">
          <source>NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.</source>
          <target state="translated">NtCreateFile は失敗し、エラー コードは ERROR_SHARING_VIOLATION に設定されます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to read the data into.</source>
          <target state="translated">データを読み込むバッファー。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin writing data read from the stream.</source>
          <target state="translated">ストリームから読み込んだデータの書き込み開始位置を示す <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to read.</source>
          <target state="translated">読み取る最大バイト数。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An optional asynchronous callback, to be called when the read is complete.</source>
          <target state="translated">読み取り完了時に呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous read request from other requests</source>
          <target state="translated">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous read operation.</source>
          <target state="translated">非同期の読み込み動作を開始します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents the asynchronous read, which could still be pending.</source>
          <target state="translated">非同期の読み込みを表す <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。まだ保留状態の場合もあります。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</ph> property to determine whether the current instance supports reading.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</ph>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Reading data is not supported on the stream.</source>
          <target state="translated">データの読み取り操作は、ストリームではサポートされていません。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to write data from.</source>
          <target state="translated">データの書き込み元となるバッファー。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> from which to begin writing.</source>
          <target state="translated">書き込みの開始位置を示す <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内のバイト オフセット。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to write.</source>
          <target state="translated">書き込む最大バイト数。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An optional asynchronous callback, to be called when the write is complete.</source>
          <target state="translated">書き込みの完了時に呼び出されるオプションの非同期コールバック。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-provided object that distinguishes this particular asynchronous write request from other requests.</source>
          <target state="translated">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous write operation.</source>
          <target state="translated">非同期の書き込み操作を開始します。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that represents the asynchronous write, which could still be pending.</source>
          <target state="translated">非同期の書き込みを表す <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>。まだ保留状態の場合もあります。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports writing.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;</ph>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Writing data is not supported on the stream.</source>
          <target state="translated">データの書き込み操作は、ストリームではサポートされていません。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlFileStream.CanRead">
          <source>Gets a value indicating whether the current stream supports reading.</source>
          <target state="translated">現在のストリームが読み取りをサポートしているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlFileStream.CanRead">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stream supports reading; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のストリームが読み込みをサポートしている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlFileStream.CanSeek">
          <source>Gets a value indicating whether the current stream supports seeking.</source>
          <target state="translated">現在のストリームがシークをサポートしているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlFileStream.CanSeek">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stream supports seeking; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のストリームがシークをサポートしている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlFileStream.CanTimeout">
          <source>Gets a value indicating whether the current stream can time out.</source>
          <target state="translated">現在のストリームがタイム アウトになる可能性があるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlFileStream.CanTimeout">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stream can time out; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のストリームがタイム アウトできる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlFileStream.CanWrite">
          <source>Gets a value indicating whether the current stream supports writing.</source>
          <target state="translated">現在のストリームが書き込みをサポートしているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlFileStream.CanWrite">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current stream supports writing; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のストリームが書き込みをサポートしている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)">
          <source>The reference to the pending asynchronous request to finish.</source>
          <target state="translated">終了させる保留状態の非同期リクエストへの参照。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)">
          <source>Waits for the pending asynchronous read to complete.</source>
          <target state="translated">保留中の非同期読み取りが完了するまで待機します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)">
          <source>The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</source>
          <target state="translated">ストリームから読み取ったバイト数 (0 ～要求したバイト数の間の数値)。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)">
          <source>Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</source>
          <target state="translated">ゼロ (0) が返されるのは、ストリームの末尾で読み取ろうとしたときだけです。それ以外の場合は、少なくとも 1 バイトが読み込み可能になるまでブロックします。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object did not come from the corresponding <ph id="ph2">&lt;see langword="BeginRead" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> オブジェクトが、対応する <ph id="ph2">&lt;see langword="BeginRead" /&gt;</ph> メソッドからのものではありませんでした。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)">
          <source>A reference to the outstanding asynchronous I/O request.</source>
          <target state="translated">保留状態の非同期 I/O リクエストへの参照。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)">
          <source>Ends an asynchronous write operation.</source>
          <target state="translated">非同期書き込み操作を終了します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object did not come from the corresponding <ph id="ph2">&lt;see langword="BeginWrite" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> オブジェクトが、対応する <ph id="ph2">&lt;see langword="BeginWrite" /&gt;</ph> メソッドからのものではありませんでした。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Finalize">
          <source>Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph>.</source>
          <target state="translated">ガベージ コレクターが <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> を再利用するときに、リソースの解放およびその他のクリーンアップ操作を確実に実行するようにします。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Flush">
          <source>clears all buffers for this stream and causes any buffered data to be written to the underlying device.</source>
          <target state="translated">ストリームに対応するすべてのバッファーをクリアし、バッファー内のデータを基になるデバイスに書き込みます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlFileStream.Length">
          <source>Gets a value indicating the length of the current stream in bytes.</source>
          <target state="translated">バイト単位の現在のストリームの長さを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlFileStream.Length">
          <source>An <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> indicating the length of the current stream in bytes.</source>
          <target state="translated">現在のストリームの長さをバイト単位で示す <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlFileStream.Name">
          <source>Gets the logical path of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> passed to the constructor.</source>
          <target state="translated">コンストラクターに渡された <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> の論理パスを取得します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlFileStream.Name">
          <source>A string value indicating the name of the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> の名前を示す文字列値。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlFileStream.Position">
          <source>Gets or sets the position within the current stream.</source>
          <target state="translated">現在のストリーム内の位置を取得または設定します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlFileStream.Position">
          <source>The current position within the <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> 内の現在の位置。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">バイト配列。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</source>
          <target state="translated">このメソッドが返されるとき、バッファーは現在のソースから読み取ったバイトにより置き換えられた、オフセットから (オフセット + データの個数 - 1) の間の値を持つ指定されたバイト配列を含みます。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</source>
          <target state="translated">現在のストリームから読み取ったデータの格納を開始する位置を示す バッファ内の0 から始まるバイト オフセット。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The maximum number of bytes to be read from the current stream.</source>
          <target state="translated">現在のストリームから読み取る最大バイト数。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</source>
          <target state="translated">現在のストリームからバイト シーケンスを読み取り、読み取ったバイト数だけストリーム内の位置を進めます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The total number of bytes read into the buffer.</source>
          <target state="translated">バッファーに読み取られた合計バイト数。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</source>
          <target state="translated">要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</ph> property to determine whether the current instance supports writing.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</ph>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)">
          <source>The object does not support reading of data.</source>
          <target state="translated">このオブジェクトはデータの読み取りをサポートしていません。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.ReadByte">
          <source>Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</source>
          <target state="translated">ストリームから 1 バイトを読み取り、ストリーム内の位置を 1 バイト進めます。ストリームの末尾の場合は -1 を返します。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.ReadByte">
          <source>The unsigned byte cast to an <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>, or -1 if at the end of the stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.ReadByte">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</ph> property to determine whether the current instance supports reading.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</ph>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.ReadByte">
          <source>The object does not support reading of data.</source>
          <target state="translated">このオブジェクトはデータの読み取りをサポートしていません。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlFileStream.ReadTimeout">
          <source>Gets or sets a value, in milliseconds, that determines how long the stream will attempt to read before timing out.</source>
          <target state="translated">ストリームがタイムアウト前に読み取りを試みる期間を決定する値 (ミリ秒単位) を取得または設定します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlFileStream.ReadTimeout">
          <source>A value, in milliseconds, that determines how long the stream will attempt to read before timing out.</source>
          <target state="translated">ストリームがタイムアウト前に読み取りを試みる期間を決定する値 (ミリ秒単位)。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A byte offset relative to the <bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept> parameter</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>origin<ept id="p1">&lt;/c&gt;</ept> パラメーターを基準とするバイト オフセット。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> indicating the reference point used to obtain the new position</source>
          <target state="translated">新しい位置を取得するために使用する参照ポイントを示す <ph id="ph1">&lt;see cref="T:System.IO.SeekOrigin" /&gt;</ph> 型の値。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>Sets the position within the current stream.</source>
          <target state="translated">現在のストリーム内の位置を設定します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <source>The new position within the current stream.</source>
          <target state="translated">現在のストリーム内の新しい位置。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)">
          <source>The desired length of the current stream in bytes.</source>
          <target state="translated">現在のストリームの希望の長さ (バイト数)。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)">
          <source>Sets the length of the current stream.</source>
          <target state="translated">現在のストリームの長さを設定します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</ph> property to determine whether the current instance supports reading.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A&gt;</ph>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)">
          <source>The object does not support reading of data.</source>
          <target state="translated">このオブジェクトはデータの読み取りをサポートしていません。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlFileStream.TransactionContext">
          <source>Gets or sets the transaction context for this <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> オブジェクトのトランザクション コンテキストを取得または設定します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlFileStream.TransactionContext">
          <source>The <ph id="ph1">&lt;paramref name="transactionContext" /&gt;</ph> array that was passed to the constructor for this <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> object.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.Data.SqlTypes.SqlFileStream" /&gt;</ph> オブジェクトのコンストラクターに渡された <ph id="ph1">&lt;paramref name="transactionContext" /&gt;</ph> 配列。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>An array of bytes.</source>
          <target state="translated">バイト配列。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>This method copies <bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> bytes from <bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> to the current stream.</source>
          <target state="translated">このメソッドは、<bpt id="p2">&lt;c&gt;</bpt>buffer<ept id="p2">&lt;/c&gt;</ept> から現在のストリームに、<bpt id="p1">&lt;c&gt;</bpt>count<ept id="p1">&lt;/c&gt;</ept> バイト数だけコピーします。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The zero-based byte offset in <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> at which to begin copying bytes to the current stream.</source>
          <target state="translated">現在のストリームへのバイトのコピーを開始する位置を示す <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> 内のバイト オフセット。インデックス番号は 0 から始まります。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes to be written to the current stream.</source>
          <target state="translated">現在のストリームに書き込むバイト数。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</source>
          <target state="translated">現在のストリームにバイト シーケンスを書き込み、書き込んだバイト数だけストリーム内の現在位置を進めます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports writing.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;</ph>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)">
          <source>The object does not support writing of data.</source>
          <target state="translated">このオブジェクトにおいて、データの書き込みはサポートされていません。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)">
          <source>The byte to write to the stream.</source>
          <target state="translated">ストリームに書き込むバイト。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)">
          <source>Writes a byte to the current position in the stream and advances the position within the stream by one byte.</source>
          <target state="translated">ストリームの現在位置にバイトを書き込み、ストリームの位置を 1 バイトだけ進めます。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;</ph> property to determine whether the current instance supports writing.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A&gt;</ph>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)">
          <source>The object does not support writing of data.</source>
          <target state="translated">このオブジェクトにおいて、データの書き込みはサポートされていません。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Data.SqlTypes.SqlFileStream.WriteTimeout">
          <source>Gets or sets a value, in milliseconds, that determines how long the stream will attempt to write before timing out.</source>
          <target state="translated">ストリームがタイムアウト前に書き込みを試行する期間を決定する値 (ミリ秒単位) を取得または設定します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.SqlTypes.SqlFileStream.WriteTimeout">
          <source>A value, in milliseconds, that determines how long the stream will attempt to write before timing out.</source>
          <target state="translated">ストリームがタイムアウト前に書き込みを試行する期間を決定する値 (ミリ秒単位)。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>