<Type Name="SqlFileStream" FullName="System.Data.SqlTypes.SqlFileStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e46b76e050d11343db645b04fa914874f1c416ff" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39825573" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlFileStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlFileStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlTypes.SqlFileStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlFileStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlFileStream sealed : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type SqlFileStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="94e37-101">バイトのシーケンスとして FILESTREAM 列属性に格納されている SQL Server のデータを公開します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="94e37-101">Exposes SQL Server data that is stored with the FILESTREAM column attribute as a sequence of bytes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-102"><xref:System.Data.SqlTypes.SqlFileStream>を使用するクラスが使用される`varbinary(max)`SQL Server 2008 データベースで FILESTREAM 属性を持つ格納されているデータ。</span><span class="sxs-lookup"><span data-stu-id="94e37-102">The <xref:System.Data.SqlTypes.SqlFileStream> class is used to work with `varbinary(max)` data stored with the FILESTREAM attribute in a SQL Server 2008 database.</span></span> <span data-ttu-id="94e37-103">.NET Framework 3.5 SP1 をインストールする必要があります (またはそれ以降) を使用する<xref:System.Data.SqlTypes.SqlFileStream>FILESTREAM データを操作します。</span><span class="sxs-lookup"><span data-stu-id="94e37-103">You must install the .NET Framework 3.5 SP1 (or later) to use <xref:System.Data.SqlTypes.SqlFileStream> to work with FILESTREAM data.</span></span>  
  
 <span data-ttu-id="94e37-104">FILESTREAM を指定する属性を`varbinary(max)`列により、ローカル NTFS ファイル システムの代わりに、データベース ファイル内でデータを格納する SQL Server。</span><span class="sxs-lookup"><span data-stu-id="94e37-104">Specifying the FILESTREAM attribute on a `varbinary(max)` column causes SQL Server to store the data in the local NTFS file system instead of in the database file.</span></span> <span data-ttu-id="94e37-105">TRANSACT-SQL ステートメントは、サーバー内のデータ操作機能を提供し、Win32 ファイル システム インターフェイスは、データへのストリーミングを提供します。</span><span class="sxs-lookup"><span data-stu-id="94e37-105">Transact-SQL statements provide data manipulation capabilities within the server, and Win32 file system interfaces provide streaming access to the data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94e37-106">FILESTREAM 列に格納されている個々 のファイルは、NTFS ファイル システムから直接開くことができません。</span><span class="sxs-lookup"><span data-stu-id="94e37-106">Individual files stored in a FILESTREAM column cannot be opened directly from the NTFS file system.</span></span> <span data-ttu-id="94e37-107">FILESTREAM データのストリーミングは、SQL Server トランザクションのコンテキストでのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="94e37-107">Streaming FILESTREAM data works only in the context of a SQL Server transaction.</span></span>  
  
 <span data-ttu-id="94e37-108"><xref:System.Data.SqlTypes.SqlFileStream>から派生したクラスは、<xref:System.IO.Stream>クラスで、ファイルやメモリのブロックなどのいくつかの任意のデータ ソースからのバイトのシーケンスの抽象化を表します。</span><span class="sxs-lookup"><span data-stu-id="94e37-108">The <xref:System.Data.SqlTypes.SqlFileStream> class is derived from the <xref:System.IO.Stream> class, which represents an abstraction of a sequence of bytes from some arbitrary data source such as a file or a block of memory.</span></span> <span data-ttu-id="94e37-109">ストリームからバイトの配列などのデータ構造にデータを転送することによって、FILESTREAM から読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="94e37-109">You can read from a FILESTREAM by transferring data from a stream into a data structure such as an array of bytes.</span></span> <span data-ttu-id="94e37-110">ストリームにデータ構造からデータを転送することによって、FILESTREAM に記述できます。</span><span class="sxs-lookup"><span data-stu-id="94e37-110">You can write to a FILESTREAM by transferring the data from a data structure into a stream.</span></span> <span data-ttu-id="94e37-111">クエリおよびデータ ストリームの現在の位置を変更することができます、ストリーム内でシークすることもできます。</span><span class="sxs-lookup"><span data-stu-id="94e37-111">You can also seek within the stream, which allows you to query and modify data at the current position within the stream.</span></span>  
  
 <span data-ttu-id="94e37-112">概念説明のドキュメントとコード例では、次を参照してください。 [FILESTREAM データ](~/docs/framework/data/adonet/sql/filestream-data.md)します。</span><span class="sxs-lookup"><span data-stu-id="94e37-112">For conceptual documentation and code examples, see [FILESTREAM Data](~/docs/framework/data/adonet/sql/filestream-data.md).</span></span>  
  
 <span data-ttu-id="94e37-113">ドキュメントを設定して、SQL Server の FILESTREAM データの構成については、次を参照してください。[のデザインと実装の FILESTREAM ストレージ](http://go.microsoft.com/fwlink/?LinkId=121499)SQL Server 2008 オンライン ブックの「します。</span><span class="sxs-lookup"><span data-stu-id="94e37-113">For documentation about setting up and configuring FILESTREAM data on SQL Server,  see [Designing and Implementing FILESTREAM Storage](http://go.microsoft.com/fwlink/?LinkId=121499) in SQL Server 2008 Books Online.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-114">
            <see cref="T:System.Data.SqlTypes.SqlFileStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-114">Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlFileStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-115">次の表に、使用するスタック内のすべての呼び出し元が必要なコード アクセス セキュリティ (CAS) のアクセス許可、`SqlFileStream`コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="94e37-115">The following table lists the code access security (CAS) permissions that all callers in the stack must have to use the `SqlFileStream` constructors.</span></span>  
  
|<span data-ttu-id="94e37-116">ファイルへのアクセス</span><span class="sxs-lookup"><span data-stu-id="94e37-116">File access</span></span>|<span data-ttu-id="94e37-117">アクセス許可</span><span class="sxs-lookup"><span data-stu-id="94e37-117">Permission</span></span>|  
|-----------------|----------------|  
|<span data-ttu-id="94e37-118">読み取り</span><span class="sxs-lookup"><span data-stu-id="94e37-118">Read</span></span>|<xref:System.Security.Permissions.FileIOPermissionAccess.Read>|  
|<span data-ttu-id="94e37-119">Write</span><span class="sxs-lookup"><span data-stu-id="94e37-119">Write</span></span>|<xref:System.Security.Permissions.FileIOPermissionAccess.Write>|  
|<span data-ttu-id="94e37-120">ReadWrite</span><span class="sxs-lookup"><span data-stu-id="94e37-120">ReadWrite</span></span>|<span data-ttu-id="94e37-121"><xref:System.Security.Permissions.FileIOPermissionAccess.Read> および <xref:System.Security.Permissions.FileIOPermissionAccess.Write></span><span class="sxs-lookup"><span data-stu-id="94e37-121"><xref:System.Security.Permissions.FileIOPermissionAccess.Read> and <xref:System.Security.Permissions.FileIOPermissionAccess.Write></span></span>|  
  
 <span data-ttu-id="94e37-122">CA の詳細については、次を参照してください。[コード アクセス セキュリティと ADO.NET](~/docs/framework/data/adonet/code-access-security.md)します。</span><span class="sxs-lookup"><span data-stu-id="94e37-122">For more information about CAS, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, unsigned int8[] transactionContext, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, transactionContext As Byte(), access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlFileStream(System::String ^ path, cli::array &lt;System::Byte&gt; ^ transactionContext, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlTypes.SqlFileStream : string * byte[] * System.IO.FileAccess -&gt; System.Data.SqlTypes.SqlFileStream" Usage="new System.Data.SqlTypes.SqlFileStream (path, transactionContext, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="transactionContext" Type="System.Byte[]" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="94e37-123">ファイルへの論理パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-123">The logical path to the file.</span>
          </span>
          <span data-ttu-id="94e37-124">テーブル内の基になる FILESTREAM 列で Transact-SQL Pathname 関数を使用して、パスを取得できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-124">The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.</span>
          </span>
        </param>
        <param name="transactionContext">
          <span data-ttu-id="94e37-125">
            <see langword="SqlFileStream" /> オブジェクトのトランザクション コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-125">The transaction context for the <see langword="SqlFileStream" /> object.</span>
          </span>
          <span data-ttu-id="94e37-126">アプリケーションが、GET_FILESTREAM_TRANSACTION_CONTEXT メソッドの呼び出しで返されるバイト配列を返す必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-126">Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="94e37-127">ファイルを開くときに使用するアクセス モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-127">The access mode to use when opening the file.</span>
          </span>
          <span data-ttu-id="94e37-128">サポートされている <see cref="T:System.IO.FileAccess" /> 列挙値は <see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" />、および <see cref="F:System.IO.FileAccess.ReadWrite" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-128">Supported <see cref="T:System.IO.FileAccess" /> enumeration values are <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, and <see cref="F:System.IO.FileAccess.ReadWrite" />.</span>
          </span>
          <span data-ttu-id="94e37-129">
            <see langword="FileAccess.Read" /> を使用する際には、<see langword="SqlFileStream" /> オブジェクトを使用して、既存のデータをすべて読み取ることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-129">When using <see langword="FileAccess.Read" />, the <see langword="SqlFileStream" /> object can be used to read all of the existing data.</span>
          </span>
          <span data-ttu-id="94e37-130">
            <see langword="FileAccess.Write" /> を使用する際に、<see langword="SqlFileStream" /> は 0 バイトのファイルを指します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-130">When using <see langword="FileAccess.Write" />, <see langword="SqlFileStream" /> points to a zero byte file.</span>
          </span>
          <span data-ttu-id="94e37-131">オブジェクトが閉じ、トランザクションがコミットされると、既存のデータが上書きされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-131">Existing data will be overwritten when the object is closed and the transaction is committed.</span>
          </span>
          <span data-ttu-id="94e37-132">
            <see langword="FileAccess.ReadWrite" /> を使用する際に、<see langword="SqlFileStream" /> はすべての既存のデータがあるファイルを指します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-132">When using <see langword="FileAccess.ReadWrite" />, the <see langword="SqlFileStream" /> points to a file which has all the existing data in it.</span>
          </span>
          <span data-ttu-id="94e37-133">このファイルの先頭にハンドルが配置されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-133">The handle is positioned at the beginning of the file.</span>
          </span>
          <span data-ttu-id="94e37-134">
            <see langword="System.IO" />
            <see langword="Seek" /> メソッドの 1 つを使用して、ファイル内でハンドルの位置を移動し、新しいデータを書き込んだり付加したりできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-134">You can use one of the <see langword="System.IO" /><see langword="Seek" /> methods to move the handle position within the file to write or append new data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-135">
            <see cref="T:System.Data.SqlTypes.SqlFileStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-135">Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlFileStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-136">例外がスローされた場合、開いているトランザクション ロールバックするか。</span><span class="sxs-lookup"><span data-stu-id="94e37-136">If an exception is thrown, any open transactions should be rolled back.</span></span> <span data-ttu-id="94e37-137">それ以外の場合、データ損失が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="94e37-137">Otherwise, data loss can occur.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="94e37-138">
            <paramref name="path" /> が null 参照か、<paramref name="transactionContext" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-138">
              <paramref name="path" /> is a null reference, or <paramref name="transactionContext" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94e37-139">
            <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-139">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span>
          </span>
          <span data-ttu-id="94e37-140">
            <paramref name="path" /> は "\\\\.\\" で始まります。たとえば、"\\\\.\PHYSICALDRIVE0 " です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-140">
              <paramref name="path" /> begins with "\\\\.\\", for example "\\\\.\PHYSICALDRIVE0 ".</span>
          </span>
          <span data-ttu-id="94e37-141">NTCreateFile に対する呼び出しで返されたハンドルの型が FILE_TYPE_DISK ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-141">The handle returned by the call to NTCreateFile is not of type FILE_TYPE_DISK.</span>
          </span>
          <span data-ttu-id="94e37-142">サポートされていない値が <paramref name="options" /> に含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-142">
              <paramref name="options" /> contains an unsupported value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="94e37-143">ファイルが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-143">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="94e37-144">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-144">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="94e37-145">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-145">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="94e37-146">マップされていないドライブにあるなど、指定された <paramref name="path" /> が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-146">The specified <paramref name="path" /> is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="94e37-147">指定されたパスへの要求されたアクセスは、オペレーティング システムによって許可されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-147">The access requested is not permitted by the operating system for the specified path.</span>
          </span>
          <span data-ttu-id="94e37-148">これは、書き込みアクセスか読み取り/書き込みアクセスが指定されており、ファイルまたはディレクトリが読み取り専用アクセス用に設定されている場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-148">This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="94e37-149">NtCreateFile は失敗し、エラー コードは ERROR_SHARING_VIOLATION に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-149">NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access, System.IO.FileOptions options, long allocationSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, unsigned int8[] transactionContext, valuetype System.IO.FileAccess access, valuetype System.IO.FileOptions options, int64 allocationSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, transactionContext As Byte(), access As FileAccess, options As FileOptions, allocationSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlFileStream(System::String ^ path, cli::array &lt;System::Byte&gt; ^ transactionContext, System::IO::FileAccess access, System::IO::FileOptions options, long allocationSize);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlTypes.SqlFileStream : string * byte[] * System.IO.FileAccess * System.IO.FileOptions * int64 -&gt; System.Data.SqlTypes.SqlFileStream" Usage="new System.Data.SqlTypes.SqlFileStream (path, transactionContext, access, options, allocationSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="transactionContext" Type="System.Byte[]" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="options" Type="System.IO.FileOptions" />
        <Parameter Name="allocationSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="94e37-150">ファイルへの論理パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-150">The logical path to the file.</span>
          </span>
          <span data-ttu-id="94e37-151">テーブル内の基になる FILESTREAM 列で Transact-SQL Pathname 関数を使用して、パスを取得できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-151">The path can be retrieved by using the Transact-SQL Pathname function on the underlying FILESTREAM column in the table.</span>
          </span>
        </param>
        <param name="transactionContext">
          <span data-ttu-id="94e37-152">
            <see langword="SqlFileStream" /> オブジェクトのトランザクション コンテキスト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-152">The transaction context for the <see langword="SqlFileStream" /> object.</span>
          </span>
          <span data-ttu-id="94e37-153">null に設定されている場合、<see langword="SqlFileStream" />オブジェクトには暗黙のトランザクションが使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-153">When set to null, an implicit transaction will be used for the <see langword="SqlFileStream" /> object.</span>
          </span>
          <span data-ttu-id="94e37-154">アプリケーションは、GET_FILESTREAM_TRANSACTION_CONTEXT メソッドの呼び出しで返されるバイト配列を返す必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-154">Applications should return the byte array returned by calling the GET_FILESTREAM_TRANSACTION_CONTEXT method.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="94e37-155">ファイルを開くときに使用するアクセス モード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-155">The access mode to use when opening the file.</span>
          </span>
          <span data-ttu-id="94e37-156">サポートされている <see cref="T:System.IO.FileAccess" /> 列挙値は <see cref="F:System.IO.FileAccess.Read" />、<see cref="F:System.IO.FileAccess.Write" />、および <see cref="F:System.IO.FileAccess.ReadWrite" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-156">Supported <see cref="T:System.IO.FileAccess" /> enumeration values are <see cref="F:System.IO.FileAccess.Read" />, <see cref="F:System.IO.FileAccess.Write" />, and <see cref="F:System.IO.FileAccess.ReadWrite" />.</span>
          </span>
          <span data-ttu-id="94e37-157">
            <see langword="FileAccess.Read" /> を使用する際には、<see langword="SqlFileStream" /> オブジェクトを使用して、既存のデータをすべて読み取ることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-157">When using <see langword="FileAccess.Read" />, the <see langword="SqlFileStream" /> object can be used to read all of the existing data.</span>
          </span>
          <span data-ttu-id="94e37-158">
            <see langword="FileAccess.Write" /> を使用する際に、<see langword="SqlFileStream" /> は 0 バイトのファイルを指します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-158">When using <see langword="FileAccess.Write" />, <see langword="SqlFileStream" /> points to a zero byte file.</span>
          </span>
          <span data-ttu-id="94e37-159">オブジェクトが閉じ、トランザクションがコミットされると、既存のデータが上書きされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-159">Existing data will be overwritten when the object is closed and the transaction is committed.</span>
          </span>
          <span data-ttu-id="94e37-160">
            <see langword="FileAccess.ReadWrite" /> を使用する際に、<see langword="SqlFileStream" /> はすべての既存のデータがあるファイルを指します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-160">When using <see langword="FileAccess.ReadWrite" />, the <see langword="SqlFileStream" /> points to a file which has all the existing data in it.</span>
          </span>
          <span data-ttu-id="94e37-161">このファイルの先頭にハンドルが配置されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-161">The handle is positioned at the beginning of the file.</span>
          </span>
          <span data-ttu-id="94e37-162">
            <see langword="System.IO" />
            <see langword="Seek" /> メソッドの 1 つを使用して、ファイル内でハンドルの位置を移動し、新しいデータを書き込んだり付加したりできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-162">You can use one of the <see langword="System.IO" /><see langword="Seek" /> methods to move the handle position within the file to write or append new data.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="94e37-163">ファイルを開く際に使用するオプションを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-163">Specifies the option to use while opening the file.</span>
          </span>
          <span data-ttu-id="94e37-164">サポートされる <see cref="T:System.IO.FileOptions" /> 値は <see cref="F:System.IO.FileOptions.Asynchronous" />、<see cref="F:System.IO.FileOptions.WriteThrough" />、<see cref="F:System.IO.FileOptions.SequentialScan" />、および <see cref="F:System.IO.FileOptions.RandomAccess" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-164">Supported <see cref="T:System.IO.FileOptions" /> values are <see cref="F:System.IO.FileOptions.Asynchronous" />, <see cref="F:System.IO.FileOptions.WriteThrough" />, <see cref="F:System.IO.FileOptions.SequentialScan" />, and <see cref="F:System.IO.FileOptions.RandomAccess" />.</span>
          </span>
        </param>
        <param name="allocationSize">
          <span data-ttu-id="94e37-165">ファイル作成時に使用する割り当てサイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-165">The allocation size to use while creating a file.</span>
          </span>
          <span data-ttu-id="94e37-166">0 に設定されている場合、既定値が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-166">If set to 0, the default value is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-167">
            <see cref="T:System.Data.SqlTypes.SqlFileStream" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-167">Initializes a new instance of the <see cref="T:System.Data.SqlTypes.SqlFileStream" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-168">例外がスローされた場合、開いているトランザクション ロールバックするか。</span><span class="sxs-lookup"><span data-stu-id="94e37-168">If an exception is thrown, any open transactions should be rolled back.</span></span> <span data-ttu-id="94e37-169">それ以外の場合、データ損失が発生することができます。</span><span class="sxs-lookup"><span data-stu-id="94e37-169">Otherwise, data loss can occur.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="94e37-170">
            <paramref name="path" /> が null 参照か、<paramref name="transactionContext" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-170">
              <paramref name="path" /> is a null reference, or <paramref name="transactionContext" /> is null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="94e37-171">
            <paramref name="path" /> は空の文字列 ("") であるか、空白のみで構成されているか、または 1 つ以上の正しくない文字を含んでいます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-171">
              <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters.</span>
          </span>
          <span data-ttu-id="94e37-172">
            <paramref name="path" /> は "\\\\.\\" で始まります。たとえば、"\\\\.\PHYSICALDRIVE0 " です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-172">
              <paramref name="path" /> begins with "\\\\.\\", for example "\\\\.\PHYSICALDRIVE0 ".</span>
          </span>
          <span data-ttu-id="94e37-173">NTCreateFile に対する呼び出しで返されたハンドルの型が FILE_TYPE_DISK ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-173">The handle returned by call to NTCreateFile is not of type FILE_TYPE_DISK.</span>
          </span>
          <span data-ttu-id="94e37-174">サポートされていない値が <paramref name="options" /> に含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-174">
              <paramref name="options" /> contains an unsupported value.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="94e37-175">ファイルが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-175">The file cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="94e37-176">I/O エラーが発生しました。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-176">An I/O error occurred.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="94e37-177">呼び出し元に、必要なアクセス許可がありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-177">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="94e37-178">マップされていないドライブにあるなど、指定された <paramref name="path" /> が正しくありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-178">The specified <paramref name="path" /> is invalid, such as being on an unmapped drive.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="94e37-179">指定されたパスへの要求されたアクセスは、オペレーティング システムによって許可されていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-179">The access requested is not permitted by the operating system for the specified path.</span>
          </span>
          <span data-ttu-id="94e37-180">これは、書き込みアクセスか読み取り/書き込みアクセスが指定されており、ファイルまたはディレクトリが読み取り専用アクセス用に設定されている場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-180">This occurs when Write or ReadWrite access is specified, and the file or directory is set for read-only access.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="94e37-181">NtCreateFile は失敗し、エラー コードは ERROR_SHARING_VIOLATION に設定されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-181">NtCreateFile fails with error code set to ERROR_SHARING_VIOLATION.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlFileStream.BeginRead (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="94e37-182">データを読み込むバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-182">The buffer to read the data into.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="94e37-183">ストリームから読み込んだデータの書き込み開始位置を示す <c>buffer</c> 内のバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-183">The byte offset in <c>buffer</c> at which to begin writing data read from the stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="94e37-184">読み取る最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-184">The maximum number of bytes to read.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="94e37-185">読み取り完了時に呼び出されるオプションの非同期コールバック。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-185">An optional asynchronous callback, to be called when the read is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="94e37-186">この特定の非同期読み取り要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-186">A user-provided object that distinguishes this particular asynchronous read request from other requests</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-187">非同期の読み込み動作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-187">Begins an asynchronous read operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94e37-188">非同期の読み込みを表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-188">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous read, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-189">使用して、<xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="94e37-189">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="94e37-190">データの読み取り操作は、ストリームではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-190">Reading data is not supported on the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlFileStream.BeginWrite (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="94e37-191">データの書き込み元となるバッファー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-191">The buffer to write data from.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="94e37-192">書き込みの開始位置を示す <c>buffer</c> 内のバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-192">The byte offset in <c>buffer</c> from which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="94e37-193">書き込む最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-193">The maximum number of bytes to write.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="94e37-194">書き込みの完了時に呼び出されるオプションの非同期コールバック。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-194">An optional asynchronous callback, to be called when the write is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="94e37-195">この特定の非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-195">A user-provided object that distinguishes this particular asynchronous write request from other requests.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-196">非同期の書き込み操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-196">Begins an asynchronous write operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94e37-197">非同期の書き込みを表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-197">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous write, which could still be pending.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-198">使用して、<xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="94e37-198">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="94e37-199">データの書き込み操作は、ストリームではサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-199">Writing data is not supported on the stream.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-200">現在のストリームが読み取りをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-200">Gets a value indicating whether the current stream supports reading.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94e37-201">現在のストリームが読み込みをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-201">
              <see langword="true" /> if the current stream supports reading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-202">現在のストリームがシークをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-202">Gets a value indicating whether the current stream supports seeking.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94e37-203">現在のストリームがシークをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-203">
              <see langword="true" /> if the current stream supports seeking; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-204">現在のストリームがタイム アウトになる可能性があるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-204">Gets a value indicating whether the current stream can time out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94e37-205">現在のストリームがタイム アウトできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-205">
              <see langword="true" /> if the current stream can time out; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.SqlTypes.SqlFileStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-206">現在のストリームが書き込みをサポートしているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-206">Gets a value indicating whether the current stream supports writing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94e37-207">現在のストリームが書き込みをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-207">
              <see langword="true" /> if the current stream supports writing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sqlFileStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="sqlFileStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="94e37-208">終了させる保留状態の非同期リクエストへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-208">The reference to the pending asynchronous request to finish.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-209">保留中の非同期読み取りが完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-209">Waits for the pending asynchronous read to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94e37-210">ストリームから読み取ったバイト数 (0 ～要求したバイト数の間の数値)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-210">The number of bytes read from the stream, between zero (0) and the number of bytes you requested.</span>
          </span>
          <span data-ttu-id="94e37-211">ゼロ (0) が返されるのは、ストリームの末尾で読み取ろうとしたときだけです。それ以外の場合は、少なくとも 1 バイトが読み込み可能になるまでブロックします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-211">Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="94e37-212">
            <see cref="T:System.IAsyncResult" /> オブジェクトが、対応する <see langword="BeginRead" /> メソッドからのものではありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-212">The <see cref="T:System.IAsyncResult" /> object did not come from the corresponding <see langword="BeginRead" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="sqlFileStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="94e37-213">保留状態の非同期 I/O リクエストへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-213">A reference to the outstanding asynchronous I/O request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-214">非同期書き込み操作を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-214">Ends an asynchronous write operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="94e37-215">
            <see cref="T:System.IAsyncResult" /> オブジェクトが、対応する <see langword="BeginWrite" /> メソッドからのものではありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-215">The <see cref="T:System.IAsyncResult" /> object did not come from the corresponding <see langword="BeginWrite" /> method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SqlFileStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SqlFileStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="sqlFileStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94e37-216">ガベージ コレクターが <see cref="T:System.Data.SqlTypes.SqlFileStream" /> を再利用するときに、リソースの解放およびその他のクリーンアップ操作を確実に実行するようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-216">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="sqlFileStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94e37-217">ストリームに対応するすべてのバッファーをクリアし、バッファー内のデータを基になるデバイスに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-217">clears all buffers for this stream and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.SqlTypes.SqlFileStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-218">バイト単位の現在のストリームの長さを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-218">Gets a value indicating the length of the current stream in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94e37-219">現在のストリームの長さをバイト単位で示す <see cref="T:System.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-219">An <see cref="T:System.Int64" /> indicating the length of the current stream in bytes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Data.SqlTypes.SqlFileStream.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-220">コンストラクターに渡された <see cref="T:System.Data.SqlTypes.SqlFileStream" /> の論理パスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-220">Gets the logical path of the <see cref="T:System.Data.SqlTypes.SqlFileStream" /> passed to the constructor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94e37-221">
            <see cref="T:System.Data.SqlTypes.SqlFileStream" /> の名前を示す文字列値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-221">A string value indicating the name of the <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.SqlTypes.SqlFileStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-222">現在のストリーム内の位置を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-222">Gets or sets the position within the current stream.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94e37-223">
            <see cref="T:System.Data.SqlTypes.SqlFileStream" /> 内の現在の位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-223">The current position within the <see cref="T:System.Data.SqlTypes.SqlFileStream" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="sqlFileStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="94e37-224">バイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-224">An array of bytes.</span>
          </span>
          <span data-ttu-id="94e37-225">このメソッドが返されるとき、バッファーは現在のソースから読み取ったバイトにより置き換えられた、オフセットから (オフセット + データの個数 - 1) の間の値を持つ指定されたバイト配列を含みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-225">When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="94e37-226">現在のストリームから読み取ったデータの格納を開始する位置を示す バッファ内の0 から始まるバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-226">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="94e37-227">現在のストリームから読み取る最大バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-227">The maximum number of bytes to be read from the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-228">現在のストリームからバイト シーケンスを読み取り、読み取ったバイト数だけストリーム内の位置を進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-228">Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94e37-229">バッファーに読み取られた合計バイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-229">The total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="94e37-230">要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 (ゼロ) になることがあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-230">This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-231">使用して、<xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="94e37-231">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="94e37-232">このオブジェクトはデータの読み取りをサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-232">The object does not support reading of data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="sqlFileStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="94e37-233">ストリームから 1 バイトを読み取り、ストリーム内の位置を 1 バイト進めます。ストリームの末尾の場合は -1 を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-233">Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94e37-234">
            <see cref="T:System.Int32" /> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-234">The unsigned byte cast to an <see cref="T:System.Int32" />, or -1 if at the end of the stream.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-235">使用して、<xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="94e37-235">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="94e37-236">このオブジェクトはデータの読み取りをサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-236">The object does not support reading of data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Data.SqlTypes.SqlFileStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-237">ストリームがタイムアウト前に読み取りを試みる期間を決定する値 (ミリ秒単位) を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-237">Gets or sets a value, in milliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94e37-238">ストリームがタイムアウト前に読み取りを試みる期間を決定する値 (ミリ秒単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-238">A value, in milliseconds, that determines how long the stream will attempt to read before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="sqlFileStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="94e37-239">
            <c>origin</c> パラメーターを基準とするバイト オフセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-239">A byte offset relative to the <c>origin</c> parameter</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="94e37-240">新しい位置を取得するために使用する参照ポイントを示す <see cref="T:System.IO.SeekOrigin" /> 型の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-240">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-241">現在のストリーム内の位置を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-241">Sets the position within the current stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94e37-242">現在のストリーム内の新しい位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-242">The new position within the current stream.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="sqlFileStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="94e37-243">現在のストリームの希望の長さ (バイト数)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-243">The desired length of the current stream in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-244">現在のストリームの長さを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-244">Sets the length of the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-245">使用して、<xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>プロパティを現在のインスタンスが読み取りをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="94e37-245">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A> property to determine whether the current instance supports reading.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="94e37-246">このオブジェクトはデータの読み取りをサポートしていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-246">The object does not support reading of data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionContext">
      <MemberSignature Language="C#" Value="public byte[] TransactionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] TransactionContext" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.TransactionContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactionContext As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ TransactionContext { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransactionContext : byte[]" Usage="System.Data.SqlTypes.SqlFileStream.TransactionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-247">この <see cref="T:System.Data.SqlTypes.SqlFileStream" /> オブジェクトのトランザクション コンテキストを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-247">Gets or sets the transaction context for this <see cref="T:System.Data.SqlTypes.SqlFileStream" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94e37-248">この <see cref="T:System.Data.SqlTypes.SqlFileStream" /> オブジェクトのコンストラクターに渡された <paramref name="transactionContext" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-248">The <paramref name="transactionContext" /> array that was passed to the constructor for this <see cref="T:System.Data.SqlTypes.SqlFileStream" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="sqlFileStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="94e37-249">バイト配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-249">An array of bytes.</span>
          </span>
          <span data-ttu-id="94e37-250">このメソッドは、<c>buffer</c> から現在のストリームに、<c>count</c> バイト数だけコピーします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-250">This method copies <c>count</c> bytes from <c>buffer</c> to the current stream.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="94e37-251">現在のストリームへのバイトのコピーを開始する位置を示す <c>buffer</c> 内のバイト オフセット。インデックス番号は 0 から始まります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-251">The zero-based byte offset in <c>buffer</c> at which to begin copying bytes to the current stream.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="94e37-252">現在のストリームに書き込むバイト数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-252">The number of bytes to be written to the current stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-253">現在のストリームにバイト シーケンスを書き込み、書き込んだバイト数だけストリーム内の現在位置を進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-253">Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-254">使用して、<xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="94e37-254">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="94e37-255">このオブジェクトにおいて、データの書き込みはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-255">The object does not support writing of data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="sqlFileStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="94e37-256">ストリームに書き込むバイト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-256">The byte to write to the stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94e37-257">ストリームの現在位置にバイトを書き込み、ストリームの位置を 1 バイトだけ進めます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-257">Writes a byte to the current position in the stream and advances the position within the stream by one byte.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94e37-258">使用して、<xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>プロパティを現在のインスタンスが書き込みをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="94e37-258">Use the <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A> property to determine whether the current instance supports writing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="94e37-259">このオブジェクトにおいて、データの書き込みはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-259">The object does not support writing of data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlTypes.SqlFileStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Data.SqlTypes.SqlFileStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94e37-260">ストリームがタイムアウト前に書き込みを試行する期間を決定する値 (ミリ秒単位) を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-260">Gets or sets a value, in milliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94e37-261">ストリームがタイムアウト前に書き込みを試行する期間を決定する値 (ミリ秒単位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="94e37-261">A value, in milliseconds, that determines how long the stream will attempt to write before timing out.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>