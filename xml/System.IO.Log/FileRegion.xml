<Type Name="FileRegion" FullName="System.IO.Log.FileRegion">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="193f7433c3d64ce204d1252239ea49a84b69d643" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36485644" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileRegion" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileRegion extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.FileRegion" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileRegion" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileRegion sealed" />
  <TypeSignature Language="F#" Value="type FileRegion = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a region of a file to be archived. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Log.LogArchiveSnapshot> オブジェクトは、<xref:System.IO.Log.LogStore> 内のデータの一貫したバックアップを生成するために必要な情報を格納しています。 実際のデータは、<xref:System.IO.Log.FileRegion> プロパティにより返される <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> オブジェクトの列挙可能なコレクションに格納されています。 各 <xref:System.IO.Log.FileRegion> インスタンスは、アーカイブする必要があるファイル内のバイト シーケンスを表します。  
  
   
  
## Examples  
 <xref:System.IO.Log.LogStore> クラスおよび <xref:System.IO.Log.FileRegion> クラスを使用してログ ストアを XML にアーカイブする方法を次の例に示します。  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FileLength">
      <MemberSignature Language="C#" Value="public long FileLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 FileLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.FileLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long FileLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.FileLength : int64" Usage="System.IO.Log.FileRegion.FileLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the length of the file in bytes.</summary>
        <value>ファイルの長さをバイト単位で返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティで返されるのは、ファイル内の 1 つの領域の長さではなく、ファイル全体の長さです。 ファイル内の領域の長さを調べるには、<xref:System.IO.Log.LogStore.Length%2A> メソッドで返されるストリームの <xref:System.IO.Log.FileRegion.GetStream%2A> プロパティを確認してください。  
  
   
  
## Examples  
 <xref:System.IO.Log.LogStore> クラスおよび <xref:System.IO.Log.FileRegion> クラスを使用してログ ストアを XML にアーカイブする方法を次の例に示します。  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRegion.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.IO.Stream" Usage="fileRegion.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a stream that can be used to read the data to be archived.</summary>
        <returns>A stream that contains the data to be archived.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.IO.Log.LogStore> クラスおよび <xref:System.IO.Log.FileRegion> クラスを使用してログ ストアを XML にアーカイブする方法を次の例に示します。  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">The request could not be performed because of an unexpected I/O exception.</exception>
        <exception cref="T:System.NotSupportedException">The operation is not supported.</exception>
        <exception cref="T:System.ObjectDisposedException">The method was called after the sequence has been disposed of.</exception>
        <exception cref="T:System.OutOfMemoryException">There is not enough memory to continue the execution of the program.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Access for the specified log store is denied by the operating system.</exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public long Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Offset" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Offset { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int64" Usage="System.IO.Log.FileRegion.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the offset into the file where the data begins.</summary>
        <value>ファイル内のデータ開始位置のオフセット。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.IO.Log.LogStore> クラスおよび <xref:System.IO.Log.FileRegion> クラスを使用してログ ストアを XML にアーカイブする方法を次の例に示します。  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRegion.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.IO.Log.FileRegion.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the fully qualified location of the file containing this region.</summary>
        <value>この領域を含むファイルの完全修飾された場所。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.IO.Log.LogStore> クラスおよび <xref:System.IO.Log.FileRegion> クラスを使用してログ ストアを XML にアーカイブする方法を次の例に示します。  
  
 [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]
 [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>