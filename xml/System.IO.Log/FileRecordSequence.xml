<Type Name="FileRecordSequence" FullName="System.IO.Log.FileRecordSequence">
  <Metadata><Meta Name="ms.openlocfilehash" Value="763eb8ce0dbdab465b9c9875d0ab3a66b11ff7ec" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53299375" /></Metadata><TypeSignature Language="C#" Value="public sealed class FileRecordSequence : IDisposable, System.IO.Log.IRecordSequence" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileRecordSequence extends System.Object implements class System.IDisposable, class System.IO.Log.IRecordSequence" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.FileRecordSequence" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileRecordSequence&#xA;Implements IDisposable, IRecordSequence" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileRecordSequence sealed : IDisposable, System::IO::Log::IRecordSequence" />
  <TypeSignature Language="F#" Value="type FileRecordSequence = class&#xA;    interface IRecordSequence&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IO.Log.IRecordSequence</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e7977-101">ファイル上に <see cref="T:System.IO.Log.IRecordSequence" /> を実装します。</span><span class="sxs-lookup"><span data-stu-id="e7977-101">Implements an <see cref="T:System.IO.Log.IRecordSequence" /> on top of a file.</span></span> <span data-ttu-id="e7977-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-103"><xref:System.IO.Log.FileRecordSequence> は、ファイル システム内の単一のログ ファイルに基づくレコード シーケンスです。</span><span class="sxs-lookup"><span data-stu-id="e7977-103">The <xref:System.IO.Log.FileRecordSequence> is a record sequence based on a single log file in the file system.</span></span> <span data-ttu-id="e7977-104">これは、単純なファイルに基づくログ上の <xref:System.IO.Log.IRecordSequence> インターフェイスの簡単な実装です。</span><span class="sxs-lookup"><span data-stu-id="e7977-104">It is a simple implementation of the <xref:System.IO.Log.IRecordSequence> interface, on top of a simple file-based log.</span></span>  
  
 <span data-ttu-id="e7977-105">ファイル ベースのログを操作するには、アプリケーションを実行しているアカウントに十分な特権が必要です。特権は、<xref:System.IO.Log.FileRecordSequence> の構築時にファイル システムのセキュリティで指定されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-105">To manipulate a file-based log, the account that your application is running in must have sufficient privileges, as dictated by the file system security at the time the <xref:System.IO.Log.FileRecordSequence> is constructed.</span></span> <span data-ttu-id="e7977-106">さらに、構築時に FullTrust への要求が行われます。</span><span class="sxs-lookup"><span data-stu-id="e7977-106">In addition, a demand for FullTrust is made at construction time.</span></span> <span data-ttu-id="e7977-107">アクセス許可の検査の結果は、事後に Windows セキュリティ モデルに合わせてキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-107">The permission verification results are cached thereafter in keeping with the Windows security model.</span></span> <span data-ttu-id="e7977-108">レコード シーケンスのコンテンツを権限のないユーザーに誤って開示しないことを確認することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e7977-108">You should ensure that you do not accidentally expose the contents of the record sequence to an unauthorized user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7977-109">次の例では、レコード シーケンスを作成し、レコードを追加し、最後にレコードを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e7977-109">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7977-110"><see cref="T:System.IO.Log.FileRecordSequence" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e7977-110">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e7977-111">この <see cref="T:System.IO.Log.FileRecordSequence" /> インスタンスがカプセル化するファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="e7977-111">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span></span></param>
        <summary><span data-ttu-id="e7977-112">指定したファイルを使用して、<see cref="T:System.IO.Log.FileRecordSequence" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e7977-112">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-113">このコンストラクターは、ファイルへの読み取り/書き込みアクセスを作成し、共有読み取りアクセス モードでファイルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e7977-113">This constructor creates read/write access to the file, and opens the file with share Read access.</span></span> <span data-ttu-id="e7977-114">そのため、ファイルを書き込みアクセスで開く操作をこのプロセスまたは他のプロセスで要求すると、この <xref:System.IO.Log.FileRecordSequence> インスタンスを破棄していない限り、要求は失敗しますが、読み取りは成功します。</span><span class="sxs-lookup"><span data-stu-id="e7977-114">This means that requests to open the file for writing by this or another process fails until this <xref:System.IO.Log.FileRecordSequence> instance has been disposed of, but read attempts will succeed.</span></span> <span data-ttu-id="e7977-115">`path` が見つからない場合、サイズが 0 バイトの新しいファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-115">If `path` is not found, a new file is created with a size of 0 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7977-116">次の例では、レコード シーケンスの作成、レコードの追加、およびレコードの読み取りを行い、最後にシーケンスを破棄します。</span><span class="sxs-lookup"><span data-stu-id="e7977-116">The following example creates a record sequence, appends record to it, reads the records, and finally diposes the sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#1](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#1)]
 [!code-vb[IRecordSequence#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-117"><paramref name="path" /> によって指定されたファイルが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-117">The file specified by <paramref name="path" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e7977-118"><paramref name="path" /> で指定したファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-118">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-119">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-119">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-120">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-120">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7977-121">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-121">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string * System.IO.FileAccess -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence (path, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e7977-122">この <see cref="T:System.IO.Log.FileRecordSequence" /> インスタンスがカプセル化するファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="e7977-122">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="e7977-123">ユーザーがログ ファイルに対して持つアクセスの種類を制御する有効な <see cref="T:System.IO.FileAccess" /> 値。</span><span class="sxs-lookup"><span data-stu-id="e7977-123">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span></span></param>
        <summary><span data-ttu-id="e7977-124">ファイルおよびアクセス モードを指定して、<see cref="T:System.IO.Log.FileRecordSequence" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e7977-124">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file and an access mode.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-125"><paramref name="path" /> によって指定されたファイルが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-125">The file specified by <paramref name="path" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e7977-126"><paramref name="path" /> で指定したファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-126">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-127">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-127">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-128">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-128">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7977-129">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-129">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileRecordSequence (string path, System.IO.FileAccess access, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileAccess access, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, access As FileAccess, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileRecordSequence(System::String ^ path, System::IO::FileAccess access, int size);" />
      <MemberSignature Language="F#" Value="new System.IO.Log.FileRecordSequence : string * System.IO.FileAccess * int -&gt; System.IO.Log.FileRecordSequence" Usage="new System.IO.Log.FileRecordSequence (path, access, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="e7977-130">この <see cref="T:System.IO.Log.FileRecordSequence" /> インスタンスがカプセル化するファイルの相対パスまたは絶対パス。</span><span class="sxs-lookup"><span data-stu-id="e7977-130">A relative or absolute path for the file that this <see cref="T:System.IO.Log.FileRecordSequence" /> instance will encapsulate.</span></span></param>
        <param name="access"><span data-ttu-id="e7977-131">ユーザーがログ ファイルに対して持つアクセスの種類を制御する有効な <see cref="T:System.IO.FileAccess" /> 値。</span><span class="sxs-lookup"><span data-stu-id="e7977-131">A valid <see cref="T:System.IO.FileAccess" /> value that controls the kind of access users have to a log file.</span></span></param>
        <param name="size"><span data-ttu-id="e7977-132">開くログ ファイルのサイズ。</span><span class="sxs-lookup"><span data-stu-id="e7977-132">The size of the log file to be opened.</span></span></param>
        <summary><span data-ttu-id="e7977-133">ファイル、アクセス モード、およびファイル サイズを指定して、<see cref="T:System.IO.Log.FileRecordSequence" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e7977-133">Initializes a new instance of the <see cref="T:System.IO.Log.FileRecordSequence" /> class with a specified file, an access mode, and a file size.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-134">1 つ以上のパラメーターが有効範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-134">One or more of the parameters are out of the valid range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-135"><paramref name="path" /> によって指定されたファイルが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-135">The file specified by <paramref name="path" /> is not valid.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="e7977-136"><paramref name="path" /> で指定したファイルが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-136">The file specified by <paramref name="path" /> cannot be found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-137">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-137">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-138">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-138">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="e7977-139">指定のログ ストアへのアクセスは、オペレーティング システムにより拒否されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-139">Access for the specified log store is denied by the operating system.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AdvanceBaseSequenceNumber">
      <MemberSignature Language="C#" Value="public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceBaseSequenceNumber(valuetype System.IO.Log.SequenceNumber newBaseSequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AdvanceBaseSequenceNumber (newBaseSequenceNumber As SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdvanceBaseSequenceNumber(System::IO::Log::SequenceNumber newBaseSequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit&#xA;override this.AdvanceBaseSequenceNumber : System.IO.Log.SequenceNumber -&gt; unit" Usage="fileRecordSequence.AdvanceBaseSequenceNumber newBaseSequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newBaseSequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="newBaseSequenceNumber"><span data-ttu-id="e7977-140">レコード シーケンスの新しい基本シーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-140">The new base sequence number of the record sequence.</span></span></param>
        <summary><span data-ttu-id="e7977-141">ログの基本シーケンス番号を前方移動します。</span><span class="sxs-lookup"><span data-stu-id="e7977-141">Moves the base sequence number of the log forward.</span></span> <span data-ttu-id="e7977-142">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-142">This method cannot be inherited.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-143"><paramref name="newBaseSequenceNumber" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-143"><paramref name="newBaseSequenceNumber" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-144"><paramref name="newBaseSequenceNumber" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-144"><paramref name="newBaseSequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-145">シーケンスの変更中に I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e7977-145">An I/O error occurred while modifying the sequence.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-146">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-146">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-147">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-147">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7977-148">ログ レコードを <see cref="T:System.IO.Log.FileRecordSequence" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-148">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e7977-149">次の例では、レコード シーケンスを作成し、レコードを追加し、最後にレコードを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e7977-149">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[IRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#0)]
 [!code-vb[IRecordSequence#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-150">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-150">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-151">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-151">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-152">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-152">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-153">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-153">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="e7977-154">ログ レコードを <see cref="T:System.IO.Log.FileRecordSequence" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-154">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="e7977-155">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-155">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-156">追加されたログ レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-156">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-157">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-157">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-158">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-158">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-159">このメソッドは通常、レコードの書き込みが終わる前に完了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-159">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7977-160">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-160">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7977-161">次の例では、レコード シーケンスを作成し、レコードを追加し、最後にレコードを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e7977-161">The following example creates a record sequence, appends record to it, and finally reads the records.</span></span>  
  
 [!code-csharp[FileRecordSequence#0](~/samples/snippets/csharp/VS_Snippets_CFX/filerecordsequence/cs/filerecordsequence.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-162">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-162">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-163">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-163">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-164">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-164">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-165">予期しない I/O 例外のため、要求は実行されませんでした。</span><span class="sxs-lookup"><span data-stu-id="e7977-165">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-166">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-166">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-167">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-167">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-168">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-168">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-169">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-169">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-170">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-170">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-171">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-171">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-172">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-172">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <summary><span data-ttu-id="e7977-173">ログ レコードを <see cref="T:System.IO.Log.FileRecordSequence" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-173">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="e7977-174">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-174">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-175">追加されたログ レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-175">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-176">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-176">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-177">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-177">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-178">このメソッドは通常、レコードの書き込みが終わる前に完了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-178">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7977-179">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-179">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7977-180">このメソッドを使用してレコード シーケンスを作成する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="e7977-180">The following example shows how you can create a record sequence with this method.</span></span>  
  
 [!code-csharp[IRecordSequence#3](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#3)] 
 [!code-vb[IRecordSequence#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#3)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-181">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-181">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-182">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-182">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-183">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-183">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-184">予期しない I/O 例外のため、要求は実行されませんでした。</span><span class="sxs-lookup"><span data-stu-id="e7977-184">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-185">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-185">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-186">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-186">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-187">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-187">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-188">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-188">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-189">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-189">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-190">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-190">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-191">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-191">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7977-192">このレコードで使用する予約情報を格納する <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-192">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="e7977-193">以前にシーケンスに予約された領域を使用して、<see cref="T:System.IO.Log.FileRecordSequence" /> にログ レコードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-193">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7977-194">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-194">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-195">追加されたログ レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-195">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-196">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-196">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-197">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-197">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-198">追加されたレコードは、`reservations` パラメーターにより指定された予約を使用して以前に予約された領域を消費します。</span><span class="sxs-lookup"><span data-stu-id="e7977-198">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e7977-199">この追加処理が成功すると、データを格納できる最も小さな予約領域が消費され、その予約領域がコレクションから削除されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-199">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7977-200">このメソッドは通常、レコードの書き込みが終わる前に完了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-200">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7977-201">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-201">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-202">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-202">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-203">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-203">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-204"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-204"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-205">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-205">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-206">予期しない I/O 例外のため、要求は実行されませんでした。</span><span class="sxs-lookup"><span data-stu-id="e7977-206">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-207">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-207">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-208">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-208">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-209">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-209">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7977-210"><paramref name="data" /> に対応する十分なサイズの予約が <paramref name="reservations" /> に見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-210">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Append(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Append(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.Append : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Append (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-211">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-211">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-212">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-212">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-213">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-213">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-214">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-214">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7977-215">このレコードで使用する予約情報を格納する <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-215">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <summary><span data-ttu-id="e7977-216">以前にシーケンスに予約された領域を使用して、<see cref="T:System.IO.Log.FileRecordSequence" /> にログ レコードを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-216">Writes a log record to the <see cref="T:System.IO.Log.FileRecordSequence" />, using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7977-217">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-217">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-218">追加されたログ レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-218">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-219">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-219">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-220">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-220">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-221">追加されたレコードは、`reservations` パラメーターにより指定された予約を使用して以前に予約された領域を消費します。</span><span class="sxs-lookup"><span data-stu-id="e7977-221">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e7977-222">この追加処理が成功すると、データを格納できる最も小さな予約領域が消費され、その予約領域がコレクションから削除されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-222">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7977-223">このメソッドは通常、レコードの書き込みが終わる前に完了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-223">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7977-224">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-224">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-225">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-225">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-226">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-226">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-227"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-227"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-228">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-228">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-229">予期しない I/O 例外のため、要求は実行されませんでした。</span><span class="sxs-lookup"><span data-stu-id="e7977-229">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-230">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-230">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-231">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-231">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-232">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-232">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7977-233"><paramref name="data" /> に対応する十分なサイズの予約が <paramref name="reservations" /> に見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-233">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber BaseSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber BaseSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.BaseSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.BaseSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7977-234">現在の <see cref="T:System.IO.Log.FileRecordSequence" /> 内の最初の有効なレコードのシーケンス番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="e7977-234">Gets the sequence number of the first valid record in the current <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></summary>
        <value><span data-ttu-id="e7977-235"><see cref="T:System.IO.Log.FileRecordSequence" /> 内の有効なレコードに対応する下限のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-235">The lowest sequence number that corresponds to a valid record in the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-236">有効なシーケンス番号は、<xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> 以上、<xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A> 未満です。</span><span class="sxs-lookup"><span data-stu-id="e7977-236">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="e7977-237">その他のシーケンス番号はすべて無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-237">All other sequence numbers are invalid.</span></span>  
  
 <span data-ttu-id="e7977-238">このプロパティの値は、<xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> メソッドまたは <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> メソッドを呼び出すことにより変更できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-238">The value of this property can be changed by calling the <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A> or <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7977-239">ループ内で <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> を使用する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="e7977-239">The following example shows using <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> in a loop:</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-240">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="e7977-240">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7977-241">非同期の追加操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-241">Begins an asynchronous append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-242">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-242">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-243">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-243">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-244">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-244">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-245">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-245">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="e7977-246">追加の完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="e7977-246">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7977-247">この特定の非同期追加要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e7977-247">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7977-248">非同期の追加操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-248">Begins an asynchronous append operation.</span></span> <span data-ttu-id="e7977-249">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-249">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-250">非同期の追加を表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="e7977-250">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-251">追加処理が完了しておりリソースを適切に解放できることを確認するために、このメソッドから返された <xref:System.IAsyncResult> を <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> メソッドに渡すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e7977-251">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7977-252">非同期追加中にエラーが発生した場合、このメソッドから返される <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> を使用して <xref:System.IAsyncResult> メソッドを呼び出すまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="e7977-252">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7977-253">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-253">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-254">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-254">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-255">このメソッドは通常、レコードの書き込みが終わる前に完了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-255">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7977-256">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-256">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-257">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-257">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-258">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-258">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-259">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-259">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-260">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-260">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-261">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-261">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-262">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-262">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-263">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-263">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-264">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-264">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-265">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-265">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-266">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-266">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-267">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-267">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="callback"><span data-ttu-id="e7977-268">追加の完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="e7977-268">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7977-269">この特定の非同期追加要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e7977-269">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7977-270">非同期の追加操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-270">Begins an asynchronous append operation.</span></span> <span data-ttu-id="e7977-271">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-271">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-272">非同期の追加を表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="e7977-272">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-273">追加処理が完了しておりリソースを適切に解放できることを確認するために、このメソッドから返された <xref:System.IAsyncResult> を <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> メソッドに渡すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e7977-273">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7977-274">非同期追加中にエラーが発生した場合、このメソッドから返される <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> を使用して <xref:System.IAsyncResult> メソッドを呼び出すまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="e7977-274">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7977-275">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-275">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-276">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-276">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-277">このメソッドは通常、レコードの書き込みが終わる前に完了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-277">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7977-278">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-278">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-279">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-279">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-280">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-280">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-281">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-281">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-282">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-282">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-283">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-283">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-284">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-284">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-285">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-285">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-286">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-286">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-287">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-287">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-288">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-288">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-289">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-289">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7977-290">このレコードで使用する予約情報を格納する <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-290">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="e7977-291">追加の完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="e7977-291">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7977-292">この特定の非同期追加要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e7977-292">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7977-293">以前にシーケンス内で予約された領域を使用して、非同期の追加操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-293">Begins an asynchronous append operation using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7977-294">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-294">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-295">非同期の追加を表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="e7977-295">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-296">追加処理が完了しておりリソースを適切に解放できることを確認するために、このメソッドから返された <xref:System.IAsyncResult> を <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> メソッドに渡すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e7977-296">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7977-297">非同期追加中にエラーが発生した場合、このメソッドから返される <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> を使用して <xref:System.IAsyncResult> メソッドを呼び出すまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="e7977-297">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7977-298">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-298">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-299">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-299">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-300">追加されたレコードは、`reservations` パラメーターにより指定された予約を使用して以前に予約された領域を消費します。</span><span class="sxs-lookup"><span data-stu-id="e7977-300">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e7977-301">この追加処理が成功すると、データを格納できる最も小さな予約領域が消費され、その予約領域がコレクションから削除されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-301">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7977-302">このメソッドは通常、レコードの書き込みが終わる前に完了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-302">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7977-303">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-303">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-304">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-304">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-305">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-305">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-306"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-306"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-307">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-307">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-308">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-308">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-309">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-309">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-310">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-310">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-311">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-311">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7977-312"><paramref name="data" /> に対応する十分なサイズの予約が <paramref name="reservations" /> に見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-312">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-313">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-313">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-314">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-314">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-315">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-315">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-316">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-316">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7977-317">このレコードで使用する予約情報を格納する <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-317">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this record.</span></span></param>
        <param name="callback"><span data-ttu-id="e7977-318">追加の完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="e7977-318">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7977-319">この特定の非同期追加要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e7977-319">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7977-320">以前にシーケンス内で予約された領域を使用して、非同期の追加操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-320">Begins an asynchronous append operation using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7977-321">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-321">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-322">非同期の追加を表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="e7977-322">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous append, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-323">追加処理が完了しておりリソースを適切に解放できることを確認するために、このメソッドから返された <xref:System.IAsyncResult> を <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> メソッドに渡すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e7977-323">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7977-324">非同期追加中にエラーが発生した場合、このメソッドから返される <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> を使用して <xref:System.IAsyncResult> メソッドを呼び出すまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="e7977-324">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7977-325">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-325">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-326">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-326">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-327">追加されたレコードは、`reservations` パラメーターにより指定された予約を使用して以前に予約された領域を消費します。</span><span class="sxs-lookup"><span data-stu-id="e7977-327">The appended record will consume space that has been previously reserved, using a reservation specified by the `reservations` parameter.</span></span> <span data-ttu-id="e7977-328">この追加処理が成功すると、データを格納できる最も小さな予約領域が消費され、その予約領域がコレクションから削除されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-328">If the append succeeds, it will consume the smallest reservation area that can hold the data, and that reservation area will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7977-329">このメソッドは通常、レコードの書き込みが終わる前に完了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-329">Normally, this method completes before the record has been written.</span></span> <span data-ttu-id="e7977-330">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-330">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-331">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-331">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-332">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-332">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-333"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-333"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-334">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-334">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-335">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-335">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-336">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-336">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-337">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-337">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-338">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-338">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7977-339"><paramref name="data" /> に対応する十分なサイズの予約が <paramref name="reservations" /> に見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-339">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginFlush">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginFlush(valuetype System.IO.Log.SequenceNumber sequenceNumber, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginFlush(System::IO::Log::SequenceNumber sequenceNumber, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginFlush : System.IO.Log.SequenceNumber * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginFlush (sequenceNumber, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="e7977-340">書き込む必要のある最新レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-340">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="e7977-341"><see cref="T:System.IO.Log.SequenceNumber" /> が無効な場合、すべてのレコードを書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-341">If <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <param name="callback"><span data-ttu-id="e7977-342">フラッシュの完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="e7977-342">An optional asynchronous callback, to be called when the flush is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7977-343">この特定の非同期フラッシュ要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e7977-343">A user-provided object that distinguishes this particular asynchronous flush request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7977-344">以前にシーケンス内で予約された領域を使用して、非同期のフラッシュ操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-344">Begins an asynchronous flush operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7977-345">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-345">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-346">非同期のフラッシュ操作を表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="e7977-346">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous flush operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-347">現在のメソッドから返された <xref:System.IAsyncResult> を <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> メソッドに渡すことにより、フラッシュが完了し、リソースが適切に解放されたことを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-347">You should pass the <xref:System.IAsyncResult> returned by the current method to the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method to ensure that the flush completes and resources are freed appropriately.</span></span> <span data-ttu-id="e7977-348">非同期フラッシュ中にエラーが発生した場合、このメソッドから返される <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> を使用して <xref:System.IAsyncResult> メソッドを呼び出すまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="e7977-348">If an error occurs during an asynchronous flush, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7977-349">このメソッドを呼び出すことにより、<xref:System.IO.Log.FileRecordSequence> に追加されたすべてのレコードが永続的に書き込まれたことを確認します。</span><span class="sxs-lookup"><span data-stu-id="e7977-349">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> are durably written.</span></span>  
  
 <span data-ttu-id="e7977-350">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、この操作内で例外が直ちにスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-350">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7977-351">I/O 要求時にディスク障害が発生した場合など、非同期フラッシュ要求中にエラーが発生した場合、<xref:System.IO.Log.FileRecordSequence.EndFlush%2A> メソッドが呼び出されたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-351">Errors that occurred during an asynchronous flush request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-352">1 つ以上の引数が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-352">One or more of the arguments is invalid.</span></span>  
  
 <span data-ttu-id="e7977-353">このシーケンスの <paramref name="sequenceNumber" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-353"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-354"><paramref name="sequenceNumber" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-354"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-355">データのフラッシュ中に I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e7977-355">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-356">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-356">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-357">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-357">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7977-358">非同期の予約および追加操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-358">Begins an asynchronous reserve and append operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-359">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-359">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-360">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-360">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-361">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-361">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-362">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-362">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="e7977-363">予約を作成する予約コレクション。</span><span class="sxs-lookup"><span data-stu-id="e7977-363">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7977-364">作成する予約のバイト数。</span><span class="sxs-lookup"><span data-stu-id="e7977-364">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="e7977-365">追加の完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="e7977-365">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7977-366">この特定の非同期追加要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e7977-366">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7977-367">非同期の予約および追加操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-367">Begins an asynchronous reserve and append operation.</span></span> <span data-ttu-id="e7977-368">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-368">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-369">非同期の操作を表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="e7977-369">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-370">追加処理が完了しておりリソースを適切に解放できることを確認するために、このメソッドから返された <xref:System.IAsyncResult> を <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> メソッドに渡すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e7977-370">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7977-371">非同期追加中にエラーが発生した場合、このメソッドから返される <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> を使用して <xref:System.IAsyncResult> メソッドを呼び出すまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="e7977-371">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7977-372">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-372">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-373">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-373">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-374">指定の予約情報は、レコード追加操作を含む分割不可能な操作内で、提供された予約コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-374">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e7977-375">追加が失敗した場合、領域は予約されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-375">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e7977-376">このメソッドは通常、レコードの書き込みが終わる前に完了できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-376">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e7977-377">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-377">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="e7977-378">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、この操作内で例外が直ちにスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-378">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7977-379">I/O 要求時にディスク障害が発生した場合など、非同期追加要求中にエラーが発生した場合、<xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> メソッドが呼び出されたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-379">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-380">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-380">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-381">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-381">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-382"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-382"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-383">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-383">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-384">予期しない I/O 例外のため、要求は実行されませんでした。</span><span class="sxs-lookup"><span data-stu-id="e7977-384">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-385">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-385">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-386">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-386">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-387">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-387">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7977-388"><paramref name="data" /> に対応する十分なサイズの予約が <paramref name="reservations" /> に見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-388">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReserveAndAppend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, cli::array &lt;long&gt; ^ reservations, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-389">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-389">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-390">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-390">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-391">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-391">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-392">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-392">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="e7977-393">予約を作成する予約コレクション。</span><span class="sxs-lookup"><span data-stu-id="e7977-393">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7977-394">作成する予約のバイト数。</span><span class="sxs-lookup"><span data-stu-id="e7977-394">The reservations to make, in bytes.</span></span></param>
        <param name="callback"><span data-ttu-id="e7977-395">追加の完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="e7977-395">An optional asynchronous callback, to be called when the append is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7977-396">この特定の非同期追加要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e7977-396">A user-provided object that distinguishes this particular asynchronous append request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7977-397">非同期の予約および追加操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-397">Begins an asynchronous reserve and append operation.</span></span> <span data-ttu-id="e7977-398">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-398">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-399">非同期の操作を表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="e7977-399">An <see cref="T:System.IAsyncResult" /> that represents this asynchronous operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-400">追加処理が完了しておりリソースを適切に解放できることを確認するために、このメソッドから返された <xref:System.IAsyncResult> を <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> メソッドに渡すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e7977-400">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method, to ensure that the append operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7977-401">非同期追加中にエラーが発生した場合、このメソッドから返される <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> を使用して <xref:System.IAsyncResult> メソッドを呼び出すまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="e7977-401">If an error has occurred during an asynchronous append, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7977-402">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-402">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-403">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-403">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-404">指定の予約情報は、レコード追加操作を含む分割不可能な操作内で、提供された予約コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-404">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e7977-405">追加が失敗した場合、領域は予約されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-405">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e7977-406">このメソッドは通常、レコードの書き込みが終わる前に完了できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-406">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e7977-407">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-407">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 <span data-ttu-id="e7977-408">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、この操作内で例外が直ちにスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-408">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7977-409">I/O 要求時にディスク障害が発生した場合など、非同期追加要求中にエラーが発生した場合、<xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> メソッドが呼び出されたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-409">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-410">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-410">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-411">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-411">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-412"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-412"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-413">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-413">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-414">予期しない I/O 例外のため、要求は実行されませんでした。</span><span class="sxs-lookup"><span data-stu-id="e7977-414">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-415">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-415">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-416">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-416">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-417">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-417">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7977-418"><paramref name="data" /> に対応する十分なサイズの予約が <paramref name="reservations" /> に見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-418">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginWriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7977-419">非同期の再開領域の書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-419">Begins an asynchronous restart area write operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-420">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-420">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7977-421">新しい基本シーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-421">The new base sequence number.</span></span> <span data-ttu-id="e7977-422">指定するシーケンス番号は、現在の基本シーケンス番号以上であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="e7977-422">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="e7977-423">この再開領域で使用する予約情報を格納する <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-423">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="e7977-424">再開領域の書き込みの完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="e7977-424">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7977-425">この特定の再開領域非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e7977-425">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7977-426">以前にシーケンス内で予約された領域を使用して、非同期の再開領域の書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-426">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7977-427">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-427">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-428">非同期の再開領域の書き込み処理を表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="e7977-428">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-429">再開領域の書き込み処理が完了しておりリソースを適切に解放できることを確認するために、このメソッドから返された <xref:System.IAsyncResult> を <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-429">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7977-430">非同期の再開領域の書き込み処理中にエラーが発生した場合、このメソッドから返される <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> を使用して <xref:System.IAsyncResult> メソッドを呼び出すまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="e7977-430">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7977-431">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-431">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-432">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-432">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-433">この操作が正しく完了すると、基本シーケンス番号が更新されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-433">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7977-434">新しい基本シーケンス番号未満の番号を持つすべてのログ レコードは、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="e7977-434">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e7977-435"><xref:System.IO.Log.ReservationCollection> を指定すると、コレクションに格納されていた予約情報で以前に予約された領域が、書き込まれた再開領域により消費されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-435">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e7977-436">このメソッドが成功すると、データを格納できる最も小さな予約が消費され、その予約がコレクションから削除されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-436">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7977-437">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、この操作内で例外が直ちにスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-437">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7977-438">I/O 要求時にディスク障害が発生した場合など、非同期追加要求中にエラーが発生した場合、<xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> メソッドが呼び出されたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-438">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-439">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-439">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-440"><paramref name="newBaseSeqNum" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-440"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="e7977-441">または</span><span class="sxs-lookup"><span data-stu-id="e7977-441">-or-</span></span> 
<span data-ttu-id="e7977-442">新しいアーカイブ末尾または既存のアーカイブ末尾、あるいはアーカイブ ログの基本が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-442">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-443"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-443"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
<span data-ttu-id="e7977-444">または</span><span class="sxs-lookup"><span data-stu-id="e7977-444">-or-</span></span> 
 <span data-ttu-id="e7977-445">このシーケンスの <paramref name="newBaseSeqNum" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-445"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-446">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-446">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-447">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-447">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-448">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-448">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-449">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-449">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-450">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-450">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7977-451"><paramref name="data" /> に対応する十分なサイズの予約が <paramref name="reservations" /> に見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-451">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteRestartArea">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservation, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservation As ReservationCollection, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservation, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection * AsyncCallback * obj -&gt; IAsyncResult" Usage="fileRecordSequence.BeginWriteRestartArea (data, newBaseSeqNum, reservation, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservation" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-452">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-452">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7977-453">新しい基本シーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-453">The new base sequence number.</span></span> <span data-ttu-id="e7977-454">指定するシーケンス番号は、現在の基本シーケンス番号以上であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="e7977-454">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservation"><span data-ttu-id="e7977-455">この再開領域で使用する予約情報を格納する <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-455">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <param name="callback"><span data-ttu-id="e7977-456">再開領域の書き込みの完了時に呼び出されるオプションの非同期コールバック。</span><span class="sxs-lookup"><span data-stu-id="e7977-456">An optional asynchronous callback, to be called when the restart area write is complete.</span></span></param>
        <param name="state"><span data-ttu-id="e7977-457">この特定の再開領域非同期書き込み要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e7977-457">A user-provided object that distinguishes this particular asynchronous restart area write request from other requests.</span></span></param>
        <summary><span data-ttu-id="e7977-458">以前にシーケンス内で予約された領域を使用して、非同期の再開領域の書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="e7977-458">Begins an asynchronous restart area write operation, using space previously reserved in the sequence.</span></span> <span data-ttu-id="e7977-459">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-459">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-460">非同期の再開領域の書き込み処理を表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="e7977-460">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous restart area write operation, which could still be pending.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-461">再開領域の書き込み処理が完了しておりリソースを適切に解放できることを確認するために、このメソッドから返された <xref:System.IAsyncResult> を <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-461">You should pass the <xref:System.IAsyncResult> returned by this method to the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method, to assure that the restart area write operation has completed and resources can be freed appropriately.</span></span> <span data-ttu-id="e7977-462">非同期の再開領域の書き込み処理中にエラーが発生した場合、このメソッドから返される <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> を使用して <xref:System.IAsyncResult> メソッドを呼び出すまで、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="e7977-462">If an error has occurred during an asynchronous restart area write operation, an exception is not thrown until the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called with the <xref:System.IAsyncResult> returned by this method.</span></span>  
  
 <span data-ttu-id="e7977-463">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-463">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-464">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-464">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-465">この操作が正しく完了すると、基本シーケンス番号が更新されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-465">When the operation successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7977-466">新しい基本シーケンス番号未満の番号を持つすべてのログ レコードは、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="e7977-466">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e7977-467"><xref:System.IO.Log.ReservationCollection> を指定すると、コレクションに格納されていた予約情報で以前に予約された領域が、書き込まれた再開領域により消費されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-467">If a <xref:System.IO.Log.ReservationCollection> is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e7977-468">このメソッドが成功すると、データを格納できる最も小さな予約が消費され、その予約がコレクションから削除されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-468">If the method succeeds, it will consume the smallest reservation that can hold the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7977-469">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、この操作内で例外が直ちにスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-469">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7977-470">I/O 要求時にディスク障害が発生した場合など、非同期追加要求中にエラーが発生した場合、<xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> メソッドが呼び出されたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-470">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-471">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-471">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-472"><paramref name="newBaseSeqNum" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-472"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="e7977-473">- または -</span><span class="sxs-lookup"><span data-stu-id="e7977-473">-or-</span></span> 
<span data-ttu-id="e7977-474">新しいアーカイブ末尾または既存のアーカイブ末尾、あるいはアーカイブ ログの基本が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-474">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-475"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-475"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
<span data-ttu-id="e7977-476">または</span><span class="sxs-lookup"><span data-stu-id="e7977-476">-or-</span></span> 
 <span data-ttu-id="e7977-477">このシーケンスの <paramref name="newBaseSeqNum" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-477"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-478">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-478">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-479">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-479">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-480">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-480">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-481">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-481">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-482">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-482">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7977-483"><paramref name="data" /> に対応する十分なサイズの予約が <paramref name="reservations" /> に見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-483">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReservationCollection">
      <MemberSignature Language="C#" Value="public System.IO.Log.ReservationCollection CreateReservationCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Log.ReservationCollection CreateReservationCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.CreateReservationCollection" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateReservationCollection () As ReservationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::ReservationCollection ^ CreateReservationCollection();" />
      <MemberSignature Language="F#" Value="abstract member CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection&#xA;override this.CreateReservationCollection : unit -&gt; System.IO.Log.ReservationCollection" Usage="fileRecordSequence.CreateReservationCollection " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.CreateReservationCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.ReservationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7977-484">新しい <see cref="T:System.IO.Log.ReservationCollection" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="e7977-484">Creates a new <see cref="T:System.IO.Log.ReservationCollection" />.</span></span> <span data-ttu-id="e7977-485">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-485">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-486">新しく作成された <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-486">The newly created <see cref="T:System.IO.Log.ReservationCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-487">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-487">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="fileRecordSequence.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7977-488">オブジェクトで使用されているアンマネージ リソースを直ちに解放します。</span><span class="sxs-lookup"><span data-stu-id="e7977-488">Immediately releases the unmanaged resources used by an object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-489">データのフラッシュ中に I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e7977-489">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-490">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-490">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-491">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-491">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e7977-492">保留状態の非同期 I/O リクエストへの参照。</span><span class="sxs-lookup"><span data-stu-id="e7977-492">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="e7977-493">非同期の追加操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-493">Ends an asynchronous append operation.</span></span> <span data-ttu-id="e7977-494">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-494">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-495">追加されたログ レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-495">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-496">このメソッドは、I/O 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="e7977-496">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e7977-497"><xref:System.IO.Log.FileRecordSequence.EndAppend%2A> の呼び出し時に、I/O 要求間のディスク障害など非同期書き込み要求中に発生したエラーが現れます。</span><span class="sxs-lookup"><span data-stu-id="e7977-497">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="e7977-498">このメソッドは、<xref:System.IAsyncResult> メソッドから返された各 <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A> について正確に 1 回呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-498">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-499"><paramref name="result" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-499"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7977-500"><see langword="End" /> は、この非同期操作のために既に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="e7977-500"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-501">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-501">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-502">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-502">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-503">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-503">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndFlush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndFlush(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndFlush (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndFlush(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndFlush : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndFlush result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndFlush(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e7977-504">保留状態の非同期 I/O リクエストへの参照。</span><span class="sxs-lookup"><span data-stu-id="e7977-504">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="e7977-505">非同期フラッシュ操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-505">Ends an asynchronous flush operation.</span></span> <span data-ttu-id="e7977-506">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-506">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-507">最後に書き込まれたレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-507">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-508">このメソッドは、I/O 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="e7977-508">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e7977-509"><xref:System.IO.Log.FileRecordSequence.EndFlush%2A> の呼び出し時に、I/O 要求間のディスク障害など非同期フラッシュ要求中に発生したエラーが現れます。</span><span class="sxs-lookup"><span data-stu-id="e7977-509">Errors that occur during an asynchronous flush request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndFlush%2A> is called.</span></span>  
  
 <span data-ttu-id="e7977-510">このメソッドは、<xref:System.IAsyncResult> メソッドから返された各 <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A> について正確に 1 回呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-510">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-511"><paramref name="result" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-511"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7977-512"><see langword="End" /> は、この非同期操作のために既に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="e7977-512"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-513">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-513">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-514">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-514">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-515">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-515">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndReserveAndAppend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReserveAndAppend (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndReserveAndAppend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndReserveAndAppend : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndReserveAndAppend result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndReserveAndAppend(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e7977-516">保留状態の非同期 I/O リクエストへの参照。</span><span class="sxs-lookup"><span data-stu-id="e7977-516">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="e7977-517">非同期の予約および追加操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-517">Ends an asynchronous reserve and append operation.</span></span> <span data-ttu-id="e7977-518">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-518">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-519">追加されたログ レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-519">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-520">このメソッドは、I/O 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="e7977-520">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e7977-521"><xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> の呼び出し時に、I/O 要求間のディスク障害など非同期書き込み要求中に発生したエラーが現れます。</span><span class="sxs-lookup"><span data-stu-id="e7977-521">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> is called.</span></span>  
  
 <span data-ttu-id="e7977-522">このメソッドは、<xref:System.IAsyncResult> メソッドから返された各 <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A> について正確に 1 回呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-522">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-523"><paramref name="result" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-523"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7977-524"><see langword="End" /> は、この非同期操作のために既に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="e7977-524"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-525">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-525">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-526">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-526">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-527">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-527">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber EndWriteRestartArea(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWriteRestartArea (result As IAsyncResult) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber EndWriteRestartArea(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber&#xA;override this.EndWriteRestartArea : IAsyncResult -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.EndWriteRestartArea result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.EndWriteRestartArea(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e7977-528">保留状態の非同期 I/O リクエストへの参照。</span><span class="sxs-lookup"><span data-stu-id="e7977-528">A reference to the outstanding asynchronous I/O request.</span></span></param>
        <summary><span data-ttu-id="e7977-529">非同期の再開領域の書き込み操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="e7977-529">Ends an asynchronous restart area write operation.</span></span> <span data-ttu-id="e7977-530">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-530">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-531">書き込まれたログ レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-531">The sequence number of the written log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-532">このメソッドは、I/O 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="e7977-532">This method blocks until the I/O operation has completed.</span></span> <span data-ttu-id="e7977-533"><xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> の呼び出し時に、I/O 要求間のディスク障害など非同期書き込み要求中に発生したエラーが現れます。</span><span class="sxs-lookup"><span data-stu-id="e7977-533">Errors that occur during an asynchronous write request, such as a disk failure during the I/O request, become visible when <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> is called.</span></span>  
  
 <span data-ttu-id="e7977-534">このメソッドは、<xref:System.IAsyncResult> メソッドから返された各 <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A> について正確に 1 回呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-534">This method must be called exactly once on every <xref:System.IAsyncResult> returned by the <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-535"><paramref name="result" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-535"><paramref name="result" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7977-536"><see langword="End" /> は、この非同期操作のために既に呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="e7977-536"><see langword="End" /> has already been called for this asynchronous operation.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-537">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-537">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-538">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-538">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-539">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-539">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7977-540">追加したレコードは永続的に書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="e7977-540">Causes appended records to be durably written.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Function Flush () As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : unit -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7977-541">追加したすべてのレコードが書き込まれたことを確認します。</span><span class="sxs-lookup"><span data-stu-id="e7977-541">Ensures that all appended records have been written.</span></span> <span data-ttu-id="e7977-542">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-542">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-543">最後に書き込まれたレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-543">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-544">このメソッドを呼び出すことにより、<xref:System.IO.Log.FileRecordSequence> に追加されたすべてのレコードが永続的に書き込まれたことを確認します。</span><span class="sxs-lookup"><span data-stu-id="e7977-544">Calling this method ensures that all records that have been appended to the <xref:System.IO.Log.FileRecordSequence> have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-545">データのフラッシュ中に I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e7977-545">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-546">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-546">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-547">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-547">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber Flush(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber Flush(System::IO::Log::SequenceNumber sequenceNumber);" />
      <MemberSignature Language="F#" Value="abstract member Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.Flush : System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.Flush sequenceNumber" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.Flush(System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber"><span data-ttu-id="e7977-548">書き込む必要のある最新レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-548">The sequence number of the latest record that must be written.</span></span> <span data-ttu-id="e7977-549">この <see cref="T:System.IO.Log.SequenceNumber" /> が無効な場合、すべてのレコードを書き込む必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-549">If this <see cref="T:System.IO.Log.SequenceNumber" /> is invalid, then all records must be written.</span></span></param>
        <summary><span data-ttu-id="e7977-550">追加したすべてのレコードが書き込まれたことを確認します。</span><span class="sxs-lookup"><span data-stu-id="e7977-550">Ensures that all appended records have been written.</span></span> <span data-ttu-id="e7977-551">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-551">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-552">最後に書き込まれたレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-552">The sequence number of the last record written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-553">このメソッドを呼び出すと、指定のシーケンス番号以下のシーケンス番号を持つすべてのレコードが永続的に書き込まれたことが確認されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-553">Calling this method ensures that all records with sequence numbers up to and including the specified sequence number have been durably written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-554"><paramref name="sequenceNumber" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-554"><paramref name="sequenceNumber" /> is not between the base and last sequence numbers of this sequence.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-555">このシーケンスの <paramref name="sequenceNumber" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-555"><paramref name="sequenceNumber" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-556">データのフラッシュ中に I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="e7977-556">An I/O error occurred while flushing the data.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-557">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-557">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-558">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-558">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber LastSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber LastSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.LastSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber LastSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.LastSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.LastSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7977-559">追加された最後のレコードのシーケンス番号より大きいシーケンス番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="e7977-559">Gets the sequence number which is greater than the last record appended.</span></span></summary>
        <value><span data-ttu-id="e7977-560">追加された最後のレコードのシーケンス番号より大きいシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-560">A sequence number which is greater than the last record appended.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-561">このプロパティには、最後に追加されたレコードのシーケンス番号を超えることが保証されるシーケンス番号が格納されています。</span><span class="sxs-lookup"><span data-stu-id="e7977-561">This property contains a sequence number that is guaranteed to be larger than the sequence number of the last appended record.</span></span> <span data-ttu-id="e7977-562">有効なシーケンス番号は、<xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> 以上、<xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A> 未満です。</span><span class="sxs-lookup"><span data-stu-id="e7977-562">Valid sequence numbers are greater than or equal to <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> and less than <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</span></span> <span data-ttu-id="e7977-563">その他のシーケンス番号はすべて無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-563">All other sequence numbers are invalid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-564">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="e7977-564">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaximumRecordLength">
      <MemberSignature Language="C#" Value="public long MaximumRecordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaximumRecordLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.MaximumRecordLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaximumRecordLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaximumRecordLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRecordLength : int64" Usage="System.IO.Log.FileRecordSequence.MaximumRecordLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.MaximumRecordLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7977-565">このシーケンスに対して追加または読み取りが可能な最大レコード サイズのバイト数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e7977-565">Gets the size of the largest record that can be appended to or read from this sequence, in bytes.</span></span></summary>
        <value><span data-ttu-id="e7977-566">このシーケンスに対して追加または読み取りが可能な最大レコード サイズのバイト数。</span><span class="sxs-lookup"><span data-stu-id="e7977-566">The size of the largest record that can be appended to or read from this sequence, in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-567">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="e7977-567">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLogRecords">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadLogRecords(valuetype System.IO.Log.SequenceNumber start, valuetype System.IO.Log.LogRecordEnumeratorType logRecordEnum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLogRecords (start As SequenceNumber, logRecordEnum As LogRecordEnumeratorType) As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadLogRecords(System::IO::Log::SequenceNumber start, System::IO::Log::LogRecordEnumeratorType logRecordEnum);" />
      <MemberSignature Language="F#" Value="abstract member ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadLogRecords : System.IO.Log.SequenceNumber * System.IO.Log.LogRecordEnumeratorType -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="fileRecordSequence.ReadLogRecords (start, logRecordEnum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="logRecordEnum" Type="System.IO.Log.LogRecordEnumeratorType" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="e7977-568">読み取りを開始する先頭レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-568">The sequence number of the first record where the reading starts.</span></span></param>
        <param name="logRecordEnum"><span data-ttu-id="e7977-569"><see cref="T:System.IO.Log.LogRecordEnumeratorType" /> からレコードを読み取る方法 (つまり、順方向または逆方向) を指定する有効な <see cref="T:System.IO.Log.LogRecordSequence" /> 値。</span><span class="sxs-lookup"><span data-stu-id="e7977-569">A valid <see cref="T:System.IO.Log.LogRecordEnumeratorType" /> value that specifies the manner (that is, forward or backward) in which records should be read from a <see cref="T:System.IO.Log.LogRecordSequence" />.</span></span></param>
        <summary><span data-ttu-id="e7977-570">シーケンス内のレコードの列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e7977-570">Returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="e7977-571">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-571">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-572">シーケンス内のレコードの列挙可能なコレクション。</span><span class="sxs-lookup"><span data-stu-id="e7977-572">An enumerable collection of records in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-573">このメソッドは、シーケンス内のレコードの列挙可能なコレクション。</span><span class="sxs-lookup"><span data-stu-id="e7977-573">This method returns an enumerable collection of records in the sequence.</span></span> <span data-ttu-id="e7977-574">列挙されたレコードの順序は、`logRecordEnum` パラメーター値に依存します。</span><span class="sxs-lookup"><span data-stu-id="e7977-574">The order of the enumerated records depends on the value of the `logRecordEnum` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e7977-575">このメソッドを使用してログ シーケンスのレコードを読み取る方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="e7977-575">The following example shows how you can use this method to read the records in a log sequence.</span></span>  
  
 [!code-csharp[IRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/irecordsequence/cs/readrecord.cs#2)]
 [!code-vb[IRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/irecordsequence/vb/readrecord.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-576">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-576">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-577">レコード シーケンスが書き込み専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-577">The operation cannot be performed because the record sequence was opened with write-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-578">レコード シーケンスが破損しています。</span><span class="sxs-lookup"><span data-stu-id="e7977-578">The record sequence is corrupted.</span></span>  
  
<span data-ttu-id="e7977-579">または</span><span class="sxs-lookup"><span data-stu-id="e7977-579">-or-</span></span> 
<span data-ttu-id="e7977-580">レコードは、レコード シーケンスと互換性がないバージョンで書き込まれました。</span><span class="sxs-lookup"><span data-stu-id="e7977-580">The record was written with an incompatible version of the record sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7977-581">列挙体が終了しています。</span><span class="sxs-lookup"><span data-stu-id="e7977-581">The enumeration has ended.</span></span>  
  
<span data-ttu-id="e7977-582">または</span><span class="sxs-lookup"><span data-stu-id="e7977-582">-or-</span></span> 
<span data-ttu-id="e7977-583">列挙体が開始されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-583">The enumeration has not been started.</span></span> <span data-ttu-id="e7977-584"><see cref="M:System.Collections.IEnumerator.MoveNext" /> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-584">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-585">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-585">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-586">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-586">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadRestartAreas">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt; ReadRestartAreas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Log.LogRecord&gt; ReadRestartAreas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReadRestartAreas" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadRestartAreas () As IEnumerable(Of LogRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::IO::Log::LogRecord ^&gt; ^ ReadRestartAreas();" />
      <MemberSignature Language="F#" Value="abstract member ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;&#xA;override this.ReadRestartAreas : unit -&gt; seq&lt;System.IO.Log.LogRecord&gt;" Usage="fileRecordSequence.ReadRestartAreas " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReadRestartAreas</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.IO.Log.LogRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e7977-587">シーケンス内の再開領域の列挙可能なコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="e7977-587">Returns an enumerable collection of the restart areas in the sequence.</span></span> <span data-ttu-id="e7977-588">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-588">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-589">シーケンス内の再開領域の列挙可能なコレクション。</span><span class="sxs-lookup"><span data-stu-id="e7977-589">An enumerable collection of the restart areas in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-590">再開領域では、シーケンス番号の逆順で (大きなシーケンス番号から小さなシーケンス番号に向かって) 列挙されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-590">The restart areas are enumerated in reverse sequence number order, that is, from the highest sequence number to the lowest sequence number.</span></span> <span data-ttu-id="e7977-591">最後のシーケンス番号と基本シーケンス番号の間のシーケンス番号を持つ再開領域のみが列挙されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-591">Only restart areas with sequence numbers between the last sequence number and the base sequence number are enumerated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-592">レコード シーケンスが書き込み専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-592">The operation cannot be performed because the record sequence was opened with write-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-593">レコード シーケンスが破損しています。</span><span class="sxs-lookup"><span data-stu-id="e7977-593">The record sequence is corrupted.</span></span>  
  
<span data-ttu-id="e7977-594">または</span><span class="sxs-lookup"><span data-stu-id="e7977-594">-or-</span></span> 
<span data-ttu-id="e7977-595">レコードは、レコード シーケンスと互換性がないバージョンで書き込まれました。</span><span class="sxs-lookup"><span data-stu-id="e7977-595">The record was written with an incompatible version of the record sequence.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="e7977-596">列挙体が終了しています。</span><span class="sxs-lookup"><span data-stu-id="e7977-596">The enumeration has ended.</span></span>  
  
<span data-ttu-id="e7977-597">- または -</span><span class="sxs-lookup"><span data-stu-id="e7977-597">-or-</span></span> 
<span data-ttu-id="e7977-598">列挙体が開始されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-598">The enumeration has not been started.</span></span> <span data-ttu-id="e7977-599"><see cref="M:System.Collections.IEnumerator.MoveNext" /> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e7977-599">A call to <see cref="M:System.Collections.IEnumerator.MoveNext" /> must be made.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-600">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-600">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-601">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-601">There is not enough memory to continue the execution of the program.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReserveAndAppend">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7977-602">単一の予約を自動的に行って、シーケンスにレコードを追加します。</span><span class="sxs-lookup"><span data-stu-id="e7977-602">Automatically makes a single reservation and appends a record to the sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-603">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-603">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-604">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-604">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-605">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-605">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-606">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-606">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="e7977-607">予約を作成するコレクションを格納する <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-607">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7977-608">作成する予約のバイト数。</span><span class="sxs-lookup"><span data-stu-id="e7977-608">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="e7977-609">単一の予約を自動的に行って、シーケンスにレコードを追加します。</span><span class="sxs-lookup"><span data-stu-id="e7977-609">Automatically makes a single reservation and appends a record to the sequence.</span></span> <span data-ttu-id="e7977-610">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-610">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-611">追加されたログ レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-611">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-612">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-612">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-613">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-613">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-614">指定の予約情報は、レコード追加操作を含む分割不可能な操作内で、提供された予約コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-614">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e7977-615">追加が失敗した場合、領域は予約されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-615">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e7977-616">このメソッドは通常、レコードの書き込みが終わる前に完了できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-616">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e7977-617">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-617">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-618">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-618">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-619">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-619">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-620"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-620"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-621">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-621">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-622">予期しない I/O 例外のため、要求は実行されませんでした。</span><span class="sxs-lookup"><span data-stu-id="e7977-622">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-623">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-623">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-624">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-624">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-625">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-625">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReserveAndAppend">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, params long[] reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber ReserveAndAppend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber nextUndoRecord, valuetype System.IO.Log.SequenceNumber previousRecord, valuetype System.IO.Log.RecordAppendOptions recordAppendOptions, class System.IO.Log.ReservationCollection reservationCollection, int64[] reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber ReserveAndAppend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber nextUndoRecord, System::IO::Log::SequenceNumber previousRecord, System::IO::Log::RecordAppendOptions recordAppendOptions, System::IO::Log::ReservationCollection ^ reservationCollection, ... cli::array &lt;long&gt; ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber&#xA;override this.ReserveAndAppend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.SequenceNumber * System.IO.Log.RecordAppendOptions * System.IO.Log.ReservationCollection * int64[] -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.ReserveAndAppend (data, nextUndoRecord, previousRecord, recordAppendOptions, reservationCollection, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="nextUndoRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="previousRecord" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="recordAppendOptions" Type="System.IO.Log.RecordAppendOptions" />
        <Parameter Name="reservationCollection" Type="System.IO.Log.ReservationCollection" />
        <Parameter Name="reservations" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-626">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-626">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="nextUndoRecord"><span data-ttu-id="e7977-627">ユーザー指定の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-627">The sequence number of the next record in the user-specified order.</span></span></param>
        <param name="previousRecord"><span data-ttu-id="e7977-628">以前の順序で次のレコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-628">The sequence number of the next record in Previous order.</span></span></param>
        <param name="recordAppendOptions"><span data-ttu-id="e7977-629">データの書き込み方法を指定する <see cref="T:System.IO.Log.RecordAppendOptions" /> の有効な値。</span><span class="sxs-lookup"><span data-stu-id="e7977-629">A valid value of <see cref="T:System.IO.Log.RecordAppendOptions" /> that specifies how the data should be written.</span></span></param>
        <param name="reservationCollection"><span data-ttu-id="e7977-630">予約を作成する予約コレクション。</span><span class="sxs-lookup"><span data-stu-id="e7977-630">The reservation collection to make reservations in.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7977-631">作成する予約のバイト数。</span><span class="sxs-lookup"><span data-stu-id="e7977-631">The reservations to make, in bytes.</span></span></param>
        <summary><span data-ttu-id="e7977-632">単一の予約を自動的に行って、シーケンスにレコードを追加します。</span><span class="sxs-lookup"><span data-stu-id="e7977-632">Automatically makes a single reservation and appends a record to the sequence.</span></span> <span data-ttu-id="e7977-633">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-633">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-634">追加されたログ レコードのシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-634">The sequence number of the appended log record.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-635">`data` パラメーターに格納されたデータは、レコードとして追加するために単一バイトの配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-635">Data contained in the `data` parameter will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-636">ただし、レコードの読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-636">However, no provision is made for splitting data back into array segments when the record is read.</span></span>  
  
 <span data-ttu-id="e7977-637">指定の予約情報は、レコード追加操作を含む分割不可能な操作内で、提供された予約コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-637">The specified reservations are added to the provided reservation collection in an atomic operation with a record append operation.</span></span> <span data-ttu-id="e7977-638">追加が失敗した場合、領域は予約されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-638">If the append fails, no space is reserved.</span></span>  
  
 <span data-ttu-id="e7977-639">このメソッドは通常、レコードの書き込みが終わる前に完了できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-639">Normally, this method may complete before the record has been written.</span></span> <span data-ttu-id="e7977-640">レコードが書き込まれたことを確認するために、<xref:System.IO.Log.RecordAppendOptions.ForceFlush> パラメーターを使用して `recordAppendOptions` フラグを指定するか、<xref:System.IO.Log.FileRecordSequence.Flush%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e7977-640">To ensure that a record has been written, either specify the <xref:System.IO.Log.RecordAppendOptions.ForceFlush> flag using the `recordAppendOptions` parameter, or call the <xref:System.IO.Log.FileRecordSequence.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-641">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-641">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-642">1 つ以上の引数が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="e7977-642">One or more of the arguments are out of range.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-643"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-643"><paramref name="reservations" /> was not created by this record sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-644">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-644">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-645">予期しない I/O 例外のため、要求は実行されませんでした。</span><span class="sxs-lookup"><span data-stu-id="e7977-645">The request could not be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-646">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-646">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-647">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-647">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-648">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-648">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReservedBytes">
      <MemberSignature Language="C#" Value="public long ReservedBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReservedBytes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.ReservedBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReservedBytes As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReservedBytes { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ReservedBytes : int64" Usage="System.IO.Log.FileRecordSequence.ReservedBytes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.ReservedBytes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7977-649">予約された合計バイト数を取得します。</span><span class="sxs-lookup"><span data-stu-id="e7977-649">Gets the total number of bytes that have been reserved.</span></span></summary>
        <value><span data-ttu-id="e7977-650">このレコード シーケンス内でなされたすべての予約の合計サイズ。</span><span class="sxs-lookup"><span data-stu-id="e7977-650">The total size of all reservations made in this record sequence.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-651">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="e7977-651">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RestartSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber RestartSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestartSequenceNumber As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::SequenceNumber RestartSequenceNumber { System::IO::Log::SequenceNumber get(); };" />
      <MemberSignature Language="F#" Value="member this.RestartSequenceNumber : System.IO.Log.SequenceNumber" Usage="System.IO.Log.FileRecordSequence.RestartSequenceNumber" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RestartSequenceNumber</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7977-652">直前に書き込まれた再開領域のシーケンス番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="e7977-652">Gets the sequence number of the most recently written restart area.</span></span></summary>
        <value><span data-ttu-id="e7977-653">直前に書き込まれた再開領域のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-653">The sequence number of the most recently written restart area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-654">再開領域は、クライアントの最後のチェックポイント操作に関する情報を一時的に保存するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-654">A restart area is used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7977-655">Common Log File System (CLFS) は、少なくとも 1 つの有効な領域が常に使用可能であることを保証するために 2 つの再開領域を維持します。</span><span class="sxs-lookup"><span data-stu-id="e7977-655">The Common Log File System (CLFS) maintains two restart areas to guarantee that at least one valid area is always available.</span></span> <span data-ttu-id="e7977-656">回復処理が必要な場合、CLFS は最後のチェックポイント操作から再開領域とすべてのデータを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="e7977-656">When a recovery is necessary, the CLFS reads its restart area and all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7977-657">このデータは、回復プロセスで使用できるようにトランザクション テーブルおよびダーティ ページ テーブルを初期化し、ファイル テーブルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e7977-657">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-658">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="e7977-658">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RetryAppend">
      <MemberSignature Language="C#" Value="public bool RetryAppend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetryAppend" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.FileRecordSequence.RetryAppend" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryAppend As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RetryAppend { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RetryAppend : bool with get, set" Usage="System.IO.Log.FileRecordSequence.RetryAppend" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IO.Log.IRecordSequence.RetryAppend</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7977-659">ログがいっぱいの場合に、追加を自動的に再試行するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e7977-659">Gets or sets a value indicating whether or not appends are automatically retried if the log is full.</span></span></summary>
        <value><span data-ttu-id="e7977-660">ログがいっぱいの場合に追加の再試行を自動的に行う場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-660"><see langword="true" /> if appends are automatically retried if the log is full; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e7977-661">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-661">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-662">このプロパティ値が `true` である場合で、シーケンス内に十分な領域がないために <xref:System.IO.Log.FileRecordSequence.Append%2A> の呼び出しが失敗したときは、レコード シーケンスが領域の解放を試みた後、追加の再試行を行います。</span><span class="sxs-lookup"><span data-stu-id="e7977-662">If the value of this property is `true`, and an <xref:System.IO.Log.FileRecordSequence.Append%2A> call fails because there is not enough space in the sequence, the record sequence will try to free space and retry the append.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-663">シーケンスが破棄された後にプロパティがアクセスされました。</span><span class="sxs-lookup"><span data-stu-id="e7977-663">The property was accessed after the sequence has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TailPinned">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; TailPinned;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IO.Log.TailPinnedEventArgs&gt; TailPinned" />
      <MemberSignature Language="DocId" Value="E:System.IO.Log.FileRecordSequence.TailPinned" />
      <MemberSignature Language="VB.NET" Value="Public Event TailPinned As EventHandler(Of TailPinnedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::IO::Log::TailPinnedEventArgs ^&gt; ^ TailPinned;" />
      <MemberSignature Language="F#" Value="member this.TailPinned : EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " Usage="member this.TailPinned : System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.IO.Log.IRecordSequence.TailPinned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IO.Log.TailPinnedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7977-664">レコード シーケンスで末尾を前方に移動する必要があると判断された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="e7977-664">Occurs when the record sequence determines that the tail must be moved forward.</span></span> <span data-ttu-id="e7977-665">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-665">This method cannot be inherited.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-666">このイベントは、レコード シーケンスが領域を使い果たしたときに発行できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-666">You can fire this event when the record sequence has run out of space.</span></span> <span data-ttu-id="e7977-667">このイベントが発行されると、シーケンスの末尾 (つまり、基本シーケンス番号) が領域の解放のために前方に移動します。</span><span class="sxs-lookup"><span data-stu-id="e7977-667">When this event is fired, the tail of the sequence (that is, the base sequence number) is moved forward to free up space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRestartArea">
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e7977-668">再開領域を <see cref="T:System.IO.Log.FileRecordSequence" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-668">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-669">再開領域は、クライアントの最後のチェックポイント操作に関する情報を一時的に保存するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-669">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7977-670">回復処理が必要な場合、最後のチェックポイント操作から再開領域を読み取り、すべてのデータを取得できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-670">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7977-671">このデータは、回復プロセスで使用できるようにトランザクション テーブルおよびダーティ ページ テーブルを初期化し、ファイル テーブルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e7977-671">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7977-672">再開領域は、<xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> メソッドを使用して読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="e7977-672">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte)) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-673">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-673">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="e7977-674">再開領域を <see cref="T:System.IO.Log.FileRecordSequence" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-674">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="e7977-675">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-675">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-676">書き込まれた再開領域のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-676">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-677">再開領域は、クライアントの最後のチェックポイント操作に関する情報を一時的に保存するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-677">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7977-678">回復処理が必要な場合、最後のチェックポイント操作から再開領域を読み取り、すべてのデータを取得できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-678">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7977-679">このデータは、回復プロセスで使用できるようにトランザクション テーブルおよびダーティ ページ テーブルを初期化し、ファイル テーブルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e7977-679">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7977-680">再開領域は、<xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> メソッドを使用して読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="e7977-680">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7977-681">バイト配列セグメント内のデータは、レコードとして追加するために単一のバイト配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-681">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-682">レコード領域の読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-682">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-683">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-683">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-684">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-684">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-685">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-685">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-686">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-686">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-687">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-687">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-688">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-688">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte))) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-689">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-689">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <summary><span data-ttu-id="e7977-690">再開領域を <see cref="T:System.IO.Log.FileRecordSequence" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-690">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="e7977-691">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-691">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-692">書き込まれた再開領域のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-692">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-693">再開領域は、クライアントの最後のチェックポイント操作に関する情報を一時的に保存するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-693">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7977-694">回復処理が必要な場合、最後のチェックポイント操作から再開領域を読み取り、すべてのデータを取得できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-694">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7977-695">このデータは、回復プロセスで使用できるようにトランザクション テーブルおよびダーティ ページ テーブルを初期化し、ファイル テーブルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e7977-695">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7977-696">再開領域は、<xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> メソッドを使用して読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="e7977-696">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7977-697">バイト配列セグメント内のデータは、レコードとして追加するために単一のバイト配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-697">The data in the byte array segments will be concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-698">レコード領域の読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-698">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-699">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-699">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-700">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-700">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-701">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-701">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-702">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-702">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-703">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-703">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-704">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-704">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-705">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-705">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7977-706">新しい基本シーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-706">The new base sequence number.</span></span> <span data-ttu-id="e7977-707">指定するシーケンス番号は、現在の基本シーケンス番号以上であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="e7977-707">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="e7977-708">再開領域を <see cref="T:System.IO.Log.FileRecordSequence" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-708">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="e7977-709">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-709">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-710">書き込まれた再開領域のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-710">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-711">再開領域は、クライアントの最後のチェックポイント操作に関する情報を一時的に保存するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-711">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7977-712">回復処理が必要な場合、最後のチェックポイント操作から再開領域を読み取り、すべてのデータを取得できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-712">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7977-713">このデータは、回復プロセスで使用できるようにトランザクション テーブルおよびダーティ ページ テーブルを初期化し、ファイル テーブルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e7977-713">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7977-714">再開領域は、<xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> メソッドを使用して読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="e7977-714">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7977-715">再開領域が書き込まれた場合、バイト配列セグメント内のデータはレコードとして追加するために単一のバイト配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-715">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-716">レコード領域の読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-716">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e7977-717">このメソッドが正しく完了すると、基本シーケンス番号が更新されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-717">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7977-718">新しい基本シーケンス番号未満の番号を持つすべてのログ レコードは、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="e7977-718">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-719">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-719">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-720"><paramref name="newBaseSeqNum" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-720"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="e7977-721">- または -</span><span class="sxs-lookup"><span data-stu-id="e7977-721">-or-</span></span> 
<span data-ttu-id="e7977-722">新しいアーカイブ末尾または既存のアーカイブ末尾、あるいはアーカイブ ログの基本が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-722">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-723">このシーケンスの <paramref name="newBaseSeqNum" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-723"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-724">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-724">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-725">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-725">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-726">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-726">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-727">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-727">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-728">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-728">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-729">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-729">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7977-730">新しい基本シーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-730">The new base sequence number.</span></span> <span data-ttu-id="e7977-731">指定するシーケンス番号は、現在の基本シーケンス番号以上であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="e7977-731">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <summary><span data-ttu-id="e7977-732">再開領域を <see cref="T:System.IO.Log.FileRecordSequence" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-732">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="e7977-733">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-733">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-734">書き込まれた再開領域のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-734">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-735">再開領域は、クライアントの最後のチェックポイント操作に関する情報を一時的に保存するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-735">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7977-736">回復処理が必要な場合、最後のチェックポイント操作から再開領域を読み取り、すべてのデータを取得できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-736">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7977-737">このデータは、回復プロセスで使用できるようにトランザクション テーブルおよびダーティ ページ テーブルを初期化し、ファイル テーブルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e7977-737">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7977-738">再開領域は、<xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> メソッドを使用して読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="e7977-738">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7977-739">再開領域が書き込まれた場合、バイト配列セグメント内のデータはレコードとして追加するために単一のバイト配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-739">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-740">レコード領域の読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-740">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e7977-741">このメソッドが正しく完了すると、基本シーケンス番号が更新されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-741">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7977-742">新しい基本シーケンス番号未満の番号を持つすべてのログ レコードは、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="e7977-742">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-743">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-743">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-744"><paramref name="newBaseSeqNum" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-744"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="e7977-745">または</span><span class="sxs-lookup"><span data-stu-id="e7977-745">-or-</span></span> 
<span data-ttu-id="e7977-746">新しいアーカイブ末尾または既存のアーカイブ末尾、あるいはアーカイブ ログの基本が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-746">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-747">このシーケンスの <paramref name="newBaseSeqNum" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-747"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-748">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-748">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-749">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-749">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-750">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-750">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-751">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-751">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-752">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-752">The record sequence is full.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment&lt;byte&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(valuetype System.ArraySegment`1&lt;unsigned int8&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As ArraySegment(Of Byte), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(ArraySegment&lt;System::Byte&gt; data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : ArraySegment&lt;byte&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-753">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-753">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7977-754">新しい基本シーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-754">The new base sequence number.</span></span> <span data-ttu-id="e7977-755">指定するシーケンス番号は、現在の基本シーケンス番号以上であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="e7977-755">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7977-756">この再開領域で使用する予約情報を格納する <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-756">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="e7977-757">再開領域を <see cref="T:System.IO.Log.FileRecordSequence" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-757">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="e7977-758">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-758">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-759">書き込まれた再開領域のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-759">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-760">再開領域は、クライアントの最後のチェックポイント操作に関する情報を一時的に保存するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-760">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7977-761">回復処理が必要な場合、最後のチェックポイント操作から再開領域を読み取り、すべてのデータを取得できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-761">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7977-762">このデータは、回復プロセスで使用できるようにトランザクション テーブルおよびダーティ ページ テーブルを初期化し、ファイル テーブルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e7977-762">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7977-763">再開領域は、<xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> メソッドを使用して読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="e7977-763">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7977-764">再開領域が書き込まれた場合、バイト配列セグメント内のデータはレコードとして追加するために単一のバイト配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-764">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-765">レコード領域の読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-765">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e7977-766">予約を指定すると、コレクションに格納されていた予約情報で以前に予約された領域が書き込まれた再開領域により消費されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-766">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e7977-767">このメソッドが成功すると、データを格納できる最も小さな予約が消費され、その予約がコレクションから削除されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-767">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7977-768">このメソッドが正しく完了すると、基本シーケンス番号が更新されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-768">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7977-769">新しい基本シーケンス番号未満の番号を持つすべてのログ レコードは、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="e7977-769">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e7977-770">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、この操作内で例外が直ちにスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-770">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7977-771">I/O 要求時にディスク障害が発生した場合など、非同期追加要求中にエラーが発生した場合、<xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> メソッドが呼び出されたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-771">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-772">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-772">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-773"><paramref name="newBaseSeqNum" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-773"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="e7977-774">または</span><span class="sxs-lookup"><span data-stu-id="e7977-774">-or-</span></span> 
<span data-ttu-id="e7977-775">新しいアーカイブ末尾または既存のアーカイブ末尾、あるいはアーカイブ ログの基本が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-775">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-776"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-776"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
<span data-ttu-id="e7977-777">- または -</span><span class="sxs-lookup"><span data-stu-id="e7977-777">-or-</span></span> 
 <span data-ttu-id="e7977-778">このシーケンスの <paramref name="newBaseSeqNum" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-778"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-779">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-779">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-780">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-780">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-781">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-781">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-782">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-782">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-783">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-783">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7977-784"><paramref name="data" /> に対応する十分なサイズの予約が <paramref name="reservations" /> に見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-784">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteRestartArea">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.IO.Log.SequenceNumber WriteRestartArea(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; data, valuetype System.IO.Log.SequenceNumber newBaseSeqNum, class System.IO.Log.ReservationCollection reservations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteRestartArea (data As IList(Of ArraySegment(Of Byte)), newBaseSeqNum As SequenceNumber, reservations As ReservationCollection) As SequenceNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Log::SequenceNumber WriteRestartArea(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ data, System::IO::Log::SequenceNumber newBaseSeqNum, System::IO::Log::ReservationCollection ^ reservations);" />
      <MemberSignature Language="F#" Value="abstract member WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber&#xA;override this.WriteRestartArea : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.IO.Log.SequenceNumber * System.IO.Log.ReservationCollection -&gt; System.IO.Log.SequenceNumber" Usage="fileRecordSequence.WriteRestartArea (data, newBaseSeqNum, reservations)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IO.Log.IRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="newBaseSeqNum" Type="System.IO.Log.SequenceNumber" />
        <Parameter Name="reservations" Type="System.IO.Log.ReservationCollection" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="e7977-785">レコードとして連結および追加されるバイト配列セグメントのリスト。</span><span class="sxs-lookup"><span data-stu-id="e7977-785">A list of byte array segments that will be concatenated and appended as the record.</span></span></param>
        <param name="newBaseSeqNum"><span data-ttu-id="e7977-786">新しい基本シーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-786">The new base sequence number.</span></span> <span data-ttu-id="e7977-787">指定するシーケンス番号は、現在の基本シーケンス番号以上であることが必要です。</span><span class="sxs-lookup"><span data-stu-id="e7977-787">The specified sequence number must be greater than or equal to the current base sequence number.</span></span></param>
        <param name="reservations"><span data-ttu-id="e7977-788">この再開領域で使用する予約情報を格納する <see cref="T:System.IO.Log.ReservationCollection" />。</span><span class="sxs-lookup"><span data-stu-id="e7977-788">A <see cref="T:System.IO.Log.ReservationCollection" /> that contains the reservation that should be used for this restart area.</span></span></param>
        <summary><span data-ttu-id="e7977-789">再開領域を <see cref="T:System.IO.Log.FileRecordSequence" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e7977-789">Writes a restart area to the <see cref="T:System.IO.Log.FileRecordSequence" />.</span></span> <span data-ttu-id="e7977-790">このメソッドは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-790">This method cannot be inherited.</span></span></summary>
        <returns><span data-ttu-id="e7977-791">書き込まれた再開領域のシーケンス番号。</span><span class="sxs-lookup"><span data-stu-id="e7977-791">The sequence number of the written restart area.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7977-792">再開領域は、クライアントの最後のチェックポイント操作に関する情報を一時的に保存するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-792">A restart area can be used to temporarily store information containing a client's last checkpoint operation.</span></span> <span data-ttu-id="e7977-793">回復処理が必要な場合、最後のチェックポイント操作から再開領域を読み取り、すべてのデータを取得できます。</span><span class="sxs-lookup"><span data-stu-id="e7977-793">When a recovery is necessary, you can read a restart area and retrieve all the data from the last checkpoint operation.</span></span> <span data-ttu-id="e7977-794">このデータは、回復プロセスで使用できるようにトランザクション テーブルおよびダーティ ページ テーブルを初期化し、ファイル テーブルを開きます。</span><span class="sxs-lookup"><span data-stu-id="e7977-794">This data initializes the transaction table, dirty pages table, and open file table so they can be used in the recovery process.</span></span>  
  
 <span data-ttu-id="e7977-795">再開領域は、<xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> メソッドを使用して読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="e7977-795">A restart area can be read using the <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A> method.</span></span>  
  
 <span data-ttu-id="e7977-796">再開領域が書き込まれた場合、バイト配列セグメント内のデータはレコードとして追加するために単一のバイト配列に連結されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-796">When a restart area is written, the data in the byte array segments are concatenated into a single byte array for appending as the record.</span></span> <span data-ttu-id="e7977-797">レコード領域の読み取り時にデータを分割して配列セグメントに戻す準備は実施されません。</span><span class="sxs-lookup"><span data-stu-id="e7977-797">No provision is made for splitting data back into array segments when the restart area is read.</span></span>  
  
 <span data-ttu-id="e7977-798">予約を指定すると、コレクションに格納されていた予約情報で以前に予約された領域が書き込まれた再開領域により消費されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-798">If a reservation is specified, the written restart area will consume space that has been previously reserved, using a reservation contained in the collection.</span></span> <span data-ttu-id="e7977-799">このメソッドが成功すると、データを格納できる最も小さな予約が消費され、その予約がコレクションから削除されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-799">If the method succeeds, it will consume the smallest reservation that can contain the data, and that reservation will be removed from the collection.</span></span>  
  
 <span data-ttu-id="e7977-800">このメソッドが正しく完了すると、基本シーケンス番号が更新されます。</span><span class="sxs-lookup"><span data-stu-id="e7977-800">When this method successfully completes, the base sequence number has been updated.</span></span> <span data-ttu-id="e7977-801">新しい基本シーケンス番号未満の番号を持つすべてのログ レコードは、アクセスできません。</span><span class="sxs-lookup"><span data-stu-id="e7977-801">All log records with sequence numbers less than the new base sequence number are inaccessible.</span></span>  
  
 <span data-ttu-id="e7977-802">レコード シーケンスが破棄されている場合、または無効な引数を渡した場合、この操作内で例外が直ちにスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-802">If a record sequence has been disposed of, or if you pass an invalid argument, exceptions are thrown immediately within this operation.</span></span> <span data-ttu-id="e7977-803">I/O 要求時にディスク障害が発生した場合など、非同期追加要求中にエラーが発生した場合、<xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> メソッドが呼び出されたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e7977-803">Errors that occurred during an asynchronous append request, for example, a disk failure during the I/O request, will result in exceptions being thrown when the <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e7977-804">1 つ以上の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e7977-804">One or more of the arguments are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e7977-805"><paramref name="newBaseSeqNum" /> が、このシーケンスの基本シーケンス番号と最後のシーケンス番号との間にありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-805"><paramref name="newBaseSeqNum" /> is not between the base and last sequence numbers of this sequence.</span></span>  
  
<span data-ttu-id="e7977-806">または</span><span class="sxs-lookup"><span data-stu-id="e7977-806">-or-</span></span> 
<span data-ttu-id="e7977-807">新しいアーカイブ末尾または既存のアーカイブ末尾、あるいはアーカイブ ログの基本が無効です。</span><span class="sxs-lookup"><span data-stu-id="e7977-807">A new or existing archive tail or base of the active log is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e7977-808"><paramref name="reservations" /> が、このレコード シーケンスによって作成されていません。</span><span class="sxs-lookup"><span data-stu-id="e7977-808"><paramref name="reservations" /> was not created by this record sequence.</span></span>  
  
<span data-ttu-id="e7977-809">または</span><span class="sxs-lookup"><span data-stu-id="e7977-809">-or-</span></span> 
 <span data-ttu-id="e7977-810">このシーケンスの <paramref name="newBaseSeqNum" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-810"><paramref name="newBaseSeqNum" /> is not valid for this sequence.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e7977-811">レコード シーケンスが読み取り専用アクセスで開かれているため、操作を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-811">The operation cannot be performed because the record sequence was opened with read-only access.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="e7977-812">予期しない I/O 例外のため、要求を実行できません。</span><span class="sxs-lookup"><span data-stu-id="e7977-812">The request cannot be performed because of an unexpected I/O exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="e7977-813">シーケンスが破棄された後にメソッドが呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="e7977-813">The method was called after the sequence has been disposed of.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="e7977-814">プログラムの実行を継続する十分なメモリがありません。</span><span class="sxs-lookup"><span data-stu-id="e7977-814">There is not enough memory to continue the execution of the program.</span></span></exception>
        <exception cref="T:System.IO.Log.SequenceFullException"><span data-ttu-id="e7977-815">レコード シーケンスがいっぱいです。</span><span class="sxs-lookup"><span data-stu-id="e7977-815">The record sequence is full.</span></span></exception>
        <exception cref="T:System.IO.Log.ReservationNotFoundException"><span data-ttu-id="e7977-816"><paramref name="data" /> に対応する十分なサイズの予約が <paramref name="reservations" /> に見つかりません。</span><span class="sxs-lookup"><span data-stu-id="e7977-816">No reservation large enough to fit <paramref name="data" /> can be found in <paramref name="reservations" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>