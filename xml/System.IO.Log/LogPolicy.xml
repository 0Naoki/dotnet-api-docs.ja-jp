<Type Name="LogPolicy" FullName="System.IO.Log.LogPolicy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7bafa234b9feebfcca1383b45c3b8555f5c167d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37758971" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LogPolicy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogPolicy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogPolicy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LogPolicy" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogPolicy sealed" />
  <TypeSignature Language="F#" Value="type LogPolicy = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="19670-101">Represents the policy associated with a <see cref="T:System.IO.Log.LogStore" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="19670-101">Represents the policy associated with a <see cref="T:System.IO.Log.LogStore" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19670-102">ポリシーは、<xref:System.IO.Log.LogStore> インスタンスおよびそのクライアントが従う一連の規則です。</span><span class="sxs-lookup"><span data-stu-id="19670-102">A policy is a set of rules to be followed by a <xref:System.IO.Log.LogStore> instance and its clients.</span></span> <span data-ttu-id="19670-103"><xref:System.IO.Log.LogPolicy> インスタンスは、特定の <xref:System.IO.Log.LogStore> に関連付けられたポリシーを確認および変更します。</span><span class="sxs-lookup"><span data-stu-id="19670-103">A <xref:System.IO.Log.LogPolicy> instance is used to examine and modify the policy associated with a specific <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="19670-104">ポリシーには、最小ログ サイズおよび最大ログ サイズや、<xref:System.IO.Log.LogStore> インスタンスのサイズ増加方法を定義できます。</span><span class="sxs-lookup"><span data-stu-id="19670-104">A policy can describe the minimum and maximum allowable log sizes, or how the <xref:System.IO.Log.LogStore> instance is allowed to grow.</span></span> <span data-ttu-id="19670-105">また、<xref:System.IO.Log.LogStore> インスタンスをアーカイブ可能にするかどうかを制御することもできます。</span><span class="sxs-lookup"><span data-stu-id="19670-105">In addition, you can also control whether a <xref:System.IO.Log.LogStore> instance can be archived.</span></span>  
  
 <span data-ttu-id="19670-106">いずれかのプロパティを変更した後は、<xref:System.IO.Log.LogPolicy.Commit%2A> メソッドを使用して、変更を <xref:System.IO.Log.LogStore> に適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="19670-106">After changing any of the properties, you should use the <xref:System.IO.Log.LogPolicy.Commit%2A> method to ensure that the changes are applied to the <xref:System.IO.Log.LogStore>.</span></span> <span data-ttu-id="19670-107"><xref:System.IO.Log.LogPolicy.Refresh%2A> メソッドを呼び出して、変更を破棄したり、最新のポリシーを取得したりできます。</span><span class="sxs-lookup"><span data-stu-id="19670-107">You can call the <xref:System.IO.Log.LogPolicy.Refresh%2A> method to discard changes or to get the most current policy.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19670-108">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-108">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoGrow">
      <MemberSignature Language="C#" Value="public bool AutoGrow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGrow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoGrow" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGrow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGrow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGrow : bool with get, set" Usage="System.IO.Log.LogPolicy.AutoGrow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19670-109">Gets or sets a value indicating whether the <see cref="T:System.IO.Log.LogStore" /> can grow automatically.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-109">Gets or sets a value indicating whether the <see cref="T:System.IO.Log.LogStore" /> can grow automatically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19670-110">
            <see langword="true" /> のサイズを自動拡張する場合は <see cref="T:System.IO.Log.LogStore" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-110">
              <see langword="true" /> if the <see cref="T:System.IO.Log.LogStore" /> can grow its size automatically; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19670-111">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-111">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoShrinkPercentage">
      <MemberSignature Language="C#" Value="public int AutoShrinkPercentage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoShrinkPercentage" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoShrinkPercentage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoShrinkPercentage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AutoShrinkPercentage : int with get, set" Usage="System.IO.Log.LogPolicy.AutoShrinkPercentage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19670-112">Gets or sets the percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-112">Gets or sets the percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19670-113">
            <see cref="T:System.IO.Log.LogStore" /> が縮小可能な空き領域のパーセンテージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-113">The percentage of free space the <see cref="T:System.IO.Log.LogStore" /> can shrink.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19670-114"><xref:System.IO.Log.LogStore> の空き領域がこのプロパティで指定された容量より大きい場合、<xref:System.IO.Log.LogStore> は自動的にサイズを縮小して <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> プロパティで指定されたサイズに合わせます。</span><span class="sxs-lookup"><span data-stu-id="19670-114">When the amount of free space in the <xref:System.IO.Log.LogStore> is greater than the amount specified by this property, the <xref:System.IO.Log.LogStore> automatically reduces its size until it reaches the size specified by the <xref:System.IO.Log.LogPolicy.MinimumExtentCount%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19670-115">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-115">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="logPolicy.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19670-116">Sets this policy as the current policy for the <see cref="T:System.IO.Log.LogStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-116">Sets this policy as the current policy for the <see cref="T:System.IO.Log.LogStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19670-117">変更を行った後は、<xref:System.IO.Log.LogPolicy.Commit%2A> を呼び出して変更を記録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="19670-117">You must call <xref:System.IO.Log.LogPolicy.Commit%2A> after making any changes to ensure that the changes are recorded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19670-118">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-118">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="19670-119">The set of policies installed on the log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-119">The set of policies installed on the log is invalid.</span>
          </span>
          <span data-ttu-id="19670-120">-or-  A policy of the log prevented this operation from completing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-120">-or-  A policy of the log prevented this operation from completing.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="19670-121">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-121">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="19670-122">Setting this policy is not supported on the current platform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-122">Setting this policy is not supported on the current platform.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="19670-123">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-123">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="19670-124">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-124">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="19670-125">The new extent prefix is invalid or too long.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-125">The new extent prefix is invalid or too long.</span>
          </span>
          <span data-ttu-id="19670-126">A valid prefix must be provided.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-126">A valid prefix must be provided.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="19670-127">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-127">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="19670-128">Access for the specified log store is denied by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-128">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GrowthRate">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit GrowthRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit GrowthRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.GrowthRate" />
      <MemberSignature Language="VB.NET" Value="Public Property GrowthRate As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit GrowthRate { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberSignature Language="F#" Value="member this.GrowthRate : System.IO.Log.PolicyUnit with get, set" Usage="System.IO.Log.LogPolicy.GrowthRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19670-129">Gets or sets the rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-129">Gets or sets the rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19670-130">
            <see cref="T:System.IO.Log.LogStore" /> のサイズの自動増加率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-130">The rate of automatic growth of the <see cref="T:System.IO.Log.LogStore" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19670-131"><xref:System.IO.Log.LogStore> がいっぱいになると、追加する領域サイズがこのポリシーの値によって決まります。</span><span class="sxs-lookup"><span data-stu-id="19670-131">When the <xref:System.IO.Log.LogStore> becomes full, this policy value determines how much more space can be added.</span></span> <span data-ttu-id="19670-132"><xref:System.IO.Log.LogStore> 内のエクステント数が <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A> を超える場合、領域は追加されません。</span><span class="sxs-lookup"><span data-stu-id="19670-132">Space will not be added if it causes the number of extents in the <xref:System.IO.Log.LogStore> to exceed <xref:System.IO.Log.LogPolicy.MaximumExtentCount%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19670-133">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-133">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumExtentCount">
      <MemberSignature Language="C#" Value="public int MaximumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaximumExtentCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumExtentCount : int with get, set" Usage="System.IO.Log.LogPolicy.MaximumExtentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19670-134">Gets or sets the maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-134">Gets or sets the maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19670-135">
            <see cref="T:System.IO.Log.LogExtent" /> に格納可能な <see cref="T:System.IO.Log.LogStore" /> の最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-135">The maximum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19670-136">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-136">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumExtentCount">
      <MemberSignature Language="C#" Value="public int MinimumExtentCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumExtentCount" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumExtentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumExtentCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumExtentCount : int with get, set" Usage="System.IO.Log.LogPolicy.MinimumExtentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19670-137">Gets or sets the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-137">Gets or sets the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19670-138">
            <see cref="T:System.IO.Log.LogExtent" /> が格納可能な <see cref="T:System.IO.Log.LogStore" /> インスタンスの最小数を指定する整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-138">An integer that specifies the minimum number of <see cref="T:System.IO.Log.LogExtent" /> instances the <see cref="T:System.IO.Log.LogStore" /> can contain.</span>
          </span>
          <span data-ttu-id="19670-139">CLFS では最小エクステント数を 2 にする必要があるため、この値は 2 以上にしてください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-139">Since the CLFS requires that the minimum extent count to be 2 extents, this value should be at least 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19670-140">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-140">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewExtentPrefix">
      <MemberSignature Language="C#" Value="public string NewExtentPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewExtentPrefix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberSignature Language="VB.NET" Value="Public Property NewExtentPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewExtentPrefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewExtentPrefix : string with get, set" Usage="System.IO.Log.LogPolicy.NewExtentPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19670-141">Gets or sets the prefix string for automatically created extents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-141">Gets or sets the prefix string for automatically created extents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19670-142">自動作成されたエクステントのプレフィックス文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-142">The prefix string for automatically created extents.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19670-143">この文字列には、新しいエクステントが作成されるディレクトリの完全パスを格納できます。</span><span class="sxs-lookup"><span data-stu-id="19670-143">This string can contain a full path to the directory where the new extent is created.</span></span> <span data-ttu-id="19670-144">このエクステントの既定のパスは、基本 <xref:System.IO.Log.LogStore> ファイルが格納されるディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="19670-144">The default path to the extent is the directory that contains the base <xref:System.IO.Log.LogStore> file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19670-145">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-145">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextExtentSuffix">
      <MemberSignature Language="C#" Value="public long NextExtentSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 NextExtentSuffix" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Property NextExtentSuffix As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long NextExtentSuffix { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.NextExtentSuffix : int64 with get, set" Usage="System.IO.Log.LogPolicy.NextExtentSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19670-146">Gets or sets the suffix number for new extents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-146">Gets or sets the suffix number for new extents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19670-147">新しいエクステントのサフィックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-147">The suffix number for new extents.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19670-148">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-148">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PinnedTailThreshold">
      <MemberSignature Language="C#" Value="public System.IO.Log.PolicyUnit PinnedTailThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.PolicyUnit PinnedTailThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property PinnedTailThreshold As PolicyUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Log::PolicyUnit PinnedTailThreshold { System::IO::Log::PolicyUnit get(); void set(System::IO::Log::PolicyUnit value); };" />
      <MemberSignature Language="F#" Value="member this.PinnedTailThreshold : System.IO.Log.PolicyUnit with get, set" Usage="System.IO.Log.LogPolicy.PinnedTailThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.PolicyUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="19670-149">Gets or sets the amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-149">Gets or sets the amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="19670-150">
            <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> イベントでログのベースを進めるために必要な領域の容量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-150">The amount of space that the <see cref="E:System.IO.Log.LogRecordSequence.TailPinned" /> event requires for advancing the base of the log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="19670-151">領域の容量はパーセンテージまたはバイト数で表し、この値は CLFS 内の最も近いコンテナー容量に合わせて丸められます。</span><span class="sxs-lookup"><span data-stu-id="19670-151">The amount of space can be expressed in percentage, or in bytes which is rounded off to the nearest containers in CLFS.</span></span> <span data-ttu-id="19670-152">既定は 35% です。</span><span class="sxs-lookup"><span data-stu-id="19670-152">The default is 35 percent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="19670-153">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-153">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.LogPolicy.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="logPolicy.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="19670-154">Reads the current policy for the <see cref="T:System.IO.Log.LogStore" />, discarding any changes that may have been made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-154">Reads the current policy for the <see cref="T:System.IO.Log.LogStore" />, discarding any changes that may have been made.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="19670-155">この例では、<xref:System.IO.Log.LogPolicy>クラスを使用してログのレコード シーケンスのポリシーを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="19670-155">This example shows how to use the <xref:System.IO.Log.LogPolicy> class to set policy for a log record sequence.</span></span>  
  
 [!code-csharp[S_UELogRecordSequence#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#2)]
 [!code-vb[S_UELogRecordSequence#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="19670-156">The set of policies installed on the log is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-156">The set of policies installed on the log is invalid.</span>
          </span>
          <span data-ttu-id="19670-157">-or-  A policy of the log prevented this operation from completing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-157">-or-  A policy of the log prevented this operation from completing.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="19670-158">The request could not be performed because of an unexpected I/O exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-158">The request could not be performed because of an unexpected I/O exception.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="19670-159">Setting this policy is not supported on the current platform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-159">Setting this policy is not supported on the current platform.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="19670-160">The method was called after the sequence has been disposed of.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-160">The method was called after the sequence has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="19670-161">There is not enough memory to continue the execution of the program.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-161">There is not enough memory to continue the execution of the program.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.Log.SequenceFullException">
          <span data-ttu-id="19670-162">The record sequence is full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-162">The record sequence is full.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="19670-163">Access for the specified log store is denied by the operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="19670-163">Access for the specified log store is denied by the operating system.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>