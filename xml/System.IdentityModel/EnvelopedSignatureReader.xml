<Type Name="EnvelopedSignatureReader" FullName="System.IdentityModel.EnvelopedSignatureReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d72d4e16df9e75e2f077936cffd9c460b51e0302" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EnvelopedSignatureReader : System.IdentityModel.DelegatingXmlDictionaryReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EnvelopedSignatureReader extends System.IdentityModel.DelegatingXmlDictionaryReader" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.EnvelopedSignatureReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EnvelopedSignatureReader&#xA;Inherits DelegatingXmlDictionaryReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnvelopedSignatureReader sealed : System::IdentityModel::DelegatingXmlDictionaryReader" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.DelegatingXmlDictionaryReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="89cc7-101">エンベロープ署名付きの XML を指しているリーダーをラップして、署名を処理することなくコンテンツを読み取るために使用できるリーダーを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89cc7-101">Wraps a reader that is pointing to enveloped signed XML to provide a reader that can be used to read the content without having to process the signature.</span>
      </span>
      <span data-ttu-id="89cc7-102">エンベロープの最後の要素が読み取られると、シグネチャが自動で検証されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89cc7-102">The signature is automatically validated when the last element of the envelope is read.</span>
      </span>
      <span data-ttu-id="89cc7-103">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="89cc7-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="89cc7-104">
            <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-104">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvelopedSignatureReader(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ securityTokenSerializer);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="securityTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="89cc7-105">エンベロープ署名付きの XML を指しているリーダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-105">A reader that is pointing to the enveloped signed XML.</span>
          </span>
        </param>
        <param name="securityTokenSerializer">
          <span data-ttu-id="89cc7-106">シグネチャの <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> を逆シリアル化するために使用されるトークン シリアライザー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-106">The token serializer to be used to deserialize the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the signature.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cc7-107">指定したリーダーとセキュリティ トークン シリアライザーを使用して、<see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-107">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class by using the specified reader and security token serializer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cc7-108"><xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>コンス トラクターが次の追加のパラメーターで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="89cc7-108">The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor is invoked with the following additional parameters:</span></span>  
  
|<span data-ttu-id="89cc7-109">パラメーター名</span><span class="sxs-lookup"><span data-stu-id="89cc7-109">Parameter Name</span></span>|<span data-ttu-id="89cc7-110">[値]</span><span class="sxs-lookup"><span data-stu-id="89cc7-110">Value</span></span>|  
|--------------------|-----------|  
|`signingTokenResolver`|`null`|  
|`requireSignature`|`true`|  
|`automaticallyReadSignature`|`true`|  
|`resolveIntrinsicSigningKeys`|`true`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89cc7-111">
            <paramref name="reader" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-111">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="89cc7-112">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-112">-or-</span>
          </span>
          <span data-ttu-id="89cc7-113">
            <paramref name="securityTokenSerializer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-113">
              <paramref name="securityTokenSerializer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvelopedSignatureReader(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ securityTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ signingTokenResolver);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="securityTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
        <Parameter Name="signingTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="89cc7-114">エンベロープ署名付きの XML を指しているリーダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-114">A reader that is pointing to the enveloped signed XML.</span>
          </span>
        </param>
        <param name="securityTokenSerializer">
          <span data-ttu-id="89cc7-115">シグネチャの <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> を逆シリアル化するために使用されるトークン シリアライザー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-115">The token serializer to be used to deserialize the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the signature.</span>
          </span>
        </param>
        <param name="signingTokenResolver">
          <span data-ttu-id="89cc7-116">署名トークンを解決するために使用されるトークン リゾルバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-116">The token resolver to be used to resolve the signing token.</span>
          </span>
          <span data-ttu-id="89cc7-117">
            <see langword="null" /> は、既定のセキュリティ トークンのリゾルバーを使用することを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-117">
              <see langword="null" /> specifies that a default security token resolver should be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cc7-118">指定したリーダー、セキュリティ トークン シリアライザー、およびトークン リゾルバーを使用して、<see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-118">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class by using the specified reader, security token serializer, and token resolver.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cc7-119"><xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType>コンス トラクターが次の追加のパラメーターで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="89cc7-119">The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor is invoked with the following additional parameters:</span></span>  
  
|<span data-ttu-id="89cc7-120">パラメーター名</span><span class="sxs-lookup"><span data-stu-id="89cc7-120">Parameter Name</span></span>|<span data-ttu-id="89cc7-121">[値]</span><span class="sxs-lookup"><span data-stu-id="89cc7-121">Value</span></span>|  
|--------------------|-----------|  
|`requireSignature`|`true`|  
|`automaticallyReadSignature`|`true`|  
|`resolveIntrinsicSigningKeys`|`true`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89cc7-122">
            <paramref name="reader" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-122">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="89cc7-123">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-123">-or-</span>
          </span>
          <span data-ttu-id="89cc7-124">
            <paramref name="securityTokenSerializer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-124">
              <paramref name="securityTokenSerializer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvelopedSignatureReader(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ securityTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="securityTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
        <Parameter Name="signingTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
        <Parameter Name="requireSignature" Type="System.Boolean" />
        <Parameter Name="automaticallyReadSignature" Type="System.Boolean" />
        <Parameter Name="resolveIntrinsicSigningKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="89cc7-125">エンベロープ署名付きの XML を指しているリーダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-125">A reader that is pointing to the enveloped signed XML.</span>
          </span>
        </param>
        <param name="securityTokenSerializer">
          <span data-ttu-id="89cc7-126">シグネチャの <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> を逆シリアル化するために使用されるトークン シリアライザー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-126">The token serializer to be used to deserialize the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the signature.</span>
          </span>
        </param>
        <param name="signingTokenResolver">
          <span data-ttu-id="89cc7-127">署名トークンを解決するために使用されるトークン リゾルバー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-127">The token resolver to be used to resolve the signing token.</span>
          </span>
          <span data-ttu-id="89cc7-128">
            <see langword="null" /> は、既定のセキュリティ トークンのリゾルバーを使用することを指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-128">
              <see langword="null" /> specifies that a default security token resolver should be used.</span>
          </span>
        </param>
        <param name="requireSignature">
          <span data-ttu-id="89cc7-129">署名が必須の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-129">
              <see langword="true" /> if the signature is required; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="automaticallyReadSignature">
          <span data-ttu-id="89cc7-130">署名を読み取る必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-130">
              <see langword="true" /> if the signature should be read; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="resolveIntrinsicSigningKeys">
          <span data-ttu-id="89cc7-131">組み込みの署名キーを解決する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-131">
              <see langword="true" /> if intrinsic signing keys should be resolved; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="89cc7-132">指定したリーダー、セキュリティ トークン シリアライザー、トークン リゾルバー、および動作を使用して、<see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-132">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class by using the specified reader, security token serializer, token resolver, and behavior.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="89cc7-133">
            <paramref name="reader" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-133">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="89cc7-134">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-134">-or-</span>
          </span>
          <span data-ttu-id="89cc7-135">
            <paramref name="securityTokenSerializer" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-135">
              <paramref name="securityTokenSerializer" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89cc7-136">ストリームから次のノードを読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-136">Reads the next node from the stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89cc7-137">次のノードが正常に読み取られた場合は <see langword="true" />、それ以上ノードが存在しない場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-137">
              <see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cc7-138">エンベロープの末尾に達したかどうかを確認署名を検証する場合は、`requireSignature`パラメーターが指定されました`true`コンス トラクターでします。</span><span class="sxs-lookup"><span data-stu-id="89cc7-138">Checks whether the end of the envelope is reached and validates the signature if the `requireSignature` parameter was specified `true` in the constructor.</span></span> <span data-ttu-id="89cc7-139">リーダーを取得する場合、`<Signature>`要素、全体の署名が読み込まれた場合、`automaticallyReadSignature`パラメーターが指定されました`true`コンス トラクターでします。</span><span class="sxs-lookup"><span data-stu-id="89cc7-139">If the reader gets positioned on a `<Signature>` element, the whole signature is read in if the `automaticallyReadSignature` parameter was specified `true` in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.EnvelopedSignatureReader.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="89cc7-140">エンベロープが使用された後、シグネチャが検証されるときにシグネチャで使用される署名資格情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-140">Gets the signing credentials that are used in the signature, after the envelope is consumed and when the signature is validated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="89cc7-141">署名資格情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-141">The signing credentials.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadSignature">
      <MemberSignature Language="C#" Value="public bool TryReadSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.TryReadSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadSignature () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReadSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="89cc7-142">リーダーが <see langword="&lt;Signature&gt;" /> 要素に現在配置されている場合、署名を読み取ります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-142">Reads the signature if the reader is currently positioned at a <see langword="&lt;Signature&gt;" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="89cc7-143">署名が正常に読み取られた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="89cc7-143">
              <see langword="true" /> if the signature was successfully read; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="89cc7-144">場合は、リーダーの現在位置に、`<Signature>`要素を呼び出す、<xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A>署名を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="89cc7-144">If the reader is currently positioned on a `<Signature>` element, invokes the <xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A> method to read the signature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>