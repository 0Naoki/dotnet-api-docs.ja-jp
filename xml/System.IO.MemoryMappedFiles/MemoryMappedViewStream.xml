<Type Name="MemoryMappedViewStream" FullName="System.IO.MemoryMappedFiles.MemoryMappedViewStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="138971c9eac49821f765ef880f6ed51f6989fed0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36485000" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MemoryMappedViewStream : System.IO.UnmanagedMemoryStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MemoryMappedViewStream extends System.IO.UnmanagedMemoryStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.MemoryMappedFiles.MemoryMappedViewStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MemoryMappedViewStream&#xA;Inherits UnmanagedMemoryStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryMappedViewStream sealed : System::IO::UnmanagedMemoryStream" />
  <TypeSignature Language="F#" Value="type MemoryMappedViewStream = class&#xA;    inherit UnmanagedMemoryStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.UnmanagedMemoryStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bb145-101">メモリ マップト ファイルのビューを順次アクセス ストリームとして表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="bb145-101">Represents a view of a memory-mapped file as a sequentially accessed stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb145-102">使用して、<xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A>のメソッド、<xref:System.IO.MemoryMappedFiles.MemoryMappedFile>このストリームを取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb145-102">Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream%2A> method of a <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> object to get this stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bb145-103">次の例では取得、<xref:System.IO.MemoryMappedFiles.MemoryMappedViewStream>メモリ マップト ファイルの値をプロセス間通信のストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="bb145-103">The following example obtains a <xref:System.IO.MemoryMappedFiles.MemoryMappedViewStream> of a memory-mapped file and writes a value to the stream for inter-process communication.</span></span>  
  
 <span data-ttu-id="bb145-104">このコード例に示されている例の一部である、<xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="bb145-104">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[system.io.memorymappedfiles_IPC_X#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#2)]
 [!code-vb[system.io.memorymappedfiles_IPC_X#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="memoryMappedViewStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="memoryMappedViewStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bb145-105">このストリームのすべてのバッファーをクリアし、バッファー内のデータが基になるファイルに書き込まれるようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-105">Clears all buffers for this stream and causes any buffered data to be written to the underlying file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb145-106">互いに隣接しているビューを使用している場合は、指定されたサイズはシステム ページ サイズの倍数と等しく、このメソッドも、次のデータが消去されます。</span><span class="sxs-lookup"><span data-stu-id="bb145-106">If you are using views that are adjacent to each other, this method will also clear the following data, provided its size is equal to a multiple of the system page size:</span></span>  
  
-   <span data-ttu-id="bb145-107">最新のファイル オフセットまでビューの前に付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="bb145-107">Any data that precedes the view up until the latest file offset.</span></span>  
  
-   <span data-ttu-id="bb145-108">最も古いファイル オフセットまでビューに依存しているデータ。</span><span class="sxs-lookup"><span data-stu-id="bb145-108">Any data that follows the view up until the earliest file offset.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointerOffset">
      <MemberSignature Language="C#" Value="public long PointerOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PointerOffset" />
      <MemberSignature Language="DocId" Value="P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointerOffset As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PointerOffset { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PointerOffset : int64" Usage="System.IO.MemoryMappedFiles.MemoryMappedViewStream.PointerOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb145-109">[.NET Framework 4.5.1 以降のバージョンでサポート]  メモリ マップ ファイルの先頭からこのビューの開始位置までのオフセットを表すバイト数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-109">[Supported in the .NET Framework 4.5.1 and later versions]  Gets the number of bytes by which the starting position of this view is offset from the beginning of the memory-mapped file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb145-110">このビューの開始位置とメモリ マップ ファイルの先頭との間のバイト数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-110">The number of bytes between the starting position of this view and the beginning of the memory-mapped file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="bb145-111">このインスタンスの作成元のオブジェクトが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-111">The object from which this instance was created is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SafeMemoryMappedViewHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle SafeMemoryMappedViewHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeMemoryMappedViewHandle As SafeMemoryMappedViewHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeMemoryMappedViewHandle ^ SafeMemoryMappedViewHandle { Microsoft::Win32::SafeHandles::SafeMemoryMappedViewHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeMemoryMappedViewHandle : Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle" Usage="System.IO.MemoryMappedFiles.MemoryMappedViewStream.SafeMemoryMappedViewHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bb145-112">メモリ マップト ファイルのビューへのハンドルを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-112">Gets a handle to the view of a memory-mapped file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bb145-113">ファイルのビューに対するオペレーティング システムのハンドルのラッパー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-113">A wrapper for the operating system's handle to the view of the file.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="bb145-114">アンマネージ コードにアクセスします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-114">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="bb145-115">
            <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-115">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedViewStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="abstract member SetLength : int64 -&gt; unit&#xA;override this.SetLength : int64 -&gt; unit" Usage="memoryMappedViewStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="bb145-116">現在のストリームの希望の長さ (バイト数)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-116">The desired length of the current stream in bytes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bb145-117">現在のストリームの長さを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-117">Sets the length of the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb145-118">このメソッドは内部でのみ、ビューを表すストリームがの長さを持つと見なされないためです。</span><span class="sxs-lookup"><span data-stu-id="bb145-118">This method is internal only, because a stream that represents a view is not considered to have a length.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="bb145-119">このメソッドはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bb145-119">This method is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>