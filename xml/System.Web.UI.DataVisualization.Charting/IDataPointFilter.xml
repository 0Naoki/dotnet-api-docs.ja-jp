<Type Name="IDataPointFilter" FullName="System.Web.UI.DataVisualization.Charting.IDataPointFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="85a3589181e4fccd22593afef8051166f66ddd01" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70660664" /></Metadata><TypeSignature Language="C#" Value="public interface IDataPointFilter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataPointFilter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.IDataPointFilter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataPointFilter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataPointFilter" />
  <TypeSignature Language="F#" Value="type IDataPointFilter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><see cref="M:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)" /> データのカスタム フィルター処理を可能にする <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> メソッドを公開します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インターフェイス<xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter>は、系列<xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A>内の特定のデータポイントを取得し、そのデータポイントが`Boolean`フィルター処理されるかどうかを判断する値を返すメソッドを公開します。  
  
 カスタムフィルター処理を実行するには:  
  
-   このインターフェイスから新規または既存のクラスを派生させます。  
  
-   カスタムフィルター <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A>処理ロジックを提供するには、メソッドをオーバーライドします。  
  
-   フィルター処理を開始するには、最初の`Filter`パラメーターとし<xref:System.Web.UI.DataVisualization.Charting.DataManipulator>て<xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter>オブジェクトを受け取るクラスのメソッドのいずれかを呼び出します。  
  
 ソースコードのサンプルについて<xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint%2A>は、メソッドを参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FilterDataPoint">
      <MemberSignature Language="C#" Value="public bool FilterDataPoint (System.Web.UI.DataVisualization.Charting.DataPoint point, System.Web.UI.DataVisualization.Charting.Series series, int pointIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool FilterDataPoint(class System.Web.UI.DataVisualization.Charting.DataPoint point, class System.Web.UI.DataVisualization.Charting.Series series, int32 pointIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.IDataPointFilter.FilterDataPoint(System.Web.UI.DataVisualization.Charting.DataPoint,System.Web.UI.DataVisualization.Charting.Series,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FilterDataPoint(System::Web::UI::DataVisualization::Charting::DataPoint ^ point, System::Web::UI::DataVisualization::Charting::Series ^ series, int pointIndex);" />
      <MemberSignature Language="F#" Value="abstract member FilterDataPoint : System.Web.UI.DataVisualization.Charting.DataPoint * System.Web.UI.DataVisualization.Charting.Series * int -&gt; bool" Usage="iDataPointFilter.FilterDataPoint (point, series, pointIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Web.UI.DataVisualization.Charting.DataPoint" />
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="pointIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="point">フィルター処理される <see cref="T:System.Web.UI.DataVisualization.Charting.DataPoint" /> オブジェクト。</param>
        <param name="series">データ ポイントが属する <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> オブジェクト。</param>
        <param name="pointIndex">系列内の位置を決定する、データ ポイントのインデックス。</param>
        <summary>系列内の特定のデータ ポイントをフィルター処理するかどうかを決定します。</summary>
        <returns>データ ポイントが削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、系列のデータポイントごとに呼び出され、データポイントを`Boolean`フィルター処理する必要があるかどうかを示す値を返します。  
  
 カスタムフィルター処理を提供するには、 <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter>インターフェイスから新規または既存のクラスを派生させ、このメソッドを実装します。 カスタム条件に一致するロジックを指定`true`し`false` 、またはを返すか、フィルター処理するデータポイントをマークします。 このメソッドを実装した後、 `Filter` <xref:System.Web.UI.DataVisualization.Charting.IDataPointFilter>オブジェクトをパラメーターとして受け取る<xref:System.Web.UI.DataVisualization.Charting.DataManipulator>クラスのメソッド定義の1つを使用して、フィルター処理を実行します。  
  
 既定では、フィルター選択されたポイントは系列から削除されます。 また、 <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints%2A>プロパティの値をに設定する`true`ことによって、空のポイントとして表示することもできます。  
  
 フィルター選択されたポイントは、 <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterMatchedPoints%2A>値によって決定されるフィルター条件に一致しない場合、フィルター処理済みとしてマークすることもできます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
