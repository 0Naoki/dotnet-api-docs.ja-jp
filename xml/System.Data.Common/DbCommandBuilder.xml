<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DbCommandBuilder.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55bfb54f7b76a4739f53cb9e965eb71e14aa89733.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bfb54f7b76a4739f53cb9e965eb71e14aa89733</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Automatically generates single-table commands used to reconcile changes made to a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the associated database.</source>
          <target state="translated">データベースに関連付けられた <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> への変更を調整するための単一テーブル コマンドを自動的に生成します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>This is an abstract class that can only be inherited.</source>
          <target state="translated">これは抽象クラスであり、継承以外はできません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> class is provided for the convenience of provider writers creating their own command builders.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>クラスは、独自のコマンド ビルダーを作成するプロバイダーの作成者の利便性を提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>By inheriting from this class, developers can implement provider specific behavior in their own code.</source>
          <target state="translated">このクラスから継承する、開発者は独自のコードでプロバイダー固有の動作を実装できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> does not automatically generate the SQL statements required to reconcile changes made to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the associated data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>に加えられた変更を調整するために必要な SQL ステートメントを自動的に生成しない、<ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>関連付けられているデータ ソースとします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>However, you can create a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> object to automatically generate SQL statements for single-table updates if you set the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">ただし、作成することができます、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>設定した場合、SQL ステートメントの 1 つのテーブルの更新プログラムを自動的に生成するオブジェクト、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Then, any additional SQL statements that you do not set are generated by the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>.</source>
          <target state="translated">次に、追加の SQL ステートメントを設定しないことがによって生成される、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events whenever you set the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>自体のリスナーとして登録<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph>を設定する場合に、イベント、<ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can only associate one <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> object with each other at one time.</source>
          <target state="translated">関連付けることができますのみ<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>互いにオブジェクトを一度に 1 つです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>To generate INSERT, UPDATE, or DELETE statements, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> property to retrieve a required set of metadata automatically.</source>
          <target state="translated">INSERT、UPDATE、または DELETE のステートメントを生成する、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>自動的に必要な一連のメタデータを取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If you change the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> after the metadata has been retrieved (for example, after the first update), you should call the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method to update the metadata.</source>
          <target state="translated">変更した場合、<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>を呼び出す必要があります (たとえば、最初の更新の後、メタデータの取得が完了した後、<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>にメタデータを更新する方法です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">`SelectCommand`</ph> must also return at least one primary key or unique column.</source>
          <target state="translated"><ph id="ph1">`SelectCommand`</ph> は少なくとも 1 つの主キーまたは一意の列を返す必要があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If none exist, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is generated, and the commands are not generated.</source>
          <target state="translated">存在しない場合は、<ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>例外が生成され、コマンドは生成されません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> also uses the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Connection%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Data.Common.DbCommand.Transaction%2A&gt;</ph> properties referenced by the <ph id="ph5">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>も使用して、 <ph id="ph2">&lt;xref:System.Data.Common.DbCommand.Connection%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Data.Common.DbCommand.CommandTimeout%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Data.Common.DbCommand.Transaction%2A&gt;</ph>プロパティによって参照される、<ph id="ph5">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The user should call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if any of these properties are modified, or if the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph> itself is replaced.</source>
          <target state="translated">ユーザーが呼び出す必要があります<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合またはこれらのプロパティが変更された場合、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>自体は置き換えられます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph> properties retain their previous values.</source>
          <target state="translated">それ以外の場合、 <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph>プロパティは、前回の値を保持します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If you call <ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> is disassociated from the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, and the generated commands are no longer used.</source>
          <target state="translated">呼び出す場合<ph id="ph1">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>関連付けが解除され、 <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>、され、生成されたコマンドは使用されなくです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.#ctor">
          <source>Initializes a new instance of a class that inherits from the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> クラスから継承するクラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbParameter" /&gt;</ph> to which the additional modifications are applied.</source>
          <target state="translated">追加の変更を適用する対象の <ph id="ph1">&lt;see cref="T:System.Data.Common.DbParameter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> from the schema table provided by <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> で提供されるスキーマ テーブルの <ph id="ph2">&lt;see cref="M:System.Data.Common.DbDataReader.GetSchemaTable" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>The type of command being generated; INSERT, UPDATE or DELETE.</source>
          <target state="translated">生成されるコマンドの種類である INSERT、UPDATE、または DELETE。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the parameter is part of the update or delete WHERE clause, <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it is part of the insert or update values.</source>
          <target state="translated">パラメーターが UPDATE または DELETE の WHERE 句の一部である場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。INSERT または UPDATE の値の一部である場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>Allows the provider implementation of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class to handle additional parameter properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> クラスのプロバイダーの実装が、追加パラメーターのプロパティを処理できるようにします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)">
          <source>This method allows an implementation of the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> class to handle provider-specific parameter properties.</source>
          <target state="translated">このメソッドの実装を使用する、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>プロバイダーに固有のパラメーターのプロパティを処理するクラス。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
          <source>Sets or gets the <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> for an instance of the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> クラスのインスタンスの <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> を設定または取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.CatalogLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.CatalogLocation" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
          <source>Sets or gets a string used as the catalog separator for an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> クラスのインスタンスのカタログの区切り記号として使用する文字列を設定または取得します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.CatalogSeparator">
          <source>A string indicating the catalog separator for use with an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> クラスのインスタンスで使用するカタログの区切り記号を示す文字列。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.ConflictOption">
          <source>Specifies which <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> is to be used by the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> で使用する <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> を指定します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.ConflictOption">
          <source>Returns one of the <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> values describing the behavior of this <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Data.ConflictOption" /&gt;</ph> の動作を説明する <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> 値の 1 つを返します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> object for which Transact-SQL statements are automatically generated.</source>
          <target state="translated">Transact-SQL ステートメントを自動生成する対象の <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> オブジェクトを取得または設定します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> registers itself as a listener for <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph> events that are generated by the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> specified in this property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>自体のリスナーとして登録<ph id="ph2">&lt;xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating&gt;</ph>によって生成されるイベント、<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>このプロパティで指定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.DataAdapter">
          <source>When you create a new instance of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, any existing <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> associated with this <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> is released.</source>
          <target state="translated">新しいインスタンスを作成する場合<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>、既存<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>これに関連付けられている<ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>を解放します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">マネージ リソースとアンマネージ リソースの両方を解放する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。アンマネージ リソースだけを解放する場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">このメソッドは、パブリック<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph>メソッドおよび<ph id="ph2">`Finalize`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> invokes the protected <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> プロテクト呼び出します<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph>disposing パラメーター設定したメソッド<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> 呼び出す<ph id="ph2">`Dispose`</ph>で<ph id="ph3">`disposing`</ph>'éý'<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> パラメーターが <ph id="ph2">`true`</ph> の場合、このメソッドは、この <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> method of each referenced object.</source>
          <target state="translated">このメソッドは、参照される各オブジェクトの <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.Dispose%2A&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph> は、他のオブジェクトから複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph> をオーバーライドする場合は、以前に <ph id="ph2">&lt;see cref="Overload:System.Data.Common.DbCommandBuilder.Dispose" /&gt;</ph> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">実装する方法の詳細についての<ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>Dispose メソッドの実装<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">詳細については<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>と<ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>を参照してください<bpt id="p1">[</bpt>アンマネージ リソースのクリーンアップ<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>と<bpt id="p2">[</bpt>Finalize メソッドをオーバーライドする<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">データ ソースで削除処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the associated command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>しで明示的に設定して、関連付けられたコマンド テキストを変更、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、最初はアプリケーションを呼び出すときに生成するか<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> allows you to specify this behavior by supplying a Boolean value, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead by passing <ph id="ph3">`True`</ph>.</source>
          <target state="translated">場合、オーバー ロードされたバージョンの<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>はブール値を指定することによって、この動作を指定することがでく可能性があります、<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>を渡すことによって代わりに、列名に基づいたパラメーターを生成する<ph id="ph3">`True`</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source.</source>
          <target state="translated">データ ソースで削除処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">削除を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>しで明示的に設定して、コマンド テキストを変更、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、最初はアプリケーションを呼び出すときに生成するか<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">可能であれば、列名に一致するパラメーター名を生成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、<ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph> のように生成します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions at the data source, optionally using columns for parameter names.</source>
          <target state="translated">オプションでパラメーター名に列を使用し、データ ソースで削除処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform deletions.</source>
          <target state="translated">削除を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>しで明示的に設定して、コマンド テキストを変更、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、最初はアプリケーションを呼び出すときに生成するか<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">渡す<ph id="ph1">`true`</ph>の<ph id="ph2">`useColumnsForParameterNames`</ph>パラメーターでは、強制的にすることができます、<ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>を代わりに、列名に基づいたパラメーターを生成します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>This succeeds only if the following conditions are met:</source>
          <target state="translated">次は、次の条件が満たされた場合にのみ成功します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>が指定されている、生成されたパラメーター名以上の長さ。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">生成されたパラメーター名で指定した条件を満たしている、<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>正規表現。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>を指定します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">データ ソースで挿入処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>メソッド情報やトラブルシューティングを目的のテキストを返すので、<ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>しで明示的に設定して、コマンド テキストを変更、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、最初はアプリケーションを呼び出すときに生成するか<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> allows you to specify this behavior, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">場合、オーバー ロードされたバージョンの<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>場合、この動作を指定することができますが、<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>を代わりに、列名に基づいたパラメーターを生成します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source.</source>
          <target state="translated">データ ソースで挿入処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">挿入を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>メソッド情報やトラブルシューティングを目的のテキストを返すので、<ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>しで明示的に設定して、コマンド テキストを変更、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、最初はアプリケーションを呼び出すときに生成するか<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">可能であれば、列名に一致するパラメーター名を生成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、<ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph> のように生成します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions at the data source, optionally using columns for parameter names.</source>
          <target state="translated">オプションでパラメーター名に列を使用し、データ ソースで挿入処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform insertions.</source>
          <target state="translated">挿入を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the text of the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>メソッド情報やトラブルシューティングを目的のテキストを返すので、<ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>しで明示的に設定して、コマンド テキストを変更、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、最初はアプリケーションを呼び出すときに生成するか<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">渡す<ph id="ph1">`true`</ph>の<ph id="ph2">`useColumnsForParameterNames`</ph>パラメーターでは、強制的にすることができます、<ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>を代わりに、列名に基づいたパラメーターを生成します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>Generation of the parameters based on column names succeeds only if the following conditions are met:</source>
          <target state="translated">列名に基づくパラメーターの生成が成功するは、次の条件が満たされた場合にのみ。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>が指定されている、生成されたパラメーター名以上の長さ。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">生成されたパラメーター名で指定した条件を満たしている、<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>正規表現。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>を指定します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Returns the name of the specified parameter.</source>
          <target state="translated">指定したパラメーターの名前を返します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>The number to be included as part of the parameter's name..</source>
          <target state="translated">パラメーターの名前の一部として含まれる数。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>Returns the name of the specified parameter in the format of <ph id="ph1">@p</ph><bpt id="p1">*</bpt><ph id="ph2">#</ph><ept id="p1">*</ept>.</source>
          <target state="translated">指定したパラメーターの名前を <ph id="ph1">@p</ph><bpt id="p1">*</bpt><ph id="ph2">#</ph><ept id="p1">*</ept> の形式で返します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>Use when building a custom command builder.</source>
          <target state="translated">カスタムのコマンド ビルダーを作成する場合に使用します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)">
          <source>The name of the parameter with the specified number appended as part of the parameter name.</source>
          <target state="translated">パラメーター名の一部として追加された、指定した数を含むパラメーターの名前。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>The partial name of the parameter.</source>
          <target state="translated">パラメーターの部分的な名前。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>Returns the full parameter name, given the partial parameter name.</source>
          <target state="translated">部分的なパラメーター名を指定して、完全なパラメーター名を返します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterName(System.String)">
          <source>The full parameter name corresponding to the partial parameter name requested.</source>
          <target state="translated">要求された部分的なパラメーター名に対応する完全なパラメーター名。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>The number to be included as part of the parameter's name.</source>
          <target state="translated">パラメーターの名前の一部として含まれる数。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>Returns the placeholder for the parameter in the associated SQL statement.</source>
          <target state="translated">関連付けられた SQL ステートメントのパラメーターのプレースホルダーを返します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>The name of the parameter with the specified number appended.</source>
          <target state="translated">追加された、指定した数を含むパラメーターの名前。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">このメソッドは、プロバイダーの作成者がカスタム コマンド ビルダーを作成して使用するものです。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> for which to retrieve the corresponding schema table.</source>
          <target state="translated">対応するスキーマ テーブルを取得する対象の <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>Returns the schema table for the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> に対するスキーマ テーブルを返します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> that represents the schema for the specific <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</source>
          <target state="translated">特定の <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> に対するスキーマを表す <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">このメソッドは、プロバイダーの作成者がカスタム コマンド ビルダーを作成して使用するものです。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">データ ソースで更新処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>しで明示的に設定して、コマンド テキストを変更、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、最初はアプリケーションを呼び出すときに生成するか<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Common.DbCommandBuilder">
          <source>If the overloaded version of <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> allows you to specify this behavior, you can cause the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">場合、オーバー ロードされたバージョンの<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>場合、この動作を指定することができますが、<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>を代わりに、列名に基づいたパラメーターを生成します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source.</source>
          <target state="translated">データ ソースで更新処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">更新を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify the command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>しで明示的に設定して、コマンド テキストを変更、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、最初はアプリケーションを呼び出すときに生成するか<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, generate parameter names matching column names, if possible.</source>
          <target state="translated">可能であれば、列名に一致するパラメーター名を生成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>If <ph id="ph1">&lt;see langword="false" /&gt;</ph>, generate <ph id="ph2">@p1</ph>, <ph id="ph3">@p2</ph>, and so on.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph> の場合、<ph id="ph2">@p1</ph>、<ph id="ph3">@p2</ph> のように生成します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Gets the automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates at the data source, optionally using columns for parameter names.</source>
          <target state="translated">オプションでパラメーター名に列を使用し、データ ソースで更新処理を実行するための、自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The automatically generated <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object required to perform updates.</source>
          <target state="translated">更新を実行するための自動生成された <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>An application can use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> method for informational or troubleshooting purposes because it returns the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> object to be executed.</source>
          <target state="translated">アプリケーションで使用できます、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>メソッド情報やトラブルシューティングの目的を返すので、<ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph>を実行するオブジェクト。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> as the basis of a modified command.</source>
          <target state="translated">使用することも<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>変更されたコマンドの基礎として。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>For example, you might call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> and modify command text, and then explicitly set that on the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">たとえば、呼び出すことができます<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>しで明示的に設定して、コマンド テキストを変更、<ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>After the SQL statement is first generated, the application must explicitly call <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> if it changes the statement in any way.</source>
          <target state="translated">アプリケーションが明示的に呼び出す必要があります、SQL ステートメントを生成後<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>場合は任意の方法でステートメントを変更します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph> will still be using information from the previous statement, which might not be correct.</source>
          <target state="translated">それ以外の場合、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>正しくない可能性があります、前のステートメントからの情報が使用されます。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The SQL statements are first generated either when the application calls <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>.</source>
          <target state="translated">SQL ステートメントは、最初はアプリケーションを呼び出すときに生成するか<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The default behavior, when generating parameter names, is to use <ph id="ph1">@p1</ph>, <ph id="ph2">@p2</ph>, and so on for the various parameters.</source>
          <target state="translated">使用するパラメーター名を生成するときに、既定の動作は、 <ph id="ph1">@p1</ph>、 <ph id="ph2">@p2</ph>、さまざまなパラメーターについてです。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Passing <ph id="ph1">`true`</ph> for the <ph id="ph2">`useColumnsForParameterNames`</ph> parameter allows you to force the <ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> to generate parameters based on the column names instead.</source>
          <target state="translated">渡す<ph id="ph1">`true`</ph>の<ph id="ph2">`useColumnsForParameterNames`</ph>パラメーターでは、強制的にすることができます、<ph id="ph3">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>を代わりに、列名に基づいたパラメーターを生成します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>Generation of the parameters based on column names succeeds only if the following conditions are met:</source>
          <target state="translated">列名に基づくパラメーターの生成が成功するは、次の条件が満たされた場合にのみ。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph> has been specified and its length is equal to or greater than the generated parameter name.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength&gt;</ph>が指定されている、生成されたパラメーター名以上の長さ。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>The generated parameter name meets the criteria specified in the <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph> regular expression.</source>
          <target state="translated">生成されたパラメーター名で指定した条件を満たしている、<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern&gt;</ph>正規表現。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph> is specified.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat&gt;</ph>を指定します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> to be used by the command builder for the corresponding insert, update, or delete command.</source>
          <target state="translated">対応する挿入、更新、または削除コマンドのコマンド ビルダーが使用する <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>Resets the <ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommand.CommandTimeout" /&gt;</ph>, <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommand.Transaction" /&gt;</ph>, <ph id="ph3">&lt;see cref="P:System.Data.Common.DbCommand.CommandType" /&gt;</ph>, and <ph id="ph4">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph> properties on the <ph id="ph5">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Data.Common.DbCommand.CommandTimeout" /&gt;</ph> の <ph id="ph2">&lt;see cref="P:System.Data.Common.DbCommand.Transaction" /&gt;</ph>、<ph id="ph3">&lt;see cref="P:System.Data.Common.DbCommand.CommandType" /&gt;</ph>、<ph id="ph4">&lt;see cref="T:System.Data.UpdateRowSource" /&gt;</ph>、および <ph id="ph5">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> の各プロパティをリセットします。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> instance to use for each insert, update, or delete operation.</source>
          <target state="translated">挿入、更新、または削除の各操作で使用する <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>Passing a null value allows the <ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /&gt;</ph> method to create a <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> object based on the Select command associated with the <ph id="ph3">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">null 値を渡すことで、<ph id="ph1">&lt;see cref="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)" /&gt;</ph> メソッドは、<ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommand" /&gt;</ph> に関連付けられている SELECT コマンドに基づいて <ph id="ph3">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> オブジェクトを作成できます。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">このメソッドは、プロバイダーの作成者がカスタム コマンド ビルダーを作成して使用するものです。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>The original unquoted identifier.</source>
          <target state="translated">引用符で囲まれていない元の ID。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier, including properly escaping any embedded quotes in the identifier.</source>
          <target state="translated">大文字と小文字を正しく区別したカタログ内の、引用符で囲まれていない ID が指定されると、その ID を引用符で囲まれた正しい形式で返します。ID 内に埋め込まれている引用符はすべて適切にエスケープされます。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>The quoted version of the identifier.</source>
          <target state="translated">引用符で囲まれたバージョンの ID。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)">
          <source>Embedded quotes within the identifier are properly escaped.</source>
          <target state="translated">ID 内に埋め込まれている引用符は適切にエスケープされます。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Gets or sets the beginning character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">名前に空白や予約済みトークンなどの文字を含むデータベース オブジェクト (テーブル、列など) を指定するための開始文字を取得または設定します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>The beginning character or characters to use.</source>
          <target state="translated">使用する開始文字。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>The default is an empty string.</source>
          <target state="translated">既定値は空の文字列です。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</source>
          <target state="translated">一部のデータ ソースには、スペース、コンマ、セミコロンなどの文字を含めることができるオブジェクトがあります。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>To accommodate this capability, use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</source>
          <target state="translated">この機能に合わせて、使用、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph>プロパティを左角かっこやオブジェクトの名前をカプセル化する右角かっこなどの区切り記号を指定します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">変更することはできません、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph>、挿入後のプロパティを更新、または削除コマンドが生成されて、その設定を変更するには呼び出した後、<ph id="ph3">`Update`</ph>のメソッド、<ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuotePrefix">
          <source>This property cannot be changed after an insert, update, or delete command has been generated.</source>
          <target state="translated">このプロパティは、挿入、更新、または削除コマンドの生成後には変更できません。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Gets or sets the ending character or characters to use when specifying database objects (for example, tables or columns) whose names contain characters such as spaces or reserved tokens.</source>
          <target state="translated">名前に空白や予約済みトークンなどの文字を含むデータベース オブジェクト (テーブル、列など) を指定するための終了文字を取得または設定します。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>The ending character or characters to use.</source>
          <target state="translated">使用する終了文字。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>The default is an empty string.</source>
          <target state="translated">既定値は空の文字列です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Some data sources may have objects that can contain characters such as spaces, commas, and semicolons.</source>
          <target state="translated">一部のデータ ソースには、スペース、コンマ、セミコロンなどの文字を含めることができるオブジェクトがあります。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>To accommodate this capability, use the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties to specify delimiters such as a left bracket and a right bracket to encapsulate the object name.</source>
          <target state="translated">この機能に合わせて、使用、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph>プロパティを左角かっこやオブジェクトの名前をカプセル化する右角かっこなどの区切り記号を指定します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.QuoteSuffix">
          <source>Although you cannot change the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph> properties after an insert, update, or delete command has been generated, you can change their settings after calling the <ph id="ph3">`Update`</ph> method of a <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>.</source>
          <target state="translated">変更することはできません、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A&gt;</ph>、挿入後のプロパティを更新、または削除コマンドが生成されて、その設定を変更するには呼び出した後、<ph id="ph3">`Update`</ph>のメソッド、<ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source>Clears the commands associated with this <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph>.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> に関連付けられているコマンドを削除します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph> method effectively removes all the <ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph> objects referred to by the <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>,</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A&gt;</ph>メソッドが実質的にすべてを削除、<ph id="ph2">&lt;xref:System.Data.Common.DbCommand&gt;</ph>によって参照されるオブジェクト、 <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.SelectCommand%2A&gt;</ph>、</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>,</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A&gt;</ph>、</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph>, and</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A&gt;</ph>、および</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.RefreshSchema">
          <source><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.InsertCommand%2A&gt;</ph> プロパティ。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> instance containing information about the event.</source>
          <target state="translated">イベントの情報が格納されている <ph id="ph1">&lt;see cref="T:System.Data.Common.RowUpdatingEventArgs" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)">
          <source>Adds an event handler for the <ph id="ph1">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> イベントのイベント ハンドラーを追加します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Gets or sets the character to be used for the separator between the schema identifier and any other identifiers.</source>
          <target state="translated">スキーマ識別子と他の識別子との間の区切り記号として使用される文字列を取得または設定します。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>The character to be used as the schema separator.</source>
          <target state="translated">スキーマ区切り記号として使用される文字列。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Generally, database servers indicate the schema for an identifier by separating the schema name from the identifier with some character.</source>
          <target state="translated">一般に、データベース サーバーは、いくつかの文字を持つ id からスキーマ名を区切ることによって、識別子のスキーマを示します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>For example, SQL Server uses a colon, creating complete identifiers such as <bpt id="p1">**</bpt>Person:CustomerName<ept id="p1">**</ept>, where "Person" is the schema name and "CustomerName" is the identifier.</source>
          <target state="translated">たとえば、SQL Server を使用して、コロンなどの完全な識別子を作成する<bpt id="p1">**</bpt>Person: CustomerName<ept id="p1">**</ept>"Person"はスキーマ名、"CustomerName"は、識別子。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SchemaSeparator">
          <source>Setting this property allows developers to modify this behavior.</source>
          <target state="translated">このプロパティを設定すると、この動作を変更する開発者ができます。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>Specifies whether all column values in an update statement are included or only changed ones.</source>
          <target state="translated">UPDATE ステートメントにすべての列値が含まれるのか、変更になった列値だけが含まれるのかを示します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the UPDATE statement generated by the <ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> includes all columns; <ph id="ph3">&lt;see langword="false" /&gt;</ph> if it includes only changed columns.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> で生成される UPDATE ステートメントがすべての列を含む場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。変更になった列だけを含む場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>The UPDATE statement generated by a <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> can include update information about all the columns, or it can include information only about those columns whose values have changed.</source>
          <target state="translated">によって生成された UPDATE ステートメント、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>すべての列に関する更新情報を含めることができますかに関する情報のみを持つ値が変更された列を含めることができます。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Common.DbCommandBuilder.SetAllValues">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A&gt;</ph> property to <ph id="ph2">`true`</ph> causes the generated UPDATE statement to include all the columns, whether their values have changed or not.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Data.Common.DbCommandBuilder.SetAllValues%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>生成された UPDATE ステートメントのすべての列を含めるをその値に変更されたかどうかが発生します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> to be used for the update.</source>
          <target state="translated">更新に使用する <ph id="ph1">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>Registers the <ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> to handle the <ph id="ph2">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> event for a <ph id="ph3">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Common.DbCommandBuilder" /&gt;</ph> を登録して、<ph id="ph2">&lt;see cref="E:System.Data.OleDb.OleDbDataAdapter.RowUpdating" /&gt;</ph> の <ph id="ph3">&lt;see cref="T:System.Data.Common.DbDataAdapter" /&gt;</ph> イベントを処理します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>This method is intended for use by provider writers building a custom command builder.</source>
          <target state="translated">このメソッドは、プロバイダーの作成者がカスタム コマンド ビルダーを作成して使用するものです。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>When a new <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>, it is registered for the DbDataAdapter's <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> event.</source>
          <target state="translated">新しい<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>に追加、 <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>、DbDataAdapter の用に登録されている<bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept>イベント。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)">
          <source>If this method is called again with the same <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph> is unregistered for that DbDataAdapter's <bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept> event.</source>
          <target state="translated">このメソッドが同じで再び呼び出された場合<ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.Common.DbCommandBuilder&gt;</ph>再度登録されていない<bpt id="p1">**</bpt>RowUpdating<ept id="p1">**</ept>イベント。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The identifier that will have its embedded quotes removed.</source>
          <target state="translated">埋め込まれている引用符が削除される ID。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>Given a quoted identifier, returns the correct unquoted form of that identifier, including properly un-escaping any embedded quotes in the identifier.</source>
          <target state="translated">引用符で囲まれた ID が指定されると、その ID を引用符で囲まれない正しい形式で返します。ID 内に埋め込まれている引用符はすべて適切にエスケープ解除されます。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)">
          <source>The unquoted identifier, with embedded quotes properly un-escaped.</source>
          <target state="translated">引用符で囲まれない ID。埋め込まれていた引用符は適切にエスケープ解除されます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>