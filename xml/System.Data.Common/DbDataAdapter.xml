<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="20075d92e55255cb6349f84abe429adb2ee77017" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40212216" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="cbe94-101">
        <see cref="T:System.Data.IDbDataAdapter" /> インターフェイスの実装を支援します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cbe94-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span>
      </span>
      <span data-ttu-id="cbe94-102">
        <see cref="T:System.Data.Common.DbDataAdapter" /> の継承クラスは、厳密な型指定を行う関数のセットを実装しますが、**DataAdapter** を完全に実装するために必要な機能の大部分は継承します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="cbe94-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-103"><xref:System.Data.Common.DbDataAdapter>クラスから継承、<xref:System.Data.Common.DataAdapter>クラスを実装、<xref:System.Data.IDbDataAdapter>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="cbe94-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="cbe94-104">クラスを実装しやすく、 **DataAdapter**リレーショナル データベースで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="cbe94-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="cbe94-105">アプリケーションがのインスタンスを作成していない、<xref:System.Data.Common.DbDataAdapter>クラスを直接が、これを継承するクラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="cbe94-106">クラスを継承する<xref:System.Data.Common.DbDataAdapter>継承されたメンバーを実装し、通常はプロバイダー固有の機能を追加するための追加メンバーを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="cbe94-107">など、<xref:System.Data.Common.DbDataAdapter>クラスを定義、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ、および<xref:System.Data.Common.DbDataAdapter>クラス定義の 8 つのオーバー ロード、<xref:System.Data.IDataAdapter.Fill%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="cbe94-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="cbe94-108">さらに、<xref:System.Data.OleDb.OleDbDataAdapter>クラスの継承、<xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドの 2 つの追加オーバー ロードを定義して<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>をパラメーターとしてオブジェクトの ADO レコード セットを取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="cbe94-109">
        <para>継承する場合、<see cref="T:System.Data.Common.DbDataAdapter" />次のコンス トラクターを実装することを勧めクラス、: <list type="table"><listheader><term>項目</term><description>説明</description></listheader><item><term> *Prv*DataAdapter() </term><description>の新しいインスタンスを初期化、 *Prv*DataAdapter クラス。</description></item><item><term> *Prv*DataAdapter (*Prv*コマンド*selectCommand*) </term><description>の新しいインスタンスを初期化、 *Prv*DataAdapter クラス指定した SQL SELECT ステートメント。</description></item><item><term> *Prv*DataAdapter (文字列*selectCommandText*、文字列*selectConnectionString*) </term><description>の新しいインスタンスを初期化、 *Prv*SQL SELECT ステートメントと接続文字列の DataAdapter クラスです。</description></item><item><term> *Prv*DataAdapter (文字列*selectCommandText*、 *Prv*接続*selectConnection*) </term><description>新しいを初期化しますインスタンス、 *Prv*SQL SELECT ステートメントで、DataAdapter クラスと*Prv*接続オブジェクトです。</description></item></list>  .NET Framework データ プロバイダーの間で整合性を高める必要があります、フォームの継承クラスの名前を付けます*Prv*dataadapter を使用する場所*Prv*は特定の .NET のすべてのクラスに指定された uniform プレフィックスFramework データ プロバイダーの名前空間。たとえば、"Sql"には、プレフィックスの<see cref="T:System.Data.SqlClient.SqlDataAdapter" />クラス、 **System.Data.SqlClient**名前空間。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="cbe94-109">
          <para>When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> *Prv*DataAdapter()  </term><description> Initializes a new instance of the *Prv*DataAdapter class.  </description></item><item><term> *Prv*DataAdapter(*Prv*Command *selectCommand*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.  </description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.  </description></item><item><term> *Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)  </term><description> Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.  </description></item></list>  To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-110">
            <see langword="DataAdapter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-110">Initializes a new instance of a <see langword="DataAdapter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-111">**DataAdapter** クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-111">Initializes a new instance of a **DataAdapter** class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-112">インスタンスを作成するときに<xref:System.Data.Common.DbDataAdapter>、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-112">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="cbe94-113">プロパティ</span><span class="sxs-lookup"><span data-stu-id="cbe94-113">Properties</span></span>|<span data-ttu-id="cbe94-114">初期値</span><span class="sxs-lookup"><span data-stu-id="cbe94-114">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="cbe94-115">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-115">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="cbe94-116">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-116">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="cbe94-117">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-117">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="cbe94-118">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-118">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="cbe94-119">プロパティに別個の呼び出しでこれらのプロパティのいずれかの値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-119">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="cbe94-120">新しい <see langword="DataAdapter" /> の作成に使用する <see langword="DataAdapter" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-120">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-121">既存の同じ型のオブジェクトから、<see langword="DataAdapter" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-121">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-122">このオーバー ロード、<xref:System.Data.Common.DbDataAdapter>コンス トラクターが使用できるように設計を .NET Framework データ プロバイダーによって clone の実装で使用するためのようなコンス トラクターを実装する場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-122">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="cbe94-123">バッチに追加する <see cref="T:System.Data.IDbCommand" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-123">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-124">
            <see cref="T:System.Data.IDbCommand" /> を現在のバッチに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-124">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-125">
            <see cref="T:System.Data.IDbCommand" /> を追加する前のバッチ内のコマンド数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-125">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-126"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-126">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="cbe94-127">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-127">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cbe94-128">アダプターでバッチがサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-128">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-129">
            <para>このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスがコマンドをバッチに追加するユーザーを許可するには、このメソッドをオーバーライドするバッチをサポートしています。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-129">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-130">バッチからすべての <see cref="T:System.Data.IDbCommand" /> オブジェクトを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-130">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-131"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-131">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="cbe94-132">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-132">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cbe94-133">アダプターでバッチがサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-133">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-134">
            <para>このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスがバッチからすべてのコマンドを削除するユーザーを許可するには、このメソッドをオーバーライドするバッチをサポートしています。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-134">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="cbe94-135">データ ソースの更新に使用した <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-135">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cbe94-136">
            <see cref="T:System.Data.IDbCommand" /> 処理中に実行した <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-136">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="cbe94-137">コマンドが UPDATE、INSERT、DELETE、または SELECT ステートメントのいずれかを示す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-137">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="cbe94-138">
            <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-138">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-139">
            <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-139">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-140">
            <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> クラスの新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-140">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-141">
            <para>オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />メソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-141">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow">
          <span data-ttu-id="cbe94-142">データ ソースを更新する <see cref="T:System.Data.DataRow" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-142">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cbe94-143">
            <see cref="T:System.Data.IDbCommand" /> 処理中に実行する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-143">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span>
          </span>
        </param>
        <param name="statementType">
          <span data-ttu-id="cbe94-144">コマンドが UPDATE、INSERT、DELETE、または SELECT ステートメントのいずれかを示す値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-144">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="cbe94-145">
            <see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-145">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-146">
            <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-146">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-147">
            <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> クラスの新しいインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-147">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-148">
            <para>オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />メソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-148">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-149">
            <see cref="T:System.Data.Common.DataAdapter" /> オブジェクトがテーブル マップに使用する既定の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-149">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-150">"Table"で使用される既定の名前、<xref:System.Data.Common.DataAdapter>オブジェクトがテーブル マップします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-150">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="cbe94-151"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> アプリケーションで使用するテーブルのマッピングを追加するときに、<xref:System.Data.Common.DbDataAdapter.Fill%2A>が指定されていません、<xref:System.Data.DataTable>名。</span><span class="sxs-lookup"><span data-stu-id="cbe94-151"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-152">データ セットからレコードを削除するコマンドを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-152">Gets or sets a command for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe94-153">
            <see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-153">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-154">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、プライマリ キーの情報が存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>が自動的に生成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-154">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbe94-155">次の例は、派生クラスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-155">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="cbe94-156">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-156">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-157">
            <see cref="T:System.Data.Common.DbDataAdapter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-157">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-158">現在のバッチを実行します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-158">Executes the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-159">バッチ内の直前のコマンドの戻り値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-159">The return value from the last command in the batch.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-160"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-160">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="cbe94-161">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-161">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-162">
            <para>このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスが、バッチを実行できるようにするには、このメソッドをオーバーライドするバッチをサポートしています。このメソッドの実装は、バッチにアダプター内のコマンドを結合し、バッチを実行し、バッチの戻り値を返します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-162">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch. An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-163">
            <see cref="T:System.Data.DataSet" /> または <see cref="T:System.Data.DataTable" /> にデータを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-163">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="cbe94-164">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-164">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-165">
            <see cref="T:System.Data.DataSet" /> 内の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-165">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-166">
            <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-166">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="cbe94-167">これには、行を返さないステートメントの影響を受ける行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-167">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-168"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、SELECT ステートメントを使用してデータ ソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-168">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="cbe94-169"><xref:System.Data.IDbConnection> Select コマンドに関連付けられているオブジェクトを有効にする必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-169">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-170">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのデータを取得する開閉します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-170">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="cbe94-171">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-171">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-172">データ テーブルの設定中にエラーまたは例外が発生した場合、エラーの発生前に追加された行は、データ テーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-172">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="cbe94-173">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-173">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="cbe94-174">テーブルは追加されません、コマンドがすべての行を返さない場合、 <xref:System.Data.DataSet>、し、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-174">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="cbe94-175">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列に名前を生成します"*columnname*1「、」*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-175">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-176">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-176">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="cbe94-177">指定したクエリでは、複数の結果を返す、別のテーブルにクエリを返す行ごとの結果セットが配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-177">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="cbe94-178">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-178">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="cbe94-179">行を返さないクエリのテーブルは作成しない選択クエリに続く挿入クエリを処理する場合、select クエリ用に作成されたテーブルの名前は"Table"最初に作成されたテーブルでは。</span><span class="sxs-lookup"><span data-stu-id="cbe94-179">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="cbe94-180">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-180">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-181">設定に、SELECT ステートメントを使用するときに、<xref:System.Data.DataSet>複数の結果、バッチの SQL ステートメントなど、結果のいずれかにエラーが含まれている場合を返します。 それ以降のすべての結果はスキップされ、には追加されません、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-181">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="cbe94-182">以降を使用する場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>の内容を更新する呼び出し、 <xref:System.Data.DataSet>、2 つの条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-182">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="cbe94-183">SQL ステートメントが最初に設定するために使用する 1 つと一致する必要があります、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-183">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="cbe94-184">**キー**列情報が存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-184">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="cbe94-185">重複する行が調整されていて、1 回だけの主キーの情報が存在する場合、<xref:System.Data.DataTable>に対応する、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-185">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-186">主キーの情報を設定するいずれかを使って<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、指定することによって、<xref:System.Data.DataTable.PrimaryKey%2A>のプロパティ、 <xref:System.Data.DataTable>、かを設定して、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティを`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-186">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="cbe94-187">`SelectCommand` が OUTER JOIN の結果を返す場合、`DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable> 値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-187">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-188">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-188">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="cbe94-189">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-189">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-190">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-190">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="cbe94-191">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-191">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="cbe94-192">テーブル マップに使用する <see cref="T:System.Data.DataTable" /> の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-192">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-193">
            <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-193">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-194">
            <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-194">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="cbe94-195">これには、行を返さないステートメントの影響を受ける行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-195">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-196"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、関連付けられた指定した SELECT ステートメントを使用してデータ ソースから行を取得<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-196">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="cbe94-197">SELECT ステートメントに関連付けられている接続オブジェクトが有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-197">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-198">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-198">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="cbe94-199">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-199">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-200"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作し、先に行を追加します<xref:System.Data.DataTable>内のオブジェクト、 <xref:System.Data.DataSet>、作成、<xref:System.Data.DataTable>オブジェクトのかどうか、まだ存在しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-200">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="cbe94-201">作成するときに<xref:System.Data.DataTable>、オブジェクト、<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作は通常の列名のメタデータのみを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-201">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="cbe94-202">ただし場合、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>プロパティに設定されて`AddWithKey`、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-202">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="cbe94-203">場合、<xref:System.Data.Common.DbDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-203">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-204">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-204">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="cbe94-205">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-205">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="cbe94-206">オーバー ロード<xref:System.Data.Common.DbDataAdapter.Fill%2A>を受け取る`DataTable`ように、パラメーターでは、最初の結果のみ取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-206">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="cbe94-207">オーバー ロードを使用して、<xref:System.Data.Common.DbDataAdapter.Fill%2A>を受け取る`DataSet`複数の結果を得るためのパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="cbe94-207">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="cbe94-208"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbe94-208">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="cbe94-209">このような状況では、<xref:System.Data.Common.DbDataAdapter.Fill%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-209">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="cbe94-210">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-210">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="cbe94-211">場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-211">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="cbe94-212">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-212">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="cbe94-213">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-213">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="cbe94-214">使用することができます、<xref:System.Data.Common.DbDataAdapter.Fill%2A>複数回の同じメソッド<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-214">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-215">主キーが存在する場合は、受信行が既に存在する行と一致するとマージされます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-215">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="cbe94-216">受信した行を追加、主キーが存在しない場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-216">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-217">`SelectCommand` が OUTER JOIN の結果を返す場合、`DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable> 値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-217">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-218">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-218">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="cbe94-219">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-219">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-220">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.Fill%2A>と<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework データ プロバイダーは、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-220">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbe94-221">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-221">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-222">
            <para>このオーバー ロード、<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />メソッドが保護されており、.NET Framework データ プロバイダーで使用するために設計されています。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-222">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="cbe94-223">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-223">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="cbe94-224">テーブル マップに使用するソース テーブルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-224">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-225">
            <see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の列と一致するように <see cref="T:System.Data.DataTable" /> 内の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-225">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-226">
            <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-226">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="cbe94-227">これには、行を返さないステートメントの影響を受ける行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-227">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-228"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、SELECT ステートメントを使用してデータ ソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-228">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="cbe94-229"><xref:System.Data.IDbConnection> Select コマンドに関連付けられているオブジェクトを有効にする必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-229">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-230">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-230">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="cbe94-231">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-231">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-232">テーブルは追加されません、コマンドがすべての行を返さない場合、 <xref:System.Data.DataSet>、し、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-232">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="cbe94-233">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出すると、<xref:System.Data.DataTable>パターン"columnname1"、"columnname2"、"columnname3"などを使用して、後続の列に名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-233">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="cbe94-234">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-234">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="cbe94-235">指定したクエリでは、複数の結果を返す、各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-235">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="cbe94-236">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-236">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="cbe94-237">行を返さないクエリのテーブルは作成しない選択クエリに続く挿入クエリを処理する場合は、select クエリ用に作成されたテーブルという名前になります"Table"は作成された最初のテーブル。</span><span class="sxs-lookup"><span data-stu-id="cbe94-237">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="cbe94-238">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-238">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbe94-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="cbe94-240">このような状況では、<xref:System.Data.Common.DbDataAdapter.Fill%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-240">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="cbe94-241">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-241">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="cbe94-242">場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-242">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="cbe94-243">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-243">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="cbe94-244">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-244">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="cbe94-245">データ テーブルの設定中にエラーまたは例外が発生した場合、エラーの発生前に追加された行は、データ テーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-245">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="cbe94-246">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-246">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="cbe94-247">設定に、SELECT ステートメントを使用するときに、<xref:System.Data.DataSet>バッチ SQL ステートメントは、次の注意の複数の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-247">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="cbe94-248">それ以降のすべての結果がスキップされに追加されないエラーが含まれる結果のいずれかの場合、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-248">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="cbe94-249">以降を使用する場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>の内容を更新する呼び出し、 <xref:System.Data.DataSet>、2 つの条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-249">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="cbe94-250">SQL ステートメントが最初に設定するために使用する 1 つと一致する必要があります、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-250">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="cbe94-251">**キー**列情報が存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-251">The **Key** column information must be present.</span></span> <span data-ttu-id="cbe94-252">重複する行が調整されていて、1 回だけの主キーの情報が存在する場合、<xref:System.Data.DataTable>に対応する、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-252">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-253">主キーの情報を設定するいずれかを使って<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、指定することによって、<xref:System.Data.DataTable.PrimaryKey%2A>のプロパティ、 <xref:System.Data.DataTable>、かを設定して、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティを`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-253">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="cbe94-254">`SelectCommand` が OUTER JOIN の結果を返す場合、`DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable> 値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-254">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-255">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-255">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="cbe94-256">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-256">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-257">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-257">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="cbe94-258">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-258">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbe94-259">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、入力、 <xref:System.Data.DataSet> categories テーブルから行を含むです。</span><span class="sxs-lookup"><span data-stu-id="cbe94-259">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="cbe94-260">この例では、作成した、<xref:System.Data.OleDb.OleDbDataAdapter>と<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-260">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="cbe94-261">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-261">The source table is invalid.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-262">
            <para>オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />メソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-262">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="dataTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="cbe94-263">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-263">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cbe94-264">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-264">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="cbe94-265">
            <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-265">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-266">指定した <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.DataTable" />、および <see cref="T:System.Data.IDbCommand" /> を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.CommandBehavior" /> 内の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-266">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-267">
            <see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-267">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="cbe94-268">これには、行を返さないステートメントの影響を受ける行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-268">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-269"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、関連付けられた指定した SELECT ステートメントを使用してデータ ソースから行を取得<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-269">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="cbe94-270">SELECT ステートメントに関連付けられている接続オブジェクトが有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-270">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-271">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのデータを取得する開閉します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-271">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="cbe94-272">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-272">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作し、指定したコピー先に行を追加します<xref:System.Data.DataTable>オブジェクト、 <xref:System.Data.DataSet>、作成、<xref:System.Data.DataTable>オブジェクトのかどうかは既に存在しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="cbe94-274">作成するときに、<xref:System.Data.DataTable>オブジェクト、<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作は通常の列名のメタデータのみを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-274">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="cbe94-275">ただし場合、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>プロパティに設定されて`AddWithKey`、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-275">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="cbe94-276">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列に名前が生成されます"*columnname*1"、"*columnname*2"、"*columnname*3"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-276">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-277">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-277">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="cbe94-278">オーバー ロード<xref:System.Data.Common.DbDataAdapter.Fill%2A>を受け取る`DataTable`ように、パラメーターでは、最初の結果のみ取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-278">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="cbe94-279">オーバー ロードを使用して、<xref:System.Data.Common.DbDataAdapter.Fill%2A>を受け取る`DataSet`複数の結果を得るためのパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="cbe94-279">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="cbe94-280">使用することができます、<xref:System.Data.Common.DbDataAdapter.Fill%2A>複数回の同じメソッド<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-280">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-281">主キーが存在する場合は、受信行が既に存在する行と一致するとマージされます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-281">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="cbe94-282">受信した行を追加、主キーが存在しない場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-282">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-283">`SelectCommand` が OUTER JOIN の結果を返す場合、`DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable> 値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-283">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-284">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-284">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="cbe94-285">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-285">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-286">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-286">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="cbe94-287">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-287">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-288">
            <para>このオーバー ロード、<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />メソッドが保護されており、.NET Framework データ プロバイダーで使用するために設計されています。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-288">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord">
          <span data-ttu-id="cbe94-289">取得を開始する、0 から始まるレコード番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-289">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="cbe94-290">取得するレコードの最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-290">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="dataTables">
          <span data-ttu-id="cbe94-291">データ ソースから読み込む <see cref="T:System.Data.DataTable" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-291">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-292">指定したレコード位置で開始し、指定した最大数のレコードを読み込んで、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-292">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-293">
            <see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-293">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="cbe94-294">この値には、行を返さないステートメントの影響を受ける行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-294">This value does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-295"><xref:System.Data.Common.DataAdapter.Fill%2A>メソッドは、関連付けられた指定した SELECT ステートメントを使用してデータ ソースから行を取得<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-295">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="cbe94-296">SELECT ステートメントに関連付けられている接続オブジェクトが有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-296">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-297">前に、接続が閉じられた場合<xref:System.Data.Common.DataAdapter.Fill%2A>が呼び出されると、ファイル データを取得するが開かれ、閉じられています。</span><span class="sxs-lookup"><span data-stu-id="cbe94-297">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="cbe94-298">接続が前に開いている場合は<xref:System.Data.Common.DataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-298">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-299"><xref:System.Data.Common.DataAdapter.Fill%2A>操作し、先に行を追加します<xref:System.Data.DataTable>内のオブジェクト、 <xref:System.Data.DataSet>、作成、<xref:System.Data.DataTable>オブジェクトのかどうか、まだ存在しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-299">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="cbe94-300">作成するときに<xref:System.Data.DataTable>、オブジェクト、<xref:System.Data.Common.DataAdapter.Fill%2A>操作は通常の列名のメタデータのみを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-300">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="cbe94-301">ただし場合、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>プロパティに設定されて`AddWithKey`、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-301">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="cbe94-302">`SelectCommand` が OUTER JOIN の結果を返す場合、`DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable> 値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-302">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-303">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-303">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="cbe94-304">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-304">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="cbe94-305">データ アダプターの設定中に重複した列が発生した場合、<xref:System.Data.DataTable>パターン"columnname1"、"columnname2"、"columnname3"などを使用して、後続の列の名前を生成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-305">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="cbe94-306">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-306">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="cbe94-307">複数の結果セットが追加されたとき、 <xref:System.Data.DataSet>、各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-307">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="cbe94-308">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-308">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="cbe94-309">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-309">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-310">設定に、SELECT ステートメントを使用するときに、<xref:System.Data.DataSet>複数の結果を返すバッチの SQL ステートメントなど、エラー、結果のいずれかが含まれる場合それ以降のすべての結果はスキップされに追加されません、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-310">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="cbe94-311">使用することができます、<xref:System.Data.Common.DataAdapter.Fill%2A>複数回の同じメソッド<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-311">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-312">主キーが存在する場合は、受信行が既に存在する行と一致するとマージされます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-312">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="cbe94-313">受信した行を追加、主キーが存在しない場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-313">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-314">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-314">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="cbe94-315">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-315">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="cbe94-316">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-316">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="cbe94-317">取得を開始する、0 から始まるレコード番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-317">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="cbe94-318">取得するレコードの最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-318">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="cbe94-319">テーブル マップに使用するソース テーブルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-319">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-320">
            <see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-320">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-321">
            <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-321">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="cbe94-322">これには、行を返さないステートメントの影響を受ける行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-322">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-323">A`maxRecords`値が 0 の開始レコードの後に見つかったすべてのレコードを取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-323">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="cbe94-324">場合`maxRecords`だけで、残りの行が返され、エラーは発生しませんが、残りの行の数より大きい。</span><span class="sxs-lookup"><span data-stu-id="cbe94-324">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="cbe94-325">場合、対応する select コマンドは、複数の結果を返すステートメント<xref:System.Data.Common.DbDataAdapter.Fill%2A>のみ適用されます`maxRecords`最初の結果にします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-325">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="cbe94-326"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、SELECT ステートメントを使用してデータ ソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-326">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="cbe94-327"><xref:System.Data.IDbConnection> SELECT ステートメントに関連付けられているオブジェクトは、有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-327">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-328">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのデータを取得する開閉します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-328">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="cbe94-329">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-329">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-330">テーブルは追加されません、コマンドがすべての行を返さない場合、<xref:System.Data.DataSet>例外は発生しませんが、します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-330">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="cbe94-331">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列に名前が生成されます"*columnname*1"、"*columnname*2"、"*columnname*3"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-331">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-332">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-332">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="cbe94-333">指定したクエリでは、複数の結果を返す、各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-333">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="cbe94-334">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-334">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="cbe94-335">行を返さないクエリのテーブルは作成しない選択クエリに続く挿入クエリを処理する場合、select クエリ用に作成されたテーブルの名前は"Table"最初に作成されたテーブルでは。</span><span class="sxs-lookup"><span data-stu-id="cbe94-335">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="cbe94-336">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-336">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-337"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbe94-337">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="cbe94-338">このような状況では、<xref:System.Data.Common.DbDataAdapter.Fill%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-338">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="cbe94-339">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-339">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="cbe94-340">場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-340">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="cbe94-341">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-341">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="cbe94-342">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-342">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="cbe94-343">データ テーブルの設定中にエラーまたは例外が発生した場合、エラーの発生前に追加された行は、データ テーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-343">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="cbe94-344">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-344">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="cbe94-345">設定に、SELECT ステートメントを使用するときに、<xref:System.Data.DataSet>バッチの SQL ステートメントなど、複数の結果を返しますが、次の注意します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-345">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="cbe94-346">バッチ SQL ステートメントから複数の結果を処理するときに`maxRecords`最初の結果にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-346">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="cbe94-347">チャプター結果 (.NET Framework Data Provider for OLE DB のみ) を含む行に対しても同様です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-347">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="cbe94-348">最上位レベルの結果はによって制限されます`maxRecords`がすべての子行を追加します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-348">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="cbe94-349">それ以降のすべての結果がスキップされに追加されないエラーが含まれる結果のいずれかの場合、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-349">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="cbe94-350">以降を使用する場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>の内容を更新する呼び出し、 <xref:System.Data.DataSet>、2 つの条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-350">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="cbe94-351">SQL ステートメントが最初に設定するために使用する 1 つと一致する必要があります、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-351">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="cbe94-352">**キー**列情報が存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-352">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="cbe94-353">主キーの情報が存在する場合、重複する行は調整して、1 回だけで、<xref:System.Data.DataTable>に対応する、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-353">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-354">主キーの情報を設定するいずれかを使って<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、指定することによって、<xref:System.Data.DataTable.PrimaryKey%2A>のプロパティ、 <xref:System.Data.DataTable>、かを設定して、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティを`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-354">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="cbe94-355">`SelectCommand` が OUTER JOIN の結果を返す場合、`DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable> 値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-355">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-356">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-356">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="cbe94-357">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-357">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-358">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-358">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="cbe94-359">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-359">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-360">`DataSet`によって示されるレコードの数よりも多くが含まれていないは`maxRecords`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-360">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="cbe94-361">ただし、クエリによって生成される全体の結果セットがまだサーバーから返されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-361">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbe94-362">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、入力、<xref:System.Data.DataSet>から行 10、先頭の 15 行を含む、**カテゴリ**テーブル。</span><span class="sxs-lookup"><span data-stu-id="cbe94-362">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="cbe94-363">この例では、作成した、<xref:System.Data.OleDb.OleDbDataAdapter>と<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-363">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="cbe94-364">
            <see cref="T:System.Data.DataSet" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-364">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbe94-365">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-365">The source table is invalid.</span>
          </span>
          <span data-ttu-id="cbe94-366">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-366">-or-</span>
          </span>
          <span data-ttu-id="cbe94-367">接続が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-367">The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cbe94-368">接続が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-368">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbe94-369">
            <paramref name="startRecord" /> パラメーターが 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-369">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="cbe94-370">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-370">-or-</span>
          </span>
          <span data-ttu-id="cbe94-371">
            <paramref name="maxRecords" /> パラメーターが 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-371">The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-372">
            <para>オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />メソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-372">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataSet">To be added.</param>
        <param name="srcTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <param name="startRecord">To be added.</param>
        <param name="maxRecords">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTables">
          <span data-ttu-id="cbe94-373">データ ソースから読み込む <see cref="T:System.Data.DataTable" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-373">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="cbe94-374">取得を開始する、0 から始まるレコード番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-374">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="cbe94-375">取得するレコードの最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-375">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cbe94-376">
            <see cref="T:System.Data.IDbCommand" /> オブジェクトにデータを読み込むために実行する <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-376">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="cbe94-377">
            <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-377">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-378">
            <see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-378">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-379">データ テーブルで追加または更新された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-379">The number of rows added to or refreshed in the data tables.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-380">A`maxRecords`値が 0 の開始レコードの後に見つかったすべてのレコードを取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-380">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="cbe94-381">場合`maxRecords`だけで、残りの行が返され、エラーは発生しませんが、残りの行の数より大きい。</span><span class="sxs-lookup"><span data-stu-id="cbe94-381">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="cbe94-382"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、SELECT ステートメントを使用してデータ ソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-382">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="cbe94-383"><xref:System.Data.IDbConnection> SELECT ステートメントに関連付けられているオブジェクトは、有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-383">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-384">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-384">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="cbe94-385">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-385">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-386">テーブルは追加されません、コマンドがすべての行を返さない場合、<xref:System.Data.DataSet>例外は発生しませんが、します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-386">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="cbe94-387">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列に名前が生成されます"*columnname*1"、"*columnname*2"、"*columnname*3"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-387">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-388">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-388">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="cbe94-389">指定したクエリでは、複数の結果を返す、各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-389">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="cbe94-390">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-390">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="cbe94-391">行を返さないクエリのテーブルは作成しない選択クエリに続く挿入クエリを処理する場合は、select クエリ用に作成されたテーブルという名前になります"Table"は作成された最初のテーブル。</span><span class="sxs-lookup"><span data-stu-id="cbe94-391">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="cbe94-392">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-392">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-393"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbe94-393">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="cbe94-394">このような状況では、<xref:System.Data.Common.DbDataAdapter.Fill%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-394">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="cbe94-395">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-395">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="cbe94-396">場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-396">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="cbe94-397">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-397">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="cbe94-398">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-398">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="cbe94-399">データ テーブルの設定中にエラーまたは例外が発生した場合、エラーの発生前に追加された行は、データ テーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-399">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="cbe94-400">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-400">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="cbe94-401">設定に、SELECT ステートメントを使用するときに、<xref:System.Data.DataTable>バッチ SQL ステートメントは、次の注意など、オブジェクトが複数の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-401">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="cbe94-402">バッチ SQL ステートメントから複数の結果を処理するときに`maxRecords`最初の結果にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-402">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="cbe94-403">チャプター結果 (.NET Framework Data Provider for OLE DB のみ) を含む行に対しても同様です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-403">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="cbe94-404">最上位レベルの結果はによって制限されます`maxRecords`がすべての子行を追加します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-404">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="cbe94-405">エラーが含まれる結果のいずれかの場合は、それ以降のすべての結果はスキップされます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-405">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-406">`DataSet`によって示されるレコードの数よりも多くが含まれていないは`maxRecords`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-406">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="cbe94-407">ただし、クエリによって生成されたすべての結果セットがまだサーバーから返されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-407">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="cbe94-408">
            <see cref="T:System.Data.DataSet" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-408">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbe94-409">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-409">The source table is invalid.</span>
          </span>
          <span data-ttu-id="cbe94-410">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-410">-or-</span>
          </span>
          <span data-ttu-id="cbe94-411">接続が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-411">The connection is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="cbe94-412">接続が見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-412">The connection could not be found.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbe94-413">
            <paramref name="startRecord" /> パラメーターが 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-413">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="cbe94-414">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-414">-or-</span>
          </span>
          <span data-ttu-id="cbe94-415">
            <paramref name="maxRecords" /> パラメーターが 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-415">The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-416">
            <para>オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />メソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-416">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="cbe94-417">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-417">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span>
          </span>
        </param>
        <param name="startRecord">
          <span data-ttu-id="cbe94-418">取得を開始する、0 から始まるレコード番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-418">The zero-based record number to start with.</span>
          </span>
        </param>
        <param name="maxRecords">
          <span data-ttu-id="cbe94-419">取得するレコードの最大数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-419">The maximum number of records to retrieve.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="cbe94-420">テーブル マップに使用するソース テーブルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-420">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cbe94-421">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-421">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="cbe94-422">
            <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-422">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-423">
            <see cref="T:System.Data.DataSet" /> 名、ソース テーブル名、コマンド文字列、およびコマンド動作を使用して、データ ソース内の列と一致するように、<see cref="T:System.Data.DataSet" /> 内の指定した範囲の行を追加または更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-423">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-424">
            <see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-424">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="cbe94-425">これには、行を返さないステートメントの影響を受ける行は含まれません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-425">This does not include rows affected by statements that do not return rows.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-426"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、関連付けられた指定した SELECT ステートメントを使用してデータ ソースから行を取得<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-426">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="cbe94-427">SELECT ステートメントに関連付けられている接続オブジェクトが有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-427">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-428">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-428">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="cbe94-429">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-429">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-430"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作し、先に行を追加します<xref:System.Data.DataTable>内のオブジェクト、 <xref:System.Data.DataSet>、作成、<xref:System.Data.DataTable>オブジェクトのかどうか、まだ存在しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-430">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="cbe94-431">作成するときに<xref:System.Data.DataTable>、オブジェクト、<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作は通常の列名のメタデータのみを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-431">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="cbe94-432">ただし場合、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>プロパティに設定されて`AddWithKey`、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-432">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="cbe94-433">場合、<xref:System.Data.Common.DbDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-433">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-434">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-434">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="cbe94-435">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-435">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="cbe94-436">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-436">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="cbe94-437">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-437">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-438"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbe94-438">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="cbe94-439">このような状況では、<xref:System.Data.Common.DbDataAdapter.Fill%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-439">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="cbe94-440">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-440">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="cbe94-441">場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-441">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="cbe94-442">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-442">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="cbe94-443">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-443">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="cbe94-444">使用することができます、<xref:System.Data.Common.DbDataAdapter.Fill%2A>複数回の同じメソッド<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-444">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-445">主キーが存在する場合は、受信行が既に存在する行と一致するとマージされます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-445">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="cbe94-446">受信した行を追加、主キーが存在しない場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-446">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-447">`SelectCommand` が OUTER JOIN の結果を返す場合、`DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable> 値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-447">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-448">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-448">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="cbe94-449">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-449">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-450">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.Fill%2A>と<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework データ プロバイダーは、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-450">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbe94-451">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-451">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbe94-452">
            <paramref name="startRecord" /> パラメーターが 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-452">The <paramref name="startRecord" /> parameter is less than 0.</span>
          </span>
          <span data-ttu-id="cbe94-453">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-453">-or-</span>
          </span>
          <span data-ttu-id="cbe94-454">
            <paramref name="maxRecords" /> パラメーターが 0 未満です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-454">The <paramref name="maxRecords" /> parameter is less than 0.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-455">
            <para>このオーバー ロード、<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />メソッドが保護されており、.NET Framework データ プロバイダーで使用するために設計されています。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-455">
              <para>This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-456">データ アダプターにデータを読み込むコマンドの動作を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-456">Gets or sets the behavior of the command used to fill the data adapter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe94-457">データ アダプターにデータを読み込むコマンドの <see cref="T:System.Data.CommandBehavior" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-457">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_FillError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-458">
            <see cref="T:System.Data.DataTable" /> を <see cref="T:System.Data.DataSet" /> に追加し、データ ソース内のスキーマと一致するようにスキーマを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-458">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="cbe94-459">スキーマを挿入する <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-459">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="cbe94-460">スキーマを挿入する方法を指定する <see cref="T:System.Data.SchemaType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-460">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-461">"Table" という名前の <see cref="T:System.Data.DataTable" /> を指定された <see cref="T:System.Data.DataSet" /> に追加し、指定された <see cref="T:System.Data.SchemaType" /> に基づいて、データ ソースにあるスキーマと一致するようにスキーマを構成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-461">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-462">
            <see cref="T:System.Data.DataTable" /> に追加された <see cref="T:System.Data.DataSet" /> オブジェクトのコレクションへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-462">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-463">このメソッドを使用して、データ ソースからスキーマ情報を取得、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-463">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="cbe94-464">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作を追加、<xref:System.Data.DataTable>先に<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-464">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-465">列を次に、追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>、し、次の構成を<xref:System.Data.DataColumn>プロパティ、データ ソースに存在する場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-465">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="cbe94-466"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-466"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="cbe94-467">設定する必要があります<xref:System.Data.DataColumn.AutoIncrementStep%2A>と<xref:System.Data.DataColumn.AutoIncrementSeed%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-467">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="cbe94-468"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 構成も、<xref:System.Data.DataTable.PrimaryKey%2A>と<xref:System.Data.DataTable.Constraints%2A>に従って、次の規則のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-468"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="cbe94-469">1 つまたは複数の主キー列がによって返される場合、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>の主キー列として使用される、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-469">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="cbe94-470">主キー列が返されない場合は、一意の列の一意の列、すべての一意の列は null 値非許容場合のみ、主キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-470">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="cbe94-471">Null を許容すると、任意の列がある場合、<xref:System.Data.UniqueConstraint>に追加されます、<xref:System.Data.ConstraintCollection>が、<xref:System.Data.DataTable.PrimaryKey%2A>プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-471">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="cbe94-472">主キー列として、主キー列が使用される主キー列と一意の列の両方が返された場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-472">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-473">主キーと一意制約が追加することに注意してください、<xref:System.Data.ConstraintCollection>前述の規則が、その他の制約に従って、型は追加されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-473">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="cbe94-474">一意クラスター化された場合、または SQL Server テーブルの複数の列にインデックスが定義されているし、クラスター化インデックスの列の名前が返されます、別の列のセットで主キー制約が定義されています。</span><span class="sxs-lookup"><span data-stu-id="cbe94-474">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="cbe94-475">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-475">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="cbe94-476">クエリ ヒントを指定する方法については、次を参照してください。[クエリ ヒント (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-476">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="cbe94-477">中に主キーの情報が使用される<xref:System.Data.Common.DbDataAdapter.Fill%2A>検索し、置換されたキー列と一致するすべての行にします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-477">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="cbe94-478">目的の動作でない場合は、使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>スキーマ情報を求められることがなく。</span><span class="sxs-lookup"><span data-stu-id="cbe94-478">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="cbe94-479">場合、<xref:System.Data.IDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-479">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-480">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-480">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="cbe94-481">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-481">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="cbe94-482">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど。) に整数値を追加してという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-482">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="cbe94-483">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-483">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-484"><xref:System.Data.IDbConnection> Select コマンドに関連付けられているオブジェクトを有効にする必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-484">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="cbe94-485">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-485">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="cbe94-486">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、それは開いたままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-486">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-487">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-487">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="cbe94-488">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-488">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="cbe94-489"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-489">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="cbe94-490">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-490">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="cbe94-491">詳細については、次を参照してください。 [SET FMTONLY (TRANSACT-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-491">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="cbe94-492">次の例は、派生クラスでは、 <xref:System.Data.SqlClient.SqlDataAdapter>、入力、<xref:System.Data.DataSet>スキーマ、および返します使用、 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-492">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="cbe94-493">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-493">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="cbe94-494">
            <see cref="T:System.Data.SchemaType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-494">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-495">指定した <see cref="T:System.Data.DataTable" /> に基いて、指定した <see cref="T:System.Data.SchemaType" /> のスキーマを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-495">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-496">データ ソースから返されたスキーマ情報が格納された <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-496">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-497"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>メソッドを使用して、データ ソースからスキーマを取得、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-497">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="cbe94-498">接続オブジェクトに関連付けられている、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>有効である必要がありますを開く必要はありませんが。</span><span class="sxs-lookup"><span data-stu-id="cbe94-498">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-499">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-499">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="cbe94-500">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-500">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-501">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作は戻り、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-501">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="cbe94-502">列を次に、追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>、し、次の構成を<xref:System.Data.DataColumn>プロパティ、データ ソースに存在する場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-502">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="cbe94-503"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-503"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="cbe94-504">設定する必要があります<xref:System.Data.DataColumn.AutoIncrementStep%2A>と<xref:System.Data.DataColumn.AutoIncrementSeed%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-504">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="cbe94-505"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 構成も、<xref:System.Data.DataTable.PrimaryKey%2A>と<xref:System.Data.DataTable.Constraints%2A>に従って、次の規則のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-505"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="cbe94-506">場合、<xref:System.Data.DataTable.PrimaryKey%2A>に対して既に定義されて、 `DataTable`、または`DataTable`データを含む、`PrimaryKey`プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-506">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="cbe94-507">1 つまたは複数の主キー列がによって返される場合、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>の主キー列として使用される、`DataTable`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-507">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="cbe94-508">主キー列が返されない場合は、一意の列の一意の列、すべての一意の列は null 値非許容場合のみ、主キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-508">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="cbe94-509">Null を許容すると、任意の列がある場合、<xref:System.Data.UniqueConstraint>に追加されます、<xref:System.Data.ConstraintCollection>が、`PrimaryKey`プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-509">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="cbe94-510">主キー列として、主キー列が使用される主キー列と一意の列の両方が返された場合、`DataTable`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-510">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="cbe94-511">主キーと一意制約が追加することに注意してください、<xref:System.Data.ConstraintCollection>前述の規則が、その他の制約に従って、型は追加されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-511">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="cbe94-512">このプロセスには、サーバーに複数のラウンドト リップが必要です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-512">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="cbe94-513">一意クラスター化された場合、または SQL Server テーブルの複数の列にインデックスが定義されているし、クラスター化インデックスの列の名前が返されます、別の列のセットで主キー制約が定義されています。</span><span class="sxs-lookup"><span data-stu-id="cbe94-513">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="cbe94-514">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-514">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="cbe94-515">クエリ ヒントを指定する方法については、次を参照してください。[クエリ ヒント (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-515">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="cbe94-516">場合、<xref:System.Data.Common.DbDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-516">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-517">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-517">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="cbe94-518">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-518">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="cbe94-519">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど。) に整数値を追加してという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-519">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="cbe94-520">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-520">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-521"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> すべての行は返されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-521"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="cbe94-522">使用して、<xref:System.Data.Common.DbDataAdapter.Fill%2A>行を追加する方法、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-522">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-523">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-523">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="cbe94-524">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-524">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="cbe94-525"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-525">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="cbe94-526">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-526">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="cbe94-527">詳細については、次を参照してください。 [SET FMTONLY (TRANSACT-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-527">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="cbe94-528">次の例は、派生クラスでは、 <xref:System.Data.SqlClient.SqlDataAdapter>、入力、<xref:System.Data.DataSet>スキーマ、および返します使用、 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-528">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="cbe94-529">スキーマを挿入する <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-529">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="cbe94-530">スキーマを挿入する方法を指定する <see cref="T:System.Data.SchemaType" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-530">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="cbe94-531">テーブル マップに使用するソース テーブルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-531">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-532">指定した <see cref="T:System.Data.DataTable" /> に <see cref="T:System.Data.DataSet" /> を追加し、指定した <see cref="T:System.Data.SchemaType" /> および <see cref="T:System.Data.DataTable" /> に基づいて、データ ソース内のスキーマと一致するようにスキーマを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-532">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-533">
            <see cref="T:System.Data.DataTable" /> に追加された <see cref="T:System.Data.DataSet" /> オブジェクトのコレクションへの参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-533">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-534">このメソッドを使用して、データ ソースからスキーマ情報を取得、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-534">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="cbe94-535">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作を追加、<xref:System.Data.DataTable>先に<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-535">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-536">列を次に、追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>、し、次の構成を<xref:System.Data.DataColumn>プロパティ、データ ソースに存在する場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-536">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="cbe94-537"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-537"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="cbe94-538">設定する必要があります<xref:System.Data.DataColumn.AutoIncrementStep%2A>と<xref:System.Data.DataColumn.AutoIncrementSeed%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-538">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="cbe94-539"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 構成も、<xref:System.Data.DataTable.PrimaryKey%2A>と<xref:System.Data.DataTable.Constraints%2A>に従って、次の規則のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-539"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="cbe94-540">1 つまたは複数の主キー列がによって返される場合、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>の主キー列として使用される、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-540">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="cbe94-541">主キー列が返されない場合は、一意の列の一意の列、すべての一意の列は null 値非許容場合のみ、主キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-541">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="cbe94-542">Null を許容すると、任意の列がある場合、<xref:System.Data.UniqueConstraint>に追加されます、<xref:System.Data.ConstraintCollection>が、<xref:System.Data.DataTable.PrimaryKey%2A>プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-542">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="cbe94-543">主キー列として、主キー列が使用される主キー列と一意の列の両方が返された場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-543">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-544">主キーと一意制約が追加することに注意してください、<xref:System.Data.ConstraintCollection>前述の規則が、その他の制約に従って、型は追加されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-544">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="cbe94-545">一意クラスター化された場合、または SQL Server テーブルの複数の列にインデックスが定義されているし、クラスター化インデックスの列の名前が返されます、別の列のセットで主キー制約が定義されています。</span><span class="sxs-lookup"><span data-stu-id="cbe94-545">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="cbe94-546">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-546">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="cbe94-547">クエリ ヒントを指定する方法については、次を参照してください。[クエリ ヒント (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-547">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="cbe94-548">中に主キーの情報が使用される<xref:System.Data.Common.DbDataAdapter.Fill%2A>検索し、置換されたキー列と一致するすべての行にします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-548">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="cbe94-549">目的の動作でない場合は、使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>スキーマ情報を求められることがなく。</span><span class="sxs-lookup"><span data-stu-id="cbe94-549">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="cbe94-550">場合、<xref:System.Data.Common.DbDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-550">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-551">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-551">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="cbe94-552">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-552">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="cbe94-553">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど。) に整数値を追加してという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-553">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="cbe94-554">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-554">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-555"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbe94-555">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="cbe94-556">このような状況では、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-556">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="cbe94-557">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-557">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="cbe94-558">場合<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-558">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="cbe94-559">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-559">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="cbe94-560">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-560">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="cbe94-561"><xref:System.Data.IDbConnection> Select コマンドに関連付けられているオブジェクトを有効にする必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-561">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="cbe94-562">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-562">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="cbe94-563">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、それは開いたままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-563">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-564">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-564">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="cbe94-565">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-565">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="cbe94-566"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-566">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="cbe94-567">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-567">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="cbe94-568">詳細については、次を参照してください。 [SET FMTONLY (TRANSACT-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-568">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="cbe94-569">次の例は、派生クラスでは、 <xref:System.Data.SqlClient.SqlDataAdapter>、入力、<xref:System.Data.DataSet>スキーマ、および返します使用、 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-569">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbe94-570">スキーマの取得元のソース テーブルが見つかりません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-570">A source table from which to get the schema could not be found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="cbe94-571">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-571">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="cbe94-572">
            <see cref="T:System.Data.SchemaType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-572">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cbe94-573">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-573">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="cbe94-574">
            <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-574">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-575">指定した <see cref="T:System.Data.DataTable" />、コマンド文字列、および <see cref="T:System.Data.SchemaType" /> 値に基づいて、指定した <see cref="T:System.Data.CommandBehavior" /> のスキーマを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-575">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-576">データ ソースから返されたスキーマ情報が格納された <see cref="T:System.Data.DataTable" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-576">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-577"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>メソッドを使用して、データ ソースからスキーマを取得、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-577">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="cbe94-578">接続オブジェクトに関連付けられている、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>有効である必要がありますを開く必要はありませんが。</span><span class="sxs-lookup"><span data-stu-id="cbe94-578">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-579">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-579">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="cbe94-580">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-580">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-581">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作を追加、<xref:System.Data.DataTable>先に<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-581">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-582">列を次に、追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>、し、次の構成を<xref:System.Data.DataColumn>プロパティ、データ ソースに存在する場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-582">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="cbe94-583"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-583"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="cbe94-584">設定する必要があります<xref:System.Data.DataColumn.AutoIncrementStep%2A>と<xref:System.Data.DataColumn.AutoIncrementSeed%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-584">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="cbe94-585"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 構成も、<xref:System.Data.DataTable.PrimaryKey%2A>と<xref:System.Data.DataTable.Constraints%2A>に従って、次の規則のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-585"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="cbe94-586">1 つまたは複数の主キー列がによって返される場合、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>の主キー列として使用される、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-586">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="cbe94-587">主キー列が返されない場合は、一意の列の一意の列、すべての一意の列は null 値非許容場合のみ、主キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-587">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="cbe94-588">Null を許容すると、任意の列がある場合、<xref:System.Data.UniqueConstraint>に追加されます、<xref:System.Data.ConstraintCollection>が、<xref:System.Data.DataTable.PrimaryKey%2A>プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-588">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="cbe94-589">主キー列として、主キー列が使用される主キー列と一意の列の両方が返された場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-589">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-590">主キーと一意制約が追加することに注意してください、<xref:System.Data.ConstraintCollection>前述の規則が、その他の制約に従って、型は追加されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-590">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="cbe94-591">一意クラスター化された場合、または SQL Server テーブルの複数の列にインデックスが定義されているし、クラスター化インデックスの列の名前が返されます、別の列のセットで主キー制約が定義されています。</span><span class="sxs-lookup"><span data-stu-id="cbe94-591">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="cbe94-592">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-592">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="cbe94-593">クエリ ヒントを指定する方法については、次を参照してください。[クエリ ヒント (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-593">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="cbe94-594">場合、<xref:System.Data.IDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-594">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-595">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-595">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="cbe94-596">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-596">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="cbe94-597">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど。) に整数値を追加してという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-597">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="cbe94-598">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-598">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-599"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> すべての行は返されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-599"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="cbe94-600">使用して、<xref:System.Data.Common.DbDataAdapter.Fill%2A>行を追加する方法、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-600">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-601">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-601">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="cbe94-602">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-602">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="cbe94-603"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-603">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="cbe94-604">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-604">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="cbe94-605">詳細については、次を参照してください。 [SET FMTONLY (TRANSACT-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-605">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-606">
            <para>この実装の<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />メソッドが保護されており、.NET Framework データ プロバイダーで使用するために設計されています。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-606">
              <para>This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="cbe94-607">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-607">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span>
          </span>
        </param>
        <param name="schemaType">
          <span data-ttu-id="cbe94-608">
            <see cref="T:System.Data.SchemaType" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-608">One of the <see cref="T:System.Data.SchemaType" /> values.</span>
          </span>
        </param>
        <param name="command">
          <span data-ttu-id="cbe94-609">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-609">The SQL SELECT statement used to retrieve rows from the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="cbe94-610">テーブル マップに使用するソース テーブルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-610">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <param name="behavior">
          <span data-ttu-id="cbe94-611">
            <see cref="T:System.Data.CommandBehavior" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-611">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-612">指定した <see cref="T:System.Data.DataTable" /> に <see cref="T:System.Data.DataSet" /> を追加し、指定した <see cref="T:System.Data.SchemaType" /> に基づいて、データ ソース内のスキーマと一致するようにスキーマを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-612">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-613">データ ソースから返されたスキーマ情報が格納された、<see cref="T:System.Data.DataTable" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-613">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-614"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>メソッドを使用して、データ ソースからスキーマを取得、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-614">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="cbe94-615">接続オブジェクトに関連付けられている、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>有効である必要がありますを開く必要はありませんが。</span><span class="sxs-lookup"><span data-stu-id="cbe94-615">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="cbe94-616">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-616">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="cbe94-617">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-617">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="cbe94-618">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作を追加、<xref:System.Data.DataTable>先に<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-618">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-619">列を次に、追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>、し、次の構成を<xref:System.Data.DataColumn>プロパティ、データ ソースに存在する場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-619">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="cbe94-620"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="cbe94-620"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="cbe94-621">設定する必要があります<xref:System.Data.DataColumn.AutoIncrementStep%2A>と<xref:System.Data.DataColumn.AutoIncrementSeed%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-621">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="cbe94-622"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 構成も、<xref:System.Data.DataTable.PrimaryKey%2A>と<xref:System.Data.DataTable.Constraints%2A>に従って、次の規則のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-622"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="cbe94-623">1 つまたは複数の主キー列がによって返される場合、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>の主キー列として使用される、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-623">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="cbe94-624">主キー列が返されない場合は、一意の列の一意の列、すべての一意の列は null 値非許容場合のみ、主キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-624">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="cbe94-625">Null を許容すると、任意の列がある場合、<xref:System.Data.UniqueConstraint>に追加されます、<xref:System.Data.ConstraintCollection>が、<xref:System.Data.DataTable.PrimaryKey%2A>プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-625">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="cbe94-626">主キー列として、主キー列が使用される主キー列と一意の列の両方が返された場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-626">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-627">主キーと一意制約が追加することに注意してください、<xref:System.Data.ConstraintCollection>前述の規則が、その他の制約に従って、型は追加されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-627">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="cbe94-628">一意クラスター化された場合、または SQL Server テーブルの複数の列にインデックスが定義されているし、クラスター化インデックスの列の名前が返されます、別の列のセットで主キー制約が定義されています。</span><span class="sxs-lookup"><span data-stu-id="cbe94-628">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="cbe94-629">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-629">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="cbe94-630">クエリ ヒントを指定する方法については、次を参照してください。[クエリ ヒント (TRANSACT-SQL)](http://msdn.microsoft.com/library/ms181714.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-630">For more information about specifying query hints, see [Query Hint (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="cbe94-631">場合、<xref:System.Data.IDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-631">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="cbe94-632">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="cbe94-632">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="cbe94-633">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-633">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="cbe94-634">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど。) に整数値を追加してという名前です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-634">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="cbe94-635">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-635">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="cbe94-636"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbe94-636">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="cbe94-637">このような状況では、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-637">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="cbe94-638">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-638">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="cbe94-639">場合<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-639">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="cbe94-640">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-640">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="cbe94-641">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-641">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="cbe94-642"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> すべての行は返されません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-642"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="cbe94-643">使用して、<xref:System.Data.Common.DbDataAdapter.Fill%2A>行を追加する方法、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-643">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-644">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-644">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="cbe94-645">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-645">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="cbe94-646"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-646">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="cbe94-647">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-647">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="cbe94-648">詳細については、次を参照してください。 [SET FMTONLY (TRANSACT-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-648">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-649">
            <para>この実装の<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />メソッドが保護されており、.NET Framework データ プロバイダーで使用するために設計されています。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-649">
              <para>This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="parameterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="cbe94-650">パラメーターを取得するコマンドのインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-650">The index of the command to retrieve the parameter from.</span>
          </span>
        </param>
        <param name="parameterIndex">
          <span data-ttu-id="cbe94-651">コマンド内のパラメーターのインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-651">The index of the parameter within the command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-652">現在のバッチのコマンドの 1 つから <see cref="T:System.Data.IDataParameter" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-652">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-653">指定された <see cref="T:System.Data.IDataParameter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-653">The <see cref="T:System.Data.IDataParameter" /> specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-654"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-654">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="cbe94-655">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-655">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cbe94-656">アダプターでバッチがサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-656">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-657">
            <para>このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスが、バッチを実行できるようにするには、このメソッドをオーバーライドするバッチをサポートしています。実装を使用して、 <paramref name="commandIdentifier" /> 、要求されたコマンドを見つけるに提供し、使用して、<paramref name="parameterIndex" />要求されたパラメーターを提供します。たとえば、 <paramref name="commandIdentifier" /> 0 と<paramref name="parameterIndex" />0 のバッチの最初のコマンドから、最初のパラメーターを返します。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-657">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch. An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter. For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int *  *  -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" />
        <Parameter Name="error" Type="System.Exception" RefType="out" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier">
          <span data-ttu-id="cbe94-658">バッチ内の個々のコマンドの、0 から始まる列の序数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-658">The zero-based column ordinal of the individual command within the batch.</span>
          </span>
        </param>
        <param name="recordsAffected">
          <span data-ttu-id="cbe94-659">バッチ内に指定されたコマンドの影響を受ける、データ ストア内の行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-659">The number of rows affected in the data store by the specified command within the batch.</span>
          </span>
        </param>
        <param name="error">
          <span data-ttu-id="cbe94-660">指定されたコマンドの実行中にスローされた <see cref="T:System.Exception" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-660">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span>
          </span>
          <span data-ttu-id="cbe94-661">例外がスローされなかった場合は、<see langword="null" /> (Visual Basic では <see langword="Nothing" />) を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-661">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-662">バッチ更新内の、個々の更新の試行に関する情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-662">Returns information about an individual update attempt within a larger batched update.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-663">バッチ更新内の、個々の更新の試行に関する情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-663">Information about an individual update attempt within a larger batched update.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-664">バッチ更新ロジックをサポートするデータ プロバイダーで、一連の仮想メソッドをオーバーライドする必要があります、<xref:System.Data.Common.DbDataAdapter>クラス。</span><span class="sxs-lookup"><span data-stu-id="cbe94-664">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="cbe94-665">`GetBatchedRecordsAffected` これらの仮想メソッドのいずれかを表します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-665">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="cbe94-666">`DbDataAdapter`クラスが依存`GetBatchedRecordsAffected`をバッチ内で個々 の更新の試行の成否を判断し、対応する各マークので<xref:System.Data.DataRow>それに応じて。</span><span class="sxs-lookup"><span data-stu-id="cbe94-666">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-667">SQL SELECT ステートメントの実行時にユーザーが設定したパラメーターを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-667">Gets the parameters set by the user when executing an SQL SELECT statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-668">ユーザーが設定したパラメーターが格納された <see cref="T:System.Data.IDataParameter" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-668">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-669">
            <see cref="T:System.Data.Common.DbDataAdapter" /> のバッチ処理を初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-669">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-670"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-670">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="cbe94-671">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-671">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cbe94-672">アダプターでバッチがサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-672">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-673">
            <para>このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスがこのメソッドをオーバーライドするバッチをサポートしています。このメソッドでは、クラスに、バッチ処理をサポートするために必要なリソースを初期化する機会が与えられます。など、クラスは、バッチ内のコマンドのセットを保持するデータ構造を割り当てることがあります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-673">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method. This method gives the class the opportunity to initialize any resources necessary to support batching. For example, a class may allocate a data structure to hold the set of commands in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-674">データ ソースに新しいレコードを挿入するコマンドを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-674">Gets or sets a command used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe94-675">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-675">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-676">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、プライマリ キーの情報が存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.InsertCommand%2A>が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-676">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbe94-677">次の例は、派生クラスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-677">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="cbe94-678">イベント データを格納している <see cref="T:System.Data.Common.RowUpdatedEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-678">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-679">.NET Framework データ プロバイダーの <see langword="RowUpdated" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-679">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-680">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-680">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="cbe94-681">概要については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-681">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-682">
            <para>オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />メソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-682">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="cbe94-683">イベント データを格納している <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-683">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-684">.NET Framework データ プロバイダーの <see langword="RowUpdating" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-684">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-685">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-685">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="cbe94-686">概要については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-686">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-687">
            <para>オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />、派生クラスでは、ベースのクラスを呼び出すことを確認する<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />メソッド。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-687">
              <para>When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-688">データ ソース内のレコードを選択するコマンドを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-688">Gets or sets a command used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe94-689">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-689">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cbe94-690">次の例は、派生クラスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-690">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-691">データ セットからレコードを削除する SQL ステートメントを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-691">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe94-692">
            <see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-692">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-693">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-693">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cbe94-694">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-694">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="cbe94-695">詳細については、「<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-695">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-696">データ ソースに新しいレコードを挿入する SQL ステートメントを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-696">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe94-697">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-697">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-698">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-698">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cbe94-699">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-699">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="cbe94-700">詳細については、「<xref:System.Data.IDbDataAdapter.InsertCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-700">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-701">データ ソース内のレコードを選択する SQL ステートメントを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-701">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe94-702">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-702">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-703">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-703">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cbe94-704">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-704">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="cbe94-705">詳細については、「<xref:System.Data.IDbDataAdapter.SelectCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-705">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-706">データ ソース内のレコードを更新する SQL ステートメントを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-706">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe94-707">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-707">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-708">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-708">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cbe94-709">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-709">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="cbe94-710">詳細については、「<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-710">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("use 'protected DbDataAdapter(DbDataAdapter)' ctor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-711">現在のインスタンスのコピーである新しいオブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-711">Creates a new object that is a copy of the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-712">このインスタンスのコピーである新しいオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-712">A new object that is a copy of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-713">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-713">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="cbe94-714">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-714">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="cbe94-715">詳細については、「<xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cbe94-715">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-716">
            <see cref="T:System.Data.Common.DbDataAdapter" /> のバッチ処理を終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-716">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-717"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-717">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="cbe94-718">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-718">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="cbe94-719">アダプターでバッチがサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-719">The adapter does not support batches.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="cbe94-720">
            <para>このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスがこのメソッドをオーバーライドするバッチをサポートしています。このメソッドでは、クラスに、バッチ処理をサポートするために割り当てられているリソースを破棄する機会が与えられます。たとえば、クラスのバッチ内のコマンドを保持するデータ構造体割り当てを解除可能性があります。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-720">
              <para>This method is protected and is designed for use by a .NET Framework data provider.  If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method. This method gives the class the opportunity to dispose of any resources allocated to support batching. For example, the class may deallocate the data structure that holds the commands in the batch.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-721">
            <see cref="T:System.Data.DataSet" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-721">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="cbe94-722">データ ソースの更新に使用する <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-722">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-723">指定した <see cref="T:System.Data.DataSet" /> 内の配列での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-723">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-724">
            <see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-724">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-725">アプリケーションを呼び出すと、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッド、<xref:System.Data.Common.DbDataAdapter>を調べ、<xref:System.Data.DataRow.RowState%2A>プロパティ、で構成されているインデックスの順序に基づいて、各行の繰り返し必要なINSERT、UPDATE、またはDELETEステートメントを実行し、<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="cbe94-725">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-726">たとえば、<xref:System.Data.Common.DbDataAdapter.Update%2A>で INSERT ステートメントとし、もう 1 つの DELETE ステートメント内の行の順序付けに期限の後に、DELETE ステートメントを実行する場合があります、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-726">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-727">これらのステートメントがバッチ処理として実行しないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-727">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="cbe94-728">アプリケーションが呼び出すことができます、<xref:System.Data.DataSet.GetChanges%2A>ときの一連のステートメントの種類 (たとえば、更新する前に挿入) を制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-728">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="cbe94-729">詳細については、次を参照してください。 [Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-729">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="cbe94-730">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-730">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="cbe94-731">ただし、作成することができます、<xref:System.Data.SqlClient.SqlCommandBuilder>または<xref:System.Data.OleDb.OleDbCommandBuilder>設定した場合、SQL ステートメントの単一テーブルの更新プログラムを自動的に生成するオブジェクト、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-731">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="cbe94-732">次に、設定しない追加の SQL ステートメントがによって生成される、 **CommandBuilder**します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-732">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="cbe94-733">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-733">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-734">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-734">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="cbe94-735"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、更新プログラムを実行する前に、最初のマッピングを示す表から行を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-735">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="cbe94-736"><xref:System.Data.Common.DbDataAdapter.Update%2A>の値を使用して行を更新し、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-736">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="cbe94-737">返されるその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-737">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="cbe94-738">すべてのデータが読み込まれた後、 <xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントを発生すると、ユーザーは、検査、調整できるようにする<xref:System.Data.DataSet>行と、コマンドによって返されるパラメーターを出力します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-738">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="cbe94-739">行が正常に更新した後、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-739">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="cbe94-740">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>実行の順序は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-740">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="cbe94-741">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-741">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="cbe94-742"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-742">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="cbe94-743">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-743">The command executes.</span></span>  
  
4.  <span data-ttu-id="cbe94-744">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果が配置されます、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-744">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="cbe94-745">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-745">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="cbe94-746"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-746">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="cbe94-747"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="cbe94-747"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="cbe94-748">各コマンドに関連付けられている、<xref:System.Data.Common.DbDataAdapter>関連付けられているパラメーターのコレクションを持ちます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-748">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="cbe94-749">パラメーターを使用して、現在行にマップされます、`SourceColumn`と`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラス。</span><span class="sxs-lookup"><span data-stu-id="cbe94-749">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="cbe94-750">`SourceColumn` 指す、<xref:System.Data.DataTable>列を<xref:System.Data.Common.DbDataAdapter>参照を現在の行のパラメーターの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-750">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="cbe94-751">`SourceColumn` すべてのテーブル マップを適用する前に、マップされていない列の名前を参照します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-751">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="cbe94-752">場合`SourceColumn`参照を存在しない列に、実行されるアクションは、次のいずれかに依存<xref:System.Data.MissingMappingAction>値。</span><span class="sxs-lookup"><span data-stu-id="cbe94-752">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="cbe94-753">列挙値</span><span class="sxs-lookup"><span data-stu-id="cbe94-753">Enumeration value</span></span>|<span data-ttu-id="cbe94-754">実行されるアクション</span><span class="sxs-lookup"><span data-stu-id="cbe94-754">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="cbe94-755">ソース列名とテーブル名を使用して、<xref:System.Data.DataSet>マッピングが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-755">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="cbe94-756">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-756">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="cbe94-757">マッピングが明示的に設定すると、入力パラメーターのマッピングがない、通常、エラーの結果です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-757">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="cbe94-758">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-758">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="cbe94-759">`SourceColumn`出力の値をマップするプロパティを使用しても、または入力/出力パラメーターを`DataSet`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-759">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="cbe94-760">存在しない列を参照する場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-760">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="cbe94-761">`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラスは、列の値の元の現在、または提案済みバージョンを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-761">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="cbe94-762">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含めるによく使用します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-762">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-763">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</span><span class="sxs-lookup"><span data-stu-id="cbe94-763">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="cbe94-764">更新操作を続行すると、エラーが発生した場合に例外を生成せず、設定、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>プロパティを`true`呼び出す前に<xref:System.Data.Common.DbDataAdapter.Update%2A>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-764">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="cbe94-765">内の行ごとにエラーに応答することがありますも、 `RowUpdated` DataAdapter のイベント。</span><span class="sxs-lookup"><span data-stu-id="cbe94-765">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="cbe94-766">内で例外を生成せず、更新操作を続行する、`RowUpdated`イベント、設定、<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>のプロパティ、<xref:System.Data.Common.RowUpdatedEventArgs>に<xref:System.Data.UpdateStatus.Continue>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-766">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbe94-767">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、データ ソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-767">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbe94-768">
            <see cref="T:System.Data.DataSet" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-768">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbe94-769">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-769">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="cbe94-770">更新する <see cref="T:System.Data.DataRow" /> が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-770">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="cbe94-771">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-771">-or-</span>
          </span>
          <span data-ttu-id="cbe94-772">更新する <see cref="T:System.Data.DataTable" /> が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-772">No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="cbe94-773">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-773">-or-</span>
          </span>
          <span data-ttu-id="cbe94-774">ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-774">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="cbe94-775">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-775">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="cbe94-776">データ ソースの更新に使用した <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-776">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-777">指定した <see cref="T:System.Data.DataSet" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-777">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-778">
            <see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-778">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-779">アプリケーションを呼び出すと、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッド、<xref:System.Data.Common.DbDataAdapter>を調べ、<xref:System.Data.DataRow.RowState%2A>プロパティ、で構成されているインデックスの順序に基づいて、各行の繰り返し必要なINSERT、UPDATE、またはDELETEステートメントを実行し、<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="cbe94-779">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-780">たとえば、<xref:System.Data.Common.DbDataAdapter.Update%2A>で INSERT ステートメントとし、もう 1 つの DELETE ステートメント内の行の順序付けに期限の後に、DELETE ステートメントを実行する場合があります、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-780">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-781">これらのステートメントがバッチ処理として実行しないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-781">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="cbe94-782">アプリケーションが呼び出すことができます、<xref:System.Data.DataSet.GetChanges%2A>ときの一連のステートメントの種類 (たとえば、更新する前に挿入) を制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-782">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="cbe94-783">詳細については、次を参照してください。 [Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-783">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="cbe94-784">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-784">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="cbe94-785">ただし、作成することができます、<xref:System.Data.SqlClient.SqlCommandBuilder>または<xref:System.Data.OleDb.OleDbCommandBuilder>設定した場合、SQL ステートメントの単一テーブルの更新プログラムを自動的に生成するオブジェクト、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-785">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="cbe94-786">次に、設定しない追加の SQL ステートメントがによって生成される、 **CommandBuilder**します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-786">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="cbe94-787">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-787">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-788">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-788">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="cbe94-789"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、更新プログラムを実行する前に、最初のマッピングを示す表から行を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-789">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="cbe94-790"><xref:System.Data.Common.DbDataAdapter.Update%2A>の値を使用して行を更新し、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-790">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="cbe94-791">返されるその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-791">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="cbe94-792">すべてのデータが読み込まれた後、 <xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントを発生すると、ユーザーは、検査、調整できるようにする<xref:System.Data.DataSet>行と、コマンドによって返されるパラメーターを出力します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-792">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="cbe94-793">行が正常に更新した後、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-793">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="cbe94-794">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>実行の順序は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-794">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="cbe94-795">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-795">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="cbe94-796"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-796">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="cbe94-797">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-797">The command executes.</span></span>  
  
4.  <span data-ttu-id="cbe94-798">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納し、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-798">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="cbe94-799">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-799">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="cbe94-800"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-800">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="cbe94-801"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="cbe94-801"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="cbe94-802">各コマンドに関連付けられている、<xref:System.Data.Common.DbDataAdapter>関連付けられているパラメーターのコレクションを持ちます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-802">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="cbe94-803">パラメーターを使用して、現在行にマップされます、`SourceColumn`と`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラス。</span><span class="sxs-lookup"><span data-stu-id="cbe94-803">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="cbe94-804">`SourceColumn` 指す、<xref:System.Data.DataTable>列を<xref:System.Data.Common.DbDataAdapter>参照を現在の行のパラメーターの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-804">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="cbe94-805">`SourceColumn` すべてのテーブル マップを適用する前に、マップされていない列の名前を参照します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-805">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="cbe94-806">場合`SourceColumn`参照を存在しない列に、実行されるアクションは、次のいずれかに依存<xref:System.Data.MissingMappingAction>値。</span><span class="sxs-lookup"><span data-stu-id="cbe94-806">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="cbe94-807">列挙値</span><span class="sxs-lookup"><span data-stu-id="cbe94-807">Enumeration value</span></span>|<span data-ttu-id="cbe94-808">実行されるアクション</span><span class="sxs-lookup"><span data-stu-id="cbe94-808">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="cbe94-809">ソース列名とテーブル名を使用して、<xref:System.Data.DataSet>マッピングが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-809">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="cbe94-810">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-810">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="cbe94-811">マッピングが明示的に設定すると、入力パラメーターのマッピングがない、通常、エラーの結果です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-811">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="cbe94-812">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-812">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="cbe94-813">`SourceColumn`出力の値をマップするプロパティを使用しても、または入力/出力パラメーターを`DataSet`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-813">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="cbe94-814">存在しない列を参照する場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-814">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="cbe94-815">`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラスは、列の値の元の現在、または提案済みバージョンを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-815">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="cbe94-816">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含めるによく使用します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-816">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-817">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</span><span class="sxs-lookup"><span data-stu-id="cbe94-817">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="cbe94-818">更新操作を続行すると、エラーが発生した場合に例外を生成せず、設定、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>プロパティを`true`呼び出す前に<xref:System.Data.Common.DbDataAdapter.Update%2A>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-818">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="cbe94-819">内の行ごとにエラーに応答することがありますも、 `RowUpdated` DataAdapter のイベント。</span><span class="sxs-lookup"><span data-stu-id="cbe94-819">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="cbe94-820">内で例外を生成せず、更新操作を続行する、`RowUpdated`イベント、設定、<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>のプロパティ、<xref:System.Data.Common.RowUpdatedEventArgs>に<xref:System.Data.UpdateStatus.Continue>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-820">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbe94-821">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、データ ソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-821">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbe94-822">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-822">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="cbe94-823">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-823">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable">
          <span data-ttu-id="cbe94-824">データ ソースの更新に使用した <see cref="T:System.Data.DataTable" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-824">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-825">指定した <see cref="T:System.Data.DataTable" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-825">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-826">
            <see cref="T:System.Data.DataTable" /> 内で正常に更新された行の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-826">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-827">アプリケーションを呼び出すと、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッド、<xref:System.Data.Common.DbDataAdapter>を調べ、<xref:System.Data.DataRow.RowState%2A>プロパティ、で構成されているインデックスの順序に基づいて、各行の繰り返し必要なINSERT、UPDATE、またはDELETEステートメントを実行し、<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="cbe94-827">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-828">たとえば、<xref:System.Data.Common.DbDataAdapter.Update%2A>で INSERT ステートメントとし、もう 1 つの DELETE ステートメント内の行の順序付けに期限の後に、DELETE ステートメントを実行する場合があります、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-828">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-829">これらのステートメントがバッチ処理として実行しないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-829">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="cbe94-830">アプリケーションが呼び出すことができます、<xref:System.Data.DataSet.GetChanges%2A>ときの一連のステートメントの種類 (たとえば、更新する前に挿入) を制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-830">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="cbe94-831">詳細については、次を参照してください。 [Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-831">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="cbe94-832">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-832">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="cbe94-833">ただし、作成することができます、<xref:System.Data.SqlClient.SqlCommandBuilder>または<xref:System.Data.OleDb.OleDbCommandBuilder>設定した場合、SQL ステートメントの単一テーブルの更新プログラムを自動的に生成するオブジェクト、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-833">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="cbe94-834">次に、設定しない追加の SQL ステートメントがによって生成される、 **CommandBuilder**します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-834">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="cbe94-835">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-835">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-836">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-836">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="cbe94-837"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、更新プログラムを実行する前に、最初のマッピングを示す表から行を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-837">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="cbe94-838"><xref:System.Data.Common.DbDataAdapter.Update%2A>の値を使用して行を更新し、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-838">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="cbe94-839">返されるその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-839">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="cbe94-840">すべてのデータが読み込まれた後、 <xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントを発生すると、ユーザーは、検査、調整できるようにする<xref:System.Data.DataSet>行と、コマンドによって返されるパラメーターを出力します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-840">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="cbe94-841">行が正常に更新した後、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-841">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="cbe94-842">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>実行の順序は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-842">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="cbe94-843">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-843">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="cbe94-844"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-844">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="cbe94-845">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-845">The command executes.</span></span>  
  
4.  <span data-ttu-id="cbe94-846">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納し、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-846">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="cbe94-847">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-847">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="cbe94-848"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-848">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="cbe94-849"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="cbe94-849"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="cbe94-850">各コマンドに関連付けられている、<xref:System.Data.Common.DbDataAdapter>関連付けられているパラメーターのコレクションを持ちます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-850">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="cbe94-851">パラメーターを使用して、現在行にマップされます、`SourceColumn`と`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラス。</span><span class="sxs-lookup"><span data-stu-id="cbe94-851">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="cbe94-852">`SourceColumn` 指す、<xref:System.Data.DataTable>列を<xref:System.Data.Common.DbDataAdapter>参照を現在の行のパラメーターの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-852">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="cbe94-853">`SourceColumn` すべてのテーブル マップを適用する前に、マップされていない列の名前を参照します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-853">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="cbe94-854">場合`SourceColumn`参照を存在しない列に、実行されるアクションは、次のいずれかに依存<xref:System.Data.MissingMappingAction>値。</span><span class="sxs-lookup"><span data-stu-id="cbe94-854">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="cbe94-855">列挙値</span><span class="sxs-lookup"><span data-stu-id="cbe94-855">Enumeration value</span></span>|<span data-ttu-id="cbe94-856">実行されるアクション</span><span class="sxs-lookup"><span data-stu-id="cbe94-856">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="cbe94-857">ソース列名とテーブル名を使用して、<xref:System.Data.DataSet>マッピングが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-857">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="cbe94-858">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-858">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="cbe94-859">マッピングが明示的に設定すると、入力パラメーターのマッピングがない、通常、エラーの結果です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-859">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="cbe94-860">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-860">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="cbe94-861">`SourceColumn`出力の値をマップするプロパティを使用しても、または入力/出力パラメーターを`DataSet`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-861">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="cbe94-862">存在しない列を参照する場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-862">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="cbe94-863">`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラスは、列の値の元の現在、または提案済みバージョンを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-863">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="cbe94-864">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含めるによく使用します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-864">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-865">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</span><span class="sxs-lookup"><span data-stu-id="cbe94-865">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="cbe94-866">更新操作を続行すると、エラーが発生した場合に例外を生成せず、設定、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>プロパティを`true`呼び出す前に<xref:System.Data.Common.DbDataAdapter.Update%2A>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-866">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="cbe94-867">内の行ごとにエラーに応答することがありますも、 `RowUpdated` DataAdapter のイベント。</span><span class="sxs-lookup"><span data-stu-id="cbe94-867">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="cbe94-868">内で例外を生成せず、更新操作を続行する、`RowUpdated`イベント、設定、<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>のプロパティ、<xref:System.Data.Common.RowUpdatedEventArgs>に<xref:System.Data.UpdateStatus.Continue>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-868">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbe94-869">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、データ ソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-869">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbe94-870">
            <see cref="T:System.Data.DataSet" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-870">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbe94-871">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-871">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="cbe94-872">更新する <see cref="T:System.Data.DataRow" /> が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-872">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="cbe94-873">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-873">-or-</span>
          </span>
          <span data-ttu-id="cbe94-874">更新する <see cref="T:System.Data.DataTable" /> が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-874">No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="cbe94-875">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-875">-or-</span>
          </span>
          <span data-ttu-id="cbe94-876">ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-876">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="cbe94-877">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-877">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows">
          <span data-ttu-id="cbe94-878">データ ソースの更新に使用する <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-878">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span>
          </span>
        </param>
        <param name="tableMapping">
          <span data-ttu-id="cbe94-879">使用する <see cref="P:System.Data.IDataAdapter.TableMappings" /> コレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-879">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-880">指定した <see cref="T:System.Data.DataSet" /> オブジェクトの配列内の挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-880">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-881">
            <see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-881">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-882">アプリケーションを呼び出すと、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッド、<xref:System.Data.Common.DbDataAdapter>を調べ、<xref:System.Data.DataRow.RowState%2A>プロパティ、で構成されているインデックスの順序に基づいて、各行の繰り返し必要なINSERT、UPDATE、またはDELETEステートメントを実行し、<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="cbe94-882">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-883">たとえば、<xref:System.Data.Common.DbDataAdapter.Update%2A>で INSERT ステートメントとし、もう 1 つの DELETE ステートメント内の行の順序付けに期限の後に、DELETE ステートメントを実行する場合があります、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-883">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-884">これらのステートメントがバッチ処理として実行しないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-884">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="cbe94-885">アプリケーションが呼び出すことができます、<xref:System.Data.DataSet.GetChanges%2A>ときの一連のステートメントの種類 (たとえば、更新する前に挿入) を制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-885">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="cbe94-886">詳細については、次を参照してください。 [Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-886">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="cbe94-887">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-887">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="cbe94-888">ただし、作成することができます、<xref:System.Data.SqlClient.SqlCommandBuilder>または<xref:System.Data.OleDb.OleDbCommandBuilder>設定した場合、SQL ステートメントの単一テーブルの更新プログラムを自動的に生成するオブジェクト、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-888">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="cbe94-889">次に、設定しない追加の SQL ステートメントがによって生成される、 **CommandBuilder**します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-889">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="cbe94-890">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-890">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-891">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-891">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="cbe94-892"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、更新プログラムを実行する前に、最初のマッピングを示す表から行を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-892">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="cbe94-893"><xref:System.Data.Common.DbDataAdapter.Update%2A>の値を使用して行を更新し、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-893">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="cbe94-894">返されるその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-894">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="cbe94-895">すべてのデータが読み込まれた後、 <xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントを発生すると、ユーザーは、検査、調整できるようにする<xref:System.Data.DataSet>行と、コマンドによって返されるパラメーターを出力します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-895">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="cbe94-896">行が正常に更新した後、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-896">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="cbe94-897">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>実行の順序は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-897">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="cbe94-898">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-898">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="cbe94-899"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-899">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="cbe94-900">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-900">The command executes.</span></span>  
  
4.  <span data-ttu-id="cbe94-901">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納し、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-901">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="cbe94-902">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-902">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="cbe94-903"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-903">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="cbe94-904"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="cbe94-904"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="cbe94-905">各コマンドに関連付けられている、<xref:System.Data.Common.DbDataAdapter>関連付けられているパラメーターのコレクションを持ちます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-905">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="cbe94-906">パラメーターを使用して、現在行にマップされます、`SourceColumn`と`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラス。</span><span class="sxs-lookup"><span data-stu-id="cbe94-906">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="cbe94-907">`SourceColumn` 指す、<xref:System.Data.DataTable>列を<xref:System.Data.Common.DbDataAdapter>参照を現在の行のパラメーターの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-907">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="cbe94-908">`SourceColumn` すべてのテーブル マップを適用する前に、マップされていない列の名前を参照します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-908">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="cbe94-909">場合`SourceColumn`参照を存在しない列に、実行されるアクションは、次のいずれかに依存<xref:System.Data.MissingMappingAction>値。</span><span class="sxs-lookup"><span data-stu-id="cbe94-909">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="cbe94-910">列挙値</span><span class="sxs-lookup"><span data-stu-id="cbe94-910">Enumeration value</span></span>|<span data-ttu-id="cbe94-911">実行されるアクション</span><span class="sxs-lookup"><span data-stu-id="cbe94-911">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="cbe94-912">ソース列名とテーブル名を使用して、<xref:System.Data.DataSet>マッピングが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-912">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="cbe94-913">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-913">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="cbe94-914">マッピングが明示的に設定すると、入力パラメーターのマッピングがない、通常、エラーの結果です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-914">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="cbe94-915">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-915">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="cbe94-916">`SourceColumn`出力の値をマップするプロパティを使用しても、または入力/出力パラメーターを`DataSet`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-916">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="cbe94-917">存在しない列を参照する場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-917">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="cbe94-918">`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラスは、列の値の元の現在、または提案済みバージョンを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-918">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="cbe94-919">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含めるによく使用します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-919">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-920">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</span><span class="sxs-lookup"><span data-stu-id="cbe94-920">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="cbe94-921">更新操作を続行すると、エラーが発生した場合に例外を生成せず、設定、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>プロパティを`true`呼び出す前に<xref:System.Data.Common.DbDataAdapter.Update%2A>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-921">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="cbe94-922">内の行ごとにエラーに応答することがありますも、 `RowUpdated` DataAdapter のイベント。</span><span class="sxs-lookup"><span data-stu-id="cbe94-922">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="cbe94-923">内で例外を生成せず、更新操作を続行する、`RowUpdated`イベント、設定、<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>のプロパティ、<xref:System.Data.Common.RowUpdatedEventArgs>に<xref:System.Data.UpdateStatus.Continue>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-923">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbe94-924">
            <see cref="T:System.Data.DataSet" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-924">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbe94-925">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-925">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.SystemException">
          <span data-ttu-id="cbe94-926">更新する <see cref="T:System.Data.DataRow" /> が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-926">No <see cref="T:System.Data.DataRow" /> exists to update.</span>
          </span>
          <span data-ttu-id="cbe94-927">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-927">-or-</span>
          </span>
          <span data-ttu-id="cbe94-928">更新する <see cref="T:System.Data.DataTable" /> が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-928">No <see cref="T:System.Data.DataTable" /> exists to update.</span>
          </span>
          <span data-ttu-id="cbe94-929">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-929">-or-</span>
          </span>
          <span data-ttu-id="cbe94-930">ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-930">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="cbe94-931">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-931">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet">
          <span data-ttu-id="cbe94-932">データ ソースの更新に使用する <see cref="T:System.Data.DataSet" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-932">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span>
          </span>
        </param>
        <param name="srcTable">
          <span data-ttu-id="cbe94-933">テーブル マップに使用するソース テーブルの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-933">The name of the source table to use for table mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbe94-934">
            <see cref="T:System.Data.DataSet" /> 内の指定した <see cref="T:System.Data.DataTable" /> 名を持つ挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-934">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbe94-935">
            <see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-935">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-936">アプリケーションを呼び出すと、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッド、<xref:System.Data.Common.DbDataAdapter>を調べ、<xref:System.Data.DataRow.RowState%2A>プロパティ、で構成されているインデックスの順序に基づいて、各行の繰り返し必要なINSERT、UPDATE、またはDELETEステートメントを実行し、<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="cbe94-936">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-937">たとえば、<xref:System.Data.Common.DbDataAdapter.Update%2A>で INSERT ステートメントとし、もう 1 つの DELETE ステートメント内の行の順序付けに期限の後に、DELETE ステートメントを実行する場合があります、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-937">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="cbe94-938">これらのステートメントがバッチ処理として実行しないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-938">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="cbe94-939">アプリケーションが呼び出すことができます、<xref:System.Data.DataSet.GetChanges%2A>ステートメントの種類のシーケンスを制御する必要がありますの状況でメソッド (たとえば、更新する前に挿入)。</span><span class="sxs-lookup"><span data-stu-id="cbe94-939">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="cbe94-940">詳細については、次を参照してください。 [Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-940">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="cbe94-941">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-941">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="cbe94-942">ただし、作成することができます、<xref:System.Data.SqlClient.SqlCommandBuilder>または<xref:System.Data.OleDb.OleDbCommandBuilder>設定した場合、SQL ステートメントの単一テーブルの更新プログラムを自動的に生成するオブジェクト、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-942">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="cbe94-943">次に、設定しない追加の SQL ステートメントがによって生成される、 **CommandBuilder**します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-943">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="cbe94-944">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-944">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-945">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-945">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="cbe94-946"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cbe94-946">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="cbe94-947">内で同じ名前が異なる場合は、複数のテーブルが存在する場合、 `DataSet`、<xref:System.Data.Common.DbDataAdapter.Update%2A>対応するテーブルを検索する大文字の比較を実行し、完全一致が存在しない場合、例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-947">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="cbe94-948">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-948">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="cbe94-949">場合<xref:System.Data.Common.DbDataAdapter.Update%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-949">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="cbe94-950">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="cbe94-950">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="cbe94-951">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-951">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="cbe94-952"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、更新プログラムを実行する前に、最初のマッピングを示す表から行を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-952">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="cbe94-953"><xref:System.Data.Common.DbDataAdapter.Update%2A>の値を使用して行を更新し、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="cbe94-953">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="cbe94-954">返されるその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-954">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="cbe94-955">すべてのデータが読み込まれた後、 <xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントを発生すると、ユーザーは、検査、調整できるようにする<xref:System.Data.DataSet>行と、コマンドによって返されるパラメーターを出力します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-955">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="cbe94-956">行が正常に更新した後、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-956">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="cbe94-957">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>実行の順序は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="cbe94-957">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="cbe94-958">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-958">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="cbe94-959"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-959">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="cbe94-960">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-960">The command executes.</span></span>  
  
4.  <span data-ttu-id="cbe94-961">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納し、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-961">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="cbe94-962">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-962">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="cbe94-963"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-963">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="cbe94-964"><xref:System.Data.DataRow.AcceptChanges%2A> が呼ばれたとき。</span><span class="sxs-lookup"><span data-stu-id="cbe94-964"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="cbe94-965">各コマンドに関連付けられている、<xref:System.Data.Common.DbDataAdapter>関連付けられているパラメーターのコレクションを持ちます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-965">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="cbe94-966">パラメーターを使用して、現在行にマップされます、`SourceColumn`と`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラス。</span><span class="sxs-lookup"><span data-stu-id="cbe94-966">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="cbe94-967">`SourceColumn` 指す、<xref:System.Data.DataTable>列を<xref:System.Data.Common.DbDataAdapter>参照を現在の行のパラメーターの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-967">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="cbe94-968">`SourceColumn` すべてのテーブル マップを適用する前に、マップされていない列の名前を参照します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-968">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="cbe94-969">場合`SourceColumn`参照を存在しない列に、実行されるアクションは、次のいずれかに依存<xref:System.Data.MissingMappingAction>値。</span><span class="sxs-lookup"><span data-stu-id="cbe94-969">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="cbe94-970">列挙値</span><span class="sxs-lookup"><span data-stu-id="cbe94-970">Enumeration value</span></span>|<span data-ttu-id="cbe94-971">実行されるアクション</span><span class="sxs-lookup"><span data-stu-id="cbe94-971">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="cbe94-972">ソース列名とテーブル名を使用して、<xref:System.Data.DataSet>マッピングが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="cbe94-972">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="cbe94-973">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-973">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="cbe94-974">マッピングが明示的に設定すると、入力パラメーターのマッピングがない、通常、エラーの結果です。</span><span class="sxs-lookup"><span data-stu-id="cbe94-974">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="cbe94-975">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-975">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="cbe94-976">`SourceColumn`出力の値をマップするプロパティを使用しても、または入力/出力パラメーターを`DataSet`します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-976">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="cbe94-977">存在しない列を参照する場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-977">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="cbe94-978">`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラスは、列の値の元の現在、または提案済みバージョンを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-978">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="cbe94-979">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含めるによく使用します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-979">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cbe94-980">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</span><span class="sxs-lookup"><span data-stu-id="cbe94-980">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="cbe94-981">更新操作を続行すると、エラーが発生した場合に例外を生成せず、設定、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>プロパティを`true`呼び出す前に<xref:System.Data.Common.DbDataAdapter.Update%2A>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-981">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="cbe94-982">内の行ごとにエラーに応答することがありますも、 `RowUpdated` DataAdapter のイベント。</span><span class="sxs-lookup"><span data-stu-id="cbe94-982">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="cbe94-983">内で例外を生成せず、更新操作を続行する、`RowUpdated`イベント、設定、<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>のプロパティ、<xref:System.Data.Common.RowUpdatedEventArgs>に<xref:System.Data.UpdateStatus.Continue>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-983">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbe94-984">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、データ ソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-984">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbe94-985">
            <see cref="T:System.Data.DataSet" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-985">The <see cref="T:System.Data.DataSet" /> is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="cbe94-986">ソース テーブルが無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-986">The source table is invalid.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DBConcurrencyException">
          <span data-ttu-id="cbe94-987">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-987">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-988">バッチ処理サポートを有効にするかどうか、および、1 回のバッチで実行可能なコマンド数を指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-988">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe94-989">バッチごとに処理される行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-989">The number of rows to process per batch.</span>
          </span>
          <span data-ttu-id="cbe94-990">
            <list type="table">
              <listheader>
                <term> 値は</term>
                <description>効果</description>
              </listheader>
              <item>
                <term> 0 </term>
                <description>バッチのサイズに制限はありません。</description>
              </item>
              <item>
                <term> 1 </term>
                <description>バッチ更新を無効にします。</description>
              </item>
              <item>
                <term> &gt; 1 </term>
                <description>のバッチを使用する変更が送信される<see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />時に操作します。  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-990">
              <list type="table">
                <listheader>
                  <term> Value is  </term>
                  <description> Effect  </description>
                </listheader>
                <item>
                  <term> 0  </term>
                  <description> There is no limit on the batch size.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> Disables batch updating.  </description>
                </item>
                <item>
                  <term> &gt; 1  </term>
                  <description> Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.  </description>
                </item>
              </list>
            </span>
          </span>
          <span data-ttu-id="cbe94-991">これを 1 以外の値に設定する場合、すべてのコマンドに関連付けられている、<see cref="T:System.Data.Common.DbDataAdapter" />必要があります、<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />プロパティに設定**None**または**OutputParameters**します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-991">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span>
          </span>
          <span data-ttu-id="cbe94-992">それ以外の場合、例外がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-992">An exception will be thrown otherwise.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-993">使用して、<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A>からの変更でデータ ソースを更新するプロパティ、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-993">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="cbe94-994">データ プロバイダーは、バッチ処理をサポートする場合は、サーバーへのラウンドト リップ数を減らすことで、アプリケーションのパフォーマンスを向上このことができます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-994">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="cbe94-995">ADO.NET 2.0 では、SQL Server (SqlClient) と Oracle (OracleClient) の .NET データ プロバイダーのこのプロパティはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="cbe94-995">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="cbe94-996">サイズの大きいバッチを実行すると、パフォーマンスが低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-996">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="cbe94-997">そのため、アプリケーションを実装する前に、バッチの最適なサイズ設定をテストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cbe94-997">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="cbe94-998"><xref:System.ArgumentOutOfRangeException> 0 より小さい値が数値に設定されている場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-998">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbe94-999">データ ソース内のレコードを更新するコマンドを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-999">Gets or sets a command used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbe94-1000">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbe94-1000">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbe94-1001">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、プライマリ キーの情報が存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="cbe94-1001">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cbe94-1002">次の例は、派生クラスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="cbe94-1002">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>