<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0908e64fe06eb21b95e7b5cbb174025bae841c98" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58462087" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f2303-101"><see cref="T:System.Data.IDbDataAdapter" /> インターフェイスの実装を支援します。</span><span class="sxs-lookup"><span data-stu-id="f2303-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span></span> <span data-ttu-id="f2303-102"><see cref="T:System.Data.Common.DbDataAdapter" /> の継承クラスは、厳密な型指定を行う関数のセットを実装しますが、**DataAdapter** を完全に実装するために必要な機能の大部分は継承します。</span><span class="sxs-lookup"><span data-stu-id="f2303-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-103"><xref:System.Data.Common.DbDataAdapter>クラスから継承、<xref:System.Data.Common.DataAdapter>クラスを実装、<xref:System.Data.IDbDataAdapter>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="f2303-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="f2303-104">クラスを実装しやすく、 **DataAdapter**リレーショナル データベースで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="f2303-105">アプリケーションがのインスタンスを作成していない、<xref:System.Data.Common.DbDataAdapter>クラスを直接が、これを継承するクラスのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="f2303-106">クラスを継承する<xref:System.Data.Common.DbDataAdapter>継承されたメンバーを実装し、通常はプロバイダー固有の機能を追加するための追加メンバーを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="f2303-107">など、<xref:System.Data.Common.DbDataAdapter>クラスを定義、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ、および<xref:System.Data.Common.DbDataAdapter>クラス定義の 8 つのオーバー ロード、<xref:System.Data.IDataAdapter.Fill%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2303-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="f2303-108">さらに、<xref:System.Data.OleDb.OleDbDataAdapter>クラスの継承、<xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドの 2 つの追加オーバー ロードを定義して<xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>をパラメーターとしてオブジェクトの ADO レコード セットを取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="f2303-109">継承する場合、<see cref="T:System.Data.Common.DbDataAdapter" />クラス、次のコンス トラクターを実装することお勧めします。</span><span class="sxs-lookup"><span data-stu-id="f2303-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="f2303-110">アイテム</span><span class="sxs-lookup"><span data-stu-id="f2303-110">Item</span></span> 
 </term><description> <span data-ttu-id="f2303-111">説明</span><span class="sxs-lookup"><span data-stu-id="f2303-111">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f2303-112">*Prv*DataAdapter()</span><span class="sxs-lookup"><span data-stu-id="f2303-112">*Prv*DataAdapter()</span></span> 
 </term><description> <span data-ttu-id="f2303-113">新しいインスタンスを初期化、 *Prv*DataAdapter クラス。</span><span class="sxs-lookup"><span data-stu-id="f2303-113">Initializes a new instance of the *Prv*DataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f2303-114">*Prv*DataAdapter (*Prv*コマンド*selectCommand*)</span><span class="sxs-lookup"><span data-stu-id="f2303-114">*Prv*DataAdapter(*Prv*Command *selectCommand*)</span></span> 
 </term><description> <span data-ttu-id="f2303-115">新しいインスタンスを初期化、 *Prv*DataAdapter クラス、指定した SQL SELECT ステートメントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-115">Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f2303-116">*Prv*DataAdapter (文字列*selectCommandText*、文字列*selectConnectionString*)</span><span class="sxs-lookup"><span data-stu-id="f2303-116">*Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span></span> 
 </term><description> <span data-ttu-id="f2303-117">新しいインスタンスを初期化、 *Prv*SQL SELECT ステートメントと接続文字列を使用して DataAdapter クラス。</span><span class="sxs-lookup"><span data-stu-id="f2303-117">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f2303-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span><span class="sxs-lookup"><span data-stu-id="f2303-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span></span> 
 </term><description> <span data-ttu-id="f2303-119">新しいインスタンスを初期化、 *Prv*SQL SELECT ステートメントで、DataAdapter クラスと*Prv*接続オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="f2303-119">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="f2303-120">.NET Framework データ プロバイダーの間で整合性を高める必要があります、フォームの継承クラスの名前を付けます*Prv*dataadapter を使用する場所*Prv*は特定の .NET のすべてのクラスに指定された uniform プレフィックスFramework データ プロバイダーの名前空間。</span><span class="sxs-lookup"><span data-stu-id="f2303-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="f2303-121">たとえば、"Sql"には、プレフィックスの<see cref="T:System.Data.SqlClient.SqlDataAdapter" />クラス、 **System.Data.SqlClient**名前空間。</span><span class="sxs-lookup"><span data-stu-id="f2303-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span></span></para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-122">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-122">DbProviderFactories (ADO.NET)</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-123">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-123">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2303-124"><see langword="DataAdapter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f2303-124">Initializes a new instance of a <see langword="DataAdapter" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-125">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-125">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2303-126">**DataAdapter** クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f2303-126">Initializes a new instance of a **DataAdapter** class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-127">インスタンスを作成するときに<xref:System.Data.Common.DbDataAdapter>、次の読み取り/書き込みプロパティは、次の初期値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-127">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="f2303-128">プロパティ</span><span class="sxs-lookup"><span data-stu-id="f2303-128">Properties</span></span>|<span data-ttu-id="f2303-129">初期値</span><span class="sxs-lookup"><span data-stu-id="f2303-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="f2303-130">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="f2303-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="f2303-131">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="f2303-131">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="f2303-132">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="f2303-132">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="f2303-133">新しい <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="f2303-133">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="f2303-134">プロパティに別個の呼び出しでこれらのプロパティのいずれかの値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="f2303-134">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-135">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-135">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-136">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-136">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="f2303-137">新しい <see langword="DataAdapter" /> の作成に使用する <see langword="DataAdapter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-137">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="f2303-138">既存の同じ型のオブジェクトから、<see langword="DataAdapter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f2303-138">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-139">このオーバー ロード、<xref:System.Data.Common.DbDataAdapter>コンス トラクターが使用できるように設計を .NET Framework データ プロバイダーによって clone の実装で使用するためのようなコンス トラクターを実装する場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-139">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-140">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-140">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-141">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-141">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="f2303-142">バッチに追加する <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-142">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span></span></param>
        <summary><span data-ttu-id="f2303-143"><see cref="T:System.Data.IDbCommand" /> を現在のバッチに追加します。</span><span class="sxs-lookup"><span data-stu-id="f2303-143">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span></span></summary>
        <returns><span data-ttu-id="f2303-144"><see cref="T:System.Data.IDbCommand" /> を追加する前のバッチ内のコマンド数。</span><span class="sxs-lookup"><span data-stu-id="f2303-144">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-145"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-145">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f2303-146">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f2303-146">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f2303-147">アダプターでバッチがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f2303-147">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-148">このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-148">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f2303-149">継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスがコマンドをバッチに追加するユーザーを許可するには、このメソッドをオーバーライドするバッチをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="f2303-149">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-150">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-150">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-151">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-151">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2303-152">バッチからすべての <see cref="T:System.Data.IDbCommand" /> オブジェクトを削除します。</span><span class="sxs-lookup"><span data-stu-id="f2303-152">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-153"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-153">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f2303-154">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f2303-154">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f2303-155">アダプターでバッチがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f2303-155">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-156">このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-156">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f2303-157">継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスがバッチからすべてのコマンドを削除するユーザーを許可するには、このメソッドをオーバーライドするバッチをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="f2303-157">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-158">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-158">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-159">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-159">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="f2303-160">データ ソースの更新に使用した <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-160">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span></span></param>
        <param name="command"><span data-ttu-id="f2303-161"><see cref="T:System.Data.IDbCommand" /> 処理中に実行した <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-161">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="f2303-162">コマンドが UPDATE、INSERT、DELETE、または SELECT ステートメントのいずれかを示す値。</span><span class="sxs-lookup"><span data-stu-id="f2303-162">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="f2303-163"><see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-163">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="f2303-164"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f2303-164">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="f2303-165"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> クラスの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="f2303-165">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-166">オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2303-166">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-167">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-167">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="f2303-168">データ ソースを更新する <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-168">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span></span></param>
        <param name="command"><span data-ttu-id="f2303-169"><see cref="T:System.Data.IDbCommand" /> 処理中に実行する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-169">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="f2303-170">コマンドが UPDATE、INSERT、DELETE、または SELECT ステートメントのいずれかを示す値。</span><span class="sxs-lookup"><span data-stu-id="f2303-170">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="f2303-171"><see cref="T:System.Data.Common.DataTableMapping" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-171">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="f2303-172"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f2303-172">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="f2303-173"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> クラスの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="f2303-173">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-174">オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2303-174">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-175">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-175">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-176">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-176">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-177"><see cref="T:System.Data.Common.DataAdapter" /> オブジェクトがテーブル マップに使用する既定の名前。</span><span class="sxs-lookup"><span data-stu-id="f2303-177">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-178">"Table"で使用される既定の名前、<xref:System.Data.Common.DataAdapter>オブジェクトがテーブル マップします。</span><span class="sxs-lookup"><span data-stu-id="f2303-178">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="f2303-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> アプリケーションで使用するテーブルのマッピングを追加するときに、<xref:System.Data.Common.DbDataAdapter.Fill%2A>が指定されていません、<xref:System.Data.DataTable>名。</span><span class="sxs-lookup"><span data-stu-id="f2303-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-180">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-180">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-181">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-181">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-182">データ セットからレコードを削除するコマンドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-182">Gets or sets a command for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="f2303-183"><see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-183">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-184">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、プライマリ キーの情報が存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>が自動的に生成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-184">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2303-185">次の例は、派生クラスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-185">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-186">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-186">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-187">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-187">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-188">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-188">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="f2303-189">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-189"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="f2303-190"><see cref="T:System.Data.Common.DbDataAdapter" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="f2303-190">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-191">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-191">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-192">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-192">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2303-193">現在のバッチを実行します。</span><span class="sxs-lookup"><span data-stu-id="f2303-193">Executes the current batch.</span></span></summary>
        <returns><span data-ttu-id="f2303-194">バッチ内の直前のコマンドの戻り値。</span><span class="sxs-lookup"><span data-stu-id="f2303-194">The return value from the last command in the batch.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-195"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-195">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f2303-196">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f2303-196">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-197">このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-197">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f2303-198">継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスが、バッチを実行できるようにするには、このメソッドをオーバーライドするバッチをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="f2303-198">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="f2303-199">このメソッドの実装は、バッチにアダプター内のコマンドを結合し、バッチを実行し、バッチの戻り値を返します。</span><span class="sxs-lookup"><span data-stu-id="f2303-199">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-200">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-200">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-201">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-201">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-202">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-202">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2303-203"><see cref="T:System.Data.DataSet" /> または <see cref="T:System.Data.DataTable" /> にデータを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="f2303-203">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-204">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-204">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f2303-205">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-205">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="f2303-206"><see cref="T:System.Data.DataSet" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-206">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="f2303-207"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f2303-207">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f2303-208">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f2303-208">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-209"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、SELECT ステートメントを使用してデータ ソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-209">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="f2303-210"><xref:System.Data.IDbConnection> Select コマンドに関連付けられているオブジェクトを有効にする必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-210">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-211">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのデータを取得する開閉します。</span><span class="sxs-lookup"><span data-stu-id="f2303-211">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="f2303-212">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-212">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-213">データ テーブルの設定中にエラーまたは例外が発生した場合、エラーの発生前に追加された行は、データ テーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="f2303-213">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="f2303-214">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-214">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="f2303-215">テーブルは追加されません、コマンドがすべての行を返さない場合、 <xref:System.Data.DataSet>、し、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-215">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="f2303-216">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列に名前を生成します"*columnname*1「、」*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="f2303-216">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-217">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-217">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="f2303-218">指定したクエリでは、複数の結果を返す、別のテーブルにクエリを返す行ごとの結果セットが配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-218">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="f2303-219">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-219">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f2303-220">行を返さないクエリのテーブルは作成しない選択クエリに続く挿入クエリを処理する場合、select クエリ用に作成されたテーブルの名前は"Table"最初に作成されたテーブルでは。</span><span class="sxs-lookup"><span data-stu-id="f2303-220">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="f2303-221">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-221">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-222">設定に、SELECT ステートメントを使用するときに、<xref:System.Data.DataSet>複数の結果、バッチの SQL ステートメントなど、結果のいずれかにエラーが含まれている場合を返します。 それ以降のすべての結果はスキップされ、には追加されません、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-222">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="f2303-223">以降を使用する場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>の内容を更新する呼び出し、 <xref:System.Data.DataSet>、2 つの条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-223">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="f2303-224">SQL ステートメントが最初に設定するために使用する 1 つと一致する必要があります、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-224">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="f2303-225">**キー**列情報が存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-225">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="f2303-226">重複する行が調整されていて、1 回だけの主キーの情報が存在する場合、<xref:System.Data.DataTable>に対応する、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-226">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-227">主キーの情報を設定するいずれかを使って<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、指定することによって、<xref:System.Data.DataTable.PrimaryKey%2A>のプロパティ、 <xref:System.Data.DataTable>、かを設定して、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティを`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-227">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f2303-228">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-228">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-229">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-229">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f2303-230">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-230">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-231">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-231">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f2303-232">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-232">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-233">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-233">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-234">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-234">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f2303-235">テーブル マップに使用する <see cref="T:System.Data.DataTable" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="f2303-235">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="f2303-236"><see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-236">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="f2303-237"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f2303-237">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f2303-238">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f2303-238">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、関連付けられた指定した SELECT ステートメントを使用してデータ ソースから行を取得<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="f2303-240">SELECT ステートメントに関連付けられている接続オブジェクトが有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-240">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-241">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="f2303-241">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f2303-242">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-242">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-243"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作し、先に行を追加します<xref:System.Data.DataTable>内のオブジェクト、 <xref:System.Data.DataSet>、作成、<xref:System.Data.DataTable>オブジェクトのかどうか、まだ存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-243">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="f2303-244">作成するときに<xref:System.Data.DataTable>、オブジェクト、<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作は通常の列名のメタデータのみを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-244">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="f2303-245">ただし場合、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>プロパティに設定されて`AddWithKey`、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-245">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="f2303-246">場合、<xref:System.Data.Common.DbDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="f2303-246">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-247">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-247">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f2303-248">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-248">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="f2303-249">オーバー ロード<xref:System.Data.Common.DbDataAdapter.Fill%2A>を受け取る`DataTable`ように、パラメーターでは、最初の結果のみ取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-249">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="f2303-250">オーバー ロードを使用して、<xref:System.Data.Common.DbDataAdapter.Fill%2A>を受け取る`DataSet`複数の結果を得るためのパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="f2303-250">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="f2303-251"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-251">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f2303-252">このような状況では、<xref:System.Data.Common.DbDataAdapter.Fill%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-252">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f2303-253">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-253">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f2303-254">場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-254">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f2303-255">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-255">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f2303-256">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-256">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f2303-257">使用することができます、<xref:System.Data.Common.DbDataAdapter.Fill%2A>複数回の同じメソッド<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-257">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-258">主キーが存在する場合は、受信行が既に存在する行と一致するとマージされます。</span><span class="sxs-lookup"><span data-stu-id="f2303-258">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="f2303-259">受信した行を追加、主キーが存在しない場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-259">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-260">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-260">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-261">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-261">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f2303-262">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-262">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-263">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.Fill%2A>と<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework データ プロバイダーは、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-263">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f2303-264">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-264">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-265">このオーバー ロード、<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />メソッドが保護されており、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-265">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-266">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-266">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-267">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-267">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f2303-268">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-268">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f2303-269">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f2303-269">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="f2303-270"><see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の列と一致するように <see cref="T:System.Data.DataTable" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-270">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="f2303-271"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f2303-271">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f2303-272">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f2303-272">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、SELECT ステートメントを使用してデータ ソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="f2303-274"><xref:System.Data.IDbConnection> Select コマンドに関連付けられているオブジェクトを有効にする必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-274">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-275">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="f2303-275">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f2303-276">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-276">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-277">テーブルは追加されません、コマンドがすべての行を返さない場合、 <xref:System.Data.DataSet>、し、例外は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-277">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="f2303-278">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出すると、<xref:System.Data.DataTable>パターン"columnname1"、"columnname2"、"columnname3"などを使用して、後続の列に名前が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-278">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="f2303-279">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-279">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="f2303-280">指定したクエリでは、複数の結果を返す、各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-280">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="f2303-281">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-281">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f2303-282">行を返さないクエリのテーブルは作成しない選択クエリに続く挿入クエリを処理する場合は、select クエリ用に作成されたテーブルという名前になります"Table"は作成された最初のテーブル。</span><span class="sxs-lookup"><span data-stu-id="f2303-282">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="f2303-283">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-283">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-284"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-284">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f2303-285">このような状況では、<xref:System.Data.Common.DbDataAdapter.Fill%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-285">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f2303-286">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-286">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f2303-287">場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-287">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f2303-288">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-288">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f2303-289">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-289">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f2303-290">データ テーブルの設定中にエラーまたは例外が発生した場合、エラーの発生前に追加された行は、データ テーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="f2303-290">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="f2303-291">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-291">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="f2303-292">設定に、SELECT ステートメントを使用するときに、<xref:System.Data.DataSet>バッチ SQL ステートメントは、次の注意の複数の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="f2303-292">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="f2303-293">それ以降のすべての結果がスキップされに追加されないエラーが含まれる結果のいずれかの場合、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-293">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="f2303-294">以降を使用する場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>の内容を更新する呼び出し、 <xref:System.Data.DataSet>、2 つの条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-294">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="f2303-295">SQL ステートメントが最初に設定するために使用する 1 つと一致する必要があります、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-295">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="f2303-296">**キー**列情報が存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-296">The **Key** column information must be present.</span></span> <span data-ttu-id="f2303-297">重複する行が調整されていて、1 回だけの主キーの情報が存在する場合、<xref:System.Data.DataTable>に対応する、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-297">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-298">主キーの情報を設定するいずれかを使って<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、指定することによって、<xref:System.Data.DataTable.PrimaryKey%2A>のプロパティ、 <xref:System.Data.DataTable>、かを設定して、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティを`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-298">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f2303-299">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-300">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f2303-301">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-301">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-302">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f2303-303">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2303-304">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、入力、 <xref:System.Data.DataSet> categories テーブルから行を含むです。</span><span class="sxs-lookup"><span data-stu-id="f2303-304">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="f2303-305">この例では、作成した、<xref:System.Data.OleDb.OleDbDataAdapter>と<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-305">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="f2303-306">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-306">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-307">オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2303-307">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-308">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-308">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-309">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-309">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f2303-310">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-310">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="command"><span data-ttu-id="f2303-311">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span><span class="sxs-lookup"><span data-stu-id="f2303-311">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="f2303-312"><see cref="T:System.Data.CommandBehavior" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f2303-312">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="f2303-313">指定した <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.DataTable" />、および <see cref="T:System.Data.IDbCommand" /> を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.CommandBehavior" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-313">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span></span></summary>
        <returns><span data-ttu-id="f2303-314"><see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f2303-314">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="f2303-315">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f2303-315">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-316"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、関連付けられた指定した SELECT ステートメントを使用してデータ ソースから行を取得<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-316">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="f2303-317">SELECT ステートメントに関連付けられている接続オブジェクトが有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-317">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-318">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのデータを取得する開閉します。</span><span class="sxs-lookup"><span data-stu-id="f2303-318">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="f2303-319">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-319">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-320"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作し、指定したコピー先に行を追加します<xref:System.Data.DataTable>オブジェクト、 <xref:System.Data.DataSet>、作成、<xref:System.Data.DataTable>オブジェクトのかどうかは既に存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-320">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="f2303-321">作成するときに、<xref:System.Data.DataTable>オブジェクト、<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作は通常の列名のメタデータのみを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-321">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="f2303-322">ただし場合、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>プロパティに設定されて`AddWithKey`、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-322">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="f2303-323">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列に名前が生成されます"*columnname*1"、"*columnname*2"、"*columnname*3"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-323">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-324">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-324">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="f2303-325">オーバー ロード<xref:System.Data.Common.DbDataAdapter.Fill%2A>を受け取る`DataTable`ように、パラメーターでは、最初の結果のみ取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-325">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="f2303-326">オーバー ロードを使用して、<xref:System.Data.Common.DbDataAdapter.Fill%2A>を受け取る`DataSet`複数の結果を得るためのパラメーターとして。</span><span class="sxs-lookup"><span data-stu-id="f2303-326">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="f2303-327">使用することができます、<xref:System.Data.Common.DbDataAdapter.Fill%2A>複数回の同じメソッド<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-327">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-328">主キーが存在する場合は、受信行が既に存在する行と一致するとマージされます。</span><span class="sxs-lookup"><span data-stu-id="f2303-328">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="f2303-329">受信した行を追加、主キーが存在しない場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-329">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-330">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-330">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-331">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-331">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f2303-332">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-332">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-333">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-333">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f2303-334">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-334">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-335">このオーバー ロード、<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />メソッドが保護されており、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-335">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-336">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-336">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-337">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-337">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord"><span data-ttu-id="f2303-338">取得を開始する、0 から始まるレコード番号。</span><span class="sxs-lookup"><span data-stu-id="f2303-338">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="f2303-339">取得するレコードの最大数。</span><span class="sxs-lookup"><span data-stu-id="f2303-339">The maximum number of records to retrieve.</span></span></param>
        <param name="dataTables"><span data-ttu-id="f2303-340">データ ソースから読み込む <see cref="T:System.Data.DataTable" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-340">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <summary><span data-ttu-id="f2303-341">指定したレコード位置で開始し、指定した最大数のレコードを読み込んで、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-341">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span></span></summary>
        <returns><span data-ttu-id="f2303-342"><see cref="T:System.Data.DataTable" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f2303-342">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="f2303-343">この値には、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f2303-343">This value does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-344"><xref:System.Data.Common.DataAdapter.Fill%2A>メソッドは、関連付けられた指定した SELECT ステートメントを使用してデータ ソースから行を取得<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-344">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="f2303-345">SELECT ステートメントに関連付けられている接続オブジェクトが有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-345">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-346">前に、接続が閉じられた場合<xref:System.Data.Common.DataAdapter.Fill%2A>が呼び出されると、ファイル データを取得するが開かれ、閉じられています。</span><span class="sxs-lookup"><span data-stu-id="f2303-346">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="f2303-347">接続が前に開いている場合は<xref:System.Data.Common.DataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-347">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-348"><xref:System.Data.Common.DataAdapter.Fill%2A>操作し、先に行を追加します<xref:System.Data.DataTable>内のオブジェクト、 <xref:System.Data.DataSet>、作成、<xref:System.Data.DataTable>オブジェクトのかどうか、まだ存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-348">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="f2303-349">作成するときに<xref:System.Data.DataTable>、オブジェクト、<xref:System.Data.Common.DataAdapter.Fill%2A>操作は通常の列名のメタデータのみを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-349">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="f2303-350">ただし場合、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>プロパティに設定されて`AddWithKey`、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-350">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="f2303-351">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-351">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-352">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-352">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f2303-353">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-353">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="f2303-354">データ アダプターの設定中に重複した列が発生した場合、<xref:System.Data.DataTable>パターン"columnname1"、"columnname2"、"columnname3"などを使用して、後続の列の名前を生成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-354">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="f2303-355">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-355">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f2303-356">複数の結果セットが追加されたとき、 <xref:System.Data.DataSet>、各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-356">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="f2303-357">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-357">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f2303-358">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-358">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-359">設定に、SELECT ステートメントを使用するときに、<xref:System.Data.DataSet>複数の結果を返すバッチの SQL ステートメントなど、エラー、結果のいずれかが含まれる場合それ以降のすべての結果はスキップされに追加されません、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-359">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="f2303-360">使用することができます、<xref:System.Data.Common.DataAdapter.Fill%2A>複数回の同じメソッド<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-360">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-361">主キーが存在する場合は、受信行が既に存在する行と一致するとマージされます。</span><span class="sxs-lookup"><span data-stu-id="f2303-361">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="f2303-362">受信した行を追加、主キーが存在しない場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-362">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-363">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-363">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f2303-364">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-364">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-365">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-365">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-366">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-366">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f2303-367">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-367">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="f2303-368">取得を開始する、0 から始まるレコード番号。</span><span class="sxs-lookup"><span data-stu-id="f2303-368">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="f2303-369">取得するレコードの最大数。</span><span class="sxs-lookup"><span data-stu-id="f2303-369">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f2303-370">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f2303-370">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="f2303-371"><see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-371">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="f2303-372"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f2303-372">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f2303-373">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f2303-373">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-374">A`maxRecords`値が 0 の開始レコードの後に見つかったすべてのレコードを取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-374">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="f2303-375">場合`maxRecords`だけで、残りの行が返され、エラーは発生しませんが、残りの行の数より大きい。</span><span class="sxs-lookup"><span data-stu-id="f2303-375">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="f2303-376">場合、対応する select コマンドは、複数の結果を返すステートメント<xref:System.Data.Common.DbDataAdapter.Fill%2A>のみ適用されます`maxRecords`最初の結果にします。</span><span class="sxs-lookup"><span data-stu-id="f2303-376">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="f2303-377"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、SELECT ステートメントを使用してデータ ソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-377">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="f2303-378"><xref:System.Data.IDbConnection> SELECT ステートメントに関連付けられているオブジェクトは、有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-378">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-379">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのデータを取得する開閉します。</span><span class="sxs-lookup"><span data-stu-id="f2303-379">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="f2303-380">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-380">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-381">テーブルは追加されません、コマンドがすべての行を返さない場合、<xref:System.Data.DataSet>例外は発生しませんが、します。</span><span class="sxs-lookup"><span data-stu-id="f2303-381">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="f2303-382">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列に名前が生成されます"*columnname*1"、"*columnname*2"、"*columnname*3"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-382">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-383">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-383">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="f2303-384">指定したクエリでは、複数の結果を返す、各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-384">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="f2303-385">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-385">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f2303-386">行を返さないクエリのテーブルは作成しない選択クエリに続く挿入クエリを処理する場合、select クエリ用に作成されたテーブルの名前は"Table"最初に作成されたテーブルでは。</span><span class="sxs-lookup"><span data-stu-id="f2303-386">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="f2303-387">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-387">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-388"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-388">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f2303-389">このような状況では、<xref:System.Data.Common.DbDataAdapter.Fill%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-389">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f2303-390">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-390">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f2303-391">場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-391">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f2303-392">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-392">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f2303-393">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-393">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f2303-394">データ テーブルの設定中にエラーまたは例外が発生した場合、エラーの発生前に追加された行は、データ テーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="f2303-394">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="f2303-395">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-395">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="f2303-396">設定に、SELECT ステートメントを使用するときに、<xref:System.Data.DataSet>バッチの SQL ステートメントなど、複数の結果を返しますが、次の注意します。</span><span class="sxs-lookup"><span data-stu-id="f2303-396">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="f2303-397">バッチ SQL ステートメントから複数の結果を処理するときに`maxRecords`最初の結果にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-397">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="f2303-398">チャプター結果 (.NET Framework Data Provider for OLE DB のみ) を含む行に対しても同様です。</span><span class="sxs-lookup"><span data-stu-id="f2303-398">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="f2303-399">最上位レベルの結果はによって制限されます`maxRecords`がすべての子行を追加します。</span><span class="sxs-lookup"><span data-stu-id="f2303-399">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="f2303-400">それ以降のすべての結果がスキップされに追加されないエラーが含まれる結果のいずれかの場合、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-400">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="f2303-401">以降を使用する場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>の内容を更新する呼び出し、 <xref:System.Data.DataSet>、2 つの条件を満たす必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-401">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="f2303-402">SQL ステートメントが最初に設定するために使用する 1 つと一致する必要があります、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-402">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="f2303-403">**キー**列情報が存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-403">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="f2303-404">主キーの情報が存在する場合、重複する行は調整して、1 回だけで、<xref:System.Data.DataTable>に対応する、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-404">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-405">主キーの情報を設定するいずれかを使って<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、指定することによって、<xref:System.Data.DataTable.PrimaryKey%2A>のプロパティ、 <xref:System.Data.DataTable>、かを設定して、<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>プロパティを`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-405">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f2303-406">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-406">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-407">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-407">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f2303-408">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-408">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-409">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-409">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f2303-410">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-410">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-411">`DataSet`によって示されるレコードの数よりも多くが含まれていないは`maxRecords`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-411">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="f2303-412">ただし、クエリによって生成される全体の結果セットがまだサーバーから返されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-412">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2303-413">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、入力、<xref:System.Data.DataSet>から行 10、先頭の 15 行を含む、**カテゴリ**テーブル。</span><span class="sxs-lookup"><span data-stu-id="f2303-413">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="f2303-414">この例では、作成した、<xref:System.Data.OleDb.OleDbDataAdapter>と<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-414">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="f2303-415"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-415">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f2303-416">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-416">The source table is invalid.</span></span>  
  
<span data-ttu-id="f2303-417">または</span><span class="sxs-lookup"><span data-stu-id="f2303-417">-or-</span></span> 
<span data-ttu-id="f2303-418">接続が無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-418">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="f2303-419">接続が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="f2303-419">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f2303-420"><paramref name="startRecord" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f2303-420">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="f2303-421">または</span><span class="sxs-lookup"><span data-stu-id="f2303-421">-or-</span></span> 
<span data-ttu-id="f2303-422"><paramref name="maxRecords" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f2303-422">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-423">オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2303-423">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-424">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-424">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-425">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-425">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="srcTable" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="2" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="startRecord" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataSet">To be added.</param>
        <param name="srcTable">To be added.</param>
        <param name="dataReader">To be added.</param>
        <param name="startRecord">To be added.</param>
        <param name="maxRecords">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startRecord" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="f2303-426">データ ソースから読み込む <see cref="T:System.Data.DataTable" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-426">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <param name="startRecord"><span data-ttu-id="f2303-427">取得を開始する、0 から始まるレコード番号。</span><span class="sxs-lookup"><span data-stu-id="f2303-427">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="f2303-428">取得するレコードの最大数。</span><span class="sxs-lookup"><span data-stu-id="f2303-428">The maximum number of records to retrieve.</span></span></param>
        <param name="command"><span data-ttu-id="f2303-429"><see cref="T:System.Data.IDbCommand" /> オブジェクトにデータを読み込むために実行する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-429">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span></span></param>
        <param name="behavior"><span data-ttu-id="f2303-430"><see cref="T:System.Data.CommandBehavior" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f2303-430">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="f2303-431"><see cref="T:System.Data.DataSet" /> 名および <see cref="T:System.Data.DataSet" /> 名を使用して、データ ソース内の行と一致するように、<see cref="T:System.Data.DataTable" /> 内の指定した範囲の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-431">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="f2303-432">データ テーブルで追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f2303-432">The number of rows added to or refreshed in the data tables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-433">A`maxRecords`値が 0 の開始レコードの後に見つかったすべてのレコードを取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-433">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="f2303-434">場合`maxRecords`だけで、残りの行が返され、エラーは発生しませんが、残りの行の数より大きい。</span><span class="sxs-lookup"><span data-stu-id="f2303-434">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="f2303-435"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、SELECT ステートメントを使用してデータ ソースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-435">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="f2303-436"><xref:System.Data.IDbConnection> SELECT ステートメントに関連付けられているオブジェクトは、有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-436">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-437">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="f2303-437">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f2303-438">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-438">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-439">テーブルは追加されません、コマンドがすべての行を返さない場合、<xref:System.Data.DataSet>例外は発生しませんが、します。</span><span class="sxs-lookup"><span data-stu-id="f2303-439">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="f2303-440">場合、<xref:System.Data.Common.DbDataAdapter>オブジェクトの設定中に重複した列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列に名前が生成されます"*columnname*1"、"*columnname*2"、"*columnname*3"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-440">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-441">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-441">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="f2303-442">指定したクエリでは、複数の結果を返す、各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-442">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="f2303-443">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-443">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f2303-444">行を返さないクエリのテーブルは作成しない選択クエリに続く挿入クエリを処理する場合は、select クエリ用に作成されたテーブルという名前になります"Table"は作成された最初のテーブル。</span><span class="sxs-lookup"><span data-stu-id="f2303-444">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="f2303-445">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-445">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-446"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-446">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f2303-447">このような状況では、<xref:System.Data.Common.DbDataAdapter.Fill%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-447">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f2303-448">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-448">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f2303-449">場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-449">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f2303-450">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-450">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f2303-451">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-451">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f2303-452">データ テーブルの設定中にエラーまたは例外が発生した場合、エラーの発生前に追加された行は、データ テーブルに残ります。</span><span class="sxs-lookup"><span data-stu-id="f2303-452">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="f2303-453">残りの操作は中止されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-453">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="f2303-454">設定に、SELECT ステートメントを使用するときに、<xref:System.Data.DataTable>バッチ SQL ステートメントは、次の注意など、オブジェクトが複数の結果を返します。</span><span class="sxs-lookup"><span data-stu-id="f2303-454">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="f2303-455">バッチ SQL ステートメントから複数の結果を処理するときに`maxRecords`最初の結果にのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-455">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="f2303-456">チャプター結果 (.NET Framework Data Provider for OLE DB のみ) を含む行に対しても同様です。</span><span class="sxs-lookup"><span data-stu-id="f2303-456">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="f2303-457">最上位レベルの結果はによって制限されます`maxRecords`がすべての子行を追加します。</span><span class="sxs-lookup"><span data-stu-id="f2303-457">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="f2303-458">エラーが含まれる結果のいずれかの場合は、それ以降のすべての結果はスキップされます。</span><span class="sxs-lookup"><span data-stu-id="f2303-458">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-459">`DataSet`によって示されるレコードの数よりも多くが含まれていないは`maxRecords`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-459">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="f2303-460">ただし、クエリによって生成されたすべての結果セットがまだサーバーから返されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-460">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="f2303-461"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-461">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f2303-462">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-462">The source table is invalid.</span></span>  
  
<span data-ttu-id="f2303-463">または</span><span class="sxs-lookup"><span data-stu-id="f2303-463">-or-</span></span> 
<span data-ttu-id="f2303-464">接続が無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-464">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="f2303-465">接続が見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="f2303-465">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f2303-466"><paramref name="startRecord" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f2303-466">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="f2303-467">または</span><span class="sxs-lookup"><span data-stu-id="f2303-467">-or-</span></span> 
<span data-ttu-id="f2303-468"><paramref name="maxRecords" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f2303-468">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-469">オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2303-469">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-470">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-470">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-471">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-471">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f2303-472">レコードおよび必要に応じてスキーマを格納するための <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-472">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="f2303-473">取得を開始する、0 から始まるレコード番号。</span><span class="sxs-lookup"><span data-stu-id="f2303-473">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="f2303-474">取得するレコードの最大数。</span><span class="sxs-lookup"><span data-stu-id="f2303-474">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f2303-475">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f2303-475">The name of the source table to use for table mapping.</span></span></param>
        <param name="command"><span data-ttu-id="f2303-476">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span><span class="sxs-lookup"><span data-stu-id="f2303-476">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="f2303-477"><see cref="T:System.Data.CommandBehavior" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f2303-477">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="f2303-478"><see cref="T:System.Data.DataSet" /> 名、ソース テーブル名、コマンド文字列、およびコマンド動作を使用して、データ ソース内の列と一致するように、<see cref="T:System.Data.DataSet" /> 内の指定した範囲の行を追加または更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-478">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span></span></summary>
        <returns><span data-ttu-id="f2303-479"><see cref="T:System.Data.DataSet" /> で正常に追加または更新された行数。</span><span class="sxs-lookup"><span data-stu-id="f2303-479">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="f2303-480">これには、行を返さないステートメントの影響を受ける行は含まれません。</span><span class="sxs-lookup"><span data-stu-id="f2303-480">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-481"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、関連付けられた指定した SELECT ステートメントを使用してデータ ソースから行を取得<xref:System.Data.IDbDataAdapter.SelectCommand%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-481">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="f2303-482">SELECT ステートメントに関連付けられている接続オブジェクトが有効である必要がありますが、開放する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-482">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-483">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="f2303-483">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f2303-484">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-484">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-485"><xref:System.Data.Common.DbDataAdapter.Fill%2A>操作し、先に行を追加します<xref:System.Data.DataTable>内のオブジェクト、 <xref:System.Data.DataSet>、作成、<xref:System.Data.DataTable>オブジェクトのかどうか、まだ存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-485">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="f2303-486">作成するときに<xref:System.Data.DataTable>、オブジェクト、<xref:System.Data.Common.DbDataAdapter.Fill%2A>操作は通常の列名のメタデータのみを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-486">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="f2303-487">ただし場合、<xref:System.Data.IDataAdapter.MissingSchemaAction%2A>プロパティに設定されて`AddWithKey`、適切な主キーと制約も作成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-487">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="f2303-488">場合、<xref:System.Data.Common.DbDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="f2303-488">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-489">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-489">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f2303-490">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-490">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f2303-491">整数値を指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど) に追加することでは、追加の結果セットがという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-491">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="f2303-492">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-492">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-493"><xref:System.Data.Common.DbDataAdapter.Fill%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-493">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f2303-494">このような状況では、<xref:System.Data.Common.DbDataAdapter.Fill%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-494">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f2303-495">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-495">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f2303-496">場合<xref:System.Data.Common.DbDataAdapter.Fill%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-496">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f2303-497">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-497">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f2303-498">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-498">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f2303-499">使用することができます、<xref:System.Data.Common.DbDataAdapter.Fill%2A>複数回の同じメソッド<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-499">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-500">主キーが存在する場合は、受信行が既に存在する行と一致するとマージされます。</span><span class="sxs-lookup"><span data-stu-id="f2303-500">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="f2303-501">受信した行を追加、主キーが存在しない場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-501">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-502">`SelectCommand` が OUTER JOIN の結果を返す場合、 `DataAdapter` は、生成される <xref:System.Data.DataTable.PrimaryKey%2A> に <xref:System.Data.DataTable>値を設定しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-502">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-503">重複する行が正しく解決されることを確認する主キーを明示的に定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-503">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="f2303-504">詳細については、次を参照してください。[主キーを定義する](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-504">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-505">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.Fill%2A>と<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework データ プロバイダーは、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-505">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f2303-506">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-506">The source table is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f2303-507"><paramref name="startRecord" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f2303-507">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="f2303-508">または</span><span class="sxs-lookup"><span data-stu-id="f2303-508">-or-</span></span> 
<span data-ttu-id="f2303-509"><paramref name="maxRecords" /> パラメーターが 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="f2303-509">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-510">このオーバー ロード、<see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" />メソッドが保護されており、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-510">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-511">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-511">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-512">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-512">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-513">データ アダプターにデータを読み込むコマンドの動作を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-513">Gets or sets the behavior of the command used to fill the data adapter.</span></span></summary>
        <value><span data-ttu-id="f2303-514">データ アダプターにデータを読み込むコマンドの <see cref="T:System.Data.CommandBehavior" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-514">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-515">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-515">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-516">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-516">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_FillError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2303-517"><see cref="T:System.Data.DataTable" /> を <see cref="T:System.Data.DataSet" /> に追加し、データ ソース内のスキーマと一致するようにスキーマを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-517">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-518">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-518">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f2303-519">スキーマを挿入する <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-519">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f2303-520">スキーマを挿入する方法を指定する <see cref="T:System.Data.SchemaType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f2303-520">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <summary><span data-ttu-id="f2303-521">"Table" という名前の <see cref="T:System.Data.DataTable" /> を指定された <see cref="T:System.Data.DataSet" /> に追加し、指定された <see cref="T:System.Data.SchemaType" /> に基づいて、データ ソースにあるスキーマと一致するようにスキーマを構成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-521">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="f2303-522"><see cref="T:System.Data.DataTable" /> に追加された <see cref="T:System.Data.DataSet" /> オブジェクトのコレクションへの参照。</span><span class="sxs-lookup"><span data-stu-id="f2303-522">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-523">このメソッドを使用して、データ ソースからスキーマ情報を取得、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-523">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="f2303-524">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作を追加、<xref:System.Data.DataTable>先に<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-524">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-525">列を次に、追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>、し、次の構成を<xref:System.Data.DataColumn>プロパティ、データ ソースに存在する場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-525">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f2303-526"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="f2303-526"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f2303-527">設定する必要があります<xref:System.Data.DataColumn.AutoIncrementStep%2A>と<xref:System.Data.DataColumn.AutoIncrementSeed%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="f2303-527">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f2303-528"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 構成も、<xref:System.Data.DataTable.PrimaryKey%2A>と<xref:System.Data.DataTable.Constraints%2A>に従って、次の規則のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-528"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f2303-529">1 つまたは複数の主キー列がによって返される場合、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>の主キー列として使用される、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-529">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="f2303-530">主キー列が返されない場合は、一意の列の一意の列、すべての一意の列は null 値非許容場合のみ、主キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-530">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="f2303-531">Null を許容すると、任意の列がある場合、<xref:System.Data.UniqueConstraint>に追加されます、<xref:System.Data.ConstraintCollection>が、<xref:System.Data.DataTable.PrimaryKey%2A>プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-531">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="f2303-532">主キー列として、主キー列が使用される主キー列と一意の列の両方が返された場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-532">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-533">主キーと一意制約が追加することに注意してください、<xref:System.Data.ConstraintCollection>前述の規則が、その他の制約に従って、型は追加されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-533">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="f2303-534">一意クラスター化された場合、または SQL Server テーブルの複数の列にインデックスが定義されているし、クラスター化インデックスの列の名前が返されます、別の列のセットで主キー制約が定義されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-534">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f2303-535">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-535">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f2303-536">クエリ ヒントを指定する方法については、次を参照してください。[クエリ ヒント (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-536">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f2303-537">中に主キーの情報が使用される<xref:System.Data.Common.DbDataAdapter.Fill%2A>検索し、置換されたキー列と一致するすべての行にします。</span><span class="sxs-lookup"><span data-stu-id="f2303-537">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="f2303-538">目的の動作でない場合は、使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>スキーマ情報を求められることがなく。</span><span class="sxs-lookup"><span data-stu-id="f2303-538">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="f2303-539">場合、<xref:System.Data.IDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="f2303-539">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-540">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-540">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f2303-541">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-541">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f2303-542">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど。) に整数値を追加してという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-542">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="f2303-543">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-543">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-544"><xref:System.Data.IDbConnection> Select コマンドに関連付けられているオブジェクトを有効にする必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-544">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="f2303-545">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="f2303-545">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f2303-546">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、それは開いたままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-546">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-547">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-547">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f2303-548">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-548">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f2303-549"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="f2303-549">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="f2303-550">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-550">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="f2303-551">詳細については、「[SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f2303-551">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="f2303-552">次の例は、派生クラスでは、 <xref:System.Data.SqlClient.SqlDataAdapter>、入力、<xref:System.Data.DataSet>スキーマ、および返します使用、 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="f2303-552">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-553">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="f2303-553">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-554">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-554">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f2303-555">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-555">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f2303-556"><see cref="T:System.Data.SchemaType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f2303-556">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="f2303-557">指定した <see cref="T:System.Data.DataTable" /> に基いて、指定した <see cref="T:System.Data.SchemaType" /> のスキーマを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-557">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="f2303-558">データ ソースから返されたスキーマ情報が格納された <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-558">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-559"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>メソッドを使用して、データ ソースからスキーマを取得、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-559">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="f2303-560">接続オブジェクトに関連付けられている、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>有効である必要がありますを開く必要はありませんが。</span><span class="sxs-lookup"><span data-stu-id="f2303-560">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-561">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="f2303-561">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f2303-562">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-562">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-563">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作は戻り、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-563">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f2303-564">列を次に、追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>、し、次の構成を<xref:System.Data.DataColumn>プロパティ、データ ソースに存在する場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-564">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f2303-565"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="f2303-565"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f2303-566">設定する必要があります<xref:System.Data.DataColumn.AutoIncrementStep%2A>と<xref:System.Data.DataColumn.AutoIncrementSeed%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="f2303-566">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f2303-567"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 構成も、<xref:System.Data.DataTable.PrimaryKey%2A>と<xref:System.Data.DataTable.Constraints%2A>に従って、次の規則のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-567"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f2303-568">場合、<xref:System.Data.DataTable.PrimaryKey%2A>に対して既に定義されて、 `DataTable`、または`DataTable`データを含む、`PrimaryKey`プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-568">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="f2303-569">1 つまたは複数の主キー列がによって返される場合、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>の主キー列として使用される、`DataTable`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-569">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="f2303-570">主キー列が返されない場合は、一意の列の一意の列、すべての一意の列は null 値非許容場合のみ、主キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-570">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="f2303-571">Null を許容すると、任意の列がある場合、<xref:System.Data.UniqueConstraint>に追加されます、<xref:System.Data.ConstraintCollection>が、`PrimaryKey`プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-571">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="f2303-572">主キー列として、主キー列が使用される主キー列と一意の列の両方が返された場合、`DataTable`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-572">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="f2303-573">主キーと一意制約が追加することに注意してください、<xref:System.Data.ConstraintCollection>前述の規則が、その他の制約に従って、型は追加されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-573">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="f2303-574">このプロセスには、サーバーに複数のラウンドト リップが必要です。</span><span class="sxs-lookup"><span data-stu-id="f2303-574">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="f2303-575">一意クラスター化された場合、または SQL Server テーブルの複数の列にインデックスが定義されているし、クラスター化インデックスの列の名前が返されます、別の列のセットで主キー制約が定義されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-575">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f2303-576">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-576">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f2303-577">クエリ ヒントを指定する方法については、次を参照してください。[クエリ ヒント (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-577">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f2303-578">場合、<xref:System.Data.Common.DbDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="f2303-578">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-579">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-579">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f2303-580">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-580">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f2303-581">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど。) に整数値を追加してという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-581">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="f2303-582">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-582">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-583"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> すべての行は返されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-583"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="f2303-584">使用して、<xref:System.Data.Common.DbDataAdapter.Fill%2A>行を追加する方法、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-584">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-585">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-585">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f2303-586">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-586">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f2303-587"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="f2303-587">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="f2303-588">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-588">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="f2303-589">詳細については、「[SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f2303-589">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="f2303-590">次の例は、派生クラスでは、 <xref:System.Data.SqlClient.SqlDataAdapter>、入力、<xref:System.Data.DataSet>スキーマ、および返します使用、 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="f2303-590">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-591">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="f2303-591">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-592">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-592">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f2303-593">スキーマを挿入する <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-593">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f2303-594">スキーマを挿入する方法を指定する <see cref="T:System.Data.SchemaType" /> 値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="f2303-594">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f2303-595">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f2303-595">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="f2303-596">指定した <see cref="T:System.Data.DataTable" /> に <see cref="T:System.Data.DataSet" /> を追加し、指定した <see cref="T:System.Data.SchemaType" /> および <see cref="T:System.Data.DataTable" /> に基づいて、データ ソース内のスキーマと一致するようにスキーマを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-596">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="f2303-597"><see cref="T:System.Data.DataTable" /> に追加された <see cref="T:System.Data.DataSet" /> オブジェクトのコレクションへの参照。</span><span class="sxs-lookup"><span data-stu-id="f2303-597">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-598">このメソッドを使用して、データ ソースからスキーマ情報を取得、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-598">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="f2303-599">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作を追加、<xref:System.Data.DataTable>先に<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-599">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-600">列を次に、追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>、し、次の構成を<xref:System.Data.DataColumn>プロパティ、データ ソースに存在する場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-600">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f2303-601"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="f2303-601"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f2303-602">設定する必要があります<xref:System.Data.DataColumn.AutoIncrementStep%2A>と<xref:System.Data.DataColumn.AutoIncrementSeed%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="f2303-602">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f2303-603"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 構成も、<xref:System.Data.DataTable.PrimaryKey%2A>と<xref:System.Data.DataTable.Constraints%2A>に従って、次の規則のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-603"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f2303-604">1 つまたは複数の主キー列がによって返される場合、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>の主キー列として使用される、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-604">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="f2303-605">主キー列が返されない場合は、一意の列の一意の列、すべての一意の列は null 値非許容場合のみ、主キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-605">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="f2303-606">Null を許容すると、任意の列がある場合、<xref:System.Data.UniqueConstraint>に追加されます、<xref:System.Data.ConstraintCollection>が、<xref:System.Data.DataTable.PrimaryKey%2A>プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-606">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="f2303-607">主キー列として、主キー列が使用される主キー列と一意の列の両方が返された場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-607">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-608">主キーと一意制約が追加することに注意してください、<xref:System.Data.ConstraintCollection>前述の規則が、その他の制約に従って、型は追加されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-608">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="f2303-609">一意クラスター化された場合、または SQL Server テーブルの複数の列にインデックスが定義されているし、クラスター化インデックスの列の名前が返されます、別の列のセットで主キー制約が定義されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-609">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f2303-610">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-610">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f2303-611">クエリ ヒントを指定する方法については、次を参照してください。[クエリ ヒント (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-611">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f2303-612">中に主キーの情報が使用される<xref:System.Data.Common.DbDataAdapter.Fill%2A>検索し、置換されたキー列と一致するすべての行にします。</span><span class="sxs-lookup"><span data-stu-id="f2303-612">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="f2303-613">目的の動作でない場合は、使用<xref:System.Data.Common.DbDataAdapter.Fill%2A>スキーマ情報を求められることがなく。</span><span class="sxs-lookup"><span data-stu-id="f2303-613">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="f2303-614">場合、<xref:System.Data.Common.DbDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="f2303-614">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-615">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-615">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f2303-616">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-616">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f2303-617">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど。) に整数値を追加してという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-617">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="f2303-618">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-618">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-619"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-619">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f2303-620">このような状況では、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-620">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f2303-621">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-621">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f2303-622">場合<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-622">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f2303-623">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-623">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f2303-624">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-624">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f2303-625"><xref:System.Data.IDbConnection> Select コマンドに関連付けられているオブジェクトを有効にする必要がありますが、開く必要はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-625">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="f2303-626">場合、<xref:System.Data.IDbConnection>を閉じてから、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="f2303-626">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f2303-627">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、それは開いたままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-627">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-628">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-628">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f2303-629">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-629">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f2303-630"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="f2303-630">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="f2303-631">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-631">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="f2303-632">詳細については、「[SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f2303-632">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="f2303-633">次の例は、派生クラスでは、 <xref:System.Data.SqlClient.SqlDataAdapter>、入力、<xref:System.Data.DataSet>スキーマ、および返します使用、 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="f2303-633">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f2303-634">スキーマの取得元のソース テーブルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="f2303-634">A source table from which to get the schema could not be found.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-635">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="f2303-635">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-636">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-636">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f2303-637">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-637">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f2303-638"><see cref="T:System.Data.SchemaType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f2303-638">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="f2303-639">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span><span class="sxs-lookup"><span data-stu-id="f2303-639">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="f2303-640"><see cref="T:System.Data.CommandBehavior" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f2303-640">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="f2303-641">指定した <see cref="T:System.Data.DataTable" />、コマンド文字列、および <see cref="T:System.Data.SchemaType" /> 値に基づいて、指定した <see cref="T:System.Data.CommandBehavior" /> のスキーマを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-641">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="f2303-642">データ ソースから返されたスキーマ情報が格納された <see cref="T:System.Data.DataTable" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-642">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-643"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>メソッドを使用して、データ ソースからスキーマを取得、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-643">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="f2303-644">接続オブジェクトに関連付けられている、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>有効である必要がありますを開く必要はありませんが。</span><span class="sxs-lookup"><span data-stu-id="f2303-644">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-645">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="f2303-645">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f2303-646">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-646">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-647">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作を追加、<xref:System.Data.DataTable>先に<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-647">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-648">列を次に、追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>、し、次の構成を<xref:System.Data.DataColumn>プロパティ、データ ソースに存在する場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-648">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f2303-649"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="f2303-649"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f2303-650">設定する必要があります<xref:System.Data.DataColumn.AutoIncrementStep%2A>と<xref:System.Data.DataColumn.AutoIncrementSeed%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="f2303-650">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f2303-651"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 構成も、<xref:System.Data.DataTable.PrimaryKey%2A>と<xref:System.Data.DataTable.Constraints%2A>に従って、次の規則のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-651"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f2303-652">1 つまたは複数の主キー列がによって返される場合、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>の主キー列として使用される、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-652">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="f2303-653">主キー列が返されない場合は、一意の列の一意の列、すべての一意の列は null 値非許容場合のみ、主キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-653">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="f2303-654">Null を許容すると、任意の列がある場合、<xref:System.Data.UniqueConstraint>に追加されます、<xref:System.Data.ConstraintCollection>が、<xref:System.Data.DataTable.PrimaryKey%2A>プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-654">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="f2303-655">主キー列として、主キー列が使用される主キー列と一意の列の両方が返された場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-655">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-656">主キーと一意制約が追加することに注意してください、<xref:System.Data.ConstraintCollection>前述の規則が、その他の制約に従って、型は追加されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-656">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="f2303-657">一意クラスター化された場合、または SQL Server テーブルの複数の列にインデックスが定義されているし、クラスター化インデックスの列の名前が返されます、別の列のセットで主キー制約が定義されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-657">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f2303-658">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-658">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f2303-659">クエリ ヒントを指定する方法については、次を参照してください。[クエリ ヒント (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-659">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f2303-660">場合、<xref:System.Data.IDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="f2303-660">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-661">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-661">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f2303-662">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-662">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f2303-663">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど。) に整数値を追加してという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-663">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="f2303-664">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-664">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> すべての行は返されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="f2303-666">使用して、<xref:System.Data.Common.DbDataAdapter.Fill%2A>行を追加する方法、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-666">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-667">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-667">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f2303-668">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-668">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f2303-669"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="f2303-669">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="f2303-670">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-670">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="f2303-671">詳細については、「[SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f2303-671">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-672">この実装の<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />メソッドが保護されており、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-672">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-673">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-673">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-674">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-674">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f2303-675">データ ソースからのスキーマを格納する <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-675">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="f2303-676"><see cref="T:System.Data.SchemaType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f2303-676">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="f2303-677">データ ソースから行を取得するために使用する SQL SELECT ステートメント。</span><span class="sxs-lookup"><span data-stu-id="f2303-677">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f2303-678">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f2303-678">The name of the source table to use for table mapping.</span></span></param>
        <param name="behavior"><span data-ttu-id="f2303-679"><see cref="T:System.Data.CommandBehavior" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="f2303-679">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="f2303-680">指定した <see cref="T:System.Data.DataTable" /> に <see cref="T:System.Data.DataSet" /> を追加し、指定した <see cref="T:System.Data.SchemaType" /> に基づいて、データ ソース内のスキーマと一致するようにスキーマを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-680">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="f2303-681">データ ソースから返されたスキーマ情報が格納された、<see cref="T:System.Data.DataTable" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f2303-681">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-682"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>メソッドを使用して、データ ソースからスキーマを取得、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-682">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="f2303-683">接続オブジェクトに関連付けられている、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>有効である必要がありますを開く必要はありませんが。</span><span class="sxs-lookup"><span data-stu-id="f2303-683">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="f2303-684">前に、接続が閉じられた場合<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、そのはデータの取得に開かれた後で終了します。</span><span class="sxs-lookup"><span data-stu-id="f2303-684">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="f2303-685">接続が前に開いている場合は<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されると、未処理のままにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-685">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="f2303-686">A<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>操作を追加、<xref:System.Data.DataTable>先に<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-686">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-687">列を次に、追加、<xref:System.Data.DataColumnCollection>の<xref:System.Data.DataTable>、し、次の構成を<xref:System.Data.DataColumn>プロパティ、データ ソースに存在する場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-687">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="f2303-688"><xref:System.Data.DataColumn.AutoIncrement%2A>。</span><span class="sxs-lookup"><span data-stu-id="f2303-688"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="f2303-689">設定する必要があります<xref:System.Data.DataColumn.AutoIncrementStep%2A>と<xref:System.Data.DataColumn.AutoIncrementSeed%2A>とは別にします。</span><span class="sxs-lookup"><span data-stu-id="f2303-689">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="f2303-690"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 構成も、<xref:System.Data.DataTable.PrimaryKey%2A>と<xref:System.Data.DataTable.Constraints%2A>に従って、次の規則のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-690"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="f2303-691">1 つまたは複数の主キー列がによって返される場合、<xref:System.Data.IDbDataAdapter.SelectCommand%2A>の主キー列として使用される、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-691">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="f2303-692">主キー列が返されない場合は、一意の列の一意の列、すべての一意の列は null 値非許容場合のみ、主キーとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-692">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="f2303-693">Null を許容すると、任意の列がある場合、<xref:System.Data.UniqueConstraint>に追加されます、<xref:System.Data.ConstraintCollection>が、<xref:System.Data.DataTable.PrimaryKey%2A>プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-693">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="f2303-694">主キー列として、主キー列が使用される主キー列と一意の列の両方が返された場合、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-694">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-695">主キーと一意制約が追加することに注意してください、<xref:System.Data.ConstraintCollection>前述の規則が、その他の制約に従って、型は追加されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-695">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="f2303-696">一意クラスター化された場合、または SQL Server テーブルの複数の列にインデックスが定義されているし、クラスター化インデックスの列の名前が返されます、別の列のセットで主キー制約が定義されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-696">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="f2303-697">主キー列の名前を返すには、主キー インデックスの名前を指定する SELECT ステートメントでクエリ ヒントを使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-697">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="f2303-698">クエリ ヒントを指定する方法については、次を参照してください。[クエリ ヒント (TRANSACT-SQL)](https://msdn.microsoft.com/library/ms181714.aspx)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-698">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="f2303-699">場合、<xref:System.Data.IDataAdapter>設定中に重複する列を検出すると、 <xref:System.Data.DataTable>、パターンを使用して、後続の列の名前を生成します"*columnname*1"、"*columnname*2"、"*columnname*3"、という具合です。</span><span class="sxs-lookup"><span data-stu-id="f2303-699">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="f2303-700">配置された受信データに名前のない列が含まれている場合、<xref:System.Data.DataSet>に従ってパターン"Column1"、"Column2"など。</span><span class="sxs-lookup"><span data-stu-id="f2303-700">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="f2303-701">複数の結果セットが追加されたとき、<xref:System.Data.DataSet>各結果セットが別のテーブルに配置されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-701">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="f2303-702">追加の結果セットは指定したテーブル名 (たとえば、"Table"、"Table1"、"Table2"、およびなど。) に整数値を追加してという名前です。</span><span class="sxs-lookup"><span data-stu-id="f2303-702">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="f2303-703">列とテーブルの名前を使用してアプリケーションでは、これらの名前付けパターンとの競合が発生しないことを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-703">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="f2303-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-704">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f2303-705">このような状況では、<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>大文字小文字の比較、対応するテーブルを検索を実行し、完全一致が存在しない場合は、新しいテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-705">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="f2303-706">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-706">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="f2303-707">場合<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-707">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f2303-708">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-708">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f2303-709">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-709">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f2303-710"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> すべての行は返されません。</span><span class="sxs-lookup"><span data-stu-id="f2303-710"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="f2303-711">使用して、<xref:System.Data.Common.DbDataAdapter.Fill%2A>行を追加する方法、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-711">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-712">実装、複数の結果を返すバッチ SQL ステートメントを処理するときに<xref:System.Data.Common.DbDataAdapter.FillSchema%2A>の .NET Framework Data Provider for OLE DB は、最初の結果のみのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-712">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="f2303-713">複数の結果のスキーマ情報を取得する<xref:System.Data.Common.DbDataAdapter.Fill%2A>で、<xref:System.Data.MissingSchemaAction>に設定`AddWithKey`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-713">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="f2303-714"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> を使用する場合、.NET Framework SQL Server 用データ プロバイダーは、実行するステートメントに FOR BROWSE 句を追加します。</span><span class="sxs-lookup"><span data-stu-id="f2303-714">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="f2303-715">SET FMTONLY ON ステートメントの使用による干渉などの副作用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-715">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="f2303-716">詳細については、「[SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="f2303-716">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-717">この実装の<see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />メソッドが保護されており、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-717">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-718">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-718">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-719">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-719">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="f2303-720">パラメーターを取得するコマンドのインデックス。</span><span class="sxs-lookup"><span data-stu-id="f2303-720">The index of the command to retrieve the parameter from.</span></span></param>
        <param name="parameterIndex"><span data-ttu-id="f2303-721">コマンド内のパラメーターのインデックス。</span><span class="sxs-lookup"><span data-stu-id="f2303-721">The index of the parameter within the command.</span></span></param>
        <summary><span data-ttu-id="f2303-722">現在のバッチのコマンドの 1 つから <see cref="T:System.Data.IDataParameter" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="f2303-722">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span></span></summary>
        <returns><span data-ttu-id="f2303-723">指定された <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-723">The <see cref="T:System.Data.IDataParameter" /> specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-724"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-724">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f2303-725">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f2303-725">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f2303-726">アダプターでバッチがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f2303-726">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-727">このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-727">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f2303-728">継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスが、バッチを実行できるようにするには、このメソッドをオーバーライドするバッチをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="f2303-728">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="f2303-729">実装を使用して、 <paramref name="commandIdentifier" /> 、要求されたコマンドを見つけるに提供し、使用して、<paramref name="parameterIndex" />要求されたパラメーターを提供します。</span><span class="sxs-lookup"><span data-stu-id="f2303-729">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span></span> <span data-ttu-id="f2303-730">たとえば、 <paramref name="commandIdentifier" /> 0 と<paramref name="parameterIndex" />0 のバッチの最初のコマンドから、最初のパラメーターを返します。</span><span class="sxs-lookup"><span data-stu-id="f2303-730">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-731">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-731">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-732">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-732">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int *  *  -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int *  *  -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="error" Type="System.Exception" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="f2303-733">バッチ内の個々のコマンドの、0 から始まる列の序数。</span><span class="sxs-lookup"><span data-stu-id="f2303-733">The zero-based column ordinal of the individual command within the batch.</span></span></param>
        <param name="recordsAffected"><span data-ttu-id="f2303-734">バッチ内に指定されたコマンドの影響を受ける、データ ストア内の行数。</span><span class="sxs-lookup"><span data-stu-id="f2303-734">The number of rows affected in the data store by the specified command within the batch.</span></span></param>
        <param name="error"><span data-ttu-id="f2303-735">指定されたコマンドの実行中にスローされた <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-735">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span></span> <span data-ttu-id="f2303-736">例外がスローされなかった場合は、<see langword="null" /> (Visual Basic では <see langword="Nothing" />) を返します。</span><span class="sxs-lookup"><span data-stu-id="f2303-736">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span></span></param>
        <summary><span data-ttu-id="f2303-737">バッチ更新内の、個々の更新の試行に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="f2303-737">Returns information about an individual update attempt within a larger batched update.</span></span></summary>
        <returns><span data-ttu-id="f2303-738">バッチ更新内の、個々の更新の試行に関する情報。</span><span class="sxs-lookup"><span data-stu-id="f2303-738">Information about an individual update attempt within a larger batched update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-739">バッチ更新ロジックをサポートするデータ プロバイダーで、一連の仮想メソッドをオーバーライドする必要があります、<xref:System.Data.Common.DbDataAdapter>クラス。</span><span class="sxs-lookup"><span data-stu-id="f2303-739">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="f2303-740">`GetBatchedRecordsAffected` これらの仮想メソッドのいずれかを表します。</span><span class="sxs-lookup"><span data-stu-id="f2303-740">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="f2303-741">`DbDataAdapter`クラスが依存`GetBatchedRecordsAffected`をバッチ内で個々 の更新の試行の成否を判断し、対応する各マークので<xref:System.Data.DataRow>それに応じて。</span><span class="sxs-lookup"><span data-stu-id="f2303-741">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-742">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-742">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2303-743">SQL SELECT ステートメントの実行時にユーザーが設定したパラメーターを取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-743">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="f2303-744">ユーザーが設定したパラメーターが格納された <see cref="T:System.Data.IDataParameter" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f2303-744">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-745">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-745">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2303-746"><see cref="T:System.Data.Common.DbDataAdapter" /> のバッチ処理を初期化します。</span><span class="sxs-lookup"><span data-stu-id="f2303-746">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-747"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-747">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f2303-748">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f2303-748">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f2303-749">アダプターでバッチがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f2303-749">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-750">このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-750">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f2303-751">継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスがこのメソッドをオーバーライドするバッチをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="f2303-751">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="f2303-752">このメソッドでは、クラスに、バッチ処理をサポートするために必要なリソースを初期化する機会が与えられます。</span><span class="sxs-lookup"><span data-stu-id="f2303-752">This method gives the class the opportunity to initialize any resources necessary to support batching.</span></span> <span data-ttu-id="f2303-753">など、クラスは、バッチ内のコマンドのセットを保持するデータ構造を割り当てることがあります。</span><span class="sxs-lookup"><span data-stu-id="f2303-753">For example, a class may allocate a data structure to hold the set of commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-754">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-754">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-755">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-755">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-756">データ ソースに新しいレコードを挿入するコマンドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-756">Gets or sets a command used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="f2303-757">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-757">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-758">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、プライマリ キーの情報が存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.InsertCommand%2A>が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-758">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2303-759">次の例は、派生クラスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-759">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-760">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-760">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-761">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-761">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-762">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-762">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f2303-763">イベント データを格納している <see cref="T:System.Data.Common.RowUpdatedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-763">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f2303-764">.NET Framework データ プロバイダーの <see langword="RowUpdated" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="f2303-764">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-765">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-765">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f2303-766">概要については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-766">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-767">オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />、派生クラスでは、基本クラスを呼び出す、<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2303-767">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-768">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-768">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-769">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-769">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f2303-770">イベント データを格納している <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-770">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="f2303-771">.NET Framework データ プロバイダーの <see langword="RowUpdating" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="f2303-771">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-772">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-772">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="f2303-773">概要については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-773">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-774">オーバーライドするときに<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />、派生クラスでは、ベースのクラスを呼び出すことを確認する<see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />メソッド。</span><span class="sxs-lookup"><span data-stu-id="f2303-774">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-775">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-775">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-776">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-776">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-777">データ ソース内のレコードを選択するコマンドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-777">Gets or sets a command used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="f2303-778">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-778">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f2303-779">次の例は、派生クラスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-779">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-780">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-780">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-781">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-781">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-782">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-782">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-783">データ セットからレコードを削除する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-783">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="f2303-784"><see cref="T:System.Data.IDbCommand" /> 中に、データ セット内の削除された行に対応するデータ ソース内のレコードを削除するために使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-784">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-785">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="f2303-785">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f2303-786">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="f2303-786">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="f2303-787">詳細については、「<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-787">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-788">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-788">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-789">データ ソースに新しいレコードを挿入する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-789">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="f2303-790">データ セット内の新しい行に対応するデータ ソース内のレコードを挿入するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-790">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-791">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="f2303-791">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f2303-792">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="f2303-792">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="f2303-793">詳細については、「<xref:System.Data.IDbDataAdapter.InsertCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-793">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-794">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-794">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-795">データ ソース内のレコードを選択する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-795">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="f2303-796">データ セットに挿入するレコードをデータ ソースから選択するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-796">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-797">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="f2303-797">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f2303-798">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="f2303-798">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="f2303-799">詳細については、「<xref:System.Data.IDbDataAdapter.SelectCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-799">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-800">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-800">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-801">データ ソース内のレコードを更新する SQL ステートメントを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-801">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="f2303-802">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-802">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-803">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="f2303-803">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f2303-804">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.Data.IDbDataAdapter> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="f2303-804">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="f2303-805">詳細については、「<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-805">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-806">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-806">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("use 'protected DbDataAdapter(DbDataAdapter)' ctor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2303-807">現在のインスタンスのコピーである新しいオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-807">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="f2303-808">このインスタンスのコピーである新しいオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-808">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-809">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="f2303-809">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f2303-810">これは、<xref:System.Data.Common.DbDataAdapter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="f2303-810">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="f2303-811">詳細については、「<xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f2303-811">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-812">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-812">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f2303-813"><see cref="T:System.Data.Common.DbDataAdapter" /> のバッチ処理を終了します。</span><span class="sxs-lookup"><span data-stu-id="f2303-813">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-814"><xref:System.Data.Common.DbDataAdapter>、このメソッドはスロー<xref:System.NotSupportedException>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-814">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="f2303-815">継承するクラス<xref:System.Data.Common.DbDataAdapter>バッチのサポートを提供するには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="f2303-815">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f2303-816">アダプターでバッチがサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f2303-816">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="f2303-817">このメソッドが保護され、.NET Framework データ プロバイダーで使用するために設計されています。</span><span class="sxs-lookup"><span data-stu-id="f2303-817">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="f2303-818">継承するクラスの場合<see cref="T:System.Data.Common.DbDataAdapter" />クラスがこのメソッドをオーバーライドするバッチをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="f2303-818">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="f2303-819">このメソッドでは、クラスに、バッチ処理をサポートするために割り当てられているリソースを破棄する機会が与えられます。</span><span class="sxs-lookup"><span data-stu-id="f2303-819">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span></span> <span data-ttu-id="f2303-820">たとえば、クラスのバッチ内のコマンドを保持するデータ構造体割り当てを解除可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-820">For example, the class may deallocate the data structure that holds the commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-821">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-821">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-822">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-822">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f2303-823"><see cref="T:System.Data.DataSet" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-823">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-824">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-824">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="f2303-825">データ ソースの更新に使用する <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f2303-825">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <summary><span data-ttu-id="f2303-826">指定した <see cref="T:System.Data.DataSet" /> 内の配列での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-826">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="f2303-827"><see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span><span class="sxs-lookup"><span data-stu-id="f2303-827">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-828">アプリケーションを呼び出すと、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッド、<xref:System.Data.Common.DbDataAdapter>を調べ、<xref:System.Data.DataRow.RowState%2A>プロパティ、で構成されているインデックスの順序に基づいて、各行の繰り返し必要なINSERT、UPDATE、またはDELETEステートメントを実行し、<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f2303-828">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-829">たとえば、<xref:System.Data.Common.DbDataAdapter.Update%2A>で INSERT ステートメントとし、もう 1 つの DELETE ステートメント内の行の順序付けに期限の後に、DELETE ステートメントを実行する場合があります、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-829">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-830">これらのステートメントがバッチ処理として実行しないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-830">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f2303-831">アプリケーションが呼び出すことができます、<xref:System.Data.DataSet.GetChanges%2A>ときの一連のステートメントの種類 (たとえば、更新する前に挿入) を制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-831">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="f2303-832">詳細については、次を参照してください。 [Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-832">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f2303-833">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-833">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f2303-834">ただし、作成することができます、<xref:System.Data.SqlClient.SqlCommandBuilder>または<xref:System.Data.OleDb.OleDbCommandBuilder>設定した場合、SQL ステートメントの単一テーブルの更新プログラムを自動的に生成するオブジェクト、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-834">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f2303-835">次に、設定しない追加の SQL ステートメントがによって生成される、 **CommandBuilder**します。</span><span class="sxs-lookup"><span data-stu-id="f2303-835">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="f2303-836">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-836">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-837">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-837">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f2303-838"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、更新プログラムを実行する前に、最初のマッピングを示す表から行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-838">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f2303-839"><xref:System.Data.Common.DbDataAdapter.Update%2A>の値を使用して行を更新し、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-839">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f2303-840">返されるその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-840">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f2303-841">すべてのデータが読み込まれた後、 <xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントを発生すると、ユーザーは、検査、調整できるようにする<xref:System.Data.DataSet>行と、コマンドによって返されるパラメーターを出力します。</span><span class="sxs-lookup"><span data-stu-id="f2303-841">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f2303-842">行が正常に更新した後、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="f2303-842">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f2303-843">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>実行の順序は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-843">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f2303-844">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-844">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f2303-845"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f2303-845">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f2303-846">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="f2303-846">The command executes.</span></span>  
  
4.  <span data-ttu-id="f2303-847">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果が配置されます、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-847">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f2303-848">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-848">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f2303-849"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f2303-849">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f2303-850"><xref:System.Data.DataRow.AcceptChanges%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-850"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f2303-851">各コマンドに関連付けられている、<xref:System.Data.Common.DbDataAdapter>関連付けられているパラメーターのコレクションを持ちます。</span><span class="sxs-lookup"><span data-stu-id="f2303-851">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="f2303-852">パラメーターを使用して、現在行にマップされます、`SourceColumn`と`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラス。</span><span class="sxs-lookup"><span data-stu-id="f2303-852">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f2303-853">`SourceColumn` 指す、<xref:System.Data.DataTable>列を<xref:System.Data.Common.DbDataAdapter>参照を現在の行のパラメーターの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-853">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f2303-854">`SourceColumn` すべてのテーブル マップを適用する前に、マップされていない列の名前を参照します。</span><span class="sxs-lookup"><span data-stu-id="f2303-854">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f2303-855">場合`SourceColumn`参照を存在しない列に、実行されるアクションは、次のいずれかに依存<xref:System.Data.MissingMappingAction>値。</span><span class="sxs-lookup"><span data-stu-id="f2303-855">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f2303-856">列挙値</span><span class="sxs-lookup"><span data-stu-id="f2303-856">Enumeration value</span></span>|<span data-ttu-id="f2303-857">実行されるアクション</span><span class="sxs-lookup"><span data-stu-id="f2303-857">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f2303-858">ソース列名とテーブル名を使用して、<xref:System.Data.DataSet>マッピングが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-858">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f2303-859">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-859">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f2303-860">マッピングが明示的に設定すると、入力パラメーターのマッピングがない、通常、エラーの結果です。</span><span class="sxs-lookup"><span data-stu-id="f2303-860">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f2303-861">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-861">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f2303-862">`SourceColumn`出力の値をマップするプロパティを使用しても、または入力/出力パラメーターを`DataSet`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-862">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f2303-863">存在しない列を参照する場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-863">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f2303-864">`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラスは、列の値の元の現在、または提案済みバージョンを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-864">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="f2303-865">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含めるによく使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-865">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-866">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</span><span class="sxs-lookup"><span data-stu-id="f2303-866">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f2303-867">更新操作を続行すると、エラーが発生した場合に例外を生成せず、設定、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>プロパティを`true`呼び出す前に<xref:System.Data.Common.DbDataAdapter.Update%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-867">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f2303-868">内の行ごとにエラーに応答することがありますも、 `RowUpdated` DataAdapter のイベント。</span><span class="sxs-lookup"><span data-stu-id="f2303-868">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f2303-869">内で例外を生成せず、更新操作を続行する、`RowUpdated`イベント、設定、<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>のプロパティ、<xref:System.Data.Common.RowUpdatedEventArgs>に<xref:System.Data.UpdateStatus.Continue>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-869">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2303-870">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、データ ソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-870">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f2303-871"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-871">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f2303-872">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-872">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="f2303-873">更新する <see cref="T:System.Data.DataRow" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-873">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="f2303-874">または</span><span class="sxs-lookup"><span data-stu-id="f2303-874">-or-</span></span> 
<span data-ttu-id="f2303-875">更新する <see cref="T:System.Data.DataTable" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-875">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="f2303-876">または</span><span class="sxs-lookup"><span data-stu-id="f2303-876">-or-</span></span> 
<span data-ttu-id="f2303-877">ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-877">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f2303-878">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span><span class="sxs-lookup"><span data-stu-id="f2303-878">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-879">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-879">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-880">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-880">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-881">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-881">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f2303-882">データ ソースの更新に使用した <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-882">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="f2303-883">指定した <see cref="T:System.Data.DataSet" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-883">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="f2303-884"><see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span><span class="sxs-lookup"><span data-stu-id="f2303-884">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-885">アプリケーションを呼び出すと、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッド、<xref:System.Data.Common.DbDataAdapter>を調べ、<xref:System.Data.DataRow.RowState%2A>プロパティ、で構成されているインデックスの順序に基づいて、各行の繰り返し必要なINSERT、UPDATE、またはDELETEステートメントを実行し、<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f2303-885">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-886">たとえば、<xref:System.Data.Common.DbDataAdapter.Update%2A>で INSERT ステートメントとし、もう 1 つの DELETE ステートメント内の行の順序付けに期限の後に、DELETE ステートメントを実行する場合があります、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-886">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-887">これらのステートメントがバッチ処理として実行しないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-887">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f2303-888">アプリケーションが呼び出すことができます、<xref:System.Data.DataSet.GetChanges%2A>ときの一連のステートメントの種類 (たとえば、更新する前に挿入) を制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-888">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="f2303-889">詳細については、次を参照してください。 [Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-889">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f2303-890">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-890">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f2303-891">ただし、作成することができます、<xref:System.Data.SqlClient.SqlCommandBuilder>または<xref:System.Data.OleDb.OleDbCommandBuilder>設定した場合、SQL ステートメントの単一テーブルの更新プログラムを自動的に生成するオブジェクト、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-891">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f2303-892">次に、設定しない追加の SQL ステートメントがによって生成される、 **CommandBuilder**します。</span><span class="sxs-lookup"><span data-stu-id="f2303-892">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="f2303-893">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-893">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-894">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-894">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f2303-895"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、更新プログラムを実行する前に、最初のマッピングを示す表から行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-895">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f2303-896"><xref:System.Data.Common.DbDataAdapter.Update%2A>の値を使用して行を更新し、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-896">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f2303-897">返されるその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-897">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f2303-898">すべてのデータが読み込まれた後、 <xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントを発生すると、ユーザーは、検査、調整できるようにする<xref:System.Data.DataSet>行と、コマンドによって返されるパラメーターを出力します。</span><span class="sxs-lookup"><span data-stu-id="f2303-898">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f2303-899">行が正常に更新した後、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="f2303-899">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f2303-900">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>実行の順序は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-900">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f2303-901">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-901">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f2303-902"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f2303-902">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f2303-903">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="f2303-903">The command executes.</span></span>  
  
4.  <span data-ttu-id="f2303-904">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納し、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-904">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f2303-905">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-905">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f2303-906"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f2303-906">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f2303-907"><xref:System.Data.DataRow.AcceptChanges%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-907"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f2303-908">各コマンドに関連付けられている、<xref:System.Data.Common.DbDataAdapter>関連付けられているパラメーターのコレクションを持ちます。</span><span class="sxs-lookup"><span data-stu-id="f2303-908">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="f2303-909">パラメーターを使用して、現在行にマップされます、`SourceColumn`と`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラス。</span><span class="sxs-lookup"><span data-stu-id="f2303-909">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f2303-910">`SourceColumn` 指す、<xref:System.Data.DataTable>列を<xref:System.Data.Common.DbDataAdapter>参照を現在の行のパラメーターの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-910">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f2303-911">`SourceColumn` すべてのテーブル マップを適用する前に、マップされていない列の名前を参照します。</span><span class="sxs-lookup"><span data-stu-id="f2303-911">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f2303-912">場合`SourceColumn`参照を存在しない列に、実行されるアクションは、次のいずれかに依存<xref:System.Data.MissingMappingAction>値。</span><span class="sxs-lookup"><span data-stu-id="f2303-912">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f2303-913">列挙値</span><span class="sxs-lookup"><span data-stu-id="f2303-913">Enumeration value</span></span>|<span data-ttu-id="f2303-914">実行されるアクション</span><span class="sxs-lookup"><span data-stu-id="f2303-914">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f2303-915">ソース列名とテーブル名を使用して、<xref:System.Data.DataSet>マッピングが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-915">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f2303-916">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-916">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f2303-917">マッピングが明示的に設定すると、入力パラメーターのマッピングがない、通常、エラーの結果です。</span><span class="sxs-lookup"><span data-stu-id="f2303-917">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f2303-918">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-918">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f2303-919">`SourceColumn`出力の値をマップするプロパティを使用しても、または入力/出力パラメーターを`DataSet`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-919">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f2303-920">存在しない列を参照する場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-920">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f2303-921">`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラスは、列の値の元の現在、または提案済みバージョンを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-921">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="f2303-922">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含めるによく使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-922">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-923">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</span><span class="sxs-lookup"><span data-stu-id="f2303-923">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f2303-924">更新操作を続行すると、エラーが発生した場合に例外を生成せず、設定、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>プロパティを`true`呼び出す前に<xref:System.Data.Common.DbDataAdapter.Update%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-924">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f2303-925">内の行ごとにエラーに応答することがありますも、 `RowUpdated` DataAdapter のイベント。</span><span class="sxs-lookup"><span data-stu-id="f2303-925">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f2303-926">内で例外を生成せず、更新操作を続行する、`RowUpdated`イベント、設定、<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>のプロパティ、<xref:System.Data.Common.RowUpdatedEventArgs>に<xref:System.Data.UpdateStatus.Continue>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-926">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2303-927">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、データ ソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-927">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f2303-928">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-928">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f2303-929">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span><span class="sxs-lookup"><span data-stu-id="f2303-929">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-930">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-930">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-931">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-931">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-932">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-932">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="f2303-933">データ ソースの更新に使用した <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-933">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="f2303-934">指定した <see cref="T:System.Data.DataTable" /> での挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-934">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="f2303-935"><see cref="T:System.Data.DataTable" /> 内で正常に更新された行の数。</span><span class="sxs-lookup"><span data-stu-id="f2303-935">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-936">アプリケーションを呼び出すと、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッド、<xref:System.Data.Common.DbDataAdapter>を調べ、<xref:System.Data.DataRow.RowState%2A>プロパティ、で構成されているインデックスの順序に基づいて、各行の繰り返し必要なINSERT、UPDATE、またはDELETEステートメントを実行し、<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f2303-936">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-937">たとえば、<xref:System.Data.Common.DbDataAdapter.Update%2A>で INSERT ステートメントとし、もう 1 つの DELETE ステートメント内の行の順序付けに期限の後に、DELETE ステートメントを実行する場合があります、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-937">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-938">これらのステートメントがバッチ処理として実行しないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-938">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f2303-939">アプリケーションが呼び出すことができます、<xref:System.Data.DataSet.GetChanges%2A>ときの一連のステートメントの種類 (たとえば、更新する前に挿入) を制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-939">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="f2303-940">詳細については、次を参照してください。 [Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-940">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f2303-941">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-941">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f2303-942">ただし、作成することができます、<xref:System.Data.SqlClient.SqlCommandBuilder>または<xref:System.Data.OleDb.OleDbCommandBuilder>設定した場合、SQL ステートメントの単一テーブルの更新プログラムを自動的に生成するオブジェクト、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-942">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f2303-943">次に、設定しない追加の SQL ステートメントがによって生成される、 **CommandBuilder**します。</span><span class="sxs-lookup"><span data-stu-id="f2303-943">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="f2303-944">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-944">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-945">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-945">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f2303-946"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、更新プログラムを実行する前に、最初のマッピングを示す表から行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-946">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f2303-947"><xref:System.Data.Common.DbDataAdapter.Update%2A>の値を使用して行を更新し、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-947">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f2303-948">返されるその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-948">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f2303-949">すべてのデータが読み込まれた後、 <xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントを発生すると、ユーザーは、検査、調整できるようにする<xref:System.Data.DataSet>行と、コマンドによって返されるパラメーターを出力します。</span><span class="sxs-lookup"><span data-stu-id="f2303-949">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f2303-950">行が正常に更新した後、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="f2303-950">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f2303-951">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>実行の順序は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-951">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f2303-952">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-952">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f2303-953"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f2303-953">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f2303-954">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="f2303-954">The command executes.</span></span>  
  
4.  <span data-ttu-id="f2303-955">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納し、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-955">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f2303-956">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-956">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f2303-957"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f2303-957">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f2303-958"><xref:System.Data.DataRow.AcceptChanges%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-958"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f2303-959">各コマンドに関連付けられている、<xref:System.Data.Common.DbDataAdapter>関連付けられているパラメーターのコレクションを持ちます。</span><span class="sxs-lookup"><span data-stu-id="f2303-959">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="f2303-960">パラメーターを使用して、現在行にマップされます、`SourceColumn`と`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラス。</span><span class="sxs-lookup"><span data-stu-id="f2303-960">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f2303-961">`SourceColumn` 指す、<xref:System.Data.DataTable>列を<xref:System.Data.Common.DbDataAdapter>参照を現在の行のパラメーターの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-961">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f2303-962">`SourceColumn` すべてのテーブル マップを適用する前に、マップされていない列の名前を参照します。</span><span class="sxs-lookup"><span data-stu-id="f2303-962">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f2303-963">場合`SourceColumn`参照を存在しない列に、実行されるアクションは、次のいずれかに依存<xref:System.Data.MissingMappingAction>値。</span><span class="sxs-lookup"><span data-stu-id="f2303-963">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f2303-964">列挙値</span><span class="sxs-lookup"><span data-stu-id="f2303-964">Enumeration value</span></span>|<span data-ttu-id="f2303-965">実行されるアクション</span><span class="sxs-lookup"><span data-stu-id="f2303-965">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f2303-966">ソース列名とテーブル名を使用して、<xref:System.Data.DataSet>マッピングが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-966">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f2303-967">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-967">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f2303-968">マッピングが明示的に設定すると、入力パラメーターのマッピングがない、通常、エラーの結果です。</span><span class="sxs-lookup"><span data-stu-id="f2303-968">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f2303-969">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-969">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f2303-970">`SourceColumn`出力の値をマップするプロパティを使用しても、または入力/出力パラメーターを`DataSet`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-970">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f2303-971">存在しない列を参照する場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-971">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f2303-972">`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラスは、列の値の元の現在、または提案済みバージョンを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-972">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="f2303-973">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含めるによく使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-973">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-974">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</span><span class="sxs-lookup"><span data-stu-id="f2303-974">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f2303-975">更新操作を続行すると、エラーが発生した場合に例外を生成せず、設定、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>プロパティを`true`呼び出す前に<xref:System.Data.Common.DbDataAdapter.Update%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-975">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f2303-976">内の行ごとにエラーに応答することがありますも、 `RowUpdated` DataAdapter のイベント。</span><span class="sxs-lookup"><span data-stu-id="f2303-976">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f2303-977">内で例外を生成せず、更新操作を続行する、`RowUpdated`イベント、設定、<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>のプロパティ、<xref:System.Data.Common.RowUpdatedEventArgs>に<xref:System.Data.UpdateStatus.Continue>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-977">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2303-978">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、データ ソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-978">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f2303-979"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-979">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f2303-980">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-980">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="f2303-981">更新する <see cref="T:System.Data.DataRow" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-981">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="f2303-982">または</span><span class="sxs-lookup"><span data-stu-id="f2303-982">-or-</span></span> 
<span data-ttu-id="f2303-983">更新する <see cref="T:System.Data.DataTable" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-983">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="f2303-984">または</span><span class="sxs-lookup"><span data-stu-id="f2303-984">-or-</span></span> 
<span data-ttu-id="f2303-985">ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-985">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f2303-986">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span><span class="sxs-lookup"><span data-stu-id="f2303-986">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-987">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-987">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-988">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-988">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-989">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-989">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="f2303-990">データ ソースの更新に使用する <see cref="T:System.Data.DataRow" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="f2303-990">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="f2303-991">使用する <see cref="P:System.Data.IDataAdapter.TableMappings" /> コレクション。</span><span class="sxs-lookup"><span data-stu-id="f2303-991">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span></span></param>
        <summary><span data-ttu-id="f2303-992">指定した <see cref="T:System.Data.DataSet" /> オブジェクトの配列内の挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-992">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span></span></summary>
        <returns><span data-ttu-id="f2303-993"><see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span><span class="sxs-lookup"><span data-stu-id="f2303-993">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-994">アプリケーションを呼び出すと、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッド、<xref:System.Data.Common.DbDataAdapter>を調べ、<xref:System.Data.DataRow.RowState%2A>プロパティ、で構成されているインデックスの順序に基づいて、各行の繰り返し必要なINSERT、UPDATE、またはDELETEステートメントを実行し、<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f2303-994">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-995">たとえば、<xref:System.Data.Common.DbDataAdapter.Update%2A>で INSERT ステートメントとし、もう 1 つの DELETE ステートメント内の行の順序付けに期限の後に、DELETE ステートメントを実行する場合があります、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-995">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-996">これらのステートメントがバッチ処理として実行しないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-996">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f2303-997">アプリケーションが呼び出すことができます、<xref:System.Data.DataSet.GetChanges%2A>ときの一連のステートメントの種類 (たとえば、更新する前に挿入) を制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-997">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="f2303-998">詳細については、次を参照してください。 [Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-998">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f2303-999">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-999">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f2303-1000">ただし、作成することができます、<xref:System.Data.SqlClient.SqlCommandBuilder>または<xref:System.Data.OleDb.OleDbCommandBuilder>設定した場合、SQL ステートメントの単一テーブルの更新プログラムを自動的に生成するオブジェクト、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-1000">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f2303-1001">次に、設定しない追加の SQL ステートメントがによって生成される、 **CommandBuilder**します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1001">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="f2303-1002">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1002">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-1003">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1003">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f2303-1004"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、更新プログラムを実行する前に、最初のマッピングを示す表から行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1004">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f2303-1005"><xref:System.Data.Common.DbDataAdapter.Update%2A>の値を使用して行を更新し、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-1005">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f2303-1006">返されるその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1006">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f2303-1007">すべてのデータが読み込まれた後、 <xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントを発生すると、ユーザーは、検査、調整できるようにする<xref:System.Data.DataSet>行と、コマンドによって返されるパラメーターを出力します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1007">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f2303-1008">行が正常に更新した後、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1008">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f2303-1009">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>実行の順序は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-1009">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f2303-1010">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1010">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f2303-1011"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1011">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f2303-1012">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1012">The command executes.</span></span>  
  
4.  <span data-ttu-id="f2303-1013">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納し、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1013">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f2303-1014">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1014">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f2303-1015"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1015">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f2303-1016"><xref:System.Data.DataRow.AcceptChanges%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1016"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f2303-1017">各コマンドに関連付けられている、<xref:System.Data.Common.DbDataAdapter>関連付けられているパラメーターのコレクションを持ちます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1017">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="f2303-1018">パラメーターを使用して、現在行にマップされます、`SourceColumn`と`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラス。</span><span class="sxs-lookup"><span data-stu-id="f2303-1018">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f2303-1019">`SourceColumn` 指す、<xref:System.Data.DataTable>列を<xref:System.Data.Common.DbDataAdapter>参照を現在の行のパラメーターの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1019">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f2303-1020">`SourceColumn` すべてのテーブル マップを適用する前に、マップされていない列の名前を参照します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1020">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f2303-1021">場合`SourceColumn`参照を存在しない列に、実行されるアクションは、次のいずれかに依存<xref:System.Data.MissingMappingAction>値。</span><span class="sxs-lookup"><span data-stu-id="f2303-1021">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f2303-1022">列挙値</span><span class="sxs-lookup"><span data-stu-id="f2303-1022">Enumeration value</span></span>|<span data-ttu-id="f2303-1023">実行されるアクション</span><span class="sxs-lookup"><span data-stu-id="f2303-1023">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f2303-1024">ソース列名とテーブル名を使用して、<xref:System.Data.DataSet>マッピングが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-1024">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f2303-1025">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1025">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f2303-1026">マッピングが明示的に設定すると、入力パラメーターのマッピングがない、通常、エラーの結果です。</span><span class="sxs-lookup"><span data-stu-id="f2303-1026">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f2303-1027">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1027">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f2303-1028">`SourceColumn`出力の値をマップするプロパティを使用しても、または入力/出力パラメーターを`DataSet`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1028">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f2303-1029">存在しない列を参照する場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1029">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f2303-1030">`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラスは、列の値の元の現在、または提案済みバージョンを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1030">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="f2303-1031">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含めるによく使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1031">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-1032">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</span><span class="sxs-lookup"><span data-stu-id="f2303-1032">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f2303-1033">更新操作を続行すると、エラーが発生した場合に例外を生成せず、設定、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>プロパティを`true`呼び出す前に<xref:System.Data.Common.DbDataAdapter.Update%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1033">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f2303-1034">内の行ごとにエラーに応答することがありますも、 `RowUpdated` DataAdapter のイベント。</span><span class="sxs-lookup"><span data-stu-id="f2303-1034">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f2303-1035">内で例外を生成せず、更新操作を続行する、`RowUpdated`イベント、設定、<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>のプロパティ、<xref:System.Data.Common.RowUpdatedEventArgs>に<xref:System.Data.UpdateStatus.Continue>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1035">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f2303-1036"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-1036">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f2303-1037">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-1037">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="f2303-1038">更新する <see cref="T:System.Data.DataRow" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-1038">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="f2303-1039">または</span><span class="sxs-lookup"><span data-stu-id="f2303-1039">-or-</span></span> 
<span data-ttu-id="f2303-1040">更新する <see cref="T:System.Data.DataTable" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-1040">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="f2303-1041">または</span><span class="sxs-lookup"><span data-stu-id="f2303-1041">-or-</span></span> 
<span data-ttu-id="f2303-1042">ソースとして使用する <see cref="T:System.Data.DataSet" /> が存在しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-1042">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f2303-1043">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span><span class="sxs-lookup"><span data-stu-id="f2303-1043">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-1044">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-1044">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-1045">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-1045">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-1046">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-1046">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="f2303-1047">データ ソースの更新に使用する <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-1047">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="f2303-1048">テーブル マップに使用するソース テーブルの名前。</span><span class="sxs-lookup"><span data-stu-id="f2303-1048">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="f2303-1049"><see cref="T:System.Data.DataSet" /> 内の指定した <see cref="T:System.Data.DataTable" /> 名を持つ挿入行、更新行、または削除行に対して INSERT、UPDATE、または DELETE ステートメントを個別に実行することで、データベースの値を更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1049">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="f2303-1050"><see cref="T:System.Data.DataSet" /> 内で正常に更新された行の数。</span><span class="sxs-lookup"><span data-stu-id="f2303-1050">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-1051">アプリケーションを呼び出すと、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッド、<xref:System.Data.Common.DbDataAdapter>を調べ、<xref:System.Data.DataRow.RowState%2A>プロパティ、で構成されているインデックスの順序に基づいて、各行の繰り返し必要なINSERT、UPDATE、またはDELETEステートメントを実行し、<xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f2303-1051">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-1052">たとえば、<xref:System.Data.Common.DbDataAdapter.Update%2A>で INSERT ステートメントとし、もう 1 つの DELETE ステートメント内の行の順序付けに期限の後に、DELETE ステートメントを実行する場合があります、<xref:System.Data.DataTable>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1052">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="f2303-1053">これらのステートメントがバッチ処理として実行しないことに注意してください。各行は個別に更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1053">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="f2303-1054">アプリケーションが呼び出すことができます、<xref:System.Data.DataSet.GetChanges%2A>ステートメントの種類のシーケンスを制御する必要がありますの状況でメソッド (たとえば、更新する前に挿入)。</span><span class="sxs-lookup"><span data-stu-id="f2303-1054">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="f2303-1055">詳細については、次を参照してください。 [Dataadapter によるデータ ソースを更新](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1055">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="f2303-1056">かどうかには、INSERT、UPDATE、または DELETE ステートメントが指定されていませんが、<xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1056">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="f2303-1057">ただし、作成することができます、<xref:System.Data.SqlClient.SqlCommandBuilder>または<xref:System.Data.OleDb.OleDbCommandBuilder>設定した場合、SQL ステートメントの単一テーブルの更新プログラムを自動的に生成するオブジェクト、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-1057">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="f2303-1058">次に、設定しない追加の SQL ステートメントがによって生成される、 **CommandBuilder**します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1058">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="f2303-1059">この生成ロジックではキー列の情報に含まれる、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1059">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-1060">詳細については、次を参照してください。 [Commandbuilder でのコマンドの生成](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1060">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="f2303-1061"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、シナリオをサポートしている場所、<xref:System.Data.DataSet>複数含まれている<xref:System.Data.DataTable>大文字と小文字が異なる名前を持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f2303-1061">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="f2303-1062">内で同じ名前が異なる場合は、複数のテーブルが存在する場合、 `DataSet`、<xref:System.Data.Common.DbDataAdapter.Update%2A>対応するテーブルを検索する大文字の比較を実行し、完全一致が存在しない場合、例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1062">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="f2303-1063">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1063">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="f2303-1064">場合<xref:System.Data.Common.DbDataAdapter.Update%2A>が呼び出されます、 <xref:System.Data.DataSet> 1 つだけ含ま<xref:System.Data.DataTable>、大文字と小文字の名前を持つ異なるを<xref:System.Data.DataTable>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1064">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="f2303-1065">このシナリオで比較では大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="f2303-1065">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="f2303-1066">次の c# コードでは、この動作を示します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1066">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="f2303-1067"><xref:System.Data.Common.DbDataAdapter.Update%2A>メソッドは、更新プログラムを実行する前に、最初のマッピングを示す表から行を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1067">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="f2303-1068"><xref:System.Data.Common.DbDataAdapter.Update%2A>の値を使用して行を更新し、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="f2303-1068">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="f2303-1069">返されるその他の行は無視されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1069">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="f2303-1070">すべてのデータが読み込まれた後、 <xref:System.Data.DataSet>、<xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントを発生すると、ユーザーは、検査、調整できるようにする<xref:System.Data.DataSet>行と、コマンドによって返されるパラメーターを出力します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1070">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="f2303-1071">行が正常に更新した後、その行に対する変更が受け入れられます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1071">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="f2303-1072">使用する場合<xref:System.Data.Common.DbDataAdapter.Update%2A>実行の順序は、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="f2303-1072">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="f2303-1073">内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1073">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="f2303-1074"><xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1074">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="f2303-1075">コマンドを実行します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1075">The command executes.</span></span>  
  
4.  <span data-ttu-id="f2303-1076">コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果に格納し、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1076">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="f2303-1077">配置される出力パラメーターがある場合、<xref:System.Data.DataRow>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1077">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="f2303-1078"><xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1078">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="f2303-1079"><xref:System.Data.DataRow.AcceptChanges%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1079"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="f2303-1080">各コマンドに関連付けられている、<xref:System.Data.Common.DbDataAdapter>関連付けられているパラメーターのコレクションを持ちます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1080">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="f2303-1081">パラメーターを使用して、現在行にマップされます、`SourceColumn`と`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラス。</span><span class="sxs-lookup"><span data-stu-id="f2303-1081">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="f2303-1082">`SourceColumn` 指す、<xref:System.Data.DataTable>列を<xref:System.Data.Common.DbDataAdapter>参照を現在の行のパラメーターの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1082">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="f2303-1083">`SourceColumn` すべてのテーブル マップを適用する前に、マップされていない列の名前を参照します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1083">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="f2303-1084">場合`SourceColumn`参照を存在しない列に、実行されるアクションは、次のいずれかに依存<xref:System.Data.MissingMappingAction>値。</span><span class="sxs-lookup"><span data-stu-id="f2303-1084">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="f2303-1085">列挙値</span><span class="sxs-lookup"><span data-stu-id="f2303-1085">Enumeration value</span></span>|<span data-ttu-id="f2303-1086">実行されるアクション</span><span class="sxs-lookup"><span data-stu-id="f2303-1086">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="f2303-1087">ソース列名とテーブル名を使用して、<xref:System.Data.DataSet>マッピングが存在しない場合。</span><span class="sxs-lookup"><span data-stu-id="f2303-1087">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="f2303-1088">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1088">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="f2303-1089">マッピングが明示的に設定すると、入力パラメーターのマッピングがない、通常、エラーの結果です。</span><span class="sxs-lookup"><span data-stu-id="f2303-1089">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="f2303-1090">A<xref:System.SystemException>が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1090">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="f2303-1091">`SourceColumn`出力の値をマップするプロパティを使用しても、または入力/出力パラメーターを`DataSet`します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1091">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="f2303-1092">存在しない列を参照する場合、例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1092">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="f2303-1093">`SourceVersion`プロパティの .NET Framework データ プロバイダーの`Parameter`クラスは、列の値の元の現在、または提案済みバージョンを使用するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1093">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="f2303-1094">この機能は、オプティミスティック同時実行制御違反をチェックする UPDATE ステートメントの WHERE 句に元の値を含めるによく使用します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1094">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f2303-1095">行の更新中にエラーが発生した場合は、例外がスローされ、更新プログラムの実行は廃止されました。</span><span class="sxs-lookup"><span data-stu-id="f2303-1095">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="f2303-1096">更新操作を続行すると、エラーが発生した場合に例外を生成せず、設定、<xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>プロパティを`true`呼び出す前に<xref:System.Data.Common.DbDataAdapter.Update%2A>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1096">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="f2303-1097">内の行ごとにエラーに応答することがありますも、 `RowUpdated` DataAdapter のイベント。</span><span class="sxs-lookup"><span data-stu-id="f2303-1097">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="f2303-1098">内で例外を生成せず、更新操作を続行する、`RowUpdated`イベント、設定、<xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>のプロパティ、<xref:System.Data.Common.RowUpdatedEventArgs>に<xref:System.Data.UpdateStatus.Continue>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1098">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2303-1099">次の例は、派生クラスでは、 <xref:System.Data.OleDb.OleDbDataAdapter>、データ ソースを更新します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1099">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f2303-1100"><see cref="T:System.Data.DataSet" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-1100">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f2303-1101">ソース テーブルが無効です。</span><span class="sxs-lookup"><span data-stu-id="f2303-1101">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="f2303-1102">INSERT、UPDATE、DELETE の各ステートメントを実行しようとしましたが、影響を受けたレコードはありませんでした。</span><span class="sxs-lookup"><span data-stu-id="f2303-1102">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-1103">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-1103">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-1104">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-1104">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-1105">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-1105">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-1106">バッチ処理サポートを有効にするかどうか、および、1 回のバッチで実行可能なコマンド数を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1106">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="f2303-1107">バッチごとに処理される行数。</span><span class="sxs-lookup"><span data-stu-id="f2303-1107">The number of rows to process per batch.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="f2303-1108">値</span><span class="sxs-lookup"><span data-stu-id="f2303-1108">Value is</span></span> 
 </term><description> <span data-ttu-id="f2303-1109">効果</span><span class="sxs-lookup"><span data-stu-id="f2303-1109">Effect</span></span> 
 </description></listheader><item><term> <span data-ttu-id="f2303-1110">0</span><span class="sxs-lookup"><span data-stu-id="f2303-1110">0</span></span> 
 </term><description> <span data-ttu-id="f2303-1111">バッチのサイズに制限はありません。</span><span class="sxs-lookup"><span data-stu-id="f2303-1111">There is no limit on the batch size.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f2303-1112">1</span><span class="sxs-lookup"><span data-stu-id="f2303-1112">1</span></span> 
 </term><description> <span data-ttu-id="f2303-1113">バッチ更新を無効にします。</span><span class="sxs-lookup"><span data-stu-id="f2303-1113">Disables batch updating.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="f2303-1114">&gt; 1</span><span class="sxs-lookup"><span data-stu-id="f2303-1114">&gt; 1</span></span> 
 </term><description> <span data-ttu-id="f2303-1115">一度に送信される変更内容は <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> のバッチ サイズに基づきます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1115">Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="f2303-1116">これを 1 以外の値に設定する場合、すべてのコマンドに関連付けられている、<see cref="T:System.Data.Common.DbDataAdapter" />必要があります、<see cref="P:System.Data.IDbCommand.UpdatedRowSource" />プロパティに設定**None**または**OutputParameters**します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1116">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span></span> <span data-ttu-id="f2303-1117">それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1117">An exception will be thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-1118">使用して、<xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A>からの変更でデータ ソースを更新するプロパティ、<xref:System.Data.DataSet>します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1118">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f2303-1119">データ プロバイダーは、バッチ処理をサポートする場合は、サーバーへのラウンドト リップ数を減らすことで、アプリケーションのパフォーマンスを向上このことができます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1119">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="f2303-1120">ADO.NET 2.0 では、SQL Server (SqlClient) と Oracle (OracleClient) の .NET データ プロバイダーのこのプロパティはサポートされています。</span><span class="sxs-lookup"><span data-stu-id="f2303-1120">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="f2303-1121">サイズの大きいバッチを実行すると、パフォーマンスが低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-1121">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="f2303-1122">そのため、アプリケーションを実装する前に、バッチの最適なサイズ設定をテストする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f2303-1122">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="f2303-1123"><xref:System.ArgumentOutOfRangeException> 0 より小さい値が数値に設定されている場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1123">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-1124">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-1124">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-1125">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-1125">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-1126">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-1126">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f2303-1127">データ ソース内のレコードを更新するコマンドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1127">Gets or sets a command used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="f2303-1128">データ セット内の変更された行に対応するデータ ソース内のレコードを更新するために、<see cref="T:System.Data.IDbCommand" /> 中に使用する <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="f2303-1128">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f2303-1129">中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、プライマリ キーの情報が存在する場合、 <xref:System.Data.DataSet>、<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>が自動的に生成されます。</span><span class="sxs-lookup"><span data-stu-id="f2303-1129">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f2303-1130">次の例は、派生クラスを作成します。<xref:System.Data.OleDb.OleDbDataAdapter>および一部のプロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="f2303-1130">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="f2303-1131">データの操作 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-1131">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="f2303-1132">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="f2303-1132">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="f2303-1133">ADO.NET の概要</span><span class="sxs-lookup"><span data-stu-id="f2303-1133">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
