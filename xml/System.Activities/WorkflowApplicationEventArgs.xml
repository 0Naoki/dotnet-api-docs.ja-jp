<Type Name="WorkflowApplicationEventArgs" FullName="System.Activities.WorkflowApplicationEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da0309481c006bfece09137116adfa7f065dce46" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69337906" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowApplicationEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowApplicationEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplicationEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowApplicationEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplicationEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type WorkflowApplicationEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Activities.WorkflowApplication" /> に関連付けられたイベントの基本クラス。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Activities.WorkflowApplicationEventArgs> は、<xref:System.Activities.WorkflowApplication.Unloaded%2A> インスタンスの <xref:System.Activities.WorkflowApplication> ハンドラーでも使用されます。  
  
   
  
## Examples  
 <xref:System.Activities.WorkflowApplicationEventArgs> インスタンスの <xref:System.Activities.WorkflowApplication.Unloaded%2A> ハンドラーに渡される <xref:System.Activities.WorkflowApplication> を調べ、アンロードされたワークフローの <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> を表示するコード サンプルを次に示します。  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetInstanceExtensions&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetInstanceExtensions&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetInstanceExtensions&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInstanceExtensions(Of T As Class) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetInstanceExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetInstanceExtensions : unit -&gt; seq&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="workflowApplicationEventArgs.GetInstanceExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">拡張機能の型。</typeparam>
        <summary>指定された型の拡張機能のコレクションを取得します。</summary>
        <returns>拡張機能のコレクション。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceId">
      <MemberSignature Language="C#" Value="public Guid InstanceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid InstanceId" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid InstanceId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceId : Guid" Usage="System.Activities.WorkflowApplicationEventArgs.InstanceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ワークフロー インスタンスの一意の識別子。</summary>
        <value>一意の識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Activities.WorkflowApplicationEventArgs> インスタンスの <xref:System.Activities.WorkflowApplication.Unloaded%2A> ハンドラーに渡される <xref:System.Activities.WorkflowApplication> を調べ、アンロードされたワークフローの <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> を表示するコード サンプルを次に示します。  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
