<Type Name="WorkflowApplication" FullName="System.Activities.WorkflowApplication">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="aed6b6f994120238c715839c3c767b2a95d2547e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WorkflowApplication : System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowApplication extends System.Activities.Hosting.WorkflowInstance" />
  <TypeSignature Language="DocId" Value="T:System.Activities.WorkflowApplication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowApplication&#xA;Inherits WorkflowInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowApplication sealed : System::Activities::Hosting::WorkflowInstance" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Hosting.WorkflowInstance</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d8b55-101">ワークフローの単一インスタンスにホストを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8b55-101">Provides a host for a single instance of a workflow.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-102"><xref:System.Activities.WorkflowApplication> クラスは、単一のワークフロー インスタンスにホストを提供します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-102">The <xref:System.Activities.WorkflowApplication> class provides a host for a single workflow instance.</span></span> <span data-ttu-id="d8b55-103">このクラスは、ワークフロー ランタイムによって管理される実際のワークフロー インスタンスのプロキシとなります。</span><span class="sxs-lookup"><span data-stu-id="d8b55-103">It is a proxy to the actual workflow instance that is managed by the workflow runtime.</span></span> <span data-ttu-id="d8b55-104"><xref:System.Activities.WorkflowApplication> のユーザーは、ワークフロー ランタイムにワークフロー インスタンス上でアクションを実行させることができます。そのためには、<xref:System.Activities.WorkflowApplication> オブジェクト上で該当するメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-104">Users of <xref:System.Activities.WorkflowApplication> can instruct the workflow runtime to perform actions on a workflow instance by calling the appropriate methods on a <xref:System.Activities.WorkflowApplication> object.</span></span> <span data-ttu-id="d8b55-105">要求されたアクションが有効でない場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-105">If a requested action is not valid, an exception is thrown.</span></span>  
  
 <span data-ttu-id="d8b55-106"><xref:System.Activities.WorkflowApplication> を使用して、次の作業を実行できます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-106">Using <xref:System.Activities.WorkflowApplication> you can perform the following tasks:</span></span>  
  
1.  <span data-ttu-id="d8b55-107">新しいワークフロー インスタンスを作成するか、インスタンス ストアからワークフロー インスタンスをロードします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-107">Create a new workflow instance, or load a workflow instance from an instance store.</span></span>  
  
2.  <span data-ttu-id="d8b55-108">ワークフロー インスタンス内でアクティビティによって使用される拡張機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-108">Provide extensions to be used by activities within a workflow instance.</span></span>  
  
3.  <span data-ttu-id="d8b55-109">ワークフロー インスタンスの実行を制御します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-109">Control the execution of a workflow instance.</span></span>  
  
4.  <span data-ttu-id="d8b55-110">ワークフロー インスタンス内でアクティビティによって作成されるブックマークを再開します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-110">Resume a bookmark created by an activity within a workflow instance.</span></span>  
  
5.  <span data-ttu-id="d8b55-111">ワークフロー インスタンスを永続化するかアンロードします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-111">Persist or unload a workflow instance.</span></span>  
  
6.  <span data-ttu-id="d8b55-112">ワークフロー インスタンスのライフサイクル イベントが通知されるようにします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-112">Be notified of workflow instance lifecycle events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-113">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-113">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-114">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-114">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-115">このワークフローが完了すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-115">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-116">
            <see cref="T:System.Activities.WorkflowApplication" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-116">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="d8b55-117">ワークフロー定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-117">The workflow definition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-118">指定されたワークフロー定義で <see cref="T:System.Activities.WorkflowApplication" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-118">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8b55-119">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-119">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-120">1 つの <xref:System.Activities.WorkflowApplication> アクティビティで構成されるワークフロー定義を使用して `DiceRoll` インスタンスが構築されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-120">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `DiceRoll` activity.</span></span> <span data-ttu-id="d8b55-121">`DiceRoll` アクティビティには、サイコロ振り操作の結果を表す 2 つの出力引数があります。</span><span class="sxs-lookup"><span data-stu-id="d8b55-121">The `DiceRoll` activity has two output arguments that represent the results of the dice roll operation.</span></span> <span data-ttu-id="d8b55-122">ワークフローが完了すると、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドラーで出力が取得され、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-122">When the workflow completes, the outputs are retrieved in the <xref:System.Activities.WorkflowApplication.Completed%2A> handler, and the following output is displayed to the console.</span></span>  
  
```Output  
Workflow aae3fb48-7229-4737-b969-d63e131b96b3 Completed.   
The two dice are 1 and 5.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#130](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#130)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#21](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="d8b55-123">ワークフロー定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-123">The workflow definition.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="d8b55-124">定義 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-124">The definition identity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-125">指定されたワークフロー定義と定義 ID で <see cref="T:System.Activities.WorkflowApplication" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-125">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class with the specified workflow definition and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="d8b55-126">ワークフロー定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-126">The workflow definition.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="d8b55-127">ワークフロー定義のルート アクティビティ上で定義される、引数名でキー指定された引数の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-127">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-128">指定されたワークフロー定義および引数値を使用する <see cref="T:System.Activities.WorkflowApplication" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-128">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8b55-129">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-129">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-130">2 つの入力引数、および引数名でキー指定された 2 つの値が渡される入力引数のディクショナリを持つ 1 つの <xref:System.Activities.WorkflowApplication> アクティビティで構成されたワークフロー定義を使用して、`Divide` インスタンスが構築されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-130">A <xref:System.Activities.WorkflowApplication> instance is constructed using using a workflow definition consisting of a single `Divide` activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name.</span></span> <span data-ttu-id="d8b55-131">必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> への呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-131">The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-132">このワークフローが完了すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-132">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Completed  
500 / 36 = 13 Remainder 32  
Workflow 8dc844c1-bbf8-4b21-a9a2-05f89e416055 Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#120](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#120)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#10](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowApplication (System.Activities.Activity workflowDefinition, System.Collections.Generic.IDictionary&lt;string,object&gt; inputs, System.Activities.WorkflowIdentity definitionIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Activities.Activity workflowDefinition, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; inputs, class System.Activities.WorkflowIdentity definitionIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (workflowDefinition As Activity, inputs As IDictionary(Of String, Object), definitionIdentity As WorkflowIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowApplication(System::Activities::Activity ^ workflowDefinition, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ inputs, System::Activities::WorkflowIdentity ^ definitionIdentity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="workflowDefinition" Type="System.Activities.Activity" />
        <Parameter Name="inputs" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
      </Parameters>
      <Docs>
        <param name="workflowDefinition">
          <span data-ttu-id="d8b55-133">ワークフロー定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-133">The workflow definition.</span>
          </span>
        </param>
        <param name="inputs">
          <span data-ttu-id="d8b55-134">定義 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-134">The definition identity.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="d8b55-135">ワークフロー定義のルート アクティビティ上で定義される、引数名でキー指定された引数の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-135">The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-136">指定されたワークフロー定義、引数値、および定義 ID を使用する <see cref="T:System.Activities.WorkflowApplication" /> クラスの新しいインスタンスを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-136">Creates a new instance of the <see cref="T:System.Activities.WorkflowApplication" /> class that uses the specified workflow definition and argument values, and definition identity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Abort">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-137">ワークフロー ランタイムにこのワークフロー インスタンスを中止すべきであると伝えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-137">Notifies the workflow runtime that this workflow instance should abort.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-138"><xref:System.Activities.WorkflowApplication> によってホストされているワークフローを中止すると、<xref:System.Activities.WorkflowApplication.Aborted%2A> ハンドラーは呼び出されますが、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドラーは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="d8b55-138">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-139">ワークフロー ランタイムにこのワークフロー インスタンスを中止すべきであると伝えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-139">Notifies the workflow runtime that this workflow instance should abort.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-140"><xref:System.Activities.WorkflowApplication> によってホストされているワークフローを中止すると、<xref:System.Activities.WorkflowApplication.Aborted%2A> ハンドラーは呼び出されますが、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドラーは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="d8b55-140">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-141">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-141">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-142">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-142">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-143">ワークフローの開始後に、<xref:System.Activities.WorkflowApplication.Abort%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-143">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="d8b55-144">このワークフローを中止すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-144">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Idle.   
Workflow 3b76d562-516a-4a52-b17c-0f2ce531ad93 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The workflow has been aborted.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Abort(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="d8b55-145">要求を中止する理由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-145">The reason for the request to abort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-146">ワークフロー ランタイムに、指定された理由でこのワークフロー インスタンスを中止すべきであると伝えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-146">Notifies the workflow runtime that this workflow instance should abort for the specified reason.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-147"><xref:System.Activities.WorkflowApplication> によってホストされているワークフローを中止すると、<xref:System.Activities.WorkflowApplication.Aborted%2A> ハンドラーは呼び出されますが、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドラーは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="d8b55-147">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-148">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-148">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-149">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-149">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-150">ワークフローの開始後に、<xref:System.Activities.WorkflowApplication.Abort%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-150">After the workflow is started, <xref:System.Activities.WorkflowApplication.Abort%2A> is called.</span></span> <span data-ttu-id="d8b55-151">このワークフローを中止すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-151">When the workflow is aborted, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Idle.   
Workflow 607b042e-98db-4bbe-abe8-f4d750feec41 Aborted  
Exception: System.Activities.WorkflowApplicationAbortedException  
The reason for aborting the workflow.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#11](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aborted">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationAbortedEventArgs&gt; Aborted" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Aborted" />
      <MemberSignature Language="VB.NET" Value="Public Property Aborted As Action(Of WorkflowApplicationAbortedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ Aborted { Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationAbortedEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-152">ワークフロー インスタンスが中止されると呼び出される <see cref="T:System.Action`1" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-152">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance is aborted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b55-153">ワークフロー インスタンスが中止されると呼び出されるアクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-153">The action that is invoked when the workflow instance is aborted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-154"><xref:System.Activities.WorkflowApplication> によってホストされているワークフローを中止すると、<xref:System.Activities.WorkflowApplication.Aborted%2A> ハンドラーは呼び出されますが、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドラーは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="d8b55-154">When a workflow hosted by a <xref:System.Activities.WorkflowApplication> is aborted, the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler is invoked and the <xref:System.Activities.WorkflowApplication.Completed%2A> handler is not invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-155"><xref:System.Activities.WorkflowApplicationAbortedEventArgs> インスタンスの <xref:System.Activities.WorkflowApplication.Aborted%2A> ハンドラーに渡される <xref:System.Activities.WorkflowApplication> を調べ、ワークフローが中止された理由に関する情報を表示するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-155">The following code example inspects the <xref:System.Activities.WorkflowApplicationAbortedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Aborted%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about why workflow was aborted.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#5](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitialInstanceValues">
      <MemberSignature Language="C#" Value="public void AddInitialInstanceValues (System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,object&gt; writeOnlyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddInitialInstanceValues(class System.Collections.Generic.IDictionary`2&lt;class System.Xml.Linq.XName, object&gt; writeOnlyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddInitialInstanceValues (writeOnlyValues As IDictionary(Of XName, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddInitialInstanceValues(System::Collections::Generic::IDictionary&lt;System::Xml::Linq::XName ^, System::Object ^&gt; ^ writeOnlyValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writeOnlyValues" Type="System.Collections.Generic.IDictionary&lt;System.Xml.Linq.XName,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="writeOnlyValues">
          <span data-ttu-id="d8b55-156">最初の永続化によって含まれるメタデータ値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-156">The metadata values to be included with the first persistence.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-157">新しいインスタンスの最初の永続化によって含まれるインスタンスのメタデータ値を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-157">Specifies instance metadata values that are included with the first persistence of a new instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-158">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、ワークフローを非同期的に取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-158">Cancels a workflow asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-159"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-159"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="d8b55-160">取り消し操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-160">The method to be called when the cancel operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-161">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-161">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-162">指定された <see cref="T:System.AsyncCallback" /> およびユーザー指定状態を使用して、ワークフロー インスタンスを非同期的に取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-162">Cancels a workflow instance asynchronously using the specified <see cref="T:System.AsyncCallback" /> and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-163">非同期取り消し操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-163">A reference to the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-164">取り消し操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndCancel%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-164">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="d8b55-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> メソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-165"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="d8b55-166"><xref:System.Activities.WorkflowApplication.EndCancel%2A> は、呼び出されたときに取り消し操作が完了していなかった場合、取り消し操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-166">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="d8b55-167">既定では、取り消し操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> から <xref:System.Activities.WorkflowApplication.EndCancel%2A> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-167">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-168">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフローを非同期的に取り消します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-168">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-169"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-169"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-170">取り消し操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-170">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-171">取り消し操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-171">The method to be called when the cancel operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-172">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-172">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-173">指定されたタイムアウト期間、<see cref="T:System.AsyncCallback" />、およびユーザー指定状態を使用して、ワークフロー インスタンスを非同期的に取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-173">Cancels a workflow instance asynchronously using the specified time-out interval, <see cref="T:System.AsyncCallback" />, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-174">非同期取り消し操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-174">A reference to the asynchronous cancel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-175">取り消し操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndCancel%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-175">To determine whether the cancel operation was successful, call <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span> <span data-ttu-id="d8b55-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> パラメーターで指定されたメソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-176"><xref:System.Activities.WorkflowApplication.EndCancel%2A> can be called from inside or outside of the method specified in the `callback` parameter.</span></span> <span data-ttu-id="d8b55-177"><xref:System.Activities.WorkflowApplication.EndCancel%2A> は、呼び出されたときに取り消し操作が完了していなかった場合、取り消し操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-177">If <xref:System.Activities.WorkflowApplication.EndCancel%2A> is called before the cancel operation completes, it blocks until the cancel operation completes.</span></span> <span data-ttu-id="d8b55-178">`timeOut` パラメーターによって指定された期間内に取り消し操作が完了しない場合、<xref:System.TimeoutException> が <xref:System.Activities.WorkflowApplication.EndCancel%2A> からスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-178">If the cancel operation does not complete in the interval specified by the `timeOut` parameter, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndCancel%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-179">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフローを非同期的に取り消します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-179">This method cancels a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-180"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-180"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-181">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、既定のインスタンス所有者を非同期的に作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-181">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-182">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-182">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="d8b55-183">定義 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-183">The definition identity.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="d8b55-184">ID フィルター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-184">The identity filter.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-185">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-185">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-186">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-186">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-187">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、指定したインスタンス ストア、定義 ID、ID フィルター、コールバック、および状態を持つ既定のインスタンス所有者を非同期的に作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-187">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-188">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-188">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginCreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginCreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginCreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-189">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-189">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="d8b55-190">定義 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-190">The definition identity.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="d8b55-191">ID フィルター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-191">The identity filter.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-192">ロード開始操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-192">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-193">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-193">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-194">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-194">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-195">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、指定したインスタンス ストア、定義 ID、ID フィルター、タイムアウト間隔、コールバック、および状態を持つ既定のインスタンス所有者を非同期的に作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-195">Creates a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, definition identity, identity filter, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-196">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-196">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginDeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-197">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、既定のインスタンス所有者を非同期的に削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-197">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-198">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-198">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-199">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-199">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-200">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-200">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-201">指定したインスタンス ストア、コールバック、および状態で <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、既定のインスタンス所有者を非同期的に削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-201">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-202">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-202">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginDeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginDeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginDeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-203">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-203">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-204">ロード開始操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-204">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-205">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-205">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-206">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-206">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-207">指定したインスタンス ストア、タイムアウト間隔、コールバック、および状態で <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、既定のインスタンス所有者を非同期的に削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-207">Deletes a default instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-208">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-208">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-209">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、インスタンス所有者を非同期的に取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-209">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="d8b55-210">インスタンス識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-210">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-211">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-211">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-212">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-212">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-213">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-213">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-214">指定したインスタンス ID、インスタンス ストア、コールバック、および状態で <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、インスタンス所有者を非同期的に取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-214">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-215">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-215">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="d8b55-216">インスタンス識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-216">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-217">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-217">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-218">ロード開始操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-218">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-219">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-219">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-220">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-220">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-221">指定したインスタンス ID、インスタンス ストア、タイムアウト間隔、コールバック、および状態で <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、インスタンス所有者を非同期的に取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-221">Retrieves an instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance identifier, instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-222">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-222">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginGetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-223">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、実行可能なインスタンス所有者を非同期的に取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-223">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-224">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-224">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-225">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-225">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-226">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-226">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-227">指定したインスタンス ストア、コールバック、および状態で <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、実行可能なインスタンス所有者を非同期的に取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-227">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-228">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-228">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginGetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginGetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginGetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-229">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-229">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-230">ロード開始操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-230">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-231">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-231">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-232">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-232">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-233">指定したインスタンス ストア、タイムアウト間隔、コールバック、および状態で <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、実行可能なインスタンス所有者を非同期的に取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-233">Retrieves a runnable instance owner asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-234">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-234">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-235">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、インスタンス ストアからワークフローを非同期的にロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-235">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-236"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-236"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d8b55-237">インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-237">The instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-238">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-238">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-239">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-239">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-240">指定したインスタンス、コールバック、および状態で <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、インスタンス ストアからワークフローを非同期的に読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-240">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-241">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-241">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="d8b55-242">ワークフロー インスタンスのグローバルに一意な 128 ビットの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-242">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-243">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-243">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-244">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-244">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-245">指定されたインスタンス識別子、コールバック メソッド、およびユーザー指定の状態を使用して、インスタンス ストアからワークフローを非同期的にロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-245">Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-246">非同期操作のステータス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-246">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d8b55-247">インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-247">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="d8b55-248">更新マップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-248">The update map.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-249">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-249">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-250">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-250">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-251">指定したインスタンス、更新マップ、コールバック、および状態で <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、インスタンス ストアからワークフローを非同期的に読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-251">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-252">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-252">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d8b55-253">インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-253">The instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-254">ロード開始操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-254">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-255">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-255">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-256">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-256">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-257">指定したインスタンス、タイムアウト間隔、コールバック、および状態で <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、インスタンス ストアからワークフローを非同期的に読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-257">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-258">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-258">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (Guid instanceId, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instanceId As Guid, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(Guid instanceId, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="d8b55-259">ワークフロー インスタンスのグローバルに一意な 128 ビットの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-259">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-260">ロード開始操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-260">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-261">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-261">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-262">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-262">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-263">指定されたインスタンス識別子、タイムアウト期間、コールバック メソッド、およびユーザー指定の状態を使用して、インスタンス ストアからワークフローを非同期的にロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-263">Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-264">非同期操作のステータス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-264">The status of an asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoad (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoad(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoad (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoad(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d8b55-265">インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-265">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="d8b55-266">更新マップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-266">The update map.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-267">ロード開始操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-267">The interval in which the begin load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-268">ロード開始操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-268">The method to be called when the begin load operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-269">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-269">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-270">指定したインスタンス、更新マップ、タイムアウト間隔、コールバック、および状態で <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、インスタンス ストアからワークフローを非同期的に読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-270">Loads a workflow asynchronously from an instance store using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern with specified instance, update map, timeout interval, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-271">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-271">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-272">実行可能なワークフロー インスタンスを <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> からロードするという非同期処理を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-272">Initiates the asynchronous process of loading a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-273">実行可能なインスタンスとは、タイマーまたはインスタンス ロックの期限が切れたインスタンスのことです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-273">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="d8b55-274">操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-274">The method to be called when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-275">非同期操作についての情報を含む、オプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-275">An optional application-specific object containing information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-276">実行可能なワークフロー インスタンスを <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> からロードする操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-276">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-277">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-277">A reference to the asynchronous operation</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-278">実行可能なインスタンスとは、タイマーまたはインスタンス ロックの期限が切れたインスタンスのことです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-278">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="d8b55-279">ロード操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-279">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="d8b55-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> メソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-280"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="d8b55-281"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> は、呼び出されたときに再開操作が完了していなかった場合、再開操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-281">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="d8b55-282">既定では、再開操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> から <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-282">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-283">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフローを非同期的にロードします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-283">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-284"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-284"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginLoadRunnableInstance (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginLoadRunnableInstance(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginLoadRunnableInstance (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginLoadRunnableInstance(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-285">ロード操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-285">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-286">操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-286">The method to be called when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-287">非同期操作についての情報を含む、オプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-287">An optional application-specific object containing information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-288">指定されたタイムアウト期間を使用して、実行可能なワークフロー インスタンスを <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> からロードする操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-288">Initiates an operation to load a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-289">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-289">A reference to the asynchronous operation</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-290">実行可能なインスタンスとは、タイマーまたはインスタンス ロックの期限が切れたインスタンスのことです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-290">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="d8b55-291">ロード操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-291">To determine if the load operation was successful, call <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span> <span data-ttu-id="d8b55-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> メソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-292"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="d8b55-293"><xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> は、呼び出されたときに再開操作が完了していなかった場合、再開操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-293">If <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="d8b55-294">指定されたタイムアウト期間内にロード操作が完了しない場合、<xref:System.TimeoutException> が <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A> からスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-294">If the load operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-295">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフローを非同期的にロードします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-295">This method loads a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-296"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-296"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginPersist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-297">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、ワークフロー インスタンスをインスタンス ストアに非同期的に永続化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-297">Persists a workflow instance to an instance store asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-298"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-298"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 <span data-ttu-id="d8b55-299">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-299">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-300">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-300">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="d8b55-301">永続化操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-301">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-302">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-302">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-303">指定されたコールバック メソッドおよびユーザー指定の状態を使用して、ワークフロー インスタンスをインスタンス ストアに非同期的に永続化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-303">Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-304">非同期永続化操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-304">A reference to the asynchronous persist operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-305">永続化操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndPersist%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-305">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="d8b55-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> パラメーターで参照されたメソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-306"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="d8b55-307"><xref:System.Activities.WorkflowApplication.EndPersist%2A> は、呼び出されたときに永続化操作が完了していなかった場合、永続化操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-307">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="d8b55-308">永続化操作が 30 秒以内に完了しない場合、<xref:System.TimeoutException> が <xref:System.Activities.WorkflowApplication.EndPersist%2A> からスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-308">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-309">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-309">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-310">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-310">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="d8b55-311">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフローを非同期的に永続化します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-311">This method persists a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-312"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-312"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPersist">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginPersist (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginPersist(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginPersist (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginPersist(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-313">操作が取り消され <see cref="T:System.TimeoutException" /> がスローされるまでの時間の長さ。永続化操作は、この時間内に完了する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-313">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-314">永続化操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-314">The method to be called when the persist operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-315">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-315">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-316">指定されたタイムアウト期間、コールバック メソッド、およびユーザー指定の状態を使用して、ワークフロー インスタンスをインスタンス ストアに非同期的に永続化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-316">Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-317">非同期永続化操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-317">A reference to the asynchronous persist operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-318">永続化操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndPersist%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-318">To determine whether the persist operation was successful, call <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span> <span data-ttu-id="d8b55-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> パラメーターで参照されたメソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-319"><xref:System.Activities.WorkflowApplication.EndPersist%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="d8b55-320"><xref:System.Activities.WorkflowApplication.EndPersist%2A> は、呼び出されたときに永続化操作が完了していなかった場合、永続化操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-320">If <xref:System.Activities.WorkflowApplication.EndPersist%2A> is called before the persist operation completes, it blocks until the persist operation completes.</span></span> <span data-ttu-id="d8b55-321">指定されたタイムアウト期間内に永続化操作が完了しない場合、<xref:System.TimeoutException> が <xref:System.Activities.WorkflowApplication.EndPersist%2A> からスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-321">If the persist operation does not complete within the specified time-out interval, a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndPersist%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-322">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-322">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-323">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-323">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="d8b55-324">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフロー インスタンスを非同期的に永続化します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-324">This method persists a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-325"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-325"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-326">ブックマークを再開する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-326">Initiates an asynchronous operation to resume a bookmark.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="d8b55-327">再開するブックマーク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-327">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d8b55-328">ブックマークが再開されると呼び出されるメソッドにパラメーターとして渡されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-328">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-329">再開操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-329">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-330">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-330">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-331">指定された値、コールバック メソッド、および状態を使用して、ブックマークを再開する操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-331">Initiates an operation to resume a bookmark using the specified value, callback method, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-332">非同期ブックマーク再開操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-332">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-333">再開操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-333">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="d8b55-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> メソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-334"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="d8b55-335"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> は、呼び出されたときに再開操作が完了していなかった場合、再開操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-335">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="d8b55-336">既定では、再開操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> から <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-336">By default, the resume operation must complete in 30 seconds or else a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-337">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ブックマークを非同期的に再開します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-337">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-338"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-338"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="d8b55-339">再開するブックマークの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-339">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d8b55-340">ブックマークが再開されると呼び出されるメソッドにパラメーターとして渡されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-340">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-341">非同期操作の完了時に呼び出されるメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-341">The method that is called when the asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-342">非同期操作が開始される前に呼び出し元のスレッドによって保持されたワークフローの実行の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-342">The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-343">指定された値、コールバック メソッド、および状態を使用して、指定された名前を持つブックマークを再開する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-343">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state.</span>
          </span>
          <span data-ttu-id="d8b55-344">再開するブックマークは、ワークフロー インスタンス内のアクティビティによって以前に作成されたものです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-344">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-345">ブックマーク再開操作の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-345">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-346">ブックマークの結果は、再開操作に成功したのかそれとも失敗したのかを示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-346">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="d8b55-347">再開するブックマーク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-347">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d8b55-348">ブックマークが再開されると呼び出されるメソッドにパラメーターとして渡されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-348">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-349">再開操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-349">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-350">再開操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-350">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-351">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-351">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-352">指定された値、タイムアウト期間、コールバック メソッド、および状態を使用して、ブックマークを再開する操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-352">Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-353">非同期ブックマーク再開操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-353">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-354">再開操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-354">To determine if the resume operation was successful, call <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span> <span data-ttu-id="d8b55-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> メソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-355"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="d8b55-356"><xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> は、呼び出されたときに再開操作が完了していなかった場合、再開操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-356">If <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="d8b55-357">指定されたタイムアウト期間内に再開操作が完了しない場合、<xref:System.TimeoutException> が <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A> からスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-357">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-358">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ブックマークを非同期的に再開します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-358">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-359"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-359"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResumeBookmark">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginResumeBookmark (string bookmarkName, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="d8b55-360">再開するブックマークの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-360">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d8b55-361">ブックマークが再開されると呼び出されるメソッドにパラメーターとして渡されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-361">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-362">ブックマークが再開される必要がある時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-362">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-363">非同期操作の完了時に呼び出されるメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-363">The method that is called when the asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-364">非同期操作が開始される前に呼び出し元のスレッドによって保存されたワークフローの実行の状態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-364">The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-365">指定された値、タイムアウト期間、コールバック メソッド、および状態を使用して、指定された名前を持つブックマークを再開する非同期操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-365">Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state.</span>
          </span>
          <span data-ttu-id="d8b55-366">再開するブックマークは、ワークフロー インスタンス内のアクティビティによって以前に作成されたものです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-366">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-367">ブックマーク再開操作の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-367">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-368">ブックマークの結果は、再開操作に成功したのかそれとも失敗したのかを示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-368">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginRun">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-369">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、ワークフロー インスタンスを非同期的に開始または再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-369">Starts or resumes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-370"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-370"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="d8b55-371">再開操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-371">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-372">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-372">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-373">指定されたコールバック メソッドおよびユーザー指定の状態を使用して、ワークフロー インスタンスを非同期的に開始または再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-373">Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-374">非同期実行操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-374">A reference to the asynchronous run operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-375">実行操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndRun%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-375">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="d8b55-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> パラメーターで参照されたメソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-376"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="d8b55-377"><xref:System.Activities.WorkflowApplication.EndRun%2A> は、呼び出されたときに再開操作が完了していなかった場合、再開操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-377">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="d8b55-378">既定では、再開操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> から <xref:System.Activities.WorkflowApplication.EndRun%2A> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-378">By default, the resume operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-379">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフローを非同期的に開始または再開します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-379">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-380"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-380"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRun">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRun (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRun(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRun (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRun(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-381">再開操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-381">The interval in which the resume operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-382">再開操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-382">The method to be called when the resume operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-383">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-383">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-384">指定されたタイムアウト期間、コールバック メソッド、およびユーザー指定の状態を使用して、ワークフロー インスタンスを非同期的に開始または再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-384">Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-385">非同期実行操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-385">A reference to the asynchronous run operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-386">実行操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndRun%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-386">To determine whether the run operation was successful, call <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span> <span data-ttu-id="d8b55-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> パラメーターで参照されたメソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-387"><xref:System.Activities.WorkflowApplication.EndRun%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="d8b55-388"><xref:System.Activities.WorkflowApplication.EndRun%2A> は、呼び出されたときに再開操作が完了していなかった場合、再開操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-388">If <xref:System.Activities.WorkflowApplication.EndRun%2A> is called before the resume operation completes, it blocks until the resume operation completes.</span></span> <span data-ttu-id="d8b55-389">指定されたタイムアウト期間内に再開操作が完了しない場合、<xref:System.TimeoutException> が <xref:System.Activities.WorkflowApplication.EndRun%2A> からスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-389">If the resume operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndRun%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-390">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフローを非同期的に開始または再開します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-390">This method starts or resumes a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-391"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-391"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTerminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-392">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、ワークフロー インスタンスを非同期的に終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-392">Terminates a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-393"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-393"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="d8b55-394">ワークフロー インスタンスが終了した理由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-394">The reason the workflow instance is terminated.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-395">
            <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-395">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-396">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-396">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-397">指定された例外、コールバック メソッド、およびユーザー指定の状態を使用して、ワークフロー インスタンスを非同期的に終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-397">Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-398">現在の <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-398">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-399">このメソッドは、ワークフロー インスタンスの終了をスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-399">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="d8b55-400">終了操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-400">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="d8b55-401"><xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndTerminate%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-401">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="d8b55-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> パラメーターで参照されたメソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-402"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method referenced in the `callback` parameter.</span></span> <span data-ttu-id="d8b55-403"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 操作が完了する前に <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> が呼び出された場合、<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-403">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="d8b55-404">既定では、<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> から <xref:System.Activities.WorkflowApplication.EndTerminate%2A> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-404">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-405">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフローを非同期的に終了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-405">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-406"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-406"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="d8b55-407">ワークフロー インスタンスを終了する理由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-407">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-408">
            <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-408">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-409">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-409">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-410">指定されたエラー メッセージ、コールバック メソッド、およびユーザー指定の状態を使用して、ワークフロー インスタンスを非同期的に終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-410">Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-411">現在の <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-411">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-412">このメソッドは、ワークフロー インスタンスの終了をスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-412">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="d8b55-413">終了操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-413">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="d8b55-414"><xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndTerminate%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-414">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="d8b55-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> パラメーターで参照されたメソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-415"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="d8b55-416"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 操作が完了する前に <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> が呼び出された場合、<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-416">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="d8b55-417">既定では、<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> から <xref:System.Activities.WorkflowApplication.EndTerminate%2A> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-417">By default, the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-418">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフロー インスタンスを非同期的に終了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-418">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-419"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-419"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (Exception reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(class System.Exception reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As Exception, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(Exception ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="d8b55-420">ワークフロー インスタンスを終了する理由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-420">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-421">
            <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-421">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-422">
            <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-422">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-423">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-423">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-424">指定された例外、タイムアウト期間、コールバック メソッド、およびユーザー指定の状態を使用して、ワークフロー インスタンスを非同期的に終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-424">Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-425">現在の <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-425">A reference to the current <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-426">このメソッドは、ワークフロー インスタンスの終了をスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-426">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="d8b55-427">終了操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-427">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="d8b55-428"><xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndTerminate%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-428">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="d8b55-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> メソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-429"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the `callback` method.</span></span> <span data-ttu-id="d8b55-430"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 操作が完了する前に <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> が呼び出された場合、<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-430">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="d8b55-431">指定されたタイムアウト期間内に <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-431">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown.</span></span> <span data-ttu-id="d8b55-432">この例外または <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> プロセス中に発生するその他の例外が、<xref:System.Activities.WorkflowApplication.EndTerminate%2A> からスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-432">This or any other exceptions that occur during the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> process is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-433">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフローを非同期的に終了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-433">This method terminates a workflow asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-434"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-434"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTerminate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginTerminate (string reason, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginTerminate(string reason, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTerminate (reason As String, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginTerminate(System::String ^ reason, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="d8b55-435">ワークフロー インスタンスを終了する理由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-435">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-436">
            <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-436">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-437">
            <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-437">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-438">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-438">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-439">指定されたエラー メッセージ、タイムアウト期間、コールバック メソッド、およびユーザー指定の状態を使用して、ワークフロー インスタンスを非同期的に終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-439">Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-440">非同期 <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-440">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-441">このメソッドは、ワークフロー インスタンスの終了をスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-441">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="d8b55-442">終了操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-442">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="d8b55-443"><xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndTerminate%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-443">To determine whether the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span> <span data-ttu-id="d8b55-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> パラメーターで参照されたメソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-444"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="d8b55-445"><xref:System.Activities.WorkflowApplication.EndTerminate%2A> 操作が完了する前に <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> が呼び出された場合、<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-445">If <xref:System.Activities.WorkflowApplication.EndTerminate%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation completes.</span></span> <span data-ttu-id="d8b55-446">指定されたタイムアウト期間内に <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が完了しない場合、<xref:System.TimeoutException> が <xref:System.Activities.WorkflowApplication.EndTerminate%2A> からスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-446">If the <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndTerminate%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-447">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフロー インスタンスを非同期的に終了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-447">This method terminates a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-448"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-448"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUnload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-449">
            <see cref="T:System.IAsyncResult" /> 非同期デザイン パターンを使用して、ワークフロー インスタンスを非同期的に永続化し破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-449">Persists and disposes a workflow instance asynchronously using the <see cref="T:System.IAsyncResult" /> asynchronous design pattern.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-450"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-450"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 <span data-ttu-id="d8b55-451">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-451">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-452">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-452">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="d8b55-453">
            <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-453">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-454">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-454">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-455">指定されたコールバック メソッドおよびユーザー指定の状態を使用して、ワークフロー インスタンスを非同期的に永続化し破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-455">Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-456">非同期 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-456">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-457"><xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndUnload%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-457">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="d8b55-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> パラメーターで参照されたメソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-458"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="d8b55-459"><xref:System.Activities.WorkflowApplication.EndUnload%2A> 操作が完了する前に <xref:System.Activities.WorkflowApplication.BeginUnload%2A> が呼び出された場合、<xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-459">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="d8b55-460">既定では、<xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> から <xref:System.Activities.WorkflowApplication.EndUnload%2A> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-460">By default, the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-461">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-461">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-462">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-462">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="d8b55-463">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフロー インスタンスを非同期的に永続化し破棄します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-463">This method persists and disposes a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-464"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-464"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnload">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginUnload (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginUnload(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUnload (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginUnload(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-465">
            <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> 操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-465">The interval in which the <see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="d8b55-466">
            <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 操作が完了した時点で呼び出すメソッド。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-466">The method to be called when the <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation has completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="d8b55-467">非同期操作についての情報を格納するオプションのアプリケーション固有オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-467">An optional application-specific object that contains information about the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-468">指定されたタイムアウト期間、コールバック メソッド、およびユーザー指定の状態を使用して、ワークフロー インスタンスを非同期的に永続化し破棄します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-468">Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-469">非同期 <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> 操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-469">A reference to the asynchronous <see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-470"><xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作が成功したかどうかを確認するには、<xref:System.Activities.WorkflowApplication.EndUnload%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-470">To determine whether the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful, call <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span> <span data-ttu-id="d8b55-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> パラメーターで参照されたメソッドの内部または外部から `callback` を呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-471"><xref:System.Activities.WorkflowApplication.EndUnload%2A> can be called from inside or outside of the method reference in the `callback` parameter.</span></span> <span data-ttu-id="d8b55-472"><xref:System.Activities.WorkflowApplication.EndUnload%2A> 操作が完了する前に <xref:System.Activities.WorkflowApplication.BeginUnload%2A> が呼び出された場合、<xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-472">If <xref:System.Activities.WorkflowApplication.EndUnload%2A> is called before the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes, it blocks until the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation completes.</span></span> <span data-ttu-id="d8b55-473">指定されたタイムアウト期間内に <xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作が完了しない場合、<xref:System.TimeoutException> が <xref:System.Activities.WorkflowApplication.EndUnload%2A> からスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-473">If the <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation does not complete within the specified time-out interval a <xref:System.TimeoutException> is thrown from <xref:System.Activities.WorkflowApplication.EndUnload%2A>.</span></span>  
  
 <span data-ttu-id="d8b55-474">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-474">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-475">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-475">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 <span data-ttu-id="d8b55-476">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフロー インスタンスを非同期的に永続化しアンロードします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-476">This method persists and unloads a workflow instance asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-477"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-477"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cancel">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-478">ワークフロー インスタンスを取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-478">Cancels the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-479">このメソッドは、ワークフロー インスタンスの取り消しをスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-479">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="d8b55-480">取り消し操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-480">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="d8b55-481">既定では、取り消し操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-481">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-482">ワークフロー インスタンスを取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-482">Cancels the workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-483">このメソッドは、ワークフロー インスタンスの取り消しをスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-483">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="d8b55-484">取り消し操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドラーを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-484">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
 <span data-ttu-id="d8b55-485">既定では、取り消し操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-485">By default, the cancel operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-486">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-486">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-487">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-487">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-488">ワークフローの開始後に、<xref:System.Activities.WorkflowApplication.Cancel%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-488">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="d8b55-489">このワークフローを取り消すと、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-489">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cancel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-490">取り消し操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-490">The interval in which the cancel operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-491">指定されたタイムアウト期間を使用して、ワークフロー インスタンスを取り消します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-491">Cancels the workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-492">このメソッドは、ワークフロー インスタンスの取り消しをスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-492">This method schedules the cancellation of the workflow instance.</span></span> <span data-ttu-id="d8b55-493">取り消し操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドラーを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-493">To be notified when the cancellation has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handler.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-494">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-494">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-495">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-495">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-496">ワークフローの開始後に、<xref:System.Activities.WorkflowApplication.Cancel%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-496">After the workflow is started, <xref:System.Activities.WorkflowApplication.Cancel%2A> is called.</span></span> <span data-ttu-id="d8b55-497">このワークフローを取り消すと、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-497">When the workflow is cancelled, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Idle.   
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Canceled  
Workflow bcce00c2-d323-42c2-8c25-19ff0c4b6dac Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#13](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationCompletedEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Property Completed As Action(Of WorkflowApplicationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ Completed { Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationCompletedEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-498">ワークフロー インスタンスが完了すると呼び出される <see cref="T:System.Action`1" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-498">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the workflow instance completes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b55-499">ワークフロー インスタンスが完了すると呼び出されるアクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-499">The action that is invoked when the workflow instance is complete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8b55-500"><xref:System.Activities.WorkflowApplicationCompletedEventArgs> インスタンスの <xref:System.Activities.WorkflowApplication.Completed%2A> ハンドラーに渡される <xref:System.Activities.WorkflowApplication> を調べ、ワークフローの完了方法に関する情報を表示するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-500">The following code example inspects the <xref:System.Activities.WorkflowApplicationCompletedEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Completed%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays information about how the workflow completed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#4](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-501">ワーク フローの既定のインスタンス所有者を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-501">Creates a default instance owner for the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-502">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-502">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="d8b55-503">ワークフローの定義 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-503">The definition identity of the workflow.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="d8b55-504">ID フィルター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-504">The identity filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-505">指定したインスタンス ストア、定義 ID、および ID フィルターを使用して、ワークフローの既定のインスタンス所有者を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-505">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void CreateDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, System.Activities.WorkflowIdentity definitionIdentity, System.Activities.WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, class System.Activities.WorkflowIdentity definitionIdentity, valuetype System.Activities.WorkflowIdentityFilter identityFilter, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, System::Activities::WorkflowIdentity ^ definitionIdentity, System::Activities::WorkflowIdentityFilter identityFilter, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="definitionIdentity" Type="System.Activities.WorkflowIdentity" />
        <Parameter Name="identityFilter" Type="System.Activities.WorkflowIdentityFilter" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-506">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-506">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="definitionIdentity">
          <span data-ttu-id="d8b55-507">ワークフローの定義 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-507">The definition identity of the workflow.</span>
          </span>
        </param>
        <param name="identityFilter">
          <span data-ttu-id="d8b55-508">ID フィルター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-508">The identity filter.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-509">ロード開始操作が取り消されるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-509">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-510">指定したインスタンス ストア、定義 ID、ID フィルター、およびタイムアウト間隔を使用して、ワークフローの既定のインスタンス所有者を作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-510">Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteDefaultInstanceOwner">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-511">ワークフローの既定のインスタンス所有者を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-511">Deletes a default instance owner for the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-512">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-512">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-513">指定したインスタンス ストアを持つワークフローの既定のインスタンス所有者を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-513">Deletes a default instance owner for the workflow with specified instance store.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void DeleteDefaultInstanceOwner (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteDefaultInstanceOwner(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteDefaultInstanceOwner(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-514">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-514">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-515">ロード開始操作が取り消されるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-515">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-516">指定したインスタンス ストアとタイムアウト間隔を持つワークフローの既定のインスタンス所有者を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-516">Deletes a default instance owner for the workflow with specified instance store and timeout interval..</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancel">
      <MemberSignature Language="C#" Value="public void EndCancel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancel (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancel(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="d8b55-517">非同期の取り消し操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-517">The asynchronous cancel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-518">保留中の非同期取り消し操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-518">Waits for the pending asynchronous cancel operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-519">このメソッドは、<xref:System.Activities.WorkflowApplication.BeginCancel%2A> 操作が成功したかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-519">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginCancel%2A> operation was successful.</span></span> <span data-ttu-id="d8b55-520">このメソッドは、呼び出されたときに取り消し操作が完了していなかった場合、取り消し操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-520">If called before the cancel operation completes, it blocks until the cancel operation is complete.</span></span>  
  
 <span data-ttu-id="d8b55-521">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、非同期取り消し操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-521">This method completes the asynchronous cancel operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-522"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-522"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreateDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndCreateDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndCreateDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndCreateDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndCreateDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d8b55-523">非同期の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-523">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-524">既定のインスタンス所有者の作成が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-524">Waits for the creation of default instance owner to complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDeleteDefaultInstanceOwner">
      <MemberSignature Language="C#" Value="public static void EndDeleteDefaultInstanceOwner (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EndDeleteDefaultInstanceOwner(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EndDeleteDefaultInstanceOwner (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EndDeleteDefaultInstanceOwner(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d8b55-525">非同期の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-525">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-526">既定のインスタンス所有者の削除が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-526">Waits for the deletion of default instance owner to complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetInstance(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d8b55-527">非同期の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-527">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-528">インスタンスの取得が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-528">Waits for the instance retrieval to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-529">操作の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-529">The result of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance EndGetRunnableInstance (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance EndGetRunnableInstance(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndGetRunnableInstance (asyncResult As IAsyncResult) As WorkflowApplicationInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ EndGetRunnableInstance(IAsyncResult ^ asyncResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="d8b55-530">非同期の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-530">The asynchronous result.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-531">実行可能インスタンスの非同期取得操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-531">Waits for the asynchronous retrieval of runnable instance operation to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-532">操作の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-532">The result of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public void EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoad (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoad(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="d8b55-533">非同期のロード操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-533">The asynchronous load operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-534">保留中の非同期ロード操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-534">Waits for the pending asynchronous load operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-535">このメソッドは、呼び出されたときにロード操作が完了していなかった場合、ロード操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-535">If this method is called before the loading operation completes, it blocks until the loading operation is complete.</span></span>  
  
 <span data-ttu-id="d8b55-536">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、非同期ロード操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-536">This method completes the asynchronous load operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-537"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-537"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void EndLoadRunnableInstance (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadRunnableInstance(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadRunnableInstance (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadRunnableInstance(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="d8b55-538">非同期ロード操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-538">A reference to the asynchronous load operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-539">実行可能インスタンスの非同期ロード操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-539">Waits for the asynchronous load runnable instance operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-540">このメソッドは、<xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> 操作が成功したかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-540">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A> operation was successful.</span></span> <span data-ttu-id="d8b55-541">呼び出されたときにロード操作が完了していなかった場合、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-541">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="d8b55-542">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ワークフローを非同期的にロードします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-542">This method loads workflows asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-543"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-543"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndPersist">
      <MemberSignature Language="C#" Value="public void EndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="d8b55-544">非同期の永続化操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-544">The asynchronous persist operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-545">保留中の非同期永続化操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-545">Waits for the pending asynchronous persist operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-546">このメソッドは、<xref:System.Activities.WorkflowApplication.BeginPersist%2A> 操作が成功したかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-546">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginPersist%2A> operation was successful.</span></span> <span data-ttu-id="d8b55-547">呼び出されたときに永続化操作が完了していなかった場合、永続化操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-547">If called before the persist operation completes, it blocks until the persist operation is complete.</span></span>  
  
 <span data-ttu-id="d8b55-548">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、非同期永続化操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-548">This method completes the asynchronous persist operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-549"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-549"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult EndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult EndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult EndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="d8b55-550">非同期ブックマーク再開操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-550">A reference to the asynchronous bookmark resume operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-551">ブックマーク再開操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-551">Waits for a bookmark resume operation to complete.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-552">ブックマーク再開操作の結果を示す列挙値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-552">One of the enumeration values that indicates the results of a bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-553">このメソッドは、<xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> 操作が成功したかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-553">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A> operation was successful.</span></span> <span data-ttu-id="d8b55-554">呼び出されたときにロード操作が完了していなかった場合、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-554">If called before the load operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="d8b55-555">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、ブックマークを非同期的に再開します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-555">This method resumes a bookmark asynchronously using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-556"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-556"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRun">
      <MemberSignature Language="C#" Value="public void EndRun (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndRun(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndRun (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndRun(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="d8b55-557">非同期の実行操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-557">The asynchronous run operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-558">保留中の非同期実行操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-558">Waits for the pending asynchronous run operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-559">このメソッドは、<xref:System.Activities.WorkflowApplication.BeginRun%2A> 操作が成功したかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-559">This method determines whether a <xref:System.Activities.WorkflowApplication.BeginRun%2A> operation was successful.</span></span> <span data-ttu-id="d8b55-560">呼び出されたときに再開操作が完了していなかった場合、再開操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-560">If called before the resume operation completes, it blocks until the resume operation is complete.</span></span>  
  
 <span data-ttu-id="d8b55-561">このメソッドは、<xref:System.IAsyncResult> 非同期デザイン パターンを使用して、非同期開始操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-561">This method completes an asynchronous run operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-562"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-562"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTerminate">
      <MemberSignature Language="C#" Value="public void EndTerminate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndTerminate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndTerminate (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndTerminate(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="d8b55-563">非同期の終了操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-563">The asynchronous terminate operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-564">保留中の非同期終了操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-564">Waits for the pending asynchronous terminate operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-565">このメソッドを呼び出して、<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 操作が成功したかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-565">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation was successful.</span></span> <span data-ttu-id="d8b55-566">呼び出されたときに終了操作が完了していなかった場合、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-566">If called before the terminate operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="d8b55-567">このメソッドは、<xref:System.Activities.WorkflowApplication.BeginTerminate%2A> 非同期デザイン パターンを使用して、非同期 <xref:System.IAsyncResult> 操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-567">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginTerminate%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-568"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-568"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnload">
      <MemberSignature Language="C#" Value="public void EndUnload (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUnload(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUnload (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUnload(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="d8b55-569">非同期のアンロード操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-569">The asynchronous unload operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-570">保留中の非同期アンロード操作が完了するまで待機します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-570">Waits for the pending asynchronous unload operation to complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-571">このメソッドを呼び出して、<xref:System.Activities.WorkflowApplication.BeginUnload%2A> 操作が成功したかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-571">This method can be called to determine whether a <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation was successful.</span></span> <span data-ttu-id="d8b55-572">呼び出されたときにアンロード操作が完了していなかった場合、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-572">If called before the unload operation completes, it blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="d8b55-573">このメソッドは、<xref:System.Activities.WorkflowApplication.BeginUnload%2A> 非同期デザイン パターンを使用して、非同期 <xref:System.IAsyncResult> 操作を完了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-573">This method completes an asynchronous <xref:System.Activities.WorkflowApplication.BeginUnload%2A> operation using the <xref:System.IAsyncResult> asynchronous design pattern.</span></span> [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="d8b55-574"> [非同期プログラミングの概要](http://go.microsoft.com/fwlink/?LinkId=141764)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-574"> [Asynchronous Programming Overview](http://go.microsoft.com/fwlink/?LinkId=141764).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extensions">
      <MemberSignature Language="C#" Value="public System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Hosting.WorkflowInstanceExtensionManager Extensions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Extensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extensions As WorkflowInstanceExtensionManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Hosting::WorkflowInstanceExtensionManager ^ Extensions { System::Activities::Hosting::WorkflowInstanceExtensionManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Hosting.WorkflowInstanceExtensionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-575">現在のワークフロー インスタンスの拡張機能のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-575">Gets the collection of extensions for the current workflow instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b55-576">オブジェクトのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-576">A collection of objects.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBookmarks">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-577">ワークフロー インスタンスのブックマークのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-577">Returns the collection of bookmarks for the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks () As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-578">ワークフロー インスタンスのブックマークのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-578">Returns the collection of bookmarks for the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-579">ワークフロー インスタンスのブックマークの読み取り専用コレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-579">A read-only collection of bookmarks for the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-580">この操作が 30 秒以内に完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-580">If this operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-581">次の例は、`ReadLine` を作成する <xref:System.Activities.Bookmark> アクティビティを使用するワークフローを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-581">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="d8b55-582">ワークフローが開始され、<xref:System.Activities.Bookmark> が作成されてワークフローがアイドル状態になると、<xref:System.Activities.WorkflowApplication.GetBookmarks%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-582">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="d8b55-583">このワークフローが完了すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-583">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBookmarks">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Activities.Hosting.BookmarkInfo&gt; GetBookmarks(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBookmarks (timeout As TimeSpan) As ReadOnlyCollection(Of BookmarkInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Activities::Hosting::BookmarkInfo ^&gt; ^ GetBookmarks(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Activities.Hosting.BookmarkInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-584">操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、このメソッドが完了する必要がある期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-584">The interval in which this method must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-585">指定されたタイムアウト期間を使用して、ワークフロー インスタンスのブックマークのコレクションを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-585">Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-586">ワークフロー インスタンスのブックマークの読み取り専用コレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-586">A read-only collection of bookmarks for the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8b55-587">次の例は、`ReadLine` を作成する <xref:System.Activities.Bookmark> アクティビティを使用するワークフローを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-587">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="d8b55-588">ワークフローが開始され、<xref:System.Activities.Bookmark> が作成されてワークフローがアイドル状態になると、<xref:System.Activities.WorkflowApplication.GetBookmarks%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-588">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, <xref:System.Activities.WorkflowApplication.GetBookmarks%2A> is called.</span></span> <span data-ttu-id="d8b55-589">このワークフローが完了すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-589">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
What is your name?   
BookmarkName: UserName - OwnerDisplayName: ReadLine  
Steve  
Hello, Steve  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#14](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-590">ワークフロー インスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-590">Retrieves the workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="d8b55-591">インスタンス識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-591">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-592">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-592">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-593">指定したインスタンス ID とインスタンスストアを使用してワークフロー インスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-593">Retrieves the workflow instance using specified instance identifier and instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-594">取得されたインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-594">The retrieved instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetInstance (Guid instanceId, System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetInstance(valuetype System.Guid instanceId, class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetInstance(Guid instanceId, System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="d8b55-595">インスタンス識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-595">The instance identifier.</span>
          </span>
        </param>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-596">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-596">The access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-597">ロード開始操作が取り消されるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-597">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-598">指定したインスタンス ID、インスタンスストア、およびタイム アウト間隔を使用して、ワークフロー インスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-598">Retrieves the workflow instance using specified instance identifier, instance store and timeout interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-599">非同期操作への参照。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-599">A reference to the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-600">ワークフローの実行可能なインスタンスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-600">Retrieves the runnable instance of the workflow.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-601">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-601">The access to the persisted state of the current instance of the workflow application</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-602">指定したインスタンス ストアを持つワークフローの実行可能なインスタンスを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-602">Retrieves the runnable instance of the workflow with specified instance store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-603">実行可能なインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-603">The runnable instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunnableInstance">
      <MemberSignature Language="C#" Value="public static System.Activities.WorkflowApplicationInstance GetRunnableInstance (System.Runtime.DurableInstancing.InstanceStore instanceStore, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Activities.WorkflowApplicationInstance GetRunnableInstance(class System.Runtime.DurableInstancing.InstanceStore instanceStore, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Activities::WorkflowApplicationInstance ^ GetRunnableInstance(System::Runtime::DurableInstancing::InstanceStore ^ instanceStore, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.WorkflowApplicationInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceStore" Type="System.Runtime.DurableInstancing.InstanceStore" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceStore">
          <span data-ttu-id="d8b55-604">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-604">The access to the persisted state of the current instance of the workflow application</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-605">ロード開始操作が取り消されるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-605">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-606">指定したインスタンス ストアとタイムアウト間隔を持つワークフローの実行可能なインスタンスを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-606">Retrieves the runnable instance of the workflow with specified instance store and timeout interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-607">実行可能なインスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-607">The runnable instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid Id { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-608">現在のワークフロー アプリケーション インスタンスの 128 ビットの GUID 識別子を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-608">Gets the 128-bit GUID identifier of the current workflow application instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b55-609">128 ビットの GUID 識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-609">A 128-bit GUID identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8b55-610">次の例は、<xref:System.Activities.WorkflowApplication> インスタンスを作成し、次に <xref:System.Activities.WorkflowApplication.Id%2A> 値をコンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-610">The following example creates a <xref:System.Activities.WorkflowApplication> instance and then displays the <xref:System.Activities.WorkflowApplication.Id%2A> value to the console.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationIdleEventArgs&gt; Idle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Property Idle As Action(Of WorkflowApplicationIdleEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ Idle { Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationIdleEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationIdleEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-611">現在のワークフロー インスタンスがアイドル状態になると呼び出される <see cref="T:System.Action`1" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-611">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow instance becomes idle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b55-612">ワークフロー インスタンスがアイドル状態になると実行されるアクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-612">An action that executes when a workflow instance becomes idle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8b55-613"><xref:System.Activities.WorkflowApplicationIdleEventArgs> インスタンスの <xref:System.Activities.WorkflowApplication.Idle%2A> ハンドラーに渡される <xref:System.Activities.WorkflowApplication> を調べるコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-613">The following code example inspects the <xref:System.Activities.WorkflowApplicationIdleEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Idle%2A> handler of a <xref:System.Activities.WorkflowApplication> instance.</span></span> <span data-ttu-id="d8b55-614">この例では、アイドル状態になるワークフローに、<xref:System.Activities.Bookmark> という名前で `EnterGuess` というアクティビティによって所有されている 1 つの `ReadInt` があります。</span><span class="sxs-lookup"><span data-stu-id="d8b55-614">In this example the workflow going idle has one <xref:System.Activities.Bookmark> with a name of `EnterGuess`, owned by an activity named `ReadInt`.</span></span> <span data-ttu-id="d8b55-615">このコード例は、ログオフ ベース[する方法: ワークフローを実行する](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md)の一部では、[チュートリアル入門&#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-615">This code example is based off of [How to: Run a Workflow](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span> <span data-ttu-id="d8b55-616">この例のコードを含めるようにこの手順の <xref:System.Activities.WorkflowApplication.Idle%2A> ハンドラーを変更すると、次の出力が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-616">If the <xref:System.Activities.WorkflowApplication.Idle%2A> handler in that step is modified to contain the code from this example, the following output is displayed.</span></span>  
  
```Output  
BookmarkName: EnterGuess - OwnerDisplayName: ReadInt  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#2](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceStore">
      <MemberSignature Language="C#" Value="public System.Runtime.DurableInstancing.InstanceStore InstanceStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.DurableInstancing.InstanceStore InstanceStore" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.InstanceStore" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceStore As InstanceStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::DurableInstancing::InstanceStore ^ InstanceStore { System::Runtime::DurableInstancing::InstanceStore ^ get(); void set(System::Runtime::DurableInstancing::InstanceStore ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.DurableInstancing.InstanceStore</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-617">ワークフロー アプリケーションの現在のインスタンスの永続化された状態へのアクセスを提供するオブジェクトを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-617">Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b55-618">インスタンス ストア。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-618">An instance store.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8b55-619">次の例は、WorkflowApplication インスタンスを作成し、次に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を使用して <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> を設定します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-619">The following example creates a WorkflowApplication instance and then configures the <xref:System.Activities.WorkflowApplication.InstanceStore%2A> using a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="d8b55-620">このコード例の一部である[する方法: を作成しを実行している長いワークフローを実行する](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md)の一部では、[チュートリアル入門&#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)です。</span><span class="sxs-lookup"><span data-stu-id="d8b55-620">This code example is part of [How to: Create and Run a Long Running Workflow](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md), which is part of the [Getting Started Tutorial &#91;.NET Framework 4.5&#93;](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md).</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#28](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-621">インスタンス ストアからワークフロー インスタンスを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-621">Loads a workflow instance from an instance store.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d8b55-622">インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-622">The instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-623">指定されたインスタンスを使用して、インスタンス ストアからワークフロー インスタンスを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-623">Loads a workflow instance from an instance store with specified instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="d8b55-624">ワークフロー インスタンスのグローバルに一意な 128 ビットの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-624">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-625">指定されたワークフロー インスタンスをインスタンス ストアからメモリにロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-625">Loads the specified workflow instance into memory from an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8b55-626">次の例は、<xref:System.Activities.WorkflowApplication.Load%2A> を呼び出して、永続化されたワークフロー インスタンスを <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> からロードします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-626">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="d8b55-627">この例は、`LoadAndCompleteInstance`メソッドで、[ワークフロー アプリケーションの永続化](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-627">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d8b55-628">インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-628">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="d8b55-629">更新マップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-629">The update map.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-630">指定されたインスタンスと更新マップを使用して、インスタンス ストアからワークフロー インスタンスを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-630">Loads a workflow instance from an instance store with specified instance and update map.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d8b55-631">インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-631">The instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-632">ロード開始操作が取り消されるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-632">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-633">指定されたインスタンスとタイムアウト間隔を使用して、インスタンス ストアからワークフロー インスタンスを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-633">Loads a workflow instance from an instance store with specified instance and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (Guid instanceId, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(valuetype System.Guid instanceId, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instanceId As Guid, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(Guid instanceId, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="d8b55-634">ワークフロー インスタンスのグローバルに一意な 128 ビットの識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-634">A globally unique 128-bit identifier for the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-635">ロード操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、ロード操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-635">The interval in which the load operation must complete before the load operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-636">指定されたタイムアウト期間を使用して、ワークフロー インスタンスをインスタンス ストアからメモリにロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-636">Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8b55-637">次の例は、<xref:System.Activities.WorkflowApplication.Load%2A> を呼び出して、永続化されたワークフロー インスタンスを <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore> からロードします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-637">The following example calls <xref:System.Activities.WorkflowApplication.Load%2A> to load persisted workflow instance from a <xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore>.</span></span> <span data-ttu-id="d8b55-638">この例は、`LoadAndCompleteInstance`メソッドで、[ワークフロー アプリケーションの永続化](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-638">This example is from the `LoadAndCompleteInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#27](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Activities.WorkflowApplicationInstance instance, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Activities.WorkflowApplicationInstance instance, class System.Activities.DynamicUpdate.DynamicUpdateMap updateMap, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (instance As WorkflowApplicationInstance, updateMap As DynamicUpdateMap, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Activities::WorkflowApplicationInstance ^ instance, System::Activities::DynamicUpdate::DynamicUpdateMap ^ updateMap, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Activities.WorkflowApplicationInstance" />
        <Parameter Name="updateMap" Type="System.Activities.DynamicUpdate.DynamicUpdateMap" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="d8b55-639">インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-639">The instance.</span>
          </span>
        </param>
        <param name="updateMap">
          <span data-ttu-id="d8b55-640">更新マップ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-640">The update map.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-641">ロード開始操作が取り消されるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-641">The interval in which the begin load operation must complete before the operation is canceled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-642">指定されたインスタンス、更新マップ、およびタイムアウト間隔を使用して、インスタンス ストアからワークフロー インスタンスを読み込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-642">Loads a workflow instance from an instance store with specified instance, update map and timeout interval.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadRunnableInstance">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-643">
            <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> から実行可能なワークフロー インスタンスをロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-643">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-644">実行可能なインスタンスとは、タイマーまたはインスタンス ロックの期限が切れたインスタンスのことです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-644">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-645">
            <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> から実行可能なワークフロー インスタンスをロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-645">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-646">実行可能なインスタンスとは、タイマーまたはインスタンス ロックの期限が切れたインスタンスのことです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-646">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 <span data-ttu-id="d8b55-647">既定では、ロード操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-647">By default, the load operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRunnableInstance">
      <MemberSignature Language="C#" Value="public void LoadRunnableInstance (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadRunnableInstance(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadRunnableInstance (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadRunnableInstance(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-648">ロード操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-648">The interval in which the load operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-649">指定されたタイムアウト期間を使用して、実行可能なワークフロー インスタンスを <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> からロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-649">Loads a runnable workflow instance from the <see cref="P:System.Activities.WorkflowApplication.InstanceStore" /> using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-650">実行可能なインスタンスとは、タイマーまたはインスタンス ロックの期限が切れたインスタンスのことです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-650">A runnable instance is an instance for which a timer or instance lock has expired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginAssociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginAssociateKeys (keys As ICollection(Of InstanceKey), callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginAssociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginPersist">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginPersist (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginPersist(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginPersist(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnBeginPersist (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginPersist(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.IAsyncResult OnBeginResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override IAsyncResult ^ OnBeginResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">To be added.</param>
        <param name="value">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="callback">To be added.</param>
        <param name="state">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisassociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnDisassociateKeys (System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnDisassociateKeys(class System.Collections.Generic.ICollection`1&lt;class System.Runtime.DurableInstancing.InstanceKey&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnDisassociateKeys (keys As ICollection(Of InstanceKey))" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnDisassociateKeys(System::Collections::Generic::ICollection&lt;System::Runtime::DurableInstancing::InstanceKey ^&gt; ^ keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.ICollection&lt;System.Runtime.DurableInstancing.InstanceKey&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAssociateKeys">
      <MemberSignature Language="C#" Value="protected internal override void OnEndAssociateKeys (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndAssociateKeys(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndAssociateKeys(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndAssociateKeys (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndAssociateKeys(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndPersist">
      <MemberSignature Language="C#" Value="protected internal override void OnEndPersist (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnEndPersist(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndPersist(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnEndPersist (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnEndPersist(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndResumeBookmark">
      <MemberSignature Language="C#" Value="protected internal override System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance valuetype System.Activities.BookmarkResumptionResult OnEndResumeBookmark(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnEndResumeBookmark(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function OnEndResumeBookmark (result As IAsyncResult) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Activities::BookmarkResumptionResult OnEndResumeBookmark(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyPaused">
      <MemberSignature Language="C#" Value="protected override void OnNotifyPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyPaused" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnNotifyPaused ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyPaused();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNotifyUnhandledException">
      <MemberSignature Language="C#" Value="protected override void OnNotifyUnhandledException (Exception exception, System.Activities.Activity exceptionSource, string exceptionSourceInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNotifyUnhandledException(class System.Exception exception, class System.Activities.Activity exceptionSource, string exceptionSourceInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnNotifyUnhandledException(Exception ^ exception, System::Activities::Activity ^ exceptionSource, System::String ^ exceptionSourceInstanceId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="exceptionSource" Type="System.Activities.Activity" />
        <Parameter Name="exceptionSourceInstanceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">To be added.</param>
        <param name="exceptionSource">To be added.</param>
        <param name="exceptionSourceInstanceId">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRequestAbort">
      <MemberSignature Language="C#" Value="protected internal override void OnRequestAbort (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRequestAbort(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.OnRequestAbort(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRequestAbort (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRequestAbort(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledException">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt; OnUnhandledException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationUnhandledExceptionEventArgs, valuetype System.Activities.UnhandledExceptionAction&gt; OnUnhandledException" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.OnUnhandledException" />
      <MemberSignature Language="VB.NET" Value="Public Property OnUnhandledException As Func(Of WorkflowApplicationUnhandledExceptionEventArgs, UnhandledExceptionAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ OnUnhandledException { Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationUnhandledExceptionEventArgs ^, System::Activities::UnhandledExceptionAction&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationUnhandledExceptionEventArgs,System.Activities.UnhandledExceptionAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-651">現在のワークフロー インスタンスが未処理の例外を検出すると呼び出される <see cref="T:System.Func`2" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-651">Gets or sets the <see cref="T:System.Func`2" /> that is invoked when the current workflow instance encounters an unhandled exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b55-652">ワークフロー インスタンスが未処理の例外を検出すると呼び出されるデリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-652">The delegate that is invoked when a workflow instance encounters an unhandled exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-653"><xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> も <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> も、例外がワークフロー内で処理されない場合にランタイムの動作を決定しますが、<xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> には、中断されたワークフローを永続化ストアに残すオプションがあり、<xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> にはこのオプションがありません。</span><span class="sxs-lookup"><span data-stu-id="d8b55-653">Both <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> and <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> dictate the behavior of the runtime when an exception is not handled in the workflow; however, <xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior> has the option of leaving a suspended workflow in the persistence store, while <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> does not.</span></span> <span data-ttu-id="d8b55-654">このような相違があるのは、中断されたワークフローの扱いがホスト固有であるのに対し、<xref:System.Activities.WorkflowApplication> の扱いはホスト固有でないためです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-654">The reason for this is that what happens to a suspended workflow is host-specific, and <xref:System.Activities.WorkflowApplication> is not.</span></span> <span data-ttu-id="d8b55-655"><xref:System.Activities.WorkflowApplication> を使用してこの機能を実装するには、この動作を備えたカスタムの <xref:System.Activities.Persistence.PersistenceParticipant> を作成します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-655">To implement this functionality using <xref:System.Activities.WorkflowApplication>, create a custom <xref:System.Activities.Persistence.PersistenceParticipant> that has this behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-656">次の例では、例外をスローするワークフローを呼び出しています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-656">The following example invokes a workflow that throws an exception.</span></span> <span data-ttu-id="d8b55-657">ワークフローで例外が処理されないため、<xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-657">The exception is unhandled by the workflow and the <xref:System.Activities.WorkflowApplication.OnUnhandledException%2A> handler is invoked.</span></span> <span data-ttu-id="d8b55-658">例外に関する情報を提供するために <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> が調査され、ワークフローは終了します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-658">The <xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs> are inspected to provide information about the exception, and the workflow is terminated.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#1](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-659">ワークフロー インスタンスをインスタンス ストアに永続化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-659">Persists a workflow instance to an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-660">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-660">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-661">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-661">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-662">ワークフロー インスタンスをインスタンス ストアに永続化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-662">Persists a workflow instance to an instance store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-663">永続化操作が 30 秒以内に完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-663">If the persist operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="d8b55-664">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-664">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-665">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-665">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-666">次の例では、ワークフローの開始前に <xref:System.Activities.WorkflowApplication.Persist%2A> を呼び出して、ワークフロー インスタンスを永続化します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-666">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="d8b55-667">この例の一部である、`StartAndUnloadInstance`メソッドで、[ワークフロー アプリケーションの永続化](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-667">This example is part of the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="public void Persist (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Persist(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Persist (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Persist(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-668">操作が取り消され <see cref="T:System.TimeoutException" /> がスローされるまでの時間の長さ。永続化操作は、この時間内に完了する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-668">The interval in which the persist operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-669">指定されたタイムアウト期間を使用して、ワークフロー インスタンスをインスタンス ストアに永続化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-669">Persists a workflow instance to an instance store using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-670">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-670">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-671">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-671">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-672">次の例では、ワークフローの開始前に <xref:System.Activities.WorkflowApplication.Persist%2A> を呼び出して、ワークフロー インスタンスを永続化します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-672">The following example calls <xref:System.Activities.WorkflowApplication.Persist%2A> to persist a workflow instance before the workflow is started.</span></span> <span data-ttu-id="d8b55-673">この例は、`StartAndUnloadInstance`メソッドで、[ワークフロー アプリケーションの永続化](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-673">This example is from the `StartAndUnloadInstance` method in the [Persisting a Workflow Application](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md) sample.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#34](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistableIdle">
      <MemberSignature Language="C#" Value="public Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt; PersistableIdle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;class System.Activities.WorkflowApplicationIdleEventArgs, valuetype System.Activities.PersistableIdleAction&gt; PersistableIdle" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.PersistableIdle" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistableIdle As Func(Of WorkflowApplicationIdleEventArgs, PersistableIdleAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ PersistableIdle { Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ get(); void set(Func&lt;System::Activities::WorkflowApplicationIdleEventArgs ^, System::Activities::PersistableIdleAction&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Activities.WorkflowApplicationIdleEventArgs,System.Activities.PersistableIdleAction&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-674">現在のワークフロー インスタンスがアイドル状態になり、永続化できるようになると呼び出される <see cref="T:System.Activities.ActivityFunc" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-674">Gets or sets the <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b55-675">現在のワークフロー インスタンスがアイドル状態になり、永続化できるようになると呼び出される <see cref="T:System.Activities.ActivityFunc" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-675">The <see cref="T:System.Activities.ActivityFunc" /> that is invoked when the current workflow instance is idle and can be persisted.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-676">ワークフローがアイドル状態になり、永続化できるようになると、<xref:System.Activities.WorkflowApplication.Idle%2A> と <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> の両方がこの順序で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-676">When a workflow becomes idle and can be persisted, both <xref:System.Activities.WorkflowApplication.Idle%2A> and <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> are invoked, in that order.</span></span> <span data-ttu-id="d8b55-677"><xref:System.Activities.WorkflowApplication.PersistableIdle%2A> ハンドラーは、<xref:System.Activities.PersistableIdleAction>、<xref:System.Activities.PersistableIdleAction.None>、<xref:System.Activities.PersistableIdleAction.Persist> の <xref:System.Activities.PersistableIdleAction.Unload> 列挙値のいずれかを返します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-677">The <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler returns one of the <xref:System.Activities.PersistableIdleAction> enumeration values of <xref:System.Activities.PersistableIdleAction.None>, <xref:System.Activities.PersistableIdleAction.Persist>, or <xref:System.Activities.PersistableIdleAction.Unload>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-678">次の例は、<xref:System.Activities.WorkflowApplication.PersistableIdle%2A> ハンドラーを処理し、ワークフローを永続化してアンロードするようランタイムに指示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-678">The following example handles the <xref:System.Activities.WorkflowApplication.PersistableIdle%2A> handler and instructs the runtime to persist and unload the workflow.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#26](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeBookmark">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-679">ブックマークを再開する操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-679">Initiates an operation to resume a bookmark.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="d8b55-680">再開するブックマーク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-680">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d8b55-681">ブックマークが再開されると呼び出されるメソッドにパラメーターとして渡されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-681">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-682">指定された値を使用して、指定されたブックマークを再開する操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-682">Initiates an operation to resume the specified bookmark, using the specified value.</span>
          </span>
          <span data-ttu-id="d8b55-683">再開するブックマークは、ワークフロー インスタンス内のアクティビティによって以前に作成されたものです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-683">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-684">ブックマーク再開操作の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-684">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-685">ブックマークの結果は、再開操作に成功したのかそれとも失敗したのかを示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-685">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-686">次の例は、`ReadLine` を作成する <xref:System.Activities.Bookmark> アクティビティを使用するワークフローを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-686">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="d8b55-687">ワークフローが開始され、<xref:System.Activities.Bookmark> が作成されてワークフローがアイドル状態になると、ユーザーの入力が収集されてブックマークが再開されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-687">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#24](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="d8b55-688">再開するブックマークの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-688">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d8b55-689">ブックマークが再開されると呼び出されるメソッドにパラメーターとして渡されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-689">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-690">指定された値を使用して、指定された名前を持つブックマークを再開する操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-690">Initiates an operation to resume the bookmark with the specified name, using the specified value.</span>
          </span>
          <span data-ttu-id="d8b55-691">再開するブックマークは、ワークフロー インスタンス内のアクティビティによって以前に作成されたものです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-691">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-692">ブックマーク再開操作の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-692">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-693">ブックマークの結果は、再開操作に成功したのかそれとも失敗したのかを示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-693">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-694">次の例は、`ReadLine` を作成する <xref:System.Activities.Bookmark> アクティビティを使用するワークフローを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-694">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="d8b55-695">ワークフローが開始され、<xref:System.Activities.Bookmark> が作成されてワークフローがアイドル状態になると、ユーザーの入力が収集されてブックマークが再開されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-695">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(class System.Activities.Bookmark bookmark, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::Activities::Bookmark ^ bookmark, System::Object ^ value, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmark" Type="System.Activities.Bookmark" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmark">
          <span data-ttu-id="d8b55-696">再開するブックマーク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-696">The bookmark to resume.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d8b55-697">ブックマークが再開されると呼び出されるメソッドにパラメーターとして渡されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-697">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-698">ブックマークが再開される必要がある時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-698">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-699">指定された値およびタイムアウト期間を使用して、指定されたブックマークを再開する操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-699">Initiates an operation to resume the specified bookmark, using the specified value and time-out interval.</span>
          </span>
          <span data-ttu-id="d8b55-700">再開するブックマークは、ワークフロー インスタンス内のアクティビティによって以前に作成されたものです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-700">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-701">ブックマーク再開操作の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-701">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-702">ブックマークの結果は、再開操作に成功したのかそれとも失敗したのかを示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-702">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-703">次の例は、`ReadLine` を作成する <xref:System.Activities.Bookmark> アクティビティを使用するワークフローを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-703">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="d8b55-704">ワークフローが開始され、<xref:System.Activities.Bookmark> が作成されてワークフローがアイドル状態になると、ユーザーの入力が収集されてブックマークが再開されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-704">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#25](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeBookmark">
      <MemberSignature Language="C#" Value="public System.Activities.BookmarkResumptionResult ResumeBookmark (string bookmarkName, object value, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Activities.BookmarkResumptionResult ResumeBookmark(string bookmarkName, object value, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResumeBookmark (bookmarkName As String, value As Object, timeout As TimeSpan) As BookmarkResumptionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::BookmarkResumptionResult ResumeBookmark(System::String ^ bookmarkName, System::Object ^ value, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.BookmarkResumptionResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="d8b55-705">再開するブックマークの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-705">The name of the bookmark to be resumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d8b55-706">ブックマークが再開されると呼び出されるメソッドにパラメーターとして渡されるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-706">An object passed as a parameter to the method that is invoked when the bookmark resumes.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-707">ブックマークが再開される必要がある時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-707">The time interval during which the bookmark must be resumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-708">指定された値およびタイムアウト期間を使用して、指定された名前を持つブックマークを再開する操作を開始します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-708">Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval.</span>
          </span>
          <span data-ttu-id="d8b55-709">再開するブックマークは、ワークフロー インスタンス内のアクティビティによって以前に作成されたものです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-709">The bookmark to be resumed is previously created by an activity within the workflow instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8b55-710">ブックマーク再開操作の結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-710">The result of the bookmark resumption operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-711">ブックマークの結果は、再開操作に成功したのかそれとも失敗したのかを示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-711">The bookmark result indicates whether the resumption operation succeeded or failed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-712">次の例は、`ReadLine` を作成する <xref:System.Activities.Bookmark> アクティビティを使用するワークフローを作成します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-712">The following example creates a workflow that uses a `ReadLine` activity that creates a <xref:System.Activities.Bookmark>.</span></span> <span data-ttu-id="d8b55-713">ワークフローが開始され、<xref:System.Activities.Bookmark> が作成されてワークフローがアイドル状態になると、ユーザーの入力が収集されてブックマークが再開されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-713">The workflow is started, and once the <xref:System.Activities.Bookmark> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#15](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#15)]  
  
 [!code-csharp[CFX_WorkflowApplicationExample#22](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-714">ワークフロー インスタンスの実行を開始または再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-714">Begins or resumes the execution of a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-715">新規作成したワークフロー インスタンスの実行を開始するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-715">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-716">ワークフロー インスタンスの実行を開始または再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-716">Begins or resumes the execution of a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-717">新規作成したワークフロー インスタンスの実行を開始するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-717">Call this method to initiate execution of a newly created workflow instance.</span></span>  
  
 <span data-ttu-id="d8b55-718">実行操作が 30 秒以内に完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-718">If the run operation does not complete within 30 seconds, a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-719">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-719">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-720">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-720">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-721">このワークフローが完了すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-721">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Run(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-722">新規作成したワークフロー インスタンスの実行を開始するには、このメソッドを呼び出します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-722">Call this method to initiate execution of a newly created workflow instance.</span>
          </span>
          <span data-ttu-id="d8b55-723">操作が取り消され <see cref="T:System.TimeoutException" /> がスローされるまでの時間の長さ。実行操作は、この時間内に完了する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-723">The interval in which the run operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-724">指定されたタイムアウト期間を使用して、ワークフロー インスタンスの実行を開始または再開します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-724">Begins or resumes the execution of a workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-725"><xref:System.Activities.WorkflowInvoker.Invoke%2A> とは異なり、このメソッドがタイムアウトするのは、指定時間内に完了しなかった場合ではなく、指定時間内にワークフローが開始しなかった場合のみです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-725">Note that unlike <xref:System.Activities.WorkflowInvoker.Invoke%2A>, this method will time out only if the workflow doesn't start in the specified amount of time, rather than needing to complete in the specified amount of time.</span></span> <span data-ttu-id="d8b55-726">これは、<xref:System.Activities.WorkflowInvoker.Invoke%2A> ではワークフローが同期的に (ホスト スレッドをブロックして) 実行されるためです。<xref:System.Activities.WorkflowApplication.Run%2A> は、ワークフローの開始にかかる時間分のみホスト スレッドをブロックして、非同期的に実行されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-726">The reason for this is that <xref:System.Activities.WorkflowInvoker.Invoke%2A> executes the workflow synchronously (blocking the host thread), while <xref:System.Activities.WorkflowApplication.Run%2A> executes asynchronously, only blocking the host thread for the amount of time it takes the workflow to start.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-727">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-727">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-728">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-728">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-729">このワークフローが完了すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-729">When the workflow is completed, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Idle.   
Ending the workflow.   
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Completed  
Workflow 593976e8-558d-4989-94d6-50a14b34fd7b Unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#9](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInstanceKeys">
      <MemberSignature Language="C#" Value="protected internal override bool SupportsInstanceKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInstanceKeys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.SupportsInstanceKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property SupportsInstanceKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool SupportsInstanceKeys { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Terminate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-730">ワークフロー インスタンスを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-730">Terminates a workflow instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="d8b55-731">ワークフロー インスタンスを終了する理由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-731">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-732">指定された例外を使用して、ワークフロー インスタンスを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-732">Terminates a workflow instance using the specified exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-733">このメソッドは、ワークフロー インスタンスの終了をスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-733">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="d8b55-734">終了操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-734">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="d8b55-735">既定では、<xref:System.Activities.WorkflowApplication.Terminate%2A> 操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-735">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-736">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-736">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-737">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-737">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-738">ワークフローの開始後に、<xref:System.Activities.WorkflowApplication.Terminate%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-738">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="d8b55-739">このワークフローが終了すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-739">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow e6b33409-f010-49f1-82ce-56f8baabe5e5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#16](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="d8b55-740">ワークフロー インスタンスを終了する理由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-740">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-741">指定されたエラー メッセージを使用して、ワークフロー インスタンスを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-741">Terminates a workflow instance using the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-742">このメソッドは、ワークフロー インスタンスの終了をスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-742">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="d8b55-743">終了操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-743">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
 <span data-ttu-id="d8b55-744">既定では、<xref:System.Activities.WorkflowApplication.Terminate%2A> 操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-744">By default, the <xref:System.Activities.WorkflowApplication.Terminate%2A> operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-745">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-745">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-746">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-746">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-747">ワークフローの開始後に、<xref:System.Activities.WorkflowApplication.Terminate%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-747">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="d8b55-748">このワークフローが終了すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-748">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow f87c6f91-4fe4-40b9-b7cb-4f1bd071bf84 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#18](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (Exception reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(class System.Exception reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As Exception, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(Exception ^ reason, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Exception" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="d8b55-749">ワークフロー インスタンスを終了する理由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-749">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-750">
            <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> 操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-750">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-751">指定された例外およびタイムアウト期間を使用して、ワークフロー インスタンスを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-751">Terminates a workflow instance using the specified exception and time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-752">このメソッドは、ワークフローの終了をスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-752">This method schedules the termination of the workflow.</span></span> <span data-ttu-id="d8b55-753">終了操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-753">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-754">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-754">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-755">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-755">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-756">ワークフローの開始後に、<xref:System.Activities.WorkflowApplication.Terminate%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-756">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="d8b55-757">このワークフローが終了すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-757">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 Terminated.  
Exception: System.ApplicationException  
Terminating the workflow.   
Workflow de28efe5-9057-472b-8d95-899c249893c5 unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#17](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Terminate">
      <MemberSignature Language="C#" Value="public void Terminate (string reason, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Terminate(string reason, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Terminate (reason As String, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Terminate(System::String ^ reason, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="reason">
          <span data-ttu-id="d8b55-758">ワークフロー インスタンスを終了する理由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-758">The reason for terminating the workflow instance.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="d8b55-759">
            <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> 操作が取り消されて <see cref="T:System.TimeoutException" /> がスローされるまでに、操作が完了する必要がある間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-759">The interval in which the <see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /> operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-760">指定されたエラー メッセージおよびタイムアウト期間を使用して、ワークフロー インスタンスを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-760">Terminates a workflow instance using the specified error message and time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-761">このメソッドは、ワークフロー インスタンスの終了をスケジュールします。</span><span class="sxs-lookup"><span data-stu-id="d8b55-761">This method schedules the termination of the workflow instance.</span></span> <span data-ttu-id="d8b55-762">終了操作が完了したら通知されるようにするには、<xref:System.Activities.WorkflowApplication.Completed%2A> ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-762">To be notified when the termination has completed, use the <xref:System.Activities.WorkflowApplication.Completed%2A> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-763">次の例では、<xref:System.Activities.WorkflowApplication> を使用してワークフローをホストしています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-763">The following example hosts a workflow using <xref:System.Activities.WorkflowApplication>.</span></span> <span data-ttu-id="d8b55-764">指定のワークフロー定義を使用して <xref:System.Activities.WorkflowApplication> インスタンスが構築され、必要なワークフローのライフサイクル イベントが処理され、<xref:System.Activities.WorkflowApplication.Run%2A> の呼び出しを使用してワークフローが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-764">A <xref:System.Activities.WorkflowApplication> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <xref:System.Activities.WorkflowApplication.Run%2A>.</span></span> <span data-ttu-id="d8b55-765">ワークフローの開始後に、<xref:System.Activities.WorkflowApplication.Terminate%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-765">After the workflow is started, <xref:System.Activities.WorkflowApplication.Terminate%2A> is called.</span></span> <span data-ttu-id="d8b55-766">このワークフローが終了すると、次の出力がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-766">When the workflow is terminated, the following output is displayed to the console.</span></span>  
  
```Output  
Starting the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c Terminated.   
Exception: System.Activities.WorkflowApplicationTerminatedException  
Terminating the workflow.   
Workflow 2897d2ef-377e-4224-ae93-5c19b38f487c unloaded.  
  
```  
  
 [!code-csharp[CFX_WorkflowApplicationExample#19](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unload">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-767">ワークフロー インスタンスを永続化しアンロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-767">Persists and unloads a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-768">既定では、アンロード操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-768">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="d8b55-769">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-769">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-770">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-770">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-771">ワークフロー インスタンスを永続化しアンロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-771">Persists and unloads a workflow instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-772">既定では、アンロード操作は 30 秒以内に完了する必要があります。完了しない場合、<xref:System.TimeoutException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-772">By default, the unload operation must complete in 30 seconds or a <xref:System.TimeoutException> is thrown.</span></span>  
  
 <span data-ttu-id="d8b55-773">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-773">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-774">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-774">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-775">次のコード例の一部である、 [NoPersistScope アクティビティ](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-775">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="d8b55-776">この例では、ワークフローがアイドル状態で、ホスト アプリケーションがユーザー入力を待っています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-776">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="d8b55-777">ユーザーがアンロードを選択すると、<xref:System.Activities.WorkflowApplication.Unload%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-777">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="d8b55-778">成功すると、ワークフローは永続化され、メモリからアンロードされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-778">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public void Unload (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unload(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unload (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unload(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="d8b55-779">操作が取り消され <see cref="T:System.TimeoutException" /> がスローされるまでの時間の長さ。アンロード操作は、この時間内に完了する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-779">The interval in which the unload operation must complete before the operation is canceled and a <see cref="T:System.TimeoutException" /> is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8b55-780">指定されたタイムアウト期間を使用して、ワークフロー インスタンスを永続化しアンロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-780">Persists and unloads a workflow instance using the specified time-out interval.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8b55-781">ワークフロー インスタンスが永続化ストアから読み込まれたものである場合は、ワークフローの読み込みに使用された同じ <xref:System.Runtime.DurableInstancing.InstanceStore> が、永続化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-781">If the workflow instance was previously loaded from persistence, then the same <xref:System.Runtime.DurableInstancing.InstanceStore> used to load the workflow is used for persistence.</span></span> <span data-ttu-id="d8b55-782">ワークフローが作成されたものであり、まだ永続化されていない場合は、このメソッドを呼び出す前に <xref:System.Activities.WorkflowApplication.InstanceStore%2A> を構成する必要があります。この操作を行わないと、このメソッドを呼び出したときに <xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-782">If the workflow was created and has not yet been persisted, then an <xref:System.Activities.WorkflowApplication.InstanceStore%2A> must be configured before calling this method or else an <xref:System.InvalidOperationException> is thrown when this method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d8b55-783">次のコード例の一部である、 [NoPersistScope アクティビティ](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)サンプルです。</span><span class="sxs-lookup"><span data-stu-id="d8b55-783">The following code example is part of the [NoPersistScope Activity](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md) sample.</span></span> <span data-ttu-id="d8b55-784">この例では、ワークフローがアイドル状態で、ホスト アプリケーションがユーザー入力を待っています。</span><span class="sxs-lookup"><span data-stu-id="d8b55-784">In this example, the workflow is idle and the host application is waiting for user input.</span></span> <span data-ttu-id="d8b55-785">ユーザーがアンロードを選択すると、<xref:System.Activities.WorkflowApplication.Unload%2A> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-785">If the user chooses to unload, <xref:System.Activities.WorkflowApplication.Unload%2A> is called.</span></span> <span data-ttu-id="d8b55-786">成功すると、ワークフローは永続化され、メモリからアンロードされます。</span><span class="sxs-lookup"><span data-stu-id="d8b55-786">If successful, the workflow is persisted and unloaded from memory.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#20](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public Action&lt;System.Activities.WorkflowApplicationEventArgs&gt; Unloaded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Action`1&lt;class System.Activities.WorkflowApplicationEventArgs&gt; Unloaded" />
      <MemberSignature Language="DocId" Value="P:System.Activities.WorkflowApplication.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Property Unloaded As Action(Of WorkflowApplicationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ Unloaded { Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ get(); void set(Action&lt;System::Activities::WorkflowApplicationEventArgs ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Action&lt;System.Activities.WorkflowApplicationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8b55-787">現在のワークフローがアンロードされると呼び出される <see cref="T:System.Action`1" /> を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-787">Gets or sets the <see cref="T:System.Action`1" /> that is invoked when the current workflow unloads.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d8b55-788">ワークフロー インスタンスがアンロードされると呼び出されるアクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8b55-788">An action that is invoked when a workflow instance is unloaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d8b55-789"><xref:System.Activities.WorkflowApplicationEventArgs> インスタンスの <xref:System.Activities.WorkflowApplication.Unloaded%2A> ハンドラーに渡される <xref:System.Activities.WorkflowApplication> を調べ、アンロードされたワークフローの <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> を表示するコード サンプルを次に示します。</span><span class="sxs-lookup"><span data-stu-id="d8b55-789">The following code example inspects the <xref:System.Activities.WorkflowApplicationEventArgs> passed into the <xref:System.Activities.WorkflowApplication.Unloaded%2A> handler of a <xref:System.Activities.WorkflowApplication> instance and displays the <xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A> of the workflow that was unloaded.</span></span>  
  
 [!code-csharp[CFX_WorkflowApplicationExample#3](~/samples/snippets/csharp/VS_Snippets_CFX/cfx_workflowapplicationexample/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>