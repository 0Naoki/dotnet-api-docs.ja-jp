<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c00082f02c7852e4964fe0a4714ce5e14ed5792a" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51886850" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>あらかじめ定義した設定でコントロールを Web ページに追加できるように、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール (または <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールとして使用される他の ASP.NET サーバー コントロール) の記述ファイルをインポートします。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールにより、ユーザーに設定を示す記述ファイルをインポートする、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールまたはユーザーに追加するサーバー コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン。  
  
 ユーザーが、記述ファイルをインポートした後、<xref:System.Web.UI.WebControls.WebParts.WebPart>内で、ファイルで参照されているコントロールが表示されます、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>制御、およびユーザーは、ページにコントロールを追加できます。  
  
 説明のファイルは、コントロール自体と同じではありません。 XML ファイルで終了するには、します。Web パーツの拡張機能が名前/値ペア----コントロールの状態を記述するプロパティ値ほとんど含まれています。 トピックの説明に従って、指定された XML 形式に従って記述ファイルが作成された[Web パーツ コントロール記述ファイル](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)します。  
  
 記述ファイルを参照するコントロールをアセンブリにコンパイルすることができますか、または .ascx ファイルで定義されたユーザー コントロールであることができます。 いずれの場合も、インポートされた記述ファイルで参照されるコントロールはコントロールをインポートしようとするページをホストする Web サーバーで存在する必要があります。 記述ファイルがコントロールを含むコントロール名とアセンブリ (またはファイル) を参照して、記述ファイルには、コントロールのプロパティの値、外観、および動作に影響する設定が含まれています。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールがコントロールの設定を共有できます。 複雑なコントロールには、多くのプロパティと設定を持つことができます。 たとえば、カスタム、大企業内の一般的なイントラネット サイトで<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールには、データベース接続、部門別の情報などのユーザーの環境に固有の値を保持するプロパティの数値が含まれます。 コントロールは、さまざまな外観に影響するプロパティを含めることも可能性があります。 1 人のユーザーでした、特定のサイト上のコントロールのカスタマイズし正しく動作するように、コントロールの記述ファイルをエクスポートし記述ファイルを他のイントラネットに完全に構成されたコントロールを追加するファイルをインポートする可能性がある他のユーザーと共有個人用に設定することを許可されているサイトです。 自分のサイトをホストしている Web サーバーで、コンパイル済みのアセンブリまたはコントロールを含むユーザー コントロール ファイルが存在する限り、ユーザーは、他の Web サイトにコントロールを追加できます。  
  
 メカニズムをユーザーが記述ファイルをインポート (とその関連付けられているサーバーが制御するため)、Web ページには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールで、ページの開発者が Web ページに追加する必要があります。 ページをカタログの表示モードに切り替えるときに、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールが表示され、ユーザーを参照するには、このコントロールでユーザーは、します。サーバー コントロールに対応する web パーツの説明ファイルをインポートします。 UI とによって提供される指示に従って、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール、ユーザーは、外観の説明がインポートされたファイルの指定された完全に構成されているプロパティと、Web ページに目的のサーバー コントロールを追加することができます。  
  
 前に、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの記述ファイルをインポートできる、ユーザーが (エクスポート) を作成する必要があります最初に、ファイル ベースの既存の<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 次の条件が満たされた場合、コントロールの記述ファイルをエクスポートできます。  
  
-   コントロールでマークされたプロパティがある、`Personalizable`属性。  
  
-   Web.config ファイルが、`enableExport`属性の値に設定`true`上、`<webParts>`要素。  
  
-   開発者の値の設定、<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>プロパティの既定値以外の値にコントロールを<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>エクスポートを禁止します。 場合、<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>プロパティの値に設定されて<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>、任意のプロパティを含む、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A>パラメーター、`Personalizable`属性は、ユーザーが記述ファイルをエクスポートする場合はエクスポートされません。 これにより、接続文字列などの機密データが特定の状況でエクスポートされることを防ぐためにコントロールの開発者ができます。  
  
 ユーザーが、コントロール、および保存する手順については、次の動詞メニューに表示されるエクスポートの動詞をクリックしてエクスポートを有効になっているコントロールをエクスポートします。Web パーツ コントロールのファイルを説明します。 他のユーザーは、コントロールの独自のインスタンスを構成するには、このファイルをインポートできます。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>クラスには、いくつかのプロパティが含まれています。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>記述ファイルを検索する参照するときに、プロパティにはユーザー向けの手順でテキストが含まれます。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>プロパティには内で表示されるように、インポートされたコントロールのラベルとして機能するテキストが含まれています、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>コントロールの説明がインポートされているときにエラーが発生した場合に表示されるテキストが含まれています。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>プロパティの既定のタイトルを割り当てる基本プロパティをオーバーライドする、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>開発者は、タイトルを割り当てない場合を制御します。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>プロパティには、説明ファイルをアップロードするユーザーがクリックしたボタンのテキストが含まれています、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>プロパティには、アップロード処理する方法について説明します。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>クラスには、いくつかの固有のメソッドも含まれています。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>メソッドを取得します、<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>オブジェクトごとに<xref:System.Web.UI.WebControls.WebParts.WebPart>これにより、カタログ内のコントロール、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>そのインスタンスを作成することがなく、各サーバー コントロールに関する情報を表示するコントロール。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>メソッドは、特定のインスタンスを取得します。<xref:System.Web.UI.WebControls.WebParts.WebPart>メソッドに渡される説明に基づいて、コントロール。  
  
 使用してに関連付けられているいくつかの本質的なリスクがある、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 1 つの例では、Web アプリケーションに悪意のあるデータをインポートする説明ファイルをインポートするために使用される可能性です。 場合 description ファイル内の文字列プロパティの値として、悪意のあるスクリプト コードを配置だれかが、そのスクリプトでした可能性のある実行されるユーザーが記述ファイルをインポートし、Web ページに、参照先のサーバー コントロールを追加します。 悪意のあるデータ記述ファイルをインポートするリスクを最小限に抑えるには、文字列型のプロパティを持つサーバー コントロールでは常にプロパティ データをエンコードする必要があります。 別のリスクには、記述ファイルからの種類のインポートが含まれます (を参照してください[Web パーツ コントロール記述ファイル](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8))。 悪意のあるユーザーに多くのアセンブリを読み込む要求を送信でした、 <xref:System.AppDomain>、過剰なメモリが消費される量の結果として得られる。  
  
 インポートに関連するリスクを避けるためには、無効にできます機能は、まったくインポート機能を使用または<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 または、コントロールにはどのようなユーザーがアクセスを制限することができます。 これを実行できますプログラムでは、ロール管理を使用して (を参照してください[承認を使用してロールの管理](https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195))。 たとえば、ページが読み込まれると、ユーザーが管理者の役割などの特定のロールでかどうかをテストする可能性があります。 ユーザーがロールのかどうか、プログラムで追加、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールをそのユーザーのページ。 使用できるユーザーのセットに限定する宣言型のアプローチを使用することも、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。  カタログを含む web ページ内で 2 つ配置できます<xref:System.Web.UI.WebControls.WebParts.CatalogZone>コントロール: インポートには、ユーザーのいずれかとのことはできません。 インポートできるユーザーのゾーンには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 ゾーン自体の内側に配置できます、<xref:System.Web.UI.WebControls.LoginView>コントロールで、指定したユーザーまたはロールが認証されているもののみにゾーン コントロールの使用を制限することを有効にします。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Web ページの宣言とプログラミングを制御します。 この例では、4 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   含む Web ページ、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>コントロールと<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
-   ブラウザーでページを読み込む場合の例の動作の説明。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。 ファイルに次のソース コードを配置して、Displaymodemenucs.ascx または Displaymodemenuvb.ascx (言語に応じて使用している) 名前を付けますする必要があります。 詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 コード例の 2 番目の部分は、Web ページです。 ページの上部にある 2 つ`register`ディレクティブ、ユーザー コントロールおよびコンパイル済みのコンポーネントを含む 2 つのカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 ページがへの参照を宣言型であることを確認、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール、宣言型の要素の適切な階層内で入れ子にします。 いくつかのプロパティ値が宣言的に割り当てられていることにも注意してください、`<asp:importcatalogpart>`要素。 また、`Button1_Click`メソッドでプロパティ値の数を更新する、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。  
  
 ページの<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロール、2 つのカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを宣言します。 `<aspSample:userinfowebpart>`コントロールが、`exportmode="all"`属性。 記述ファイルを使用して、コントロールをインポートしたい他のユーザーでインポートできるコントロールの記述ファイルをエクスポートするユーザーを有効にするには、この属性が必要です。  
  
> [!NOTE]
>  記述ファイルをエクスポートする Web パーツ アプリケーションのユーザーを有効にする<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを追加して Web アプリケーションのエクスポート機能を有効にする必要がありますも、`enableExport="true"`属性を`<webParts>`要素 (、の子である`<system.web>`要素)、Web.config ファイルでします。 エクスポートが既定で無効になっている、ため、アプリケーションのエクスポートをまだ有効にしなかった場合、Web.config ファイルを編集し、今すぐそうです。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 コード例の 3 番目の部分は、2 つのソース コード<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 これらのコントロールにいくつかのプロパティでマークされたに注意してください、`WebBrowsable`属性。 これにより、<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>コントロールが編集モードになるときに、これらのプロパティを編集するユーザーのユーザー インターフェイス (UI) を動的に生成するコントロール。 プロパティが付いていますも、`WebDisplayName`属性、編集 UI 内の各コントロールの横に表示されるラベルのテキストを指定します。 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例では、動的なコンパイルを使用します。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 カスタム コントロールと呼ばれる`TextDisplayWebPart`で Web ページで参照されている場合は、`<aspSample:TextDisplayWebPart>`要素。 その他のコントロールと呼ばれる`UserInfoWebPart`、宣言されて Web ページで最初に、コントロールの記述ファイルをインポートする機能を示すために後で削除しますが。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 コード例を実行するようになりました。 ブラウザーで Web ページを読み込みます。 編集するのには、まず、`UserInfoWebPart`コントロール。 使用して、**表示モード**ドロップダウン リスト コントロールと選択**編集**編集モードにページに切り替えます。 動詞メニューのをクリックして、`UserInfoWebPart`コントロール (タイトル バーの下向きの矢印) をクリックして**編集**します。 編集用の UI が表示されたら、いくつかの編集コントロールが下に表示されます、`UserInfoWebPart`コントロールを使用してそのフィールドの値を編集できます。 いくつかのフィールドの編集 をクリックして**OK**、しを使用して、**表示モード**ドロップダウン リストで、ページをブラウズ モードを返します。  
  
 エクスポートする 2 番目の手順では、します。Web パーツの記述ファイルを`UserInfoWebPart`コントロール。 (タイトル バーの下向きの矢印で表される)、カスタム コントロールの動詞メニューをクリックし、をクリックして**エクスポート**します。 指示に従って保存します。Web パーツ コントロールのファイルを説明します。 これで、Web ページを閉じ、エディターで、ページのソースを編集します。 削除、`<aspSample:userinfowebpart>`宣言の要素を制御し、保存して、ファイルを閉じます。 (まだないユーザーをシミュレートするには、この手順を実行して、`UserInfoWebPart`コントロールをページにコントロールをインポートできるように) します。  
  
 ブラウザーでもう一度 Web ページを読み込みます。 `UserInfoWebPart`削除したため、コントロールを表示できません。 使用して、**表示モード**ドロップダウン リスト コントロールと選択**カタログ**カタログ モードにページを切り替える。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールをクリックして、**参照**ボタンをクリックしを参照します。Web パーツは、ファイルが作成されると、表示し、クリックして、**アップロード**ボタンをクリックします。 コントロールへの参照は、その横にあるチェック ボックスで表示されます。 チェック ボックスを選択し、クリックして**追加**ページにコントロールを追加します。  
  
 このページのビューには、クリックして、 **Update ImportCatalogPart**でプロパティ値の数をプログラムで更新の影響を確認するページの下部付近にボタン、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 ボタンをクリックすると、UI のさまざまなプロパティを変更する方法を確認します。  
  
 最後に、クリックして**閉じる**カタログ モードを終了し、ページをブラウズ モードを返します。 `UserInfoWebPart`とき、以前にエクスポートした値を含むページで、コントロールが表示されるようになりました。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">Web パーツ コントロール記述ファイル</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A>コンス トラクターは、既定値以外のコンス トラクターが宣言されていない、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>クラスとそのため、不要に特別なタスクを実施するクラスの新しいインスタンスが作成されるとします。 .NET Framework は、クラスのインスタンスを作成するのに内部コンス トラクターを使用します。  
  
 通常使用する必要はありません、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A>プログラムで独自のコードでコンス トラクター。 コントロールの使用目的は、デザイン時にページに宣言によって追加、ページ開発者です。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーに、記述ファイルの場所を参照するように指示するテキスト メッセージを取得または設定します。</summary>
        <value>メッセージのテキストを含む文字列。 既定値は、.NET Framework が提供する、カルチャ固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>プロパティのユーザーのインポートのコントロールを追加するプロセスで行う必要がありますが、まず簡単な概要を示します。 パスを入力するか、ファイルを参照して、記述ファイルの場所を指定します。 このプロパティのカスタム値を指定する一般的な理由は、ユーザー、記述ファイルを検索するように、参照する必要があります、特定のネットワーク共有などの特別な指示があるかどうかです。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>プロパティ宣言とプログラミングします。 完全なコードと手順については、例を実行するために必要なセクションの例を参照してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>クラスの概要。  
  
 コードの次のセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>宣言によって、コントロールのプロパティ値が設定されます。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>プロパティの値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに使用できます、**表示モード**選択するドロップダウン リスト コントロール**カタログ モード**ページをカタログのモードに切り替えます。 カタログのモードとアップロードの説明ファイルで、このページとのユーザー インターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 クリックすると、**記述ファイルのアップロード**ボタン、UI 内のプロパティのいくつかのテキストを変更すると、テキストを含む、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー インターフェイス (UI) で、ボタンを含むフォームがレンダリングされるときにフォーカスを得る既定のボタンとして扱うボタンを取得または設定します。 このプロパティは、ページ開発者コードから呼び出すためのものではありません。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Button" /> コントロールで既定のフォーカスを受け取る <see cref="T:System.Web.UI.WebControls.Panel" /> の ID を含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティのコードから継承される基本プロパティを上書きする、<xref:System.Web.UI.WebControls.Panel>クラス デザイナーからプロパティを非表示にし、テーマに影響されるを防ぐことです。 パブリックですが、このプロパティは、Web パーツ コントロールがこのコントロールの既定のレンダリングのセットで内部的に使用、ページの開発者によって使用されるものではありません。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>カタログ内で利用できる <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの説明のコレクションを返します。</summary>
        <returns>カタログ内の各コントロールの <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> を含む <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>で抽象基本メソッドが宣言されたメソッドが実装を提供します、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>クラス。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>メソッドは、カタログ内の各コントロールの説明情報を返します。 場合に注意してください、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールがありますもことができる 1 台のサーバー コントロール カタログに、時に、メソッドは、複数のコントロールがあった場合は機能します。  
  
 A<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>オブジェクトは、重要な情報を含むオブジェクトを<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールから継承されるいくつかの重要なプロパティの値をオブジェクト参照をその ID を含む、コントロール、<xref:System.Web.UI.WebControls.WebParts.Part>クラス<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>と<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>します。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>メソッドのパフォーマンスが向上します。 カタログが作成されると、タイトル、説明、アイコン (存在する場合、および ID を含むそれに含まれる各コントロールに関する情報が必要があります。 この情報を取得するには、各コントロールのインスタンスを作成するのではなく、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>呼び出しカタログを作成するゾーン、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>メソッド、および呼び出しのインスタンスではなく、コントロールの説明情報のみを返します、コントロール。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Web ページ上のメソッド。 この例では、4 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   含む Web ページ、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>コントロールと<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール、コードを使用すると、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>メソッド。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
-   ブラウザーでページを読み込む場合の例の動作の説明。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。 ファイルに次のソース コードを配置して、Displaymodemenucs.ascx または Displaymodemenuvb.ascx (言語に応じて使用している) 名前を付けますする必要があります。 詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 コード例の 2 番目の部分は、Web ページです。 ページの上部にある 2 つ`register`ディレクティブ、ユーザー コントロールおよびコンパイル済みのコンポーネントを含む 2 つのカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 これらのコントロールは、ページのマークアップで宣言によって参照されます。 宣言型の参照で、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (から始まる、`aspSample`プレフィックス) が各ことに注意してください、`exportMode="all"`属性を追加します。 この属性では、エクスポートすることができます、します。ページにコントロールをインポートする手順を後で使用すると、コントロールの説明ファイルを web パーツです。  
  
> [!NOTE]
>  記述ファイルをエクスポートする Web パーツ アプリケーションのユーザーを有効にする<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを追加して Web アプリケーションのエクスポート機能を有効にする必要がありますも、`enableExport="true"`属性を`<webParts>`要素 (、の子である`<system.web>`要素)、Web.config ファイルでします。 エクスポートが既定で無効になっている、ため、アプリケーションのエクスポートをまだ有効にしなかった場合、Web.config ファイルを編集し、今すぐそうです。  
  
 Web ページにもへの参照を宣言、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール、宣言型の要素の適切な階層内で入れ子にします。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>内のコードでメソッドが呼び出される、`Button1_Click`メソッド。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 コード例の 3 番目の部分は、2 つのソース コード<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例では、動的なコンパイルを使用します。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 コード例を実行するようになりました。 ブラウザーで Web ページを読み込みます。 最初の手順では、エクスポートします。各 web パーツの説明ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (用、`TextDisplayWebPart`との`UserInfoWebPart`コントロール)。 各コントロールについて (タイトル バーの下向きの矢印で表される)、コントロールの動詞メニューをクリックし をクリックして**エクスポート**します。 指示に従って保存します。Web パーツ コントロールのファイルを説明します。 各コントロールの記述ファイルをエクスポートした後は、Web ページを閉じて、エディターで、ページのソースを編集します。 削除、 `<aspSample:userinfowebpart>` 、`<aspSample:textdisplaywebpart>`宣言要素を制御し、保存およびファイルを閉じます。 (はまだありませんこれらのコントロールをページにコントロールをインポートできるようにユーザーをシミュレートするには、この手順を実行している。)  
  
 ブラウザーでもう一度 Web ページを読み込みます。 使用して、**表示モード**ドロップダウン リスト コントロールと選択**カタログ**カタログ モードにページを切り替える。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールをクリックして、**参照**ボタンを参照します。作成した web パーツのファイルは、1 つを選択し、クリックして、**アップロード**ボタンをクリックします。 コントロールへの参照は、その横にあるチェック ボックスで表示されます。 チェック ボックスを選択し、クリックして**追加**ページにコントロールを追加します。 別のコントロールには、このプロセスを繰り返します。  
  
 このページのビューでは、クリックして、 **web パーツの説明を取得**をプログラムでアクセスするための効果を表示するページの下部付近にボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>オブジェクトに現在読み込まれて、コントロールの説明の<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 説明の詳細にアクセスするために使用するメソッド、`Button1_Click`ページのソースのメソッドは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>メソッド。 ボタンの下のラベルには、コントロールに関する基本的な詳細が表示されます。  
  
 最初のコントロールを追加した後、ページに 2 つ目のコントロールを追加するプロセスを繰り返します。 最後に、クリックして**閉じる**カタログ モードを終了し、ページをブラウズ モードを返します。 両方のカスタム コントロールが以前記述ファイルにエクスポートしたときの値を含む、ページに表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">コントロールに関する詳細を格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />。</param>
        <summary>メソッドに渡される説明の値に基づいて、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールへの参照を返します。</summary>
        <returns>説明が <paramref name="description" /> の値に一致する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>メソッドへの参照を返します、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの値と一致している説明の詳細、<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>メソッドに渡されるオブジェクト。 同時にこのメソッドを使用する、通常、<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>メソッドで、カタログ内のコントロールの説明を取得するために使用します。 個別<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは、取得または個別に渡すことによって、必要に応じて操作<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>オブジェクトを<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>メソッド。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Web ページ上のメソッド。 この例では、4 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   含む Web ページ、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>コントロールと<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール、コードを使用すると、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>メソッド。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
-   ブラウザーでページを読み込む場合の例の動作の説明。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。 ファイルに次のソース コードを配置して、Displaymodemenucs.ascx または Displaymodemenuvb.ascx (言語に応じて使用している) 名前を付けますする必要があります。 詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 コード例の 2 番目の部分は、Web ページです。 ページの上部にある 2 つ`register`ディレクティブ、ユーザー コントロールおよびコンパイル済みのコンポーネントを含む 2 つのカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 これらのコントロールは、ページのマークアップで宣言によって参照されます。 宣言型の参照で、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (から始まる、`aspSample`プレフィックス) が各ことに注意してください、`exportMode="all"`属性を追加します。 この属性では、エクスポートすることができます、します。ページにコントロールをインポートする手順を後で使用すると、コントロールの説明ファイルを web パーツです。  
  
> [!NOTE]
>  記述ファイルをエクスポートする Web パーツ アプリケーションのユーザーを有効にする<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを追加して Web アプリケーションのエクスポート機能を有効にする必要がありますも、`enableExport="true"`属性を`<webParts>`要素 (、の子である`<system.web>`要素)、Web.config ファイルでします。 エクスポートが既定で無効になっている、ため、アプリケーションのエクスポートをまだ有効にしなかった場合、Web.config ファイルを編集し、今すぐそうです。  
  
 Web ページにもへの参照を宣言、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール、宣言型の要素の適切な階層内で入れ子にします。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>内のコードでメソッドが呼び出される、`Button2_Click`メソッド。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 コード例の 3 番目の部分は、2 つのソース コード<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例では、動的なコンパイルを使用します。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 コード例を実行するようになりました。 ブラウザーで Web ページを読み込みます。 最初の手順では、エクスポートします。各 web パーツの説明ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (用、`TextDisplayWebPart`との`UserInfoWebPart`コントロール)。 各コントロールについて (タイトル バーの下向きの矢印で表される)、コントロールの動詞メニューをクリックし をクリックして**エクスポート**します。 指示に従って保存します。Web パーツ コントロールのファイルを説明します。 各コントロールの記述ファイルをエクスポートした後は、Web ページを閉じて、エディターで、ページのソースを編集します。 削除、 `<aspSample:userinfowebpart>` 、`<aspSample:textdisplaywebpart>`宣言要素を制御し、保存およびファイルを閉じます。 (はまだありませんこれらのコントロールをページにコントロールをインポートできるようにユーザーをシミュレートするには、この手順を実行している。)  
  
 ブラウザーでもう一度 Web ページを読み込みます。 使用して、**表示モード**ドロップダウン リスト コントロールと選択**カタログ**カタログ モードにページを切り替える。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールをクリックして、**参照**ボタンを参照します。作成した web パーツのファイルは、1 つを選択し、クリックして、**アップロード**ボタンをクリックします。 コントロールへの参照は、その横にあるチェック ボックスで表示されます。 コントロールの説明にアップロードできた、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールをクリックして、**使用 GetWebPart**ページの下部にあるボタンをクリックします。 これには、呼び出す場合の効果を示します、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>メソッドと、現在読み込まれているコントロールの説明を渡す、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 関連付けられたサーバー コントロールが追加すぐに、Web ページをクリックする必要はありません、**追加**ボタンをクリックします。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>メソッドで呼び出される、`Button2_Click`ページのソースのメソッドを返します、<xref:System.Web.UI.WebControls.WebParts.WebPart>に読み込まれている現在の説明に関連付けられたコントロール、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 [次へ]、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>メソッドが呼び出されると、および<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは、ページに直接追加されます。 これからプログラムでコントロールを追加する方法を示して、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>ユーザーの介入なしのコントロール。  
  
 最初のコントロールを追加した後、ページに 2 つ目のコントロールを追加するプロセスを繰り返します。 最後に、クリックして**閉じる**カタログ モードを終了し、ページをブラウズ モードを返します。 両方のカスタム コントロールが以前記述ファイルにエクスポートしたときの値を含む、ページに表示されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="description" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="description" /> が、使用できる <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> 値ではありません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが記述ファイルをインポートした後に表示されるテキストを取得または設定します。これは、インポートされたコントロールのカタログ内で個別のインポート済みコントロールを表現または説明するためのテキストです。</summary>
        <value>ラベルのテキストを含む文字列。 既定値は、.NET Framework が提供する、カルチャ固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>に含まれるコントロールを説明する短い、一般的なラベルを格納するプロパティが通常使用、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>プロパティ宣言とプログラミングします。 完全なコードと手順については、例を実行するために必要なセクションの例を参照してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>クラスの概要。  
  
 コードの次のセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>宣言によって、コントロールのプロパティ値が設定されます。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>プロパティの値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに使用できます、**表示モード**選択するドロップダウン リスト コントロール**カタログ モード**ページをカタログのモードに切り替えます。 カタログのモードとアップロードの説明ファイルで、このページとのユーザー インターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 クリックすると、**記述ファイルのアップロード**ボタン、UI 内のプロパティのいくつかのテキストを変更すると、テキストを含む、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インポート プロセスでエラーが発生した場合に表示されるエラー メッセージを取得または設定します。</summary>
        <value>ラベルのテキストを含む文字列。 既定値は、.NET Framework が提供する、カルチャ固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>プロパティは、ページが、記述ファイルをインポートしようとしています。 中にいくつかの問題やエラーが発生した場合、ユーザーに通知するために役立ちます。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>プロパティ宣言とプログラミングします。 完全なコードと手順については、例を実行するために必要なセクションの例を参照してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>クラスの概要。  
  
 コードの次のセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>宣言によって、コントロールのプロパティ値が設定されます。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>プロパティの値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに使用できます、**表示モード**選択するドロップダウン リスト コントロール**カタログ モード**ページをカタログのモードに切り替えます。 カタログのモードとアップロードの説明ファイルで、このページとのユーザー インターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 クリックすると、**記述ファイルのアップロード**ボタン、UI 内のプロパティのいくつかのテキストを変更すると、テキストを含む、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> コントロールのタイトル バーに表示されるタイトルを取得または設定します。</summary>
        <value>コントロールのタイトルとして使用される文字列。 既定値は、Web パーツ コントロール セットによって提供される、計算済みのコントロール名です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>プロパティ値のタイトル バーに表示されます、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールをカタログのモードで表示するときを制御します。 使用して、プロパティの値を設定するには、ページのコントロールを宣言すると、ときに、`Title`属性。 タイトルの値を指定しない場合、カルチャ固有の既定値は、このコントロールでユーザーを編集できるプロパティの種類を記述する使用されます。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>プロパティ宣言とプログラミングします。 完全なコードと手順については、例を実行するために必要なセクションの例を参照してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>クラスの概要。  
  
 コードの次のセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>宣言によって、コントロールのプロパティ値が設定されます。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>プロパティの値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに使用できます、**表示モード**選択するドロップダウン リスト コントロール**カタログ モード**ページをカタログのモードに切り替えます。 カタログのモードとアップロードの説明ファイルで、このページとのユーザー インターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 クリックすると、**記述ファイルのアップロード**ボタン、UI 内のプロパティのいくつかのテキストを変更すると、テキストを含む、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>記述ファイルのアップロードを開始する <see cref="T:System.Web.UI.WebControls.Button" /> コントロールのテキストを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Button" /> のテキストとして使用される文字列。 既定値は、Web パーツ コントロール セットによって提供されるカルチャ固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>プロパティのテキストを提供する、<xref:System.Web.UI.WebControls.Button>アップロード プロセスを開始するコントロール。 このプロパティは、または、カスタム テキストを割り当てるかどうか、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>プロパティ、テキストをユーザーが記述ファイルをアップロードすることが明確にする必要があります。 テキストは、たとえばまたはアップロード プロセスが実際に、コントロール自体をアップロードすることを意味する必要がありますできません。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>プロパティ宣言とプログラミングします。 完全なコードと手順については、例を実行するために必要なセクションの例を参照してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>クラスの概要。  
  
 コードの次のセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>宣言によって、コントロールのプロパティ値が設定されます。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>プロパティの値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに使用できます、**表示モード**選択するドロップダウン リスト コントロール**カタログ モード**ページをカタログのモードに切り替えます。 カタログのモードとアップロードの説明ファイルで、このページとのユーザー インターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 クリックすると、**記述ファイルのアップロード**ボタン、UI 内のプロパティのいくつかのテキストを変更すると、テキストを含む、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーに記述ファイルをアップロードする方法を通知するメッセージのテキストを取得または設定します。</summary>
        <value>ユーザーが記述ファイルをアップロードするときの指示として使用される文字列。 既定値は、Web パーツ コントロール セットによって提供されるカルチャ固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>短い文または語句の手順については、ユーザーは、記述ファイルをアップロードするためのボタンをクリックすることを示すプロパティを提供します。 このプロパティは、または、カスタム テキストを割り当てるかどうか、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>プロパティ、テキストをユーザーが記述ファイルをアップロードすることが明確にする必要があります。 テキストは、たとえばまたはアップロード プロセスが実際に、コントロール自体をアップロードすることを意味する必要がありますできません。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>プロパティ宣言とプログラミングします。 完全なコードと手順については、例を実行するために必要なセクションの例を参照してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>クラスの概要。  
  
 コードの次のセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>宣言によって、コントロールのプロパティ値が設定されます。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションで、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>プロパティの値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに使用できます、**表示モード**選択するドロップダウン リスト コントロール**カタログ モード**ページをカタログのモードに切り替えます。 カタログのモードとアップロードの説明ファイルで、このページとのユーザー インターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロール。 クリックすると、**記述ファイルのアップロード**ボタン、UI 内のプロパティのいくつかのテキストを変更すると、テキストを含む、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
  </Members>
</Type>