<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IWebPartField.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e394a26b3c9c60bd5b01ccbaf7ae38a6ac135251.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e394a26b3c9c60bd5b01ccbaf7ae38a6ac135251</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>Defines a provider interface for connecting two server controls using a single field of data.</source>
          <target state="translated">単一のデータ フィールドを使用して 2 つのサーバー コントロールを接続するためのプロバイダー インターフェイスを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>This interface is designed to be used with Web Parts connections.</source>
          <target state="translated">このインターフェイスは、Web パーツの接続で使用するよう設計されています。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>In a Web Parts connection, two server controls that reside in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> zone establish a connection and share data, with one control acting as the consumer and the other control acting as a provider.</source>
          <target state="translated">内に存在する 2 つのサーバー コントロール、Web パーツ接続において、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph>ゾーンは、コンシューマーとして機能する 1 つの制御と、その他のプロバイダーとして機能するコントロール接続と共有のデータを確立します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The mechanism for sharing data in a Web Parts connection is an interface instance, which the provider serves to the consumer by means of a callback method.</source>
          <target state="translated">Web パーツ接続でデータを共有するためのメカニズムは、コールバック メソッドを使用して、プロバイダーがコンシューマーに機能する、インターフェイス インスタンスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>To establish a connection, the consumer and provider must both work with the same interface type for sharing data.</source>
          <target state="translated">接続を確立するためにコンシューマーおよびプロバイダー必要があります両方動作と同じインターフェイスの種類データを共有します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>If the consumer does not recognize the interface type sent by the provider, it is still possible to connect the controls by means of a transformer (a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> object) that translates the interface instance sent by the provider into a type that the consumer recognizes.</source>
          <target state="translated">トランスフォーマーを使用して、コントロールを接続することも可能では、コンシューマーが、プロバイダーによって送信されたインターフェイスの型を認識しない場合 (、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph>オブジェクト)、コンシューマーによって認識される型に、プロバイダーによって送信されたインターフェイスのインスタンスに変換します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>For details on connections, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph> and <bpt id="p1">[</bpt>Web Parts Connections Overview<ept id="p1">](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)</ept>.</source>
          <target state="translated">接続の詳細については、「<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph>と<bpt id="p1">[</bpt>Web パーツ接続の概要<ept id="p1">](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)</ept>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface is a provider interface included with the Web Parts control set as a standard interface for creating connections based on a data field.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>インターフェイスは、Web パーツ コントロールのデータ フィールドに基づく接続を作成するための標準インターフェイスとしてセットに含まれているプロバイダーのインターフェイスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>You can also create custom interfaces to use with Web Parts connections, but in many data-driven Web applications, it is useful to create connections based on a common row (for details, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;</ph> interface), table (for details, see the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable&gt;</ph> interface), or field from the data source, using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface.</source>
          <target state="translated">Web パーツの接続で使用するカスタムのインターフェイスを作成することもできますが、多くのデータ ドリブンの Web アプリケーション、共通の行に基づいて接続を作成すると便利です (詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartRow&gt;</ph>インターフェイス)、テーブル (詳細については、次を参照してください。、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartTable&gt;</ph>インターフェイス)、またはデータからフィールドを使用して、ソース、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>In a typical connection, a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control acting as a provider would implement the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface and provide an instance of the interface to consumers in a special callback method.</source>
          <target state="translated">一般的な接続で、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph>プロバイダーを実装するように機能を制御、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>インターフェイスし、特殊なコールバック メソッドのコンシューマーにインターフェイスのインスタンスを提供します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>For example, the provider might implement an <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface for a field in your user information table that contains a Web user's postal code data.</source>
          <target state="translated">たとえば、プロバイダーを実装する<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>Web ユーザーの郵便番号データを含む、ユーザー情報テーブル内のフィールドのインターフェイスです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>Another <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control acting as a consumer would define a special method to receive the interface instance, and could then extract the postal code data, and look up and display weather information based on the postal code.</source>
          <target state="translated">別<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph>コンシューマー インターフェイス インスタンスが表示される可能性があります郵便番号データを抽出しを検索し、郵便番号に基づく天気情報を表示する特別なメソッドを定義するように動作するを制御します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface has two exposed members.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>インターフェイスが公開されている 2 つのメンバーです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A&gt;</ph> property returns schema information about the data field encapsulated in a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A&gt;</ph>にカプセル化されたデータ フィールドに関するスキーマ情報を返します、<ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A&gt;</ph> method declares a method that an implementer (such as a provider control) uses to retrieve the interface instance's field data when the callback method is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A&gt;</ph>メソッド (プロバイダー コントロールなど) を実装者が、コールバック メソッドが呼び出されたときに、インターフェイスのインスタンスのフィールドのデータの取得に使用するメソッドを宣言しています。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The following code example demonstrates how to create a static connection between two controls using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface.</source>
          <target state="translated">次のコード例を使用して 2 つのコントロール間の静的な接続を作成する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The code example has three parts:</source>
          <target state="translated">このコード例では、3 つの部分があります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>Source code for two custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls that can form a connection using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface, with one control acting as the provider, the other acting as the consumer.</source>
          <target state="translated">2 つのカスタムのコードをソース<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph>接続を使用して、構成できる、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>プロバイダーでは、コンシューマーとして機能する 1 つのコントロールとのインターフェイスです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>A Web page that hosts the controls and declares the static connection in persistence format.</source>
          <target state="translated">コントロールをホストし、永続化の形式で静的な接続を宣言する Web ページ。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>A description of what happens when the example code runs.</source>
          <target state="translated">コード例を実行時の動作の説明です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The first part of the code example is the source code for the two custom controls.</source>
          <target state="translated">コード例の最初の部分では、2 つのカスタム コントロールのソース コードを示します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>First is the code for the provider, which implements the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface.</source>
          <target state="translated">実装するプロバイダーのコードを 1 つ目は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>For simplicity in the example, the provider creates a table with some data rather than connecting to a database.</source>
          <target state="translated">例ではわかりやすくするため、プロバイダーは、データベースに接続するのではなく、一部のデータとテーブルを作成します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The <ph id="ph1">`GetConnectionInterface`</ph> method serves as the provider's connection point, the callback method that returns the interface instance to the consumer.</source>
          <target state="translated"><ph id="ph1">`GetConnectionInterface`</ph>メソッドは、プロバイダーの接続ポイントをコンシューマーにインターフェイスのインスタンスを返すコールバック メソッドとして機能します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>As for the consumer, it retrieves the interface instance from the provider in its method named <ph id="ph1">`SetConnectionInterface`</ph>, which is marked with a <ph id="ph2">`ConnectionConsumer`</ph> attribute.</source>
          <target state="translated">コンシューマーとそのインターフェイスのインスタンスをプロバイダーから取得という名前のメソッドで<ph id="ph1">`SetConnectionInterface`</ph>でマークされている、<ph id="ph2">`ConnectionConsumer`</ph>属性。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>After retrieving the instance of the interface, the consumer, in its <ph id="ph1">`OnPreRender`</ph> method, calls the implementation of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A&gt;</ph> method in the provider, to retrieve the actual data.</source>
          <target state="translated">インターフェイス、コンシューマーのインスタンスを取得した後、<ph id="ph1">`OnPreRender`</ph>メソッドの実装を呼び出す、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A&gt;</ph>実際のデータを取得する、プロバイダーのメソッドです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>For the code example to run, you must compile this source code.</source>
          <target state="translated">コード例を実行するには、このソース コードをコンパイルする必要があります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</source>
          <target state="translated">コンパイルするには明示的にし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに結果として得られるアセンブリを配置できます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</source>
          <target state="translated">またはを動的にコンパイルされる実行時に、サイトの App_Code フォルダー内のソース コードを配置することができます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>This code example uses dynamic compilation.</source>
          <target state="translated">このコード例では、動的なコンパイルを使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>For a walkthrough that demonstrates how to compile, see <bpt id="p1">[</bpt>Walkthrough: Developing and Using a Custom Web Server Control<ept id="p1">](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)</ept>.</source>
          <target state="translated">コンパイルする方法について説明するチュートリアルでは、次を参照してください。<bpt id="p1">[</bpt>チュートリアル: カスタム Web サーバー コントロールの開発と<ept id="p1">](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The second part of the code example is the Web page that declares the static connection and hosts the controls.</source>
          <target state="translated">コード例の 2 番目の部分は、静的な接続とホスト コントロールを宣言する Web ページです。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>Near the top of the page is a <ph id="ph1">`Register`</ph> directive that declares the namespace of the source code contained in the App_Code directory.</source>
          <target state="translated">ページの上部には、 <ph id="ph1">`Register`</ph> App_Code ディレクトリに含まれるソース コードの名前空間を宣言します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The connection is declared using an <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> element.</source>
          <target state="translated">使用して接続を宣言、<ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The custom consumer and provider controls are declared in a <ph id="ph1">`&lt;zonetemplate&gt;`</ph> element within an <ph id="ph2">`&lt;asp:webpartzone&gt;`</ph> element, which is required for them to be able to connect (they must reside within a zone that inherits from the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> class).</source>
          <target state="translated">コンシューマーおよびプロバイダーのカスタム コントロールが宣言されている、<ph id="ph1">`&lt;zonetemplate&gt;`</ph>内の要素、<ph id="ph2">`&lt;asp:webpartzone&gt;`</ph>接続できるようにするために必要である要素 (から継承するゾーン内に存在する必要がありますが、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph>クラス)。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>Load the page in a browser.</source>
          <target state="translated">ブラウザーでページを読み込みます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.IWebPartField">
          <source>The consumer control displays the data provided from the specified field, which the provider makes available through an instance of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface.</source>
          <target state="translated">コンシューマー コントロール プロバイダーのインスタンスで使用できる、指定したフィールドから提供されるデータを表示、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /&gt;</ph> delegate that contains the address of a method that receives the data.</source>
          <target state="translated">データを取得するメソッドのアドレスが格納された <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /&gt;</ph> デリゲート。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)">
          <source>Returns the value of the field that is being used by the interface as the basis of a connection between two <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /&gt;</ph> controls.</source>
          <target state="translated">インターフェイスで 2 つの <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /&gt;</ph> コントロール間の接続の基礎として使用されているフィールドの値を返します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)">
          <source>Use this method to retrieve the data field values passed by the interface.</source>
          <target state="translated">このメソッドを使用すると、インターフェイスによって渡されるデータ フィールドの値を取得できます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)">
          <source>The following code example shows the implementation and use of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例は、実装との使用を示しています。、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)">
          <source>The complete example is shown in the class overview for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface.</source>
          <target state="translated">完全な例のクラスの概要に表示されます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)">
          <source>The provider control implements the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A&gt;</ph> method, returning the value of a particular field in the data table.</source>
          <target state="translated">プロバイダーのコントロールを実装する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A&gt;</ph>データ テーブル内の特定のフィールドの値を返すメソッド。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)">
          <source>The consumer control calls the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A&gt;</ph> method in its <ph id="ph2">`OnPreRender`</ph> method, so that the value of the data can be written to the page.</source>
          <target state="translated">コンシューマー コントロールは、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A&gt;</ph>メソッドでその<ph id="ph2">`OnPreRender`</ph>メソッド、データの値をページに書き込むことができるようにします。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema">
          <source>Gets the schema information for a data field that is used to share data between two <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /&gt;</ph> controls.</source>
          <target state="translated">2 つの <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /&gt;</ph> コントロール間でデータを共有するために使用されるデータ フィールドのスキーマ情報を取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph> that describes the schema information for the data field.</source>
          <target state="translated">データ フィールドのスキーマ情報を記述する <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyDescriptor" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema">
          <source>This property provides property information for the data passed by the interface.</source>
          <target state="translated">このプロパティは、インターフェイスによって渡されるデータのプロパティ情報を提供します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema">
          <source>Transformer and consumer controls can query this property to get information about the type, contents, and other details of the field contained in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface instance sent by a provider.</source>
          <target state="translated">トランスフォーマーとコンシューマーのコントロールがコンテンツの種類に関する情報を取得するには、このプロパティのクエリを実行しに含まれているフィールドの他の詳細、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>プロバイダーによって送信されたインターフェイスのインスタンス。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema">
          <source>The following code example shows the implementation and use of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A&gt;</ph> property.</source>
          <target state="translated">次のコード例は、実装との使用を示しています。、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema">
          <source>The complete example is shown in the class overview for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph> interface.</source>
          <target state="translated">完全な例のクラスの概要に表示されます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema">
          <source>The provider control implements the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A&gt;</ph> property.</source>
          <target state="translated">プロバイダーのコントロールを実装する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema">
          <source>Then, in its <ph id="ph1">`GetFieldValue`</ph> method, it uses the property to retrieve the field value.</source>
          <target state="translated">次に、その<ph id="ph1">`GetFieldValue`</ph>メソッド、プロパティを使用して、フィールドの値を取得します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>