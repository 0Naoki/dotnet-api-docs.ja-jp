<Type Name="IWebPartField" FullName="System.Web.UI.WebControls.WebParts.IWebPartField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02f528dbdcd722988de202fead4382c1d26975f4" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51878391" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartField" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartField" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartField" />
  <TypeSignature Language="F#" Value="type IWebPartField = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>単一のデータ フィールドを使用して 2 つのサーバー コントロールを接続するためのプロバイダー インターフェイスを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web パーツの接続に使用するのには、このインターフェイスは設計されています。 Web パーツ接続内に存在する 2 つのサーバー コントロールで、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーンは、コンシューマーとして機能する 1 つのコントロールとプロバイダーとして動作するその他のコントロールを接続し、共有データを確立します。 Web パーツ接続内のデータを共有するためのメカニズムは、コールバック メソッドを使用して、プロバイダーがコンシューマーに機能する、インターフェイス インスタンスです。 接続を確立するには、コンシューマーとプロバイダーは必要があります両方同じインターフェイス型データを共有します。 トランスフォーマーを使用してコントロールを接続することができますが、コンシューマーがプロバイダーによって送信されたインターフェイス型を認識しない場合 (、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクト) 型に、プロバイダーによって送信されるインターフェイスのインスタンスを意味するコンシューマー認識します。 接続の詳細については、「<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>と[Web パーツ接続の概要](https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)します。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイスは Web パーツ コントロールのデータ フィールドに基づいて接続を作成するための標準インターフェイスとしてセットに含まれているプロバイダーのインターフェイスです。 Web パーツの接続で使用するカスタム インターフェイスを作成することもできますが、多くのデータ ドリブンの Web アプリケーション、一般的な行に基づいて接続を作成すると便利です (詳細については、次を参照してください、<xref:System.Web.UI.WebControls.WebParts.IWebPartRow>インターフェイス)、テーブル (詳細については、次を参照してください。、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 。インターフェイス)、またはデータからフィールドを使用して、ソース、<xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイス。 一般的な接続で、<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーを実装するように動作を制御、<xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイスし、特殊なコールバック メソッドでコンシューマーにインターフェイスのインスタンスを指定します。 たとえば、プロバイダーを実装する<xref:System.Web.UI.WebControls.WebParts.IWebPartField>Web ユーザーの郵便番号データを含む、ユーザー情報テーブル内のフィールドのインターフェイス。 もう 1 つ<xref:System.Web.UI.WebControls.WebParts.WebPart>コンシューマー インターフェイスのインスタンスを受信し、郵便番号データの抽出しを検索し、郵便番号に基づく天気情報を表示する特殊なメソッドを定義するように動作するを制御します。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイスが公開されている 2 つのメンバー。 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>プロパティにカプセル化されたデータ フィールドに関するスキーマ情報を返します、<xref:System.ComponentModel.PropertyDescriptor>オブジェクト。 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>メソッドを実装するときなど、プロバイダー コントロール) を使用してコールバック メソッドが呼び出されたときに、インターフェイス インスタンスのフィールドのデータを取得するメソッドを宣言します。  
  
   
  
## Examples  
 次のコード例に示しますを使用して 2 つのコントロール間の静的な接続を作成する方法、<xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイス。 コード例では、3 つの部分があります。  
  
-   ソース コードの 2 つのカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>を使用して接続を構成できる、<xref:System.Web.UI.WebControls.WebParts.IWebPartField>プロバイダーでは、コンシューマーとして機能する 1 つのコントロールとのインターフェイス。  
  
-   Web ページ コントロールをホストし、永続化形式で静的な接続の宣言です。  
  
-   内容の説明については、コードの例の実行時に発生します。  
  
 コード例の最初の部分では、2 つのカスタム コントロールのソース コードを示します。 実装すると、プロバイダーのコードは、まず、<xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイス。 例でわかりやすくするためは、プロバイダーは、データベースに接続するのではなく、一部のデータでテーブルを作成します。 `GetConnectionInterface`メソッドは、プロバイダーのコネクション ポイントをコンシューマーにインターフェイスのインスタンスを返すコールバック メソッドとして機能します。 という名前のメソッドで、プロバイダーからインターフェイス インスタンスを取得、コンシューマーと`SetConnectionInterface`でマークされている、`ConnectionConsumer`属性。 コンシューマーは、そのインターフェイスのインスタンスを取得した後、`OnPreRender`メソッドの実装を呼び出す、<xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>実際のデータを取得する、プロバイダーのメソッド。  
  
 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例では、動的なコンパイルを使用します。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 コード例の 2 番目の部分は、静的な接続とホスト コントロールを宣言する Web ページです。 ページの上部にあるが、 `Register` App_Code ディレクトリ内に含まれるソース コードの名前空間を宣言します。 使用して、接続を宣言、`<asp:webpartconnection>`要素。 カスタムのコンシューマーとプロバイダー コントロールが宣言されている、`<zonetemplate>`内の要素、`<asp:webpartzone>`接続できることを必要とされる要素 (から継承するゾーン内に存在する必要がありますが、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>クラス)。  
  
 [!code-aspx-csharp[WebParts_IWebPartField_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartField_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/Defaultvb.aspx#1)]  
  
 ブラウザーでページを読み込みます。 コンシューマー コントロールのインスタンスを通じて、プロバイダーが、指定したフィールドから提供されるデータが表示されます、<xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイス。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Web パーツ接続の概要</related>
  </Docs>
  <Members>
    <Member MemberName="GetFieldValue">
      <MemberSignature Language="C#" Value="public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFieldValue(class System.Web.UI.WebControls.WebParts.FieldCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFieldValue (callback As FieldCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFieldValue(System::Web::UI::WebControls::WebParts::FieldCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : System.Web.UI.WebControls.WebParts.FieldCallback -&gt; unit" Usage="iWebPartField.GetFieldValue callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.FieldCallback" />
      </Parameters>
      <Docs>
        <param name="callback">データを取得するメソッドのアドレスが格納された <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /> デリゲート。</param>
        <summary>インターフェイスで 2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール間の接続の基礎として使用されているフィールドの値を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、インターフェイスによって渡されるデータ フィールドの値を取得できます。  
  
   
  
## Examples  
 次のコード例の実装との使用を示しています、<xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>メソッド。 完全な例がクラスの概要を示した、<xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイス。 プロバイダー コントロールの実装、<xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>データ テーブル内の特定のフィールドの値を返すメソッド。 コンシューマー コントロールの呼び出し、<xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>メソッドでその`OnPreRender`メソッド、データの値は、ページに書き込むことができるようにします。  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ Schema { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptor" Usage="System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール間でデータを共有するために使用されるデータ フィールドのスキーマ情報を取得します。</summary>
        <value>データ フィールドのスキーマ情報を記述する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、インターフェイスによって渡されたデータのプロパティ情報を提供します。 トランスフォーマーとコンシューマー コントロールは、コンテンツの種類に関する情報を取得するには、このプロパティにクエリを実行しに含まれているフィールドの他の詳細、<xref:System.Web.UI.WebControls.WebParts.IWebPartField>プロバイダーによって送信されたインターフェイスのインスタンス。  
  
   
  
## Examples  
 次のコード例の実装との使用を示しています、<xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>プロパティ。 完全な例がクラスの概要を示した、<xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイス。 プロバイダー コントロールの実装、<xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>プロパティ。 次に、その`GetFieldValue`メソッド、プロパティを使用して、フィールドの値を取得します。  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>