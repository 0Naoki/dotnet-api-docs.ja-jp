<Type Name="IWebPartField" FullName="System.Web.UI.WebControls.WebParts.IWebPartField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33afb8f6041594bb9feb62847562a8e12e08d2f0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395205" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartField" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartField" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartField" />
  <TypeSignature Language="F#" Value="type IWebPartField = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f8929-101">単一のデータ フィールドを使用して 2 つのサーバー コントロールを接続するためのプロバイダー インターフェイスを定義します。</span><span class="sxs-lookup"><span data-stu-id="f8929-101">Defines a provider interface for connecting two server controls using a single field of data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8929-102">このインターフェイスは Web パーツ接続で使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="f8929-102">This interface is designed to be used with Web Parts connections.</span></span> <span data-ttu-id="f8929-103">Web パーツ接続では、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン内に存在する2つのサーバーコントロールが接続を確立し、データを共有します。1つのコントロールがコンシューマーとして機能し、もう一方のコントロールがプロバイダーとして動作します。</span><span class="sxs-lookup"><span data-stu-id="f8929-103">In a Web Parts connection, two server controls that reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone establish a connection and share data, with one control acting as the consumer and the other control acting as a provider.</span></span> <span data-ttu-id="f8929-104">Web パーツ接続でデータを共有するためのメカニズムはインターフェイスインスタンスであり、プロバイダーはコールバックメソッドを使用してコンシューマーに提供します。</span><span class="sxs-lookup"><span data-stu-id="f8929-104">The mechanism for sharing data in a Web Parts connection is an interface instance, which the provider serves to the consumer by means of a callback method.</span></span> <span data-ttu-id="f8929-105">接続を確立するには、コンシューマーとプロバイダーの両方が、データを共有するために同じインターフェイス型を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f8929-105">To establish a connection, the consumer and provider must both work with the same interface type for sharing data.</span></span> <span data-ttu-id="f8929-106">コンシューマーがプロバイダーによって送信されたインターフェイスの型を認識しない場合でも、プロバイダーによって送信された<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>インターフェイスインスタンスをコンシューマーが使用する型に変換するトランスフォーマー (オブジェクト) によって、コントロールを接続することができます。判断.</span><span class="sxs-lookup"><span data-stu-id="f8929-106">If the consumer does not recognize the interface type sent by the provider, it is still possible to connect the controls by means of a transformer (a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object) that translates the interface instance sent by the provider into a type that the consumer recognizes.</span></span> <span data-ttu-id="f8929-107">接続の詳細について<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>は、「」および「 [Web パーツ接続の概要](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f8929-107">For details on connections, see <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> and [Web Parts Connections Overview](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)).</span></span>  
  
 <span data-ttu-id="f8929-108"><xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイスは、データフィールドに基づいて接続を作成するための標準インターフェイスとして、Web パーツコントロールに設定されているプロバイダーインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="f8929-108">The <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface is a provider interface included with the Web Parts control set as a standard interface for creating connections based on a data field.</span></span> <span data-ttu-id="f8929-109">Web パーツ接続で使用するカスタムインターフェイスを作成することもできますが、多くのデータドリブン Web アプリケーションでは、共通の行 (詳細については<xref:System.Web.UI.WebControls.WebParts.IWebPartRow>インターフェイスを参照) に基づいて接続を作成すると便利です (詳細については、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 「」を参照してください)。interface)、またはデータソースのフィールド (インターフェイスを<xref:System.Web.UI.WebControls.WebParts.IWebPartField>使用)。</span><span class="sxs-lookup"><span data-stu-id="f8929-109">You can also create custom interfaces to use with Web Parts connections, but in many data-driven Web applications, it is useful to create connections based on a common row (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface), table (for details, see the <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interface), or field from the data source, using the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface.</span></span> <span data-ttu-id="f8929-110">通常の接続では、 <xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーとして機能するコントロールは<xref:System.Web.UI.WebControls.WebParts.IWebPartField> 、インターフェイスを実装し、特殊なコールバックメソッドでコンシューマーにインターフェイスのインスタンスを提供します。</span><span class="sxs-lookup"><span data-stu-id="f8929-110">In a typical connection, a <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a provider would implement the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface and provide an instance of the interface to consumers in a special callback method.</span></span> <span data-ttu-id="f8929-111">たとえば、プロバイダーは、ユーザー情報テーブル<xref:System.Web.UI.WebControls.WebParts.IWebPartField>内のフィールドに対して、Web ユーザーの郵便番号データを含むインターフェイスを実装する場合があります。</span><span class="sxs-lookup"><span data-stu-id="f8929-111">For example, the provider might implement an <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface for a field in your user information table that contains a Web user's postal code data.</span></span> <span data-ttu-id="f8929-112">コンシューマー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する別のコントロールは、インターフェイスインスタンスを受け取る特別なメソッドを定義し、郵便番号データを抽出し、郵便番号に基づいて気象情報を検索して表示することができます。</span><span class="sxs-lookup"><span data-stu-id="f8929-112">Another <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer would define a special method to receive the interface instance, and could then extract the postal code data, and look up and display weather information based on the postal code.</span></span>  
  
 <span data-ttu-id="f8929-113">インターフェイス<xref:System.Web.UI.WebControls.WebParts.IWebPartField>には、公開されている2つのメンバーがあります。</span><span class="sxs-lookup"><span data-stu-id="f8929-113">The <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface has two exposed members.</span></span> <span data-ttu-id="f8929-114">プロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>は、 <xref:System.ComponentModel.PropertyDescriptor>オブジェクトにカプセル化されたデータフィールドに関するスキーマ情報を返します。</span><span class="sxs-lookup"><span data-stu-id="f8929-114">The <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> property returns schema information about the data field encapsulated in a <xref:System.ComponentModel.PropertyDescriptor> object.</span></span> <span data-ttu-id="f8929-115"><xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>メソッドは、コールバックメソッドが呼び出されたときにインターフェイスインスタンスのフィールドデータを取得するために、実装側 (プロバイダーコントロールなど) が使用するメソッドを宣言します。</span><span class="sxs-lookup"><span data-stu-id="f8929-115">The <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> method declares a method that an implementer (such as a provider control) uses to retrieve the interface instance's field data when the callback method is invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8929-116">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイスを使用して2つのコントロール間に静的接続を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f8929-116">The following code example demonstrates how to create a static connection between two controls using the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface.</span></span> <span data-ttu-id="f8929-117">このコード例には、次の3つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="f8929-117">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="f8929-118">インターフェイス<xref:System.Web.UI.WebControls.WebParts.IWebPartField>を使用して<xref:System.Web.UI.WebControls.WebParts.WebPart>接続を形成できる2つのカスタムコントロールのソースコードです。1つのコントロールがプロバイダーとして機能し、もう1つのコントロールがコンシューマーとして動作します。</span><span class="sxs-lookup"><span data-stu-id="f8929-118">Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface, with one control acting as the provider, the other acting as the consumer.</span></span>  
  
-   <span data-ttu-id="f8929-119">コントロールをホストし、静的な接続を永続化形式で宣言する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="f8929-119">A Web page that hosts the controls and declares the static connection in persistence format.</span></span>  
  
-   <span data-ttu-id="f8929-120">コード例を実行したときの動作について説明します。</span><span class="sxs-lookup"><span data-stu-id="f8929-120">A description of what happens when the example code runs.</span></span>  
  
 <span data-ttu-id="f8929-121">コード例の最初の部分は、2つのカスタムコントロールのソースコードです。</span><span class="sxs-lookup"><span data-stu-id="f8929-121">The first part of the code example is the source code for the two custom controls.</span></span> <span data-ttu-id="f8929-122">最初のコードは、 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイスを実装するプロバイダーのコードです。</span><span class="sxs-lookup"><span data-stu-id="f8929-122">First is the code for the provider, which implements the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface.</span></span> <span data-ttu-id="f8929-123">この例ではわかりやすくするために、プロバイダーはデータベースに接続するのではなく、いくつかのデータを含むテーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="f8929-123">For simplicity in the example, the provider creates a table with some data rather than connecting to a database.</span></span> <span data-ttu-id="f8929-124">メソッド`GetConnectionInterface`は、プロバイダーのコネクションポイントとして機能します。このコールバックメソッドは、インターフェイスインスタンスをコンシューマーに返します。</span><span class="sxs-lookup"><span data-stu-id="f8929-124">The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer.</span></span> <span data-ttu-id="f8929-125">コンシューマーの場合と同様に、 `SetConnectionInterface` `ConnectionConsumer`属性でマークされたという名前のメソッドでプロバイダーからインターフェイスインスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="f8929-125">As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute.</span></span> <span data-ttu-id="f8929-126">コンシューマー `OnPreRender`は、インターフェイスのインスタンスを取得した後、プロバイダーの<xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>メソッドの実装を呼び出して、実際のデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="f8929-126">After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> method in the provider, to retrieve the actual data.</span></span>  
  
 <span data-ttu-id="f8929-127">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f8929-127">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="f8929-128">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="f8929-128">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="f8929-129">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="f8929-129">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="f8929-130">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="f8929-130">This code example uses dynamic compilation.</span></span> <span data-ttu-id="f8929-131">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="f8929-131">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 <span data-ttu-id="f8929-132">コード例の2番目の部分は、静的接続を宣言し、コントロールをホストする Web ページです。</span><span class="sxs-lookup"><span data-stu-id="f8929-132">The second part of the code example is the Web page that declares the static connection and hosts the controls.</span></span> <span data-ttu-id="f8929-133">ページの上部付近には、App_Code `Register`ディレクトリに格納されているソースコードの名前空間を宣言するディレクティブがあります。</span><span class="sxs-lookup"><span data-stu-id="f8929-133">Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory.</span></span> <span data-ttu-id="f8929-134">接続は、 `<asp:webpartconnection>`要素を使用して宣言されています。</span><span class="sxs-lookup"><span data-stu-id="f8929-134">The connection is declared using an `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="f8929-135">カスタムコンシューマーコントロールとプロバイダーコントロールは、 `<zonetemplate>` `<asp:webpartzone>`要素内の要素で宣言されます。これは、接続できるようにするために必要です ( <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>クラスを継承するゾーン内に存在する必要があります)。</span><span class="sxs-lookup"><span data-stu-id="f8929-135">The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).</span></span>  
  
 [!code-aspx-csharp[WebParts_IWebPartField_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartField_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/Defaultvb.aspx#1)]  
  
 <span data-ttu-id="f8929-136">ブラウザーにページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="f8929-136">Load the page in a browser.</span></span> <span data-ttu-id="f8929-137">コンシューマーコントロールは、指定されたフィールドから提供されたデータを表示します。プロバイダーは<xref:System.Web.UI.WebControls.WebParts.IWebPartField> 、インターフェイスのインスタンスを通じて利用できます。</span><span class="sxs-lookup"><span data-stu-id="f8929-137">The consumer control displays the data provided from the specified field, which the provider makes available through an instance of the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="f8929-138">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="f8929-138">ASP.NET Web Parts Controls</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)"><span data-ttu-id="f8929-139">Web パーツ接続の概要</span><span class="sxs-lookup"><span data-stu-id="f8929-139">Web Parts Connections Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="GetFieldValue">
      <MemberSignature Language="C#" Value="public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFieldValue(class System.Web.UI.WebControls.WebParts.FieldCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFieldValue (callback As FieldCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFieldValue(System::Web::UI::WebControls::WebParts::FieldCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : System.Web.UI.WebControls.WebParts.FieldCallback -&gt; unit" Usage="iWebPartField.GetFieldValue callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.FieldCallback" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="f8929-140">データを取得するメソッドのアドレスが格納された <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="f8929-140">A <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /> delegate that contains the address of a method that receives the data.</span></span></param>
        <summary><span data-ttu-id="f8929-141">インターフェイスで 2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール間の接続の基礎として使用されているフィールドの値を返します。</span><span class="sxs-lookup"><span data-stu-id="f8929-141">Returns the value of the field that is being used by the interface as the basis of a connection between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8929-142">このメソッドを使用して、インターフェイスによって渡されたデータフィールドの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8929-142">Use this method to retrieve the data field values passed by the interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8929-143">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>メソッドの実装と使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f8929-143">The following code example shows the implementation and use of the <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> method.</span></span> <span data-ttu-id="f8929-144">完全な例については、 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイスのクラスの概要を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f8929-144">The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface.</span></span> <span data-ttu-id="f8929-145">プロバイダーコントロールは、データ<xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>テーブル内の特定のフィールドの値を返すメソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="f8929-145">The provider control implements the <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> method, returning the value of a particular field in the data table.</span></span> <span data-ttu-id="f8929-146">コンシューマーコントロールは、 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> `OnPreRender`メソッド内のメソッドを呼び出して、データの値をページに書き込むことができるようにします。</span><span class="sxs-lookup"><span data-stu-id="f8929-146">The consumer control calls the <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> method in its `OnPreRender` method, so that the value of the data can be written to the page.</span></span>  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ Schema { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptor" Usage="System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8929-147">2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール間でデータを共有するために使用されるデータ フィールドのスキーマ情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8929-147">Gets the schema information for a data field that is used to share data between two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls.</span></span></summary>
        <value><span data-ttu-id="f8929-148">データ フィールドのスキーマ情報を記述する <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="f8929-148">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the schema information for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8929-149">このプロパティは、インターフェイスによって渡されるデータのプロパティ情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="f8929-149">This property provides property information for the data passed by the interface.</span></span> <span data-ttu-id="f8929-150">トランスフォーマーコントロールとコンシューマーコントロールは、このプロパティを照会して、プロバイダーによって送信された<xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイスインスタンスに格納されているフィールドの型、内容、およびその他の詳細情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="f8929-150">Transformer and consumer controls can query this property to get information about the type, contents, and other details of the field contained in the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface instance sent by a provider.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8929-151">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>プロパティの実装と使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f8929-151">The following code example shows the implementation and use of the <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> property.</span></span> <span data-ttu-id="f8929-152">完全な例については、 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイスのクラスの概要を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f8929-152">The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interface.</span></span> <span data-ttu-id="f8929-153">プロバイダーコントロールは、プロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>を実装します。</span><span class="sxs-lookup"><span data-stu-id="f8929-153">The provider control implements the <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> property.</span></span> <span data-ttu-id="f8929-154">次に、その`GetFieldValue`メソッドで、プロパティを使用してフィールド値を取得します。</span><span class="sxs-lookup"><span data-stu-id="f8929-154">Then, in its `GetFieldValue` method, it uses the property to retrieve the field value.</span></span>  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>
