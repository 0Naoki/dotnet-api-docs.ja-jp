<Type Name="ProxyWebPartManager" FullName="System.Web.UI.WebControls.WebParts.ProxyWebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6bdb65d8082839992e9c9f14aafe65d91a1b2156" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69394814" /></Metadata><TypeSignature Language="C#" Value="public class ProxyWebPartManager : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyWebPartManager extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyWebPartManager&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyWebPartManager : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type ProxyWebPartManager = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コンテンツ ページが関連付けられているマスター ページで <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールが宣言されている場合に、開発者がコンテンツ ページで静的接続を宣言できるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>がマスターページで既に宣言されている<xref:System.Web.UI.WebControls.WebParts.WebPartManager>場合、コンテンツページで静的接続を宣言する特定のシナリオに対して、コントロールが存在します。  
  
 仕様として、Web パーツコントロールを使用する Web ページには、ページ上の<xref:System.Web.UI.WebControls.WebParts.WebPartManager>すべての Web パーツコントロールを管理するコントロールを1つだけ含める必要があります。 Web パーツアプリケーションでマスターページを使用する場合は、すべてのコンテンツ<xref:System.Web.UI.WebControls.WebParts.WebPartManager>ページが実行時にマスターページにマージされ、1つ<xref:System.Web.UI.WebControls.WebParts.WebPartManager>のコントロールがすべての Web パーツコントロールを管理するため、マスターページにコントロールを配置するのが一般的です。すべてのコンテンツページから。 ただし、開発者がこのようなアプリケーションのコンテンツページで静的接続を宣言する場合、制限が適用されているように思えるかもしれません。 静的 Web パーツ接続は、要素の子`<asp:webpartconnection>` `<staticconnections>`として要素を追加することによってのみ宣言できます。要素は要素`<asp:webpartmanager>`の子である必要があります。 ただし、コントロール<xref:System.Web.UI.WebControls.WebParts.WebPartManager>は既にマスターページで宣言されており、1つ<xref:System.Web.UI.WebControls.WebParts.WebPartManager>のコントロールが許可され<xref:System.Web.UI.WebControls.WebParts.WebPartManager>ているので、開発者は、コンテンツページで追加のコントロールを宣言して静的接続を追加することはできません。  
  
 コントロールは、このシナリオで<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの場所を取得します。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 開発者は`<asp:proxywebpartmanager>` 、コンテンツページの`<asp:webpartmanager>`要素ではなく要素を宣言し、次に子要素として静的接続を宣言できます。 実行時には、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールの接続が<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>コレクションに追加され、他の接続と同様に扱われます。  
  
 このコントロールは、この特定の開発シナリオでのみ使用されるため、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスよりも機能が制限されています。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 実際、コントロールは<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 、コンテンツページ内の<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの静的接続を格納するためのプロキシとして機能しますが、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールから継承されることはありません。 <xref:System.Web.UI.Control>クラスから直接継承され、いくつかの基本メンバーのみをオーバーライドします。 、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A> 、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>および<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A>の各プロパティがオーバーライドされ、使用できなくなる値が割り当てられます。 その他の継承されたプロパティは、デザイン時の動作を調整するためにオーバーライドされますが、それ以外の場合は基本プロパティと同じ動作をします。 これには<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A> 、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A>プロパティとプロパティが含まれます。 最後に、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>クラスには継承されていないプロパティが1つあります。 プロパティ<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>は、静的な接続<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection> (オブジェクト) の独自のコレクションを返します。  
  
 メソッドの場合と同様<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>に、クラスはいくつかのメソッドのみをオーバーライドし、ほとんどの場合、その使用を制限します。 継承<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A>されたメソッドは、呼び出された場合に例外をスローすることによって使用できなくなります。 メソッド<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A>は、常に空のコントロールコレクションを返します。これにより、コントロールのコレクションを格納できなくなります。 最後に、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A>メソッドは基本メソッドを呼び出し、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティによって参照される接続のコレクション<xref:System.Web.UI.WebControls.WebParts.WebPartManager>をコントロール<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>のプロパティに割り当てます。 これにより、すべてのコンテンツページで宣言されているすべての静的接続がロールアップされ、マスターページ内<xref:System.Web.UI.WebControls.WebParts.WebPartManager>のコントロールによって管理される connections コレクションの一部になります。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>クラスを使用して、マスターページを使用するアプリケーションのコンテンツページで静的接続を宣言する方法を示しています。 この例には5つの部分があります。  
  
-   ページの Web パーツ表示モードを変更できるユーザーコントロール。  
  
-   インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。  
  
-   アプリケーションのユーザーコントロール、コンテンツページ、および<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールをホストするマスター Web ページ。  
  
-   <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロール、2つのカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および2つのコントロールを接続するための静的接続をホストするコンテンツ Web ページ。  
  
-   例ページを実行する方法について説明します。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。 次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしているマスターページの上部付近にあります。 このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 コード例の2番目の部分は、インターフェイスとコントロールのソースコードです。 ソースファイルには、という名前`IZipCode`の単純なインターフェイスが含まれています。 インターフェイスを実装し<xref:System.Web.UI.WebControls.WebParts.WebPart> 、プロバイダー `ZipCodeWebPart`コントロールとして機能するという名前のクラスもあります。 この`ProvideIZipCode`メソッドは、インターフェイスの唯一のメンバーを実装するコールバックメソッドです。 メソッドは、単にインターフェイスのインスタンスを返します。 メソッドは、そのメタデータ内の`ConnectionProvider`属性でマークされていることに注意してください。 これは、プロバイダーのコネクションポイントのコールバックメソッドとしてメソッドを識別するための機構です。 もう 1 <xref:System.Web.UI.WebControls.WebParts.WebPart>つのクラス`WeatherWebPart`はという名前で、接続のコンシューマーとして機能します。 このクラスには、プロバイダー `GetZipCode`コントロールから`IZipCode`インターフェイスのインスタンスを取得するという名前のメソッドがあります。 このメソッドは、メタデータの属性を`ConnectionConsumer`使用して、コンシューマーの接続ポイントメソッドとしてマークされていることに注意してください。  
  
 コード例を実行するには、このソースコードをコンパイルする必要があります。 これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。 または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。 このコード例では、動的コンパイルを使用します。 のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用  
  
 [!code-csharp[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/ZipCodeComponent.cs#4)]
 [!code-vb[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/ZipCodeComponent.vb#4)]  
  
 コード例の3番目の部分は、マスターページです。 次のソースコードを実行し、ファイルに保存します。これには、使用する言語に応じて、MasterPageCS. master または Masterpagecs .master という名前を付けます。 マスターページには、ユーザーコントロール`Register`を登録するためのディレクティブが含まれており、ページの本文でユーザーコントロール自体が参照されていることに注意してください。 マスターページでは、このページ`<asp:webpartmanager>`および関連するすべてのコンテンツページで使用される単一の要素も宣言します。 最後に、マスターページには`<asp: contentplaceholder>` 、コンテンツページが挿入されるページ内のポイントを宣言する要素があります。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/MasterPageCS.master#1)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/MasterPageVB.master#1)]  
  
 コード例の4番目の部分は、コンテンツページです。 次のソースコードをコピーし、.aspx 拡張子を持つファイルに保存する必要があります。 この`Page`ディレクティブには、マスター `MasterFile`ページを参照するための属性が含まれていることに注意してください。 また、このページには`Register` 、接続に参加する動的にコンパイルされたカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを含む App_Code フォルダーにファイルを登録するためのディレクティブがあります。 ページの`<asp:proxywebpartmanager>` `<staticconnections>` `<asp:webpartconnection>`タグ内には、子要素を持つ要素があります。この要素には、接続の詳細を宣言する子要素があります。 `<asp:content>` ページの`Button1_Click` <xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>タグ内では、メソッドによって、マスターページ内のメインコントロールにアクセスするコード、およびコンテンツページ内のコントロールが追加され、詳細情報がページに書き込まれます。 `<script>`  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 ブラウザーでページを読み込んだ後、**[WebPartManager 情報]** ボタンをクリックして、マスター <xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>ページ内のコントロールに関する情報、および [コンテンツ] ページのコントロールに関する情報を確認します。 たとえば、静的な接続 ( <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティ) を追跡する各プロパティには、両方のカウントが同じであることに注意してください。 また、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールには、管理<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>し<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>ているコントロールの<xref:System.Web.UI.WebControls.WebParts.WebPart>数を追跡するプロパティがありますが、コントロールには静的接続を含めることだけが目的であるため、このようなプロパティはありません。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyWebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyWebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET によって生成される HTML マークアップのコントロール ID を取得します。</summary>
        <value>ASP.NET によって生成される HTML マークアップのコントロール ID。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>UI 階層内の指定されたサーバー コントロールの子コントロールを表す <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトを取得します。</summary>
        <value>指定されたサーバー コントロールの子コントロールのコレクション。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="proxyWebPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基本プロパティをオーバーライドして、<see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> コントロールにコントロールが格納されないようにします。</summary>
        <returns>常に <see cref="T:System.Web.UI.EmptyControlCollection" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A>は、コントロールが<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールのコレクションを格納したり返したりするのを防ぐために、基本メソッドをオーバーライドします。 その唯一の目的は、マスターページを使用するアプリケーション内のコンテンツページで静的接続を宣言できるようにすることです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基本プロパティをオーバーライドして、テーマが使用されないようにします。</summary>
        <value>常に <see langword="false" /> を返し、テーマが使用されないようにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>は、テーマが<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールで使用されないようにするために、基本プロパティをオーバーライドします。 これは、マスターページ内の<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールで使用されているテーマと競合しないようにするためです<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=nameWithType> ( `true`プロパティは常にを返します)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元が、このプロパティに値を割り当てようとしています。</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="proxyWebPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基本メソッドをオーバーライドして、メソッドが呼び出されないようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A>は、基本メソッドをオーバーライドし、呼び出し元がメソッドを呼び出そうとした場合に例外をスローします。 これは、継承<xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType>されたメソッドはユーザーインターフェイス (ui) を持つコントロール用に設計されています<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>が、コントロールには ui がないため、フォーカスを設定する必要がないためです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元がこのメソッドを呼び出そうとしています。</exception>
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="proxyWebPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させ、コントロールを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A>は、基本メソッドを呼び出してから、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールを初期化するタスクを実行します。 このメソッドの重要なタスクは、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティによって参照される接続のコレクション<xref:System.Web.UI.WebControls.WebParts.WebPartManager>をコントロールの<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>コレクションに割り当てることです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">関連付けられているマスター ページの <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールが <see langword="null" /> です。</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基本プロパティをオーバーライドして、値が割り当てられないようにします。</summary>
        <value>常に空の文字列 ("") を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A>は、基本プロパティをオーバーライドして、その値が割り当てられないようにします。これにより、スキンが<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールで使用されないようにする効果があります。 これは、コントロールがページ上のユーザーインターフェイス (UI) を公開しないためです。 同じ動作は、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=nameWithType>プロパティのコントロールによって実装されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元が、このプロパティに値を割り当てようとしています。</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As ProxyWebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ ページの <see langword="&lt;asp:proxywebpartmanager&gt;" /> 要素で宣言されている静的接続のコレクションを取得します。</summary>
        <value><see langword="&lt;asp:proxywebpartmanager&gt;" /> 要素で宣言されているすべての静的な <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" /> オブジェクトを格納する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>は、 `<asp:proxywebpartmanager>`要素で宣言<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>されたオブジェクトのコレクションを参照します。 このコレクションに含まれる接続は、コントロールの<xref:System.Web.UI.WebControls.WebParts.WebPartManager>静的接続 ( <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>コレクションによって参照される) に追加され、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールに関連付けられている他の接続とまったく同じように扱われます。  
  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティに対応する宣言要素`<staticconnections>`は要素です。 マスターページ`<staticconnections>`を使用するアプリケーションでは、要素が`<asp:webpartconnection>`コンテンツページの`<asp:proxywebpartmanager>`要素の子として追加され、要素が`<staticconnections>`要素の子として追加されます。 複数`<asp:webpartconnection>`の要素を1つ`<staticconnections>`の要素に追加できます。また、複数のコンテンツページで、マスターページアプリケーションの一部として静的接続を宣言できます。  
  
   
  
## Examples  
 クラスでプロパティ<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>を使用する方法を次のコード例に示します。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> このコード例では、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールと静的接続を宣言するコンテンツページからのコードの関連部分のみを示しています。 コード例を実行するために必要な他のページ、およびそれらを設定する方法の説明については、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>クラスの概要の「例」セクションを参照してください。  
  
 次のコードは、要素を`<staticconnections>` `<asp:proxywebpartmanager>`要素の子として宣言するコンテンツページです。 また、メソッドは`Button1_Click` 、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールの<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティの数を確認し、ページに書き込みます。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 ブラウザーでページを読み込んだ後、**[WebPartManager 情報]** ボタンをクリックして、マスター <xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>ページ内のコントロールに関する情報、および [コンテンツ] ページのコントロールに関する情報を確認します。 たとえば、静的な接続 ( <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティ) を追跡する各プロパティには、両方のカウントが同じであることに注意してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基本プロパティをオーバーライドして、値が割り当てられないようにします。</summary>
        <value>常に <see langword="false" /> を返し、コントロールが表示されないようにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>は基本プロパティをオーバーライドして、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールが表示されないようにします。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールと<xref:System.Web.UI.WebControls.WebParts.WebPartManager>同様に、コントロールはユーザーインターフェイス (UI) を持たず、ユーザーには表示されません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元が、このプロパティに値を割り当てようとしています。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
        <altmember cref="P:System.Web.UI.Control.Visible" />
      </Docs>
    </Member>
  </Members>
</Type>
