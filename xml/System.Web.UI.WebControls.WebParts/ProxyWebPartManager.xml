<Type Name="ProxyWebPartManager" FullName="System.Web.UI.WebControls.WebParts.ProxyWebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4fb1222dc0adc26205c0900c715c885b046e3ea4" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55326650" /></Metadata><TypeSignature Language="C#" Value="public class ProxyWebPartManager : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyWebPartManager extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProxyWebPartManager&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProxyWebPartManager : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type ProxyWebPartManager = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールがコンテンツ ページの関連マスター ページで宣言されている場合に、開発者がコンテンツ ページで静的接続を宣言する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 、特定のコントロールが存在するときにページのコンテンツで静的接続を宣言するシナリオを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページで、コントロールは既に宣言されています。  
  
 いずれか (および 1 つだけ) 仕様では、Web パーツ コントロールを使用する Web ページがあります<xref:System.Web.UI.WebControls.WebParts.WebPartManager>ページ上のすべての Web パーツ コントロールを管理するコントロール。 Web パーツ アプリケーションでは、マスター ページを使用する場合は、配置する一般的な<xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページで、すべてのコンテンツ ページは、実行時に単一のマスター ページとマージされますので、制御<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、すべての Web パーツ コントロールを管理します。すべてのコンテンツ ページです。 ただし、開発者は、このようなアプリケーションのコンテンツ ページの静的接続を宣言する場合、制限が見えるかもしれません。 静的な Web パーツ接続を追加することでのみ宣言できます、<`asp:webpartconnection>`要素の子として、`<staticconnections>`要素自体の子である必要があります、`<asp:webpartmanager>`要素。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページで、コントロールが既に宣言されているとは、1 つ許可されて<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール、開発者は、追加で宣言できません<xref:System.Web.UI.WebControls.WebParts.WebPartManager>静的接続を追加するコンテンツ ページ内のコントロール。  
  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>のコントロールに代わる、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>このシナリオで制御します。 開発者は、宣言、`<asp:proxywebpartmanager>`要素の代わりに、`<asp:webpartmanager>`内の要素のコンテンツ ページ、およびできますし、静的接続として宣言子要素。 実行時での接続、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>に単純に追加コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>のコレクション、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>を制御し、その他の任意の接続のように扱われます。  
  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールがこの特定の開発のシナリオでのみ使用より機能が限定されてより、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス。 実際には、ですが、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールの静的な接続を格納するプロキシとして機能、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール コンテンツのページが継承されないから、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 直接継承、<xref:System.Web.UI.Control>クラスし、基本メンバーの一部のみを上書きします。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>、および<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A>プロパティがオーバーライドされ、使用されないように値を割り当てます。 その他の継承されたプロパティをオーバーライドして、デザイン時動作を調整するが、それ以外の場合、基本プロパティと同じ動作があります。 以下の<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A>と<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A>プロパティ。 最後に、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>クラスが 1 つの非継承プロパティ。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティは静的な接続の独自のコレクションを返します (、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection>オブジェクト)。  
  
 メソッドの場合と、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>クラスが同様に、使用を制限するには、ほとんどの場合のいくつかメソッドをオーバーライドします。 継承された<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A>メソッドが呼び出された場合、例外がスローされて使用不可に行ったします。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A>メソッドは常にコントロールのコレクションを含めることができないため、できませんの影響は、空のコントロール コレクションを返します。 最後に、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A>メソッドを選択し、基本のメソッドを呼び出し、によって参照される接続のコレクションを割り当てます、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 これは、すべてのコンテンツ ページで宣言されているすべての静的な接続をロール アップの効果にすることによって保持される接続のコレクションの一部と、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページのコントロール。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>マスター ページを使用するアプリケーションのコンテンツ ページで、静的な接続を宣言するクラス。 この例では、5 つの部分があります。  
  
-   ページのモードを表示するユーザー コントロール Web パーツを変更することができます。  
  
-   ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。  
  
-   ユーザー コントロール、コンテンツのページをホストする Web ページをマスターと<xref:System.Web.UI.WebControls.WebParts.WebPartManager>アプリケーションのコントロール。  
  
-   コンテンツをホストする Web ページ、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロール、2 つのカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および 2 つのコントロールを接続するための静的接続します。  
  
-   ページの例を実行する方法の説明です。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。 割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`ホスティングのマスター ページの上部にはこのユーザー コントロールのディレクティブ。 詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 コード例の 2 番目の部分では、インターフェイスとコントロールのソース コードを示します。 ソース ファイルには、という名前の単純なインターフェイスが含まれています。`IZipCode`します。 <xref:System.Web.UI.WebControls.WebParts.WebPart>という名前のクラス`ZipCodeWebPart`するインターフェイスを実装し、プロバイダー コントロールとして機能します。 その`ProvideIZipCode`メソッドは、インターフェイスの唯一のメンバーを実装するコールバック メソッドです。 メソッドは、単に、インターフェイスのインスタンスを返します。 メソッドが設定されている、`ConnectionProvider`そのメタデータ内の属性。 これは、プロバイダーのコネクション ポイントのコールバック メソッドとしてメソッドを識別するための機構です。 他の<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスの名前が`WeatherWebPart`、および接続のコンシューマーとして機能します。 このクラスは、という名前のメソッドを持つ`GetZipCode`のインスタンスを取得する、`IZipCode`プロバイダー コントロールからのインターフェイス。 コンシューマーのコネクション ポイントのメソッドとしてこのメソッドがマークされていることに注意してください、`ConnectionConsumer`そのメタデータ内の属性。  
  
 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例では、動的なコンパイルを使用します。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/ZipCodeComponent.cs#4)]
 [!code-vb[WebParts_ProxyWebPartManager_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/ZipCodeComponent.vb#4)]  
  
 コード例の 3 番目の部分は、マスター ページです。 次のソース コードを実行して、MasterPageCS.master または MasterPageVB.master (言語に応じて使用します)、名前を付け、ファイルに保存する必要があります。 注マスター ページを含む、`Register`ユーザー コントロールを登録するディレクティブは、ユーザー コントロール、ページの本文に自体を参照します。 マスター ページは、1 つも宣言されています。`<asp:webpartmanager>`要素がこのページと関連するすべてのコンテンツ ページを使用します。 最後に、マスター ページは、`<asp: contentplaceholder>`コンテンツ ページが挿入されるページ内のポイントを宣言する要素。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/MasterPageCS.master#1)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/MasterPageVB.master#1)]  
  
 コード例の 4 番目の部分は、コンテンツ ページです。 次のソース コードをコピーし、拡張子が .aspx ファイルに保存する必要があります。 注意してその`Page`ディレクティブが含まれています、`MasterFile`属性をマスター ページを参照してください。 また、このページには、`Register`を動的にコンパイルされたカスタムを含む App_Code フォルダーにファイルを登録するディレクティブ<xref:System.Web.UI.WebControls.WebParts.WebPart>接続に参加しているコントロール。 内で、`<asp:content>`タグ、ページは、<`asp:proxywebpartmanager>`要素の子を持つ、`<staticconnections>`あり、子要素は、`<asp:webpartconnection>`接続の詳細を宣言する要素。 内で、 `<script>`  ページで、タグ、`Button1_Click`メソッドには、主にアクセスするコードが追加されます。<xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページのコントロールと<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コンテンツ ページで、コントロールとその詳細の一部のページに書き込みます。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 ブラウザーでページを読み込んだ後、 **WebPartManager 情報**ボタンをクリックし、についての情報を確認、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページで、コントロール、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コンテンツ ページのコントロール。 両方があることに同じ数に対応する静的な接続を追跡するプロパティ メモたとえば、(、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティ)。 なおですが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>プロパティの数を追跡する<xref:System.Web.UI.WebControls.WebParts.WebPart>、管理対象のコントロール、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールには、このようなプロパティがないことだけを目的の静的な接続が含まれますが。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyWebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProxyWebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET によって生成される HTML マークアップのコントロール ID を取得します。</summary>
        <value>ASP.NET によって生成される HTML マークアップのコントロール ID。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>UI 階層内の指定されたサーバー コントロールの子コントロールを表す <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトを取得します。</summary>
        <value>指定されたサーバー コントロールの子コントロールのコレクション。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="proxyWebPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基本プロパティをオーバーライドして、<see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> コントロールにコントロールが格納されないようにします。</summary>
        <returns>常に <see cref="T:System.Web.UI.EmptyControlCollection" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A>メソッドのオーバーライドを防ぐために基本のメソッド、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールを格納していると、コントロールのコレクションを返すからです。 その唯一の目的は、マスター ページを使用するアプリケーション内のコンテンツ ページで宣言する静的な接続を有効にするのには。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基本プロパティをオーバーライドして、テーマが使用されないようにします。</summary>
        <value>常に <see langword="false" /> を返し、テーマが使用されないようにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>プロパティは、テーマがで使用されていることを防ぐために基本プロパティをオーバーライド、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロール。 これは競合で使用されているすべてのテーマを使用して受信されることを防止する、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページのコントロール (その<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=nameWithType>プロパティは常に返します`true`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元が、このプロパティに値を割り当てようとしています。</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="proxyWebPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基本メソッドをオーバーライドして、メソッドが呼び出されないようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A>メソッドは、基本メソッドをオーバーライドし、呼び出し元がメソッドを呼び出すしようとすると、例外をスローします。 これは、ため、継承された<xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType>メソッドはコントロール ユーザー インターフェイス (UI) に設計されていますが、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールは、UI がないと、そのため、フォーカスを設定する必要がないです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元がこのメソッドを呼び出そうとしています。</exception>
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="proxyWebPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させ、コントロールを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A>メソッドを選択し、基本のメソッドを呼び出しを初期化するタスクを実行し、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロール。 このメソッドの重要なタスクがによって参照される接続のコレクションに割り当てるには、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>コレクション。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">関連付けられているマスター ページの <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールが <see langword="null" /> です。</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基本プロパティをオーバーライドして、値が割り当てられないようにします。</summary>
        <value>常に空の文字列 ("") を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A>プロパティのオーバーライドで使用されるを防止の影響は基本プロパティ値がそれに割り当てられていることを防ぐためにスキン、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロール。 これは、コントロールがページ上のユーザー インターフェイス (UI) を公開しないためです。 によって、同じ動作が実装されている、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>の制御、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=nameWithType>プロパティ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元が、このプロパティに値を割り当てようとしています。</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As ProxyWebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::ProxyWebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ ページの <see langword="&lt;asp:proxywebpartmanager&gt;" /> 要素で宣言されている静的接続のコレクションを取得します。</summary>
        <value><see langword="&lt;asp:proxywebpartmanager&gt;" /> 要素で宣言されているすべての静的な <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" /> オブジェクトを格納する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティのコレクションを参照する<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>で宣言されたオブジェクト、`<asp:proxywebpartmanager>`要素。 このコレクションに含まれている接続の静的な接続を追加、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール (によって参照されているその<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=nameWithType>コレクション)、および他の接続に関連付けられているとまったく同じように扱われます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。  
  
 対応する宣言型の要素、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティは、`<staticconnections>`要素。 マスター ページを使用するアプリケーションで、`<staticconnections>`要素の子として追加されます、`<asp:proxywebpartmanager>`コンテンツ ページでは、要素と`<asp:webpartconnection>`要素は、の子として追加は、さらに、`<staticconnections>`要素。 複数`<asp:webpartconnection>`要素は、いずれかに追加できる`<staticconnections>`要素、および複数のコンテンツ ページは、マスター ページのアプリケーションの一部として静的接続を宣言できます。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>クラス。 このコード例は、コードを宣言するコンテンツ ページからの関連部分のみを示しています、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>制御と静的な接続します。 コードの例と、その設定方法の説明を実行するために必要な他のページの例のセクションを参照してください、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>クラスの概要。  
  
 次のコードは、コンテンツ ページを宣言する、`<staticconnections>`要素の子として、`<asp:proxywebpartmanager>`要素。 また、`Button1_Click`メソッドの数を確認します、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>を制御し、ページに書き込みます。  
  
 [!code-aspx-csharp[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-aspx-vb[WebParts_ProxyWebPartManager_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 ブラウザーでページを読み込んだ後、 **WebPartManager 情報**ボタンをクリックし、についての情報を確認、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページで、コントロール、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コンテンツ ページのコントロール。 両方があることに同じ数に対応する静的な接続を追跡するプロパティ メモたとえば、(、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティ)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基本プロパティをオーバーライドして、値が割り当てられないようにします。</summary>
        <value>常に <see langword="false" /> を返し、コントロールが表示されないようにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>プロパティのオーバーライドを防ぐために基本のプロパティ、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールをこれまで、認識されるからです。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールなど、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>制御、ユーザー インターフェイス (UI) がないと、ユーザーに表示されることはありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元が、このプロパティに値を割り当てようとしています。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
        <altmember cref="P:System.Web.UI.Control.Visible" />
      </Docs>
    </Member>
  </Members>
</Type>