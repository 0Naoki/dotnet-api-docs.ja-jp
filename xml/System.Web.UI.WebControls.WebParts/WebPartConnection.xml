<Type Name="WebPartConnection" FullName="System.Web.UI.WebControls.WebParts.WebPartConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="51155de7d23c7958800f502e0aaf995f864d8b09" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69394482" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebPartConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebPartConnection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPartConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartConnection sealed" />
  <TypeSignature Language="F#" Value="type WebPartConnection = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Transformers")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c23fa-101">2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールで接続を構成できるようにするオブジェクトを提供します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-101">Provides an object that enables two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls to form a connection.</span></span> <span data-ttu-id="c23fa-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="c23fa-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-103">Web パーツコントロールセットでは、接続は2つ<xref:System.Web.UI.WebControls.WebParts.WebPart> (または他のサーバーまたはユーザー) コントロール間のリンクまたは関連付けで、データを共有できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-103">In the Web Parts control set, a connection is a link or association between two <xref:System.Web.UI.WebControls.WebParts.WebPart> (or other server or user) controls that enables them to share data.</span></span> <span data-ttu-id="c23fa-104">データを共有するこの機能により、接続されたコントロールを、分離コントロールが提供する機能を超える方法で使用できるようになります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-104">This ability to share data allows connected controls to be used in ways that exceed the functionality offered by the isolated controls.</span></span> <span data-ttu-id="c23fa-105">たとえば、1つのコントロールが郵便番号データを提供し、別のコントロールがそのデータを読み取り、郵便番号に基づいて地域の気象情報を提供できる場合、2つのコントロールの接続された機能により、ユーザーにとってより多くの価値が得られます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-105">For example, if one control provides postal code data, and another control can read that data and provide local weather information based on the postal code, then the connected capability of the two controls provides more value to users.</span></span> <span data-ttu-id="c23fa-106">この例を拡張するために、現地のニュースへのリンクが設定されたコントロールなど、郵便番号に基づいて情報を表示する他のコントロールを作成できます。また、郵便番号データで使用できるすべてのコントロールは、郵便番号。</span><span class="sxs-lookup"><span data-stu-id="c23fa-106">To extend this example, other controls could be created that also display information based on a postal code, such as a control with links to local news, and all these controls that can work with postal code data could share data with the single control that provides a postal code.</span></span> <span data-ttu-id="c23fa-107">Web パーツアプリケーションのエンドユーザーは、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールによって提供される標準接続ユーザーインターフェイス (UI) を使用するか、またはによって提供されるカスタム ui を使用して、このような互換性のあるすべてのコントロール間の接続を Web ブラウザーから直接作成して管理することができます。向け.</span><span class="sxs-lookup"><span data-stu-id="c23fa-107">End users of Web Parts applications can create and manage connections between all such compatible controls directly from a Web browser, using the standard connections user interface (UI) provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control, or using a custom UI provided by a developer.</span></span>  
  
 <span data-ttu-id="c23fa-108">この<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>クラスの概要は、接続を作成するための基本的な詳細情報の一般的なステートメントです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-108">This <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class overview is a general statement of the basic details for creating a connection.</span></span> <span data-ttu-id="c23fa-109">接続の作成に関連する特定のコンポーネントと要件の詳細については、「 [Web パーツ接続の概要](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100))」を参照するか、次の説明に記載されている参照クラスとコード例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-109">For more on specific components and requirements involved in creating connections, see [Web Parts Connections Overview](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)), or see the reference classes and code examples mentioned in the following discussion.</span></span> <span data-ttu-id="c23fa-110">Web パーツ接続には、次のようないくつかの基本的な側面があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-110">There are several fundamental aspects of a Web Parts connection:</span></span>  
  
-   <span data-ttu-id="c23fa-111">2 <xref:System.Web.UI.WebControls.WebParts.WebPart>つのコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-111">Two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="c23fa-112">すべての Web パーツ接続は、2つのコントロールで構成されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-112">Every Web Parts connection consists of two controls.</span></span> <span data-ttu-id="c23fa-113">1つのコントロールが同時に複数の接続に参加することはできますが、1つの接続は、厳密に2つのコントロールで構成されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-113">It is possible for a control to participate in more than one connection simultaneously, but every single connection consists of exactly two controls.</span></span> <span data-ttu-id="c23fa-114">コントロールは、 <xref:System.Web.UI.WebControls.WebParts.WebPart>基本クラスから直接派生することも、ASP.NET コントロール、カスタムサーバーコントロール、ユーザーコントロールなどの他のサーバーコントロールにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-114">The controls can derive directly from the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class, or they can be other server controls, including ASP.NET controls, custom server controls, and user controls.</span></span> <span data-ttu-id="c23fa-115"><xref:System.Web.UI.WebControls.WebParts.WebPart>クラスから派生していないコントロール ( <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーンに配置<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>されている場合) は、実行時にオブジェクトと共に自動的にラップされ<xref:System.Web.UI.WebControls.WebParts.WebPart>ます。これにより、これら<xref:System.Web.UI.WebControls.WebParts.WebPart>のコントロールは、クラスから継承し、実行時として機能します。制限.</span><span class="sxs-lookup"><span data-stu-id="c23fa-115">Controls that do not derive from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, if placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, are automatically wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, which enables them to inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class and function as run-time <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span>  
  
-   <span data-ttu-id="c23fa-116">ゾーン内に<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>存在するコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-116">Controls residing in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones.</span></span> <span data-ttu-id="c23fa-117">Web パーツ<xref:System.Web.UI.WebControls.WebParts.WebPart>接続 (およびその他のほとんどの Web パーツ機能) に<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>参加できるようにするには、コントロールとその他の種類のサーバーコントロールの両方がゾーン内に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-117">Both <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and any other type of server control must reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone to be able to participate in Web Parts connections (and most other Web Parts features).</span></span>  
  
-   <span data-ttu-id="c23fa-118">コンシューマーとプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-118">Consumers and providers.</span></span> <span data-ttu-id="c23fa-119">すべての Web パーツ接続には、データのプロバイダーとデータのコンシューマーの2つのコントロールがあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-119">In every Web Parts connection there are two controls: a provider of data and a consumer of data.</span></span> <span data-ttu-id="c23fa-120">プロバイダーは、インターフェイスの形式でデータを返す指定されたコールバックメソッドを使用して、コンシューマーにデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-120">The provider furnishes data to the consumer through a specified callback method that returns data in the form of an interface.</span></span> <span data-ttu-id="c23fa-121">(コールバックメソッドを作成して指定する方法の例については、このトピックの「例」を参照してください)。このコールバックメソッドは、プロバイダー接続ポイントと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-121">(For an example of how to create and specify the callback method, see the Example section of this topic.) This callback method is known as a provider connection point.</span></span> <span data-ttu-id="c23fa-122">このコネクションポイントの詳細 ("わかりやすい" 名前、ID、および返されたインターフェイスの種類) は、プロバイダーコントロールに関連<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>付けられているオブジェクトに含まれています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-122">The details of this connection point (its "friendly" name, an ID, and the type of the returned interface) are contained in a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object associated with the provider control.</span></span> <span data-ttu-id="c23fa-123">コンシューマーは、インターフェイスのインスタンスを受け入れることができる指定されたメソッドを使用してデータを受信します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-123">The consumer receives the data through a specified method that can accept an instance of the interface.</span></span> <span data-ttu-id="c23fa-124">このメソッドはコンシューマー接続ポイントと呼ばれ、接続ポイントの詳細 (名前、ID、およびインターフェイスの種類) は、コンシューマーコントロールに関連付け<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>られているオブジェクトに含まれています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-124">This method is known as a consumer connection point, and the details of the connection point (name, ID, and type of interface) are contained in a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object associated with the consumer control.</span></span>  
  
-   <span data-ttu-id="c23fa-125">互換性のあるコントロールまたは有効なトランスフォーマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-125">Compatible controls or a valid transformer.</span></span> <span data-ttu-id="c23fa-126">接続を機能させるには、コンシューマーとプロバイダーが互換性がある必要があります (つまり、指定されたコネクションポイントメソッドが同じ型のインターフェイスで動作する<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>可能性があります)。または、によって提供される型を変換できるオブジェクトが必要です。プロバイダーは、コンシューマーによって認識される型になります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-126">For a connection to work, the consumer and provider must either be compatible (meaning that their specified connection point methods can work with the same type of interface), or there must be a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object capable of translating the type offered by the provider into a type understood by the consumer.</span></span>  
  
-   <span data-ttu-id="c23fa-127"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="c23fa-127">A <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span> <span data-ttu-id="c23fa-128">接続が存在するためには、プロバイダーおよびコンシューマーコントロールへ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>の参照と、その接続ポイントの詳細を含むクラスのインスタンスが必要です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-128">For a connection to exist, there must be an instance of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class that contains references to the provider and consumer controls, along with the details of their connection points.</span></span> <span data-ttu-id="c23fa-129">プロバイダーとコンシューマーに互換性がなく、代わりにオブジェクトを<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>使用して接続する場合、接続はトランスフォーマーを参照します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-129">If the provider and consumer are incompatible and instead use a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object to connect, the connection references the transformer.</span></span>  
  
-   <span data-ttu-id="c23fa-130">接続を確立する手段。</span><span class="sxs-lookup"><span data-stu-id="c23fa-130">A means of establishing the connection.</span></span> <span data-ttu-id="c23fa-131">互換性のあるコンシューマーおよびプロバイダーの制御が、接続ポイントのメソッドを使用して適切に設計さ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>れ、ゾーンに配置された後、オブジェクトを使用できるようになったら、最後に必要な手順は接続を開始することです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-131">After compatible consumer and provider controls have been properly designed with connection point methods and placed in a zone, and a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object is available, the last basic step necessary is to initiate the connection.</span></span> <span data-ttu-id="c23fa-132">これは、ユーザーが UI を使用して接続を作成する方法の1つです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-132">One way this can happen is for users to create the connection through the UI.</span></span> <span data-ttu-id="c23fa-133">ページに`<asp:connectionszone>`要素を配置し、接続に必要なその他のコンポーネントが配置されている場合、実行時に、ユーザーがページを接続表示モードに切り替えるには、プロバイダーまたはコンシューマーの動詞メニューで connect 動詞をクリックします。、および ( <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールに基づく) 接続 UI が表示されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-133">If you place an `<asp:connectionszone>` element on the page, and the other required components for a connection are in place, at run time a user can switch the page into connect display mode, click a connect verb on the verbs menu of either the provider or consumer, and a connection UI (based on the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control) will appear.</span></span> <span data-ttu-id="c23fa-134">この UI を使用すると、ユーザーは接続を開始できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-134">Through this UI, the user can initiate the connection.</span></span> <span data-ttu-id="c23fa-135">接続を開始するもう1つの方法は、プログラムで行うことです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-135">Another way to initiate the connection is to do it programmatically.</span></span> <span data-ttu-id="c23fa-136">どちらの場合も、UI またはプログラムのどちらを使用しているかにかかわらず、接続を開始する基になるメソッドは同じです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-136">In either case, whether through the UI or programmatically, the underlying method that initiates the connection is the same.</span></span> <span data-ttu-id="c23fa-137">アプリケーションは、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールでメソッド ( <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>またはトランスフォーマーを使用している場合はメソッド) を呼び出し、プロバイダー、コンシューマー、およびそれぞれの接続<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>ポイントオブジェクトに渡します。メソッドはを返します。素材.</span><span class="sxs-lookup"><span data-stu-id="c23fa-137">The application calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method (or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method if using a transformer) on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the provider, the consumer, and their respective connection point objects, and the method returns a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="c23fa-138">クラス<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>は、2つ<xref:System.Web.UI.WebControls.WebParts.WebPart>のコントロール間の接続の基本情報をカプセル化するオブジェクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-138">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class defines an object that encapsulates the essential details of a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="c23fa-139">クラスは、特定の接続の詳細に関連するほとんどすべてのプロパティを構成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-139">The class consists almost entirely of properties related to the details of a particular connection.</span></span> <span data-ttu-id="c23fa-140">接続のコンシューマーコントロールに関して、いくつかのプロパティが関係しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-140">Several properties concern the consumer control in a connection.</span></span> <span data-ttu-id="c23fa-141">プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>はコンシューマーコントロール自体を参照し、プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>はコンシューマーの ID を参照します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-141">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property references the consumer control itself, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property references the consumer's ID.</span></span> <span data-ttu-id="c23fa-142">コンシューマーの接続ポイントの詳細を含む<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> オブジェクトは、コンシューマーのプロパティによって参照されます。<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint></span><span class="sxs-lookup"><span data-stu-id="c23fa-142">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, which contains the details of the consumer's connection point, is referenced by the consumer's <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span> <span data-ttu-id="c23fa-143">プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>は、 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトの ID を参照します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-143">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property references the ID of the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="c23fa-144">接続を作成するには、これらのコンシューマー関連のすべての接続プロパティに値が割り当てられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-144">All these consumer-related connection properties must have a value assigned to them to create a connection.</span></span>  
  
 <span data-ttu-id="c23fa-145">また<xref:System.Web.UI.WebControls.WebParts.WebPartConnection> 、クラスには、接続のプロバイダーコントロールに関連するいくつかのプロパティがあり、これらはコンシューマーのプロパティに対応しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-145">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class also has several properties that relate to the provider control in a connection, and these correspond to the properties for a consumer.</span></span> <span data-ttu-id="c23fa-146">プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>はプロバイダーコントロール自体を参照し、プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>はその ID を参照します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-146">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property references the provider control itself, while the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property references its ID.</span></span> <span data-ttu-id="c23fa-147">プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>は<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>オブジェクトを参照し、プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>はプロバイダーのコネクションポイントの ID を参照します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-147">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property references the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property references the ID of the provider's connection point.</span></span>  
  
 <span data-ttu-id="c23fa-148">いくつかのプロパティは、接続の状態に関係しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-148">Several properties concern the state of the connection.</span></span> <span data-ttu-id="c23fa-149">プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>は、接続がアクティブである (現在データを交換している) か、非アクティブである (まだ接続されているがデータをアクティブに共有していない) かを示します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-149">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property indicates whether the connection is active (currently exchanging data) or inactive (still connected but not actively sharing data).</span></span> <span data-ttu-id="c23fa-150">プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>は、接続が共有である (ページのすべてのユーザーが使用できる) か、またはユーザー固有の接続<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>であるかを示します。プロパティは、コントロールが静的である (ページマークアップで宣言されていて、そのために永続的である) かどうかを示します。動的 (プログラムによって作成され、削除可能であることを意味します)。</span><span class="sxs-lookup"><span data-stu-id="c23fa-150">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property indicates whether the connection is a shared (available to all users of a page) or a user-specific connection, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property indicates whether the control is static (declared in the page markup and thus permanent) or dynamic (created programmatically, meaning that it can be deleted).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-151">次のコード例は、2つ<xref:System.Web.UI.WebControls.WebParts.WebPart>のコントロール間の単純な接続を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-151">The following code example demonstrates how to create a simple connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="c23fa-152">この例では、接続のタグを Web ページのマークアップに配置することによって、接続を形成する3つの方法を示します。プログラムによって、コードで接続を作成します。また、UI を介して、ユーザー <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>が接続を確立できるように、ページにコントロールを配置します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-152">The example demonstrates three ways of forming a connection: declaratively, by placing tags for the connection in the markup of the Web page; programmatically, by creating the connection in code; and through the UI, by placing a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control on the page, which enables users to establish a connection.</span></span>  
  
 <span data-ttu-id="c23fa-153">このコード例には、次の4つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-153">The code example has four parts:</span></span>  
  
-   <span data-ttu-id="c23fa-154">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-154">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="c23fa-155">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-155">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-156">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-156">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-157">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-157">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-158">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-158">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="c23fa-159">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-159">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="c23fa-160">このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更</span><span class="sxs-lookup"><span data-stu-id="c23fa-160">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="c23fa-161">コード例の2番目の部分は、インターフェイスとコントロールのソースコードです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-161">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="c23fa-162">ソースファイルには、という名前`IZipCode`の単純なインターフェイスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-162">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="c23fa-163">インターフェイスを実装し<xref:System.Web.UI.WebControls.WebParts.WebPart> 、プロバイダー `ZipCodeWebPart`コントロールとして機能するという名前のクラスもあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-163">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="c23fa-164">この`ProvideIZipCode`メソッドは、インターフェイスの唯一のメンバーを実装するコールバックメソッドです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-164">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="c23fa-165">メソッドは、単にインターフェイスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-165">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="c23fa-166">メソッドは、そのメタデータ内の`ConnectionProvider`属性でマークされていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-166">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="c23fa-167">これは、プロバイダーのコネクションポイントのコールバックメソッドとしてメソッドを識別するための機構です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-167">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="c23fa-168">もう 1 <xref:System.Web.UI.WebControls.WebParts.WebPart>つのクラス`WeatherWebPart`はという名前で、接続のコンシューマーとして機能します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-168">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="c23fa-169">このクラスには、プロバイダー `GetZipCode`コントロールから`IZipCode`インターフェイスのインスタンスを取得するという名前のメソッドがあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-169">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="c23fa-170">このメソッドは、メタデータの属性を`ConnectionConsumer`使用して、コンシューマーの接続ポイントメソッドとしてマークされていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-170">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span>  
  
 <span data-ttu-id="c23fa-171">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-171">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-172">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-172">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-173">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-173">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-174">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-174">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-175">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-175">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-176">コード例の3番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-176">The third part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-177">上部の近くには`Register` 、ユーザーコントロールとカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールのディレクティブがあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-177">Near the top are the `Register` directives for the user control and the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="c23fa-178">この例ではコントロールの動的コンパイルを前提としているため、コントロールのソースコードは App_Code サブフォルダーに存在する必要があります。ページ`Register`のタグは、任意のタグプレフィックスとコントロールの名前空間のみを参照します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-178">Because the example assumes dynamic compilation of the controls, the source code for the controls should be in an App_Code subfolder; the `Register` tag in the page references only an arbitrary tag prefix and the namespace of the controls.</span></span> <span data-ttu-id="c23fa-179">カスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (プロバイダーとコンシューマー) は、 `<zonetemplate>`要素内の Web ページの`<asp:webpartzone>`要素内で宣言されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-179">The custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (the provider and consumer) are declared within the Web page's `<asp:webpartzone>` element, inside a `<zonetemplate>` element.</span></span>  
  
 <span data-ttu-id="c23fa-180">ページには、カスタムコントロール間の接続を構成する3つの方法が用意されています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-180">The page provides three ways to form a connection between the custom controls.</span></span> <span data-ttu-id="c23fa-181">最初のメソッドは宣言型です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-181">The first method is declarative.</span></span> <span data-ttu-id="c23fa-182">ページ`<StaticConnections>`のマークアップでは、要素が宣言され、その`<asp:WebPartConnections>`中で、さまざまなコンシューマーおよびプロバイダーの詳細が属性として指定されています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-182">In the markup for the page, a `<StaticConnections>` element is declared, and within that is an `<asp:WebPartConnections>` element, with the various consumer and provider details of the connection specified as attributes.</span></span> <span data-ttu-id="c23fa-183">これは、Web ページで直接宣言することによって接続を作成する方法の1つ`<asp:WebPartManager>`です。これは、特に要素内で行います。</span><span class="sxs-lookup"><span data-stu-id="c23fa-183">This is one way to create a connection, by declaring it directly in the Web page, specifically within the `<asp:WebPartManager>` element.</span></span> <span data-ttu-id="c23fa-184">この静的接続により、2つのカスタムコントロール間の接続が、ページの初回読み込み時に直ちに作成されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-184">Because of this static connection, a connection between the two custom controls is created immediately the first time the page loads.</span></span>  
  
 <span data-ttu-id="c23fa-185">コントロール間の接続を形成する2つ目の方法は、 `<asp:connectionszone>`ページの要素によって提供されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-185">A second method for forming a connection between the controls is provided by the `<asp:connectionszone>` element in the page.</span></span> <span data-ttu-id="c23fa-186">ユーザーが実行時にページを接続表示モードに切り替え、いずれかのカスタムコントロールで connect 動詞をクリックすると、要素`<asp:connectionszone>`は接続を作成するための UI を自動的に表示します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-186">If a user switches a page into connect display mode at run time, and clicks a connect verb on one of the custom controls, the `<asp:connectionszone>` element automatically renders the UI for creating a connection.</span></span>  
  
 <span data-ttu-id="c23fa-187">また、このページでは、接続を作成する3番目の方法も示しています。これはプログラムによって行われます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-187">The page also demonstrates a third way of creating a connection, which is to do it programmatically.</span></span> <span data-ttu-id="c23fa-188">メソッドでは、コードはプロバイダーコントロール<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>のオブジェクトを作成し、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>メソッドを呼び出すことによって接続ポイントの詳細を取得します。 `Button1_Click`</span><span class="sxs-lookup"><span data-stu-id="c23fa-188">In the `Button1_Click` method, the code creates a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object for the provider control, and retrieves its connection point details by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method.</span></span> <span data-ttu-id="c23fa-189">コンシューマーコントロールに対して同様のタスクを実行し、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-189">It carries out a similar task for the consumer control, calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method.</span></span> <span data-ttu-id="c23fa-190">最後に、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッドを呼び出すことによって、新しいオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-190">Finally, it creates the new <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-191">ブラウザーに Web ページを読み込んだ後、最初の接続は`<StaticConnections>`要素内で宣言されているため、既に存在しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-191">After you load the Web page in a browser, the first connection already exists because it is declared within the `<StaticConnections>` element.</span></span> <span data-ttu-id="c23fa-192">**郵便番号プロバイダー**コントロールにテキストを入力すると、それがコンシューマーコントロールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-192">Enter some text in the **ZIP Code Provider** control, and it will be displayed in the consumer control.</span></span> <span data-ttu-id="c23fa-193">次に、2つのコントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-193">Next, disconnect the two controls.</span></span> <span data-ttu-id="c23fa-194">**表示モード** ドロップダウンリストコントロールを使用して、ページを 接続 表示モードに変更します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-194">Using the **Display Mode** drop-down list control, change the page to connect display mode.</span></span> <span data-ttu-id="c23fa-195">各<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックすると、それぞれに**接続**オプションが表示されていることがわかります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-195">Click the verbs menu (represented by a downward arrow in the title bar) for each of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and notice that each has a **Connect** option.</span></span> <span data-ttu-id="c23fa-196">これは connect 動詞であり、ページが接続モードのときにのみ動詞メニューに表示されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-196">This is a connect verb, which appears in the verbs menu only when the page is in connect mode.</span></span> <span data-ttu-id="c23fa-197">いずれかのコントロールで connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールによって提供される接続 UI が表示されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-197">Click the connect verb on one of the controls, and the connection UI provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control appears.</span></span> <span data-ttu-id="c23fa-198">**[切断]** ボタンをクリックして、コントロール間の静的接続を終了します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-198">Click the **Disconnect** button to end the static connection between the controls.</span></span> <span data-ttu-id="c23fa-199">**[表示モード]** コントロールを使用して、ページをブラウズモードに戻します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-199">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="c23fa-200">プロバイダーに新しいテキストをもう一度入力してみてください。コントロールが切断されているため、コンシューマーコントロールでテキストを更新できないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-200">Try to enter some new text in the provider again, and note that because the controls are disconnected, the text fails to update in the consumer control.</span></span>  
  
 <span data-ttu-id="c23fa-201">次に、上記と同じ方法を使用して、ページを connect 表示モードに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-201">Next, use the same method as above to switch the page into connect display mode again.</span></span> <span data-ttu-id="c23fa-202">いずれかのコントロールで接続動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-202">Click a connect verb on one of the controls.</span></span> <span data-ttu-id="c23fa-203">**[接続の作成]** リンクをクリックし、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールによって提供される UI を使用して、コントロール間の接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-203">Click the **Create a Connection** link, and use the UI provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control to create a connection between the controls.</span></span> <span data-ttu-id="c23fa-204">これは、接続を作成するための2番目の方法です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-204">This is the second method for creating a connection.</span></span> <span data-ttu-id="c23fa-205">接続が作成されるとすぐに、プロバイダーコントロールに入力した最後の文字列 (コントロールが切断されたために表示できなかったもの) が、コンシューマーに突然表示されることに注意してください。これは、接続が再作成されたためです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-205">Note that as soon as the connection is formed, the last string you entered in the provider control (that failed to appear because the controls were disconnected) suddenly appears in the consumer, because the connection has been recreated.</span></span> <span data-ttu-id="c23fa-206">**[切断]** ボタンをクリックして、今作成した現在の接続を終了します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-206">Click the **Disconnect** button to end the current connection that you just created.</span></span> <span data-ttu-id="c23fa-207">ページをブラウズモードに戻します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-207">Return the page to browse mode.</span></span> <span data-ttu-id="c23fa-208">プロバイダーに新しいテキストを入力して、テキストが更新されていないこと、およびコントロールが再び切断されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-208">Enter some new text in the provider to demonstrate that the text is not updated, and that the controls are again disconnected.</span></span>  
  
 <span data-ttu-id="c23fa-209">ページを返して表示モードに接続します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-209">Return the page to connect display mode.</span></span> <span data-ttu-id="c23fa-210">Connect 動詞をクリックするのではなく、[接続**WebPart コントロール**] ボタンをクリックします。これは、3番目の接続方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-210">Instead of clicking a connect verb, click the **Connect WebPart Controls** button, which illustrates the third method of forming a connection.</span></span> <span data-ttu-id="c23fa-211">この方法では、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールを使用せずに、コントロールをプログラムで1つの簡単な手順で接続します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-211">This approach connects the controls programmatically in one simple step without having to use the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span> <span data-ttu-id="c23fa-212">接続が作成されると、プロバイダーに入力した最後の文字列が、突然コンシューマーコントロールに表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-212">Note that as the connection is created, the last string you entered in the provider suddenly appears in the consumer control.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
    <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)"><span data-ttu-id="c23fa-213">Web パーツ接続の概要</span><span class="sxs-lookup"><span data-stu-id="c23fa-213">Web Parts Connections Overview</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-214">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-214">ASP.NET Web Parts Controls</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c23fa-215"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-215">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-216"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A>コンストラクターはパブリックであるため、接続が Web ページのマークアップで宣言されている場合、ASP.NET パーサーはインスタンスを作成できます。このコンストラクターは、開発者コードで使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="c23fa-216">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> constructor is public so that the ASP.NET parser can create an instance when a connection is declared in the markup of a Web page; this constructor is not intended to be used in developer code.</span></span>  
  
 <span data-ttu-id="c23fa-217">プログラムによってオブジェクトを<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>作成する場合は、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールに用意さ<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType>れているまたはメソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-217">When you want to create a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object programmatically, you should use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> method provided in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="c23fa-218">これらのメソッドは、接続を作成するための多くの詳細<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>を処理し、オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-218">These methods handle the many details of creating a connection, and return a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="c23fa-219"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>クラスのコンストラクターは、プロパティと<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>プロパティの値をに`true`設定します。 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection></span><span class="sxs-lookup"><span data-stu-id="c23fa-219">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> constructor for the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class sets the values of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> properties to `true`.</span></span> <span data-ttu-id="c23fa-220">したがって、新しい接続の既定の状態は静的になります (つまり、それを含んでいる Web ページのマークアップで宣言され、ページのすべてのユーザーに表示されます)。</span><span class="sxs-lookup"><span data-stu-id="c23fa-220">Thus the default state of a new connection is to be static (meaning that it is declared in the markup of the containing Web page) and shared (visible to all users of the page).</span></span> <span data-ttu-id="c23fa-221">これは、通常のシナリオで接続を追加するときに、ページのマークアップで`<asp:webpartconnection>`要素を使用して接続を宣言することによって行われます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-221">This will be the case when you add a connection in the typical scenario, by declaring the connection in the markup of the page with an `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="c23fa-222">ただし、その他の状況では、接続にはこれらのプロパティに対して異なる値が設定されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-222">However, in other circumstances a connection will have different values for these properties.</span></span> <span data-ttu-id="c23fa-223">たとえば、コードで接続オブジェクトを作成することによってプログラムによって接続を追加し、ユーザーが既定のユーザーのパーソナル化スコープでページを表示している場合、接続は動的なユーザーごとに作成されます (特定のユーザーのみに表示されます)。接続.</span><span class="sxs-lookup"><span data-stu-id="c23fa-223">For example, when you add a connection programmatically by creating the connection object in code, and the user is viewing the page in the default user personalization scope, the connection is created as a dynamic, per-user(visible only to the specific user) connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c23fa-224">プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>と<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>プロパティは読み取り専用です。接続の性質を決定するこれらのプロパティは、接続の作成方法 (ページマークアップで宣言されているかどうかによって異なります) に応じて、コントロールによって内部的に設定されます。プログラムによってコードまたはユーザーインターフェイスを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-224">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> properties are read-only, and these properties that determine the nature of a connection are set internally by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control depending on how a connection is created (declaratively in the page markup, or programmatically through your code or the user interface).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-225">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-225">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Consumer">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart Consumer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart Consumer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Consumer As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ Consumer { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Consumer : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-226">接続でコンシューマー コントロールとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-226">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> object that is acting as the consumer control in a connection.</span></span></summary>
        <value><span data-ttu-id="c23fa-227">接続でコンシューマーとして動作する Web パーツ コントロールを表す <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</span><span class="sxs-lookup"><span data-stu-id="c23fa-227">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that represents the Web Parts control acting as the consumer in a connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-228">すべての Web パーツ接続は、データを共有する2つのコントロールで構成されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-228">Every Web Parts connection consists of two controls that share data.</span></span> <span data-ttu-id="c23fa-229">一方のコントロールはデータのプロバイダーとして機能し、もう一方のコントロールはコンシューマーとして機能し、プロバイダーからのデータを受信して処理します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-229">One control acts as the provider of data, and the other control acts as a consumer, receiving and processing the data from the provider.</span></span> <span data-ttu-id="c23fa-230">プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>は、接続関係でコンシューマー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能するコントロールへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-230">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property gets a reference to the <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer in a connection relationship.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-231">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>プロパティのプログラムによる使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-231">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-232">このコード例には、次の4つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-232">The code example has four parts:</span></span>  
  
-   <span data-ttu-id="c23fa-233">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-233">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="c23fa-234">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-234">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-235">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-235">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-236">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-236">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-237">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-237">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="c23fa-238">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-238">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="c23fa-239">このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更</span><span class="sxs-lookup"><span data-stu-id="c23fa-239">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Consumer#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_Consumer#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="c23fa-240">コード例の2番目の部分は、コンシューマーとして<xref:System.Web.UI.WebControls.WebParts.WebPart>機能する2つのコントロールと接続のプロバイダーとして機能する2つのコントロールのソースコード、および接続ポイントに使用されるインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-240">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="c23fa-241">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-241">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-242">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-242">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-243">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-243">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-244">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-244">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-245">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-245">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Consumer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Consumer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-246">コード例の3番目の部分は、コントロールをホストする Web ページのコードであり、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-246">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span> <span data-ttu-id="c23fa-247">ページの上部付近には、ユーザー `Register`コントロールとカスタムコントロールのディレクティブがあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-247">Near the top of the page are the `Register` directives for the user control and the custom controls.</span></span> <span data-ttu-id="c23fa-248">この例では動的コンパイルを`Register`使用するため、ソースファイルのディレクティブはアセンブリ名を参照する必要はありません。これには、任意のタグプレフィックスとコントロールの名前空間のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-248">Because this example uses dynamic compilation, the `Register` directive for the source file does not need to reference an assembly name; it includes only an arbitrary tag prefix and the namespace of the controls.</span></span> <span data-ttu-id="c23fa-249">メソッドでは、コードは<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールを介して接続オブジェクトにアクセスし、コンシューマーコントロールへの参照を取得します。 `Button2_Click`</span><span class="sxs-lookup"><span data-stu-id="c23fa-249">In the `Button2_Click` method, the code accesses the connection object through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and gets a reference to the consumer control.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Consumer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Consumer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-250">ブラウザーにページを読み込んだ後、**[表示モード]** ドロップダウンリストコントロールを使用して、ページを接続モードに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-250">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="c23fa-251"><xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの1つで動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックし、connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-251">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="c23fa-252">**[WebPart コントロールの接続]** ボタンまたは指定された接続ユーザーインターフェイス (UI) を使用して、2つのコントロール間の接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-252">Use the **Connect WebPart Controls** button, or the provided connection user interface (UI), to create a connection between the two controls.</span></span> <span data-ttu-id="c23fa-253">**[コンシューマー情報の表示]** ボタンをクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>プロパティを示すコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-253">Click the **Display Consumer Info** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c23fa-254"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> プロパティの長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-254">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> property is zero.</span></span></exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-255">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-255">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConsumerConnectionPoint">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsumerConnectionPoint As ConsumerConnectionPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ ConsumerConnectionPoint { System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerConnectionPoint : System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-256">接続でコンシューマーとして動作するコントロールに対するコネクション ポイントとしての役割を果たすオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-256">Gets the object that serves as a connection point for a control that is acting as a consumer in a connection.</span></span></summary>
        <value><span data-ttu-id="c23fa-257">接続のコンシューマー コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />。</span><span class="sxs-lookup"><span data-stu-id="c23fa-257">A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> associated with the consumer control in a connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-258">2つ<xref:System.Web.UI.WebControls.WebParts.WebPart>のコントロール間の接続を作成するために必要な手順の1つは、各コントロールの接続ポイントを作成することです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-258">One of the required steps for creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is to create connection points for each control.</span></span> <span data-ttu-id="c23fa-259">コンシューマー接続ポイントは、コンシューマーとして動作するコントロールに接続する方法に関する情報を格納するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-259">The consumer connection point is an object that contains the information about how to connect to the control acting as a consumer.</span></span> <span data-ttu-id="c23fa-260">コンシューマーのソースコードでは、メソッドの1つを`ConnectionConsumer`属性で識別する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-260">In the consumer's source code, one of the methods must be identified with the `ConnectionConsumer` attribute.</span></span> <span data-ttu-id="c23fa-261">コンシューマー <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>コントロールに関連付けられているオブジェクトには、メソッドの ID、ユーザーインターフェイス (UI) で使用する表示名、およびメソッドが取得できるインターフェイスの種類など、メソッドと属性の詳細が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-261">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object that is associated with a consumer control contains details about the method and the attribute, including an ID for the method, a display name for use in the user interface (UI), and what type of interface the method can retrieve.</span></span> <span data-ttu-id="c23fa-262">コンシューマーに関するこの一連の情報、接続を形成するためのメソッド、およびそれが認識するインターフェイスの種類によって、コンシューマー接続ポイントが形成されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-262">This set of information about the consumer, its method for forming connections, and the type of interface it understands, collectively forms a consumer connection point.</span></span>  
  
 <span data-ttu-id="c23fa-263">既定では、 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトは一度に1つ<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>のオブジェクトにしか接続できません。</span><span class="sxs-lookup"><span data-stu-id="c23fa-263">By default, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object can connect to only one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object at a time.</span></span> <span data-ttu-id="c23fa-264">コンシューマーは、可能なコンシューマー接続ポイントとして複数のメソッドを識別できますが、コンシューマーは1つのコンシューマーとして1つの接続にのみ参加できます (したがって、1つのコンシューマー接続ポイントだけをアクティブにできます)。</span><span class="sxs-lookup"><span data-stu-id="c23fa-264">A consumer could have multiple methods identified as possible consumer connection points, but a consumer can only participate in one connection as a consumer (hence, only one of its consumer connection points can be active) at a time.</span></span> <span data-ttu-id="c23fa-265">これに対し、 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>は、任意の数の<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトに接続できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-265">In contrast, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> can connect to any number of <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="c23fa-266">この既定の動作は、 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>属性のプロパティをオーバーライドすることによって変更できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-266">This default behavior can be changed by overriding the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A> property on the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-267">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>プロパティのプログラムによる使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-267">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-268">この例には、次の4つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-268">The example has four parts:</span></span>  
  
-   <span data-ttu-id="c23fa-269">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-269">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="c23fa-270">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-270">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-271">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-271">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-272">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-272">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-273">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-273">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="c23fa-274">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-274">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="c23fa-275">このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更</span><span class="sxs-lookup"><span data-stu-id="c23fa-275">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="c23fa-276">コード例の2番目の部分は、コンシューマーとして<xref:System.Web.UI.WebControls.WebParts.WebPart>機能する2つのコントロールと接続のプロバイダーとして機能する2つのコントロールのソースコード、および接続ポイントに使用されるインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-276">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="c23fa-277">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-277">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-278">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-278">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-279">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-279">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-280">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-280">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-281">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-281">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-282">コード例の3番目の部分は、コントロールをホストする Web ページのコードであり、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-282">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span> <span data-ttu-id="c23fa-283">メソッドでは、接続を形成するために必要なすべてのオブジェクトが作成<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>されます。これにはオブジェクトも含まれます。 `Button1_Click`</span><span class="sxs-lookup"><span data-stu-id="c23fa-283">In the `Button1_Click` method, all the objects required to form a connection are created, including a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="c23fa-284">これらのオブジェクトはすべて、接続<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>を作成するためにメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-284">These objects are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create the connection.</span></span> <span data-ttu-id="c23fa-285">メソッドでは、コードはプロパティに<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>アクセスし、コネクションポイントの詳細を表示します。 `Button2_Click`</span><span class="sxs-lookup"><span data-stu-id="c23fa-285">In the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property and displays some details of the connection point.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-286">ブラウザーにページを読み込んだ後、**[表示モード]** ドロップダウンリストコントロールを使用して、ページを接続モードに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-286">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="c23fa-287"><xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの1つで動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックし、connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-287">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="c23fa-288">2つのコントロール間の接続を作成するには、**[WebPart コントロールの接続]** ボタンまたは提供された接続 UI を使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-288">Use the **Connect WebPart Controls** button, or the provided connection UI, to create a connection between the two controls.</span></span> <span data-ttu-id="c23fa-289">**[ConnectionPoint Details]** \ (詳細 \) ボタンをクリック<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>して、プロパティを示すコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-289">Click the **ConnectionPoint Details** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-290">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-290">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConsumerConnectionPointID">
      <MemberSignature Language="C#" Value="public string ConsumerConnectionPointID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerConnectionPointID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsumerConnectionPointID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConsumerConnectionPointID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerConnectionPointID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-291">接続のコンシューマー接続ポイントとしての役割を果たすオブジェクトの ID を参照する接続のプロパティ値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-291">Gets or sets the property value on a connection that references the ID of the object serving as the consumer connection point for that connection.</span></span></summary>
        <value><span data-ttu-id="c23fa-292">コンシューマー接続ポイントの ID を格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="c23fa-292">A string that contains the ID for the consumer connection point.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-293">Web ページのマークアップで宣言された静的接続の場合、開発者は、 `ConsumerConnectionPointID` `<asp:webpartconnection>`要素の属性に値を割り当てることによって、接続に使用するコンシューマー接続ポイントを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-293">For a static connection declared in the markup of a Web page, developers can specify which consumer connection point will be used for the connection by assigning a value to the `ConsumerConnectionPointID` attribute on the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="c23fa-294">属性に値が割り当てられていない場合<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>は、プロパティ値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-294">If a value is not assigned to the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
 <span data-ttu-id="c23fa-295">動的な (プログラムによる) 接続を作成する場合は、通常、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティの値を設定しないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-295">When you create dynamic (programmatic) connections, normally you should not set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span> <span data-ttu-id="c23fa-296">コントロールでメソッド<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>を呼び出して、コンシューマーおよびコンシューマー接続ポイントオブジェクトを (他の必須パラメーターと共に) 渡すだけで、そのメソッドはコンシューマーの接続に使用する正しい ID を決定します。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>視点.</span><span class="sxs-lookup"><span data-stu-id="c23fa-296">You can simply call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the consumer and consumer connection point objects (along with the other required parameters), and that method determines the correct ID to use for the consumer's connection point.</span></span> <span data-ttu-id="c23fa-297">同様に、接続を切断すると、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティ値を指定しなくてもメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-297">Similarly, when you disconnect, you can call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method without needing to specify the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c23fa-298">コンシューマーの接続ポイントの ID は、または他のサーバーコントロールを<xref:System.Web.UI.WebControls.WebParts.WebPart>コンシューマーとして指定するときに決定できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-298">The ID of a consumer's connection point can be determined when you designate a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control as a consumer.</span></span> <span data-ttu-id="c23fa-299">プロバイダーコントロールまたはトランスフォーマーのいずれかによって提供されるインターフェイスのインスタンスを取得するメソッドを、コンシューマーで特定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-299">You must identify a method in the consumer that retrieves an instance of an interface furnished by either a provider control or a transformer.</span></span> <span data-ttu-id="c23fa-300">メソッドを識別するには、 `ConnectionConsumer`コード属性でマークします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-300">To identify the method, mark it with the `ConnectionConsumer` code attribute.</span></span> <span data-ttu-id="c23fa-301">この属性を追加すると、コンシューマーの<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトの ID として機能するオプションの文字列値パラメーターを追加できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-301">When you add this attribute, you can add an optional string value parameter that serves as an ID for the consumer's <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="c23fa-302">省略可能な ID パラメーターの値を指定すると、その値は接続の<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティの値になります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-302">If you supply a value for the optional ID parameter, that value becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property for the connection.</span></span> <span data-ttu-id="c23fa-303">ID 値を指定しない場合は、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>プロパティ値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-303">If you do not supply an ID value, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-304">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティの宣言型の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-304">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-305">この例には、次の4つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-305">The example has four parts:</span></span>  
  
-   <span data-ttu-id="c23fa-306">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-306">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="c23fa-307">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-307">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-308">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-308">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-309">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-309">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-310">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-310">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="c23fa-311">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-311">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="c23fa-312">このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更</span><span class="sxs-lookup"><span data-stu-id="c23fa-312">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="c23fa-313">コード例の2番目の部分は、インターフェイスのソースコードと、コンシューマーコントロールとプロバイダーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-313">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="c23fa-314">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-314">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-315">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-315">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-316">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-316">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-317">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-317">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-318">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-318">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-319">コード例の3番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-319">The third part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-320">接続は、要素`<StaticConnections>`と`<asp:WebPartsConnection>`要素を使用して、ページマークアップで宣言されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-320">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="c23fa-321">接続宣言には、必須`ConsumerConnectionPointID`の属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-321">The connection declaration includes the required `ConsumerConnectionPointID` attribute.</span></span> <span data-ttu-id="c23fa-322">接続を作成するための2つ目の`Button1_Click`方法は、メソッドに表示されます。このメソッドでは、コンシューマーコントロールで定義されているコネクションポイントを使用して、コードが新しい接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-322">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="c23fa-323">次に、 `Button2_Click`メソッドで、コードはプロパティに<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-323">Then, in the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-324">ページをブラウザーに読み込むと、そのページで静的接続が宣言されているため、接続が既に存在しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-324">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="c23fa-325">プロバイダーコントロールにテキストを入力し、接続のためにコンシューマーに表示されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-325">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="c23fa-326">次に、コントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-326">Next, disconnect the controls.</span></span> <span data-ttu-id="c23fa-327">**表示モード** ドロップダウンリストコントロールを使用して、ページを 接続モード に切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-327">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="c23fa-328"><xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの1つで動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックし、connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-328">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="c23fa-329">**[切断]** ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-329">Click the **Disconnect** button.</span></span> <span data-ttu-id="c23fa-330">**[WebPart コントロールの接続]** ボタンを使用して、2つのコントロール間の接続を再作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-330">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="c23fa-331">**[ConnectionPoint Details]** ボタンをクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティ値にアクセスするコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-331">Click the **ConnectionPoint Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property value.</span></span> <span data-ttu-id="c23fa-332">値は、コントロールの下のラベルに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-332">The value is written out in a label below the controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-333">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-333">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConsumerID">
      <MemberSignature Language="C#" Value="public string ConsumerID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsumerID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConsumerID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-334">接続のコンシューマーとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの ID を参照する接続のプロパティ値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-334">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a consumer for that connection.</span></span></summary>
        <value><span data-ttu-id="c23fa-335">接続のコンシューマーとして動作するコントロールの ID を格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="c23fa-335">A string that contains the ID of the control acting as a consumer in a connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-336">コントロール<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>間の<xref:System.Web.UI.WebControls.WebParts.WebPart>接続を作成する場合は、プロパティ値が必要です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-336">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property value is required when you create a connection between <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="c23fa-337">プロパティに値が割り当てられていない場合、コントロールが<xref:System.Web.UI.WebControls.WebParts.WebPartManager>接続のアクティブ化を試みたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-337">If a value is not assigned to the property, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-338">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>プロパティの宣言型の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-338">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-339">この例には、次の4つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-339">The example has four parts:</span></span>  
  
-   <span data-ttu-id="c23fa-340">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-340">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="c23fa-341">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-341">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-342">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-342">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-343">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-343">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-344">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-344">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="c23fa-345">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-345">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="c23fa-346">このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更</span><span class="sxs-lookup"><span data-stu-id="c23fa-346">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="c23fa-347">コード例の2番目の部分は、インターフェイスのソースコードと、コンシューマーコントロールとプロバイダーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-347">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="c23fa-348">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-348">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-349">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-349">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-350">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-350">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-351">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-351">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-352">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-352">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-353">コード例の3番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-353">The third part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-354">接続は、要素`<StaticConnections>`と`<asp:WebPartsConnection>`要素を使用して、ページマークアップで宣言されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-354">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="c23fa-355">接続宣言には、必須`ConsumerID`の属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-355">The connection declaration includes the required `ConsumerID` attribute.</span></span> <span data-ttu-id="c23fa-356">接続を作成するための2つ目の`Button1_Click`方法は、メソッドに表示されます。このメソッドでは、コンシューマーコントロールで定義されているコネクションポイントを使用して、コードが新しい接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-356">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="c23fa-357">次に、 `Button2_Click`メソッドで、コードが<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>プロパティの値にアクセスして、ラベルに表示します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-357">Then, in the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-358">ページをブラウザーに読み込むと、そのページで静的接続が宣言されているため、接続が既に存在しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-358">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="c23fa-359">プロバイダーコントロールにテキストを入力し、接続のためにコンシューマーに表示されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-359">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="c23fa-360">次に、コントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-360">Next, disconnect the controls.</span></span> <span data-ttu-id="c23fa-361">**表示モード** ドロップダウンリストコントロールを使用して、ページを 接続モード に切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-361">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="c23fa-362"><xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの1つで動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックし、connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-362">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="c23fa-363">**[切断]** ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-363">Click the **Disconnect** button.</span></span> <span data-ttu-id="c23fa-364">**[WebPart コントロールの接続]** ボタンを使用して、2つのコントロール間の接続を再作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-364">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="c23fa-365">**[コンシューマーの詳細]** ボタンをクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>プロパティ値にアクセスするコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-365">Click the **Consumer Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-366">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-366">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-367"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> オブジェクトの ID を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-367">Gets or sets the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</span></span></summary>
        <value><span data-ttu-id="c23fa-368"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> の ID を格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="c23fa-368">A string that contains the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-369">すべて<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>のオブジェクトには、その<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>プロパティに一意の値が割り当てられています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-369">Every <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object has a unique value assigned to its <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property.</span></span> <span data-ttu-id="c23fa-370">これは、複数の接続を区別する方法があることを確認するためです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-370">This is to ensure that there is a way to distinguish between multiple connections.</span></span>  
  
 <span data-ttu-id="c23fa-371">Web ページで`<asp:webpartconnection>`要素を宣言して静的な接続を作成し、接続の`ID`属性に値を割り当てない場合、コントロールが<xref:System.Web.UI.WebControls.WebParts.WebPartManager>接続のアクティブ化を試みたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-371">If you create a static connection by declaring an `<asp:webpartconnection>` element in a Web page, and you do not assign a value to the `ID` attribute for the connection, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
 <span data-ttu-id="c23fa-372">コントロールは<xref:System.Web.UI.WebControls.WebParts.WebPartManager> 、新しい動的接続を作成するときに、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A>メソッドを呼び出して、接続の一意の ID を生成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-372">When the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control creates a new dynamic connection, it calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> method to generate a unique ID for the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-373">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>プロパティの宣言型の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-373">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-374">この例には、次の4つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-374">The example has four parts:</span></span>  
  
-   <span data-ttu-id="c23fa-375">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-375">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="c23fa-376">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-376">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-377">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-377">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-378">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-378">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-379">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-379">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="c23fa-380">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-380">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="c23fa-381">このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更</span><span class="sxs-lookup"><span data-stu-id="c23fa-381">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="c23fa-382">コード例の2番目の部分は、インターフェイスのソースコードと、コンシューマーコントロールとプロバイダーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-382">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="c23fa-383">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-383">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-384">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-384">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-385">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-385">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-386">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-386">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-387">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-387">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-388">コード例の3番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-388">The third part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-389">接続は、要素`<StaticConnections>`と`<asp:WebPartsConnection>`要素を使用して、ページマークアップで宣言されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-389">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="c23fa-390">接続宣言には、必須`ID`の属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-390">The connection declaration includes the required `ID` attribute.</span></span> <span data-ttu-id="c23fa-391">接続を作成するための2つ目の`Button1_Click`方法は、メソッドに表示されます。このメソッドでは、コンシューマーコントロールで定義されているコネクションポイントを使用して、コードが新しい接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-391">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="c23fa-392">ここでは、接続が動的であり、コントロールが<xref:System.Web.UI.WebControls.WebParts.WebPartManager>接続に id を割り当てるため、id プロパティは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="c23fa-392">Here, the ID property is not required, because the connection is dynamic, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control assigns an ID to the connection.</span></span> <span data-ttu-id="c23fa-393">メソッドでは、コードが<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>プロパティの値にアクセスして、ラベルに表示します。 `Button2_Click`</span><span class="sxs-lookup"><span data-stu-id="c23fa-393">In the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-394">ページをブラウザーに読み込むと、そのページで静的接続が宣言されているため、接続が既に存在しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-394">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="c23fa-395">プロバイダーコントロールにテキストを入力し、接続のためにコンシューマーに表示されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-395">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="c23fa-396">次に、コントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-396">Next, disconnect the controls.</span></span> <span data-ttu-id="c23fa-397">**表示モード** ドロップダウンリストコントロールを使用して、ページを 接続モード に切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-397">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="c23fa-398"><xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの1つで動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックし、connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-398">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="c23fa-399">**[切断]** ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-399">Click the **Disconnect** button.</span></span> <span data-ttu-id="c23fa-400">**[WebPart コントロールの接続]** ボタンを使用して、2つのコントロール間の接続を再作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-400">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="c23fa-401">**[接続の詳細]** ボタンをクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>プロパティ値にアクセスするコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-401">Click the **Connection Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-402">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-402">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-403">現在 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> オブジェクトが確立されていて、そのプロバイダー コントロールとコンシューマー コントロールの間でデータを交換できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-403">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is currently established and able to exchange data between its provider and consumer controls.</span></span></summary>
        <value><span data-ttu-id="c23fa-404">接続がアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c23fa-404"><see langword="true" /> if the connection is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-405">プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクトの状態を示します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-405">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property indicates a state of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span> <span data-ttu-id="c23fa-406">接続がこの状態になると、接続のプロバイダーとコンシューマーの制御が通信し、共通のインターフェイスまたは<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトを介してデータを交換できるようになります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-406">When the connection is in this state, the provider and consumer controls in the connection are communicating and able to exchange data through a common interface or a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span>  
  
 <span data-ttu-id="c23fa-407">通常のブラウズモードで確立された接続を含むレンダリングページをユーザーが表示すると、通常、接続はアクティブになります (ページが読み込まれたときに、競合やその他の問題が原因でアクティブ化できなかった場合を除きます)。</span><span class="sxs-lookup"><span data-stu-id="c23fa-407">When a user views a rendered page that includes an established connection in normal browse mode, the connection is typically active (unless it failed to be activated due to some conflict or other issue when the page loaded).</span></span> <span data-ttu-id="c23fa-408">ページおよびコントロールのライフサイクルの初期段階では、プロパティの値は`false`になります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-408">In the early stages of the page and control life cycle, the property value is `false`.</span></span> <span data-ttu-id="c23fa-409">接続は、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールのイベントが発生した直後にアクティブ化されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-409">The connection is activated just after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is raised.</span></span> <span data-ttu-id="c23fa-410">具体的には、コンシューマーがプロバイダーまた<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>はオブジェクトから指定されたインターフェイスのインスタンスを取得した後に、接続がアクティブ化されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-410">Specifically, the connection is activated after the consumer has retrieved an instance of the specified interface from the provider or a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span>  
  
 <span data-ttu-id="c23fa-411">ページ上の複数の接続によって競合または同期の問題が発生する可能性がある状況で、接続がアクティブであるかどうかを確認すると便利です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-411">It is useful to know whether a connection is active in situations where there might be conflicts or synchronization issues due to multiple connections on a page.</span></span> <span data-ttu-id="c23fa-412">たとえば、2つの接続<xref:System.Web.UI.WebControls.WebParts.WebPartManager>の間に何らかの競合がある場合、コントロールには、競合を回避するために接続の1つをアクティブ化しないオプションがあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-412">For example, if there is some kind of conflict between two connections, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has the option of not activating one of the connections to avoid the conflict.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-413">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-413">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-414">この例には、次の3つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-414">The example has three parts:</span></span>  
  
-   <span data-ttu-id="c23fa-415">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-415">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-416">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-416">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-417">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-417">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-418">コード例の最初の部分は、インターフェイスのソースコードと、コンシューマーコントロールとプロバイダーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-418">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="c23fa-419">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-419">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-420">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-420">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-421">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-421">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-422">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-422">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-423">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-423">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsActive#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsActive#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-424">コード例の2番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-424">The second part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-425">Top の近くには`Register` 、2つの動的にコンパイル<xref:System.Web.UI.WebControls.WebParts.WebPart>されたコントロールのソースコードを参照するディレクティブがあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-425">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="c23fa-426">静的接続は、ページ上の`<StaticConnections>`要素内で宣言されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-426">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="c23fa-427">要素内`<script>`には、4つのイベントハンドラーがあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-427">Within the `<script>` element are four event handlers.</span></span> <span data-ttu-id="c23fa-428">各イベントハンドラーは、静的な<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>接続でプロパティの値をチェックし、接続がアクティブ<xref:System.Web.UI.WebControls.Label>であるか非アクティブであるかを示すメッセージをコントロールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-428">Each event handler checks the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property on the static connection, and writes a message to the <xref:System.Web.UI.WebControls.Label> control indicating whether the connection is active or inactive at that state of the page and control life cycle.</span></span> <span data-ttu-id="c23fa-429">これは、接続がアクティブになってから、ページがレンダリングされた後もアクティブなままになるポイントを示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-429">This demonstrates at what point the connection becomes active, and that it remains active after the page is rendered.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsActive#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/CS/wpConnectIsActiveCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsActive#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/VB/wpConnectIsActiveVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-430">ブラウザーにページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-430">Load the page in a browser.</span></span> <span data-ttu-id="c23fa-431">静的接続は既に作成されており、ページ内のさまざまなポイントで接続がアクティブであったかどうかを示すラベルに既にメッセージが書き込まれています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-431">The static connection is already created, and messages have already been written to the labels showing whether the connection was active at various points in the page and control life cycle.</span></span> <span data-ttu-id="c23fa-432">**[接続の詳細]** ボタンをクリックすると、その時点では接続がアクティブにならないことに注意してください。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>ただし、接続は、イベントの後に再びアクティブになります (その<xref:System.Web.UI.Control.PreRender>後も引き続きアクティブになります)。ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-432">Click the **Connection Details** button, and note that the connection is not active at that point, but that the connection is reactivated each time after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event, and that it is still active (and will remain so) after the <xref:System.Web.UI.Control.PreRender> event of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-433">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-433">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShared : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-434"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> オブジェクトをすべてのユーザーに表示するかまたは現在のユーザーのみに表示するかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-434">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is visible to all users or only to the current user.</span></span></summary>
        <value><span data-ttu-id="c23fa-435">接続が共有される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c23fa-435"><see langword="true" /> if the connection is shared; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-436">個々<xref:System.Web.UI.WebControls.WebParts.WebPart>のコントロール<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>と同様に、オブジェクトは、共有ユーザーまたはユーザーごとのインスタンスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-436">As with individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object can be a shared or a per-user instance.</span></span> <span data-ttu-id="c23fa-437">共有インスタンスとは、Web ページのすべてのユーザーに接続が表示されることを意味します。また、ユーザーごとのインスタンスは、接続が特定のユーザーに対してのみ表示されることを意味します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-437">A shared instance means that the connection is visible to all users of a Web page, and a per-user instance means the connection is visible only to a specific user.</span></span>  
  
 <span data-ttu-id="c23fa-438">一般に、接続がページに追加される方法によって、接続が共有されているかどうかが決まります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-438">In general, the way a connection is added to a page determines whether the connection is shared.</span></span> <span data-ttu-id="c23fa-439">接続が Web ページのマークアップで宣言されている場合、接続は共有<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>され、プロパティ値は`true`になります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-439">If the connection is declared in the markup of a Web page, then the connection is shared and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value is `true`.</span></span> <span data-ttu-id="c23fa-440">また、接続が追加されたときに Web ページが共有パーソナル化スコープに含まれている場合、接続も共有されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-440">In addition, if the Web page is in shared personalization scope when a connection is added, the connection is also shared.</span></span> <span data-ttu-id="c23fa-441">通常、ユーザーが接続を追加`<asp:connectionszone>`するためにユーザーインターフェイス (UI) を使用する場合、ページはユーザーのパーソナル化スコープ内にあるため、接続<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>は共有さ`false`れず、プロパティの値はになります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-441">Typically, when a user uses the `<asp:connectionszone>` user interface (UI) to add a connection, the page is in user personalization scope, so the connection is not shared and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-442">次のコード例は、プログラムに<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>よるプロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-442">The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-443">このコード例には5つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-443">The code example has five parts:</span></span>  
  
-   <span data-ttu-id="c23fa-444">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-444">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="c23fa-445">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-445">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-446">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-446">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-447">この例を実行するために必要な web.config ファイル内のエントリ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-447">An entry in the Web.config file that is required to run the example.</span></span>  
  
-   <span data-ttu-id="c23fa-448">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-448">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-449">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-449">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="c23fa-450">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-450">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="c23fa-451">このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更</span><span class="sxs-lookup"><span data-stu-id="c23fa-451">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsShared#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsShared#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="c23fa-452">コード例の2番目の部分は、インターフェイスのソースコードと、コンシューマーコントロールとプロバイダーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-452">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="c23fa-453">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-453">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-454">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-454">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-455">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-455">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-456">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-456">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-457">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-457">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsShared#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsShared#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-458">コード例の3番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-458">The third part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-459">メソッドでは、既存の接続<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>のプロパティをチェックし、結果をページに表示します。 `Button2_Click`</span><span class="sxs-lookup"><span data-stu-id="c23fa-459">In the `Button2_Click` method, it checks the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property of the existing connection and displays the result on the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsShared#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsShared#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-460">コード例の4番目の部分は、web.config ファイル内のエントリです。このファイルは、共有パーソナル化スコープでページを編集できるように、例を実行するユーザーアカウントに必要です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-460">The fourth part of the code example is an entry in the Web.config file that is required for the user account that will be running the example to be able to edit the page in shared personalization scope.</span></span> <span data-ttu-id="c23fa-461">これを有効にするには、次の例のように、 `<system.web>`セクション内の web.config ファイルにエントリが必要です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-461">To enable this, you must have an entry in the Web.config file within the `<system.web>` section that looks like the following example.</span></span>  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow users="UserAccount"  
             roles="admin"  
             verbs="enterSharedScope"/>  
    </authorization>            
  </personalization>  
</webParts>  
```  
  
 <span data-ttu-id="c23fa-462">ブラウザーにページを読み込んだ後、**表示モード** ドロップダウンリストコントロールを使用して、ページを 接続 表示モードに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-462">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect display mode.</span></span> <span data-ttu-id="c23fa-463">**[WebPart コントロールの接続]** ボタンをクリックして、接続を形成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-463">Click the **Connect WebPart Controls** button to form a connection.</span></span> <span data-ttu-id="c23fa-464">次に、**[接続の詳細]** ボタンをクリックして、接続が共有されているかどうかを表示します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-464">Next, click the **Connection Details** button to display whether the connection is shared.</span></span> <span data-ttu-id="c23fa-465">既定のユーザーパーソナル化スコープ内のページとの接続を作成した<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>場合、プロパティ値`false`は接続用である必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-465">If you created the connection with the page in the default user personalization scope, the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value should be `false` for the connection.</span></span>  
  
 <span data-ttu-id="c23fa-466"><xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールのいずれかの動詞メニューで (タイトルバーの下向き矢印によって示されます)、[接続] 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-466">On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (indicated by the downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="c23fa-467">接続 UI が表示されたら、**[切断]** ボタンをクリックして接続を終了します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-467">When the connection UI appears, click the **Disconnect** button to end the connection.</span></span> <span data-ttu-id="c23fa-468">**[表示モード]** コントロールを使用して、ページをブラウズモードに戻します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-468">Use the **Display Mode** control to return the page to browse mode.</span></span>  
  
 <span data-ttu-id="c23fa-469">**[表示モード]** コントロールで、**[共有]** オプションを選択して、ページを共有パーソナル化スコープに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-469">In the **Display Mode** control, select the **Shared** option to switch the page into shared personalization scope.</span></span> <span data-ttu-id="c23fa-470">上記と同じ手順に従って接続を作成し、もう一度 **[接続の詳細]** ボタンをクリックして、接続が共有されているかどうかを表示します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-470">Follow the same steps as those above to create a connection, and again click the **Connection Details** button to display whether the connection is shared.</span></span> <span data-ttu-id="c23fa-471">この場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>プロパティ`true`の値はになります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-471">In this case, the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property should be `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-472">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-472">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStatic : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-473"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> オブジェクトが Web ページのマークアップに宣言されているか、またはプログラムで作成されるかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-473">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is declared in the markup of a Web page, or created programmatically.</span></span></summary>
        <value><span data-ttu-id="c23fa-474">接続が静的な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c23fa-474"><see langword="true" /> if the connection is static; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-475">Web パーツコントロール間の接続は、静的または動的のどちらでもかまいません。</span><span class="sxs-lookup"><span data-stu-id="c23fa-475">Connections between Web Parts controls can be either static or dynamic.</span></span> <span data-ttu-id="c23fa-476">静的接続は、 `<asp:WebPartConnection>`要素を使用して、Web ページのマークアップで宣言されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-476">A static connection is declared in the markup of a Web page, using an `<asp:WebPartConnection>` element.</span></span> <span data-ttu-id="c23fa-477">動的接続は、プログラムによって、またはユーザーが<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールによって定義されたユーザーインターフェイス (UI) を使用して接続を作成するときに作成されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-477">Dynamic connections are created programmatically or when a user creates a connection through the user interface (UI) defined by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span>  
  
 <span data-ttu-id="c23fa-478">静的接続は共有オブジェクトであり、Web ページのすべてのユーザーが使用できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-478">Static connections are shared objects, meaning they are available to all users of the Web page.</span></span> <span data-ttu-id="c23fa-479">また、静的<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールと同様に、完全に削除することはできないため、実質的に永続的です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-479">Also, they are essentially permanent because, like a static <xref:System.Web.UI.WebControls.WebParts.WebPart> control, they cannot be permanently deleted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c23fa-480">静的接続オブジェクトを完全に削除することはできませんが、完全に切断できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-480">While a static connection object cannot be permanently deleted, it can be permanently disconnected.</span></span> <span data-ttu-id="c23fa-481">この場合、切断されたオブジェクトはサーバーに存在しますが、エンドユーザーはページ内にオブジェクトが存在することを認識することはありません。</span><span class="sxs-lookup"><span data-stu-id="c23fa-481">In this case, the disconnected object would exist on the server, but an end user would never be aware of the object's existence in a page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-482">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>プロパティのプログラムによる使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-482">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-483">このコード例には、次の3つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-483">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="c23fa-484">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-484">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-485">コントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-485">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-486">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-486">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-487">コード例の最初の部分は、インターフェイスのソースコードと、コンシューマーコントロールとプロバイダーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-487">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="c23fa-488">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-488">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-489">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-489">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-490">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-490">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-491">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-491">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-492">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-492">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsStatic#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsStatic#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-493">コード例の2番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-493">The second part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-494">Top の近くには`Register` 、2つの動的にコンパイル<xref:System.Web.UI.WebControls.WebParts.WebPart>されたコントロールのソースコードを参照するディレクティブがあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-494">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="c23fa-495">静的接続は、ページ上の`<StaticConnections>`要素内で宣言されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-495">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="c23fa-496">メソッド`Button1_Click`は、プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>にアクセスして、接続が静的であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-496">The `Button1_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property to check whether the connection is static.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsStatic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/CS/wpConnectIsStaticCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsStatic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/VB/wpConnectIsStaticVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-497">ブラウザーにページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-497">Load the page in a browser.</span></span> <span data-ttu-id="c23fa-498">静的接続は既に作成されています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-498">The static connection is already created.</span></span> <span data-ttu-id="c23fa-499">プロバイダーコントロールにテキストを入力し、そのテキストがコンシューマーコントロールに表示されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-499">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="c23fa-500">**[接続の詳細]** ボタンをクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>プロパティの値を表示します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-500">Click the **Connection Details** button to display the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-501">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-501">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ Provider { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-502">Web パーツ接続でプロバイダーとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-502">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that acts as the provider in a Web Parts connection.</span></span></summary>
        <value><span data-ttu-id="c23fa-503">データのプロバイダーとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</span><span class="sxs-lookup"><span data-stu-id="c23fa-503">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that acts as the provider of data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-504">すべての Web パーツ接続は、 <xref:System.Web.UI.WebControls.WebParts.WebPart>コンシューマーとプロバイダーの2つのコントロールで構成され<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> 、プロパティは接続のプロバイダーコントロールへの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-504">Every Web Parts connection consists of two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls--a consumer and a provider--and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property returns a reference to the provider control in a connection.</span></span>  
  
 <span data-ttu-id="c23fa-505">接続 (コンシューマーコントロール) の対応するものと同様に、接続を確立するにはプロバイダーコントロールが必要です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-505">Like its counterpart in a connection (the consumer control), the provider control is required to establish a connection.</span></span> <span data-ttu-id="c23fa-506">接続をプログラムによって作成するか、またはページの永続形式で宣言することによって、接続のプロバイダーとして機能するコントロールを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-506">Whether you create the connection programmatically, or by declaring it in page persistence format, you must specify a control to act as the provider for a connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-507">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-507">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-508">このコード例には、次の3つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-508">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="c23fa-509">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-509">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-510">コントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-510">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-511">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-511">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-512">コード例の最初の部分は、インターフェイスのソースコードと、コンシューマーコントロールとプロバイダーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-512">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="c23fa-513">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-513">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-514">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-514">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-515">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-515">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-516">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-516">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-517">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-517">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Provider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Provider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-518">コード例の2番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-518">The second part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-519">Top の近くには`Register` 、2つの動的にコンパイル<xref:System.Web.UI.WebControls.WebParts.WebPart>されたコントロールのソースコードを参照するディレクティブがあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-519">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="c23fa-520">静的接続は、ページ上の`<StaticConnections>`要素内で宣言されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-520">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="c23fa-521">`<asp:webpartconnection>` 要素`ProviderID`の属性には、割り当てられているプロバイダーコントロールの ID があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-521">Notice that in the `<asp:webpartconnection>` element, the `ProviderID` attribute has the ID of the provider control assigned to it.</span></span> <span data-ttu-id="c23fa-522">これは、静的接続のプロバイダーを識別するために必要です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-522">This is required to identify the provider for the static connection.</span></span> <span data-ttu-id="c23fa-523">メソッド`Button1_Click`は、プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>にアクセスし、その詳細の一部をラベルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-523">The `Button1_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property and writes some of its details to a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Provider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/CS/wpConnectProviderCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Provider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/VB/wpConnectProviderVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-524">ブラウザーにページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-524">Load the page in a browser.</span></span> <span data-ttu-id="c23fa-525">静的接続は既に作成されています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-525">The static connection is already created.</span></span> <span data-ttu-id="c23fa-526">プロバイダーコントロールにテキストを入力し、そのテキストがコンシューマーコントロールに表示されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-526">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="c23fa-527">**[プロバイダーの詳細]** ボタンをクリックすると、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>プロパティを通じてアクセスされるプロパティ値の一部が表示されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-527">Click the **Provider Details** button to display some of the property values accessed through the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c23fa-528"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> プロパティ値の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-528">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> property value is zero.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-529">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-529">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionPoint">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderConnectionPoint As ProviderConnectionPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ ProviderConnectionPoint { System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionPoint : System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-530">接続でプロバイダーとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールに対するコネクション ポイントとしての役割を果たすオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-530">Gets the object that serves as a connection point for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for a connection.</span></span></summary>
        <value><span data-ttu-id="c23fa-531">接続のプロバイダー コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />。</span><span class="sxs-lookup"><span data-stu-id="c23fa-531">A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> associated with the provider control in a connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-532">2つ<xref:System.Web.UI.WebControls.WebParts.WebPart>のコントロール間の接続を作成するために必要な手順の1つは、各コントロールの接続ポイントを作成することです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-532">One of the required steps for creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is to create connection points for each control.</span></span> <span data-ttu-id="c23fa-533">プロバイダー接続ポイントは、プロバイダーとして動作するコントロールに接続する方法に関する情報を格納するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-533">The provider connection point is an object that contains the information about how to connect to the control acting as a provider.</span></span> <span data-ttu-id="c23fa-534">プロバイダーのソースコードでは、メソッドの1つを`ConnectionProvider`属性で識別する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-534">In the provider's source code, one of the methods must be identified with the `ConnectionProvider` attribute.</span></span> <span data-ttu-id="c23fa-535"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>プロバイダーコントロールに関連付けられているには、メソッドの ID、ユーザーインターフェイス (UI) で使用する表示名、およびメソッドがコンシューマーに返すインターフェイスインスタンスの種類など、メソッドと属性の詳細が含まれています。制御.</span><span class="sxs-lookup"><span data-stu-id="c23fa-535">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> that is associated with a provider control contains details about the method and the attribute, including an ID for the method, a display name for use in the user interface (UI), and what type of interface instance the method can return to a consumer control.</span></span> <span data-ttu-id="c23fa-536">プロバイダーに関するこの一連の情報、接続の方法、提供されるインターフェイスの種類について、まとめてプロバイダー接続ポイントを形成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-536">This set of information about the provider, its method for forming connections, and the type of interface it provides, collectively forms a provider connection point.</span></span>  
  
 <span data-ttu-id="c23fa-537">既定では、 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>は一度に1つ<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>のオブジェクトにしか接続できません。</span><span class="sxs-lookup"><span data-stu-id="c23fa-537">By default, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> can connect to only one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object at a time.</span></span> <span data-ttu-id="c23fa-538">コンシューマーは、可能なコンシューマー接続ポイントとして複数のメソッドを識別できますが、コンシューマーは1つのコンシューマーとして1つの接続にのみ参加できます (したがって、1つのコンシューマー接続ポイントだけをアクティブにできます)。</span><span class="sxs-lookup"><span data-stu-id="c23fa-538">A consumer could have multiple methods identified as possible consumer connection points, but a consumer can only participate in one connection as a consumer (hence, only one of its consumer connection points can be active) at a time.</span></span> <span data-ttu-id="c23fa-539">これに対し、 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>は、既定では任意<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>の数のオブジェクトに接続できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-539">In contrast, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> can connect to any number of <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects by default.</span></span> <span data-ttu-id="c23fa-540">たとえば、郵便番号を提供するプロバイダーコントロールは、郵便番号を使用する複数のコンシューマーコントロールに接続して、気象データやニュースなど、郵便番号に基づいてさまざまな種類のデータを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-540">For example, a provider control that provides a postal code could be connected to multiple consumer controls that use a postal code to create various kinds of data based on a postal code, such as weather data, news, and so on.</span></span> <span data-ttu-id="c23fa-541">この既定の動作は、 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A> <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性のプロパティをオーバーライドすることによって変更できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-541">This default behavior can be changed by overriding the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A> property on the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-542">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>プロパティのプログラムによる使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-542">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-543">この例には、次の4つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-543">The example has four parts:</span></span>  
  
-   <span data-ttu-id="c23fa-544">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-544">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="c23fa-545">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-545">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-546">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-546">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-547">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-547">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-548">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-548">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="c23fa-549">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-549">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="c23fa-550">このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更</span><span class="sxs-lookup"><span data-stu-id="c23fa-550">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPoint#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="c23fa-551">コード例の2番目の部分は、コンシューマーとして<xref:System.Web.UI.WebControls.WebParts.WebPart>機能する2つのコントロールと接続のプロバイダーとして機能する2つのコントロールのソースコード、および接続ポイントに使用されるインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-551">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="c23fa-552">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-552">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-553">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-553">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-554">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-554">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-555">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-555">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-556">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-556">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderConnectionPoint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-557">コード例の3番目の部分は、コントロールをホストする Web ページのコードであり、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-557">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span> <span data-ttu-id="c23fa-558">メソッドでは、接続を形成するために必要なすべてのオブジェクトが作成<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>されます。これにはオブジェクトも含まれます。 `Button1_Click`</span><span class="sxs-lookup"><span data-stu-id="c23fa-558">In the `Button1_Click` method, all the objects required to form a connection are created, including a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="c23fa-559"><xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>メソッドへの呼び出しに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-559">Note the call to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="c23fa-560">作成されたさまざまなオブジェクトは、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>接続を作成するためにメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-560">The various created objects are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create the connection.</span></span> <span data-ttu-id="c23fa-561">メソッドでは、コードはプロパティに<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>アクセスし、コネクションポイントの詳細を表示します。 `Button2_Click`</span><span class="sxs-lookup"><span data-stu-id="c23fa-561">In the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property and displays some details of the connection point.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPoint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-562">ブラウザーにページを読み込んだ後、**[表示モード]** ドロップダウンリストコントロールを使用して、ページを接続モードに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-562">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="c23fa-563"><xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの1つで動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックし、connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-563">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="c23fa-564">2つのコントロール間の接続を作成するには、**[WebPart コントロールの接続]** ボタンまたは提供された接続 UI を使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-564">Use the **Connect WebPart Controls** button, or the provided connection UI, to create a connection between the two controls.</span></span> <span data-ttu-id="c23fa-565">**[ConnectionPoint Details]** \ (詳細 \) ボタンをクリック<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>して、プロパティを示すコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-565">Click the **ConnectionPoint Details** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-566">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-566">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionPointID">
      <MemberSignature Language="C#" Value="public string ProviderConnectionPointID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderConnectionPointID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderConnectionPointID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderConnectionPointID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionPointID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("default")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-567">接続のプロバイダー コネクション ポイントとしての役割を果たすオブジェクトの ID を参照する接続のプロパティ値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-567">Gets or sets the property value on a connection that references the ID of the object serving as the provider connection point for that connection.</span></span></summary>
        <value><span data-ttu-id="c23fa-568">プロバイダー コネクション ポイント オブジェクトの ID が含まれている文字列。</span><span class="sxs-lookup"><span data-stu-id="c23fa-568">A string that contains the ID for a provider connection point object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-569">Web ページのマークアップで宣言された静的接続の場合、開発者は、 `ProviderConnectionPointID` `<asp:webpartconnection>`要素の属性に値を割り当てることによって、接続に使用するプロバイダー接続ポイントを指定できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-569">For a static connection declared in the markup of a Web page, developers can specify which provider connection point will be used for the connection by assigning a value to the `ProviderConnectionPointID` attribute on the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="c23fa-570">属性に値が割り当てられていない場合<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>は、プロパティ値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-570">If a value is not assigned to the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
 <span data-ttu-id="c23fa-571">動的な (プログラムによる) 接続を作成する場合は、通常、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティの値を設定しないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-571">When you create dynamic (programmatic) connections, normally you should not set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span> <span data-ttu-id="c23fa-572">コントロールでメソッド<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>を呼び出して、プロバイダーとプロバイダーの接続ポイントオブジェクトを (他の必須パラメーターと共に) 渡すだけで、そのメソッドはプロバイダーの接続に使用する正しい ID を決定します。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>視点.</span><span class="sxs-lookup"><span data-stu-id="c23fa-572">You can simply call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the provider and provider connection point objects (along with the other required parameters), and that method determines the correct ID to use for the provider's connection point.</span></span> <span data-ttu-id="c23fa-573">同様に、接続を切断すると、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティ値を指定しなくてもメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-573">Similarly, when you disconnect, you can call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method without needing to specify the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c23fa-574">プロバイダーの接続ポイントの ID は、または他のサーバーコントロールを<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーとして指定するときに決定できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-574">The ID of a provider's connection point can be determined when you designate a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control as a provider.</span></span> <span data-ttu-id="c23fa-575">コンシューマーにデータを含むインターフェイスのインスタンスを提供する、プロバイダーのコールバックメソッドを識別する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-575">You must identify a callback method in the provider that serves an instance of an interface containing data to a consumer.</span></span> <span data-ttu-id="c23fa-576">メソッドを識別するには、 `ConnectionProvider`コード属性でマークします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-576">To identify the method, mark it with the `ConnectionProvider` code attribute.</span></span> <span data-ttu-id="c23fa-577">この属性を追加すると、プロバイダーの<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>オブジェクトの ID として機能するオプションの文字列値パラメーターを追加できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-577">When you add this attribute, you can add an optional string value parameter that serves as an ID for the provider's <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="c23fa-578">省略可能な ID パラメーターの値を指定すると、その値は接続の<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティの値になります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-578">If you supply a value for the optional ID parameter, that value becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property for the connection.</span></span> <span data-ttu-id="c23fa-579">Id 値を指定しない場合は、オブジェクト<xref:System.Web.UI.WebControls.WebParts.WebPartManager>の作成時にコントロールによって既定の id が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-579">If you do not supply an ID value, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control assigns a default ID when the object is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-580">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティの宣言型の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-580">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-581">この例には、次の4つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-581">The example has four parts:</span></span>  
  
-   <span data-ttu-id="c23fa-582">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-582">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="c23fa-583">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-583">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-584">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-584">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-585">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-585">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-586">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-586">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="c23fa-587">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-587">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="c23fa-588">このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更</span><span class="sxs-lookup"><span data-stu-id="c23fa-588">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPointID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="c23fa-589">コード例の2番目の部分は、インターフェイスのソースコードと、コンシューマーコントロールとプロバイダーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-589">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="c23fa-590">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-590">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-591">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-591">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-592">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-592">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-593">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-593">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-594">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-594">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderConnectionPointID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-595">コード例の3番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-595">The third part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-596">接続は、要素`<StaticConnections>`と`<asp:WebPartsConnection>`要素を使用して、ページマークアップで宣言されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-596">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="c23fa-597">接続宣言には、必須`ProviderConnectionPointID`の属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-597">The connection declaration includes the required `ProviderConnectionPointID` attribute.</span></span> <span data-ttu-id="c23fa-598">接続を作成する2つ目の方法は`Button1_Click` 、メソッドに表示されます。このメソッドでは、プロバイダーコントロールで定義されている接続ポイント (と ID) を使用して、コードが新しい接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-598">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point (and the ID) defined in the provider control.</span></span> <span data-ttu-id="c23fa-599">次に、 `Button2_Click`メソッドで、コードはプロパティに<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>アクセスします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-599">Then, in the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPointID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-600">ページをブラウザーに読み込むと、そのページで静的接続が宣言されているため、接続が既に存在しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-600">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="c23fa-601">プロバイダーコントロールにテキストを入力し、接続のためにコンシューマーに表示されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-601">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="c23fa-602">次に、コントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-602">Next, disconnect the controls.</span></span> <span data-ttu-id="c23fa-603">**表示モード** ドロップダウンリストコントロールを使用して、ページを 接続モード に切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-603">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="c23fa-604"><xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの1つで動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックし、connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-604">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="c23fa-605">**[切断]** ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-605">Click the **Disconnect** button.</span></span> <span data-ttu-id="c23fa-606">**[WebPart コントロールの接続]** ボタンを使用して、2つのコントロール間の接続を再作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-606">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="c23fa-607">**[ConnectionPoint Details]** ボタンをクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティ値にアクセスするコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-607">Click the **ConnectionPoint Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property value.</span></span> <span data-ttu-id="c23fa-608">値は、コントロールの下のラベルに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-608">The value is written out in a label below the controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-609">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-609">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ProviderID">
      <MemberSignature Language="C#" Value="public string ProviderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-610">接続のプロバイダーとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの ID を参照する接続のプロパティ値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-610">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for that connection.</span></span></summary>
        <value><span data-ttu-id="c23fa-611">プロバイダー コントロールの ID を格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="c23fa-611">A string that contains the ID of the provider control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-612">2 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> つ<xref:System.Web.UI.WebControls.WebParts.WebPart>のコントロール間の接続を作成する場合は、プロパティ値が必要です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-612">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property value is required when you create a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="c23fa-613">プロパティに値が割り当てられていない場合、コントロールが<xref:System.Web.UI.WebControls.WebParts.WebPartManager>接続のアクティブ化を試みたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-613">If a value is not assigned to the property, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-614">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>プロパティの宣言型の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-614">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-615">この例には、次の4つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-615">The example has four parts:</span></span>  
  
-   <span data-ttu-id="c23fa-616">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="c23fa-616">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="c23fa-617">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-617">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-618">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-618">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-619">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-619">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-620">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-620">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="c23fa-621">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-621">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="c23fa-622">このコントロールの表示モードとソースコードの説明の詳細については、 [「チュートリアル:Web パーツページ](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)での表示モードの変更</span><span class="sxs-lookup"><span data-stu-id="c23fa-622">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="c23fa-623">コード例の2番目の部分は、インターフェイスのソースコードと、コンシューマーコントロールとプロバイダーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-623">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="c23fa-624">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-624">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-625">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-625">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-626">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-626">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-627">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-627">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-628">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-628">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-629">コード例の3番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-629">The third part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-630">接続は、要素`<StaticConnections>`と`<asp:WebPartsConnection>`要素を使用して、ページマークアップで宣言されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="c23fa-630">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="c23fa-631">接続宣言には、必須`ProviderID`の属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-631">The connection declaration includes the required `ProviderID` attribute.</span></span> <span data-ttu-id="c23fa-632">接続を作成するための2つ目の`Button1_Click`方法は、メソッドに表示されます。このメソッドでは、コンシューマーコントロールで定義されているコネクションポイントを使用して、コードが新しい接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-632">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="c23fa-633">次に、 `Button2_Click`メソッドで、コードが<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>プロパティの値にアクセスして、ラベルに表示します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-633">Then, in the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-634">ページをブラウザーに読み込むと、そのページで静的接続が宣言されているため、接続が既に存在しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-634">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="c23fa-635">プロバイダーコントロールにテキストを入力し、接続のためにコンシューマーに表示されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-635">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="c23fa-636">次に、コントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-636">Next, disconnect the controls.</span></span> <span data-ttu-id="c23fa-637">これを行うには、**[表示モード]** ドロップダウンリストコントロールを使用して、ページを接続モードに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-637">To do that, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="c23fa-638"><xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの1つで動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックし、connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="c23fa-638">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="c23fa-639">**[切断]** ボタンをクリックすると、コントロールが切断されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-639">Click the **Disconnect** button, and the controls are disconnected.</span></span> <span data-ttu-id="c23fa-640">次に、**[WebPart コントロールの接続]** ボタンを使用して、2つのコントロール間の接続を再作成します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-640">Next, use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="c23fa-641">**[コンシューマーの詳細]** ボタンをクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>プロパティ値にアクセスするコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-641">Click the **Consumer Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-642">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-642">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="webPartConnection.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c23fa-643">継承した <see cref="M:System.Object.ToString" /> メソッドをオーバーライドし、接続オブジェクトの short 型の名前を返します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-643">Overrides the inherited <see cref="M:System.Object.ToString" /> method and returns a short type name for the connection object.</span></span></summary>
        <returns><span data-ttu-id="c23fa-644"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> の short (非修飾) 型の名前を格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="c23fa-644">A string that contains the short (unqualified) type name of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-645">このメソッドは、ほとんどの場合、コントロールデザイナーによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-645">This method is used mostly for convenience by control designers.</span></span> <span data-ttu-id="c23fa-646">完全修飾型名ではなく、短い型名を使用して、デザインビューでの接続オブジェクトの表示方法が向上します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-646">It improves how connection objects appear in Design view by using the shorter type name, as opposed to a fully qualified type name.</span></span> <span data-ttu-id="c23fa-647">ただし、メソッドは、接続オブジェクトの型名を知る必要があるコード内の任意の場所で呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-647">However, the method can be called at any point in your code where you want to know the type name of a connection object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c23fa-648">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A>メソッドを呼び出して、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクトの短い型名を返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-648">The following code example demonstrates how to call the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method to return the short type name of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="c23fa-649">このコード例には、次の3つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-649">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="c23fa-650">インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。</span><span class="sxs-lookup"><span data-stu-id="c23fa-650">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="c23fa-651">コントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="c23fa-651">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="c23fa-652">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-652">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="c23fa-653">コード例の最初の部分は、インターフェイスのソースコードと、コンシューマーコントロールとプロバイダーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-653">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="c23fa-654">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-654">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="c23fa-655">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-655">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="c23fa-656">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-656">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="c23fa-657">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-657">This code example uses dynamic compilation.</span></span> <span data-ttu-id="c23fa-658">のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用</span><span class="sxs-lookup"><span data-stu-id="c23fa-658">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ToString#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ToString#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="c23fa-659">コード例の2番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="c23fa-659">The second part of the code example is the Web page.</span></span> <span data-ttu-id="c23fa-660">Top の近くには`Register` 、2つの動的にコンパイル<xref:System.Web.UI.WebControls.WebParts.WebPart>されたコントロールのソースコードを参照するディレクティブがあります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-660">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="c23fa-661">静的接続は、ページ上の`<StaticConnections>`要素内で宣言されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-661">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="c23fa-662">メソッド`Button1_Click`は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A>メソッドを呼び出して、接続の型名をラベルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-662">The `Button1_Click` method calls the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method to write the type name of the connection to a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ToString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/CS/wpConnectToStringCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ToString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/VB/wpConnectToStringVB.aspx#1)]  
  
 <span data-ttu-id="c23fa-663">ブラウザーにページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-663">Load the page in a browser.</span></span> <span data-ttu-id="c23fa-664">静的接続は既に作成されています。</span><span class="sxs-lookup"><span data-stu-id="c23fa-664">The static connection is already created.</span></span> <span data-ttu-id="c23fa-665">プロバイダーコントロールにテキストを入力し、そのテキストがコンシューマーコントロールに表示されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-665">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="c23fa-666">**[接続の詳細]** ボタンをクリック<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A>して、メソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-666">Click the **Connection Details** button to execute the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Transformer">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transformer As WebPartTransformer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartTransformer ^ Transformer { System::Web::UI::WebControls::WebParts::WebPartTransformer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transformer : System.Web.UI.WebControls.WebParts.WebPartTransformer" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartTransformer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-667">Web パーツ接続の 2 つの異なった互換性のないコネクション ポイントの間でデータを変換するために使用する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-667">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object that is used to transform data between two otherwise incompatible connection points in a Web Parts connection.</span></span></summary>
        <value><span data-ttu-id="c23fa-668"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</span><span class="sxs-lookup"><span data-stu-id="c23fa-668">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />.</span></span> <span data-ttu-id="c23fa-669">既定値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="c23fa-669">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-670">Web パーツ接続には、接続のプロバイダーとコンシューマーコントロールが接続できる2つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-670">In a Web Parts connection, there are two ways in which the provider and consumer controls in the connection can connect.</span></span> <span data-ttu-id="c23fa-671">これらのオブジェクトは、それぞれ<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>のオブジェクトと、両方のコントロールによって認識されるインターフェイス型を通じて直接接続できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-671">They can connect directly, through their respective <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects and an interface type that is understood by both controls.</span></span> <span data-ttu-id="c23fa-672">または、互換性がない場合は、プロバイダーのインターフェイスインスタンスを<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>コンシューマーによって認識される型に変換するオブジェクトを使用して、間接的に接続できます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-672">Or, if they are incompatible, they can connect indirectly, using a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object that transforms an interface instance from a provider into a type understood by a consumer.</span></span>  
  
 <span data-ttu-id="c23fa-673">接続<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A>の一部としてトランスフォーマーが必要な場合は、プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>によってオブジェクトへの参照が提供されます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-673">When a transformer is needed as part of a connection, the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> property provides a reference to the <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span> <span data-ttu-id="c23fa-674">Web ページのマークアップで接続のトランスフォーマーを宣言によって追加するには、 `<asp:WebPartConnection>`要素内にカスタムトランスフォーマー (または Web パーツコントロールセットで提供されるいずれかのトランスフォーマー) のタグを追加します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-674">You can add a transformer for a connection declaratively in the markup of a Web page, by adding a tag for a custom transformer (or one of the transformers provided with the Web Parts control set) within the `<asp:WebPartConnection>` element.</span></span> <span data-ttu-id="c23fa-675">プログラムを使用してトランスフォーマーを追加し、コードでそのインスタンスを作成し、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールのメソッドを呼び出して接続を作成し、その他の必要なパラメーターと共にトランスフォーマーオブジェクトに渡すこともできます。</span><span class="sxs-lookup"><span data-stu-id="c23fa-675">You can also add a transformer programmatically, creating an instance of it in your code, and calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to create the connection, passing to it the transformer object along with the other required parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-676">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-676">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transformers As WebPartTransformerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartTransformerCollection ^ Transformers { System::Web::UI::WebControls::WebParts::WebPartTransformerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transformers : System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartTransformerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c23fa-677">Web パーツ コントロール セットで内部的に使用する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="c23fa-677">Gets a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects used internally by the Web Parts control set.</span></span></summary>
        <value><span data-ttu-id="c23fa-678"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> オブジェクトを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</span><span class="sxs-lookup"><span data-stu-id="c23fa-678">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> containing <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c23fa-679">この<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A>プロパティは、開発者が使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="c23fa-679">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> property is never intended for use by developers.</span></span> <span data-ttu-id="c23fa-680">接続に関連付けられているトランスフォーマーにアクセスするには<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> 、開発者が常にプロパティを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="c23fa-680">To access the transformer associated with a connection, developers should always use the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> property.</span></span>  
  
 <span data-ttu-id="c23fa-681">プロパティは、ページ開発者が Web ページのマークアップ内の`<asp:webpartconnection>`要素内のトランスフォーマー要素を宣言できるようにするために、Web パーツコントロールセットによって内部的に使用されます。 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A></span><span class="sxs-lookup"><span data-stu-id="c23fa-681">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> property is used internally by the Web Parts control set to enable page developers to declare transformer elements within the `<asp:webpartconnection>` element in the markup of a Web page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="c23fa-682">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="c23fa-682">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
