<Type Name="WebPartConnection" FullName="System.Web.UI.WebControls.WebParts.WebPartConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00c595b93cfa46531c3addba1cbdbaaca274fcb8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37596403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebPartConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebPartConnection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPartConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartConnection sealed" />
  <TypeSignature Language="F#" Value="type WebPartConnection = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Transformers")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5615e-101">2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールで接続を構成できるようにするオブジェクトを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5615e-101">Provides an object that enables two <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls to form a connection.</span>
      </span>
      <span data-ttu-id="5615e-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5615e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-103">接続がリンクまたは 2 つの間のアソシエーションには、Web パーツ コントロール セットで<xref:System.Web.UI.WebControls.WebParts.WebPart>(またはその他のサーバーまたはユーザー) のデータを共有できるようにするコントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-103">In the Web Parts control set, a connection is a link or association between two <xref:System.Web.UI.WebControls.WebParts.WebPart> (or other server or user) controls that enables them to share data.</span></span> <span data-ttu-id="5615e-104">データを共有するには、この機能により、分離されたコントロールによって提供される機能以外の方法で使用される接続されているコントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-104">This ability to share data allows connected controls to be used in ways that exceed the functionality offered by the isolated controls.</span></span> <span data-ttu-id="5615e-105">たとえば、1 つのコントロールは、郵便番号データを提供し、別のコントロールがそのデータを読み取るし、郵便番号に基づいて地域の気象情報を提供する、接続されている 2 つのコントロールの機能を提供より多くの価値をユーザーにします。</span><span class="sxs-lookup"><span data-stu-id="5615e-105">For example, if one control provides postal code data, and another control can read that data and provide local weather information based on the postal code, then the connected capability of the two controls provides more value to users.</span></span> <span data-ttu-id="5615e-106">この例を拡張する他のコントロールを作成へのリンク ローカル ニュースを使用して、コントロールなどの郵便番号コードに基づいて表示情報もし、郵便番号データで動作するこれらすべてのコントロールは 1 つのコントロールを提供するとデータを共有する可能性があります、郵便番号。</span><span class="sxs-lookup"><span data-stu-id="5615e-106">To extend this example, other controls could be created that also display information based on a postal code, such as a control with links to local news, and all these controls that can work with postal code data could share data with the single control that provides a postal code.</span></span> <span data-ttu-id="5615e-107">Web パーツ アプリケーションのエンド ユーザーの作成し、管理によって提供される標準接続ユーザー インターフェイス (UI) を使用して、Web ブラウザーから直接このような互換性のあるすべてのコントロール間の接続、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロール、またはによって提供されるカスタム UI を使用して、開発者。</span><span class="sxs-lookup"><span data-stu-id="5615e-107">End users of Web Parts applications can create and manage connections between all such compatible controls directly from a Web browser, using the standard connections user interface (UI) provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control, or using a custom UI provided by a developer.</span></span>  
  
 <span data-ttu-id="5615e-108">これは、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>クラスの概要は、接続を作成するための基本的な詳細の [全般] ステートメント。</span><span class="sxs-lookup"><span data-stu-id="5615e-108">This <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class overview is a general statement of the basic details for creating a connection.</span></span> <span data-ttu-id="5615e-109">詳細については、特定のコンポーネントおよび接続の作成に関連する要件は、次を参照してください。 [Web パーツ接続の概要](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)、参照クラスを参照してください。 または、およびコード例を次の説明に記載されています。</span><span class="sxs-lookup"><span data-stu-id="5615e-109">For more on specific components and requirements involved in creating connections, see [Web Parts Connections Overview](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b), or see the reference classes and code examples mentioned in the following discussion.</span></span> <span data-ttu-id="5615e-110">Web パーツ接続のいくつかの基本的な側面があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-110">There are several fundamental aspects of a Web Parts connection:</span></span>  
  
-   <span data-ttu-id="5615e-111">2 つ<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-111">Two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="5615e-112">すべての Web パーツ接続では、2 つのコントロールで構成されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-112">Every Web Parts connection consists of two controls.</span></span> <span data-ttu-id="5615e-113">同時に、1 つ以上の接続に関与するコントロールのことがすべて 1 つの接続は、厳密に 2 つのコントロールで構成されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-113">It is possible for a control to participate in more than one connection simultaneously, but every single connection consists of exactly two controls.</span></span> <span data-ttu-id="5615e-114">コントロールをから直接派生させることができます、<xref:System.Web.UI.WebControls.WebParts.WebPart>基底クラス、またはこれらには、ASP.NET コントロール、カスタム サーバー コントロール、およびユーザー コントロールを含む、他のサーバー コントロールを指定できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-114">The controls can derive directly from the <xref:System.Web.UI.WebControls.WebParts.WebPart> base class, or they can be other server controls, including ASP.NET controls, custom server controls, and user controls.</span></span> <span data-ttu-id="5615e-115">コントロールから派生していない、<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスに配置されている場合、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーンをかっこで囲んでは自動的に、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクトから継承することができます、実行時に、<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスと関数の実行時刻として<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-115">Controls that do not derive from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, if placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, are automatically wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, which enables them to inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class and function as run-time <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span>  
  
-   <span data-ttu-id="5615e-116">コントロール内に存在する<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン。</span><span class="sxs-lookup"><span data-stu-id="5615e-116">Controls residing in <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zones.</span></span> <span data-ttu-id="5615e-117">両方<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールとサーバー コントロールの他の任意の型に存在する必要があります、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーンの Web パーツ接続 (およびその他のほとんどの Web パーツ機能) に参加できるようにします。</span><span class="sxs-lookup"><span data-stu-id="5615e-117">Both <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and any other type of server control must reside in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone to be able to participate in Web Parts connections (and most other Web Parts features).</span></span>  
  
-   <span data-ttu-id="5615e-118">コンシューマーとプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="5615e-118">Consumers and providers.</span></span> <span data-ttu-id="5615e-119">すべての Web パーツ接続では、2 つのコントロール: データとデータのコンシューマーのプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="5615e-119">In every Web Parts connection there are two controls: a provider of data and a consumer of data.</span></span> <span data-ttu-id="5615e-120">プロバイダーは、データを返すインターフェイスの形式で指定されたコールバック メソッドをコンシューマーにデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="5615e-120">The provider furnishes data to the consumer through a specified callback method that returns data in the form of an interface.</span></span> <span data-ttu-id="5615e-121">(を作成し、コールバック メソッドを指定する方法の例は、このトピックの例のセクションを参照してください)。このコールバック メソッドは、プロバイダーのコネクション ポイントと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="5615e-121">(For an example of how to create and specify the callback method, see the Example section of this topic.) This callback method is known as a provider connection point.</span></span> <span data-ttu-id="5615e-122">この接続ポイント (「わかりやすい」名前、ID、および返されたインターフェイスの種類) の詳細に含まれる、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>プロバイダー コントロールに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-122">The details of this connection point (its "friendly" name, an ID, and the type of the returned interface) are contained in a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object associated with the provider control.</span></span> <span data-ttu-id="5615e-123">コンシューマーは、インターフェイスのインスタンスを受け入れることができる、指定されたメソッドを通じて、データを受信します。</span><span class="sxs-lookup"><span data-stu-id="5615e-123">The consumer receives the data through a specified method that can accept an instance of the interface.</span></span> <span data-ttu-id="5615e-124">このメソッドは、コンシューマー接続ポイントと呼ばれ、接続ポイント (名前、ID、およびインターフェイスの型) の詳細に含まれる、<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>コンシューマー コントロールに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-124">This method is known as a consumer connection point, and the details of the connection point (name, ID, and type of interface) are contained in a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object associated with the consumer control.</span></span>  
  
-   <span data-ttu-id="5615e-125">互換性のあるコントロールまたは有効なトランスフォーマー。</span><span class="sxs-lookup"><span data-stu-id="5615e-125">Compatible controls or a valid transformer.</span></span> <span data-ttu-id="5615e-126">接続を機能させるには、コンシューマーとプロバイダーがありますと互換性のある (つまり、同じ種類のインターフェイスで、指定した接続ポイント メソッドが使える)、またはある必要がありますが、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトによって提供される型を変換できる、コンシューマーによって認識される型にプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="5615e-126">For a connection to work, the consumer and provider must either be compatible (meaning that their specified connection point methods can work with the same type of interface), or there must be a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object capable of translating the type offered by the provider into a type understood by the consumer.</span></span>  
  
-   <span data-ttu-id="5615e-127"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-127">A <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span> <span data-ttu-id="5615e-128">接続が存在する必要がありますのインスタンス、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>接続ポイントの詳細と共に、プロバイダーとコンシューマー コントロールへの参照を含むクラスです。</span><span class="sxs-lookup"><span data-stu-id="5615e-128">For a connection to exist, there must be an instance of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class that contains references to the provider and consumer controls, along with the details of their connection points.</span></span> <span data-ttu-id="5615e-129">かどうか、プロバイダーとコンシューマーが互換性のない、代わりに使用、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>接続には、オブジェクト、接続は、トランスフォーマーを参照します。</span><span class="sxs-lookup"><span data-stu-id="5615e-129">If the provider and consumer are incompatible and instead use a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object to connect, the connection references the transformer.</span></span>  
  
-   <span data-ttu-id="5615e-130">接続を確立することを意味します。</span><span class="sxs-lookup"><span data-stu-id="5615e-130">A means of establishing the connection.</span></span> <span data-ttu-id="5615e-131">正しく設計ポイントの接続方法および、ゾーンに配置された互換性のあるコンシューマーとプロバイダー コントロールと<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクトが使用可能な最後の基本的な手順の必要なの接続を開始します。</span><span class="sxs-lookup"><span data-stu-id="5615e-131">After compatible consumer and provider controls have been properly designed with connection point methods and placed in a zone, and a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object is available, the last basic step necessary is to initiate the connection.</span></span> <span data-ttu-id="5615e-132">これに 1 つの方法は、UI 経由の接続を作成するユーザーです。</span><span class="sxs-lookup"><span data-stu-id="5615e-132">One way this can happen is for users to create the connection through the UI.</span></span> <span data-ttu-id="5615e-133">配置した場合、`<asp:connectionszone>`接続用のコンポーネントはインプレースで実行時にユーザーを使用して、ページを接続の表示モードに切り替えることができます動詞をクリックして、接続プロバイダーまたはコンシューマーのいずれかの動詞メニューで、ページおよびその他の要素が必要です、および接続 UI (に基づいて、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロール) が表示されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-133">If you place an `<asp:connectionszone>` element on the page, and the other required components for a connection are in place, at run time a user can switch the page into connect display mode, click a connect verb on the verbs menu of either the provider or consumer, and a connection UI (based on the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control) will appear.</span></span> <span data-ttu-id="5615e-134">この UI を通じて、ユーザーは、接続を開始できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-134">Through this UI, the user can initiate the connection.</span></span> <span data-ttu-id="5615e-135">接続を開始する別の方法では、プログラムによって実行します。</span><span class="sxs-lookup"><span data-stu-id="5615e-135">Another way to initiate the connection is to do it programmatically.</span></span> <span data-ttu-id="5615e-136">どちらの場合、UI またはプログラムによって、基になるメソッドを介して接続を開始するかどうかは、同じです。</span><span class="sxs-lookup"><span data-stu-id="5615e-136">In either case, whether through the UI or programmatically, the underlying method that initiates the connection is the same.</span></span> <span data-ttu-id="5615e-137">アプリケーションの呼び出し、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッド (または<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッド トランスフォーマーを使用する場合) で、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>を制御する、プロバイダー、コンシューマー、および、それぞれのコネクション ポイント オブジェクトをそれに渡すと、メソッドを返します、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-137">The application calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method (or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method if using a transformer) on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the provider, the consumer, and their respective connection point objects, and the method returns a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="5615e-138"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection>クラスは、2 つの間の接続の重要な詳細情報をカプセル化するオブジェクトを定義します。<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-138">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class defines an object that encapsulates the essential details of a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="5615e-139">クラスは、ほとんどすべての関連する特定の接続の詳細プロパティで構成されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-139">The class consists almost entirely of properties related to the details of a particular connection.</span></span> <span data-ttu-id="5615e-140">いくつかのプロパティでは、接続でコンシューマー コントロールに関するものです。</span><span class="sxs-lookup"><span data-stu-id="5615e-140">Several properties concern the consumer control in a connection.</span></span> <span data-ttu-id="5615e-141"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>プロパティは、コンシューマー コントロール自体を参照し、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>プロパティは、コンシューマーの ID を参照</span><span class="sxs-lookup"><span data-stu-id="5615e-141">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property references the consumer control itself, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property references the consumer's ID.</span></span> <span data-ttu-id="5615e-142"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>コンシューマーのコネクション ポイントの詳細を含むオブジェクトですが、コンシューマーのによって参照される<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-142">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, which contains the details of the consumer's connection point, is referenced by the consumer's <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span> <span data-ttu-id="5615e-143"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティ参照の ID、<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-143">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property references the ID of the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="5615e-144">これらすべての接続のコンシューマーに関連するプロパティは、接続を作成する有効な値をいる必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-144">All these consumer-related connection properties must have a value assigned to them to create a connection.</span></span>  
  
 <span data-ttu-id="5615e-145"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection>クラスは、接続のプロバイダー コントロールに関連するいくつかのプロパティもあり、これらは、コンシューマーのプロパティに対応しています。</span><span class="sxs-lookup"><span data-stu-id="5615e-145">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class also has several properties that relate to the provider control in a connection, and these correspond to the properties for a consumer.</span></span> <span data-ttu-id="5615e-146"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>プロパティは、プロバイダー コントロール自体を参照中に、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>プロパティは、その ID を参照</span><span class="sxs-lookup"><span data-stu-id="5615e-146">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property references the provider control itself, while the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property references its ID.</span></span> <span data-ttu-id="5615e-147"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>プロパティ参照、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>オブジェクト、および<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティは、プロバイダーのコネクション ポイントの ID を参照します。</span><span class="sxs-lookup"><span data-stu-id="5615e-147">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property references the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property references the ID of the provider's connection point.</span></span>  
  
 <span data-ttu-id="5615e-148">いくつかのプロパティでは、接続の状態に関するものです。</span><span class="sxs-lookup"><span data-stu-id="5615e-148">Several properties concern the state of the connection.</span></span> <span data-ttu-id="5615e-149"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>プロパティは、接続が (データを交換する現在) アクティブまたは非アクティブな (まだ接続されているが、アクティブに共有ではないデータ) があるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-149">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property indicates whether the connection is active (currently exchanging data) or inactive (still connected but not actively sharing data).</span></span> <span data-ttu-id="5615e-150"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>プロパティは、接続が共有するかどうかを示します (ページのすべてのユーザーに使用可能) またはユーザー固有の接続では、および<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>プロパティは、かどうか、コントロールが静的 (とため永続的なページのマークアップで宣言) を示しますまたは動的 (プログラムで作成された、意味を削除できます)。</span><span class="sxs-lookup"><span data-stu-id="5615e-150">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property indicates whether the connection is a shared (available to all users of a page) or a user-specific connection, and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property indicates whether the control is static (declared in the page markup and thus permanent) or dynamic (created programmatically, meaning that it can be deleted).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-151">次のコード例は、2 つの単純な接続を作成する方法を示します<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-151">The following code example demonstrates how to create a simple connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="5615e-152">接続の構成の 3 つの方法の例を示します Web ページのマークアップでの接続用のタグを配置することで宣言によって、。はコードで接続を作成してプログラムでは、配置することで UI を使用して、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>  ページで、ユーザーの接続を確立できるようにするコントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-152">The example demonstrates three ways of forming a connection: declaratively, by placing tags for the connection in the markup of the Web page; programmatically, by creating the connection in code; and through the UI, by placing a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control on the page, which enables users to establish a connection.</span></span>  
  
 <span data-ttu-id="5615e-153">コード例では、4 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-153">The code example has four parts:</span></span>  
  
-   <span data-ttu-id="5615e-154">ページのモードを表示するユーザー コントロール Web パーツを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-154">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="5615e-155">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-155">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-156">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-156">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-157">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-157">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-158">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-158">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="5615e-159">割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-159">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="5615e-160">詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-160">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="5615e-161">コード例の 2 番目の部分では、インターフェイスとコントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-161">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="5615e-162">ソース ファイルには、という名前の単純なインターフェイスが含まれています。`IZipCode`します。</span><span class="sxs-lookup"><span data-stu-id="5615e-162">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="5615e-163"><xref:System.Web.UI.WebControls.WebParts.WebPart>という名前のクラス`ZipCodeWebPart`するインターフェイスを実装し、プロバイダー コントロールとして機能します。</span><span class="sxs-lookup"><span data-stu-id="5615e-163">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="5615e-164">その`ProvideIZipCode`メソッドは、インターフェイスの唯一のメンバーを実装するコールバック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="5615e-164">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="5615e-165">メソッドは、単に、インターフェイスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="5615e-165">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="5615e-166">メソッドが設定されている、`ConnectionProvider`そのメタデータ内の属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-166">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="5615e-167">これは、プロバイダーのコネクション ポイントのコールバック メソッドとしてメソッドを識別するための機構です。</span><span class="sxs-lookup"><span data-stu-id="5615e-167">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="5615e-168">他の<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスの名前が`WeatherWebPart`、および接続のコンシューマーとして機能します。</span><span class="sxs-lookup"><span data-stu-id="5615e-168">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="5615e-169">このクラスは、という名前のメソッドを持つ`GetZipCode`のインスタンスを取得する、`IZipCode`プロバイダー コントロールからのインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="5615e-169">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="5615e-170">コンシューマーのコネクション ポイントのメソッドとしてこのメソッドがマークされていることに注意してください、`ConnectionConsumer`そのメタデータ内の属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-170">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span>  
  
 <span data-ttu-id="5615e-171">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-171">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-172">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-172">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-173">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-173">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-174">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-174">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-175">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-175">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-176">コード例の 3 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-176">The third part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-177">上部には、 `Register` 、ユーザー コントロールとカスタム ディレクティブ<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-177">Near the top are the `Register` directives for the user control and the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="5615e-178">App_Code サブフォルダーに、コントロールのソース コードがありますので、この例では、コントロールの動的なコンパイル、`Register`ページ内のタグは、任意のタグ プリフィックスのみと、コントロールの名前空間を参照します。</span><span class="sxs-lookup"><span data-stu-id="5615e-178">Because the example assumes dynamic compilation of the controls, the source code for the controls should be in an App_Code subfolder; the `Register` tag in the page references only an arbitrary tag prefix and the namespace of the controls.</span></span> <span data-ttu-id="5615e-179">カスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (プロバイダーおよびコンシューマー) は、Web ページの中で宣言された`<asp:webpartzone>`要素では、内部、`<zonetemplate>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-179">The custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (the provider and consumer) are declared within the Web page's `<asp:webpartzone>` element, inside a `<zonetemplate>` element.</span></span>  
  
 <span data-ttu-id="5615e-180">ページは、カスタム コントロール間の接続を形成する 3 つの方法を提供します。</span><span class="sxs-lookup"><span data-stu-id="5615e-180">The page provides three ways to form a connection between the custom controls.</span></span> <span data-ttu-id="5615e-181">最初のメソッドは、宣言型です。</span><span class="sxs-lookup"><span data-stu-id="5615e-181">The first method is declarative.</span></span> <span data-ttu-id="5615e-182">ページのマークアップで、<`StaticConnections>`要素が宣言し、内では、`<asp:WebPartConnections>`要素、属性として指定された接続のさまざまなコンシューマーとプロバイダーの詳細。</span><span class="sxs-lookup"><span data-stu-id="5615e-182">In the markup for the page, a <`StaticConnections>` element is declared, and within that is an `<asp:WebPartConnections>` element, with the various consumer and provider details of the connection specified as attributes.</span></span> <span data-ttu-id="5615e-183">これは、具体的には内で、Web ページ内で直接宣言することにより、接続を作成する方法の 1 つ、`<asp:WebPartManager>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-183">This is one way to create a connection, by declaring it directly in the Web page, specifically within the `<asp:WebPartManager>` element.</span></span> <span data-ttu-id="5615e-184">この静的な接続により、2 つのカスタム コントロール間の接続は、ページが読み込まれる最初にすぐに作成されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-184">Because of this static connection, a connection between the two custom controls is created immediately the first time the page loads.</span></span>  
  
 <span data-ttu-id="5615e-185">コントロール間の接続を構成するための 2 番目のメソッドがによって提供される、`<asp:connectionszone>`ページ内の要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-185">A second method for forming a connection between the controls is provided by the `<asp:connectionszone>` element in the page.</span></span> <span data-ttu-id="5615e-186">ユーザーが実行時に、接続の表示モードを切り替えます、カスタムのコントロールの 1 つの connect 動詞をクリックすると、`<asp:connectionszone>`要素が自動的に接続を作成するための UI を表示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-186">If a user switches a page into connect display mode at run time, and clicks a connect verb on one of the custom controls, the `<asp:connectionszone>` element automatically renders the UI for creating a connection.</span></span>  
  
 <span data-ttu-id="5615e-187">ページには、プログラムで行うが、接続の作成の 3 番目の方法も示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-187">The page also demonstrates a third way of creating a connection, which is to do it programmatically.</span></span> <span data-ttu-id="5615e-188">`Button1_Click`メソッド、コードを作成、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>プロバイダー コントロールとの接続ポイントの詳細を呼び出すことによって取得オブジェクト、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5615e-188">In the `Button1_Click` method, the code creates a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object for the provider control, and retrieves its connection point details by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method.</span></span> <span data-ttu-id="5615e-189">コンシューマー コントロールの場合と同様のタスク実行を呼び出す、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5615e-189">It carries out a similar task for the consumer control, calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method.</span></span> <span data-ttu-id="5615e-190">最後に、作成、新しい<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクトを呼び出すことによって、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッドを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-190">Finally, it creates the new <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Overview/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="5615e-191">内で宣言されているため、既に、最初の接続が存在する、ブラウザーで Web ページの読み込み後、`<StaticConnections>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-191">After you load the Web page in a browser, the first connection already exists because it is declared within the `<StaticConnections>` element.</span></span> <span data-ttu-id="5615e-192">任意のテキストを入力してください、**郵便番号/ZIP Code プロバイダー**コントロールがコンシューマー コントロールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-192">Enter some text in the **ZIP Code Provider** control, and it will be displayed in the consumer control.</span></span> <span data-ttu-id="5615e-193">次に、2 つのコントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="5615e-193">Next, disconnect the two controls.</span></span> <span data-ttu-id="5615e-194">使用して、**表示モード**ドロップダウン リスト コントロール、ページを表示モードの接続を変更します。</span><span class="sxs-lookup"><span data-stu-id="5615e-194">Using the **Display Mode** drop-down list control, change the page to connect display mode.</span></span> <span data-ttu-id="5615e-195">それぞれに対して (タイトル バーの下向きの矢印で表される) の動詞メニューをクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、およびそれぞれには、 **Connect**オプション。</span><span class="sxs-lookup"><span data-stu-id="5615e-195">Click the verbs menu (represented by a downward arrow in the title bar) for each of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and notice that each has a **Connect** option.</span></span> <span data-ttu-id="5615e-196">動詞メニューに表示される、接続の動詞は、このページが接続モードが場合にのみです。</span><span class="sxs-lookup"><span data-stu-id="5615e-196">This is a connect verb, which appears in the verbs menu only when the page is in connect mode.</span></span> <span data-ttu-id="5615e-197">コントロール、および接続が提供する UI のいずれかの接続の動詞をクリックして、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールが表示されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-197">Click the connect verb on one of the controls, and the connection UI provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control appears.</span></span> <span data-ttu-id="5615e-198">をクリックして、**切断**コントロール間の静的な接続を終了するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-198">Click the **Disconnect** button to end the static connection between the controls.</span></span> <span data-ttu-id="5615e-199">使用して、**表示モード**コントロールをページをブラウズ モードを返します。</span><span class="sxs-lookup"><span data-stu-id="5615e-199">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="5615e-200">ここでも、プロバイダーに新しいテキストを入力し、コントロールが切断されているため、コンシューマー コントロールを更新する、テキストが失敗に注意してください。 お試しください。</span><span class="sxs-lookup"><span data-stu-id="5615e-200">Try to enter some new text in the provider again, and note that because the controls are disconnected, the text fails to update in the consumer control.</span></span>  
  
 <span data-ttu-id="5615e-201">次に、上記と同じメソッドを使用して、もう一度 connect 表示モードに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="5615e-201">Next, use the same method as above to switch the page into connect display mode again.</span></span> <span data-ttu-id="5615e-202">コントロールの 1 つの connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-202">Click a connect verb on one of the controls.</span></span> <span data-ttu-id="5615e-203">をクリックして、**接続を作成**リンク、およびが提供する UI を使用して、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロール間の接続を作成するコントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-203">Click the **Create a Connection** link, and use the UI provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control to create a connection between the controls.</span></span> <span data-ttu-id="5615e-204">これは、接続を作成する 2 番目のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="5615e-204">This is the second method for creating a connection.</span></span> <span data-ttu-id="5615e-205">接続が形成されるとすぐに、最後の文字列で入力した (つまり、コントロールの接続が切断されたために、表示に失敗しました)、プロバイダー コントロールに注意してください。 接続が再作成されているために、コンシューマーに突然表示されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-205">Note that as soon as the connection is formed, the last string you entered in the provider control (that failed to appear because the controls were disconnected) suddenly appears in the consumer, because the connection has been recreated.</span></span> <span data-ttu-id="5615e-206">をクリックして、**切断** ボタンを作成した現在の接続を終了します。</span><span class="sxs-lookup"><span data-stu-id="5615e-206">Click the **Disconnect** button to end the current connection that you just created.</span></span> <span data-ttu-id="5615e-207">ページをブラウズ モードを返します。</span><span class="sxs-lookup"><span data-stu-id="5615e-207">Return the page to browse mode.</span></span> <span data-ttu-id="5615e-208">テキストが更新されないことと、コントロールがもう一度切断されていることを示す、プロバイダーには、新しいテキストを入力します。</span><span class="sxs-lookup"><span data-stu-id="5615e-208">Enter some new text in the provider to demonstrate that the text is not updated, and that the controls are again disconnected.</span></span>  
  
 <span data-ttu-id="5615e-209">ページを表示モードの接続を返します。</span><span class="sxs-lookup"><span data-stu-id="5615e-209">Return the page to connect display mode.</span></span> <span data-ttu-id="5615e-210">接続の動詞をクリックする代わりにをクリックして、 **web パーツ コントロールの接続**ボタンで、接続の構成の 3 番目の方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5615e-210">Instead of clicking a connect verb, click the **Connect WebPart Controls** button, which illustrates the third method of forming a connection.</span></span> <span data-ttu-id="5615e-211">このアプローチでは、1 つの簡単な手順で、プログラムでコントロールを接続を使用しなくても、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-211">This approach connects the controls programmatically in one simple step without having to use the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span> <span data-ttu-id="5615e-212">接続が作成されるとコンシューマー コントロールに突然プロバイダーで入力した最後の文字列が表示に注意してください。</span><span class="sxs-lookup"><span data-stu-id="5615e-212">Note that as the connection is created, the last string you entered in the provider suddenly appears in the consumer control.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
    <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5615e-213">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-213">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-214"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> ASP.NET パーサーは、接続が Web ページのマークアップで宣言されているときにインスタンスを作成できるようにするパブリック コンス トラクターです。 このコンス トラクターを開発者のコードで使用する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="5615e-214">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> constructor is public so that the ASP.NET parser can create an instance when a connection is declared in the markup of a Web page; this constructor is not intended to be used in developer code.</span></span>  
  
 <span data-ttu-id="5615e-215">作成する場合、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>する必要がありますを使用するプログラムでは、オブジェクト、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType>または<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType>メソッドで提供される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-215">When you want to create a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object programmatically, you should use the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> or the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A?displayProperty=nameWithType> method provided in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="5615e-216">これらのメソッドは、接続の作成のさまざまな詳細を処理し、返す、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-216">These methods handle the many details of creating a connection, and return a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="5615e-217"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A>のコンス トラクター、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>クラスの値を設定する、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>と<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>プロパティ`true`します。</span><span class="sxs-lookup"><span data-stu-id="5615e-217">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.%23ctor%2A> constructor for the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class sets the values of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> properties to `true`.</span></span> <span data-ttu-id="5615e-218">したがって、新しい接続の既定の状態は (つまり、格納されている Web ページのマークアップで宣言されていること) を静的になりし、共有 (ページのすべてのユーザーに表示される)。</span><span class="sxs-lookup"><span data-stu-id="5615e-218">Thus the default state of a new connection is to be static (meaning that it is declared in the markup of the containing Web page) and shared (visible to all users of the page).</span></span> <span data-ttu-id="5615e-219">ある場合、このページのマークアップで接続を宣言することで、一般的なシナリオでは、接続を追加するときに、`<asp:webpartconnection>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-219">This will be the case when you add a connection in the typical scenario, by declaring the connection in the markup of the page with an `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="5615e-220">ただし、他の状況での接続は、これらのプロパティに別の値があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-220">However, in other circumstances a connection will have different values for these properties.</span></span> <span data-ttu-id="5615e-221">たとえば、コードでは、接続オブジェクトを作成して接続をプログラムで追加すると、ユーザーは、ページを表示する既定のユーザーのパーソナル化スコープでは、接続が、動的にあたり、user(visible only to the specific user) として作成されます。接続します。</span><span class="sxs-lookup"><span data-stu-id="5615e-221">For example, when you add a connection programmatically by creating the connection object in code, and the user is viewing the page in the default user personalization scope, the connection is created as a dynamic, per-user(visible only to the specific user) connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5615e-222"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>と<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>プロパティは読み取り専用との接続の種類を決定するこれらのプロパティの設定によって内部的に、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>接続の作成方法によってコントロール (ページのマークアップで宣言またはプログラムで、コードやユーザー インターフェイスを使用)。</span><span class="sxs-lookup"><span data-stu-id="5615e-222">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> properties are read-only, and these properties that determine the nature of a connection are set internally by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control depending on how a connection is created (declaratively in the page markup, or programmatically through your code or the user interface).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      </Docs>
    </Member>
    <Member MemberName="Consumer">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart Consumer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart Consumer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Consumer As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ Consumer { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Consumer : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-223">接続でコンシューマー コントロールとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-223">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> object that is acting as the consumer control in a connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-224">接続でコンシューマーとして動作する Web パーツ コントロールを表す <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-224">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that represents the Web Parts control acting as the consumer in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-225">すべての Web パーツ接続では、データを共有する 2 つのコントロールで構成されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-225">Every Web Parts connection consists of two controls that share data.</span></span> <span data-ttu-id="5615e-226">1 つのコントロールが、データのプロバイダーとして機能し、その他のコントロールを受け取って、プロバイダーからデータを処理するコンシューマーとして動作します。</span><span class="sxs-lookup"><span data-stu-id="5615e-226">One control acts as the provider of data, and the other control acts as a consumer, receiving and processing the data from the provider.</span></span> <span data-ttu-id="5615e-227"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>プロパティへの参照を取得する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> connection リレーションシップでコンシューマーとして動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-227">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property gets a reference to the <xref:System.Web.UI.WebControls.WebParts.WebPart> control acting as a consumer in a connection relationship.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-228">次のコード例は、のプログラムによる使用を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-228">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-229">コード例では、4 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-229">The code example has four parts:</span></span>  
  
-   <span data-ttu-id="5615e-230">ページのモードを表示するユーザー コントロール Web パーツを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-230">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="5615e-231">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-231">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-232">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-232">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-233">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-233">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-234">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-234">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="5615e-235">割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-235">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="5615e-236">詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-236">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Consumer#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_Consumer#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="5615e-237">コード例の 2 番目の部分は、2 つのソース コード<xref:System.Web.UI.WebControls.WebParts.WebPart>との接続、および接続ポイントを使用するインターフェイスのプロバイダーのコンシューマーとして機能するコントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-237">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="5615e-238">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-238">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-239">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-239">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-240">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-240">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-241">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-241">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-242">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-242">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Consumer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Consumer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-243">コード例の 3 番目の部分は、の使用方法、コントロールをホストする Web ページのコード、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-243">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span> <span data-ttu-id="5615e-244">ページの上部には、`Register`ユーザー コントロールとカスタム コントロール用のディレクティブ。</span><span class="sxs-lookup"><span data-stu-id="5615e-244">Near the top of the page are the `Register` directives for the user control and the custom controls.</span></span> <span data-ttu-id="5615e-245">この例は、動的なコンパイルを使用するため、`Register`ソース ファイルのディレクティブは、アセンブリ名を参照する必要はありません。 これは、任意のタグ プリフィックスのみと、コントロールの名前空間が含まれます。</span><span class="sxs-lookup"><span data-stu-id="5615e-245">Because this example uses dynamic compilation, the `Register` directive for the source file does not need to reference an assembly name; it includes only an arbitrary tag prefix and the namespace of the controls.</span></span> <span data-ttu-id="5615e-246">`Button2_Click`メソッド、コードを使用して接続オブジェクトにアクセスする、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>を制御して、コンシューマー コントロールへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="5615e-246">In the `Button2_Click` method, the code accesses the connection object through the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and gets a reference to the consumer control.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Consumer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Consumer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Consumer/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="5615e-247">使用して、ブラウザーでページを読み込んだ後、**表示モード**ドロップダウン リスト コントロールを接続モードのページに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="5615e-247">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="5615e-248">いずれかの動詞メニュー (タイトル バーの下向きの矢印で表される) をクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-248">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="5615e-249">使用して、 **web パーツ コントロールの接続**ボタン、または指定された接続ユーザー インターフェイス (UI) は、2 つのコントロール間の接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-249">Use the **Connect WebPart Controls** button, or the provided connection user interface (UI), to create a connection between the two controls.</span></span> <span data-ttu-id="5615e-250">をクリックして、**コンシューマーの情報を表示**を示すコードを実行するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-250">Click the **Display Consumer Info** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5615e-251">
            <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> プロパティの長さが 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-251">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" /> property is zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      </Docs>
    </Member>
    <Member MemberName="ConsumerConnectionPoint">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint ConsumerConnectionPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConsumerConnectionPoint As ConsumerConnectionPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ ConsumerConnectionPoint { System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerConnectionPoint : System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-252">接続でコンシューマーとして動作するコントロールに対するコネクション ポイントとしての役割を果たすオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-252">Gets the object that serves as a connection point for a control that is acting as a consumer in a connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-253">接続のコンシューマー コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-253">A <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> associated with the consumer control in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-254">2 つの間の接続を作成するための必要な手順のいずれかの<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは、各コントロールの接続ポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-254">One of the required steps for creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is to create connection points for each control.</span></span> <span data-ttu-id="5615e-255">コンシューマー接続ポイントは、コンシューマーとして機能するコントロールに接続する方法に関する情報を含むオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="5615e-255">The consumer connection point is an object that contains the information about how to connect to the control acting as a consumer.</span></span> <span data-ttu-id="5615e-256">いずれかのコンシューマーのソース コード内で識別する必要があります、`ConnectionConsumer`属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-256">In the consumer's source code, one of the methods must be identified with the `ConnectionConsumer` attribute.</span></span> <span data-ttu-id="5615e-257"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>コンシューマー コントロールに関連付けられているオブジェクトには、メソッドとユーザー インターフェイス (UI) で使用する表示名、メソッドの ID を含む、属性の詳細が含まれ、メソッド、インターフェイスの種類を取得できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-257">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object that is associated with a consumer control contains details about the method and the attribute, including an ID for the method, a display name for use in the user interface (UI), and what type of interface the method can retrieve.</span></span> <span data-ttu-id="5615e-258">この一連のコンシューマーに関する情報、接続、および認識するインターフェイスの型を形成するためのメソッドは、まとめてコンシューマー接続ポイントを形成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-258">This set of information about the consumer, its method for forming connections, and the type of interface it understands, collectively forms a consumer connection point.</span></span>  
  
 <span data-ttu-id="5615e-259">既定で、<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトは、1 つだけに接続できる<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>一度にオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-259">By default, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object can connect to only one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object at a time.</span></span> <span data-ttu-id="5615e-260">コンシューマーは、使用可能なコンシューマー接続ポイントとして識別される複数のメソッドがある可能性がありますが、(そのため、そのコンシューマー接続ポイントの 1 つは、アクティブにすることができます) のみ、コンシューマーはコンシューマーとしての 1 つの接続に関与のみできる、時にします。</span><span class="sxs-lookup"><span data-stu-id="5615e-260">A consumer could have multiple methods identified as possible consumer connection points, but a consumer can only participate in one connection as a consumer (hence, only one of its consumer connection points can be active) at a time.</span></span> <span data-ttu-id="5615e-261">これに対し、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>の任意の数に接続できる<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-261">In contrast, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> can connect to any number of <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="5615e-262">この既定の動作をオーバーライドすることで変更することができます、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-262">This default behavior can be changed by overriding the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A> property on the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-263">次のコード例は、のプログラムによる使用を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-263">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-264">この例では、4 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-264">The example has four parts:</span></span>  
  
-   <span data-ttu-id="5615e-265">ページのモードを表示するユーザー コントロール Web パーツを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-265">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="5615e-266">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-266">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-267">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-267">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-268">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-268">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-269">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-269">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="5615e-270">割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-270">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="5615e-271">詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-271">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="5615e-272">コード例の 2 番目の部分は、2 つのソース コード<xref:System.Web.UI.WebControls.WebParts.WebPart>との接続、および接続ポイントを使用するインターフェイスのプロバイダーのコンシューマーとして機能するコントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-272">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="5615e-273">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-273">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-274">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-274">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-275">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-275">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-276">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-276">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-277">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-277">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-278">コード例の 3 番目の部分は、の使用方法、コントロールをホストする Web ページのコード、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-278">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span> <span data-ttu-id="5615e-279">`Button1_Click`接続の形成に必要なすべてのオブジェクトで作成されますメソッドなどを<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-279">In the `Button1_Click` method, all the objects required to form a connection are created, including a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="5615e-280">これらのオブジェクトがすべてに渡される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>接続を作成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="5615e-280">These objects are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create the connection.</span></span> <span data-ttu-id="5615e-281">`Button2_Click`メソッド、コードにアクセスする、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>接続の詳細の一部がポイント プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-281">In the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property and displays some details of the connection point.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPoint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPoint/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="5615e-282">使用して、ブラウザーでページを読み込んだ後、**表示モード**ドロップダウン リスト コントロールを接続モードのページに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="5615e-282">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="5615e-283">いずれかの動詞メニュー (タイトル バーの下向きの矢印で表される) をクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-283">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="5615e-284">使用して、 **web パーツ コントロールの接続**ボタン、または指定された接続 UI を 2 つのコントロール間の接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-284">Use the **Connect WebPart Controls** button, or the provided connection UI, to create a connection between the two controls.</span></span> <span data-ttu-id="5615e-285">をクリックして、 **ConnectionPoint 詳細**を示すコードを実行するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-285">Click the **ConnectionPoint Details** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPoint%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Docs>
    </Member>
    <Member MemberName="ConsumerConnectionPointID">
      <MemberSignature Language="C#" Value="public string ConsumerConnectionPointID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerConnectionPointID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsumerConnectionPointID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConsumerConnectionPointID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerConnectionPointID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("default")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-286">接続のコンシューマー接続ポイントとしての役割を果たすオブジェクトの ID を参照する接続のプロパティ値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-286">Gets or sets the property value on a connection that references the ID of the object serving as the consumer connection point for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-287">コンシューマー接続ポイントの ID を格納する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-287">A string that contains the ID for the consumer connection point.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-288">値を割り当てることで、接続のどのコンシューマー接続ポイントが使用される Web ページのマークアップで宣言された静的な接続の開発者が指定できます、`ConsumerConnectionPointID`属性を`<asp:webpartconnection>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-288">For a static connection declared in the markup of a Web page, developers can specify which consumer connection point will be used for the connection by assigning a value to the `ConsumerConnectionPointID` attribute on the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="5615e-289">値は、属性に割り当てられていない場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>プロパティの値を使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-289">If a value is not assigned to the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
 <span data-ttu-id="5615e-290">動的 (プログラムによる) 接続を作成するときに通常必要がありますいない値を設定するの<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-290">When you create dynamic (programmatic) connections, normally you should not set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span> <span data-ttu-id="5615e-291">単に呼び出すことができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッドを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールをコンシューマーとコンシューマー接続ポイント (その他の必要なパラメーターと共に)、オブジェクトをそれに渡すと、そのメソッドは、コンシューマーの接続に使用する正しい ID を決定します。ポイント。</span><span class="sxs-lookup"><span data-stu-id="5615e-291">You can simply call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the consumer and consumer connection point objects (along with the other required parameters), and that method determines the correct ID to use for the consumer's connection point.</span></span> <span data-ttu-id="5615e-292">同様に、切断すると、呼び出すことができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>メソッドを指定せず、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="5615e-292">Similarly, when you disconnect, you can call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method without needing to specify the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5615e-293">指定するときに、コンシューマーのコネクション ポイントの ID を決定できます、<xref:System.Web.UI.WebControls.WebParts.WebPart>またはコンシューマーとしての他のサーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-293">The ID of a consumer's connection point can be determined when you designate a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control as a consumer.</span></span> <span data-ttu-id="5615e-294">プロバイダー コントロールまたはトランスフォーマーのいずれかによって提供されたインターフェイスのインスタンスを取得する、コンシューマーでメソッドを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-294">You must identify a method in the consumer that retrieves an instance of an interface furnished by either a provider control or a transformer.</span></span> <span data-ttu-id="5615e-295">メソッドを識別するためにマークして、`ConnectionConsumer`コード属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-295">To identify the method, mark it with the `ConnectionConsumer` code attribute.</span></span> <span data-ttu-id="5615e-296">この属性を追加する場合は、コンシューマーの ID として機能する省略可能な文字列値パラメーターを追加することができます<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-296">When you add this attribute, you can add an optional string value parameter that serves as an ID for the consumer's <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="5615e-297">省略可能な ID パラメーターの値を指定すると、その値がの値、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>接続のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-297">If you supply a value for the optional ID parameter, that value becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property for the connection.</span></span> <span data-ttu-id="5615e-298">ID 値を指定しない場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>プロパティの値を使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-298">If you do not supply an ID value, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-299">次のコード例の宣言とプログラムの使用を示しています、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-299">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-300">この例では、4 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-300">The example has four parts:</span></span>  
  
-   <span data-ttu-id="5615e-301">ページのモードを表示するユーザー コントロール Web パーツを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-301">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="5615e-302">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-302">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-303">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-303">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-304">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-304">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-305">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-305">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="5615e-306">割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-306">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="5615e-307">詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-307">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="5615e-308">コード例の 2 番目の部分では、インターフェイス、およびコンシューマーとプロバイダー コントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-308">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="5615e-309">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-309">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-310">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-310">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-311">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-311">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-312">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-312">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-313">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-313">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-314">コード例の 3 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-314">The third part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-315">接続が、ページのマークアップで宣言されていることに注意してください。 を使用して、`<StaticConnections>`と`<asp:WebPartsConnection>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-315">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="5615e-316">接続の宣言が含まれていますが、必要な`ConsumerConnectionPointID`属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-316">The connection declaration includes the required `ConsumerConnectionPointID` attribute.</span></span> <span data-ttu-id="5615e-317">接続を作成するための 2 番目のメソッドが表示されます、`Button1_Click`メソッド、コードが、コンシューマー コントロールで定義されている接続ポイントを使用して、新しい接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-317">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="5615e-318">次に、`Button2_Click`メソッド、コードにアクセスする、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-318">Then, in the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerConnectionPointID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerConnectionPointID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerConnectionPointID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="5615e-319">ブラウザーでページを読み込んだ後、ページで宣言された静的な接続により接続が既にが存在します。</span><span class="sxs-lookup"><span data-stu-id="5615e-319">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="5615e-320">プロバイダー コントロールにテキストを入力し、接続のためのコンシューマーに表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5615e-320">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="5615e-321">次に、コントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="5615e-321">Next, disconnect the controls.</span></span> <span data-ttu-id="5615e-322">使用して、**表示モード**ドロップダウン リスト コントロール、ページ接続モードを切り替えます。</span><span class="sxs-lookup"><span data-stu-id="5615e-322">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="5615e-323">いずれかの動詞メニュー (タイトル バーの下向きの矢印で表される) をクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-323">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="5615e-324">をクリックして、**切断**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-324">Click the **Disconnect** button.</span></span> <span data-ttu-id="5615e-325">使用して、 **web パーツ コントロールの接続**を 2 つのコントロール間の接続を再作成するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-325">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="5615e-326">をクリックして、 **ConnectionPoint 詳細**にアクセスするコードを実行するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="5615e-326">Click the **ConnectionPoint Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerConnectionPointID%2A> property value.</span></span> <span data-ttu-id="5615e-327">値は、コントロールの下のラベルでアウトを記述されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-327">The value is written out in a label below the controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      </Docs>
    </Member>
    <Member MemberName="ConsumerID">
      <MemberSignature Language="C#" Value="public string ConsumerID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumerID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" />
      <MemberSignature Language="VB.NET" Value="Public Property ConsumerID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConsumerID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConsumerID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-328">接続のコンシューマーとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの ID を参照する接続のプロパティ値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-328">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a consumer for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-329">接続のコンシューマーとして動作するコントロールの ID を格納する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-329">A string that contains the ID of the control acting as a consumer in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-330"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>間の接続を作成するときに、プロパティの値が必要な<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-330">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property value is required when you create a connection between <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="5615e-331">例外がときにスローされるプロパティに値が割り当てられていない場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、接続をアクティブ化を試みます。</span><span class="sxs-lookup"><span data-stu-id="5615e-331">If a value is not assigned to the property, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-332">次のコード例の宣言とプログラムの使用を示しています、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-332">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-333">この例では、4 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-333">The example has four parts:</span></span>  
  
-   <span data-ttu-id="5615e-334">ページのモードを表示するユーザー コントロール Web パーツを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-334">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="5615e-335">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-335">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-336">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-336">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-337">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-337">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-338">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-338">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="5615e-339">割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-339">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="5615e-340">詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-340">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="5615e-341">コード例の 2 番目の部分では、インターフェイス、およびコンシューマーとプロバイダー コントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-341">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="5615e-342">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-342">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-343">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-343">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-344">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-344">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-345">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-345">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-346">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-346">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ConsumerID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ConsumerID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-347">コード例の 3 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-347">The third part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-348">接続が、ページのマークアップで宣言されていることに注意してください。 を使用して、`<StaticConnections>`と`<asp:WebPartsConnection>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-348">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="5615e-349">接続の宣言が含まれていますが、必要な`ConsumerID`属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-349">The connection declaration includes the required `ConsumerID` attribute.</span></span> <span data-ttu-id="5615e-350">接続を作成するための 2 番目のメソッドが表示されます、`Button1_Click`メソッド、コードが、コンシューマー コントロールで定義されている接続ポイントを使用して、新しい接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-350">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="5615e-351">次に、`Button2_Click`メソッド、コードの値にアクセスする、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>プロパティし、ラベルに表示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-351">Then, in the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ConsumerID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ConsumerID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ConsumerID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="5615e-352">ブラウザーでページを読み込んだ後、ページで宣言された静的な接続により接続が既にが存在します。</span><span class="sxs-lookup"><span data-stu-id="5615e-352">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="5615e-353">プロバイダー コントロールにテキストを入力し、接続のためのコンシューマーに表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5615e-353">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="5615e-354">次に、コントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="5615e-354">Next, disconnect the controls.</span></span> <span data-ttu-id="5615e-355">使用して、**表示モード**ドロップダウン リスト コントロール、ページ接続モードを切り替えます。</span><span class="sxs-lookup"><span data-stu-id="5615e-355">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="5615e-356">いずれかの動詞メニュー (タイトル バーの下向きの矢印で表される) をクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-356">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="5615e-357">をクリックして、**切断**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-357">Click the **Disconnect** button.</span></span> <span data-ttu-id="5615e-358">使用して、 **web パーツ コントロールの接続**を 2 つのコントロール間の接続を再作成するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-358">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="5615e-359">をクリックして、**コンシューマー詳細**にアクセスするコードを実行するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="5615e-359">Click the **Consumer Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ConsumerID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ID" />
      <MemberSignature Language="VB.NET" Value="Public Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-360">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> オブジェクトの ID を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-360">Gets or sets the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-361">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> の ID を格納する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-361">A string that contains the ID of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-362">すべて<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクトに割り当てられている一意の値を持つその<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-362">Every <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object has a unique value assigned to its <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property.</span></span> <span data-ttu-id="5615e-363">これは、複数の接続を区別する方法があることを確認します。</span><span class="sxs-lookup"><span data-stu-id="5615e-363">This is to ensure that there is a way to distinguish between multiple connections.</span></span>  
  
 <span data-ttu-id="5615e-364">宣言することで静的な接続を作成する場合、 `<asp:webpartconnection>` Web ページにある要素の値を割り当てないでください、`ID`属性、接続では、例外がスローされます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、接続をアクティブ化を試みます。</span><span class="sxs-lookup"><span data-stu-id="5615e-364">If you create a static connection by declaring an `<asp:webpartconnection>` element in a Web page, and you do not assign a value to the `ID` attribute for the connection, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
 <span data-ttu-id="5615e-365">ときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、新しい動的な接続を作成、呼び出し、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A>接続の一意の ID を生成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-365">When the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control creates a new dynamic connection, it calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A> method to generate a unique ID for the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-366">次のコード例の宣言とプログラムの使用を示しています、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-366">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-367">この例では、4 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-367">The example has four parts:</span></span>  
  
-   <span data-ttu-id="5615e-368">ページのモードを表示するユーザー コントロール Web パーツを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-368">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="5615e-369">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-369">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-370">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-370">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-371">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-371">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-372">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-372">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="5615e-373">割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-373">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="5615e-374">詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-374">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="5615e-375">コード例の 2 番目の部分では、インターフェイス、およびコンシューマーとプロバイダー コントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-375">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="5615e-376">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-376">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-377">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-377">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-378">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-378">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-379">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-379">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-380">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-380">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-381">コード例の 3 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-381">The third part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-382">接続が、ページのマークアップで宣言されていることに注意してください。 を使用して、`<StaticConnections>`と`<asp:WebPartsConnection>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-382">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="5615e-383">接続の宣言が含まれていますが、必要な`ID`属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-383">The connection declaration includes the required `ID` attribute.</span></span> <span data-ttu-id="5615e-384">接続を作成するための 2 番目のメソッドが表示されます、`Button1_Click`メソッド、コードが、コンシューマー コントロールで定義されている接続ポイントを使用して、新しい接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-384">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="5615e-385">ここでは、ID プロパティは必要ありません、接続が動的であるため、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールへの接続 ID が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="5615e-385">Here, the ID property is not required, because the connection is dynamic, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control assigns an ID to the connection.</span></span> <span data-ttu-id="5615e-386">`Button2_Click`メソッドの値にアクセスするコード、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>プロパティし、ラベルに表示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-386">In the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="5615e-387">ブラウザーでページを読み込んだ後、ページで宣言された静的な接続により接続が既にが存在します。</span><span class="sxs-lookup"><span data-stu-id="5615e-387">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="5615e-388">プロバイダー コントロールにテキストを入力し、接続のためのコンシューマーに表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5615e-388">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="5615e-389">次に、コントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="5615e-389">Next, disconnect the controls.</span></span> <span data-ttu-id="5615e-390">使用して、**表示モード**ドロップダウン リスト コントロール、ページ接続モードを切り替えます。</span><span class="sxs-lookup"><span data-stu-id="5615e-390">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="5615e-391">いずれかの動詞メニュー (タイトル バーの下向きの矢印で表される) をクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-391">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="5615e-392">をクリックして、**切断**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-392">Click the **Disconnect** button.</span></span> <span data-ttu-id="5615e-393">使用して、 **web パーツ コントロールの接続**を 2 つのコントロール間の接続を再作成するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-393">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="5615e-394">をクリックして、**接続の詳細**にアクセスするコードを実行するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="5615e-394">Click the **Connection Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-395">現在 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> オブジェクトが確立されていて、そのプロバイダー コントロールとコンシューマー コントロールの間でデータを交換できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-395">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is currently established and able to exchange data between its provider and consumer controls.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-396">接続がアクティブな場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-396">
              <see langword="true" /> if the connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-397"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>プロパティの状態を示す、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-397">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property indicates a state of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span> <span data-ttu-id="5615e-398">通信を行うと、共通のインターフェイスを介してデータを交換すること、接続のプロバイダーとコンシューマーのコントロールは、接続がこの状態になった場合、または<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-398">When the connection is in this state, the provider and consumer controls in the connection are communicating and able to exchange data through a common interface or a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span>  
  
 <span data-ttu-id="5615e-399">ユーザーは、通常のブラウズ モードで確立された接続を含むレンダリングされたページを表示、(ページが読み込まれるときにいくつかの競合またはその他の問題によりアクティブ化に失敗した) 場合を除き、接続には通常アクティブ。</span><span class="sxs-lookup"><span data-stu-id="5615e-399">When a user views a rendered page that includes an established connection in normal browse mode, the connection is typically active (unless it failed to be activated due to some conflict or other issue when the page loaded).</span></span> <span data-ttu-id="5615e-400">プロパティの値には、ページおよびコントロールのライフ サイクルの初期の段階で`false`します。</span><span class="sxs-lookup"><span data-stu-id="5615e-400">In the early stages of the page and control life cycle, the property value is `false`.</span></span> <span data-ttu-id="5615e-401">直後に、接続がアクティブ化、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>上のイベント、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが発生します。</span><span class="sxs-lookup"><span data-stu-id="5615e-401">The connection is activated just after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is raised.</span></span> <span data-ttu-id="5615e-402">コンシューマーがプロバイダーから、指定したインターフェイスのインスタンスを取得した後に具体的には、接続がアクティブ化または<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-402">Specifically, the connection is activated after the consumer has retrieved an instance of the specified interface from the provider or a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span>  
  
 <span data-ttu-id="5615e-403">接続が状況でアクティブかどうかを把握するのに役立ちますが、競合やページ上の複数の接続による同期の問題がある可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-403">It is useful to know whether a connection is active in situations where there might be conflicts or synchronization issues due to multiple connections on a page.</span></span> <span data-ttu-id="5615e-404">たとえば、ある種の 2 つの接続間の競合がある場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール、競合を回避するためにアクティブにしない接続のいずれかのオプションがあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-404">For example, if there is some kind of conflict between two connections, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has the option of not activating one of the connections to avoid the conflict.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-405">次のコード例に示しますを使用、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-405">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-406">この例では、3 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-406">The example has three parts:</span></span>  
  
-   <span data-ttu-id="5615e-407">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-407">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-408">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-408">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-409">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-409">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-410">コード例の最初の部分では、インターフェイス、およびコンシューマーとプロバイダー コントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-410">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="5615e-411">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-411">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-412">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-412">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-413">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-413">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-414">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-414">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-415">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-415">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsActive#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsActive#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-416">コード例の 2 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-416">The second part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-417">上部にあるが、`Register`動的にコンパイルされた 2 つのソース コードを参照するディレクティブ<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-417">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="5615e-418">静的な接続が内で宣言された、`<StaticConnections>`ページ上の要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-418">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="5615e-419">内で、`<script>`要素は 4 つのイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5615e-419">Within the `<script>` element are four event handlers.</span></span> <span data-ttu-id="5615e-420">各イベント ハンドラーの値をチェックする、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> 、静的な接続のプロパティにメッセージが書き込まれます、<xref:System.Web.UI.WebControls.Label>ページおよびコントロールのライフ サイクルの状態では、アクティブまたは非アクティブに接続するかどうかを示すコントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-420">Each event handler checks the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsActive%2A> property on the static connection, and writes a message to the <xref:System.Web.UI.WebControls.Label> control indicating whether the connection is active or inactive at that state of the page and control life cycle.</span></span> <span data-ttu-id="5615e-421">レンダリングされますが残っているアクティブなページの後およびこれは、どの時点で、接続がアクティブになりを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-421">This demonstrates at what point the connection becomes active, and that it remains active after the page is rendered.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsActive#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/CS/wpConnectIsActiveCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsActive#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsActive/VB/wpConnectIsActiveVB.aspx#1)]  
  
 <span data-ttu-id="5615e-422">ブラウザーでページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="5615e-422">Load the page in a browser.</span></span> <span data-ttu-id="5615e-423">静的な接続が既に作成されて、およびメッセージが、接続がページとコントロールのライフ サイクルのさまざまな時点でアクティブだったかどうかを示すラベルに既に書き込まれています。</span><span class="sxs-lookup"><span data-stu-id="5615e-423">The static connection is already created, and messages have already been written to the labels showing whether the connection was active at various points in the page and control life cycle.</span></span> <span data-ttu-id="5615e-424">をクリックして、**接続の詳細**ボタンをクリックし、接続がないアクティブである時点で、接続が後に毎回の再アクティブ化したことに注意してください、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>イベント、および、アクティブなままです (およびされ続ける) した後、<xref:System.Web.UI.Control.PreRender>ページのイベント。</span><span class="sxs-lookup"><span data-stu-id="5615e-424">Click the **Connection Details** button, and note that the connection is not active at that point, but that the connection is reactivated each time after the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> event, and that it is still active (and will remain so) after the <xref:System.Web.UI.Control.PreRender> event of the page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShared As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShared { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsShared : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-425">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> オブジェクトをすべてのユーザーに表示するかまたは現在のユーザーのみに表示するかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-425">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is visible to all users or only to the current user.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-426">接続が共有される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-426">
              <see langword="true" /> if the connection is shared; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-427">個人と同様<xref:System.Web.UI.WebControls.WebParts.WebPart>、コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクトは、共有、またはユーザーごとのインスタンスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-427">As with individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object can be a shared or a per-user instance.</span></span> <span data-ttu-id="5615e-428">共有インスタンスは、接続が Web ページのすべてのユーザーに表示され、ユーザーごとのインスタンスでは、接続が特定のユーザーにのみ表示されることを意味ことを意味します。</span><span class="sxs-lookup"><span data-stu-id="5615e-428">A shared instance means that the connection is visible to all users of a Web page, and a per-user instance means the connection is visible only to a specific user.</span></span>  
  
 <span data-ttu-id="5615e-429">一般に、接続は、ページに追加する方法は、接続を共有するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="5615e-429">In general, the way a connection is added to a page determines whether the connection is shared.</span></span> <span data-ttu-id="5615e-430">接続が Web ページのマークアップで宣言されているかどうかは、接続の共有と<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>プロパティの値が`true`します。</span><span class="sxs-lookup"><span data-stu-id="5615e-430">If the connection is declared in the markup of a Web page, then the connection is shared and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value is `true`.</span></span> <span data-ttu-id="5615e-431">さらに、Web ページが共有パーソナル化スコープの場合、接続が追加されたときに、接続も共有されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-431">In addition, if the Web page is in shared personalization scope when a connection is added, the connection is also shared.</span></span> <span data-ttu-id="5615e-432">ユーザーが使用する場合、通常、`<asp:connectionszone>`接続が共有されていないため、ページの接続を追加するユーザー インターフェイス (UI) がユーザーのパーソナル化スコープでは、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>プロパティの値が`false`します。</span><span class="sxs-lookup"><span data-stu-id="5615e-432">Typically, when a user uses the `<asp:connectionszone>` user interface (UI) to add a connection, the page is in user personalization scope, so the connection is not shared and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-433">次のコード例に示しますをプログラムで使用、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-433">The following code example demonstrates programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-434">コード例では、5 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-434">The code example has five parts:</span></span>  
  
-   <span data-ttu-id="5615e-435">ページのモードを表示するユーザー コントロール Web パーツを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-435">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="5615e-436">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-436">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-437">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-437">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-438">例を実行するために必要な Web.config ファイル内のエントリ。</span><span class="sxs-lookup"><span data-stu-id="5615e-438">An entry in the Web.config file that is required to run the example.</span></span>  
  
-   <span data-ttu-id="5615e-439">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-439">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-440">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-440">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="5615e-441">割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-441">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="5615e-442">詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-442">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsShared#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsShared#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="5615e-443">コード例の 2 番目の部分では、インターフェイス、およびコンシューマーとプロバイダー コントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-443">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="5615e-444">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-444">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-445">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-445">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-446">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-446">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-447">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-447">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-448">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-448">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsShared#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsShared#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-449">コード例の 3 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-449">The third part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-450">`Button2_Click`チェック、メソッド、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>既存の接続のプロパティ ページで結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-450">In the `Button2_Click` method, it checks the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property of the existing connection and displays the result on the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsShared#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsShared#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsShared/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="5615e-451">4 番目の部分のコード例では、共有パーソナル化スコープでページを編集できる例を実行するユーザー アカウントに必要な Web.config ファイル内のエントリです。</span><span class="sxs-lookup"><span data-stu-id="5615e-451">The fourth part of the code example is an entry in the Web.config file that is required for the user account that will be running the example to be able to edit the page in shared personalization scope.</span></span> <span data-ttu-id="5615e-452">これを有効にするのには、内の Web.config ファイルにエントリをいる必要があります、`<system.web>`セクションを次の例のようになります。</span><span class="sxs-lookup"><span data-stu-id="5615e-452">To enable this, you must have an entry in the Web.config file within the `<system.web>` section that looks like the following example.</span></span>  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow users="UserAccount"  
             roles="admin"  
             verbs="enterSharedScope"/>  
    </authorization>            
  </personalization>  
</webParts>  
```  
  
 <span data-ttu-id="5615e-453">使用して、ブラウザーでページを読み込んだ後、**表示モード**ドロップダウン リスト コントロールの表示モードを接続するページに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="5615e-453">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect display mode.</span></span> <span data-ttu-id="5615e-454">をクリックして、 **web パーツ コントロールの接続**接続ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-454">Click the **Connect WebPart Controls** button to form a connection.</span></span> <span data-ttu-id="5615e-455">次に、クリックして、**接続の詳細**接続を共有するかどうかを表示するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-455">Next, click the **Connection Details** button to display whether the connection is shared.</span></span> <span data-ttu-id="5615e-456">既定のユーザーのパーソナル化スコープ内のページで、接続を作成した場合、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>プロパティ値を指定する必要があります`false`接続します。</span><span class="sxs-lookup"><span data-stu-id="5615e-456">If you created the connection with the page in the default user personalization scope, the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property value should be `false` for the connection.</span></span>  
  
 <span data-ttu-id="5615e-457">いずれかの動詞メニューで、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (タイトル バーの下向きの矢印で示されます)、接続の動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-457">On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (indicated by the downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="5615e-458">接続 UI が表示されたら、クリックして、**切断**ボタン接続を終了します。</span><span class="sxs-lookup"><span data-stu-id="5615e-458">When the connection UI appears, click the **Disconnect** button to end the connection.</span></span> <span data-ttu-id="5615e-459">使用して、**表示モード**コントロールをページをブラウズ モードを返します。</span><span class="sxs-lookup"><span data-stu-id="5615e-459">Use the **Display Mode** control to return the page to browse mode.</span></span>  
  
 <span data-ttu-id="5615e-460">**表示モード**コントロールの選択、 **Shared**にページを切り替えることは、パーソナル化スコープを共有します。</span><span class="sxs-lookup"><span data-stu-id="5615e-460">In the **Display Mode** control, select the **Shared** option to switch the page into shared personalization scope.</span></span> <span data-ttu-id="5615e-461">接続を作成し、もう一度クリックして、上記と同じ手順に従って、**接続の詳細**接続を共有するかどうかを表示するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-461">Follow the same steps as those above to create a connection, and again click the **Connection Details** button to display whether the connection is shared.</span></span> <span data-ttu-id="5615e-462">この例では、値で、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A>プロパティは、指定`true`します。</span><span class="sxs-lookup"><span data-stu-id="5615e-462">In this case, the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsShared%2A> property should be `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStatic : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-463">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> オブジェクトが Web ページのマークアップに宣言されているか、またはプログラムで作成されるかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-463">Gets a value that indicates whether a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> object is declared in the markup of a Web page, or created programmatically.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-464">接続が静的な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-464">
              <see langword="true" /> if the connection is static; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-465">Web パーツ コントロール間の接続には、静的または動的のいずれかを指定します。</span><span class="sxs-lookup"><span data-stu-id="5615e-465">Connections between Web Parts controls can be either static or dynamic.</span></span> <span data-ttu-id="5615e-466">静的な接続が Web ページのマークアップで宣言されているを使用して、`<asp:WebPartConnection>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-466">A static connection is declared in the markup of a Web page, using an `<asp:WebPartConnection>` element.</span></span> <span data-ttu-id="5615e-467">動的な接続がプログラムで作成またはユーザーがによって定義されたユーザー インターフェイス (UI) からの接続を作成するときに、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-467">Dynamic connections are created programmatically or when a user creates a connection through the user interface (UI) defined by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span>  
  
 <span data-ttu-id="5615e-468">静的な接続は、共有オブジェクトであるため、Web ページのすべてのユーザーに利用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-468">Static connections are shared objects, meaning they are available to all users of the Web page.</span></span> <span data-ttu-id="5615e-469">また、これらは基本的に永続的なのでなどの静的な<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、完全に削除することはできません。</span><span class="sxs-lookup"><span data-stu-id="5615e-469">Also, they are essentially permanent because, like a static <xref:System.Web.UI.WebControls.WebParts.WebPart> control, they cannot be permanently deleted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5615e-470">静的な接続オブジェクトは完全に削除中に、完全に切断できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-470">While a static connection object cannot be permanently deleted, it can be permanently disconnected.</span></span> <span data-ttu-id="5615e-471">この場合、サーバーで、切断されたオブジェクトが存在も、エンドユーザーはことはありませんのページで、オブジェクトの存在に注意してくださかった。</span><span class="sxs-lookup"><span data-stu-id="5615e-471">In this case, the disconnected object would exist on the server, but an end user would never be aware of the object's existence in a page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-472">次のコード例は、のプログラムによる使用を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-472">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-473">コード例では、3 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-473">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="5615e-474">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-474">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-475">コントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-475">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-476">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-476">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-477">コード例の最初の部分では、インターフェイス、およびコンシューマーとプロバイダー コントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-477">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="5615e-478">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-478">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-479">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-479">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-480">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-480">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-481">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-481">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-482">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-482">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_IsStatic#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_IsStatic#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-483">コード例の 2 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-483">The second part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-484">上部にあるが、`Register`動的にコンパイルされた 2 つのソース コードを参照するディレクティブ<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-484">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="5615e-485">静的な接続が内で宣言された、`<StaticConnections>`ページ上の要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-485">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="5615e-486">`Button1_Click`メソッドへのアクセス、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>接続が静的かどうかを確認するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-486">The `Button1_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property to check whether the connection is static.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_IsStatic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/CS/wpConnectIsStaticCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_IsStatic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_IsStatic/VB/wpConnectIsStaticVB.aspx#1)]  
  
 <span data-ttu-id="5615e-487">ブラウザーでページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="5615e-487">Load the page in a browser.</span></span> <span data-ttu-id="5615e-488">静的な接続が既に作成されています。</span><span class="sxs-lookup"><span data-stu-id="5615e-488">The static connection is already created.</span></span> <span data-ttu-id="5615e-489">プロバイダー コントロールにテキストを入力して、コンシューマー コントロールのテキストが表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5615e-489">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="5615e-490">をクリックして、**接続の詳細**の値を表示するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-490">Click the **Connection Details** button to display the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.IsStatic%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ Provider { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-491">Web パーツ接続でプロバイダーとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-491">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control that acts as the provider in a Web Parts connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-492">データのプロバイダーとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-492">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> that acts as the provider of data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-493">2 つのすべての Web パーツ接続で構成されます<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール - コンシューマーおよびプロバイダー--と<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>プロパティは、接続でプロバイダー コントロールへの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="5615e-493">Every Web Parts connection consists of two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls--a consumer and a provider--and the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property returns a reference to the provider control in a connection.</span></span>  
  
 <span data-ttu-id="5615e-494">接続 (コンシューマー コントロール) での対応するように、プロバイダー コントロールが接続を確立するために必要です。</span><span class="sxs-lookup"><span data-stu-id="5615e-494">Like its counterpart in a connection (the consumer control), the provider control is required to establish a connection.</span></span> <span data-ttu-id="5615e-495">プログラム、またはページの永続形式で宣言することによって、接続を作成するかどうかは、接続のプロバイダーとして機能するコントロールを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-495">Whether you create the connection programmatically, or by declaring it in page persistence format, you must specify a control to act as the provider for a connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-496">次のコード例に示しますを使用、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-496">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-497">コード例では、3 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-497">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="5615e-498">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-498">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-499">コントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-499">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-500">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-500">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-501">コード例の最初の部分では、インターフェイス、およびコンシューマーとプロバイダー コントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-501">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="5615e-502">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-502">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-503">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-503">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-504">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-504">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-505">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-505">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-506">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-506">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_Provider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_Provider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-507">コード例の 2 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-507">The second part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-508">上部にあるが、`Register`動的にコンパイルされた 2 つのソース コードを参照するディレクティブ<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-508">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="5615e-509">静的な接続が内で宣言された、`<StaticConnections>`ページ上の要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-509">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="5615e-510">インシデントを`<asp:webpartconnection>`要素、`ProviderID`属性が割り当てられて、プロバイダー コントロールの ID。</span><span class="sxs-lookup"><span data-stu-id="5615e-510">Notice that in the `<asp:webpartconnection>` element, the `ProviderID` attribute has the ID of the provider control assigned to it.</span></span> <span data-ttu-id="5615e-511">これは、静的な接続のプロバイダーを識別するために必要です。</span><span class="sxs-lookup"><span data-stu-id="5615e-511">This is required to identify the provider for the static connection.</span></span> <span data-ttu-id="5615e-512">`Button1_Click`メソッドへのアクセス、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>プロパティとその詳細の一部にラベルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5615e-512">The `Button1_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property and writes some of its details to a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_Provider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/CS/wpConnectProviderCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_Provider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_Provider/VB/wpConnectProviderVB.aspx#1)]  
  
 <span data-ttu-id="5615e-513">ブラウザーでページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="5615e-513">Load the page in a browser.</span></span> <span data-ttu-id="5615e-514">静的な接続が既に作成されています。</span><span class="sxs-lookup"><span data-stu-id="5615e-514">The static connection is already created.</span></span> <span data-ttu-id="5615e-515">プロバイダー コントロールにテキストを入力して、コンシューマー コントロールのテキストが表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5615e-515">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="5615e-516">をクリックして、 **Provider Details**経由でアクセスするプロパティ値の一部を表示するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-516">Click the **Provider Details** button to display some of the property values accessed through the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5615e-517">
            <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> プロパティ値の長さが 0 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-517">The length of the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" /> property value is zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Consumer" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionPoint">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint ProviderConnectionPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderConnectionPoint As ProviderConnectionPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ ProviderConnectionPoint { System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionPoint : System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-518">接続でプロバイダーとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールに対するコネクション ポイントとしての役割を果たすオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-518">Gets the object that serves as a connection point for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for a connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-519">接続のプロバイダー コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-519">A <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> associated with the provider control in a connection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-520">2 つの間の接続を作成するための必要な手順のいずれかの<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは、各コントロールの接続ポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-520">One of the required steps for creating a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls is to create connection points for each control.</span></span> <span data-ttu-id="5615e-521">プロバイダー コネクション ポイントは、プロバイダーとして機能するコントロールに接続する方法に関する情報を含むオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="5615e-521">The provider connection point is an object that contains the information about how to connect to the control acting as a provider.</span></span> <span data-ttu-id="5615e-522">いずれかのプロバイダーのソース コード内で識別する必要があります、`ConnectionProvider`属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-522">In the provider's source code, one of the methods must be identified with the `ConnectionProvider` attribute.</span></span> <span data-ttu-id="5615e-523"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>が関連付けられているコントロールにはプロバイダーにはメソッドとユーザー インターフェイス (UI) で使用する表示名、メソッドの ID を含む、属性の詳細が含まれています、コンシューマーを戻すことができるメソッド、インターフェイス インスタンスの種類コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-523">The <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> that is associated with a provider control contains details about the method and the attribute, including an ID for the method, a display name for use in the user interface (UI), and what type of interface instance the method can return to a consumer control.</span></span> <span data-ttu-id="5615e-524">このプロバイダーについては、接続、およびが提供するインターフェイスの型を形成するためのメソッドのセットは、まとめてプロバイダー コネクション ポイントを形成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-524">This set of information about the provider, its method for forming connections, and the type of interface it provides, collectively forms a provider connection point.</span></span>  
  
 <span data-ttu-id="5615e-525">既定で、 <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> 1 つだけに接続できる<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>一度にオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-525">By default, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> can connect to only one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object at a time.</span></span> <span data-ttu-id="5615e-526">コンシューマーは、使用可能なコンシューマー接続ポイントとして識別される複数のメソッドがある可能性がありますが、(そのため、そのコンシューマー接続ポイントの 1 つは、アクティブにすることができます) のみ、コンシューマーはコンシューマーとしての 1 つの接続に関与のみできる、時にします。</span><span class="sxs-lookup"><span data-stu-id="5615e-526">A consumer could have multiple methods identified as possible consumer connection points, but a consumer can only participate in one connection as a consumer (hence, only one of its consumer connection points can be active) at a time.</span></span> <span data-ttu-id="5615e-527">これに対し、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>の任意の数に接続できる<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>既定のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-527">In contrast, a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> can connect to any number of <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects by default.</span></span> <span data-ttu-id="5615e-528">たとえば、郵便番号コードを提供するプロバイダー コントロールの場合は、郵便番号コードを使用して、気象データ、ニュースなどの郵便番号コードに基づいてデータのさまざまな種類を作成する複数のコンシューマー コントロールに接続されている。</span><span class="sxs-lookup"><span data-stu-id="5615e-528">For example, a provider control that provides a postal code could be connected to multiple consumer controls that use a postal code to create various kinds of data based on a postal code, such as weather data, news, and so on.</span></span> <span data-ttu-id="5615e-529">この既定の動作をオーバーライドすることで変更することができます、<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-529">This default behavior can be changed by overriding the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A> property on the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-530">次のコード例は、のプログラムによる使用を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-530">The following code example demonstrates the programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-531">この例では、4 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-531">The example has four parts:</span></span>  
  
-   <span data-ttu-id="5615e-532">ページのモードを表示するユーザー コントロール Web パーツを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-532">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="5615e-533">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-533">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-534">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-534">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-535">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-535">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-536">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-536">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="5615e-537">割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-537">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="5615e-538">詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-538">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPoint#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="5615e-539">コード例の 2 番目の部分は、2 つのソース コード<xref:System.Web.UI.WebControls.WebParts.WebPart>との接続、および接続ポイントを使用するインターフェイスのプロバイダーのコンシューマーとして機能するコントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-539">The second part of the code example is the source code for the two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that serve as the consumer and the provider for the connection, and an interface used for the connection points.</span></span> <span data-ttu-id="5615e-540">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-540">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-541">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-541">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-542">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-542">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-543">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-543">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-544">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-544">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderConnectionPoint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-545">コード例の 3 番目の部分は、の使用方法、コントロールをホストする Web ページのコード、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-545">The third part of the code example is the code for the Web page that hosts the controls and demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span> <span data-ttu-id="5615e-546">`Button1_Click`接続の形成に必要なすべてのオブジェクトで作成されますメソッドなどを<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-546">In the `Button1_Click` method, all the objects required to form a connection are created, including a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="5615e-547">呼び出しに注意してください、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>メソッドを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-547">Note the call to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="5615e-548">さまざまな作成されたオブジェクトがすべてに渡される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>接続を作成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="5615e-548">The various created objects are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create the connection.</span></span> <span data-ttu-id="5615e-549">`Button2_Click`メソッド、コードにアクセスする、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>接続の詳細の一部がポイント プロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-549">In the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property and displays some details of the connection point.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPoint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPoint/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="5615e-550">使用して、ブラウザーでページを読み込んだ後、**表示モード**ドロップダウン リスト コントロールを接続モードのページに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="5615e-550">After you load the page in a browser, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="5615e-551">いずれかの動詞メニュー (タイトル バーの下向きの矢印で表される) をクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-551">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="5615e-552">使用して、 **web パーツ コントロールの接続**ボタン、または指定された接続 UI を 2 つのコントロール間の接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-552">Use the **Connect WebPart Controls** button, or the provided connection UI, to create a connection between the two controls.</span></span> <span data-ttu-id="5615e-553">をクリックして、 **ConnectionPoint 詳細**を示すコードを実行するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-553">Click the **ConnectionPoint Details** button to run the code that demonstrates the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPoint%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionPointID">
      <MemberSignature Language="C#" Value="public string ProviderConnectionPointID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderConnectionPointID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderConnectionPointID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderConnectionPointID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionPointID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("default")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-554">接続のプロバイダー コネクション ポイントとしての役割を果たすオブジェクトの ID を参照する接続のプロパティ値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-554">Gets or sets the property value on a connection that references the ID of the object serving as the provider connection point for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-555">プロバイダー コネクション ポイント オブジェクトの ID が含まれている文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-555">A string that contains the ID for a provider connection point object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-556">値を割り当てることで、接続のどのプロバイダー コネクション ポイントが使用される Web ページのマークアップで宣言された静的な接続の開発者が指定できます、`ProviderConnectionPointID`属性を`<asp:webpartconnection>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-556">For a static connection declared in the markup of a Web page, developers can specify which provider connection point will be used for the connection by assigning a value to the `ProviderConnectionPointID` attribute on the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="5615e-557">値は、属性に割り当てられていない場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>プロパティの値を使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-557">If a value is not assigned to the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> property value is used.</span></span>  
  
 <span data-ttu-id="5615e-558">動的 (プログラムによる) 接続を作成するときに通常必要がありますいない値を設定するの<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-558">When you create dynamic (programmatic) connections, normally you should not set the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span> <span data-ttu-id="5615e-559">単に呼び出すことができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッドを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>、制御をそれに渡す、プロバイダーとプロバイダー接続ポイント (その他の必要なパラメーターと共に)、オブジェクトとそのメソッドでは、プロバイダーの接続に使用する正しい ID を決定します。ポイント。</span><span class="sxs-lookup"><span data-stu-id="5615e-559">You can simply call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, passing to it the provider and provider connection point objects (along with the other required parameters), and that method determines the correct ID to use for the provider's connection point.</span></span> <span data-ttu-id="5615e-560">同様に、切断すると、呼び出すことができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>メソッドを指定せず、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="5615e-560">Similarly, when you disconnect, you can call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method without needing to specify the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5615e-561">指定するときに、プロバイダーのコネクション ポイントの ID を決定できます、<xref:System.Web.UI.WebControls.WebParts.WebPart>またはプロバイダーとしての他のサーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-561">The ID of a provider's connection point can be determined when you designate a <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control as a provider.</span></span> <span data-ttu-id="5615e-562">コンシューマーにデータを格納しているインターフェイスのインスタンスを提供するプロバイダーのコールバック メソッドを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-562">You must identify a callback method in the provider that serves an instance of an interface containing data to a consumer.</span></span> <span data-ttu-id="5615e-563">メソッドを識別するためにマークして、`ConnectionProvider`コード属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-563">To identify the method, mark it with the `ConnectionProvider` code attribute.</span></span> <span data-ttu-id="5615e-564">この属性を追加する場合は、プロバイダーの ID として機能する省略可能な文字列値パラメーターを追加することができます<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-564">When you add this attribute, you can add an optional string value parameter that serves as an ID for the provider's <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object.</span></span> <span data-ttu-id="5615e-565">省略可能な ID パラメーターの値を指定すると、その値がの値、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>接続のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-565">If you supply a value for the optional ID parameter, that value becomes the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property for the connection.</span></span> <span data-ttu-id="5615e-566">ID 値を指定しない場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>オブジェクトが作成されたときに、コントロールが既定の ID を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="5615e-566">If you do not supply an ID value, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control assigns a default ID when the object is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-567">次のコード例の宣言とプログラムの使用を示しています、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-567">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-568">この例では、4 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-568">The example has four parts:</span></span>  
  
-   <span data-ttu-id="5615e-569">ページのモードを表示するユーザー コントロール Web パーツを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-569">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="5615e-570">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-570">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-571">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-571">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-572">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-572">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-573">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-573">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="5615e-574">割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-574">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="5615e-575">詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-575">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPointID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="5615e-576">コード例の 2 番目の部分では、インターフェイス、およびコンシューマーとプロバイダー コントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-576">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="5615e-577">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-577">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-578">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-578">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-579">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-579">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-580">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-580">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-581">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-581">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderConnectionPointID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-582">コード例の 3 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-582">The third part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-583">接続が、ページのマークアップで宣言されていることに注意してください。 を使用して、`<StaticConnections>`と`<asp:WebPartsConnection>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-583">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="5615e-584">接続の宣言が含まれていますが、必要な`ProviderConnectionPointID`属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-584">The connection declaration includes the required `ProviderConnectionPointID` attribute.</span></span> <span data-ttu-id="5615e-585">接続を作成するための 2 番目のメソッドが表示されます、`Button1_Click`メソッド、コードは、新しい接続を作成しますが、接続ポイント (と ID) を使用してで定義されている、プロバイダー コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-585">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point (and the ID) defined in the provider control.</span></span> <span data-ttu-id="5615e-586">次に、`Button2_Click`メソッド、コードにアクセスする、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-586">Then, in the `Button2_Click` method, the code accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderConnectionPointID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderConnectionPointID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderConnectionPointID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="5615e-587">ブラウザーでページを読み込んだ後、ページで宣言された静的な接続により接続が既にが存在します。</span><span class="sxs-lookup"><span data-stu-id="5615e-587">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="5615e-588">プロバイダー コントロールにテキストを入力し、接続のためのコンシューマーに表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5615e-588">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="5615e-589">次に、コントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="5615e-589">Next, disconnect the controls.</span></span> <span data-ttu-id="5615e-590">使用して、**表示モード**ドロップダウン リスト コントロール、ページ接続モードを切り替えます。</span><span class="sxs-lookup"><span data-stu-id="5615e-590">Using the **Display Mode** drop-down list control, switch the page to connect mode.</span></span> <span data-ttu-id="5615e-591">いずれかの動詞メニュー (タイトル バーの下向きの矢印で表される) をクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-591">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="5615e-592">をクリックして、**切断**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-592">Click the **Disconnect** button.</span></span> <span data-ttu-id="5615e-593">使用して、 **web パーツ コントロールの接続**を 2 つのコントロール間の接続を再作成するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-593">Use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="5615e-594">をクリックして、 **ConnectionPoint 詳細**にアクセスするコードを実行するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="5615e-594">Click the **ConnectionPoint Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderConnectionPointID%2A> property value.</span></span> <span data-ttu-id="5615e-595">値は、コントロールの下のラベルでアウトを記述されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-595">The value is written out in a label below the controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      </Docs>
    </Member>
    <Member MemberName="ProviderID">
      <MemberSignature Language="C#" Value="public string ProviderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-596">接続のプロバイダーとして動作する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの ID を参照する接続のプロパティ値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-596">Gets or sets the property value on a connection that references the ID of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control acting as a provider for that connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-597">プロバイダー コントロールの ID を格納する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-597">A string that contains the ID of the provider control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-598"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>プロパティの値は、2 つの間の接続を作成するときに必要な<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-598">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property value is required when you create a connection between two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="5615e-599">例外がときにスローされるプロパティに値が割り当てられていない場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、接続をアクティブ化を試みます。</span><span class="sxs-lookup"><span data-stu-id="5615e-599">If a value is not assigned to the property, an exception is thrown when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control attempts to activate the connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-600">次のコード例の宣言とプログラムの使用を示しています、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-600">The following code example shows the declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-601">この例では、4 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-601">The example has four parts:</span></span>  
  
-   <span data-ttu-id="5615e-602">ページのモードを表示するユーザー コントロール Web パーツを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-602">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="5615e-603">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-603">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-604">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-604">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-605">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-605">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-606">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="5615e-606">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="5615e-607">割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。</span><span class="sxs-lookup"><span data-stu-id="5615e-607">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="5615e-608">詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル: Web パーツ ページ上の表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-608">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderID#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderID#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="5615e-609">コード例の 2 番目の部分では、インターフェイス、およびコンシューマーとプロバイダー コントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-609">The second part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="5615e-610">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-610">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-611">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-611">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-612">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-612">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-613">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-613">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-614">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-614">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ProviderID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ProviderID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-615">コード例の 3 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-615">The third part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-616">接続が、ページのマークアップで宣言されていることに注意してください。 を使用して、`<StaticConnections>`と`<asp:WebPartsConnection>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-616">Note that a connection is declared in the page markup, using the `<StaticConnections>` and `<asp:WebPartsConnection>` elements.</span></span> <span data-ttu-id="5615e-617">接続の宣言が含まれていますが、必要な`ProviderID`属性。</span><span class="sxs-lookup"><span data-stu-id="5615e-617">The connection declaration includes the required `ProviderID` attribute.</span></span> <span data-ttu-id="5615e-618">接続を作成するための 2 番目のメソッドが表示されます、`Button1_Click`メソッド、コードが、コンシューマー コントロールで定義されている接続ポイントを使用して、新しい接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="5615e-618">A second method for creating the connection appears in the `Button1_Click` method, where the code creates a new connection, using the connection point defined in the consumer control.</span></span> <span data-ttu-id="5615e-619">次に、`Button2_Click`メソッド、コードの値にアクセスする、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>プロパティし、ラベルに表示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-619">Then, in the `Button2_Click` method, the code accesses the value of the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property and displays it in a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ProviderID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ProviderID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ProviderID/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 <span data-ttu-id="5615e-620">ブラウザーでページを読み込んだ後、ページで宣言された静的な接続により接続が既にが存在します。</span><span class="sxs-lookup"><span data-stu-id="5615e-620">After you load the page in a browser, a connection already exists because of the static connection declared in the page.</span></span> <span data-ttu-id="5615e-621">プロバイダー コントロールにテキストを入力し、接続のためのコンシューマーに表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5615e-621">Enter some text in the provider control, and note that it is displayed in the consumer due to the connection.</span></span> <span data-ttu-id="5615e-622">次に、コントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="5615e-622">Next, disconnect the controls.</span></span> <span data-ttu-id="5615e-623">そのために使用して、**表示モード**ドロップダウン リスト コントロールを接続モードのページに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="5615e-623">To do that, use the **Display Mode** drop-down list control to switch the page to connect mode.</span></span> <span data-ttu-id="5615e-624">いずれかの動詞メニュー (タイトル バーの下向きの矢印で表される) をクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-624">Click the verbs menu (represented by the downward arrow in the title bar) on one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and click the connect verb.</span></span> <span data-ttu-id="5615e-625">をクリックして、**切断**ボタン、およびコントロールを切断します。</span><span class="sxs-lookup"><span data-stu-id="5615e-625">Click the **Disconnect** button, and the controls are disconnected.</span></span> <span data-ttu-id="5615e-626">次に、使用、 **web パーツ コントロールの接続**を 2 つのコントロール間の接続を再作成するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="5615e-626">Next, use the **Connect WebPart Controls** button to recreate a connection between the two controls.</span></span> <span data-ttu-id="5615e-627">をクリックして、**コンシューマー詳細**にアクセスするコードを実行するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A>プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="5615e-627">Click the **Consumer Details** button to run the code that accesses the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ProviderID%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Provider" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="webPartConnection.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5615e-628">継承した <see cref="M:System.Object.ToString" /> メソッドをオーバーライドし、接続オブジェクトの short 型の名前を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-628">Overrides the inherited <see cref="M:System.Object.ToString" /> method and returns a short type name for the connection object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5615e-629">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> の short (非修飾) 型の名前を格納する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-629">A string that contains the short (unqualified) type name of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-630">このメソッドは、ほとんどの場合、便宜上コントロール デザイナーによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="5615e-630">This method is used mostly for convenience by control designers.</span></span> <span data-ttu-id="5615e-631">完全修飾型名ではなく、短い型名を使用して接続オブジェクトをデザイン ビューに表示する方法が向上します。</span><span class="sxs-lookup"><span data-stu-id="5615e-631">It improves how connection objects appear in Design view by using the shorter type name, as opposed to a fully qualified type name.</span></span> <span data-ttu-id="5615e-632">ただし、メソッド呼び出すことができます、コード内の任意のポイントを接続オブジェクトの型名を知りたいです。</span><span class="sxs-lookup"><span data-stu-id="5615e-632">However, the method can be called at any point in your code where you want to know the type name of a connection object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5615e-633">次のコード例を呼び出す方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A>の短い型名を返すメソッドを<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-633">The following code example demonstrates how to call the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method to return the short type name of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="5615e-634">コード例では、3 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-634">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="5615e-635">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="5615e-635">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="5615e-636">コントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="5615e-636">A Web page to host the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="5615e-637">ページの例を実行する方法の説明です。</span><span class="sxs-lookup"><span data-stu-id="5615e-637">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="5615e-638">コード例の最初の部分では、インターフェイス、およびコンシューマーとプロバイダー コントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="5615e-638">The first part of the code example is the source code for the interface, and the consumer and provider controls.</span></span> <span data-ttu-id="5615e-639">実行するコード例は、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-639">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="5615e-640">明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。</span><span class="sxs-lookup"><span data-stu-id="5615e-640">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="5615e-641">または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="5615e-641">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="5615e-642">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="5615e-642">This code example uses dynamic compilation.</span></span> <span data-ttu-id="5615e-643">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。</span><span class="sxs-lookup"><span data-stu-id="5615e-643">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_WebPartConnection_ToString#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartConnection_ToString#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="5615e-644">コード例の 2 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="5615e-644">The second part of the code example is the Web page.</span></span> <span data-ttu-id="5615e-645">上部にあるが、`Register`動的にコンパイルされた 2 つのソース コードを参照するディレクティブ<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-645">Near the top is a `Register` directive that refers to the source code for the two dynamically compiled <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.</span></span> <span data-ttu-id="5615e-646">静的な接続が内で宣言された、`<StaticConnections>`ページ上の要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-646">The static connection is declared within the `<StaticConnections>` element on the page.</span></span> <span data-ttu-id="5615e-647">`Button1_Click`メソッドの呼び出し、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A>ラベルに、接続の種類名を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="5615e-647">The `Button1_Click` method calls the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method to write the type name of the connection to a label.</span></span>  
  
 [!code-aspx-csharp[WebParts_WebPartConnection_ToString#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/CS/wpConnectToStringCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartConnection_ToString#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartConnection_ToString/VB/wpConnectToStringVB.aspx#1)]  
  
 <span data-ttu-id="5615e-648">ブラウザーでページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="5615e-648">Load the page in a browser.</span></span> <span data-ttu-id="5615e-649">静的な接続が既に作成されています。</span><span class="sxs-lookup"><span data-stu-id="5615e-649">The static connection is already created.</span></span> <span data-ttu-id="5615e-650">プロバイダー コントロールにテキストを入力して、コンシューマー コントロールのテキストが表示されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="5615e-650">Enter some text in the provider control, and note that the text is displayed in the consumer control.</span></span> <span data-ttu-id="5615e-651">をクリックして、**接続の詳細**を実行するボタン、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5615e-651">Click the **Connection Details** button to execute the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.ToString%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Transformer">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartTransformer Transformer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transformer As WebPartTransformer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartTransformer ^ Transformer { System::Web::UI::WebControls::WebParts::WebPartTransformer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transformer : System.Web.UI.WebControls.WebParts.WebPartTransformer" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartTransformer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-652">Web パーツ接続の 2 つの異なった互換性のないコネクション ポイントの間でデータを変換するために使用する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-652">Gets a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> object that is used to transform data between two otherwise incompatible connection points in a Web Parts connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-653">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-653">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />.</span>
          </span>
          <span data-ttu-id="5615e-654">既定値は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-654">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-655">Web パーツの接続は、接続のプロバイダーとコンシューマーのコントロールの接続に使用できる 2 つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="5615e-655">In a Web Parts connection, there are two ways in which the provider and consumer controls in the connection can connect.</span></span> <span data-ttu-id="5615e-656">を通じて、それぞれを直接接続できる<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>オブジェクトとが両方のコントロールによって認識されるインターフェイス型。</span><span class="sxs-lookup"><span data-stu-id="5615e-656">They can connect directly, through their respective <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects and an interface type that is understood by both controls.</span></span> <span data-ttu-id="5615e-657">または、互換性がない場合、直接接続できるされませんを使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>プロバイダーからインターフェイス インスタンスをコンシューマーによって認識される型に変換するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-657">Or, if they are incompatible, they can connect indirectly, using a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object that transforms an interface instance from a provider into a type understood by a consumer.</span></span>  
  
 <span data-ttu-id="5615e-658">トランスフォーマーが、接続の一部として必要な場合、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A>プロパティへの参照を提供する、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5615e-658">When a transformer is needed as part of a connection, the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> property provides a reference to the <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object.</span></span> <span data-ttu-id="5615e-659">カスタムのトランスフォーマー (または、Web パーツ コントロール セットで提供されるトランスフォーマーのいずれか) のタグを追加することで、Web ページのマークアップで宣言によって接続のトランスフォーマーを追加するには内で、`<asp:WebPartConnection>`要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-659">You can add a transformer for a connection declaratively in the markup of a Web page, by adding a tag for a custom transformer (or one of the transformers provided with the Web Parts control set) within the `<asp:WebPartConnection>` element.</span></span> <span data-ttu-id="5615e-660">追加することもトランスフォーマーをプログラムでは、コードで、そのインスタンスを作成して、呼び出し、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>メソッドを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>トランスフォーマー オブジェクトと共に、他の必要なパラメーターを渡す、接続を作成するコントロール。</span><span class="sxs-lookup"><span data-stu-id="5615e-660">You can also add a transformer programmatically, creating an instance of it in your code, and calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to create the connection, passing to it the transformer object along with the other required parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Docs>
    </Member>
    <Member MemberName="Transformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartTransformerCollection Transformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transformers As WebPartTransformerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartTransformerCollection ^ Transformers { System::Web::UI::WebControls::WebParts::WebPartTransformerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transformers : System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartTransformerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5615e-661">Web パーツ コントロール セットで内部的に使用する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> オブジェクトのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-661">Gets a collection of <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects used internally by the Web Parts control set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5615e-662">
            <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> オブジェクトを含んでいる <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5615e-662">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" /> containing <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5615e-663"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A>プロパティが、開発者による使用は想定されてことはありません。</span><span class="sxs-lookup"><span data-stu-id="5615e-663">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> property is never intended for use by developers.</span></span> <span data-ttu-id="5615e-664">接続に関連付けられているトランスフォーマーをアクセスする開発者に使用する必要があります常に、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5615e-664">To access the transformer associated with a connection, developers should always use the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer%2A> property.</span></span>  
  
 <span data-ttu-id="5615e-665"><xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A>プロパティは、ページ開発者は、宣言内でトランスフォーマー要素を有効にして Web パーツ コントロールで内部的に使用されます、 `<asp:webpartconnection>` Web ページのマークアップ要素。</span><span class="sxs-lookup"><span data-stu-id="5615e-665">The <xref:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformers%2A> property is used internally by the Web Parts control set to enable page developers to declare transformer elements within the `<asp:webpartconnection>` element in the markup of a Web page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformerCollection" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartConnection.Transformer" />
      </Docs>
    </Member>
  </Members>
</Type>