<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ConsumerConnectionPoint.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5cb9fefe53ca0dc6efecfbfa06ad64f25a529c339.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb9fefe53ca0dc6efecfbfa06ad64f25a529c339</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Defines a connection point object that enables a server control acting as a consumer to form a connection with a provider.</source>
          <target state="translated">コンシューマーとして動作するサーバー コントロールがプロバイダーとの接続を構成できるようにする、コネクション ポイント オブジェクトを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</source>
          <target state="translated">すべての Web パーツには、2 つのサーバー コントロールの間の接続が、各コントロールは、その他のコントロールへの接続および指定するか、コントロールがプロバイダーまたは接続のコンシューマーとして指定されているかどうかに応じて、データを使用することを有効にするに関連付けられた接続ポイント オブジェクト (その他の要件) が必要です。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> object in general contains the details for how a control can connect to another control and the type of data it can share.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph>オブジェクトには一般に、コントロールが別のコントロールおよびと共有できるデータの種類に接続できる方法の詳細が含まれています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For a control acting as the consumer in a connection, its connection point must be a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object.</source>
          <target state="translated">接続でコンシューマーとして機能するコントロール、その接続ポイントがある必要があります、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For details on Web Parts connections and connection points, read the topics listed in the See Also section below.</source>
          <target state="translated">Web パーツの接続および接続ポイントの詳細については、「参照」セクションのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>To create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object, several steps are required:</source>
          <target state="translated">作成する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>オブジェクトをいくつかの手順が必要。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Enable a consumer control to reference an interface instance.</source>
          <target state="translated">インターフェイス インスタンスを参照するコンシューマー コントロールを有効にします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> or other server control (any type of server control that will be added to a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> zone can be used) must be able to consume data from a specific interface instance.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph>またはその他のサーバー コントロール (任意の型に追加するサーバー コントロールの<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph>ゾーンを使用できます)、特定のインターフェイスのインスタンスからデータを使用できる必要があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The control need not implement the interface; only the provider must implement it.</source>
          <target state="translated">コントロール必要があるインターフェイスを実装していませんプロバイダーのみには、これを実装する必要があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The consumer can either work with the exact interface type served by a provider or, if it does not, a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> object can be used to transform data from a provider's interface type to a type understood by the consumer.</source>
          <target state="translated">コンシューマーがプロバイダーによって提供される、正確なインターフェイスの型で使用するか、または、していない場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph>コンシューマーによって認識される型に、プロバイダーのインターフェイス型からデータを変換するオブジェクトを使用できます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A typical way to enable a consumer is to declare a private field to contain a reference to the desired interface type.</source>
          <target state="translated">コンシューマーを有効にする一般的な方法は、目的のインターフェイス型への参照を格納するプライベート フィールドを宣言します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Identify a callback method.</source>
          <target state="translated">コールバック メソッドを識別します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A method in the consumer must be identified as the callback method to establish a connection with the provider.</source>
          <target state="translated">コンシューマーのメソッドは、プロバイダーとの接続を確立するために、コールバック メソッドとして識別される必要があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This method retrieves an instance of the interface that the provider implements, and assigns it to (for example) the private field created in the first step.</source>
          <target state="translated">このメソッドは、プロバイダーを実装し、割り当てるプライベート フィールド (たとえば) に作成されたことの最初の手順で、インターフェイスのインスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The Web Parts approach for identifying a callback method in the consumer is to add a <ph id="ph1">`ConnectionConsumer`</ph> metadata attribute (defined by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&gt;</ph> class) to the method that receives the interface instance.</source>
          <target state="translated">コンシューマーのコールバック メソッドを識別するための Web パーツ方法は、追加する、<ph id="ph1">`ConnectionConsumer`</ph>メタデータの属性 (によって定義された、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute&gt;</ph>クラス) インターフェイスのインスタンスを受信するメソッドにします。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>When the attribute is added, the only required parameter is a display name to use for the consumer connection point.</source>
          <target state="translated">属性が追加されたときにのみ必要なパラメーター、コンシューマー接続ポイントを使用する表示名です。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Optional parameters can also be added, such as an ID.</source>
          <target state="translated">ID など、省略可能なパラメーターも追加できます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Process and output the data from the interface instance.</source>
          <target state="translated">プロセスとインターフェイスのインスタンスからデータを出力します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Perform any internal processing as needed on the data, and then typically a consumer control will render the data to the page.</source>
          <target state="translated">必要に応じて、データでは、内部処理を実行し、通常コンシューマー コントロールは表示ページにデータ。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A common way of doing this is to override the control's <ph id="ph1">&lt;xref:System.Web.UI.Control.OnPreRender%2A&gt;</ph> method.</source>
          <target state="translated">これを行う一般的な方法は、コントロールのオーバーライドする<ph id="ph1">&lt;xref:System.Web.UI.Control.OnPreRender%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>During a synchronous request, a consumer should request data directly from the provider during or immediately after the <ph id="ph1">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph> event.</source>
          <target state="translated">同期の要求時にコンシューマー要求する必要がありますデータ プロバイダーから直接中または直後後、<ph id="ph1">&lt;xref:System.Web.UI.Control.PreRender&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>During an asynchronous request, if the provider's callback method is not called at any point during rendering, the developer can assume that no data was sent to the consumer.</source>
          <target state="translated">非同期の要求時にレンダリング中に、任意の時点で、プロバイダーのコールバック メソッドが呼び出されない場合、開発者と仮定できますコンシューマーにデータが送信されなかったこと。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>After a control has been equipped to act as a consumer, the control can participate in connections (assuming that a provider control is also equipped and available).</source>
          <target state="translated">コンシューマーとして機能するコントロールを備えたされましたが、後に、コントロールは、接続 (装備され使用可能なプロバイダーのコントロールがまたがあると仮定) に参加できます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>To create a static, declarative connection in the markup of a Web page, developers can use the <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> element.</source>
          <target state="translated">Web ページのマークアップで、宣言型の静的な接続を作成する開発者が使用して、<ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If the <ph id="ph1">`ConnectionConsumer`</ph> attribute in the consumer source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the <ph id="ph2">`ConsumerConnectionPointID`</ph> attribute in the <ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph> element on a page.</source>
          <target state="translated">場合、<ph id="ph1">`ConnectionConsumer`</ph>コールバック メソッドを識別するコンシューマー ソース コード内の属性は、接続ポイントの ID を指定し、その値を割り当てる必要があります、<ph id="ph2">`ConsumerConnectionPointID`</ph>属性、<ph id="ph3">`&lt;asp:webpartconnection&gt;`</ph>ページの要素。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A reason that a developer might specify an ID for a consumer connection point is if there are multiple connection points defined in the consumer control.</source>
          <target state="translated">開発者がコンシューマー接続ポイントの ID を指定する理由は、コンシューマー コントロールで定義されている複数の接続ポイントがあるかどうかです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If an ID is not specified for the consumer connection point in the consumer control, a value does not have to be assigned to the <ph id="ph1">`ConsumerConnectionPointID`</ph> attribute in the page either, because the connection will be created using a default value obtained from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;</ph> field.</source>
          <target state="translated">割り当てられる値がないコンシューマー コントロールのコンシューマー接続ポイントの ID が指定されていない場合、<ph id="ph1">`ConsumerConnectionPointID`</ph>から取得した既定値を使用して、接続が作成するため、ページで、属性、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID&gt;</ph>フィールドです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>To create a connection in code, developers must create a new <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object by calling the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;</ph> method and passing to it the ID of the consumer control, along with the ID or index of the defined <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object in the consumer control.</source>
          <target state="translated">コードで接続を作成するには、開発者を新規に作成する必要があります<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>オブジェクトを呼び出して、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;</ph>メソッドの ID またはインデックスの定義と共に、コンシューマー コントロールの ID を渡す<ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>コンシューマー コントロール内のオブジェクト。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The returned <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object, along with a reference to the consumer control, a reference to the provider control, and a corresponding <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</ph> object, are all passed to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt;</ph> method to create a new <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph> object.</source>
          <target state="translated">返された<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>プロバイダー コントロールと、対応するへの参照をコンシューマー コントロールへの参照と共にオブジェクト<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&gt;</ph>オブジェクトでは、すべてに渡される、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A&gt;</ph>メソッドを作成、新しい<ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Although developers can use consumer connection points as part of establishing connections either declaratively or programmatically, users can also interact with consumer connection points to establish connections through the user interface (UI).</source>
          <target state="translated">開発者は、宣言またはプログラムによって、接続を確立するための一部として、コンシューマー接続ポイントを使用できますが、ユーザーも、ユーザー インターフェイス (UI) 経由の接続を確立するためにコンシューマー接続ポイントと対話できます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If developers declare a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;</ph> control on a Web page, it provides a run-time UI for users to create connections.</source>
          <target state="translated">開発者は、宣言する場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionsZone&gt;</ph>コントロール、Web ページ上ユーザー接続を作成するためのランタイムの UI を提供します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If users choose the provider control as the starting point for establishing the connection by clicking its connect verb (they could also choose the consumer; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display names of the available consumer connection point (or points if there are multiple ones) that the provider can send the data to.</source>
          <target state="translated">ユーザーをクリックして接続を確立するための出発点としてプロバイダーのコントロールを選択する場合、動詞を接続 (コンシューマーを選択する可能性があります以外の場合は、結果として得られる接続に違いはありません)、使用可能なコンシューマー接続ポイント (またはポイントが複数の場合) の表示名でのドロップダウン リスト コントロールが UI に表示されます、プロバイダーがデータを送信できます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Users must select a consumer connection point to establish a connection.</source>
          <target state="translated">ユーザーは、接続を確立するコンシューマー接続ポイントを選択する必要があります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object associates directly with a specific consumer control, and stores details about a connection in the properties it inherits from the base <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> class.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>オブジェクトは、特定のコンシューマーのコントロールを直接関連付けます、基数、継承元のプロパティでは、接続の詳細を格納<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For example, in the inherited <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</ph> property, a consumer connection point keeps the type of interface it uses.</source>
          <target state="translated">たとえばでは、継承された<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</ph>プロパティを使用してインターフェイスの型を保持するコンシューマー接続ポイント。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If the provider and consumer in a connection both understand the interface type, the controls are compatible and capable of forming a direct connection.</source>
          <target state="translated">プロバイダーとの接続でコンシューマー両方インターフェイスの種類を理解して場合、コントロールは互換性のあるおよび直接接続を形成することです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>If the provider and consumer cannot work with the same interface type, they are incompatible and must use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> object to translate the provider connection point's <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</ph> property into a type that the consumer can work with.</source>
          <target state="translated">互換性がありませんし、使用する必要があります、プロバイダーとコンシューマーは、同じインターフェイス型を扱うことはできない場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph>プロバイダー接続ポイントの翻訳をオブジェクト<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A&gt;</ph>コンシューマーが使用できる型にプロパティです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Another important inherited property is the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;</ph> property, which provides a friendly name to display in the UI for users to choose a consumer connection point when creating connections.</source>
          <target state="translated">他の重要な継承されたプロパティは、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A&gt;</ph>をコンシューマー接続を選択するユーザーの UI に表示するフレンドリ名を提供するプロパティが接続を作成するときにポイントします。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The display name is the required parameter when developers add a <ph id="ph1">`ConnectionConsumer`</ph> attribute to the callback method in a consumer control.</source>
          <target state="translated">開発者を追加するときに、表示名は必須のパラメーター、<ph id="ph1">`ConnectionConsumer`</ph>属性コンシューマー コントロールのコールバック メソッドにします。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The inherited <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;</ph> property is also useful, as indicated above, because it provides a unique identifier for a consumer connection point in the event that a consumer has multiple connection points.</source>
          <target state="translated">継承された<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A&gt;</ph>プロパティは上に示されて、コンシューマーは、複数の接続ポイントを持つことのコンシューマー接続ポイントの一意識別子を提供するために便利です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A consumer can have multiple <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> objects defined in it, and in this case, when developers add the <ph id="ph2">`ConnectionConsumer`</ph> attribute to a method, they should specify an ID value to distinguish each connection point.</source>
          <target state="translated">コンシューマーでは複数<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>オブジェクトとに定義された、この場合は、開発者を追加するときに、<ph id="ph2">`ConnectionConsumer`</ph>属性、メソッドに各接続ポイントを区別するために ID 値を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>One other notable inherited property is the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;</ph> property, which indicates whether a consumer connection point can connect simultaneously to multiple providers.</source>
          <target state="translated">その他の注目すべき継承されたプロパティは 1 つは、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A&gt;</ph>プロパティで、コンシューマー接続ポイントが複数のプロバイダーに同時に接続できるかどうかを示します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This property value is <ph id="ph1">`false`</ph> by default for consumer connection points (whereas it defaults to <ph id="ph2">`true`</ph> for provider connection points).</source>
          <target state="translated">このプロパティの値が<ph id="ph1">`false`</ph>コンシューマー接続ポイントの既定 (既定値は一方<ph id="ph2">`true`</ph>プロバイダー接続ポイントの)。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class adds several unique methods to the members it inherits from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>固有のいくつかのメソッドを追加するクラスから継承してメンバーに、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt;</ph> method invokes the consumer's own defined callback method to retrieve the interface instance from the provider.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt;</ph>メソッド、コンシューマーの独自定義されたコールバック メソッドを呼び出して、プロバイダーからインターフェイスのインスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph> method returns a Boolean value that indicates whether the connection point is able to establish connections, based on the current state of the associated consumer control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph>メソッド接続ポイントが関連付けられているコンシューマー コントロールの現在の状態に基づいて、接続を確立できないかどうかを示すブール値を返します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The following code example shows simple ways to create a connection declaratively, programmatically, or through the UI, in each case making use of a consumer connection point.</source>
          <target state="translated">次のコード例では、宣言によって接続を作成、プログラム、または UI の各ケースでは、コンシューマー接続ポイントを使用する簡単な方法を示します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The example has four parts:</source>
          <target state="translated">この例では、4 つの部分があります。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A user control that enables you to change the Web Parts display mode on a page.</source>
          <target state="translated">Web パーツを変更することができますユーザー コントロールは、ページのモードを表示します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Source code for an interface and two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls acting as the provider and the consumer for a connection.</source>
          <target state="translated">ソース インターフェイスと 2 つのコード<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph>プロバイダーとの接続のコンシューマーとしての動作を制御します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>A Web page to host all the controls and run the code example.</source>
          <target state="translated">すべてのコントロールをホストし、コード例を実行する Web ページ。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>An explanation of how to run the example page.</source>
          <target state="translated">ページの例を実行する方法の説明。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The first part of this code example is the user control that enables users to change display modes on a Web page.</source>
          <target state="translated">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Save the following source code to an .ascx file, giving it the file name that is assigned to the <ph id="ph1">`Src`</ph> attribute of the <ph id="ph2">`Register`</ph> directive for this user control, which is near the top of the hosting Web page.</source>
          <target state="translated">次のソース コード、ファイルを保存 .ascx、それにに割り当てられているファイルの名前、<ph id="ph1">`Src`</ph>の属性、<ph id="ph2">`Register`</ph>ホストする Web ページの上部にあるディレクティブは、このユーザー コントロールをします。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For details about display modes and a description of the source code in this control, see <bpt id="p1">[</bpt>Walkthrough: Changing Display Modes on a Web Parts Page<ept id="p1">](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)</ept>.</source>
          <target state="translated">詳細については、このコントロールでモードと、ソース コードの説明を表示を参照してください<bpt id="p1">[</bpt>チュートリアル: Web パーツ ページの表示モードの変更<ept id="p1">](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)</ept>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The second part of the code example is the source code for the interface and controls.</source>
          <target state="translated">コード例の 2 番目の部分では、インターフェイスとコントロールのソース コードを示します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The source file contains a simple interface named <ph id="ph1">`IZipCode`</ph>.</source>
          <target state="translated">ソース ファイルには、という名前の単純なインターフェイスが含まれています。<ph id="ph1">`IZipCode`</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>There is also a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> class named <ph id="ph2">`ZipCodeWebPart`</ph> that implements the interface and acts as the provider control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph>という名前のクラス<ph id="ph2">`ZipCodeWebPart`</ph>インターフェイスを実装して、プロバイダー コントロールとして機能します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The other <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> class is named <ph id="ph2">`WeatherWebPart`</ph>, and it acts as the consumer for the connection.</source>
          <target state="translated">他の<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph>クラスの名前は<ph id="ph2">`WeatherWebPart`</ph>、し、接続のコンシューマーとして機能します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This class has a method named <ph id="ph1">`GetZipCode`</ph> that gets an instance of the <ph id="ph2">`IZipCode`</ph> interface from the provider control.</source>
          <target state="translated">このクラスは、という名前のメソッドを持つ<ph id="ph1">`GetZipCode`</ph>のインスタンスを取得する、<ph id="ph2">`IZipCode`</ph>プロバイダー コントロールからのインターフェイスです。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Note that this method is marked as the consumer's connection point method with a <ph id="ph1">`ConnectionConsumer`</ph> attribute in its metadata.</source>
          <target state="translated">このメソッドが、コンシューマーの接続ポイント メソッドとしてマークされていることに注意してください、<ph id="ph1">`ConnectionConsumer`</ph>メタデータ内の属性です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This is the mechanism for identifying the connection point method in the consumer control.</source>
          <target state="translated">これは、コンシューマー コントロールの接続ポイント メソッドを識別するためのメカニズムです。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For the code example to run, you must compile this source code.</source>
          <target state="translated">コード例を実行するには、このソース コードをコンパイルする必要があります。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</source>
          <target state="translated">コンパイルするには明示的にし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに結果として得られるアセンブリを配置できます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</source>
          <target state="translated">またはを動的にコンパイルされる実行時に、サイトの App_Code フォルダー内のソース コードを配置することができます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This code example uses dynamic compilation.</source>
          <target state="translated">このコード例では、動的なコンパイルを使用します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>For a walkthrough that demonstrates how to compile, see <bpt id="p1">[</bpt>Walkthrough: Developing and Using a Custom Web Server Control<ept id="p1">](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)</ept>.</source>
          <target state="translated">コンパイルする方法について説明するチュートリアルでは、次を参照してください。<bpt id="p1">[</bpt>チュートリアル: カスタム Web サーバー コントロールの開発と<ept id="p1">](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)</ept>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The third part of the code example is the Web page.</source>
          <target state="translated">コード例の 3 番目の部分は、Web ページです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Near the top are <ph id="ph1">`Register`</ph> directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</source>
          <target state="translated">上部にある、 <ph id="ph1">`Register`</ph>  ページで、接続を構成するカスタム コントロールおよび変更できるようにするユーザー コントロールを登録するためのディレクティブの表示モード。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The connection itself is created declaratively within the <ph id="ph1">`&lt;staticconnections&gt;`</ph> element on the page.</source>
          <target state="translated">接続自体が内で宣言によって作成された、<ph id="ph1">`&lt;staticconnections&gt;`</ph>ページ上の要素。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This demonstrates one way of creating a connection--note the <ph id="ph1">`ConsumerConnectionPointID`</ph> attribute in the <ph id="ph2">`&lt;asp:webpartconnection&gt;`</ph> element.</source>
          <target state="translated">これは、接続を作成する 1 つの方法-注、<ph id="ph1">`ConsumerConnectionPointID`</ph>属性、<ph id="ph2">`&lt;asp:webpartconnection&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>You can also create the connection programmatically; the code for doing that is in the <ph id="ph1">`Button1_Click`</ph> method.</source>
          <target state="translated">プログラムからの接続を作成することもできます。これを行うためのコードは、<ph id="ph1">`Button1_Click`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>In this case, a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object is created and then passed to a method that creates the actual connection.</source>
          <target state="translated">ここで、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>オブジェクトが作成され、実際の接続を作成するメソッドに渡されます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</source>
          <target state="translated">宣言またはプログラムによって、接続が作成されるかどうかの接続ポイントはコンシューマーとプロバイダーの常に指定する必要があります。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The <ph id="ph1">`Button2_Click`</ph> method accesses the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</source>
          <target state="translated"><ph id="ph1">`Button2_Click`</ph>メソッドへのアクセス、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConnectionPoint&gt;</ph>コンシューマーとプロバイダーの両方のオブジェクトし、ページ内のラベルに、プロパティ値の一部を書き込みます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>After you load the page in a browser, click the <bpt id="p1">**</bpt>Connection Point Details<ept id="p1">**</ept> button.</source>
          <target state="translated">ブラウザーでページを読み込んだ後、<bpt id="p1">**</bpt>コネクション ポイントの詳細<ept id="p1">**</ept>ボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Information about the provider and consumer connection points established in the declarative connection appears.</source>
          <target state="translated">宣言型の接続で確立されているプロバイダーおよびコンシューマー接続ポイントに関する情報が表示されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Next, use the <bpt id="p1">**</bpt>Display Mode<ept id="p1">**</ept> drop-down control to switch the page into connect mode.</source>
          <target state="translated">次に、使用、<bpt id="p1">**</bpt>表示モード<ept id="p1">**</ept>接続モードのドロップダウン コントロールをページに切り替えます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>On the verbs menu of the <bpt id="p1">**</bpt>ZIP Code Provider<ept id="p1">**</ept><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control (represented by a downward arrow in the title bar), click the connect verb.</source>
          <target state="translated">動詞メニューを開き、 <bpt id="p1">**</bpt>ZIP コード プロバイダー<ept id="p1">**</ept> <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> (タイトル バーに下向きの矢印によって表される)、コントロール動詞を接続 をクリックします。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The connection UI appears, created automatically by the <ph id="ph1">`&lt;asp:connectionszone&gt;`</ph> control declared in the page.</source>
          <target state="translated">UI が表示されたら、接続はによって自動的に作成された、<ph id="ph1">`&lt;asp:connectionszone&gt;`</ph>コントロール、ページで宣言します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>This is another way of creating a connection (through the UI), along with the declarative and programmatic methods discussed earlier.</source>
          <target state="translated">これは、ここで説明した宣言とプログラムのメソッドと共に (UI) を経由して接続を作成する別の方法です。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Click the <bpt id="p1">**</bpt>Disconnect<ept id="p1">**</ept> button to terminate the existing static connection.</source>
          <target state="translated">クリックして、<bpt id="p1">**</bpt>切断<ept id="p1">**</ept>を既存の静的な接続を終了するボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Click the <bpt id="p1">**</bpt>Create a Connection to a Consumer<ept id="p1">**</ept> link.</source>
          <target state="translated">クリックして、<bpt id="p1">**</bpt>コンシューマーへの接続を作成する<ept id="p1">**</ept>リンクします。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The UI now displays a drop-down control that lists the consumer connection point display name.</source>
          <target state="translated">UI では、コンシューマー接続ポイントの表示名を一覧表示するドロップダウン コントロールが表示されます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Select the connection point in the drop-down list, and then click <bpt id="p1">**</bpt>Connect<ept id="p1">**</ept> to complete the connection.</source>
          <target state="translated">ドロップダウン リストで、接続ポイントを選択し、クリックして<bpt id="p1">**</bpt>接続<ept id="p1">**</ept>接続を完了します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Next, click <bpt id="p1">**</bpt>Disconnect<ept id="p1">**</ept> again.</source>
          <target state="translated">次に、をクリックして<bpt id="p1">**</bpt>切断<ept id="p1">**</ept>もう一度です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Click the <bpt id="p1">**</bpt>Dynamic Connection<ept id="p1">**</ept> button to create a connection programmatically.</source>
          <target state="translated">クリックして、<bpt id="p1">**</bpt>動的接続<ept id="p1">**</ept>プログラムで接続を作成するボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Use the <bpt id="p1">**</bpt>Display Mode<ept id="p1">**</ept> control to return the page to browse mode.</source>
          <target state="translated">使用して、<bpt id="p1">**</bpt>表示モード<ept id="p1">**</ept>コントロールをページをブラウズ モードを返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>Click the <bpt id="p1">**</bpt>Connection Point Details<ept id="p1">**</ept> button again, to indicate details about the consumer connection point object once more.</source>
          <target state="translated">クリックして、<bpt id="p1">**</bpt>接続ポイントの詳細<ept id="p1">**</ept>を示すために、ボタンをもう一度、に関する詳細情報コンシューマー接続ポイント オブジェクト 1 回以上です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
          <source>The example has demonstrated establishing a connection and using a consumer connection point in three ways: a static connection declared in the Web page markup; a connection created in code that used a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object; and a connection created by a user through the connection UI.</source>
          <target state="translated">接続を確立して、次の 3 つの方法でコンシューマー接続ポイントを使用して、例で説明しました Web ページのマークアップで宣言された静的な接続。使用するコードで作成した接続、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>オブジェクト、およびユーザー接続の UI を使って作成した接続です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The method in the consumer control that returns an interface instance to consumers to establish a connection.</source>
          <target state="translated">接続を確立するためのインターフェイス インスタンスをコンシューマーに返す、コンシューマー コントロールのメソッド。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the interface that the consumer receives from a provider.</source>
          <target state="translated">コンシューマーがプロバイダーから受け取るインターフェイスの <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the consumer control with which the consumer connection point is associated.</source>
          <target state="translated">コンシューマー接続ポイントが関連付けられたコンシューマー コントロールの <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>A friendly display name for the consumer connection point that appears to users in the connection user interface (UI).</source>
          <target state="translated">接続ユーザー インターフェイス (UI) でユーザーに対して表示される、コンシューマー接続ポイントの表示名。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>A unique identifier for the consumer connection point.</source>
          <target state="translated">コンシューマー接続ポイントの一意な識別子。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>A Boolean value indicating whether the consumer connection point can have multiple simultaneous connections with providers.</source>
          <target state="translated">コンシューマー接続ポイントが、プロバイダーとの間で同時に複数の接続を持つことができるかどうかを示すブール値。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A&gt;</ph> constructor for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class simply calls the base constructor, passing to it the various parameters and initializing the base class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A&gt;</ph>のコンス トラクター、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>クラスは、基底コンス トラクター、さまざまなパラメーターを渡すと、基本クラスの初期化を呼び出すだけです。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</source>
          <target state="translated">基本クラス コンス トラクターでは、接続ポイントのパラメーターの数を確認し、いくつかの例外をスローすることができます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>For a list of possible exceptions, see the Exceptions section.</source>
          <target state="translated">可能性のある例外の一覧は、例外を参照してください。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>You can call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A&gt;</ph> constructor to create your own instance of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class.</source>
          <target state="translated">呼び出すことができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A&gt;</ph>の独自のインスタンスを作成するコンス トラクター、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>However, in cases where you are simply establishing a connection and not extending the class, you should call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;</ph> method to return a connection point object from a provider.</source>
          <target state="translated">ただし、しているだけで接続を確立して、クラスを拡張しない場合を呼び出す必要があります、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A&gt;</ph>プロバイダーの接続ポイント オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates how to derive from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class to create a custom provider connection point.</source>
          <target state="translated">派生する次のコード例には、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>カスタム プロバイダー接続ポイントを作成するクラス。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The code example has three parts:</source>
          <target state="translated">このコード例では、3 つの部分があります。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>A source file that contains a provider <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control, a consumer <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control, and a custom <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object.</source>
          <target state="translated">プロバイダーを含むソース ファイル<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph>を制御するコンシューマー<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph>制御、およびカスタム<ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>A Web page that hosts the controls in a static connection.</source>
          <target state="translated">静的な接続のコントロールをホストする Web ページ。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>An explanation of how to run the example code.</source>
          <target state="translated">コード例を実行する方法の説明。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The first part of the code example is the source for the provider and consumer <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls, and a custom <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class, named <ph id="ph3">`TableConsumerConnectionPoint`</ph>.</source>
          <target state="translated">このコード例の最初の部分はコンシューマーとプロバイダーのソース<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph>コントロール、およびカスタム<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>という名前のクラス<ph id="ph3">`TableConsumerConnectionPoint`</ph>です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>Note that the constructor of the <ph id="ph1">`TableConsumerConnectionPoint`</ph> class calls the base constructor, passing it the required parameters as indicated in the Parameters section.</source>
          <target state="translated">なおのコンス トラクター、<ph id="ph1">`TableConsumerConnectionPoint`</ph>クラスは、パラメーターを渡すことが、必要なパラメーター セクションに記載されている、基底コンス トラクターを呼び出します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>Also note that in the <ph id="ph1">`TableConsumer`</ph> class, the <ph id="ph2">`SetConnectionInterface`</ph> method is specified as the callback method for connections, and the <ph id="ph3">`ConnectionConsumer`</ph> attribute declares the custom <ph id="ph4">`TableConsumerConnectionPoint`</ph> as a parameter.</source>
          <target state="translated">またを注意してください、<ph id="ph1">`TableConsumer`</ph>クラス、<ph id="ph2">`SetConnectionInterface`</ph>メソッドは、接続のコールバック メソッドとして指定され、<ph id="ph3">`ConnectionConsumer`</ph>属性宣言のカスタム<ph id="ph4">`TableConsumerConnectionPoint`</ph>をパラメーターとして。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>This demonstrates how to create a custom consumer connection point and then associate it with a consumer control.</source>
          <target state="translated">これは、カスタムのコンシューマー接続ポイントを作成し、それをコンシューマーのコントロールに関連付ける方法を示しています。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>This example assumes that the source code is dynamically compiled, so you should place the source code file in an App_Code subfolder of your Web application.</source>
          <target state="translated">この例では、ソース コードが動的にコンパイルされる、ため、ソース コード ファイルを Web アプリケーションの App_Code サブフォルダーに配置する必要があります。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The second part of the code example is the Web page that hosts the custom controls in a static Web parts connection.</source>
          <target state="translated">コード例の 2 番目の部分は、静的な Web パーツ接続においてカスタム コントロールをホストする Web ページです。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>At the top of the page is a <ph id="ph1">`Register`</ph> directive to declare a prefix and the namespace for the custom controls.</source>
          <target state="translated">ページの上部には、<ph id="ph1">`Register`</ph>ディレクティブをプレフィックスとカスタム コントロールの名前空間を宣言します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The connection is declared by using an <ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph> element, and the provider and consumer controls are declared within an <ph id="ph2">`&lt;asp:webpartzone&gt;`</ph> element.</source>
          <target state="translated">使用して、接続が宣言されている、<ph id="ph1">`&lt;asp:webpartconnection&gt;`</ph>要素、およびプロバイダーとコンシューマーのコントロールが内で宣言された、<ph id="ph2">`&lt;asp:webpartzone&gt;`</ph>要素。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>Load the page in a browser.</source>
          <target state="translated">ブラウザーでページを読み込みます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source>The connection between the controls already exists, and the consumer displays the data from the provider, because the connection was declared as a static connection in the page.</source>
          <target state="translated">既にコントロール間の接続が存在し、接続がページに静的な接続として宣言されているため、コンシューマーは、プロバイダーからのデータが表示されます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="callbackMethod" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="callbackMethod" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="interfaceType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="interfaceType" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="controlType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="controlType" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="displayName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="displayName" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph> または空の文字列 ("") です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="controlType" /&gt;</ph> is not the same type as the consumer control (or a valid class derived from it).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="controlType" /&gt;</ph> が、コンシューマー コントロール (またはそれから派生した有効なクラス) と同じ型ではありません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>The consumer control associated with a consumer connection point.</source>
          <target state="translated">コンシューマー接続ポイントに関連付けられたコンシューマー コントロール。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>The interface instance returned from a provider control.</source>
          <target state="translated">プロバイダー コントロールから返されたインターフェイス インスタンス。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>Invokes the callback method in a consumer control and retrieves the interface instance from a provider control.</source>
          <target state="translated">コンシューマー コントロールのコールバック メソッドを呼び出し、プロバイダー コントロールからインターフェイス インスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>This method receives an interface instance from a provider that contains data for the consumer control.</source>
          <target state="translated">このメソッドは、コンシューマーのコントロールのデータを格納するプロバイダーからインターフェイスのインスタンスを受け取ります。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt;</ph> method is called by <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph> objects when a connection is being activated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A&gt;</ph>メソッドによって呼び出されます<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartConnection&gt;</ph>オブジェクトの接続をアクティブ化時にします。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>This is a critical step that is part of initiating a connection and enabling two controls to share data.</source>
          <target state="translated">これは、接続を開始して、データを共有する 2 つのコントロールを有効化の一部である重要な手順です。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>The consumer control in a connection must be able to work with the same type of interface as the provider.</source>
          <target state="translated">接続のコンシューマー コントロールは、プロバイダーと同じ型のインターフェイスを使用できる必要があります。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source>If it does not, the controls are incompatible and a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph> object must be used to establish a connection.</source>
          <target state="translated">コントロールとの互換性がない場合は、および<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartTransformer&gt;</ph>オブジェクトは、接続を確立するために使用する必要があります。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)">
          <source><ph id="ph1">&lt;paramref name="control" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="control" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>The consumer control associated with the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /&gt;</ph> に関連付けられたコンシューマー コントロール。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /&gt;</ph> of any secondary interfaces that participate in a connection.</source>
          <target state="translated">接続に参加するセカンダリ インターフェイスの <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>Determines whether a consumer connection point is currently capable of establishing a connection.</source>
          <target state="translated">コンシューマー接続ポイントが現在接続を確立できるかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a connection point can currently establish a connection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">コネクション ポイントが現在接続を確立できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph> method as implemented always returns <ph id="ph2">`true`</ph> in all cases for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph>メソッド実装を返しますでは常に<ph id="ph2">`true`</ph>のすべてのケースで、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>The intent for this method is to have it check on the state of <ph id="ph1">`control`</ph> and <ph id="ph2">`secondaryInterfaces`</ph> at certain critical points to determine whether a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> object is presently able to create a connection.</source>
          <target state="translated">このメソッドの目的は、の状態を確認する<ph id="ph1">`control`</ph>と<ph id="ph2">`secondaryInterfaces`</ph>を決定する特定の重要な時点でかどうか、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>オブジェクトが現在の接続を作成できません。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>There can be scenarios where <ph id="ph1">`control`</ph> is in a state that would make it impossible to form a connection, or where <ph id="ph2">`secondaryInterfaces`</ph> must exist before a connection can be formed.</source>
          <target state="translated">シナリオがある場所<ph id="ph1">`control`</ph>が不可能になること、接続を構成できる状態では、または where<ph id="ph2">`secondaryInterfaces`</ph>接続を確立できる前に存在する必要があります。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)">
          <source>In such cases, developers can inherit from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph> class, and override the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph> method, providing a custom implementation to determine when the connection point is ready to support connections.</source>
          <target state="translated">このような場合、開発者がから継承できます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&gt;</ph>クラス、および上書き、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A&gt;</ph>メソッド、接続ポイントが接続に対応している場合を決定するカスタム実装を提供します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>