<Type Name="WebPartManager" FullName="System.Web.UI.WebControls.WebParts.WebPartManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="12a7c1ff38a277e42323274abbbbe463ee23012b" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55382584" /></Metadata><TypeSignature Language="C#" Value="public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartManager extends System.Web.UI.Control implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartManager&#xA;Inherits Control&#xA;Implements INamingContainer, IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartManager : System::Web::UI::Control, System::Web::UI::INamingContainer, System::Web::UI::WebControls::WebParts::IPersonalizable" />
  <TypeSignature Language="F#" Value="type WebPartManager = class&#xA;    inherit Control&#xA;    interface INamingContainer&#xA;    interface IPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IPersonalizable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ViewStateModeById</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web パーツのコントロール、機能、および Web ページ上で発生するイベントのすべてを管理する、Web パーツ コントロール セットの中心的なクラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、Web パーツ アプリケーションのハブまたはコントロール センターとして機能します。 必要があります--1 つと 1 つだけ--<xref:System.Web.UI.WebControls.WebParts.WebPartManager> Web パーツ コントロールを使用するすべてのページにコントロールのインスタンス。 Web パーツ アプリケーションのほとんどの側面と同様、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、認証されたユーザーでのみ動作します。 さらに、その機能を継承する Web パーツ ゾーン内に存在するサーバー コントロールのほとんどすべてが、<xref:System.Web.UI.WebControls.WebParts.WebZone>クラス。 これらのゾーンの外部でのページ上に存在するサーバー コントロールは、ほとんどの Web パーツ機能またはとの対話を持つことができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。  
  
 ハブのページで、Web パーツ機能として、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールでは、次の表で説明されているタスクの種類を実行します。  
  
|タスク カテゴリ|どのようなコントロールを使用してください。|  
|-------------------|---------------------------|  
|Web パーツ コントロールの追跡|など、Web パーツの機能を提供する、ページ上のコントロールのさまざまな種類の追跡<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、接続、ゾーン、およびその他のユーザー。|  
|追加して、Web パーツ コントロールを削除します。|追加、削除、および閉じるのため、メソッドを提供<xref:System.Web.UI.WebControls.WebParts.WebPart>ページ上のコントロール。|  
|接続の管理|コントロール間の接続を作成し、追加および削除のプロセスと同様に、接続を監視します。|  
|コントロールとページのカスタマイズ|ページでは、さまざまな場所にコントロールを移動することができ、外観、プロパティ、およびコントロールの動作のユーザーは編集ビューを起動します。 各ページのユーザー固有のパーソナル化設定を保持します。|  
|別のページ ビューの切り替え|ユーザーがページ レイアウトの変更やコントロールの編集などの特定のタスクを実行できるように、ページのさまざまな特殊化されたビューの間でのページに切り替えます。|  
|Web パーツのライフ サイクル イベントを発生させる|発生させ、およびとコントロールの追加、移動、接続されている、または削除などの Web パーツ コントロールのライフ サイクル イベントを処理するにより、開発者に定義します。|  
|コントロールのインポートとエクスポートを有効にします。|プロパティの状態を格納する XML ストリームをエクスポートします<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、およびその他のページまたはサイト内の複雑なコントロールをカスタマイズしやすくするためのファイルをインポートすることができます。|  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスには、多数のプロパティ。 一貫性のある、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>他のコントロールの追跡の役割は、さまざまな Web パーツ コントロール、またはその他の特別な Web パーツ オブジェクトのいずれかのコレクションを参照するプロパティがあります。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>、および<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>プロパティは、すべてのコレクションで使用される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>の追跡、およびその他のコントロール管理タスク。  
  
 プロパティの別のグループには、Web パーツ アプリケーションで発生する特定のシナリオで適用されるカスタマイズ可能な警告が含まれています。 以下の<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>、および<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>プロパティ。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスは、多くの Web サーバー コントロールで使用される基本継承されたプロパティの一部をオーバーライドします。 以下の<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>、および<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>プロパティ。  
  
 最後に、グループがあるプロパティのアプリケーションの現在の状態にアクセスするために便利です。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>プロパティは、ページが現在の表示モードを示します。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>プロパティは、ユーザーがさまざまな機能を備えたブラウザーまたは無効になってスクリプトに可能性があります、状況に関連するクライアント側スクリプトを表示するコントロールが許可されているかどうかを示します。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>プロパティは、さまざまな機能拡張の場合に使用される Web パーツの重要なメソッドの呼び出しを含むユーティリティ クラスを参照するために役立ちます。 別のクラスでこれらのメソッドへの呼び出しを非表示にして (、<xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>クラス)、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス独自の API が簡略化されます。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>プロパティはユーザーの個人用設定を格納する永続的なストレージには、そのデータを保持するパーソナル化オブジェクトへのアクセスを提供します。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>プロパティを示します<xref:System.Web.UI.WebControls.WebParts.WebPart>ページ上のコントロールがユーザーまたはアプリケーションによって現在選択されています。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>プロパティを示すかどうかにカスタムのパーソナル化データ、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールが変更されました。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールでは、5 つ含まれている組み込みの表示モード、または Web ページのビュー。 開発者は、この機能を拡張できますなどの型を拡張することによってカスタム表示モードを作成、<xref:System.Web.UI.WebControls.WebParts.WebZone>クラスまたは<xref:System.Web.UI.WebControls.WebParts.ToolZone>クラス。 ユーザーは、適切な種類の特定の表示モードに対応するコントロールがページ上に存在することに、さまざまな表示モードにページを切り替えることができます。  
  
> [!NOTE]
>  ユーザーは、ページ上のゾーンに対応することがなくカスタム表示モードに切り替えることがでくように、この機能を拡張することになります。 ただし、既定の動作は、表示モードをゾーンに対応することにします。  
  
 標準の表示モードがパブリック フィールドで表されて、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス。 次の表に、フィールドとを参照している表示モードを示します。 ページの現在の表示モード、既に説明したように、常にで参照されている、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>プロパティ、および、ページ上に存在するゾーンの種類を指定された、特定のページで指定できる表示モードのセットに含まれている、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>プロパティ。  
  
|フィールド|モードの詳細を表示|  
|-----------|--------------------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|Web ページの通常のユーザー ビュー既定値と最も一般的な表示モード。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|ユーザーが再配置またはページ レイアウトを変更するコントロールを削除するビュー。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|編集のユーザー インターフェイス (UI) が表示されているビューユーザーは、外観、プロパティ、および通常のブラウズ モードで表示されるコントロールの動作を編集できます。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|カタログの UI が表示されているビューユーザーは、利用可能なコントロールのカタログから、ページにコントロールを追加できます。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|接続 UI が表示されているビューユーザーは、接続、管理、またはコントロール間の接続を切断できます。|  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールには、多数の Web パーツ ページとコントロールのライフ サイクルで重要なイベントも含まれています。 これらのイベントは、Web パーツ コントロールの動作を正確にプログラムによる制御を提供します。 ほとんどのメソッドに直接関係<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (またはその他のサーバーまたはユーザー コントロールに配置されている<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>として動作できるようにゾーン<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール)。 ただし、いくつかのイベントは、ページまたはページ上の接続の状態に関連します。 次の表は、使用可能なイベントの一覧し、その用途をまとめたものです。  
  
> [!NOTE]
>  "Control"という単語を指す次の表に、すべてのケースで、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールまたはゾーン内に配置し、サーバー コントロール、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>実行時にオブジェクト。  
  
|event|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>|権限があることを確認 ページにコントロールを追加する前に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>|ページ上のすべての接続がアクティブになった後に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>|ページ上のすべての接続をアクティブ化のプロセスの直前に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>|ページの現在の表示モードが変更された後に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>|ページの表示モードを変更する処理の直前に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>|コントロールの選択が取り消された後に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>|コントロールの選択をキャンセルするプロセスの直前に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>|コントロールをゾーンに追加した後に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>|コントロールをゾーンに追加する処理の直前に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>|コントロールが閉じられた (ページから削除された) 後に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>|コントロールの終了のプロセスの直前に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>|(プログラムで作成またはカタログから追加されたもの) 動的コントロールのインスタンスが完全に削除された後に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>|ダイナミック コントロールを削除する処理の直前に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>|コントロールにそのゾーン内または別のゾーンに移動した後に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>|コントロールを移動する処理の直前に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>|接続に参加するために選択した 2 つのコントロールには、接続が確立されている後に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>|2 つのコントロールを接続するプロセスの直前に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>|2 つの接続されているコントロールが解除された後に発生します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>|2 つのコントロールを切断する処理の直前に発生します。|  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが Web パーツ ページを管理するためのメソッドが多数存在します。 多数のメソッドに、ここでは示しませんがメソッドの名前の形式になります*EventName*します。 これらのメソッドは通常、関連付けられているイベントを発生させるし、型のハンドラーをイベントに提供<xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>します。 継承する開発者がこれらのメソッドのほとんどをオーバーライドできます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス。 また、ページ開発者は、これらのメソッドに関連付けられているイベントのカスタム ハンドラーを指定できます。 などの場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>イベント、ページの開発者は追加でした、`OnWebPartAdded`属性を`<asp:webpartmanager>`イベントに対するカスタム ハンドリングを提供するカスタム メソッドの名前属性を Web ページ、および 割り当てのマークアップ要素。 対応して、属性、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>メソッド、およびイベント処理のほとんどの Web パーツ イベントとその関連付けられているメソッドのしくみの基本的なパターンです。  
  
 さらに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの管理タスクに固有のメソッドがある<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (として使用されるサーバーまたはユーザー コントロールと<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール)。 これらのメソッドを含める<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>、および<xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>します。  
  
 別の一連のメソッドは、接続に特化します。 などのメソッドが含まれます<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>、および<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>します。  
  
 最後に、いくつか<xref:System.Web.UI.WebControls.WebParts.WebPartManager>メソッドは、パーソナル化機能に集中します。 これらのメソッドには、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>、および <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A> が含まれます。  
  
 その他の詳細については<xref:System.Web.UI.WebControls.WebParts.WebPartManager>メソッドからアクセスできる、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>プロパティ、ドキュメントを参照して、<xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>クラス。  
  
   
  
## Examples  
 次のコード例に示しますの宣言とプログラムの両方の使用、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。  
  
 コード例では、4 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   2 つのカスタムを含む Web ページ<xref:System.Web.UI.WebControls.WebParts.WebPart>接続できるコントロールと`<asp:webpartmanager>`要素。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、およびカスタム インターフェイスです。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 ユーザー コントロールには、ページ、ページ上に存在する Web パーツ コントロールの指定可能な表示モードを表示するドロップダウン リスト コントロールがあります。 すぐ下でこのコード例の Web ページで、このユーザー コントロールが宣言されている、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 、ページのマークアップ内の要素があると、`Register`コントロールを登録する Web ページの上部にあるディレクティブ。 詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/DisplayModeMenuVB.ascx#6)]  
  
 Web ページの宣言型マークアップを含む`Register`ユーザー コントロールとカスタム コントロールの両方のディレクティブ。 `<asp:webpartmanager>`要素、`<asp:webpartzone>`カスタムのコントロールを格納する要素と`<asp:connectionszone>`要素。 ページには、接続関連のイベントを処理するいくつかのインライン コードも含まれています、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>制御; 接続のコントロールを切断すると、このコードの効果を確認できます。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 例では、3 番目の部分では、コントロールのソース コードを示します。 という名前のインターフェイスがあることに注意してください。 `IZipCode`、でこのインターフェイスを実装し、`ZipCodeWebPart`クラス。 このクラスは、という名前の特殊なコールバック メソッドを持つ`ProvideIZipCode`プロバイダーとして機能します。 という名前のその他の種類`WeatherWebPart`、という名前の特殊なメソッドは実装されても`GetIZipCode`、これにより、他のコントロールのコンシューマーとして機能するコントロール。  
  
 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例では、アセンブリに、ソースをコンパイルした、 `Register` Web ページ ディレクティブは、アセンブリ名を参照します。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/ZipCodeComponent.vb#2)]  
  
 ブラウザーで Web ページが読み込まれた後にをクリックして、**表示モード**ドロップダウン リスト コントロールと選択**Connect**接続モードをページに切り替えます。 接続モードの使用、`<asp:connectionszone>`コントロール間の接続を作成するための要素。 接続モードのタイトル バーの下向き矢印をクリックして、**郵便番号/ZIP Code**の動詞メニューをアクティブに制御し、 **Connect**します。 接続 UI が表示されたら、クリックして、**コンシューマーへの接続を作成する**リンク。 セルには、ドロップダウン リスト コントロールが表示されます。 選択**気象コントロール**でドロップダウン リストをクリック**Connect** 2 つのコントロールの接続を完了します。 クリックして**閉じる**、しを使用して、**表示モード**ドロップダウン リストに、ページを通常のブラウズ モードに戻ります。 郵便番号を入力して、コンシューマー コントロールは入力した値で更新されます。 `ZipCode`プロパティでマークを付けた、`Personalizable`ソース コード、このプロパティの値の属性がブラウザーのセッション間で保持されますので、ユーザーが入力した値を保存します。 高度なコンシューマー コントロールでは、郵便番号情報を取得、コードに基づく天気情報を検索、および、ユーザーに表示でした。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />拡張するコントロールは設計されています。 ので、いくつかの特定の型を拡張または Web パーツ コントロール セットの多くの場合に制御するときに、Web パーツ アプリケーションの中心を拡張する必要がありますもあるため、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスがいくつかのプロパティまたはメソッドにするために必要な場合が多いため、 カスタム型は、Web パーツ アプリケーションのコンテキストで動作します。 Web パーツのリファレンス ドキュメント (を参照してください<see cref="N:System.Web.UI.WebControls.WebParts" />)、Web パーツを拡張する方法について説明を入力と、頻繁にメンションを拡張するに必要な<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />同様に、クラスのコード例ではそれを拡張する方法を示します。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.%23ctor%2A>コンス トラクターで使用されるいくつかの重要な変数を初期化します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 すべての Web パーツ ページに直接影響する 1 つの割り当ては既定のページ表示モードはブラウズ モードに設定されているファクト (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateConnections">
      <MemberSignature Language="C#" Value="protected virtual void ActivateConnections ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ActivateConnections() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ActivateConnections ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ActivateConnections();" />
      <MemberSignature Language="F#" Value="abstract member ActivateConnections : unit -&gt; unit&#xA;override this.ActivateConnections : unit -&gt; unit" Usage="webPartManager.ActivateConnections " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Web ページ上で現在アクティブでないすべての接続をアクティブにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>間の既存の接続をアクティブ化するページには、各要求のメソッドが呼び出された<xref:System.Web.UI.WebControls.WebParts.WebPart>内に存在する他のサーバー コントロールと<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン。 場合によっては、競合がある接続がアクティブになったこのメソッドでさらに場合は、インスタンスの呼び出しのため、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>問題のある接続を終了するメソッド。 接続解除の処理中に、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>イベントが発生します。 開発者が、このイベントをキャンセルする通常のケースが、このため、取り消すことができません、接続の間での競合については、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、接続の有効化プロセスを完了するために競合を解決する必要があります。 詳細については、次を参照してください。<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>イベント。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPart AddWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPart ^ AddWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="member this.AddWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.AddWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">Web ページに追加するか、ページ上で開く <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (あるいは、サーバー コントロールまたはユーザー コントロール)。</param>
        <param name="zone"><paramref name="webPart" /> の追加先となる <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />。</param>
        <param name="zoneIndex"><paramref name="webPart" /> 内の他のコントロールに対して <paramref name="zone" /> 内で <paramref name="zone" /> が占める序数位置を表す整数。</param>
        <summary>Web ページにプログラムで <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを追加する標準メソッドを提供します。</summary>
        <returns>ページに追加された <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>メソッドを使用して新しい動的に追加する両方<xref:System.Web.UI.WebControls.WebParts.WebPart>をページに既に閉じられている静的または動的のコントロールを再度開くと、ページを制御します。 参照されるコントロールのコピーを実際に新しいコントロールを追加するメソッドが呼び出されると、作成、`webPart`パラメーター。 開発者が参照する必要がありますので、コントロールのコピーの新しい ID が生成された、<xref:System.Web.UI.WebControls.WebParts.WebPart>新しい ID 値を取得するメソッドから制御が返されます。 によって参照されるコントロールへの直接の参照を返します、以前に閉じられたコントロールを再度開くには、メソッドが呼び出されると、`webPart`パラメーター。  
  
> [!IMPORTANT]
>  常に使用する必要があります、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>メソッドではなく、<xref:System.Web.UI.ControlCollection.Add%2A>によって参照されるコントロールのコレクションのメソッド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=nameWithType>プロパティを追加する<xref:System.Web.UI.WebControls.WebParts.WebPart>を使用しているため、ページにプログラムで制御、 <xref:System.Web.UI.ControlCollection.Add%2A>メソッドは、例外をスローします。 ないコントロールを追加する、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (つまりで折り返されるサーバー コントロールを<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>実行時にコントロール) を最初に呼び出す必要があります、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>コントロールを作成し、呼び出すメソッド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>メソッドを追加するにはコントロール。 この方法のデモについては、例を参照してください。  
  
   
  
## Examples  
 次のコード例に示しますを使用、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>ページにプログラムでサーバー コントロールを追加します。 ページのマークアップは、空を含む`<asp:webpartzone>`要素、および`<asp:webpartmanager>`要素。 初めて、**予定表の追加**ボタンがクリックされた、コードは、イベント ハンドラーを作成、<xref:System.Web.UI.WebControls.Calendar>制御、およびとゾーンに追加します、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクトを呼び出す、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>メソッド。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> は <see langword="null" />です。  
  
- または - 
 <paramref name="zone" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="zone" /> が、ゾーンの <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールのコレクションに登録されていません。  
  
または 
 <paramref name="webPart" /> は、既に <paramref name="zone" /> にあります。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="zoneIndex" /> の値が 0 未満です。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="AuthorizeWebPart">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AuthorizeWebPart As WebPartAuthorizationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventHandler ^ AuthorizeWebPart;" />
      <MemberSignature Language="F#" Value="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " Usage="member this.AuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" /> メソッドを呼び出すと発生し、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはサーバー コントロールをページに追加できるかどうかを判断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>イベントが発生したときに、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールがページに追加されています。 ページにコントロールを追加できる一般的なシナリオを数多くあります。 これらの詳細については、「解説」を参照してください、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>メソッド。 コントロールが追加されたときに参照をチェックする必要があるかどうか、<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティが設定されて、必要な場合は、かどうか、コントロールが承認されると、ページに追加します。  
  
 開発者のイベント ハンドラーを作成できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>イベントをフィルター コントロールを提供します。 コントロールの場合<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティの値は、イベント ハンドラーのコードで条件を満たしていない、コントロールがないページに追加します。  
  
   
  
## Examples  
 次のコード例は、のカスタム イベント ハンドラーを設定する方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>イベントで、既定値が自動的に上書き<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>メソッド。  
  
 内のコード、`mgr1_AuthorizeWebPart`メソッドは、ページ上のコントロールが、それぞれであるかどうかを確認します。<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティの値に設定`user`し、そうである場合を返します`true`、が承認され、ページに追加することを意味します。 これには、ユーザーのパーソナル化スコープでページにコントロールを表示するユーザーを許可する既定の方法は、前提としています。 、ただし、ことを確認、コントロールのいずれかの例ではその<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティ値に設定`admin`します。 開発者は、管理者ユーザーのみを確認用に設計された特殊なコントロールで、このフィルターをかける場合があります。 このコントロールの中に承認チェックが失敗、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>イベント、およびは表示されません。 プロパティの設定がないコントロールが同様に表示されることに注意してください。フィルター処理のシナリオの一部であるため、ないと見なされます、<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティが設定されていません。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="AvailableTransformers">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AvailableTransformers As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ AvailableTransformers { System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AvailableTransformers : System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー コントロールの間に Web パーツ接続を作成する場合に使用できる <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.TransformerTypeCollection" /> オブジェクトのセットが格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>コレクションを作成するメソッド。 既定では、アプリケーション構成ファイルから使用可能なトランスフォーマーを読み取ります。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Web パーツ接続の概要</related>
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartConnecting(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartConnecting(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartConnecting : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartConnecting webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">接続を構成するコントロール。</param>
        <summary>2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを接続するプロセスを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>メソッドが存在できるように、接続プロセスの詳細に制御を開発者に提供、個別の段階的には、コントロール間の接続を形成するプロセスを実行できます。 メソッドは、一連のことを確認する初期チェックを実行します。`webPart`接続が形成することが正当な状態にします。 場合`webPart`、すべてのチェックに合格し、現在選択されているコントロールとして設定されます (を参照してください、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>プロパティ)、接続処理を続行できるとします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException">ページ上の現在の表示モードが <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" /> ではありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> は閉じています。  
  
または 
 <paramref name="webPart" /> が <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> コレクションの一部ではありません。  
  
または 
 <paramref name="webPart" /> と <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> コントロールが等価です。</exception>
        <block subset="none" type="overrides"><para>拡張する必要がある開発者、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />コントロールが派生クラスでは、このメソッドをオーバーライドする可能性があります。 1 つの方法は、基本のメソッドを呼び出し、いくつか追加のカスタム処理を追加することまたは、コントロール間の接続を開始するプロセスを完全にカスタマイズすることがあります。 たとえば、接続を作成する前に特定のデータがあることを確認します。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      </Docs>
    </Member>
    <Member MemberName="BeginWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginWebPartEditing(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginWebPartEditing(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.BeginWebPartEditing : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.BeginWebPartEditing webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">編集対象のコントロール。</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを編集するプロセスを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>メソッドが存在できるように、段階のプロセスの詳細に制御を開発者に提供には、コントロールの編集のプロセスを実行できます。 メソッドは、一連のことを確認する初期チェックを実行します。`webPart`が編集できる状態にします。 場合`webPart`、すべてのチェックに合格し、現在選択されているコントロールとして設定されます (を参照してください、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>プロパティ)、および編集の処理を続行できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException">ページ上の現在の表示モードが <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" /> ではありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> は閉じています。  
  
または 
 <paramref name="webPart" /> が <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> コレクションの一部ではありません。  
  
または 
 <paramref name="webPart" /> と <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> コントロールが等価です。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BrowseDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ BrowseDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable BrowseDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web パーツ コントロールが含まれたページの既定の表示モードを表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>フィールドを参照するカスタム<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>作成されに含まれているオブジェクト、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 これは、静的オブジェクトであるためを参照できる経由で直接、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス、コントロールのインスタンスの必要はありません。  
  
 Web パーツを含むページでは、最初の読み込みを制御するときに<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(ブラウズ モード) 既定では。 通常の Web ページの場合と、ユーザーは参照だけですが、するときに、ページは、ブラウズ モードのままです。 使用できる特殊な表示モードのいずれかに、ページを切り替える必要がありますユーザーがページのレイアウト、コントロール、外観、または動作をカスタマイズする場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例を使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>フィールド プログラムを使用します。 コードは、ここでは、参照、デザインがサポートされている表示モードでのドロップダウン リストを設定します。 いることを確認、`Page_PreRender`メソッドは、コードのチェックするかどうか、現在<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>プロパティに設定されて<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>します。 そうである場合`Label1`、表示される、存在しない場合`Label1`は表示されません。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/CS/wpmgrBrowseDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_BrowseDisplayMode/VB/wpmgrBrowseDisplayModevb.aspx#1)]  
  
 ブラウザーでページの読み込み後は、既定ではブラウズ モードでは。 ブラウズ モードであることを示すページ上のラベルに注意してください。 ドロップダウン リスト コントロールを使用して、ページをデザイン モードに切り替えます。 内のコードにより、いることを確認、`Page_PreRender`メソッド、ラベルが非表示します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Web パーツのページ表示モード</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>接続に関係する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールをチェックし、こうしたコントロールを接続できるかどうかを判断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>メソッドを使用して、2 つかどうかを判断<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを接続できます。 通常、メソッドは呼び出しの前に、条件の確認として使用、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッド。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>メソッドは、2 つのコントロールが接続を構成する前に満たす必要がある条件の数を確認します。 接続を行うための主な条件を次に示します。 メソッドを返しますのかどうかは、これらすべての条件 (およびその他の内部条件) が満たされた、`true`コントロールを接続できることを意味します。  
  
-   プロバイダーとコンシューマー コントロールにすることはできません`null`、およびによって参照されるコントロールのコレクションに含める必要がありますが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>プロパティ。  
  
-   プロバイダーとコンシューマーは、同じコントロールをすることはできません。 つまり、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールがそれ自体に接続できません。  
  
-   <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>プロバイダーとコンシューマーの両方のオブジェクト (接続ポイント) にすることはできません`null`します。  
  
-   プロバイダーとコンシューマーを閉じることができません (どちらのコントロールの<xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A>プロパティできる`true`)。  
  
-   <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>接続ポイントのコントロールのプロパティがコンシューマーとプロバイダーの両方のコントロールの種類と一致する必要があります。  
  
-   接続ポイントをどちらも有効にする必要があります (その<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>メソッドどちらも返す必要があります`true`)。  
  
-   独自に指定されているものよりもより多くの接続を形成する各接続ポイントを試行しない必要があります<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティ。  
  
-   場合、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクト (トランスフォーマー) は互換性のないコントロールの接続に必要なことはできません`null`します。 ただし場合のコントロールに互換性が既にトランスフォーマーあります`null`します。  
  
-   トランスフォーマーを使用する場合で参照する必要があります、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>コレクション。  
  
-   トランスフォーマーを使用する場合に、2 つのコントロール間のデータを変換できるように、プロバイダーとコンシューマーと互換性のあるインターフェイスが必要です。 セカンダリ インターフェイスのコンシューマーとプロバイダーは、互換性のある必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">コントロールを接続したときに、<paramref name="consumer" /> にデータを提供するコントロール。</param>
        <param name="providerConnectionPoint"><paramref name="provider" /> が接続に関与できるようにする <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />。</param>
        <param name="consumer">コントロールを接続したときに、<paramref name="provider" /> からデータを受け取るコントロール。</param>
        <param name="consumerConnectionPoint"><paramref name="consumer" /> が接続に関与できるように、コールバック メソッドとして機能する <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />。</param>
        <summary>コンシューマー コントロールとプロバイダー コントロールが互換性のあるインターフェイスを持ち、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> オブジェクトが不要な場合に、接続に関係する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> コントロールをチェックし、こうしたコントロールを接続できるかどうかを判断します。</summary>
        <returns><paramref name="provider" /> と <paramref name="consumer" /> を接続できるかどうかを示すブール値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して接続を`provider`と`consumer`両方のコントロール ポイントの種類、互換性のある接続しているときにできるように、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトは必要ありません。 このメソッドを使用して、2 つのコントロールを呼び出す前に接続できることを確認する<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>プログラムによる接続を作成します。  
  
 このオーバー ロードと同じ実装を使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>トランスフォーマーをこのオーバー ロードが必要ないことをする唯一の例外で、メソッドのオーバー ロードします。  
  
   
  
## Examples  
 次のコード例では、このメソッドを使用する方法を示します。  
  
 コード例では、4 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   2 つのカスタムを含む Web ページ<xref:System.Web.UI.WebControls.WebParts.WebPart>接続できるコントロール、`<asp:webpartmanager>`要素、およびいくつかのイベント処理コードを使用して接続を作成する、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>メソッド。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、およびカスタム インターフェイスです。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 コード例の最初の部分は、表示モードを変更するユーザー コントロールです。 ユーザー コントロールのソース コードの例のセクションから取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 表示モードとユーザー制御のしくみの詳細については、次を参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 Web ページの宣言型マークアップを含む`Register`ユーザー コントロールとカスタム コントロールの両方のディレクティブ。 `<asp:webpartmanager>`要素、`<asp:webpartzone>`カスタムのコントロールを格納する要素と`<asp:connectionszone>`要素。 インシデントを`Page_Load`メソッド、コードをチェックするかどうか、接続できると、そうである場合、プロバイダー、コンシューマー、および、各接続ポイントを定義し、によって参照される静的な接続のセットに新しい接続を追加<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>プロパティ。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 例では、3 番目の部分では、コントロールのソース コードを示します。 インターフェイスと 2 つのカスタムが含まれている<xref:System.Web.UI.WebControls.WebParts.WebPart>制御する場合に、プロバイダー、およびその他のコンシューマーとして機能する 1 つ。 互換性のある接続ポイントがあるため (それらの両方を認識、`IZipCode`インターフェイス)、トランスフォーマーが接続を確立する必要はありません。 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/ZipCodeComponent.vb#2)]  
  
 ブラウザーで Web ページが読み込まれた後にをクリックして、**表示モード**ドロップダウン リスト コントロールと選択**Connect**接続モードをページに切り替えます。 接続モードの使用、`<asp:connectionszone>`コントロール間の接続を作成するための要素。 接続モードのタイトル バーの下向き矢印をクリックして、**郵便番号/ZIP Code**の動詞メニューをアクティブに制御し、 **Connect**します。 接続ユーザー インターフェイス (UI) が表示されたらに含まれているコードによって、接続が作成されたことに注意してください、`Page_Load`メソッド。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="CanConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool&#xA;override this.CanConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; bool" Usage="webPartManager.CanConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">コントロールを接続したときに、<paramref name="consumer" /> にデータを提供するコントロール。</param>
        <param name="providerConnectionPoint"><paramref name="provider" /> が接続に関与できるように、コールバック メソッドとして機能する <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />。</param>
        <param name="consumer">コントロールを接続したときに、<paramref name="provider" /> からデータを受け取るコントロール。</param>
        <param name="consumerConnectionPoint"><paramref name="consumer" /> が接続に関与できるように、コールバック メソッドとして機能する <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />。</param>
        <param name="transformer">互換性のない <paramref name="provider" /> と <paramref name="consumer" /> の接続を可能にする <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</param>
        <summary>接続に関係する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールをチェックして、こうしたコントロールが接続可能かどうかを判断し、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> オブジェクトを使用して互換性のないコンシューマーとプロバイダーの間に接続を作成します。</summary>
        <returns><paramref name="provider" /> と <paramref name="consumer" /> で接続を構成できるかどうかを示すブール値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して接続を`provider`と`consumer`両方のコントロール ポイントの種類、互換性のない接続しているときにできるように、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトが必要です。 このメソッドを使用して、2 つのコントロールを呼び出す前に接続できることを確認する<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>プログラムによる接続を作成します。  
  
 このオーバー ロードと同じ実装を使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>トランスフォーマーが必要であるこのオーバー ロードされている唯一の例外で、メソッドのオーバー ロードします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatalogDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CatalogDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ CatalogDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable CatalogDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのカタログから Web ページにサーバー コントロールを追加する場合に使用する表示モードを表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>フィールドを参照するカスタム<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>作成されに含まれているオブジェクト、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 これは、静的オブジェクトであるためを参照できる経由で直接、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス、コントロールのインスタンスの必要はありません。  
  
 ページを切り替えることができます、ユーザーは、サーバー コントロールのカタログが使用可能な場合は、ページにコントロールを追加する場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> (カタログ モード) と、カタログ ユーザー インターフェイス (UI) が表示されます。 Web パーツのカタログの UI がによって提供される、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>コントロールをゾーンします。 開発者は、デザイン時に、ページにこのゾーンを追加し、ユーザーが実行時に、ページへのそれらのコントロールを追加できるようにサーバー コントロールをゾーンに追加します。 開発者がこれらのコントロールを追加後カタログ モードを有効にするために必要なコントロールがあるため、カタログのモード ページのサポートされている表示モードになります。  
  
 場合、モード、ゾーンおよび表示される場合は、それに追加されたすべてのサーバー コントロールのカタログ ページを切り替えるし、ユーザーは、ページを追加またはコントロールをページから削除するカタログからコントロールを選択することができます。 コントロールをページに追加されていますが後、は、通常のブラウズ モードで表示され、ページが更新されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>フィールド プログラムを使用します。 コードでは、参照、設計、およびカタログをここでは、ページのサポートされている表示モードのドロップダウン リストを生成します。 カタログのモードがのために使用できる、`<asp:CatalogZone>`要素と、Web ページでは、その子要素。 いることを確認、`Page_PreRender`メソッドは、コードのチェックするかどうか、現在<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>プロパティに設定されて<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>します。 そうである場合`Label1`、表示される、存在しない場合`Label1`は表示されません。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/CS/wpmgrCatalogDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CatalogDisplayMode/VB/wpmgrCatalogDisplayModevb.aspx#1)]  
  
 ブラウザーでページの読み込み後は、既定ではブラウズ モードでは。 ページ上のラベルを非表示にすることを確認します。 ドロップダウン リスト コントロールを使用して、ページをカタログのモードに切り替えます。 内のコードにより、いることを確認、`Page_PreRender`メソッドをラベルが表示されるようになりました。 カタログでコントロールを選択でき、ページ上の 2 つのゾーンのいずれかに追加することができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Web パーツのページ表示モード</related>
      </Docs>
    </Member>
    <Member MemberName="CheckRenderClientScript">
      <MemberSignature Language="C#" Value="protected virtual bool CheckRenderClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CheckRenderClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CheckRenderClientScript () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CheckRenderClientScript();" />
      <MemberSignature Language="F#" Value="abstract member CheckRenderClientScript : unit -&gt; bool&#xA;override this.CheckRenderClientScript : unit -&gt; bool" Usage="webPartManager.CheckRenderClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ブラウザーから要求を行う機能および <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" /> プロパティの値をチェックし、クライアント スクリプトを表示するかどうかを判断します。</summary>
        <returns>クライアント スクリプトを表示するかどうかを示すブール値。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="CloseProviderWarning">
      <MemberSignature Language="C#" Value="public virtual string CloseProviderWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CloseProviderWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CloseProviderWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CloseProviderWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CloseProviderWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>接続で他のコントロールに対するプロバイダーとして動作しているコントロールをユーザーが終了すると表示される警告を取得または設定します。</summary>
        <value>警告メッセージが含まれた文字列。 既定値は、.NET Framework が提供するカルチャ固有のメッセージです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーが閉じたときに、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを通常メッセージは表示されません。 詳細コントロールを終了する意味については、次を参照してください。、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>メソッド。  
  
 ただし、コントロールは、別のコントロールに接続されているし、データを他のコントロールのプロバイダーとして機能している、ユーザーがコントロールを終了しようとしたときの既定の警告メッセージでは表示します。 メッセージは、プロバイダー コントロールがされる閉じるには、コンシューマーが使用する任意のデータがあるなくなると、このプロバイダに制御することを意味が接続されているユーザーに指示します。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>プロパティにより、開発者は、ユーザーに表示される警告メッセージをカスタマイズします。  
  
 ページの開発者によって、空または null の文字列値がこのプロパティに割り当てられる場合の警告メッセージ ボックスは表示されませんユーザーが閉じたときに、<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーであるコントロール。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>ユーザーにカスタムの警告を表示するプロパティ。  
  
 コード例では、4 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールとカスタム インターフェイスです。  
  
-   2 つのカスタムを含む Web ページ<xref:System.Web.UI.WebControls.WebParts.WebPart>接続できるコントロールと`<asp:webpartmanager>`要素。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 次のコードには、例の Web ページの部分のみが含まれています。 カスタム ユーザー コントロールも必要になり、カスタム コントロールのソース コードは上記のようにします。 セクションの例から、これら 2 つの項目を取得、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。  
  
 次の Web ページ コードは、カスタムの警告メッセージを割り当てる方法を示して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>プロパティの宣言型マークアップで、`<asp:webpartmanager>`要素。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseProviderWarning/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 ブラウザーで Web ページが読み込まれた後にをクリックして、**表示モード**ドロップダウン リスト コントロールと選択**Connect**接続モードをページに切り替えます。 接続モードの使用、`<asp:connectionszone>`コントロール間の接続を作成するための要素。 接続モードのタイトル バーの下向き矢印をクリックして、**郵便番号/ZIP Code**の動詞メニューをアクティブに制御し、 **Connect**します。 接続ユーザー インターフェイス (UI) が表示されたら、クリックして、**コンシューマーへの接続を作成する**リンク。 セルには、ドロップダウン リスト コントロールが表示されます。 選択**気象コントロール**ドロップダウン リストをクリックします**Connect** 2 つのコントロールの接続を完了します。 クリックして**閉じる**、しを使用して、**表示モード**ドロップダウン リストに、ページを通常のブラウズ モードに戻ります。 最後に、動詞のメニューをクリックして、**郵便番号/ZIP Code** (プロバイダー コントロールでこの場合は) を制御し、選択**閉じる**します。 カスタム メッセージに割り当てられている、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>プロパティが表示されます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="CloseWebPart">
      <MemberSignature Language="C#" Value="public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.CloseWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.CloseWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart"><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 内の終了する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> コントロールまたはサーバー コントロール。</param>
        <summary>Web ページ上に表示されなくても再度開くことができる方法で <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>メソッドの削除、<xref:System.Web.UI.WebControls.WebParts.WebPart>またはその他のサーバー コントロールを最初に含まれている Web ページには表示されません。 閉じたコントロールに追加されます、<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>オブジェクトでは、閉じたコントロールへの参照を保持し、ページを復元するコントロールを可能になります。 閉じている<xref:System.Web.UI.WebControls.WebParts.WebPart>によって参照されるコレクションにコントロールが表示されたまま、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>プロパティ。  
  
 コントロールの終了は、削除すると異なります。 閉じたコントロールは、ページ復元を引き続き使用できますが、削除されたコントロールのインスタンスは完全に削除しは復元できません。 かどうかに関係なく、<xref:System.Web.UI.WebControls.WebParts.WebPart>またはサーバー コントロールが (ページのマークアップで宣言) 静的または動的 (追加のページにプログラムから、またはユーザーが Web パーツのカタログから)、終了して、ページで再度開くことがあります。  
  
 通常、ユーザーが閉じることができます、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール動詞メニューをクリックして close 動詞を選択します。 直接呼び出すことによって、コントロールを終了することも、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>メソッドへの参照を渡すと`webPart`します。  
  
 ページで、<xref:System.Web.UI.WebControls.WebParts.WebPart>開発者を宣言する場合のコントロールが閉じられた、`<asp:catalogzone>`要素内に次のように追加します。、`<asp:pagecatalogpart>`ユーザー実行時に終了したコントロールをページに復元するためのシンプルなユーザー インターフェイス (UI) を提供しますが、要素。 ユーザーを使用して、ページをカタログの表示モードに切り替えることができは閉じたコントロールがページ カタログ内に表示されます。 ユーザーは閉じたコントロールを選択し、追加の任意の位置のページに戻ると、し、選択したコントロールがページに復元され、通常どおり描画します。  
  
 ときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>メソッドが呼び出されると、いくつかのイベントが発生: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> (があるかどうかがあります複数のコントロール)、および<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>(接続されているコントロールがある) 場合。 通常開発者がこれらのイベントをキャンセルできますが、場合によってはキャンセルすることです。 詳細については、ドキュメントを参照して、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>、および<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>イベント。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> メソッドの使用方法を示します。  
  
 コード例では、4 つの部分があります。  
  
-   ユーザー コントロールのページ表示モードを変更することができます。  
  
-   カスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
-   Web ページ。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 コード例の最初の部分は、表示モードを変更するユーザー コントロールです。 ユーザー コントロールのソース コードの例のセクションから取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 表示モードとユーザー制御のしくみの詳細については、次を参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 コード例の 2 番目の部分はカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 この例は、動的コンパイルの方法を使用してください。したがってありません`Assembly`属性、 `Register` Web ページの上部にあるこのコントロールのディレクティブ。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/textdisplaywebpart.vb#3)]  
  
 コード例の 3 番目の部分は、Web ページです。 ページが含まれています、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>ゾーンで、<`asp:pagecatalogpart>`内に要素が宣言されています。 これは、閉じたに含められるものは<xref:System.Web.UI.WebControls.WebParts.WebPart>を制御し、ページに追加するユーザーを有効にします。 `Button1_Click`メソッドを直接呼び出す、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>カスタムを閉じる方法<xref:System.Web.UI.WebControls.WebParts.WebPart>動詞メニューを使用してコントロールを閉じることも、ユーザーが、制御します。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/CS/closeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_CloseWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CloseWebPart/VB/closeWebPartVB.aspx#1)]  
  
 ブラウザーでページの読み込み後閉じますカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、コントロールのヘッダーの動詞メニュー (矢印) をクリックして**閉じます**します。 今すぐページを選択してカタログ モードに変更**カタログ**で、**表示モード**ドロップダウン リスト コントロール。 終了したコントロールがページのカタログが表示されます。 終了したコントロールの横にあるチェック ボックスを選択して、**追加**クリックして、ページに追加する**閉じる**ブラウズ モードをページに戻します。 コントロールがページに復元されます。 今すぐ閉じてをもう一度クリックして、 **web パーツを閉じる**ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> が <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> コレクション内にありません。  
  
または 
 <paramref name="webPart" /> は共有コントロールで、別のユーザーによって既に終了されています。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ConnectDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ ConnectDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable ConnectDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール間の接続を管理するための特殊なユーザー インターフェイス (UI) を表示する場合に使用する表示モードを表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>フィールドを参照するカスタム<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>作成されに含まれているオブジェクト、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 これは、静的オブジェクトであるためを参照できる経由で直接、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス、コントロールのインスタンスの必要はありません。  
  
 ユーザーがの間の接続を管理する<xref:System.Web.UI.WebControls.WebParts.WebPart>Web ページでは、コントロールの場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>ゾーンは、ページで宣言されていますにページを切り替えることができますが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>モード。 Connect 表示モードには、接続またはコントロールを切断して、既存の接続の詳細を編集する機能がありますが、接続を管理するための特別な UI が表示されます。  
  
 宣言する必要があります、Web パーツ コントロール セットによって提供される UI を使用した接続を管理する機能をユーザーに提供するかどうか、`<asp:connectionszone>`ページのマークアップ内の要素。 他の種類の要素とは異なり<xref:System.Web.UI.WebControls.WebParts.WebZone>ゾーンでは、この要素内の他の任意のタグを追加する必要はありません。 単独で、要素を宣言するだけです。  
  
   
  
## Examples  
 次のコード例は、の使用を示して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>モード。  
  
 コード例では、3 つの部分があります。  
  
-   インターフェイスとユーザー設定を含むソース ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの接続を形成することができます。  
  
-   接続 UI の提供の操作を示す Web ページ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>モード。  
  
-   例を実行する方法について説明します。  
  
 コード例の最初の部分は、インターフェイスと 2 つのカスタムを含むソース ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを接続できるように設計されています。 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例では、動的コンパイルの方法を使用します。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ZipCodeComponent.vb#2)]  
  
 例では、2 番目の部分は、カスタム コントロールをホストする Web ページです。 サーバー内で`<script>`タグ ページでは、ページの表示モードのドロップダウン リストを設定するいくつかのメソッド。 ユーザーは、これらのページの表示モードを変更するドロップダウン リストから選択できます。 使用可能な表示モードのいずれかが表示モードでは、接続、`<asp:connectionszone>`要素がページのマークアップで宣言されています。 この要素に、その他の子要素が含まれていないことに注意してください。ユーザーの接続の管理 UI を有効にする場合にのみ存在します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>モードはこの例では、2 つの場所に表示されます。 最初に、`Page_Init`メソッド、connect 表示モードに追加されます、表示モードのドロップダウン リストとして、コードで参照されるコレクションをループ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>プロパティ。 第二に、`Page_PreRender`メソッドは、ページで、現在の表示モードを確認します。 現在のモードの場合と<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>、でメッセージが表示されます、<xref:System.Web.UI.WebControls.Label>コントロール。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/CS/ConnectDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectDisplayMode/VB/ConnectDisplayModeVB.aspx#1)]  
  
 ドロップダウン リストをクリックし、選択、ブラウザーでページの読み込み後**Connect** connect 表示モードに切り替えるにします。 メッセージが表示し、という表示モードを接続、ページがあることに注意してください。 動詞メニュー (矢印) のいずれかのタイトル バーでクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、およびクリック**接続**動詞メニュー。 接続を作成するリンクをクリックして、接続した後で、UI が表示されます。 接続に表示される UI 内でのドロップダウン リストを使用して、その他のコントロールは、接続に参加し、をクリックを選択、 **Connect**ボタンをクリックします。 接続が確立されているとします。 をクリックして、**閉じる**ボタンをクリックし、表示モードを参照するページを返すため、ページの上部にあるドロップダウン リストを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Web パーツのページ表示モード</related>
      </Docs>
    </Member>
    <Member MemberName="Connections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ Connections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページ上の現在の接続すべてのコレクションへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" /> オブジェクトのセットが格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>プロパティは、ページ上の接続の現在のセットにアクセスする方法を提供します。 コレクション自体が読み取り専用、およびコレクションから特定の接続を操作する開発者が使用する必要があります<xref:System.Web.UI.WebControls.WebParts.WebPartManager>などのメソッド<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>と<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>します。  
  
   
  
## Examples  
 次のコード例に示しますの宣言とプログラムの使用、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。  
  
 コード例では、4 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   2 つのカスタムを含む Web ページ<xref:System.Web.UI.WebControls.WebParts.WebPart>接続できるコントロールと`<asp:webpartmanager>`要素。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールとカスタム インターフェイスです。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 次のコードには、例の Web ページの部分のみが含まれています。 カスタム ユーザー コントロールも必要になり、カスタム コントロールのソース コードは上記のようにします。 セクションの例から、これら 2 つの項目を取得、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。  
  
 次の Web ページ コードが使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>プロパティ ページで現在の接続の数を取得するには、プログラムを使用します。 いることを確認、`<script>`タグのセクションでは、2 つのイベントを処理するコード、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>へのアクセスを制御、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>プロパティ数を取得します。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/CS/webpartmanagerConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SimpleConnection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SimpleConnection/VB/webpartmanagerConnectionVB.aspx#1)]  
  
 ブラウザーで Web ページが読み込まれた後にをクリックして、**表示モード**ドロップダウン リスト コントロールと選択**Connect**接続モードをページに切り替えます。 接続モードの使用、`<asp:connectionszone>`コントロール間の接続を作成するための要素。 接続モードのタイトル バーの下向き矢印をクリックして、**郵便番号/ZIP Code**の動詞メニューをアクティブに制御し、 **Connect**します。 接続ユーザー インターフェイス (UI) が表示されたら、クリックして、**コンシューマーへの接続を作成する**リンク。 セルには、ドロップダウン リスト コントロールが表示されます。 選択**気象コントロール**ドロップダウン リストをクリックします**Connect** 2 つのコントロールの接続を完了します。 クリックして**閉じる**、しを使用して、**表示モード**ドロップダウン リストに、ページを通常のブラウズ モードに戻ります。 ラベルは、接続の数とのようになりましたが表示されるに注意してください。<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 今すぐにコントロールするのには接続モードと、2 つの切断、ブラウズ モードに戻ると返された場合は、ラベルのコンテンツを更新する必要があり、接続ことはありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivated">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivated;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivated : EventHandler " Usage="member this.ConnectionsActivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページ上の現在の Web パーツ接続すべてが接続され、さらにそれぞれの接続に関係するコンシューマー コントロールとプロバイダー コントロールの間にアクティブなデータの共有が開始された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接続の有効期間、このイベントには、ページの読み込みプロセスの完了後に発生します。 後にも発生、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>イベントで、このことを示すだけ、<xref:System.Web.UI.WebControls.WebParts.WebPart>または特定の接続に関連するサーバー コントロールが正常に接続されています。 場合は、ページ上の複数の接続が、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>メソッドは、ページ上のすべての有効な Web パーツ接続がアクティブになりデータを共有することを示します。 すべての接続がアクティブなことを知ること、開発者を実行できます任意の数をすべての接続の状態のユーザーに通知を含むタスクの処理し、プロバイダーからのデータが表示され具合にコンシューマー コントロールに通知します。  
  
 このイベントが関連付けられている、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>メソッドでは、イベントを発生させるし、イベントのカスタム ハンドラーを作成できます。  
  
 ページの開発者は、追加することで、イベントのカスタム ハンドラーを作成できます、`OnConnectionsActivated`属性を`<asp:webpartmanager>`内の要素 ページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionsActivating">
      <MemberSignature Language="C#" Value="public event EventHandler ConnectionsActivating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ConnectionsActivating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ConnectionsActivating As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ConnectionsActivating;" />
      <MemberSignature Language="F#" Value="member this.ConnectionsActivating : EventHandler " Usage="member this.ConnectionsActivating : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページ上で確立されたすべての Web パーツ接続をアクティブにするプロセスを実行しているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページの読み込みプロセスの直前に完了は、接続のライフ サイクルでこのイベントが発生、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>メソッドが呼び出されます。 異なる、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>イベントで、特定の接続の間では、<xref:System.Web.UI.WebControls.WebParts.WebPart>または他のサーバー コントロール。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>イベント、ページ上のすべての可能な接続が接続されているがアクティブ化するときに発生します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>イベントが関連付けられている、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>メソッド、イベントを発生させます。 コントロール開発者がページに追加できる接続の種類を拡張する場合、保護されたオーバーライド<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>メソッドおよびその他の種類の接続をアクティブ化します。  
  
 ページの開発者は、追加することで、イベントのカスタム ハンドラーを作成できます、`OnConnectionsActivating`属性を`<asp:webpartmanager>`内の要素 ページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectWebParts">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内に存在する 2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> コントロール (または、接続を構成できるその他のサーバー コントロール) の間に接続を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッドは、任意の 2 つの間の接続を形成<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを接続することができます。 接続を作成するには、このメソッドを呼び出す前にすることもを呼び出す、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>条件の確認、コントロールが接続の構成の要件を満たしていることを確認するメソッド。  
  
> [!NOTE]
>  2 つのサーバー コントロール間の接続を作成することも<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 カスタム サーバー コントロールに 2 つのコントロールが、一般に、(から継承するコントロールなど、<xref:System.Web.UI.WebControls.WebControl>または既存の ASP.NET サーバー コントロール) に必要なメンバーを追加することができるようにします。 次に示す要件を満たすために、コントロールにもなります。  
  
 任意の種類の 2 つのコントロール間の接続シナリオでは、接続するのには、次の要件を満たす必要があります。  
  
-   各コントロールが存在する、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン (同じゾーンを指定するは必要ありません)。  
  
-   接続のプロバイダー コントロールがあり、プロバイダーにコールバックとして機能するパブリック メソッドとしてインターフェイスを実装して、Web パーツ コントロール セットに実装された、`ConnectionProvider`プロバイダー接続として識別するメソッドのメタデータ属性ポイント。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>取得プロバイダー コネクション ポイントが仮想メソッドは、派生<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールとは限りませんが、同じメタデータ属性を使用します。  
  
-   、、Web パーツ コントロール セットに実装された接続でコンシューマー コントロールも、プロバイダーのコールバック メソッドで公開されるインターフェイスへの参照を取得することができる特殊なメソッドがあり、コンシューマー、`ConnectionConsumer`メタデータ属性コンシューマー接続として識別するメソッドをポイントします。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>取得コンシューマー接続ポイントが仮想メソッドは、派生<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールとは限りませんが、同じメタデータ属性を使用します。  
  
-   コールバック メソッドは互換性のあるにあるか、プロバイダーのコールバック メソッドが (つまり、コンシューマーとプロバイダー データを共有できます直接)、または開発者に提供されているインターフェイスを使用する必要があります、コンシューマーの種類を使用できますが、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトをプロバイダーからのデータをコンシューマーが使用できる形式に変換します。  
  
    > [!IMPORTANT]
    >  トランスフォーマーを使用する必要はありません、ときに使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>メソッドのオーバー ロードします。 トランスフォーマーが必要なときに使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>メソッドのオーバー ロードします。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint);" />
      <MemberSignature Language="F#" Value="member this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
      </Parameters>
      <Docs>
        <param name="provider">接続されたもう一方のコントロールにデータを提供する役割を持つ <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール。</param>
        <param name="providerConnectionPoint">接続のコールバック メソッドとして機能するメソッド。 Web パーツ コントロール セットに実装するときに、<paramref name="provider" /> のパブリック メソッドを <see langword="ConnectionProvider" /> メタデータ属性でマークします。</param>
        <param name="consumer"><paramref name="provider" /> からデータを受け取り、それを処理するか表示する役割を持つ <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール。</param>
        <param name="consumerConnectionPoint"><paramref name="providerConnectionPoint" /> に接続し、接続のデータを受け取るメソッド。 Web パーツ コントロール セットに実装するときに、<paramref name="consumer" /> のパブリック メソッドを <see langword="ConnectionConsumer" /> メタデータ属性でマークします。</param>
        <summary>コントロールへの参照とその指定された <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> オブジェクトだけを使用して、2 つの <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールまたは <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> コントロールの間に接続を作成します。</summary>
        <returns>接続に必要なプロバイダーとコンシューマーに関するさまざまな情報が格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このオーバー ロードは、接続ポイントは使用しないで接続できることを十分に互換性のあるときにコントロールを接続するために使用する<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクト。 メソッドのこのオーバー ロードが呼び出されると、単に渡し、メソッドの他のオーバー ロードされたバージョンへの呼び出し、渡します`null`パラメーターが必要なため、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクト。  
  
 2 つのコントロールをプログラムで接続しようとしたときに使用できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>コントロールを直接接続するかどうかを決定する条件の確認メソッド。  
  
   
  
## Examples  
 次のコード例では、このメソッドを使用してプログラムで接続を作成する方法を示します。 完全なコード例を実行するために必要なセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 この例から必要があります ページで、表示モードを変更できるようにするユーザー コントロールのソース コードとソース コードの 2 つのカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
 2 つをホストする Web ページのコードでは、次の手順を制御します。 ページを使用して`Register`ディレクティブを先頭に、ユーザー コントロールとカスタム コントロールを宣言します。 カスタム コントロールは、参照されている宣言内で、`<asp:webpartzone>`要素。 処理するコード、`Button1_Click`メソッドを使用してコントロール間の接続を作成し、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッド。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/CS/wpmgrConnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ConnectWebParts1/VB/wpmgrConnectWebPartsVB.aspx#1)]  
  
 ブラウザーでページを読み込んだ後、 **web パーツ コントロールの接続**接続を形成するボタンをクリックします。 テキスト ボックスで、一部のデータを入力し、クリックしたことができますし、 **5 桁の郵便番号/ZIP Code の入力**コントロールを接続すると、2 つ目の最初のコントロールで入力したデータが更新されることを示すボタン。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">動的接続の <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールのコレクションが読み取り専用です。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectWebParts">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts(class System.Web.UI.WebControls.WebParts.WebPart provider, class System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPart consumer, class System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, class System.Web.UI.WebControls.WebParts.WebPartTransformer transformer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartConnection ^ ConnectWebParts(System::Web::UI::WebControls::WebParts::WebPart ^ provider, System::Web::UI::WebControls::WebParts::ProviderConnectionPoint ^ providerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPart ^ consumer, System::Web::UI::WebControls::WebParts::ConsumerConnectionPoint ^ consumerConnectionPoint, System::Web::UI::WebControls::WebParts::WebPartTransformer ^ transformer);" />
      <MemberSignature Language="F#" Value="abstract member ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection&#xA;override this.ConnectWebParts : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ProviderConnectionPoint * System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint * System.Web.UI.WebControls.WebParts.WebPartTransformer -&gt; System.Web.UI.WebControls.WebParts.WebPartConnection" Usage="webPartManager.ConnectWebParts (provider, providerConnectionPoint, consumer, consumerConnectionPoint, transformer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="providerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <Parameter Name="consumer" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="consumerConnectionPoint" Type="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <Parameter Name="transformer" Type="System.Web.UI.WebControls.WebParts.WebPartTransformer" />
      </Parameters>
      <Docs>
        <param name="provider">接続されたもう一方のコントロールにデータを提供する役割を持つ <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール。</param>
        <param name="providerConnectionPoint"><see langword="ConnectionProvider" /> メタデータ属性でマークされ、接続のコールバック メソッドとして機能する、<paramref name="provider" /> のパブリック メソッド。</param>
        <param name="consumer"><paramref name="provider" /> または <paramref name="transformer" /> からデータを受け取り、それを処理するか表示する役割を持つ <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール。</param>
        <param name="consumerConnectionPoint"><see langword="ConnectionConsumer" /> メタデータ属性でマークされ、<paramref name="consumer" /> と接続して接続のデータを受け取る、<paramref name="providerConnectionPoint" /> のパブリック メソッド。</param>
        <param name="transformer"><paramref name="provider" /> のデータを <paramref name="consumer" /> が処理できる形式に変換することにより、2 つのコントロールを接続できるようにする <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />。</param>
        <summary>コントロールへの参照、指定された <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> オブジェクト、および <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> オブジェクトを使用して、2 つの <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> コントロールまたは <see cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" /> コントロール間の接続を作成します。</summary>
        <returns>接続に必要なプロバイダー、コンシューマー、およびトランスフォーマーに関する情報が格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このオーバー ロードを使用して、その接続ポイントは互換性がない場合にコントロールを接続します。 非互換性が発生したときに`consumer`よりもさまざまなインターフェイスを実装して`provider`の接続ポイントとして。 トランスフォーマーによって認識できる型にデータを変換する`consumer`します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">接続が既に <see cref="E:System.Web.UI.Control.PreRender" /> でアクティブになっています。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Connections" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartTransformer" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページ上の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内にあり、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> コントロールによって管理される、すべての <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロール、サーバー コントロール、またはユーザー コントロールのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.ControlCollection" /> コントロールによって管理されるすべてのコントロールが格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>プロパティによって参照されている他のコントロールを参照していません、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールなど、さまざまなゾーン コントロール、<xref:System.Web.UI.WebControls.WebParts.EditorPart>または<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、およびその他のユーザー。  
  
 Web パーツ コントロール セットによって、コードから呼び出されるものではありません、ほとんどの開発状況で、このプロパティが使用されます。 このため、プロパティは public で非表示にされて intellisense。 コレクションにアクセスする開発者向け<xref:System.Web.UI.WebControls.WebParts.WebPart>または他のサーバー コントロールによって管理される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールで使用するその<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="CopyWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart CopyWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ CopyWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.CopyWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.CopyWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">コピー対象の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはサーバー コントロール。</param>
        <summary>Web ページに <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはサーバー コントロールを追加するためにこうしたコントロールのコピーを作成する場合に、Web パーツ コントロール セットで使用されます。</summary>
        <returns>ページに追加される <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出すことはできません、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>コードから直接メソッド。 このメソッドの呼び出しによって内部的に、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>新しい動的な追加のプロセスの一部としてコントロール<xref:System.Web.UI.WebControls.WebParts.WebPart>またはサーバー コントロールをページ。 ダイナミック コントロールに追加されますページ プログラムまたは Web パーツのユーザー インターフェイス (UI) を使用など、ページのマークアップで直接宣言されている静的コントロールではなく、コントロールのカタログからコントロールを追加するユーザー。  
  
> [!NOTE]
>  メソッドは、開発者は、その他のコントロールのシナリオのコピーを処理するメソッドを有効にする場合、派生クラスでオーバーライドできます。 詳細については、継承クラスのセクションに、ノートを参照してください。  
  
 新しいダイナミック コントロールは追加されたときにある場合、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>メソッドは、コントロールの新しいインスタンスを返します。 追加するコントロールが他の種類 (ユーザー コントロール、カスタム コントロールを ASP.NET コントロールなど) のサーバー コントロールの場合は、コントロールは既にラッピングされていると、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Web パーツ コントロール セットによってオブジェクト。 ときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>メソッドを検出した、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 、コントロールの新しいインスタンスを返します、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>内にラップされた子コントロールの新しいインスタンスを持つコントロール。  
  
 ときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>メソッドを返す対象のコントロールの新しいコピーを作成し、既定値にも、すべてのプロパティの値をリセットします。 パーソナル化できるプロパティの値を保持する場合は、新しいコントロール インスタンスにコピーして、呼び出す必要がありますに注意してください、<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A>メソッドもします。 によって実行される最後の手順、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>メソッドを呼び出すには、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>コントロールの新しい ID を取得します。  
  
> [!NOTE]
>  メソッドは、コピーしたコントロールの新しい ID を取得するため、依存しないようにして、元の ID によってページに追加する動的なコントロールを参照しています。 代わりに、メソッドによって返されるコントロールの新しいインスタンスを参照してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>メソッドとして宣言されて<see langword="virtual" />開発者でしたから継承するように、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラス、メソッドをオーバーライドし、でした、コントロールのコピーを作成してでその他のシナリオを提供します。 たとえば、メソッド必要に応じてを受け取ることが入力として XML ファイルにシリアル化されたコントロール。 メソッドは可能性があります (ある場合)、XML を逆シリアル化しての新しいインスタンスを返すと、既存のケースを処理するためには、基本メソッドを呼び出して、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />コントロール。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="CreateAvailableTransformers">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAvailableTransformers () As TransformerTypeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::TransformerTypeCollection ^ CreateAvailableTransformers();" />
      <MemberSignature Language="F#" Value="abstract member CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection&#xA;override this.CreateAvailableTransformers : unit -&gt; System.Web.UI.WebControls.WebParts.TransformerTypeCollection" Usage="webPartManager.CreateAvailableTransformers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TransformerTypeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Web サイトの構成ファイルに指定されているトランスフォーマーのセットを作成し、<see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" /> プロパティで参照されるトランスフォーマーのコレクションにそれを追加します。</summary>
        <returns>Web サイトの構成ファイルで指定されているトランスフォーマーのコレクション。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>このメソッドをオーバーライドして、アプリケーションで使用できるその他のトランスフォーマーを追加します。 たとえば、Web サービスから利用できるトランスフォーマーの一覧を取得する、メソッドを記述できます。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="webPartManager.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Web ページ上の <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールで管理されるすべてのコントロールのコレクションを返します。 このクラスは継承できません。</summary>
        <returns><see cref="T:System.Web.UI.ControlCollection" /> コントロールで管理されるすべてのさまざまな Web パーツ コントロールで構成された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>継承するクラスに表示されるため、このメソッドが保護され、シール、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスが、これをオーバーライドすることはできません。</para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateDisplayModes">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDisplayModes () As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ CreateDisplayModes();" />
      <MemberSignature Language="F#" Value="abstract member CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&#xA;override this.CreateDisplayModes : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="webPartManager.CreateDisplayModes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Web パーツ アプリケーションで使用できるすべての表示モードのセットを作成します。</summary>
        <returns>サポートされているすべての表示モードが格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、特定のページでサポートされている表示モードだけでなく、すべての可能な表示モードの一覧を作成します。 サポートされている表示モードの詳細については、次を参照してください。、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>プロパティ。  
  
 既定では、Web パーツ コントロール セットには、次の Web パーツ ページ上で使用する表示モードのセットが作成されます。  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>  
  
 派生するカスタムのゾーンに付属することがなくまたはで、開発者は、カスタム表示モードを作成できます、<xref:System.Web.UI.WebControls.WebParts.WebZone>または<xref:System.Web.UI.WebControls.WebParts.ToolZone>クラス。 カスタム表示モードを作成するから継承する必要があります、<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>クラスから継承する必要があります、ページのモードのサポートされていると、表示モードを追加して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスをオーバーライド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>メソッド。  
  
 表示モードを使用して追加すると、<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>メソッドを追加ですべてのユーザー インターフェイス (UI) コントロールに表示される順序 (など、<xref:System.Web.UI.WebControls.ListBox>コントロール) をユーザーに提供可能な表示モード、ページ上。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A> メソッドの使用方法を示します。  
  
 コード例では、5 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   その他のコントロールをホストする Web ページ。  
  
-   ユーザー コントロール内にある、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Web ページ上のゾーンを入力し、ラベルのテキストを表示することができます。  
  
-   2 つのコントロールを含むソース コード ファイル。 1 つは、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPartManager>制御、およびその他は、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>ページの既定の表示モードに追加するオブジェクト。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、およびカスタム インターフェイスです。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 コード例の最初の部分は、表示モードを変更するユーザー コントロールです。 ユーザー コントロールのソース コードの例のセクションから取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 表示モードとユーザー制御のしくみの詳細については、次を参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 例では、2 番目の部分は、Web ページです。 2 つが含まれている<xref:System.Web.UI.WebControls.WebParts.WebPartZone>ユーザー コントロール、およびカスタムの両方を制御<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 通知、`Register`ユーザー コントロールとコンパイル済みのコントロールの名前空間を参照するページの上部にあるディレクティブ。  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/createDisplayModeCS.aspx#1)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/createDisplayModeVB.aspx#1)]  
  
 例では、3 番目の部分は、ユーザー コントロールを入力して、テキストを表示するためです。 使用して、 <xref:System.Web.UI.WebControls.MultiView> UI の複数のビューを作成するコントロール。 1 つのビューが表示されます、`Button1`せず、その他のボタンします。 オーバーライドされた`OnPreRender`メソッド、コードを確認かどうか、ページのカスタム表示モードでは現在し、そうである場合は、ボタンを含むユーザー コントロールの最初のビューが表示されます。 ページのページが参照またはデザイン モードである場合の例については、カスタム表示モードでない場合は、ボタンは表示されません。  
  
 [!code-aspx-csharp[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/TextDisplaycs.ascx#2)]
 [!code-aspx-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/TextDisplayvb.ascx#2)]  
  
 例では、4 番目の部分は、2 つのカスタム クラスのソース ファイルです。 注意して、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPartManager>オーバーライド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes%2A>メソッド、および最初に、既定の表示モードでは、追加する基本メソッドを呼び出して、カスタム表示モードを追加し、こと。 カスタム表示モードのクラス、 `InLineEditDisplayMode`、単に継承<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>コンス トラクターの表示モードの名前を設定して、多数のカスタム表示の特性を確立するために基本プロパティをオーバーライドします。  
  
 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/CS/CustomDisplayMode.cs#3)]
 [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_CreateDisplayModes/VB/CustomDisplayMode.vb#3)]  
  
 コード例を実行するには、ブラウザーでページを読み込みます。 ページはブラウズ モードで現在ボタンが表示されていないことに注意してください。 使用して、**表示モード**ドロップダウン リスト コントロール、ページに変更**インライン編集表示**モード、および今後、`Button1`ボタンが下のユーザー コントロールに表示します。 いくつかのテキストを追加し、コントロールを更新するボタンをクリックします。 ブラウズ モードをページの表示が返されますこと、入力したテキストが表示されます、およびページが、カスタム表示モードではなくなったために、もう一度、ボタンが非表示に注意してください。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">チュートリアル: Web パーツ ページ上の表示モードの変更</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicConnectionID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicConnectionID ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicConnectionID() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicConnectionID () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicConnectionID();" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicConnectionID : unit -&gt; string&#xA;override this.CreateDynamicConnectionID : unit -&gt; string" Usage="webPartManager.CreateDynamicConnectionID " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>動的接続の ID として使用される一意の値を取得します。</summary>
        <returns>接続に関する一意の ID を含む文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID%2A>メソッドは、GUID 値を生成し、接続の一意の ID として機能する文字列に変換します。 メソッドは動的な接続が作成されるたびに呼び出されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>開発者は、派生では、このメソッドをオーバーライドできます<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />一意の ID を生成するための実装を変更するにはクラス</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicWebPartID">
      <MemberSignature Language="C#" Value="protected virtual string CreateDynamicWebPartID (Type webPartType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string CreateDynamicWebPartID(class System.Type webPartType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicWebPartID (webPartType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ CreateDynamicWebPartID(Type ^ webPartType);" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicWebPartID : Type -&gt; string&#xA;override this.CreateDynamicWebPartID : Type -&gt; string" Usage="webPartManager.CreateDynamicWebPartID webPartType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="webPartType">ID の生成対象となるコントロールの <see cref="T:System.Type" />。</param>
        <summary>動的な <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの一意の ID を生成します。</summary>
        <returns>コントロールの一意の ID が含まれた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに<xref:System.Web.UI.WebControls.WebParts.WebPart>Web ページにコントロールを追加、(つまり、コントロールがページのマークアップで宣言されている) 静的または動的な (つまりプログラムで追加されます) になることができます。 すべてのシナリオでは場所、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが作成中は、一意の ID を生成するには、このメソッドを呼び出して、ページに追加する新しい動的コントロール  
  
 メソッドは、開発者が ID を生成するためのカスタム実装を提供する場合はように仮想  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPartType" /> は <see langword="null" />です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="CreateErrorWebPart">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart(string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateErrorWebPart (originalID As String, originalTypeName As String, originalPath As String, genericWebPartID As String, errorMessage As String) As ErrorWebPart" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::ErrorWebPart ^ CreateErrorWebPart(System::String ^ originalID, System::String ^ originalTypeName, System::String ^ originalPath, System::String ^ genericWebPartID, System::String ^ errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart&#xA;override this.CreateErrorWebPart : string * string * string * string * string -&gt; System.Web.UI.WebControls.WebParts.ErrorWebPart" Usage="webPartManager.CreateErrorWebPart (originalID, originalTypeName, originalPath, genericWebPartID, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ErrorWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalID" Type="System.String" />
        <Parameter Name="originalTypeName" Type="System.String" />
        <Parameter Name="originalPath" Type="System.String" />
        <Parameter Name="genericWebPartID" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="originalID">失敗するコントロールの ID を含む文字列。 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> がこの失敗に関係する場合、ID はその子サーバー コントロールの ID です。</param>
        <param name="originalTypeName">失敗したコントロールの <see cref="T:System.Type" /> の名前を示す文字列。 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> がこの失敗に関係する場合、型名はその子サーバー コントロールの型名です。</param>
        <param name="originalPath">子ユーザー コントロールを格納する <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> がこの失敗に関係する場合、ユーザー コントロールへのパスを含む文字列。</param>
        <param name="genericWebPartID">その型のコントロールがコントロールの読み込みまたは作成の失敗に関係する場合、<see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> の ID を返す文字列。</param>
        <param name="errorMessage">ページ上に表示するエラー メッセージを含む文字列。</param>
        <summary>動的な <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを読み込むか作成しようとして何らかの理由で失敗したときに、ページに挿入してエンド ユーザーに表示する特別なコントロールを作成します。</summary>
        <returns>読み込みまたは作成に失敗したコントロールの代わりにページに挿入する <see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A> Web パーツ コントロール セットの試行の読み込みまたは動的なのインスタンスを作成するときに、メソッドが呼び出された<xref:System.Web.UI.WebControls.WebParts.WebPart>またはサーバー コントロール、およびそのいくつかの理由で失敗します。 このメソッドを作成、<xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>オブジェクトをエラー メッセージを割り当てるし、それを返します。 <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>コントロールは、失敗したコントロールの代わりに挿入され、ページ上のエラー メッセージが表示されます。  
  
 呼び出すことはできません、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart%2A>コードから直接メソッド。 ただしから継承することができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスおよびメソッドを拡張します。 詳細については、継承クラスのセクションのノートを参照してください。  
  
 エンドユーザーが使用できる、<xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>制御ページで多く存在している場合、通常のような<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 エラー メッセージを削除するに、コントロールを追加する時点で、close 動詞をクリックして、コントロールを閉じることができますが、<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>閉じられた他のコントロールなどのオブジェクト。 エンド ユーザーを削除した場合、<xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>コントロール、読み込みに失敗したサーバー コントロールは、ページからも削除されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>返される情報をカスタマイズするかどうか、<see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />オーバーライドすることができます、コントロール、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)" />メソッドでは、基本メソッドを呼び出して、基本のメソッドに渡されるパラメーターに異なる値を割り当てるし、し、結果として得られるを返す<see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />コントロール。 エンド ユーザーに表示したくない場合など、 <paramref name="originalPath" /> (これは、ユーザー コントロールの仮想ディレクトリのパスを表示) 値では、基本メソッドを呼び出すと、空の文字列を渡すこともできます ("") パラメーターにします。  
  
動作をカスタマイズすることも、<see cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />自体から継承することによって制御します。 オーバーライドするなど、その<see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />または<see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" />プロパティ。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ErrorWebPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePersonalization">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreatePersonalization () As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ CreatePersonalization();" />
      <MemberSignature Language="F#" Value="abstract member CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization&#xA;override this.CreatePersonalization : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="webPartManager.CreatePersonalization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の Web ページのユーザーのパーソナル化データを格納するパーソナル化オブジェクトを返します。</summary>
        <returns>ユーザーのパーソナル化データが格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>メソッドが含まれてし、現在のページのユーザーの個人用設定を管理するオブジェクトを返します。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、このオブジェクトを管理します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320">Web パーツ パーソナル化の概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::GenericWebPart ^ CreateWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart&#xA;override this.CreateWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.CreateWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール以外のサーバー コントロール。</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> オブジェクトを持った <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロール以外のサーバー コントロールが Web パーツ機能を備えることができるように、そのコントロールをラップします。</summary>
        <returns><paramref name="control" /> をラップし、真の <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールとして機能できる <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>メソッドがないサーバー コントロールを有効にするための主なメカニズム<xref:System.Web.UI.WebControls.WebParts.WebPart>上と同じ機能を実行するコントロールを<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、および Web パーツ アプリケーションに完全に参加します。 このメソッドでは、開発者が大幅を使用して Web パーツ アプリケーションで使用できるサーバー コントロールの数を増やす、標準の ASP.NET コントロール、ユーザー コントロール、およびカスタム コントロールは--を使用できますので、事実上すべてのサーバー コントロールの種類します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールもこのメソッドを使用して他の 2 つのシナリオでのサーバー コントロールをラップする<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクト。 ユーザー コントロールを追加とサーバー ページを使用して、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>インポートされたコントロールがない場合は、制御、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>メソッドが呼び出されます。 内の永続形式でサーバー コントロールが宣言されている場合も、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Web ページでは、ゾーン、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>れていないすべてのコントロールに対してメソッドが呼び出された<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
 一般的なアプローチは、使用するゾーンをサーバー コントロールをプログラムで追加すると、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>コントロールをラップするメソッド、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクトを呼び出して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>メソッドすべてのコレクションにコントロールを追加する<xref:System.Web.UI.WebControls.WebParts.WebPart>によって参照されていると、ページ上のコントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例に示しますを使用、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>メソッド。 `Button2_Click method`、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>をラップするメソッドが呼び出される、<xref:System.Web.UI.WebControls.Calendar>コントロールを<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>をゾーンに追加する前にオブジェクト。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>このメソッドをオーバーライドする派生を使用して、<see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />クラス代わりに Web パーツで提供される基本クラスのセットを制御します。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWarning">
      <MemberSignature Language="C#" Value="public virtual string DeleteWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エンド ユーザーがコントロールを削除したときにそのユーザーに対して表示するカスタム警告メッセージを取得または設定します。</summary>
        <value>警告メッセージのテキストが含まれる文字列。 既定値は、ローカライズされた警告メッセージです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーを削除すると、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを通常、既定の警告メッセージが表示されます。 あるコントロールのこのインスタンスが削除されたときに、削除は恒久的に、ユーザーに警告します。 ページの開発者は、ページにコントロールの新しいインスタンスを追加する方法をユーザーに提供可能性があります (などのカタログを<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、またはいくつかのプログラムによる方法で) が削除されるコントロールの現在のインスタンスは完全に削除します。 警告が表示されるダイアログ ボックスには、必要な場合は、ユーザーが、削除をキャンセルするためのボタンが含まれます。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>プロパティにより、開発者は、ユーザーに表示される警告メッセージを設定します。  
  
 ページの開発者には、空の文字列が割り当てられる場合 ("") ユーザーを削除しない警告 ダイアログ ボックスは、このプロパティに値が表示されます、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>プロパティは静的の場合は表示されません<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールやサーバー コントロール。 静的コントロールは、サーバー コントロール内で宣言されている、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Web ページのマークアップ内のゾーン。 このようなコントロールは静的であるため、削除できません、ため、削除の警告メッセージがその場合に表示されることはありません。 スタティック コントロールは、ユーザーが閉じることができますが、閉じたコントロールを追加できますのページに戻る、ユーザーが削除されたコントロールを回復できない一方、ページのカタログに追加されます。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>プロパティ宣言とプログラミングします。  
  
 これには、コードの例の 4 つの部分があります。  
  
-   ユーザー コントロールのページ表示モードを変更することができます。  
  
-   カスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
-   Web ページ。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 コード例の最初の部分は、表示モードを変更するユーザー コントロールです。 ユーザー コントロールのソース コードの例のセクションから取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 表示モードとユーザー制御のしくみの詳細については、次を参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 コード例の 2 番目の部分はカスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 この例は、動的コンパイルの方法を使用してください。したがってありません`Assembly`属性、 `Register` Web ページの上部にあるこのコントロールのディレクティブ。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/textdisplaywebpart.vb#3)]  
  
 コード例の 3 番目の部分は、Web ページです。 ページが含まれています、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>をカスタムのゾーン<xref:System.Web.UI.WebControls.WebParts.WebPart>ユーザー追加できるように、ページに実行時に、ゾーンでは、コントロールが宣言されています。 ダイナミック コントロール (プログラムから、またはこのようなカタログから、ページに追加されるコントロール) をページから削除できることに注意してください。 スタティック コントロール (内で宣言されているコントロールを<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ページのマークアップ内のゾーン) を閉じるが削除されないことができます。 `<asp:webpartmanager>`要素宣言のカスタム値、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>プロパティを使用して、`DeleteWarning`属性。 `Button1_Click`メソッドに別のカスタム値を割り当てます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>プロパティ。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/CS/deleteWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWarning#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWarning/VB/deleteWarningVB.aspx#1)]  
  
 追加する必要があります、ブラウザーでページを読み込んだ後、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールをページ。 使用して、**表示モード**ドロップダウン リスト コントロール、カタログの選択モード。 カタログが表示されたら、カスタム コントロールの横にあるチェック ボックスをオン、をクリックして**追加**クリックして、ページに追加する**閉じる**ブラウズ モードをページに戻します。 コントロールが表示されるようになりましたを削除することができます。 使用して、**表示モード**もう一度コントロールをページに (コントロールを削除できませんが、ページをブラウズ モードで) デザイン モードに切り替えます。 動詞メニュー (矢印) のヘッダーをクリックして、<xref:System.Web.UI.WebControls.WebParts.WebPart>制御、および選択**削除**します。 設定した警告、`DeleteWarning`属性が表示されます。 **[キャンセル]** をクリックします。 今すぐというボタンをクリックして**変更削除警告**プロパティの値をプログラムで変更します。 コントロールの動詞メニューから選択**削除**、もう一度とするこの時間の他の警告メッセージが表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteWebPart">
      <MemberSignature Language="C#" Value="public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.DeleteWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DeleteWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">削除するサーバー コントロール。</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの動的インスタンスを Web ページから完全に削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>メソッドによって表されるコントロールを完全に削除する、`webPart`ページからのパラメーター。 追加が終了したコントロールとは異なり、<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>を制御しに追加できるバックアップ ページで、削除されたコントロールのインスタンスは、ページに戻ることはありません追加できます。  
  
> [!NOTE]
>  Web パーツ コントロールによって実装される設定、ユーザーが動的なを削除する機能<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは、ユーザーとページに追加したコントロールのパーソナル化スコープによって異なります。 コントロールを追加した場合、ページが共有スコープの場合 (アクセス許可を持つユーザー)、コントロールは削除できません個々 のユーザーがページがユーザーのスコープ内にある場合。  
  
 ダイナミック コントロールのみを削除できます。 ダイナミック コントロールは、プログラムまたはユーザー コントロールのカタログから追加して、ページに追加されます。 スタティック コントロールは、マークアップまたは永続化の形式で宣言によってページに追加されます。 宣言型のタグが、マークアップで完全に存在するため、スタティック コントロールを削除しないことができますが終了して再度開くことがあります。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> メソッドの使用方法を示します。 初めて、**予定表の追加**ボタンがクリックされた、コードは、イベント ハンドラーを作成、<xref:System.Web.UI.WebControls.Calendar>制御、およびとゾーンに追加、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクト。 コントロールがプログラムによって追加されるためは、動的なコントロールとそのため、削除できます。 ユーザーがクリックすると、**削除予定表**ボタン コードにより、コントロールが存在して、呼び出すことによって、削除、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>メソッド。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/CS/wpmgDeleteWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DeleteWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DeleteWebPart/VB/wpmgDeleteWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="DesignDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesignDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DesignDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesignDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web パーツ コントロールを含む Web ページのレイアウトを変更する場合に使用する表示モードを表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>フィールドを参照するカスタム<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>作成されに含まれているオブジェクト、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 これは、静的オブジェクトであるためを参照できる経由で直接、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス、コントロールのインスタンスの必要はありません。  
  
 Web パーツを含むページでは、最初の読み込みを制御するときに<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(ブラウズ モード) 既定では。 ユーザーは、ゾーンまたは現在のゾーン内にコントロールを移動することによって、ページのレイアウトを変更する場合、最初に切り替える必要がありますにページ<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>(デザイン モード)。 デザイン モードで、さまざまなゾーンのユーザー インターフェイス (UI) が表示されたら、およびユーザーは、レイアウトを変更するコントロールをドラッグできます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>フィールド プログラムを使用します。 コードでは、参照と設計をここでは、ページのサポートされている表示モードのドロップダウン リストを生成します。 いることを確認、`Page_PreRender`メソッドは、コードのチェックするかどうか、現在<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>プロパティに設定されて<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>します。 そうである場合`Label1`、表示される、存在しない場合`Label1`は表示されません。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/CS/wpmgrDesignDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DesignDisplayMode/VB/wpmgrDesignDisplayModevb.aspx#1)]  
  
 ブラウザーでページの読み込み後は、既定ではブラウズ モードでは。 ページ上のラベルを非表示にすることを確認します。 ドロップダウン リスト コントロールを使用して、ページをデザイン モードに切り替えます。 内のコードにより、いることを確認、`Page_PreRender`メソッドをラベルが表示されるようになりました。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Web パーツのページ表示モード</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebPart">
      <MemberSignature Language="C#" Value="protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DisconnectWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DisconnectWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit&#xA;override this.DisconnectWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.DisconnectWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">接続を解除する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール。</param>
        <summary>終了または削除する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはサーバー コントロールを、それが関係する接続から削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>メソッドは、コントロールがページで閉じられましたかページから削除されたときに設定する Web パーツ コントロールによって内部的に呼び出されます。 このようなシナリオで、メソッド コンシューマーまたはプロバイダーと関係しているすべての接続からコントロールを削除する呼び出されます。 任意の接続からコントロールを削除する場合、このメソッドも呼び出します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>メソッドをすべての接続を終了する`webPart`いました。  
  
 ときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>メソッドが呼び出されると、生成、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>イベント。 通常このイベントは取り消すことができますが、2 つのケースで取り消すことができません。 1 つのケースは、ページに、要求中に発生したときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>メソッドが呼び出されます。 既存の接続の間に競合がある場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>を閉じると、競合している接続のこのインスタンスで 1 つのメソッドが呼び出される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>イベントは、競合を解決する必要があるために、取り消すことができません。  
  
 他のケースが発生するときに、<xref:System.Web.UI.WebControls.WebParts.WebPart>か、現在接続されているサーバー コントロールが閉じられたか削除します。 この場合、コントロールによりはから削除されるページでは、デザインをキャンセルすることはできません、同様に、したがって終了するには、その接続必要、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>の接続を終了するプロセスを中断するイベントです。 詳細については、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> イベントを参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> メソッドの使用方法を示します。 2 つのカスタムを使用して<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、Web ページを使用するもう 1 つボタンを使用すると、コントロールを切断中に、ボタンをクリックしてコントロール間の接続を作成します。 ページが参照モードでは、コントロールを接続すると、コントロールの 1 つを終了した場合のオーバーライド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>メソッドが終了したコントロールを接続解除、接続を終了し、メッセージが表示されます。  
  
 コード例では、4 つの部分があります。  
  
-   表示モードを変更するユーザー コントロール。  
  
-   カスタムを含むソース ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
-   コントロールをホストする Web ページ。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 コード例の最初の部分は、表示モードを変更するユーザー コントロールです。 ユーザー コントロールのソース コードの例のセクションから取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 表示モードとユーザー制御のしくみの詳細については、次を参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 2 番目の部分は、2 つのカスタムのソース コードを含むファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール接続して、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 この例は、動的なコンパイルを使用して、`Register`これらのコンポーネントを Web ページを参照するディレクティブがそれに従って宣言されている Web ページの上部にあります。 コンパイル オプションを示すチュートリアルは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 ソース コードで継承されたコントロールに注意してください。`MyWebPartManager`をオーバーライドする、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>メソッド。 このメソッドはチェックするかどうか閉じられているコントロールが接続に参加して、呼び出しの場合を参照してください ページでは、各接続、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>メソッド接続を終了します。 これは、メソッドの基本実装と同じ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 オーバーライドされたメソッドは、ページにメッセージを記述することで、基本実装をカスタマイズします。  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 コード例の 3 番目の部分は、Web ページです。 上部には、含まれることに注意してください。`Register`ユーザー コントロール、およびを動的にコンパイルされたアセンブリを登録するディレクティブ、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 ページには 2 つの主要な方法です。 `Button1_Click`メソッドは、コントロール間の接続を作成中に、`Button2_Click`メソッドは、コントロールを切断します。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 ページを読み込んだ後、 **Connect**ボタン コントロールを接続します。 (コントロールのヘッダーに下向きの矢印)、コントロールのいずれかの動詞メニューをクリックし、選択**閉じる**動詞メニュー。 コントロールを終了しようとすると、オーバーライドされたメソッドが呼び出された、接続が終了すると、およびページに、メッセージが書き込まれます。 閉じたコントロールを復元し、その他のオプションを試してみて、 をクリックしてページをリセットする場合、**ユーザーの状態をリセット**へのリンクのパーソナル化データを削除して、ページの元の状態を復元します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="DisconnectWebParts">
      <MemberSignature Language="C#" Value="public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectWebParts(class System.Web.UI.WebControls.WebParts.WebPartConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DisconnectWebParts (connection As WebPartConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DisconnectWebParts(System::Web::UI::WebControls::WebParts::WebPartConnection ^ connection);" />
      <MemberSignature Language="F#" Value="abstract member DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit&#xA;override this.DisconnectWebParts : System.Web.UI.WebControls.WebParts.WebPartConnection -&gt; unit" Usage="webPartManager.DisconnectWebParts connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="System.Web.UI.WebControls.WebParts.WebPartConnection" />
      </Parameters>
      <Docs>
        <param name="connection">サーバー コントロール間の接続を表す <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />。</param>
        <summary>Web ページ上で接続されたサーバー コントロールの接続を解除するプロセスを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>メソッドは、完全なプロセスの間の接続を終了<xref:System.Web.UI.WebControls.WebParts.WebPart>またはサーバー コントロールを渡すときに、`connection`パラメーター。  
  
 このメソッドを使用してコントロールを配置すると、切断を`<asp:connectionszone>`接続を管理するユーザー インターフェイス (UI) を提供する、Web ページ内の要素。 ページがの場合の接続の表示モード (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>) と現在の接続が存在する、ユーザーを呼び出すボタン クリックして、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>メソッド接続を終了します。  
  
 呼び出すことも、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>メソッドを追加する必要はありませんし、プログラムでコントロールを切断する場合、コードから直接、`<asp:connectionszone>`ページへの要素。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> メソッドの使用方法を示します。 2 つのカスタムを使用して<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、Web ページを使用するもう 1 つボタンを使用すると、コントロールを切断中に、ボタンをクリックしてコントロール間の接続を作成します。  
  
 コード例では、4 つの部分があります。  
  
-   表示モードを変更するユーザー コントロール。  
  
-   カスタムを含むソース ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
-   コントロールをホストする Web ページ。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 コード例の最初の部分は、表示モードを変更するユーザー コントロールです。 ユーザー コントロールのソース コードの例のセクションから取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 表示モードとユーザー制御のしくみの詳細については、次を参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 2 番目の部分が 2 つのカスタムのソース コードを含むファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>接続されるコントロール。 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 この例は、動的なコンパイルを使用して、`Register`これらのコンポーネントを Web ページを参照するディレクティブがそれに従って宣言されている Web ページの上部にあります。 コンパイル オプションを示すチュートリアルは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/ZipCodeComponent.vb#2)]  
  
 コード例の 3 番目の部分は、Web ページです。 上部には、含まれることに注意してください。`Register`ユーザー コントロールと、動的にコンパイルされたアセンブリを登録するディレクティブ、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 ページには 2 つの主要な方法です。 `Button1_Click`メソッドは、コントロール間の接続を作成し、`Button2_Click`メソッドは、コントロールを切断します。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/CS/wpmgrDisconnectWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisconnectWebParts/VB/wpmgrDisconnectWebPartsVB.aspx#1)]  
  
 クリックすることができます、ページの読み込み後、 **Connect**コントロールを接続するボタンをクリックします。 、テキスト ボックス コントロールにいくつかのテキストを入力し、をクリックし、 **」と入力**ボタン (これが表示されない場合は、コントロールの接続が切断された) 接続されているコントロールのテキストが表示されます。 クリックすると、**切断**ボタン、コントロールが切断されます。 使用して、コントロールの接続の状態を確認することができます、**表示モード**ドロップダウン リスト コントロールをページに切り替えます**Connect**モード。 その後、コントロールの 1 つのタイトル バーで (矢印で表される) の動詞メニューをクリックし、選択、 **Connect**項目。 接続 UI が表示されます。使用できますが、 `<asp:connectionszone>`  ページで要素が宣言されています。 接続し、この UI からコントロールを切断することもできます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="connection" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> または<see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> のいずれかに <paramref name="connection" /> が含まれていません。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> は読み取り専用です。  
  
または 
 <paramref name="connection" /> は既に <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" /> から接続解除されています。  
  
または 
 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> は読み取り専用です。  
  
または 
 <paramref name="connection" /> は既に <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" /> から接続解除されています。</exception>
        <block subset="none" type="overrides"><para>オーバーライドすることができます、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />切断の既定の実装を変更する場合、メソッド<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />コントロール。 場合は、メソッドをオーバーライドして、既存のメソッドにいくつかの実装を追加するだけでは、独自のコードを実行する前に、基本メソッドを呼び出すことができます。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayMode As WebPartDisplayMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ DisplayMode { System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ get(); void set(System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web パーツ コントロールが含まれた Web ページのアクティブな表示モードを取得または設定します。</summary>
        <value>ページの表示モードを決定する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web パーツ コントロールを含むページがいくつかの可能な表示モードのいずれかでは常にします。 詳細については、表示モードは、次を参照してください。 [Web パーツ ページの表示モード](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4)します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスは、Web ページの表示モードを作成します。 ベースの使用<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>クラス、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが Web パーツ コントロールを含むページで使用できるいくつかの標準の表示モードのオブジェクトを作成します。 これらの標準の表示モードには、<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>クラスの概要。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールも Web パーツ コントロールを使用するページの表示モードを管理します。 使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>プロパティ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールがページに現在の表示モードへの参照を保持します。 使用することも、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>プロパティをさまざまな表示モードに切り替えます。 Web パーツ コントロールを使用するページに表示モードの変更の例は、次を参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 表示モードの管理の一部として、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、イベントと関連する表示モードでは、イベント ハンドラーにも提供します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>メソッドと<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>メソッド。 これらのメソッドは、および追加のカスタム表示モードの場合でも、ページの動作をカスタマイズするためのメカニズムを提供します。  
  
   
  
## Examples  
 次のコード例に示しますをプログラムで使用、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>プロパティ。 ブラウザーでページを読み込んだ後、表示モードを切り替える、ページの下部付近にあるボタンを使用できます。 読み込み時に、ページが既定ではブラウズ モードです。 デザイン モードに切り替えた場合、1 つのゾーンからサーバー コントロールをドラッグします。 または、1 つのゾーン内の 2 つのコントロールを配置できます。 編集モードに切り替えた場合は、サーバー コントロールの選択のいずれかのヘッダーの動詞メニューをクリックすることができます**編集**、および指定された編集ユーザー インターフェイス (UI) を使用してコントロールを編集します。  
  
> [!NOTE]
>  非常に一般的な Web パーツ アプリケーションでの表示モードの切り替えは、Web パーツ コントロールが含まれているすべてのページでの実行の一貫性があり、再利用可能な方法を提供したい場合があります。 モードとする変更が表示されるユーザー コントロールの例は、多くのページで再利用することができますを参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/CS/wpmgrDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayMode/VB/wpmgrDisplayModevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">プロパティに割り当てられている <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> オブジェクトが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">プロパティに割り当てられている <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> オブジェクトが、サポートされている表示モードではありません。  
  
または 
プロパティに割り当てられている <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> オブジェクトが無効です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Web パーツのページ表示モード</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">チュートリアル: Web パーツ ページ上の表示モードの変更</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanged As WebPartDisplayModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventHandler ^ DisplayModeChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " Usage="member this.DisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web パーツ ページ上の現在の表示モードが変更された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示モードは、Web パーツ アプリケーションに不可欠な要素です。 ユーザーが Web ページ上のさまざまな表示モードに切り替えるときに、ページは新しい表示モードの目的に応じて、まったく異なる外観にかかる少なくありません。 表示モードが変更された後するユーザー インターフェイス (UI) で特定の変更を行うなど、特定のコントロールを表示または非選択の UI 要素の外観を変更するし、します。  
  
> [!NOTE]
>  表示モードの詳細については、次を参照してください。 [Web パーツ ページの表示モード](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4)します。 イベントの使用の詳細については、次を参照してください。[方法。Web フォーム アプリケーションでイベントを処理する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayModeChanging As WebPartDisplayModeCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventHandler ^ DisplayModeChanging;" />
      <MemberSignature Language="F#" Value="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " Usage="member this.DisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページ上で別の表示モードに変更するプロセスを開始する動詞をユーザーがクリックした後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示モードは、Web パーツ アプリケーションに不可欠な要素です。 ユーザーが Web ページ上のさまざまな表示モードに切り替えるときに、ページは新しい表示モードの目的に応じて、まったく異なる外観にかかる少なくありません。 ユーザーは、動詞をクリックして新しい表示モードに変更のプロセスを開始すた後を使用して、ユーザー インターフェイス (UI) で特定の変更をする可能性があります、<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A>プロパティがどのような新しい表示モード、およびさまざまな UI を変更することを確認するには要素に応じて。 これを行う便利な方法がオーバーライドするには、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> UI をカスタマイズするメソッド。  
  
> [!NOTE]
>  表示モードの詳細については、次を参照してください。 [Web パーツ ページの表示モード](https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4)します。 イベントの使用の詳細については、次を参照してください。[方法。Web フォーム アプリケーションでイベントを処理する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="DisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ DisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールに関連付けられたすべての表示モードの読み取り専用のコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> オブジェクトのセットが格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>とは対照的に関連付けられているすべての表示モード、プロパティの参照、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>プロパティで、現在のページには、(サポート) 利用できる表示モードのみを参照します。  
  
 ページ上の 2 つの指定された表示モード、参照、およびデザインは常にサポートします。 ページがある対応するゾーンの種類の作業を特定の表示モードに必要な場合にのみ、他の 3 つの表示モード、編集、カタログ、および接続がサポートされています。 例では、ページが含まれていない場合、<xref:System.Web.UI.WebControls.WebParts.EditorZone>ゾーン、編集表示モードは、によって参照されるコレクションの表示は、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>プロパティによって参照されるコレクションでは表示されませんが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例のプログラムでの使用を示しています、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>プロパティ。 コードでは、このプロパティを使用して、Web パーツ コントロール セットで使用可能なすべての表示モードの一覧を作成、現在のページではサポートされていないものも含めて、します。 この場合、カタログと接続モードはサポートされていません、表示、ページ上のゾーンにないために必要な対応するためです。  
  
 他の 3 つの表示モード: ページで、参照、設計、および編集--をサポートします。 編集ページが含まれているために、モードがサポートされて、<xref:System.Web.UI.WebControls.WebParts.EditorZone>参照中に、ゾーンし、デザイン モードが常にサポートされています。  
  
 ドロップダウン リスト コントロールを使用して、ブラウズ モードからページをデザイン モードに切り替えることができます、ブラウザーでページの読み込み後し編集モードにします。 編集モードで、ドロップダウンの動詞メニュー サーバー コントロールのいずれかのヘッダーをクリックし、選択**編集**コントロールを編集します。 選択した場合に注意する**カタログ**または**Connect**ボックスの一覧で、エラー ページが生成されます。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/CS/wpmgrDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_DisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_DisplayModes/VB/wpmgrDisplayModesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Web パーツのページ表示モード</related>
        <related type="Article" href="https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0">チュートリアル: Web パーツ ページ上の表示モードの変更</related>
      </Docs>
    </Member>
    <Member MemberName="DynamicConnections">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DynamicConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ DynamicConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynamicConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在 Web ページ上に存在するすべての動的接続のコレクションを取得します。</summary>
        <value>ページ上のすべての動的接続への参照が格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動的接続は、プログラムではなく静的に作成される接続です。 静的な接続を作成するには、Web フォーム ページのマークアップに宣言します。 動的接続は、プログラム、または接続ユーザー インターフェイス (UI) を使用して接続を作成するユーザーによって形成されます。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>コレクションは読み取り専用ただししてその内容を変更することはできませんは、各接続の動的オブジェクトにプログラムでアクセスを提供します。  
  
> [!NOTE]
>  接続または切断などの一般的な操作を実行する<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、開発者は、パブリック メソッドを使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスなど、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>と<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>、直接接続を変更するのではなく内のオブジェクト、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>コレクション。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="EditDisplayMode">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditDisplayMode As WebPartDisplayMode " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::WebPartDisplayMode ^ EditDisplayMode;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditDisplayMode : System.Web.UI.WebControls.WebParts.WebPartDisplayMode" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エンド ユーザーによるサーバー コントロールの編集および変更が可能な表示モードを表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>フィールドを参照するカスタム<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>作成されに含まれているオブジェクト、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 これは、静的オブジェクトであるためを参照できる経由で直接、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス、コントロールのインスタンスの必要はありません。  
  
 Web パーツを含むページでは、最初の読み込みを制御するときに<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(ブラウズ モード) 既定では。 ユーザーは、編集、またはサーバー コントロールを変更する場合、最初に切り替える必要がありますにページ<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>(編集モード)。 第 2 に、編集、そのコントロールのヘッダーの動詞メニューの編集動詞をクリックして特定のサーバー コントロールを選択して、必要があります。 コントロールが編集モードでは、選択したコントロールを編集するため、編集のユーザー インターフェイス (UI) が表示されます。  
  
 ページの編集モードを有効にする、ページには少なくとも 1 つ<xref:System.Web.UI.WebControls.WebParts.EditorZone>などを含む 1 つ以上提供されている編集のゾーンのコントロール、<xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>コントロール、またはカスタムの編集コントロール。  
  
   
  
## Examples  
 次のコード例を使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>フィールド プログラムを使用します。 コードでは、参照、設計、および編集をここでは、ページのサポートされている表示モードのドロップダウン リストを生成します。 編集をサポートするために、`<asp:EditorZone>`要素はページ。 いることを確認、`Page_PreRender`メソッドは、コードのチェックするかどうか、現在<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>プロパティに設定されて<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>します。 そうである場合`Label1`、表示される、存在しない場合`Label1`は表示されません。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/CS/wpmgrEditDisplayModecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_EditDisplayMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_EditDisplayMode/VB/wpmgrEditDisplayModevb.aspx#1)]  
  
 ブラウザーでページの読み込み後は、既定ではブラウズ モードでは。 ページ上のラベルが非表示に注意してください。 ドロップダウン リスト コントロールを使用して、ページを編集モードに切り替えます。 内のコードにより、いることを確認、`Page_PreRender`メソッドをラベルが表示されるようになりました。 をクリックして、**編集**その特定のコントロールの編集を有効に、コントロールのいずれかの動詞メニューの動詞。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Web パーツのページ表示モード</related>
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public virtual bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールが含まれた Web ページ上でクライアント側スクリプト機能を有効にするかどうかを決定する値を取得または設定します。</summary>
        <value>ページ上でクライアント スクリプトを実行できるかどうかを示すブール値。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>プロパティは、開発者がクライアント スクリプトを無効にする方法を提供します。 クライアント セキュリティのために、スクリプトを無効にするか、さまざまなブラウザーを使用する場合でも、ページのすべてのユーザーがのようなユーザー エクスペリエンスにあることを確認することができます。  
  
 クライアント スクリプトを追加して無効にすることができます、`EnableClientScript`属性を<xref:System.Web.UI.WebControls.WebParts.WebPartManager>宣言型コードの次の行のように、Web ページの要素。  
  
 `<asp:webpartmanager id="manager" runat="server"`  
  
 `EnableClientScript="false" />`  
  
 また、開発者はから継承することによってこのプロパティを取り除くことができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスと、既定の設定値を`false`します。  
  
 Web パーツ コントロール セットでは、クライアント ユーザー インターフェイス (UI) とパーソナル化機能は、クライアントの一部を提供するスクリプトを使用します。 クライアントを無効にした場合、Web パーツをスクリプト コントロール機能しますが、一部の機能が無効になっています。 (動詞は、コントロールのタイトル バーのリンクとして代わりに表示されます)、コントロールのタイトル バーにあるドロップダウンの動詞メニューの動詞をレンダリングする機能と共に、別のゾーンにコントロールをドラッグする機能が無効です。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページ上でテーマを使用できることを示す値を取得します。</summary>
        <value>テーマが有効かどうかを示す Boolean 値。 常に <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールによって、base<xref:System.Web.UI.Control.EnableTheming%2A>プロパティの値を常に返すことを確認する`true`します。 これは、Web パーツ コントロール セットでは、Web パーツを表示するためにテーマの使用を制御する必要がありますが子コントロールのため、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール、Web ページのユーザー インターフェイス (UI) を形成します。 たとえば、テーマがさまざまなゾーンを表示するために使用され、などのさまざまな種類のゾーン内に存在するコントロールのパーツ コントロール (から継承するコントロール、<xref:System.Web.UI.WebControls.WebParts.Part>クラス)、ユーザー コントロール、ASP.NET サーバー コントロール、およびカスタム サーバーコントロール。  
  
 ただし、オーバーライドされた<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>プロパティは読み取り/書き込みプロパティに従って、基本プロパティとして実装されて、デザインによって常に返す必要があります値のため、プロパティを設定することはできません`true`します。 プロパティを設定しようとした場合、<xref:System.NotSupportedException>例外がスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">プロパティ値を設定しようとしました。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartConnecting">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartConnecting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartConnecting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartConnecting ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartConnecting();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartConnecting : unit -&gt; unit&#xA;override this.EndWebPartConnecting : unit -&gt; unit" Usage="webPartManager.EndWebPartConnecting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>一方の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールをもう一方のコントロールに接続するプロセスを完了させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>メソッドに接続するプロセスが完了すると、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを別のコントロール。 対応するが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>メソッド。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>メソッドはパーソナル化オブジェクトによって参照されることを確認、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>パーソナル化の型自体が接続を形成するために必要なプロパティは変更できますが、します。 メソッドは不要です、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>オブジェクトは`null`、最後に呼び出すと、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> プロパティによって参照されるコントロールが <see langword="null" /> です。</exception>
        <block subset="none" type="overrides"><para>拡張する必要がある開発者、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />コントロールが派生クラスでは、このメソッドをオーバーライドする可能性があります。 1 つの手法は基本メソッドを呼び出し、いくつか追加のカスタム処理を追加することや、コントロール間の接続が完了するプロセス全体を完全にカスタマイズすることがあります。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="EndWebPartEditing">
      <MemberSignature Language="C#" Value="public virtual void EndWebPartEditing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWebPartEditing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWebPartEditing ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWebPartEditing();" />
      <MemberSignature Language="F#" Value="abstract member EndWebPartEditing : unit -&gt; unit&#xA;override this.EndWebPartEditing : unit -&gt; unit" Usage="webPartManager.EndWebPartEditing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを編集するプロセスを完了させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>メソッドの編集のプロセスが完了すると、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 対応するが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>メソッド。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>メソッドはパーソナル化オブジェクトによって参照されることを確認、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>プロパティは変更できますが、個人的な変更を必要とするプロセスは、コントロールの編集のために必要な。 メソッドは不要です、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>オブジェクトではありません`null`いるため、現在選択されている<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを変更できる、および最後に呼び出され、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> プロパティによって参照されるコントロールが <see langword="null" /> です。</exception>
        <block subset="none" type="overrides"><para>拡張する必要がある開発者、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />コントロールが派生クラスでは、このメソッドをオーバーライドする可能性があります。 1 つの手法は基本メソッドを呼び出し、いくつか追加のカスタム処理を追加すること、またはコントロールの編集の完了のプロセス全体を完全にカスタマイズすることがあります。 たとえば、オーバーライド メソッドで、最初に、基本メソッドを呼び出してし、どのような編集の変更を行ったかを決定するいくつかのコードと変更の一覧のバックアップの確認を求めるエンドユーザーに表示を追加する可能性があります。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="ExportSensitiveDataWarning">
      <MemberSignature Language="C#" Value="public virtual string ExportSensitiveDataWarning { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExportSensitiveDataWarning" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExportSensitiveDataWarning As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ExportSensitiveDataWarning { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExportSensitiveDataWarning : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールから重要な状態情報をエクスポートしようとしたときに表示される警告メッセージのテキストを取得または設定します。</summary>
        <value>警告メッセージが含まれた文字列。 既定のメッセージは、.NET Framework が提供するカルチャ固有の値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーが機密性の高い状態データをエクスポートしようとしたときに、<xref:System.Web.UI.WebControls.WebParts.WebPart>制御、ことを示すメッセージ ボックスでは、ユーザーに警告メッセージが表示されるソース コード内に機密とマークされたメンバーからエクスポートされるデータの場合は、機密データをエクスポートして、エクスポートをキャンセルする機会を提供します。 開発者は設定して機密として特定のメンバーのデータをマークすることができます、`isSensitive`のパラメーター、`[Personalizable]`属性を`true`メンバーにします。 この属性とパラメーターの詳細については、次を参照してください。、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>クラス。  
  
> [!IMPORTANT]
>  Web パーツのエクスポート機能を使用するときに機密データを未承認のユーザーに可能性のあるエクスポートでした。 このような脅威から保護する方法の詳細については、次を参照してください。[セキュリティで保護する Web パーツ ページ](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2)します。  
  
 ユーザーをエクスポートするときに、既定のメッセージが表示されます。 ただしで、値を割り当てる、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>プロパティ、カスタムの警告メッセージを指定することができます。  
  
   
  
## Examples  
 次のコード例は、の宣言型の使用を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>プロパティ。  
  
 次の Web ページのコードは、標準を使用して<xref:System.Web.UI.WebControls.BulletedList>制御され、ゾーンに配置します。 コントロールが折り返される、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>を true として機能できるように、実行時にコントロール<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 コントロールをエクスポート可能にする、`ExportMode`属性が追加、`<asp:bulletedlist>`要素および属性値に設定されて<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>、つまり、その機密性の高いや機密データをエクスポートできます。 またで、`<asp:webpartmanager>`要素、`ExportSensitiveDataWarning`属性には、カスタムの値が割り当てられます。  
  
 コード例が動作するは、Web パーツの説明ファイルをエクスポートするのには、Web.config ファイルに追加する必要があります設定されます。 このコード例については、Web ページと同じディレクトリに Web.config ファイルがあることを確認します。 内で、`<system.web>`セクションがあるかどうかを確認してください、`<webParts>`を持つ要素を`enableExport`属性に設定`true`マークアップを次のようにします。  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 [!code-aspx-csharp[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/CS/wpmgrExportSensitiveWarningCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_ExportSensitiveData/VB/wpmgrExportSensitiveWarningVB.aspx#1)]  
  
 ブラウザーでページの読み込み後は、リンクを含むコントロールのタイトル バーに (下向きの矢印で表される) の動詞メニューをクリックします。 動詞メニューで選択**エクスポート**とにカスタム警告メッセージ ボックスが表示されることがわかります。 エクスポートを継続する場合は、クリックして**OK**、コントロールに関するすべてのデータを XML 記述ファイルのローカル コピーを保存できるようにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="ExportWebPart">
      <MemberSignature Language="C#" Value="public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExportWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit&#xA;override this.ExportWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Xml.XmlWriter -&gt; unit" Usage="webPartManager.ExportWebPart (webPart, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="webPart">データのエクスポート元となるコントロール。</param>
        <param name="writer">エクスポートされたデータを <paramref name="webPart" /> から XML 記述ファイルに書き込む <see cref="T:System.Xml.XmlWriter" />。</param>
        <summary>サーバー コントロールの状態データとプロパティ データが格納された XML 記述ファイルを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>メソッドからのさまざまな状態とプロパティ データのアセンブル`webPart`XML ファイルにします。 データには、そのアセンブリ、状態データ、およびプロパティのデータを含め、コントロール自体に関する情報が含まれます。 エクスポートを開始したユーザーは、ローカル コンピューターまたはネットワーク上、XML ファイルをディスクに保存できます。 他のユーザー別のページまたは Web サイトに記述ファイルをインポートし、状態とプロパティのデータを別のインスタンスに適用`webPart`します。 これにより、ユーザーを共有し、サーバー コントロールで、設定を再利用するための高速で便利なメカニズムと、エクスポートとインポートされたコントロールの動作と外観を制御するための手段を開発者にも提供します。  
  
 プロパティを`webPart`は既定ではエクスポートされません。 プロパティのエクスポートを有効にすることをマークする必要があります、`[Personalizable]`ソース コード内の属性。 また、必要に応じて、エクスポート可能なプロパティを設定して、機密データを含むようをマークすることができます、`isSensitive`のパラメーター、`[Personalizable]`属性を`true`します。 既定では、`isSensitive`は`false`します。 開発者は、パラメーターを設定`true`データが機密であることを示します。  
  
 有効にする`webPart`開発者の設定をエクスポートするには、その<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>プロパティの値をいずれか<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>(を含む、すべてのパーソナル化できると機微なプロパティです、) または<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>、機微なプロパティを除くすべてをエクスポートします。  
  
> [!IMPORTANT]
>  ユーザー コントロールからデータをエクスポートし、他のコントロールにデータをインポートするには、セキュリティ リスクもする必要があります。 開発者は、機密データを保護する前に説明したアプローチを使用する必要があり、データを完全に公開するリスクを回避する場合が有効にしないでくださいエクスポート`webPart`まったくです。 Web パーツのセキュリティの問題について詳しくは、次を参照してください。[セキュリティで保護する Web パーツ ページ](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> は <see langword="null" />です。  
  
- または - 
 <paramref name="writer" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> が、<see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> で参照されるコントロールのコレクションに格納されていません。  
  
または 
<paramref name="webPart" /> の <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" /> プロパティが、<see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" /> の値に設定されています。これは、<paramref name="webPart" /> のエクスポートが無効になっていることを示します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">保護の Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="webPartManager.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>オーバーライドして、ユーザー インターフェイス (UI) のない <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールにフォーカスが設定されるのを防ぎます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Focus%2A>メソッドは、ベース<xref:System.Web.UI.Control.Focus%2A?displayProperty=nameWithType>メソッドを呼び出し元がメソッドを呼び出した場合に例外をスローします。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>フォーカスをそれ自体で設定できることはありません、コントロールが UI がないと、ユーザーに表示されることはありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元が、UI のないコントロールではサポートされていない <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.Focus" /> メソッドを呼び出そうとします。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ConsumerConnectionPointCollection ^ GetConsumerConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&#xA;override this.GetConsumerConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" Usage="webPartManager.GetConsumerConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">接続でコンシューマーとして動作するサーバー コントロール。</param>
        <summary>Web パーツ接続内でコンシューマーとして動作するサーバー コントロールから、コネクション ポイントとして機能できる <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> オブジェクトのコレクションを取得します。</summary>
        <returns>コンシューマーのすべてのコネクション ポイントが格納された <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 常に Web パーツ接続には、データ、データのコンシューマーとしてのプロバイダーとして機能する 1 つ、2 つのコントロールが含まれます。 各コントロールの接続ポイントとして定義されている 1 つまたは複数のメソッドが必要です。 その接続ポイントは、の場合は、コンシューマー コントロール<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 コンシューマー接続ポイントの取得は、Web パーツ接続の構成で必要な手順です。  
  
 コンシューマーには、接続を確立できるように、少なくとも 1 つの接続ポイントが常に必要です。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>メソッドは、コンシューマー コントロールをチェックし、そのすべてのコネクション ポイントのコレクションを取得します。 場合、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールに接続ポイントがない、空のコレクションが返されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> メソッドの使用方法を示します。  
  
 コード例では、4 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   2 つのカスタムを含む Web ページ<xref:System.Web.UI.WebControls.WebParts.WebPart>接続できるコントロールと`<asp:webpartmanager>`要素。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールとカスタム インターフェイスです。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 コード例の最初の部分は、表示モードを変更するユーザー コントロールです。 ユーザー コントロールのソース コードの例のセクションから取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 表示モードとユーザー制御のしくみの詳細については、トピックを参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 Web ページの宣言型マークアップを含む`Register`ユーザー コントロールとカスタム コントロールの両方のディレクティブ。 `<asp:webpartmanager>`要素、`<asp:webpartzone>`カスタムのコントロールを格納する要素と`<asp:connectionszone>`要素。 インシデントを`Page_Load`メソッド、コードを確認するかどうかの接続を既に存在し、そうでない場合は、プロバイダー、コンシューマー、および、各接続ポイントを定義およびによって参照される静的な接続のセットに新しい接続を追加します<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>プロパティ。 なお、<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection>オブジェクトを使用して取得される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>メソッドに渡されます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>メソッドを 2 つのコントロール間の接続を作成できるかどうかを決定します。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 例では、3 番目の部分では、コントロールのソース コードを示します。 このコード、および手順については、セクションの例をコンパイルするために取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。  
  
 ブラウザーで Web ページが読み込まれた後にをクリックして、**表示モード**ドロップダウン リスト コントロールと選択**Connect**接続モードをページに切り替えます。 接続モードの使用、`<asp:connectionszone>`コントロール間の接続を作成するための要素。 接続モードのタイトル バーの下向き矢印をクリックして、**郵便番号/ZIP Code**の動詞メニューをアクティブに制御し、 **Connect**します。 接続ユーザー インターフェイス (UI) が表示されたらに含まれているコードによって、接続が作成されたことに注意してください、`Page_Load`メソッド。 場合は、以降のブラウザー セッションでこのページに戻り、この静的な接続が確立されていると、ページが読み込まれるたびに再作成する必要はありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> は <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentWebPartManager">
      <MemberSignature Language="C#" Value="public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::WebControls::WebParts::WebPartManager ^ GetCurrentWebPartManager(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="static member GetCurrentWebPartManager : System.Web.UI.Page -&gt; System.Web.UI.WebControls.WebParts.WebPartManager" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> のインスタンスが含まれている Web ページ。</param>
        <summary>ページ上の <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールの現在のインスタンスへの参照を取得します。</summary>
        <returns>ページ上のコントロールの現在のインスタンスを参照する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>メソッドは、現在の参照を取得するコンテキストで役に立ちます<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 これが発生する一般的なシナリオは、の ID を開発中に確認できないカスタム コントロールを作成しているかどうか、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>そのページ上のコントロールになります。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>メソッドは静的な場合は、インスタンスを必要とせずに直接呼び出すことができますので、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。  
  
 Web パーツの一部のコントロールなどのセットの制御<xref:System.Web.UI.WebControls.WebParts.WebPart>、コントロールが、<xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>現在への参照を取得するプロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 そのため、このようなコントロールを使用する場合は、このプロパティを使用して、その参照を取得する必要があります。  
  
 ID を確認するコンテキストでコーディングするかどうか、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>など、Web ページ内にインライン コードを記述する最も簡単かつへの直接参照する最も効率的なは、制御、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ID を使用してコントロール  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A> メソッドの使用方法を示します。 この例は、2 つの部分: カスタム サーバー コントロールとコントロールをホストする Web ページ。  
  
 カスタム<xref:System.Web.UI.WebControls.Label>コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager%2A>の ID を取得するメソッド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールで現在のページと、ID が表示されます  
  
 [!code-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/MyManagerIDLabel.cs#2)]
 [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/MyManagerIDLabel.vb#2)]  
  
 次のコード例でコントロールをホストする Web ページを提供する、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>ゾーン。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/CS/getCurrentWPManagerCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetCurrentWebPartManager/VB/getcurrentWPManagervb.aspx#1)]  
  
 ブラウザーでページを読み込むことに注意して、現在の ID<xref:System.Web.UI.WebControls.WebParts.WebPartManager>内でのカスタム コントロールが表示される<xref:System.Web.UI.WebControls.Label>コントロール。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="page" /> は <see langword="null" />です。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayTitle">
      <MemberSignature Language="C#" Value="protected internal virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetDisplayTitle(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetDisplayTitle(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string&#xA;override this.GetDisplayTitle : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetDisplayTitle webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">このメソッドが <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> の値を返す対象となるコントロール。</param>
        <summary><see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> コントロールの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> プロパティの値が含まれた文字列を取得します。</summary>
        <returns><paramref name="webPart" /> の <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" /> の計算された値が格納される文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 計算値を取得、<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>プロパティ`webPart`します。 ときに開発者を割り当てないでください値を<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>のプロパティを<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールでは、このメソッドは、タイトルとして表示する値を生成します。 無題のコントロールの計算値は、現在のゾーン内のコントロールのシーケンスを示す番号が付加された文字列、数値で構成されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> が <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> コレクション内にありません。</exception>
        <block subset="none" type="overrides"><para>このメソッドをオーバーライドすると、既定の表示タイトルの計算方法を変更します。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="GetExportUrl">
      <MemberSignature Language="C#" Value="public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetExportUrl(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetExportUrl(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.GetExportUrl : System.Web.UI.WebControls.WebParts.WebPart -&gt; string" Usage="webPartManager.GetExportUrl webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">エクスポートされる <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</param>
        <summary>ユーザーが <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールをエクスポートしようとするときの要求に含まれる相対仮想パスとクエリ文字列を取得します。</summary>
        <returns>コントロールのエクスポート要求を構成する相対仮想パスとクエリ文字列が含まれた文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって返される値、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A>メソッドは、コントロールが含まれているページのサーバーの場所への相対仮想パスとエクスポート要求を形成する追加されたクエリ文字列値をサーバーに送信します。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl%2A>メソッドは、送信する、悪意のあるスクリプト攻撃から保護するための要求を許可する前に、文字列をエンコードします。  
  
> [!NOTE]
>  Web パーツ アプリケーションのセキュリティ保護の詳細については、次を参照してください。[セキュリティで保護する Web パーツ ページ](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="GetGenericWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::GenericWebPart ^ GetGenericWebPart(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetGenericWebPart : System.Web.UI.Control -&gt; System.Web.UI.WebControls.WebParts.GenericWebPart" Usage="webPartManager.GetGenericWebPart control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.GenericWebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 内に存在し、実行時に <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> の子コントロールとしてラップされるサーバー コントロール。</param>
        <summary>サーバー コントロールが含まれた <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールのインスタンスへの参照を取得します。</summary>
        <returns><paramref name="control" /> を子コントロールとしてラップする <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />。 このメソッドは、<see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> に <paramref name="control" /> が含まれていない場合は <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般に、開発者に配置するコントロールの 2 つのカテゴリがある<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>Web パーツ アプリケーションに参加するゾーン:<xref:System.Web.UI.WebControls.WebParts.WebPart>から継承するには、コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPart>基本クラス、および standard は、他のサーバー コントロールASP.NET コントロール、カスタム コントロール、またはユーザー コントロール。 配置するとこれらのコントロールのいずれかが、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>の機能にかかる、ゾーン、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 A<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは本質的に、この機能を持つが、他の種類のサーバー コントロールはありません。 として機能する他のサーバー コントロールを有効にする<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールに配置されるときに、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン、ASP.NET でラップ、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>コントロール。 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>から直接継承したコントロール、<xref:System.Web.UI.WebControls.WebParts.WebPart>クラス、true の Web パーツ機能とその子コントロールを提供、します。  
  
 多くの場合、実行時にページの開発者がへの参照を取得する可能性があります、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>ゾーン内のサーバー コントロールのいずれかを格納しているコントロール。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>への参照を取得することにより、メソッド、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>コントロール。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>メソッド。 コード例が含まれています、<xref:System.Web.UI.WebControls.Calendar>内で宣言されたコントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>ゾーン。 `Button1_Click`メソッドは、最初の ID を出力、<xref:System.Web.UI.WebControls.Calendar>コントロール ラベル、および、使用、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>への参照を取得するメソッドを<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>カレンダーをラップするコントロール。 ID、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>制御、およびその子コントロールの ID (これは、<xref:System.Web.UI.WebControls.Calendar>コントロール)、2 番目のラベルにどちらも出力されます。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/CS/getGenericWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_GetGenericWebPart/VB/getGenericWebPartVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="control" /> は <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderConnectionPoints">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::ProviderConnectionPointCollection ^ GetProviderConnectionPoints(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="abstract member GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&#xA;override this.GetProviderConnectionPoints : System.Web.UI.WebControls.WebParts.WebPart -&gt; System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" Usage="webPartManager.GetProviderConnectionPoints webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">接続でプロバイダーとして動作するサーバー コントロール。</param>
        <summary>Web パーツ接続内でプロバイダーとして動作するサーバー コントロールから、コネクション ポイントとして機能できる <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" /> オブジェクトのコレクションを取得します。</summary>
        <returns>プロバイダーのすべてのコネクション ポイントが格納された <see cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 常に Web パーツ接続には、データ、データのコンシューマーとしてのプロバイダーとして機能する 1 つ、2 つのコントロールが含まれます。 各コントロールの接続ポイントとして定義されている 1 つまたは複数のメソッドが必要です。 その接続ポイントは、プロバイダー コントロールの場合<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>オブジェクト。  
  
 プロバイダーには、接続を確立できるように、少なくとも 1 つの接続ポイントが常に必要です。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>メソッドは、プロバイダー コントロールをチェックし、そのすべてのコネクション ポイントのコレクションを取得します。 Web パーツ接続の構成で必要な手順は、プロバイダーの接続ポイントを取得します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> メソッドの使用方法を示します。  
  
 この例では、4 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   2 つのカスタムを含む Web ページ<xref:System.Web.UI.WebControls.WebParts.WebPart>接続できるコントロールと`<asp:webpartmanager>`要素。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールとカスタム インターフェイスです。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 コード例の最初の部分は、表示モードを変更するユーザー コントロールです。 ユーザー コントロールのソース コードの例のセクションから取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 表示モードとユーザー制御のしくみの詳細については、次を参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 Web ページの宣言型マークアップを含む`Register`ユーザー コントロールとカスタム コントロールの両方のディレクティブ。 `<asp:webpartmanager>`要素、`<asp:webpartzone>`カスタムのコントロールを格納する要素と`<asp:connectionszone>`要素。 インシデントを`Page_Load`メソッド、コードを確認するかどうかの接続を既に存在し、そうでない場合は、プロバイダー、コンシューマー、および、各接続ポイントを定義およびによって参照される静的な接続のセットに新しい接続を追加します<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>プロパティ。 なお、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection>オブジェクトを使用して取得される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>メソッドに渡されます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>メソッドを 2 つのコントロール間の接続を作成できるかどうかを決定します。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 例では、3 番目の部分では、コントロールのソース コードを示します。 このコード、および手順については、セクションの例をコンパイルするために取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。  
  
 ブラウザーで Web ページが読み込まれた後にをクリックして、**表示モード**ドロップダウン リスト コントロールと選択**Connect**接続モードをページに切り替えます。 接続モードの使用、`<asp:connectionszone>`コントロール間の接続を作成するための要素。 接続モードのタイトル バーの下向き矢印をクリックして、**郵便番号/ZIP Code**の動詞メニューをアクティブに制御し、 **Connect**します。 接続ユーザー インターフェイス (UI) が表示されたらに含まれているコードによって、接続が作成されたことに注意してください、`Page_Load`メソッド。 場合は、以降のブラウザー セッションでこのページに戻り、この静的な接続が確立されていると、ページが読み込まれるたびに再作成する必要はありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> は <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="ImportWebPart">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPart ImportWebPart(class System.Xml.XmlReader reader, [out] string&amp; errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ImportWebPart (reader As XmlReader, ByRef errorMessage As String) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::WebParts::WebPart ^ ImportWebPart(System::Xml::XmlReader ^ reader, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member ImportWebPart : System.Xml.XmlReader *  -&gt; System.Web.UI.WebControls.WebParts.WebPart&#xA;override this.ImportWebPart : System.Xml.XmlReader *  -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="webPartManager.ImportWebPart (reader, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">インポート元となる XML 記述ファイルから状態データとプロパティ データを読み取る <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="errorMessage">インポート中にエラーが発生した場合にユーザーに表示される <see cref="T:System.String" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの状態データとプロパティ データが格納された XML 記述ファイルをインポートし、コントロールにそのデータを適用します。</summary>
        <returns>インポート元となる XML 記述ファイルで参照される <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (または、<see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> でラップされ、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> として扱われるサーバー コントロール)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>メソッドによって作成された XML 記述ファイルのインポート、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>サーバー コントロールのメソッド。 できませんが、インポートされると、実際のサーバー コントロール、コントロールに関する状態とプロパティのデータを含む説明ファイルのみ。 コントロールと記述ファイルで参照されるアセンブリが既にあります、ユーザーが記述ファイルをインポートしようとした、サーバーで利用できます。  
  
 コントロールのインポートを有効にするのには、追加する必要が、開発者、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>インポートを有効にするページのコントロール。 ゾーン内で、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>コントロールを追加する必要があります。 このコントロールは、ユーザーを参照し、インポートする説明ファイルを検索できるようにするファイル ダイアログ ボックスを提供します。  
  
 によって記述ファイルは読み取り専用ユーザーは、記述ファイルを検索し、インポートを開始、後に、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>メソッド。 エラーがない場合、カタログ内にサーバー コントロールを追加するアセンブリとコントロールが見つかった場合、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>制御、および記述ファイルで指定されたさまざまなプロパティと状態データがコントロールに適用されます。 ユーザーは、コントロールを選択し、ページに追加します。  
  
> [!IMPORTANT]
>  ように、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>メソッド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>メソッドは、セキュリティ上のリスクのいくつかの可能性が。 Web サイトにデータをインポートすることでは、悪意のあるユーザーがインポートされる記述ファイルに不適切なデータやスクリプト コードを挿入しようとします。 ページ、またはデータベースでは、不適切なデータが表示されること、または挿入されたスクリプトを実行できます。 インポート説明ファイル、およびそれらのリスクを回避する方法に関連する潜在的なリスクの概要については、次を参照してください。[セキュリティで保護する Web パーツ ページ](https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="reader" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.IO.EndOfStreamException"><paramref name="reader" /> はこのファイルを読み取ることができませんでした。  
  
または 
 <paramref name="reader" /> は、インポート エラー メッセージを表示する必要がありましたが、ファイル内にそれが見つかりませんでした。  
  
または 
 <paramref name="reader" /> はファイルの末尾に到達しましたが、エクスポート データが格納された XML 要素が見つかりませんでした。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)" />
        <related type="Article" href="https://msdn.microsoft.com/library/8ada6210-ed00-4157-b3e9-a7e87e77caa2">保護の Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="Internals">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Internals As WebPartManagerInternals" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ Internals { System::Web::UI::WebControls::WebParts::WebPartManagerInternals ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Internals : System.Web.UI.WebControls.WebParts.WebPartManagerInternals" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Internals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManagerInternals</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実際には <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" /> クラスに実装されていても、ほとんどの場合コントロールの開発者に役立つメソッドのセットを構成したり分割したりするために使用する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> クラスへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" /> が、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> に分割されたさまざまなメソッドを参照できる、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManagerInternals" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>プロパティのセットへの呼び出しを Api を公開する<xref:System.Web.UI.WebControls.WebParts.WebPartManager>ケースの拡張機能の多くの場合に使用されるメソッド。  
  
 これらの内部メソッドを使用する設計の方法は、によってアクセスする、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>プロパティ。 のみアクセスできますのインスタンス内のメソッドを呼び出して、プロパティが保護されているため、<xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>クラスから継承することによって、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス。  
  
> [!NOTE]
>  このプロパティは IntelliSense から非表示[!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]します。 ただし、派生で<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス、プロパティとそのさまざまなメンバーにアクセスできます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAuthorized">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはその他のサーバー コントロールをページに追加できるかどうかを判断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web パーツの機能の柔軟性の一部では、実行時に Web ページにサーバー コントロールを追加する機能です。 サーバーを制御する一般的なシナリオがいくつか (カスタムできる<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、カスタム サーバー コントロール、ユーザー コントロール、または ASP.NET コントロール) を追加できます。  
  
 次の一般的なシナリオで Web パーツ コントロール セットに ページでは、サーバー コントロールを追加しようと<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>メソッドがそれらを承認するために呼び出されます。  
  
-   内の Web ページのマークアップで宣言することにより、サーバー コントロールが追加されたとき、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン。  
  
-   ときにサーバー コントロールは、ゾーンにプログラムで追加されます。  
  
-   ときに、ユーザーはサーバー コントロールを Web パーツ コントロールのカタログにインポートします。  
  
-   既存のサーバー コントロールが、パーソナル化データ ストアから読み込まれます。  
  
-   サーバー コントロールを追加するときに、<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>サーバー コントロールのカタログで使用できるようにするコントロール。  
  
 コントロールが追加される各シナリオでは、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>メソッドが呼び出され、追加するコントロールを許可するすべての承認条件を満たしていることを確認します。 コントロールが承認されるは、フィルター処理のシナリオがないかどうかは、通常、追加されます。 コントロールが許可されていないとき、Web パーツ コントロール セットは、コンテキストに応じて、いくつかの方法で対応できます。 コントロールのセットはことができます (この場合、ユーザーに通知する必要はありません)、承認されていない部分を追加する通知なしに失敗、エラー メッセージを表示できるまたはのインスタンスを追加することができます、<xref:System.Web.UI.WebControls.WebParts.UnauthorizedWebPart>クラスのプレース ホルダーとして。 このプレース ホルダー オブジェクトは ページで、表示されませんが、未承認のコントロールが除外されているかを示すページのソース コードに表示されます。  
  
 コントロールが承認されているかどうかの行列式は、承認フィルターです。 承認フィルターは、開発者、指定した条件を満たしていないすべてのコントロールをページから除外することができる Web パーツ コントロール セットの機能です。  
  
 フィルター処理のシナリオを作成するには、開発者は、2 つの処理を行う必要があります。 (値は任意で指定できます) を文字列値を割り当てる必要があります最初に、<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>の各プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールのシナリオで使用する予定です。 他の種類でないサーバー コントロールのこのプロパティに値を割り当てることも、<xref:System.Web.UI.WebControls.WebParts.WebPart>制御するために配置される場合<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーンでは、このようなコントロールでラップされます、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 、実行時にコントロールし、このコントロールの継承<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティ。  
  
 フィルター処理のシナリオを作成するために必要な 2 番目の手順は、いずれかにオーバーライド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>メソッド、またはイベント ハンドラーを作成する、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>イベント。 これらのメソッドで、開発者が確認できます、<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティと値は、コントロールを承認されていないことを示している場合、開発者によって、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>メソッドの値を返します`false`。  
  
> [!NOTE]
>  コード例と、カスタマイズされたフィルタ リングのシナリオを使用して設定する方法の説明、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>メソッド、メソッドのオーバー ロードのトピックを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAuthorized(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAuthorized(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.IsAuthorized : System.Web.UI.WebControls.WebParts.WebPart -&gt; bool" Usage="webPartManager.IsAuthorized webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">承認をチェックする対象の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはその他のサーバー コントロール。</param>
        <summary>ページへのコントロールの追加が承認されているかどうかを判断する最初の手順を実行します。</summary>
        <returns><paramref name="webPart" /> をページに追加できるかどうかを示すブール値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>メソッドは、Web パーツ コントロールの承認を確認するセットによって呼び出された最初のメソッドを<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 受け取って`webPart`をパラメーターとしてし、最終的には、コントロールをページに追加するかどうかを決定するプロセスを開始します。 このメソッド コードから直接呼び出す、特定のコントロールが承認されているかどうかを判断する必要がある場合。  
  
 このメソッドは、コントロールを継承するかどうかを判断する初期のタスクを実行、<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスか、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>制御し、必要な場合は、子の種類の制御が含まれています。 承認のタスクの終了、呼び出し、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>メソッドをオーバー ロードします。  
  
   
  
## Examples  
 次のコード例を呼び出す方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29>コントロールがページに追加する承認されているかどうかを決定するコードからメソッド。  
  
 コード例では、3 つの部分があります。  
  
-   カスタム<xref:System.Web.UI.WebControls.WebParts.WebPartManager>オーバーライド コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>メソッド。  
  
-   フィルターを作成する Web ページ、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
-   コード例を実行する方法について説明します。  
  
 このコード例は、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPartManager>オーバーライド コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>のカスタム処理を提供するメソッドをオーバー ロード、<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティ。 このコントロールのプロパティの値をチェック`admin`と、値が存在する場合は、コントロールを承認します。 コントロールには、別の値がある、承認されません。プロパティ値のないコントロールは、フィルター処理のシナリオに含めることが想定されていると同様に、承認されます。  
  
 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例では、動的コンパイルの方法を使用します。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 コード例の 2 番目の部分は、コントロールを除外できるフィルターを作成します。 次の Web ページにはで、次の 3 つの ASP.NET サーバー コントロールが含まれています、`<asp:webpartzone>`要素。 最初と 2 つ目のコントロールが通知の<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティが別の値に設定され、3 つ目は、プロパティを割り当てられません。 実行時に、この認証の値をチェックすることができ、フィルターが開発者によって設定された条件と一致する場合、ページにコントロールを追加できます。 またでことに注意して、`Page_Load`メソッドは、コードの呼び出し、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Web.UI.WebControls.WebParts.WebPart%29>するかどうか、各コントロールが承認されると、かどうか各コントロールのため、その設定を判断するメソッド<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>プロパティ。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 あるコード例を動作させるには、する必要があります設定を追加する Web パーツの説明ファイルをエクスポートするのには、Web.config ファイルに注意してください。 このコード例については、Web ページと同じディレクトリに Web.config ファイルがあることを確認します。 内で、`<system.web>`セクションがあるかどうかを確認してください、`<webParts>`を持つ要素を`enableExport`属性に設定`true`マークアップを次のようにします。  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 ブラウザーでページの読み込み後に注意してください最初のコントロールが表示されることでオーバーライドされたメソッドの条件に一致するため。 フィルターで除外されるため、2 つ目のコントロールは、ページに追加されません。 3 番目のコントロールも追加されていますがあるないため、その<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティ セット。 エクスポートをどちらのコントロールのタイトル バーにある動詞メニューのアイコンをクリックした場合、両方が可能に注意してください、それぞれ<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>プロパティ値が割り当てられます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> は <see langword="null" />です。</exception>
        <block subset="none" type="usage"><para>このメソッドは、コードから直接呼び出されます。 プログラムによる制御承認プロセスを強化する場合は、オーバーライド、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" />メソッドをオーバー ロードします。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthorized">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAuthorized(class System.Type type, string path, string authorizationFilter, bool isShared) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAuthorized(Type ^ type, System::String ^ path, System::String ^ authorizationFilter, bool isShared);" />
      <MemberSignature Language="F#" Value="abstract member IsAuthorized : Type * string * string * bool -&gt; bool&#xA;override this.IsAuthorized : Type * string * string * bool -&gt; bool" Usage="webPartManager.IsAuthorized (type, path, authorizationFilter, isShared)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="authorizationFilter" Type="System.String" />
        <Parameter Name="isShared" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">承認されているかどうかを確認するコントロールの <see cref="T:System.Type" />。</param>
        <param name="path">コントロールがユーザー コントロールの場合は、承認されるコントロールのソース ファイルへの相対アプリケーション パス。</param>
        <param name="authorizationFilter">コントロールをページに追加できるかどうかを判断して承認するために使用される、<see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> コントロールの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> プロパティに割り当てる任意の文字列値。</param>
        <param name="isShared">承認されているかどうかを確認するコントロールが共有コントロール (つまり、アプリケーションの多くのユーザーまたはすべてのユーザーに対して表示され、その <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" /> プロパティ値が <see langword="true" /> に設定されている) かどうかを示します。</param>
        <summary>ページへのコントロールの追加が承認されているかどうかを判断する最後の手順を実行します。</summary>
        <returns>ページへのコントロールの追加が承認されるかどうかを示すブール値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>オーバー ロード メソッドでは、コントロールがページに追加する承認されているかどうかを決定するのには、最後の手順を実行します。 メソッドにより`type`は有効な型および`path`チェックされているコントロールがユーザー コントロールである場合にのみ値を持ちます。 重要な呼び出して<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>メソッド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>イベント。  
  
   
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>コントロールがページに追加する承認されているかどうかを判断するメソッド。  
  
 最初の手順では、コントロールを除外できるフィルターを作成します。 次の Web ページにはで、次の 3 つの ASP.NET サーバー コントロールが含まれています、`<asp:webpartzone>`要素。 最初と 2 つ目のコントロールが通知の<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティが別の値に設定され、3 つ目は、プロパティを割り当てられません。 実行時に、この認証の値をチェックすることができ、フィルターが開発者によって設定された条件と一致する場合、ページにコントロールを追加できます。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/IsAuthorizedCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsAuthorized#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/IsAuthorizedVB.aspx#1)]  
  
 オーバーライドする 2 番目の手順では、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>メソッド、カスタム承認フィルターの処理を作成します。 注こと、コードはまず、プロパティが、値を持つかどうかを制御するためには割り当てられません、<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティが自動的に追加されます。 かどうかのコントロールには、フィルターが、コードを返します`true`フィルター値が等しい場合にのみ`admin`します。 これは、ロールに応じて、特定のユーザーを特定のコントロールを表示するために使用できる単純なメカニズムを示しています。 ロールを使用して完全な例は、このトピックの範囲外ですが、でしたとして使用する同じロジックこのコード例では、オーバーライドされたメソッドが、現在のユーザーが承認フィルターの値に一致するロールに属すかどうかをチェックする可能性があります。、し、そのユーザーにのみ、コントロールを追加します。 これによって、一部のユーザーは、すべてのコントロールを参照してくださいおよび他のユーザーは選択したコントロールだけを表示ページを作成できます。 これは、ロールを使用した場合のフィルターをチェックするロジックが検索する方法です。  
  
```vb  
If Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  
  return True  
Else  
  return False  
End If  
```  
  
```csharp  
if(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  
    return true;  
else  
    return false;  
```  
  
 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例では、動的コンパイルの方法を使用します。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/CS/MyManagerAuthorize.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsAuthorized/VB/MyManagerAuthorize.vb#2)]  
  
 ブラウザーでページの読み込み後に注意してください最初のコントロールが表示されることでオーバーライドされたメソッドの条件に一致するため。 そのフィルター値が除外されているために、2 つ目のコントロールは、ページに追加されません。 ないために、3 番目のコントロールが追加されたその<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティ セット。 一致する最初のコントロールのページをもう一度実行して 2 つ目のコントロールのプロパティ値を変更すると、2 つ目のコントロールも追加されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="type" /> がユーザー コントロールで、<paramref name="path" /> が <see langword="null" /> または空の文字列 ("") のいずれかです。  
  
または 
 <paramref name="type" /> がユーザー コントロール以外で、<paramref name="path" /> に値が割り当てられています。</exception>
        <block subset="none" type="overrides"><para>継承することによって、このメソッドをオーバーライドすることができます、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラス、承認をチェックするときに、追加の処理を提供したい場合。 特定の値をチェックするメソッドをオーバーライドする、<paramref name="authorizationFilter" />パラメーター値に基づき、コントロールをページに追加するかどうかを判断するブール値を返します。  
  
承認フィルターを確認し、カスタム処理を提供する場合もページ開発者は、すべてのクラスから継承することがなく、.aspx ページ、または分離コード ファイルでは、このインラインを行うためのオプションがあります。 ページで代替のイベント ハンドラーを宣言することができます、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />のメソッド、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />コントロール。 詳細と例では、次を参照してください。、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />メソッド。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="IsCustomPersonalizationStateDirty">
      <MemberSignature Language="C#" Value="protected virtual bool IsCustomPersonalizationStateDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsCustomPersonalizationStateDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsCustomPersonalizationStateDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomPersonalizationStateDirty : bool" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールにより制御されるページ レベルのパーソナル化の情報に影響を与えるような、パーソナル化に関する変更が行われたかどうかを示す値を取得します。</summary>
        <value>パーソナル化に関する変更が行われたかどうかを示すブール値。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>かどうか、管理しているページ レベルのパーソナル化データのいずれかを追跡するために内部的にプロパティが変更されました。 ユーザーが追加や削除など、ページ レベルでのさまざまなパーソナル化操作を実行時にパーソナル化データが変更<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、接続または切断コントロール、コントロール、およびその他のアクションを移動することによって、ページのレイアウトを変更します。  
  
> [!NOTE]
>  ユーザーは、特定のコントロールに個人的な変更を加える、つまり、コントロール レベルのパーソナル化も実行でき、変更がそのコントロールのみに影響します。 例はコントロールを編集し、そのタイトルのテキストまたはその背景色を変更します。 コントロール レベルのパーソナル化ではによって追跡されるページ レベルのパーソナル化データには影響しません、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール、そのため、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>にプロパティの値は変更されません`true`コントロール レベルのパーソナル化が発生します。  
  
 メソッドは保護され、呼び出し元が直接アクセスすることはできませんが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>プロパティは、呼び出し元が直接アクセスすることができ、このプロパティの値を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.PersonalizationState.IsDirty" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.PersonalizationState.SetDirty" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="webPartManager.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">読み込む対象となる永続的な状態データを格納します。</param>
        <summary>前回のページ要求で保存され、後続の要求で復元する必要のある、コントロールの状態データを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>メソッドは、ページのポストバック間で永続化する必要があるプロパティのデータを復元するための便利な場合でも、<xref:System.Web.UI.Control.EnableViewState%2A>プロパティに設定されて`false`します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="savedState" /> は有効な <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> ではありません。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.LoadCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.LoadCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">読み込む状態データを含む <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</param>
        <summary>初期化プロセス中に後で使用するためにパーソナル化オブジェクトによって <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールに渡されたカスタムのパーソナル化データを格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A>メソッドの形式で保存された状態データを提供する、<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>オブジェクト。 Web パーツ コントロールにパーソナル化データを読み込むと、その他の初期化タスクを実行するには、このデータは使用最終的にします。  
  
> [!NOTE]
>  このメソッドはいつ開始するメソッドのシーケンス、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>メソッドを最初に関連付けられている要求<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>パーソナル化データを提供するオブジェクト、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。  
  
 このメソッドは、コードから直接呼び出すことはできません。 直接呼び出すことができます、ただし、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>自体には、メソッドの呼び出し、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A>メソッドとパーソナル化データを返します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>開発者、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />派生メソッド<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラス。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="MediumPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MediumPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MediumPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MediumPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MediumPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MediumPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Security.PermissionSet" /> および <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> のアクセス許可のみを付与する <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Security.PermissionSet" /> および <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> のアクセス許可のみを付与する <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.PermissionSet>このプロパティによって返されるオブジェクトは、型の逆シリアル化のインポート中に使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimalPermissionSet">
      <MemberSignature Language="C#" Value="protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet MinimalPermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property MinimalPermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Security::PermissionSet ^ MinimalPermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimalPermissionSet : System.Security.PermissionSet" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Security.PermissionSet" /> および <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> のアクセス許可のみを付与する <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Security.PermissionSet" /> および <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Execution" /> のアクセス許可のみを付与する <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /> オブジェクトを取得します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.PermissionSet>このプロパティによって返されるオブジェクトが逆シリアル化の入力点を除いてすべてのインポート中に使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveWebPart">
      <MemberSignature Language="C#" Value="public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart, class System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int32 zoneIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart, System::Web::UI::WebControls::WebParts::WebPartZoneBase ^ zone, int zoneIndex);" />
      <MemberSignature Language="F#" Value="abstract member MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit&#xA;override this.MoveWebPart : System.Web.UI.WebControls.WebParts.WebPart * System.Web.UI.WebControls.WebParts.WebPartZoneBase * int -&gt; unit" Usage="webPartManager.MoveWebPart (webPart, zone, zoneIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="zone" Type="System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
        <Parameter Name="zoneIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="webPart">移動される <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> またはその他のサーバー コントロール。</param>
        <param name="zone"><paramref name="webPart" /> の移動先の <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />。</param>
        <param name="zoneIndex"><paramref name="webPart" /> 内の他のコントロールに対する <paramref name="zone" /> の相対インデックスを示す整数。</param>
        <summary>1 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーンから別のゾーンまたは同じゾーン内の新しい位置に、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> コントロールまたはサーバー コントロールを移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>メソッドに移動する`webPart`または別のゾーンで同じゾーンでの新しい場所にします。 コードから直接このメソッドを呼び出すことができ、ユーザーは、さまざまなオプションを使用して Web パーツのユーザー インターフェイス (UI) での新しい位置にコントロールを移動したときにも呼び出されます。  
  
 前に、多くの条件を満たす必要がある`webPart`移動でき、これらのほとんどは、このトピックの「例外」に一覧表示された項目で示されます。 場合`webPart`に含まれていない、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン ゾーンに最初に、移動することはできません。  
  
 移動する次の一連のアクションが発生した後、条件を満たしている、 `webPart`:  
  
1.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> メソッドは、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> イベントを発生させます。  
  
2.  `webPart` 現在のゾーンから必要に応じて、削除され、新しいゾーンまたは現在のゾーン内の新しい位置に追加します。  
  
3.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> メソッドは、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> イベントを発生させます。  
  
4.  `zoneIndex`のすべて<xref:System.Web.UI.WebControls.WebParts.WebPart>配信元と宛先の両方のゾーンでのコントロールが移動を反映するようにリセットします。  
  
   
  
## Examples  
 次のコード例を呼び出す方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>メソッドに移動するコードから直接、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 1 つのゾーンから別のコントロール。  
  
 コード例では、3 つの部分があります。  
  
-   表示モードを変更するユーザー コントロール。  
  
-   コントロールをホストする Web ページ。  
  
-   コード例を実行する方法について説明します。  
  
 コード例の最初の部分は、表示モードを変更するユーザー コントロールです。 ユーザー コントロールのソース コードの例のセクションから取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 表示モードとユーザー制御のしくみの詳細については、次を参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 例では、2 番目の部分は、2 つのゾーンを含む 2 つのサーバー コントロールを含む Web ページです。 ユーザーがクリックすると、 **web パーツの移動**ページで、コードでは、ボタン、`Button1_Click`メソッドは、最初のゾーンからコントロールを 2 番目のゾーン内の新しい位置に移動します。 まず、コードを呼び出す必要がありますに注意してください、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>を取得するメソッド、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>をラップするオブジェクト、`list1`コントロール。 これは、必要なための最初のパラメーター、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>メソッドが必要です、<xref:System.Web.UI.WebControls.WebParts.WebPart>一方を制御`list1`ASP.NET サーバー コントロールします。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/CS/MoveWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_MoveWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_MoveWebPart/VB/MoveWebPartVB.aspx#1)]  
  
 ページが表示されたら、クリックして、 **web パーツの移動**ボタン、および、リンクが含まれるコントロールが 2 番目のゾーンで中央の位置に移動します。 コントロールのこの移動は呼び出すことによってプログラムでは、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>メソッド。 使用することも、**表示モード**ドロップダウン リスト コントロールをデザイン モードにし、デザイン モードでページを切り替える別のゾーンまたはゾーン内の異なる場所に、コントロールをドラッグすることができます。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> 、メソッドを呼び出しても、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>このようなユーザー開始を処理するためにコントロールが移動します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="webPart" /> が、<see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Controls" /> コントロールの <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コレクションに格納されていません。  
  
または 
 <paramref name="zone" /> が、<see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" /> コントロールの <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コレクションに格納されていません。  
  
または 
<paramref name="webPart" /> コントロールの <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" /> プロパティで参照されるゾーンが <see langword="null" /> です。つまり、現在 <paramref name="webPart" /> がゾーン内にありません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="webPart" /> または <paramref name="zone" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="zoneIndex" /> が 0 未満です。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizeWebPart">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizeWebPart(class System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizeWebPart (e As WebPartAuthorizationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizeWebPart(System::Web::UI::WebControls::WebParts::WebPartAuthorizationEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit&#xA;override this.OnAuthorizeWebPart : System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs -&gt; unit" Usage="webPartManager.OnAuthorizeWebPart e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" /> イベントを発生させ、イベントのハンドラーが存在する場合はそれを呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>メソッド、ときに、<xref:System.Web.UI.WebControls.WebParts.WebPart>ページに追加する承認のコントロールをチェックしています。 ときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>メソッドが呼び出されると、生成、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>イベント ハンドラーが呼び出されますが、イベントのハンドラー メソッドがある場合とします。  
  
 承認する処理の<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは、重要な Web パーツ機能です。 すべて<xref:System.Web.UI.WebControls.WebParts.WebPart>またはサーバー コントロールをゾーンに追加される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール、コントロールを追加できるかどうかを決定する承認プロセスを通過します。 既定では、Web パーツ コントロール セットでは、コントロールがゾーンに追加されていることを防ぐためにフィルター条件は提供されません。 コントロールのセットは開発者が独自のフィルター条件を作成するために必要なメカニズムを提供します。 これらのメカニズムを使用すると、カスタム フィルター処理シナリオを作成できます。 たとえば、ページが表示され、それらのコントロールは追加されない場合は、ユーザーは、ユーザー ロールでは、ときに、特定のコントロールをゾーンに追加は、ユーザーが管理者ロールの場合は、ようにはフィルターを作成します。  
  
 承認プロセス中にコントロールをフィルター処理するためのメカニズムは、<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.WebPart>、コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>と<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>メソッド、および<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>上のイベント、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。  
  
 フィルター処理のシナリオを作成するには、基本的に 2 つのタスクです。 最初に、文字列を割り当てる、<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>の各プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPart>フィルターを適用するコントロール。 これらの文字列値は任意では、フィルターを適用する条件を含める必要があります。 たとえば、特定の制御したい場合管理者の場合にのみゾーンに追加するユーザーは、ページを表示しの文字列値を割り当てることができます`admin`プロパティ。 でした、ASP.NET のロール機能を使用し、サイトのすべてのユーザーを管理者やマネージャーで、ユーザーなどのさまざまなロールに追加します。 フィルター コードはユーザーのロールを確認、チェック対象のコントロールの承認フィルターの値と比較ページの読み込み時に、ユーザーが管理者ロールには (たとえば) とコントロールの設定した場合と<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>値`admin`、コントロールを追加する可能性があります。  
  
 2 番目のフィルター処理のシナリオを作成する手順は、チェックするコードを記述する、<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティの値<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、およびそのゾーンに追加される前に各コントロールが承認されているかどうかを判断します。 このフィルター処理のコードを配置する場所の 2 つのオプションがあります。 最初のオプションは、ページの開発者の推奨されるオプションです。 処理するメソッドを作成することができます、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Web ページのサーバー スクリプト コードで直接、または分離コード ファイル内のイベント。 イベントに追加することで、メソッドを関連付ける、`OnAuthorizeWebPart`属性のタグを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>サンプル マークアップ コードを次に示すように、ページを制御します。  
  
```  
<asp:webpartmanager id="manager1" runat="server"   
   OnAuthorizeWebPart="manager1_AuthorizeWebPart" />  
```  
  
 各チェックは、カスタム メソッドを実行する必要がありますすべて<xref:System.Web.UI.WebControls.WebParts.WebPart>、フィルター処理条件を制御し、次にブール値を代入の結果に基づいて、<xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A>のプロパティ、<xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs>オブジェクトを示すかどうか、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールであることができます追加されます。 例のセクションのコードでは、これを行う方法を示します。  
  
 継承するように、フィルター処理コードを配置する場所の 2 番目のオプションは、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス、およびフィルター条件をチェックするメソッドをオーバーライドします。 2 つのメソッドはオーバーライドすることができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType>メソッドまたは<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>メソッド。 どちらの方法でも機能しますが、ほとんどの場合、オーバーライドすることをお勧め、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>メソッドは、全体の承認プロセス経由でプログラムによる制御のありますので、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>メソッドは 1 つだけ特定のタスク、これは、イベントとハンドラーのチェックを発生させる。 カスタムのコード例については<xref:System.Web.UI.WebControls.WebParts.WebPartManager>をオーバーライドするクラス、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>メソッドを参照してください、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType>メソッドのオーバー ロードします。  
  
   
  
## Examples  
 次のコード例は、のカスタム イベント ハンドラーを設定する方法を示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> 、イベント ハンドラー用のカスタムのフィルタ リング コードを提供できるように、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>メソッド。 この例にはフィルター処理のシナリオとの承認を提供するページの開発者の一般的な方法があります<xref:System.Web.UI.WebControls.WebParts.WebPart>ページに追加するコントロール。  
  
 Web ページで、`<asp:webpartmanager>`要素には、`OnAuthorizeWebPart`属性に割り当てられているイベント ハンドラーの名前に置き換えます。 メソッドは、ページ上のコントロールが、それぞれであるかどうかを確認します。<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>プロパティの値に設定`admin`し、そうである場合を返します`true`、が承認され、ページに追加することを意味します。  
  
> [!NOTE]
>  コントロールをメモに割り当てられている任意の値がない、<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>はフィルター処理のシナリオに含めることが想定していたので、プロパティは同様に、追加します。 これは、フィルター処理のシナリオで一般的なアプローチとなります。 一部のコントロールがフィルター選択すると、他のユーザーはありません、ため、これらはすべてのユーザーに利用できると見なされます。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 ロールのユーザーの設定は、このトピックの範囲外ですが、ために、このコード例は、フィルター処理でのユーザー ロールをチェックできません。 ただし、ユーザーの役割に応じてコントロールのフィルター処理シナリオは、このフィルター処理機能の最も一般的な用途の 1 つである可能性があります。 サイトの役割があるコントロールをフィルター処理するには、このメソッドでのユーザー ロールを確認したい場合は、メソッドは、(上記のコードの例は、ロールを使用しない単純なアプローチ) とは、次のコード ブロックをようになります。  
  
```vb  
Protected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  
  As Object, ByVal e As WebPartAuthorizationEventArgs)  
  
  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  
    If Roles.IsUserInRole(Page.User.Identity.Name, _  
      e.AuthorizationFilter) Then  
  
      e.IsAuthorized = True  
    Else  
      e.IsAuthorized = False  
    End If  
  End If  
  
End Sub  
```  
  
```csharp  
protected void mgr1_AuthorizeWebPart(object sender,   
  WebPartAuthorizationEventArgs e)  
{  
  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  
  {  
    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  
      e.IsAuthorized = true;  
    else  
      e.IsAuthorized = false;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivated : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivated : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>ページとそのコントロールが読み込まれ、ページの接続がアクティブになってデータの共有が開始されることを示す <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>メソッド発生させ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>ページの読み込みプロセスが完了した後のイベント。 メソッドは、イベントのハンドラーを追加する方法を提供します。  
  
 ページの開発者は、追加することで、イベントのカスタム ハンドラーを追加できます、`OnConnectionsActivated`属性を`<asp:webpartmanager>`内の要素をページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>開発者、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)" />派生メソッド<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラス。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionsActivating">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectionsActivating (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConnectionsActivating(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConnectionsActivating (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConnectionsActivating(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionsActivating : EventArgs -&gt; unit&#xA;override this.OnConnectionsActivating : EventArgs -&gt; unit" Usage="webPartManager.OnConnectionsActivating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>ページとそのコントロールが読み込まれ、接続をアクティブにするプロセスを開始できることを示す <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>メソッド発生させ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>イベントで、プログラムで接続をアクティブ化のプロセスをカスタマイズするためのメカニズムを開発者に提供します。  
  
 ページの開発者は、追加することで、イベントのカスタム ハンドラーを追加できます、`OnConnectionsActivating`属性を`<asp:webpartmanager>`内の要素をページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>開発者、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)" />派生メソッド<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラス。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanged(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanged (e As WebPartDisplayModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanged(System::Web::UI::WebControls::WebParts::WebPartDisplayModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanged : System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">変更された表示モードに関連付けられたイベント データを格納する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />。</param>
        <summary>Web ページ上で <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> コントロールが、ある表示モードから別の表示モードに切り替えるプロセスを完了したことを示す、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>そのベースのメソッドに形成発生させるだけです、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>イベント。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドすることができます、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />メソッド。 たとえば、表示モードの変更を行うたいにどのディスプレイによってモードが含まれている、ユーザー インターフェイス (UI) の外観を変更、<see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs.OldDisplayMode" />プロパティ。 または、特定のコントロールを表示または特定のコンテンツを非表示をする可能性があります。  
  
メソッドをオーバーライドするときにする必要があります通常基本メソッドを呼び出してオーバーライドされたメソッドの最後の手順として、カスタム コードを最初に、実行し、最後に、イベントが発生したようにモードの変更が完了したことを示します。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayModeChanging(class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayModeChanging (e As WebPartDisplayModeCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayModeChanging(System::Web::UI::WebControls::WebParts::WebPartDisplayModeCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit&#xA;override this.OnDisplayModeChanging : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs -&gt; unit" Usage="webPartManager.OnDisplayModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">変更中の表示モードに関連付けられたイベント データを格納する <see cref="T:System.EventArgs" />。</param>
        <summary>Web ページ上で <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging" /> コントロールが、ある表示モードから別の表示モードに切り替えるプロセスを実行していることを示す、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>そのベースのメソッドに形成発生させるだけです、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>イベント。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>オーバーライドすることができます、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)" />メソッド。 たとえば、表示モードを変更するようたい新しい表示モードがどのようになるかを確認 (を使用して、<see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode" />プロパティ) と新しい表示モードがどのようになるかに基づいて、ユーザー インターフェイス (UI) で何か変更します。 カスタム表示モードがある場合は、カスタム モードは、新しい表示モードを使用する場合、特定のコントロールを表示する可能性があります。  
  
このメソッドをオーバーライドするときに表示モードは、変更を開始するかを示す、イベントが発生するために、オーバーライドされたメソッドの最初の手順として、基本メソッドを通常呼び出す必要があります。 次に、カスタム コード変更を行えるユーザー インターフェイス (UI) で新しい表示モードが実際に表示される前に。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="webPartManager.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> コントロールの有効期間における最初のイベントとして、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A>メソッドは、基本メソッドを発生させる、<xref:System.Web.UI.Control.Init>制御、および次の 1 つだけのインスタンスが存在するなど、いくつかの準備手順が実行のイベント、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>  ページでは、制御し、読み込みパーソナル化データ。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">別の <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールがページ上に存在します。</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="webPartManager.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>Web ページに <see cref="E:System.Web.UI.Control.PreRender" /> コントロールを表示する直前に発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender%2A>メソッドは、基本メソッドを発生させる、<xref:System.Web.UI.Control.PreRender>制御、および、レジスタのイベントは、Web パーツを含むページで必要ないくつかのクライアント スクリプトを制御します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanged(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanged (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanged(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> コントロールを新しく選択した後またはその選択を解除した後に発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>メソッド発生させ、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> 、これは、ユーザー インターフェイス (UI) の外観を変更するは開発者が求める位置に、通常、ポイント イベント。 たとえば、新しい<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールが選択されている場合、Web パーツ コントロール セット、新しく選択したコントロールのレンダリングを変更します。 コントロールの選択がクリアされた後、レンダリングが正常に返されます。  
  
 ユーザーを選択した後特定の<xref:System.Web.UI.WebControls.WebParts.WebPart>編集に関しては、コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>メソッドが呼び出されます。 ユーザーがコントロールを編集が完了し、コントロールの選択がオフになっている結果が閉じるときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>メソッドが再度呼び出されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>関連するいくつかのオプション、<see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />イベントは、開発者が選択されているコントロールが変更された後に発生するレンダリングをカスタマイズします。 宣言型コードで内で、<see langword="&lt;asp:webpartmanager&gt;" />要素を設定すると、<see langword="OnSelectedWebPartChanged" />属性、およびカスタム メソッドの名前を割り当てます。 メソッドでは、カスタム イベントの発生時に選択したコントロールのレンダリングを変更できます。 継承することも、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスし、メソッドをオーバーライドします。 3 番目のオプションは、ゾーン レベルの表示をカスタマイズするには継承するなど、<see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />クラス、およびオーバーライドその<see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />メソッドを選択し、編集の処理中に消去のコントロールのレンダリングをカスタマイズします。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedWebPartChanging(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedWebPartChanging (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedWebPartChanging(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnSelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnSelectedWebPartChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />。</param>
        <summary>現在選択されている <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" /> コントロールから選択を他に変更するプロセスを実行しているときに発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>メソッド発生させ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>の変更の処理中に発生するイベント<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールが現在選択されています。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、選択したコントロールを変更するプロセスをキャンセルする機会を提供する、このメソッドと関連のイベントを使用します。 内でメソッドを呼び出すなど、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>メソッド内でも、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>メソッドは、プロセスをキャンセルする方法を提供します。 ユーザーには、編集されているコントロールのキャンセル動詞がクリックすると、コントロールが選択されていないと、ため、編集して変更は保存されませんが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>メソッドでは、編集、変更を取り消すことができます。  
  
> [!NOTE]
>  メソッドを開始および終了の接続プロセス中には、メソッドを呼び出す同様に、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを別のコントロール、そのプロセスのキャンセルを有効にします。  
  
 ページの開発者はカスタム ハンドラーを作成できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>イベントを追加することで、`OnSelectedWebPartChanging`属性を`<asp:webpartmanager>`内の要素宣言ページ マークアップ、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="webPartManager.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">コントロールの削除に関連付けられたイベント データ。</param>
        <summary><see cref="E:System.Web.UI.Control.Unload" /> 基本イベントを発生させ、Web ページから <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> インスタンスを削除します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdded(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdded (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdded(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" /> コントロールがページに追加された後に発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>メソッドは追加の処理中に、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (またはその他のサーバー コントロールに追加される、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン) ページにします。  
  
 ページの開発者はカスタム ハンドラーを作成できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>イベントを追加することで、`OnWebPartAdded`属性を <`asp:webpartmanager>`要素、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartAdding">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartAdding(class System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartAdding (e As WebPartAddingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartAdding(System::Web::UI::WebControls::WebParts::WebPartAddingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit&#xA;override this.OnWebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartAdding e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" /> コントロール (あるいは、サーバー コントロールまたはユーザー コントロール) を <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーンに追加するプロセスを実行しているときに発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>メソッド発生させ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>コントロールが追加されていることを示すイベント。 メソッドには、追加のプロセスをキャンセルするオプションも提供します。 コントロールが正常に追加する場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>イベントに依存します。  
  
 ページの開発者は追加することで、関連イベントのカスタム ハンドラーを提供することができます、`OnWebPartAdding`属性を`<asp:webpartmanager>`Web ページ、および属性にカスタム メソッドの名前を割り当てる要素。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生を作成する開発者<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスでオーバーライドできます、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />イベント処理をカスタマイズするメソッド。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosed(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosed (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosed(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />。</param>
        <summary>コントロールがページから削除されたことを通知する <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>メソッドが発生、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>ことを示すイベントを<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (またはその他のサーバーまたはユーザー コントロール) が正常に閉じられたページ。  
  
 閉じるには、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは表示されませんしも特別なに配置するオブジェクトを保持するいると呼ばれるページ カタログようにページから削除することを意味します。 対応するページのカタログ、<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>コントロールを終了への参照を保持<xref:System.Web.UI.WebControls.WebParts.WebPart>各ページのコントロール。 場合、<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>内のページにコントロールが宣言されている、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>ゾーン、ユーザーは、カタログの表示モードに切り替えるし、以前に閉じられたすべてのコントロールをページに追加します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>メソッドは、開発者がカスタム ハンドラーを作成する機会を提供します。、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>イベント。 ページの開発者は、追加することで、イベントのカスタム ハンドラーを追加できます、`OnWebPartClosed`属性を`<asp:webpartmanager>`内の要素をページで、および属性にカスタム メソッドの名前を割り当てます。 1 つの便利なタスクが、開発者がこのメソッドで実行可能性がありますでは、終了したコントロールの代わりにプレース ホルダーを表示するのには、コントロールをページに追加する方法をユーザーに通知するためのヒントが完了します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartClosing(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartClosing (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartClosing(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />。</param>
        <summary>ページから <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" /> コントロールまたはサーバー コントロールを削除するプロセスを実行しているときに発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>メソッド発生させ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>コントロールが閉じられたまたはページから削除処理中であることを示すイベント。 メソッドには、終了プロセスをキャンセルするオプションも提供します。 コントロールがページから、正常に削除された場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>イベントに依存します。  
  
 ページの開発者は追加することで、関連イベントのカスタム ハンドラーを提供することができます、`OnWebPartClosinging`属性を`<asp:webpartmanager>`Web ページ、および属性にカスタム メソッドの名前を割り当てる要素。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生を作成する開発者<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスでオーバーライドできます、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />イベント処理をカスタマイズするメソッド。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleted(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleted (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleted(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" /> コントロールがページから完全に削除された後に発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>メソッドは削除の処理中に、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (またはその他のサーバー コントロールに追加される、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン) ページから。  
  
 ページの開発者はカスタム ハンドラーを作成できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>イベントを追加することで、`OnWebPartDeleted`属性を <`asp:webpartmanager>`要素、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartDeleting(class System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartDeleting (e As WebPartCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartDeleting(System::Web::UI::WebControls::WebParts::WebPartCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit&#xA;override this.OnWebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs" />。</param>
        <summary>動的な <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" /> コントロール (または、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーンに配置されたサーバー コントロールまたはユーザー コントロール) を削除するプロセスを実行していることを示す、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動的のみ<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを削除して、コントロールが削除されると、コントロール インスタンスがページからは完全に削除および復元することはできません。 動的<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは、プログラムで追加されたまたは Web パーツのカタログから静的コントロールではなくが宣言されている Web ページのマークアップにします。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>メソッド発生させ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>コントロールがそのゾーンから完全に削除されることを示すイベント。 メソッドには、削除のプロセスをキャンセルする機会も提供します。 コントロールがページから、正常に削除された場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>イベントに依存します。  
  
 ページの開発者は追加することで、関連イベントのカスタム ハンドラーを提供することができます、`OnWebPartDeleting`属性を`<asp:webpartmanager>`Web ページ、および属性にカスタム メソッドの名前を割り当てる要素。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生を作成する開発者<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスでオーバーライドできます、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />イベント処理をカスタマイズするメソッド。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoved(class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoved (e As WebPartEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoved(System::Web::UI::WebControls::WebParts::WebPartEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit&#xA;override this.OnWebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" /> コントロールがページ上の別の位置に移動された後に発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>メソッドが発生、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>の最後のイベント、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>メソッドにより、いずれか、コード、イベント ハンドラーの実行前に、コントロールを移動するプロセスが完了します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>イベントは、コントロールは、現在のゾーン内または別のゾーンに移動し、プログラムまたはユーザー コントロールをドラッグして、移動が完了するかどうかは関係ありません。  
  
 ページの開発者はカスタム ハンドラーを作成できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>イベントを追加することで、`OnWebPartMoved`属性を <`asp:webpartmanager>`要素、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartMoving(class System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartMoving (e As WebPartMovingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartMoving(System::Web::UI::WebControls::WebParts::WebPartMovingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit&#xA;override this.OnWebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs -&gt; unit" Usage="webPartManager.OnWebPartMoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" /> ゾーン内の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール (あるいは、サーバー コントロールまたはユーザー コントロール) を移動するプロセスを実行していることを示す、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>メソッドが発生、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>イベントが発生ときに、<xref:System.Web.UI.WebControls.WebParts.WebPart>か他のサーバー コントロールがそのゾーン内または別のゾーンに移動されています。 メソッドには、移動プロセスをキャンセルする機会も提供します。 移動が正常に完了すると場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>イベントに依存します。  
  
 ページの開発者は追加することで、関連イベントのカスタム ハンドラーを提供することができます、`OnWebPartMoving`属性を`<asp:webpartmanager>`Web ページ、および属性にカスタム メソッドの名前を割り当てる要素。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生を作成する開発者<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスでオーバーライドできます、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />イベント処理をカスタマイズするメソッド。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" /> コントロールの間に接続が確立された後に発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>メソッドの末尾に対応するイベントを発生させる、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッドで、イベント ハンドラー内のコードを実行する前に、2 つのコントロールを接続するための手順が完了したことにより、します。  
  
 メソッドは、接続の作成のプロセスをプログラムで制御を提供し、関連のイベントは、ユーザー インターフェイス (UI) を更新または接続が確立されていることをユーザーに通知する便利な点。  
  
 ページの開発者はカスタム ハンドラーを作成できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>イベントを追加することで、`OnWebPartsConnected`属性を <`asp:webpartmanager>`要素、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsConnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsConnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsConnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsConnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsConnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" /> ゾーンに配置されている 2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール (あるいは、サーバー コントロールまたはユーザー コントロール) の間に接続を確立するプロセスを実行しているときに発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>メソッド発生させ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>イベントに 2 つのコントロールが、接続を確立しようとしています。 ときに発生します。 メソッドは、接続試行をキャンセルする機会を提供します。 接続が成功した場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>イベントに依存します。  
  
 ページの開発者は追加することで、関連イベントのカスタム ハンドラーを提供することができます、`OnWebPartsConnecting`属性を`<asp:webpartmanager>`Web ページ、および属性にカスタム メソッドの名前を割り当てる要素。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生を作成する開発者<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスでオーバーライドできます、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />イベント処理をカスタマイズするメソッド。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnected">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnected(class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnected (e As WebPartConnectionsEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnected(System::Web::UI::WebControls::WebParts::WebPartConnectionsEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" /> コントロール間の接続が終了した後に発生する、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>メソッドの末尾に対応するイベントを発生させる、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>メソッドで、2 つのコントロール間の接続を終了するプロセスを実行します。  
  
 ユーザー インターフェイス (UI) に変更を加えるか、アプリケーションに他の変更を行う開発者がユーザーに通知できるように、メソッドの接続を終了するプロセスをプログラムで制御を提供します。  
  
 ページの開発者はカスタム ハンドラーを作成できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>イベントを追加することで、`OnWebPartsDisconnected`属性を <`asp:webpartmanager>`要素、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="OnWebPartsDisconnecting">
      <MemberSignature Language="C#" Value="protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWebPartsDisconnecting(class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWebPartsDisconnecting (e As WebPartConnectionsCancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWebPartsDisconnecting(System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit&#xA;override this.OnWebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs -&gt; unit" Usage="webPartManager.OnWebPartsDisconnecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" /> ゾーン内の 2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール (あるいは、サーバー コントロールまたはユーザー コントロール) の接続を終了するプロセスを実行していることを示す、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>メソッド発生させ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>イベントで、2 つのコントロールが接続を終了するときに発生します。 メソッドは、切断されたときのプロセスをキャンセルする機会を提供します。 接続を正常に削除する場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>イベントに依存します。  
  
 ページの開発者は追加することで、関連イベントのカスタム ハンドラーを提供することができます、`OnWebPartsDisconnecting`属性を`<asp:webpartmanager>`Web ページ、および属性にカスタム メソッドの名前を割り当てる要素。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生を作成する開発者<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスでオーバーライドできます、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />イベント処理をカスタマイズするメソッド。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="Personalization">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Personalization As WebPartPersonalization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ Personalization { System::Web::UI::WebControls::WebParts::WebPartPersonalization ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Personalization : System.Web.UI.WebControls.WebParts.WebPartPersonalization" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Personalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartPersonalization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページのパーソナル化データが格納されたオブジェクトへの参照を取得します。</summary>
        <value>パーソナル化データが格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>プロパティにアクセスする方法を提供する、<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>をページに関連付けられているオブジェクト、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 このプロパティを使用してパーソナル化オブジェクトのさまざまなメンバーにアクセスすることができます。 たとえば、使用することができます、<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>メソッドから、ページのパーソナル化スコープの切り替えをユーザーのスコープ、またはその逆を共有します。 ページで、パーソナル化データ、その他のどのプロバイダーが使用されるパーソナル化が有効かどうかも、目的のページの現在のパーソナル化スコープを検索できます。  
  
 によって参照されるデータに注意してください、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>プロパティは、ページ レベルのパーソナル化データのみによって追跡された、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 パーソナル化可能なプロパティの値などのコントロールに固有のパーソナル化データ<xref:System.Web.UI.WebControls.WebParts.WebPart>制御がの一部ではなく、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>プロパティ。  
  
> [!NOTE]
>  Web パーツ パーソナル化の詳細については、次を参照してください。 [Web パーツ パーソナル化の概要](https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320)します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>プロパティ プログラムを使用します。  
  
 次の Web ページでは、ユーザー編集モードの特定の側面を入力する、<xref:System.Web.UI.WebControls.Calendar>コントロール。 **切り替えスコープ**ボタンは、ユーザーまたは共有パーソナル化スコープに、ページを切り替えます。 **編集モードの**と**Browse Mode**各ボタンでは、適切な表示モードに切り替えます。 注意してください、 `<script>` 、ファイルは、イベントの使用を処理するメソッドの 2 つのセクションにタグ付け、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>プロパティを基になるオブジェクトの便利なメンバーにアクセスします。 具体的には、これらのメソッドを使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>メソッドと<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A>プロパティを介してアクセスするオブジェクトを<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>プロパティ。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Personalization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/CS/wpmgrPersonalizationCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Personalization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Personalization/VB/wpmgrPersonalizationVB.aspx#1)]  
  
 実行するコード例は、するもする必要があります有効にするユーザーまたはユーザーが共有スコープ内のページを個人用に設定します。 内で、Web.config ファイルにエントリを追加、`<system.web>`セクションで、次のマークアップを参照してください。  
  
```  
<webParts>  
  <personalization>  
    <authorization>  
      <allow  
        users="[Replace the text and brackets with a user name or   
           group.]"  
        roles="admin"   
        verbs="enterSharedScope"  />  
    </authorization>  
  </personalization>  
</webParts>   
```  
  
 ブラウザーでページを読み込んだ後、**切り替えスコープ**ボタン、およびページがこれで、スコープの共有を次に注意します。 クリックして**編集モードの**表示モードを変更する [表示のコントロールの動詞メニューをクリックして選択します**編集**] メニューから。 両方の編集コントロールのユーザー インターフェイス (UI) が表示されることに注意してください。 今すぐクリックして**参照モード**を通常の参照を返します。 ページという共有スコープ内にある場合はクリックして**切り替えスコープ**ページがユーザーのスコープを確認するには、もう一度です。 次に、コントロールをもう一度、編集、編集 ui でいるようになりましたことを確認するには、同じ手順に従う、<xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart>コントロールは表示されません。 このコントロールは、ページが共有パーソナル化スコープ内にある場合にのみ機能するためです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7dc34f74-52aa-4082-b98d-2bcf9e07e320">Web パーツ パーソナル化の概要</related>
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScript">
      <MemberSignature Language="C#" Value="protected virtual void RegisterClientScript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RegisterClientScript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RegisterClientScript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RegisterClientScript();" />
      <MemberSignature Language="F#" Value="abstract member RegisterClientScript : unit -&gt; unit&#xA;override this.RegisterClientScript : unit -&gt; unit" Usage="webPartManager.RegisterClientScript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールで、Web ページ内における <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールのドラッグなど、さまざまなパーソナル化機能に使用するクライアント側スクリプトを生成できるようにします。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webPartManager.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">ページに書き込むコントロールの内容を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>オーバーライドして、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールが何らかの内容を表示するのを防ぎます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="webPartManager.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールの状態データを保存し、今後このコントロールが含まれた Web ページを要求されたときにそのデータを復元できるようにします。</summary>
        <returns>コントロールの保存した状態データを格納する <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>メソッドは、ページのポストバック間で永続化する必要があるプロパティの状態データを保存します。 場合でも、<xref:System.Web.UI.Control.EnableViewState%2A>プロパティに設定されて`false`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCustomPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SaveCustomPersonalizationState(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SaveCustomPersonalizationState (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SaveCustomPersonalizationState(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit&#xA;override this.SaveCustomPersonalizationState : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="webPartManager.SaveCustomPersonalizationState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">読み込む状態データを含む <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールによって管理されるカスタムのパーソナル化状態データを保存します。これにより、ページの再読み込みを行うたびにこのデータを読み込めるようになります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>後のブラウザー セッションを格納するユーザーの個人用設定を有効にし、ページへのアクセスために、メソッドは、パーソナル化のプロセスで重要です。 メソッドは、次などの項目を含むカスタムのパーソナル化状態データを保存します動的<xref:System.Web.UI.WebControls.WebParts.WebPart>またはサーバー コントロールをページに追加またはページ; ページに移動されたコントロールと動的接続から削除された。作成または削除されています。  
  
 このメソッドは、コードから直接呼び出すことはできません。 ただし、呼び出すことができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>メソッド自体は、パーソナル化データを保存するには、このメソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>開発者は、派生では、このメソッドをオーバーライドできます<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />をパーソナル化データを保存するプロセスをカスタマイズするクラス。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPart">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedWebPart As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPart ^ SelectedWebPart { System::Web::UI::WebControls::WebParts::WebPart ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>別のコントロールとの接続を編集または作成するために現在選択されている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはその他のサーバー コントロールへの参照を取得します。</summary>
        <value>接続の編集または接続の構成のために現在選択されている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>プロパティへの参照を返します、<xref:System.Web.UI.WebControls.WebParts.WebPart>または編集するため、または別のコントロールでの接続を作成するために現在選択されている他のサーバー コントロール。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールがコントロールを選択するプロセスを処理するため、いくつかの便利なメソッドとイベントを提供します。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>イベントはすべての変更が行われる前に、コントロールを選択すると、直後に発生します。 選択されている後に、コントロールに対するいくつかのアクションを実行して、上書き、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>メソッド。 たとえば、コントロールが選択されているが、まだ変更していない、視覚的に強調するためにどのコントロールが選択されているの外観を変更します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>イベントは、選択したコントロールが変更された直後後に発生します。 変更した後、コントロールに対するいくつかのアクションを実行して、上書き、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanged As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ SelectedWebPartChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.SelectedWebPartChanged : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ある <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの選択を変更して Web ページ上の別のコントロールに移動した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントを組み合わせて使用することができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>選択コントロールのユーザー インターフェイス (UI) を変更するメソッド。 たとえば、ユーザーがページをデザイン モードに切り替えた場合 (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>)、し、選択、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの新しい位置にドラッグする目的では共通の色を変更することで、たとえば選択したコントロールのレンダリングを変更する、境界線や背景が選択された状態。  
  
> [!NOTE]
>  イベントの使用の詳細については、次を参照してください。[方法。Web フォーム アプリケーションでイベントを処理する](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="SelectedWebPartChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedWebPartChanging As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ SelectedWebPartChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.SelectedWebPartChanging : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページ上で現在選択されている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはサーバー コントロールの変更プロセス中に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントを組み合わせて使用することができます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>メソッド。 ページの開発者は追加することで、コードでイベント ハンドラーを作成することができます、`OnSelectedWebPartChanging`属性を`<asp:webpartmanager>`イベントを処理するカスタム メソッドの名前に、属性の値を設定、ページにある要素。  
  
 このイベントは、開始または終了と先頭および末尾のコントロールの編集時に、コントロール間の接続プロセス中に発生します。 詳細については、次を参照してください。、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>メソッド。  
  
 通常、ときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>イベントは、選択したコントロールを変更するユーザーのアクションの直接の結果として、イベントをキャンセルできます。 ただしは、シナリオ、イベントを取り消すことができません。 場合、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールが削除される、<xref:System.Web.UI.WebControls.WebParts.WebPart>が含まれているコントロールをすべて閉じられたする必要があります、それ以外の場合、孤立なります。 この場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが閉じ、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、しない、ユーザーされ必要があります決定どのコントロールが現在選択されていると、中断の可能性は一切選択を変更するをクリーンアップする処理を完了できるようにします。すべてのコントロール。 そのため、デザインによって、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>メソッドは、このシナリオで取り消すことができません。 関連するイベントをキャンセルできますが、次を参照してください。、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>イベント。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="protected void SetPersonalizationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPersonalizationDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetPersonalizationDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetPersonalizationDirty();" />
      <MemberSignature Language="F#" Value="member this.SetPersonalizationDirty : unit -&gt; unit" Usage="webPartManager.SetPersonalizationDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールのカスタムのパーソナル化データが変更されたことを示すフラグを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>メソッドが最終的に Web パーツ コントロールが更新されたパーソナル化データを保存する設定で、パーソナル化コンポーネントが発生するフラグを設定します。 によって追跡されるパーソナル化データへの変更を引き起こす可能性のあるシナリオの詳細については、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールを参照してください、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>プロパティ。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>メソッドは、コードから直接呼び出すことはできませんし、Web パーツ パーソナル化機能の一部として設定する Web パーツ コントロールで内部的に使用されているためにオーバーライドできません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>メソッドを呼び出すことが派生して<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラス。 Web パーツ コントロールのコンポーネントが、設定し、パーソナル化データ用のフラグを設定するプロセスを制御する必要がパーソナル化をカスタマイズする場合に便利ですがなります。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="SetSelectedWebPart">
      <MemberSignature Language="C#" Value="protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetSelectedWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetSelectedWebPart(System::Web::UI::WebControls::WebParts::WebPart ^ webPart);" />
      <MemberSignature Language="F#" Value="member this.SetSelectedWebPart : System.Web.UI.WebControls.WebParts.WebPart -&gt; unit" Usage="webPartManager.SetSelectedWebPart webPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">選択されている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはサーバー コントロール。</param>
        <summary>現在選択されている <see cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" /> コントロールまたはサーバー コントロールと同じ <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> プロパティ値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A>メソッドの先頭または末尾で指定されたコントロールの編集のプロセス中に、`webPart`パラメーター、および先頭または末尾を含む接続される`webPart`します。  
  
 編集し、接続のプロセスの冒頭に`webPart`を編集するか、接続の入力が選択されているコントロールです。  
  
 編集し、接続のプロセスの最後に`null`に渡される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart%2A>メソッドは、その結果、現在選択されているコントロールが選択されていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールにスキンを適用できないように、空の文字列 ("") を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールへのスキンの割り当てができないようにする空の文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>プロパティよりも優先されますが、継承された<xref:System.Web.UI.Control.SkinID%2A?displayProperty=nameWithType>プロパティを防ぐために、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>スキンを使用してから、コントロールを非表示であるコントロール。 プロパティの実装は常に空の文字列を返すことによって割り当てられているから、スキンを防止、`get`アクセサー、およびに値を設定する試みがある場合は、常に例外がスローされる、`set`アクセサー。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">プロパティ値を設定しようとしました。</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticConnections As WebPartConnectionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ StaticConnections { System::Web::UI::WebControls::WebParts::WebPartConnectionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticConnections : System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページ上の静的接続として定義されているすべての <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> オブジェクトのコレクションへの参照を取得します。</summary>
        <value>ページ上のすべての静的接続が格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnectionCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>プロパティを使って、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールを追跡し、ページ上のすべての静的な接続を管理します。 動的な接続とは異なり、静的な接続は、ページが表示されるたびに、ページに追加する必要はありません。  
  
 このプロパティによって参照されるコレクションにプログラムで作成またはで指定されるかどうか、ページ上に存在するすべての静的な接続が含まれています、`<asp:webpartconnection>`ページのマークアップ要素。  
  
   
  
## Examples  
 次のコード例に示しますをプログラムで使用、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>プロパティ。  
  
 コード例では、4 つの部分があります。  
  
-   Web パーツ ページ上の表示モードをユーザー コントロールを変更することができます。  
  
-   2 つのカスタムを含むソース コード ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールとカスタム インターフェイスです。  
  
-   2 つのカスタムを含む Web ページ<xref:System.Web.UI.WebControls.WebParts.WebPart>接続できるコントロールと`<asp:webpartmanager>`要素。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 次のコードには、例の Web ページの部分のみが含まれています。 セクションの例からの例 - カスタム ユーザー コントロールとカスタム コントロールおよびインターフェイスのソース コードの最初の 2 つの部分を取得する必要がありますも、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 このトピックでは、コンパイルするためのオプションもについて説明します。、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
 コード例の 3 番目の部分は、Web ページです。 ページの宣言型マークアップを含む`Register`ユーザー コントロールとカスタム コントロールの両方のディレクティブ。 `<asp:webpartmanager>`要素、`<asp:webpartzone>`カスタムのコントロールを格納する要素と`<asp:connectionszone>`要素。 インシデントを`Page_Load`メソッド、コードを確認するかどうかの接続を既に存在し、そうでない場合は、プロバイダー、コンシューマー、および、各接続ポイントを定義およびによって参照される静的な接続のセットに新しい接続を追加します<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>プロパティ。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/CS/wpmgrStaticConnectionCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_StaticConnections#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_StaticConnections/VB/wpmgrStaticConnectionVB.aspx#1)]  
  
 ブラウザーで Web ページが読み込まれた後にをクリックして、**表示モード**ドロップダウン リスト コントロールと選択**Connect**接続モードをページに切り替えます。 接続モードの使用、`<asp:connectionszone>`コントロール間の接続を作成するための要素。 接続モードのタイトル バーの下向き矢印をクリックして、**郵便番号/ZIP Code**の動詞メニューをアクティブに制御し、 **Connect**します。 接続ユーザー インターフェイス (UI) が表示されたらに含まれているコードによって、接続が作成されたことに注意してください、`Page_Load`メソッド。 場合は、以降のブラウザー セッションでこのページに戻り、この静的な接続が確立されていると、ページが読み込まれるたびに再作成する必要はありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="SupportedDisplayModes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportedDisplayModes As WebPartDisplayModeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ SupportedDisplayModes { System::Web::UI::WebControls::WebParts::WebPartDisplayModeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedDisplayModes : System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定の Web ページ上で使用できるすべての表示モードの読み取り専用のコレクションを取得します。</summary>
        <value>特定の Web ページ上で使用できる <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection" /> オブジェクトのセットが格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>プロパティには、ページ上に存在するゾーン コントロールの種類を指定されたページで、実際に利用できる表示モードだけが含まれています。  
  
> [!NOTE]
>  表示モードを無効にすることができますとに追加されていない表示モードが無効にすると、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>その表示モードをサポートするゾーンの対応する型が、ページ上に存在する場合でも、コレクション。  
  
 ブラウズ モードとデザイン モードは常にサポートされています。 表示モードが異なることができますが、編集、カタログ、および接続モード。 これらの各表示モードは、特定の種類の関連付け<xref:System.Web.UI.WebControls.WebParts.ToolZone>コントロール。 その特別に型指定されたゾーンによって参照されるコレクションに追加する特定の表示モードを原因となる Web ページ上の存在、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>プロパティ。 たとえば、Web ページが含まれている場合、<xref:System.Web.UI.WebControls.WebParts.EditorZone>がゾーンを<xref:System.Web.UI.WebControls.WebParts.CatalogZone>ゾーン、編集表示モードは、そのページでサポートされているモードのいずれかが、カタログの表示モードはサポートされていません。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>プロパティとは異なります、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>を現在利用できるすべての表示モードを含むコレクションを参照するプロパティの<xref:System.Web.UI.WebControls.WebParts.WebPartManager>特定のページではサポートされていないものも制御します。  
  
   
  
## Examples  
 次のコード例のプログラムでの使用を示しています、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>プロパティ。 コードでは、このプロパティを使用して、現在の Web ページで使用可能な表示モードのみのリストを設定します。  
  
 このページでサポートされている 3 つの表示モードがある: ブラウズ、デザイン、および編集します。 最初の 2 つは、常に、ページが含まれているために、編集モードはこのコード例で使用可能な<xref:System.Web.UI.WebControls.WebParts.EditorZone>コントロール。 カタログと接続表示モードは表示されませんが、このページに対応するゾーンがないためです。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/CS/wpmgrSuppDisplayModescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_SupportedDisplayModes/VB/wpmgrSuppDisplayModesvb.aspx#1)]  
  
 ドロップダウン リスト コントロールを使用して、ブラウズ モードからページをデザイン モードに切り替えることができます、ブラウザーでページの読み込み後し編集モードにします。 編集モードで、ドロップダウンの動詞メニュー サーバー コントロールのいずれかのヘッダーをクリックし、選択**編集**コントロールを編集します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
        <related type="Article" href="https://msdn.microsoft.com/library/cc106284-82dc-4770-98cb-673dbc4ed4c4">Web パーツのページ表示モード</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsDirty As Boolean Implements IPersonalizable.IsDirty" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::WebControls::WebParts::IPersonalizable::IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールによって管理されているカスタムのパーソナル化状態データが Web ページ上で変更されたかどうかを示す値を取得します。</summary>
        <value>パーソナル化状態データが変更されたかどうかを示すブール値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>プロパティは、呼び出し元が判断する方法を提供します。 パーソナル化状態で管理されているデータであるかどうか、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが変更されました。 ユーザー パーソナル化ページ レベルの詳細は、たとえばページ レイアウトの変更の作成または接続を削除して、によってパーソナル化データを管理、追加やコントロールの削除、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが変更されます。 これは、保護対象の値を呼び出し元に返すパススルー方式<xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>プロパティで、呼び出し元に直接アクセスすることはできません。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>プロパティは示しませんかどうかパーソナル化可能なプロパティの値、または個々 の外観に影響するプロパティを個別<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールが変更されました。 各コントロールのコントロール レベルのパーソナル化が個別に追跡されます。 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>プロパティを示しますのみかどうかのパーソナル化データをページ レベルでは、によって管理される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが変更されました。  
  
 次に示すことになるパーソナル化のいくつかの一般的なインスタンス、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>プロパティの値を返します`true`かを示すを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが変更されたパーソナル化データの一部。  
  
-   静的なを閉じる<xref:System.Web.UI.WebControls.WebParts.WebPart>ページ上のコントロール (またはサーバーまたはユーザー コントロール)。  
  
-   閉じられた、静的な復元<xref:System.Web.UI.WebControls.WebParts.WebPart>ページ カタログからのコントロールをページに戻ります。  
  
-   そのゾーン内または別のゾーンには、任意のコントロールを移動します。  
  
-   コントロールの追加のカタログから<xref:System.Web.UI.WebControls.WebParts.WebPart>またはサーバー コントロール、またはプログラムでコントロールを追加します。  
  
-   2 つの接続を作成する<xref:System.Web.UI.WebControls.WebParts.WebPart>プログラム、または接続ユーザー インターフェイス (UI) を使用して、制御します。  
  
-   2 つの接続を削除して<xref:System.Web.UI.WebControls.WebParts.WebPart>プログラム、または接続 UI を使用して、制御します。  
  
 このプロパティの値にアクセスするにキャストする必要があります、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールのインスタンスを<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>インターフェイス; を読んで、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティの値。  
  
   
  
## Examples  
 次のコード例の簡単な使用状況を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>をいくつかの一般的なページのパーソナル化を示すために、プロパティは、その原因をインスタンス、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールのパーソナル化データを変更します。  
  
 コード例では、4 つの部分があります。  
  
-   ユーザー コントロールの Web パーツ コントロールを含むページに表示モードを変更することができますです。  
  
-   2 つのカスタムのコードを含むソース ファイル<xref:System.Web.UI.WebControls.WebParts.WebPart>接続できるコントロールとのインターフェイス。  
  
-   すべてのコントロールをホストする Web ページ。  
  
-   コード例の動作についての説明。  
  
 コード例の最初の部分は、表示モードを変更するユーザー コントロールです。 ユーザー コントロールのソース コードの例のセクションから取得できます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラスの概要。 表示モードとユーザー コントロールの動作方法については、次を参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 例では、2 番目の部分は、カスタム コントロールをインターフェイスでソース ファイルです。 注意、`IZipCode`インターフェイスは 1 つのメソッドを公開し、としては、このメソッドは、カスタム実装`ZipCodeWebPart`コントロールが有効にするコールバック メソッドとして機能`ZipCodeWebPart`接続シナリオでのプロバイダーとして機能します。 その他のコントロール`WeatherWebPart`、接続でコンシューマーとして動作を制御; によって提供される特定のインターフェイスを使用できる`ZipCodeWebPart`します。 実際のアプリケーションで`WeatherWebPart`でした、プロバイダーから個人用に設定された郵便番号/ZIP Code 値を使用して、ユーザーにグラフィカル気象情報を提供します。  
  
 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例は、動的なコンパイルは; を使用します。そのため、注意、`Register`のみ Web ページの上部にあるこのコンポーネントのディレクティブを含む`TagPrefix`と`Namespace`属性、なし、`Assembly`属性。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_WebPartManager_IsDirty#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/ZipCodeComponent.vb#2)]  
  
 コード例の 3 番目の部分は、Web ページです。 2 つ含まれることに注意してください<xref:System.Web.UI.WebControls.WebParts.WebPartZone>が最初の 2 つのカスタムを格納しているもののゾーン<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 、ゾーンの標準を含む<xref:System.Web.UI.WebControls.Calendar>コントロールをページにユーザーを追加できます。 `<asp:connectionszone>`要素は、接続をユーザー コントロール間の接続を作成するための UI を提供します。 `Page_PreRender`メソッド、そうである場合、パーソナル化データが変更されたかどうかを確認する通知のテキストが更新`Label1`します。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/CS/wpmgrIsDirtyCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_IsDirty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_IsDirty/VB/wpmgrIsDirtyVB.aspx#1)]  
  
 ブラウザーでページの読み込み後は、パーソナル化データを変更できるこのトピックの「解説」で説明したシナリオのいくつか作成してお試しください。 によって追跡されるパーソナル化シナリオのいずれかの変更が含まれている場合、さまざまな変更を行うと、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールのテキスト、`Label1`をパーソナル化データが変更されたことを示すためにコントロールが表示されます。 たとえば、次のように操作できます。  
  
-   クリックしてコントロール間の接続を作成、 **web パーツ コントロールの接続**ボタンをクリックします。  
  
-   使用して、**表示モード**にページをカタログのモードに切り替えて、追加のドロップダウン リスト コントロール、**個人用の予定表**が 2 番目の制御<xref:System.Web.UI.WebControls.WebParts.WebPartZone>ゾーン。  
  
-   ページに戻るをブラウズ モードでは、メニューの 動詞 (タイトル バーの矢印記号で表示) の変更、**個人用の予定表**制御、および選択**閉じます**を閉じ、ページのカタログに追加します。  
  
-   カタログ モード、ページを返すし、追加、**個人用の予定表**コントロール、ページに戻ります。  
  
-   使用して、**表示モード**ページをデザイン モードに切り替えるに制御し、別のゾーンに、または同じゾーン内の別の位置に、それらの 1 つ以上をドラッグして、コントロールのレイアウトを再配置します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PersonalizationState" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">.NET web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Load">
      <MemberSignature Language="C#" Value="void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Load (state As PersonalizationDictionary) Implements IPersonalizable.Load" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Load;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">読み込む状態データを含む <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールに読み込む必要がある、以前に保存したカスタムのパーソナル化状態データを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、の実装、 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=nameWithType> Web パーツ コントロールに設定に直接アクセスする、保護された手段を提供するメソッド<xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=nameWithType>メソッド。 このメソッドが呼び出されるで管理されているカスタムの個人用に設定されたデータを格納、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>制御、およびするが、初期化プロセスで後で使用するため、永続的なデータ ストアに保存された以前。  
  
> [!NOTE]
>  ほとんどの場合は主に Web パーツ コントロールのパーソナル化データを取得するためのメカニズムとしてセットで使用されていますページおよびコントロールの開発者のコードをこのメソッドを呼び出す必要はありません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>開発者がこのメソッドを使用する 1 つのシナリオは、Web パーツ コントロール セットによって、1 つの代わりに使用するカスタムのパーソナル化フレームワークを開発する場合は、提供されます。 このような場合は、開発者が継承、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスし、オーバーライド、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />のカスタム実装を返すメソッドを<see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />オブジェクト。 カスタム<see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />オブジェクトの実装を呼び出すと、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />カスタムのパーソナル化データを読み込むための適切な時にメソッド。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.WebParts.IPersonalizable.Save">
      <MemberSignature Language="C#" Value="void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Sub Save (state As PersonalizationDictionary) Implements IPersonalizable.Save" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state) = System::Web::UI::WebControls::WebParts::IPersonalizable::Save;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">保存する状態データを格納する <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールで管理されるカスタムのパーソナル化状態データを保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>メソッドの実装は、 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=nameWithType> Web パーツ コントロールに設定に直接アクセスする、保護された手段を提供するメソッド<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=nameWithType>メソッド。 このメソッドが呼び出されるで管理されているすべての個人用設定のデータを保存、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> Web パーツ アプリケーション用に構成された永続的なデータ ストアを制御します。  
  
> [!NOTE]
>  ほとんどの場合は主に Web パーツ コントロールのパーソナル化データを保存するためのメカニズムとしてセットで使用されていますページおよびコントロールの開発者のコードをこのメソッドを呼び出す必要はありません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>開発者がこの方法で作業は 1 つのシナリオは、Web パーツ コントロール セットによって、1 つの代わりに使用するカスタムのパーソナル化フレームワークを開発する場合は、提供されます。 このような場合は、開発者が継承、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />クラスし、オーバーライド、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" />のカスタム実装を返すメソッドを<see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />オブジェクト。 カスタム<see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />オブジェクトの実装を呼び出すと、<see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />カスタムのパーソナル化データを保存する適切な時点でのメソッド。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webPartManager.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>パーソナル化状態データを <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールに適用し、基本メソッドを呼び出してコントロールのビューステート データに対する変更を追跡できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビュー ステートのデータへの変更が格納されている、<xref:System.Web.UI.StateBag>オブジェクト、およびコントロールのを介してアクセスできる<xref:System.Web.UI.Control.ViewState%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子コントロールを表示できるようにする値を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールおよびその子コントロールが表示されるかどうかを示す Boolean 値。 常に <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールによって、base<xref:System.Web.UI.Control.Visible%2A?displayProperty=nameWithType>プロパティの値を常に返す`true`の<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>プロパティ。 場合でも、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール自体が表示されない、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>プロパティに設定する必要があります`true`すべての子コントロールが既定で表示されるようにします。  
  
 値を設定しようとすると、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>プロパティが常にエラーが発生、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの基本プロパティの動作がオーバーライドされ、プロパティに値を割り当てるようにします。  
  
 このプロパティは、ビジュアル デザイナーでバインドできるではありませんが、実行時にバインド可能です。 詳細については、「<xref:System.ComponentModel.BindableAttribute>」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このプロパティに値を割り当てようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdded As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartAdded;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartAdded : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的な <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはその他のサーバー コントロールを <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンに追加した後に発生し、そのコントロールが正常に追加されたことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>イベントがダイナミック コントロール (ページのマークアップで宣言されているのではなく、プログラムで追加されたコントロール) が正しくゾーンに追加されたことを示す場合に便利です。 組み合わせて、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>メソッドでは、ユーザー インターフェイス (UI) を更新するか、コントロールが正常に追加ユーザーをそれ以外の場合に通知する方法を開発者に提供するイベントです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartAdding">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartAdding As WebPartAddingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartAddingEventHandler ^ WebPartAdding;" />
      <MemberSignature Language="F#" Value="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " Usage="member this.WebPartAdding : System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的な <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはその他のサーバー コントロールを <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンに追加するプロセスを実行しているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>イベントは、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>のコントロールをゾーンに追加するプロセスが開始された後に、します。 このイベントは、完了する前に、プロセスをキャンセルする機会を提供します。 このイベントは、後に、追加のプロセスが成功した場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>イベント。  
  
 ページの開発者は、イベントのカスタム ハンドラーを追加することで提供できます、`OnWebPartAdding`属性を`<asp:webpartmanager>`内の要素をページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosed As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartClosed;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartClosed : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール (あるいは、サーバー コントロールまたはユーザー コントロール) をページから削除すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>イベントは、コントロールが閉じられたことが正常に、ユーザー、またはプログラムを示します。 閉じるには、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは表示されませんしも特別なに配置するオブジェクトを保持するいると呼ばれるページ カタログようにページから削除することを意味します。 対応するページのカタログ、<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>コントロールを終了への参照を保持<xref:System.Web.UI.WebControls.WebParts.WebPart>各ページのコントロール。 場合、<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>内のページにコントロールが宣言されている、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>ゾーン、ユーザーは、カタログの表示モードに切り替えるし、以前に閉じられたすべてのコントロールをページに追加します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>イベントが関連付けられている、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>メソッドでは、イベントを発生させるし、そのハンドラーを提供します。  
  
 ページの開発者は、追加することで、イベントのカスタム ハンドラーを追加できます、`OnWebPartClosed`属性を`<asp:webpartmanager>`内の要素をページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartClosing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartClosing As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartClosing;" />
      <MemberSignature Language="F#" Value="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartClosing : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール (あるいは、サーバー コントロールまたはユーザー コントロール) をページから削除するプロセスを実行しているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>によってイベントが発生、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>メソッドと、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールがコントロールの終了処理中です。 このイベントは、後にコントロールの削除が成功した場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>イベント。  
  
 ページの開発者は追加することで、イベントのカスタム ハンドラーを提供することができます、`OnWebPartClosed`属性を <`asp:webpartmanager>`内の要素をページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 通常、ときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>ユーザー終了の直接の結果としてイベントが発生した、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、イベントをキャンセルできます。 ただしは、シナリオ、イベントを取り消すことができません。 場合、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールが削除される、<xref:System.Web.UI.WebControls.WebParts.WebPart>が含まれているコントロールをすべて閉じられたする必要があります、それ以外の場合、孤立なります。 ここで、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>終了を制御、<xref:System.Web.UI.WebControls.WebParts.WebPart>ユーザーを制御します。 タイミング、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが呼び出し元のプロセスでは、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>メソッドを各コントロールを閉じると、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>イベントは、(デザイン) によって、イベントを取り消すことができません、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>をクリーンアップするタスクを完了する必要がありますゾーンのすべてのコントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleted As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartDeleted;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartDeleted : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはその他のサーバー コントロールを <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンから削除した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>イベントがダイナミック コントロール (ページのマークアップで宣言されているのではなく、プログラムで追加されたコントロール) がゾーンから正常に削除されたことを示す場合に便利です。 組み合わせて、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>メソッドでは、ユーザー インターフェイス (UI) を更新またはそれ以外の場合ユーザーに通知コントロールが正常に削除する方法を開発者に提供するイベントです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartDeleting As WebPartCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartCancelEventHandler ^ WebPartDeleting;" />
      <MemberSignature Language="F#" Value="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " Usage="member this.WebPartDeleting : System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的な <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはその他のサーバー コントロールのインスタンスを <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンから完全に削除するプロセスを実行しているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>イベントは、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> (プログラムまたは Web パーツのユーザー インターフェイスからのユーザーによって追加されたもの) 動的コントロールの削除の処理中に、メソッド。 イベントは、処理が終了する前に、プロセスをキャンセルする機会を提供します。 このイベントが続く場合は、削除プロセスが正常に完了すると、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>イベント。  
  
 ページの開発者は、イベントのカスタム ハンドラーを追加することで提供できます、`OnWebPartDeleting`属性を`<asp:webpartmanager>`内の要素をページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartMoved">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoved As WebPartEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartEventHandler ^ WebPartMoved;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " Usage="member this.WebPartMoved : System.Web.UI.WebControls.WebParts.WebPartEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはサーバー コントロールを、Web ページ上の別の位置に移動した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、(Web ページのマークアップで宣言) 静的および動的コントロールの両方に適用されます。 関連付けられている、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>メソッド。 イベントは、移動が完了した後に発生した場合は、開発者は、ユーザー、いくつかの検証またはその他のいくつかの操作にいくつかを通知するイベント ハンドラーを含めることができます。 イベント ハンドラーを追加するには、追加することができます、`OnWebPartMoved`属性を`<asp:webpartmanager>`内の要素 ページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="WebPartMoving">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartMoving As WebPartMovingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartMovingEventHandler ^ WebPartMoving;" />
      <MemberSignature Language="F#" Value="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " Usage="member this.WebPartMoving : System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーンに配置されている <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> コントロールまたはその他のサーバー コントロールを移動するプロセスを実行しているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>イベントが発生したときに、<xref:System.Web.UI.WebControls.WebParts.WebPart>か他のサーバー コントロールが、自身のゾーン内または別のゾーンに移動されてです。 これは、プログラムによる移動がある場合とユーザー コントロールをドラッグしたときに発生します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>イベントは、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>メソッドをおよびそれが完了する前に、移動プロセスをキャンセルする機会を提供します。 移動が完了し、このイベントの後に、コントロールを新しい位置に配置される場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>イベント。  
  
 ページの開発者は、追加することで、イベントのカスタム ハンドラーを作成できます、`OnWebPartMoving`属性を`<asp:webpartmanager>`要素、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="WebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartCollection WebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebParts As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartCollection ^ WebParts { System::Web::UI::WebControls::WebParts::WebPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebParts : System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページ上の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールで追跡されるすべての <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> コントロールのセットへの参照が格納された <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>プロパティによって使用されます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールすべてを追跡する<xref:System.Web.UI.WebControls.WebParts.WebPart>内に含まれるコントロール<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ページ上のゾーン。 個々 にアクセスすることができます、コレクションは読み取り専用が、<xref:System.Web.UI.WebControls.WebParts.WebPart>に変更のコレクションを加えるを通じてプログラムで制御します。  
  
> [!NOTE]
>  することができます、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、ページの外部に配置されます、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>ゾーン、その結果、コントロールによって追跡されていない、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>制御またはで参照されているその<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>コレクション。 ただし、使用する理由はほとんどは、<xref:System.Web.UI.WebControls.WebParts.WebPart>し Web パーツ機能を失い、通常のサーバー コントロールとして機能するために、ゾーンの外部で制御します。  
  
 任意の種類のカスタムかどうか、ゾーン内に配置できるコントロール<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、標準の ASP.NET コントロール、ユーザー コントロール、または、カスタム サーバー コントロール扱うことができます、<xref:System.Web.UI.WebControls.WebParts.WebPart>実行時にコントロール。 コントロールでないときに、<xref:System.Web.UI.WebControls.WebParts.WebPart>でコントロールが配置されます、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ASP.NET のコントロールをラップする実行時に、ゾーン、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクトをコントロールとして動作できるように<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 使用して、そのため、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>プロパティ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールから派生しているかどうかに関係なく、サーバー コントロールの任意の型を追跡できます、<xref:System.Web.UI.WebControls.WebParts.WebPart>クラス。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>プロパティ個々 のアクセスをプログラムで<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 いることを確認、Web ページの宣言型マークアップ内で、`<asp:webpartzone>`要素が 2 つの標準の ASP.NET サーバー コントロール。 これらを継承しないが、<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスでラップされますが、ゾーンに含まれているため、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 、実行時にオブジェクトし、そのため、によって参照されるコレクションに含まれます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>プロパティ。 ユーザー設定を追加することもできます。<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、ユーザー コントロール、またはカスタムのサーバーが、このゾーンで制御と同じ方法を処理するとします。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_WebParts#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/CS/wpmgrWebPartsCS.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_WebParts#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_WebParts/VB/wpmgrWebPartsVB.aspx#1)]  
  
 あるコード例を動作させるには、する必要があります設定を追加する Web パーツの説明ファイルをエクスポートするのには、Web.config ファイルに注意してください。 このコード例については、Web ページと同じディレクトリに Web.config ファイルがあることを確認します。 内で、`<system.web>`セクションがあるかどうかを確認してください、`<webParts>`を持つ要素を`enableExport`属性に設定`true`マークアップを次のようにします。  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 をクリックすると、ブラウザーにページを読み込んだ後、 **WebPart 数**ボタン コードを使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>コレクション内のコントロールの数を返すプロパティ。 クリックすると、**予定表のタイトルを非表示に**境界線のみ、タイトルではありませんが表示されるように、ボタン、コードが、予定表を変更します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsConnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsConnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール (あるいは、サーバー コントロールまたはユーザー コントロール) の間に特定の接続が確立された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>イベントが関連付けられている、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>メソッド。 イベントは、接続が完了したことを確認した後、ページのユーザー インターフェイス (UI) を変更したり、ファクトをユーザーに通知をする可能性がありますので便利です。 たとえば、2 つのコントロール間の成功した接続を示すいくつかのグラフィック イメージを表示したい場合があります。 またはブラウズ モードを簡単なメッセージを表示し、ページの表示モードを変更します。  
  
 ページの開発者は、このイベントにカスタム イベント ハンドラーを追加することで関連付けることができます、`OnWebPartsConnected`属性を`<asp:webpartmanager>`内の要素 ページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsConnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsConnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsConnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsConnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール (または、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンに配置されたサーバー コントロールまたはユーザー コントロール) の間に接続を作成するプロセスを実行しているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>によってイベントが発生、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>メソッドには、接続プロセスが開始されたことを通知し、(たとえば、ユーザーがコントロールを選択および connect 動詞がクリックされた) がまだ完了していません。 イベントは、接続を完了する前にキャンセルする機会を提供します。 このイベントが続く場合は、接続が正常に完了すると、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>イベント。  
  
 ページの開発者は、追加することで、イベントのカスタム ハンドラーを追加できます、`OnWebPartsConnecting`属性を`<asp:webpartmanager>`要素、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected" />
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnected As WebPartConnectionsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsEventHandler ^ WebPartsDisconnected;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " Usage="member this.WebPartsDisconnected : System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはサーバー コントロール間の接続が終了した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>イベントが関連付けられている、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>メソッド。 イベントは、接続が終了したことを確認した後をユーザーに通知、コードでは、一部のクリーンアップ操作を実行またはその他のユーザー インターフェイス (UI) で変更する可能性がありますので便利です。  
  
 ページの開発者は、このイベントにカスタム イベント ハンドラーを追加することで関連付けることができます、`OnWebPartsDisConnected`属性を`<asp:webpartmanager>`内の要素 ページで、および属性にカスタム メソッドの名前を割り当てます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="WebPartsDisconnecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event WebPartsDisconnecting As WebPartConnectionsCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WebParts::WebPartConnectionsCancelEventHandler ^ WebPartsDisconnecting;" />
      <MemberSignature Language="F#" Value="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " Usage="member this.WebPartsDisconnecting : System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以前に接続した <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールまたはサーバー コントロール間の接続を終了するプロセスを実行しているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>によってイベントが発生、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>メソッド、およびその事実を通知します。 ユーザーが切断動詞、をクリックしたこと、または<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>メソッドが呼び出された場合は。 イベントは、完了する前に、接続を終了するプロセスをキャンセルする機会を提供します。 このイベントは、後に接続が正常に終了した場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>イベント。  
  
 ページの開発者は、追加することで、イベントのカスタム ハンドラーを追加できます、`OnWebPartsDisconnecting`属性を`<asp:webpartmanager>`要素、および属性にカスタム メソッドの名前を割り当てます。  
  
 通常、ときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>接続を終了させたユーザーのアクションの直接の結果としてイベントが発生した、イベントをキャンセルできます。 ただし、これには、イベントを取り消すことができませんいくつかのシナリオがあります。 場合、最初のシナリオは、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールが削除される、<xref:System.Web.UI.WebControls.WebParts.WebPart>が含まれているコントロールをすべて閉じられたする必要があります、それ以外の場合、孤立は。 この場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが閉じ、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、しない、ユーザー、およびそのできる必要がありますも、中断の可能性は一切接続されているコントロールの接続を終了するクリーンアップと終了のプロセスを完了できるようにします。すべてのコントロール。 そのため、デザインによって、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>メソッドは、このシナリオで取り消すことができません。 関連するイベントをキャンセルできますが、次を参照してください。、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>イベント。  
  
 2 番目のシナリオ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>イベントを取り消すことができませんが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>メソッドを呼び出して (この例のページには、各要求の中に呼び出されます)、およびいくつかの種類のページ上の既存の接続での競合があります。 たとえば、おそらくコントロール x を y のコントロールに接続するが共有ユーザーがコントロール x、z の制御を接続し、まだコントロール x は、複数の接続を形成することはできません。 この場合、接続の設定を個々 のユーザーの優先順位は、および<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが呼び出すことによって競合を解決、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>メソッドとの間の接続を終了 x、z の特定のユーザー。 この切断が設計によって、競合を解決するために不可欠であるため、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>イベントは、このシナリオでは取り消すことはできません。  
  
 3 番目のシナリオの場合、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>メソッドを取り消すことができない場合は、<xref:System.Web.UI.WebControls.WebParts.WebPart>現在接続されているサーバー コントロールが削除か閉じるか。 コントロールがページから削除すると確実、ため、必然的にその接続を削除するになります。 そのため、ときに、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが呼び出す、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>メソッドを生成させる、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>が設計上のイベントのイベントをキャンセルする可能性が。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web パーツ ページ</related>
      </Docs>
    </Member>
    <Member MemberName="Zones">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Zones As WebPartZoneCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ Zones { System::Web::UI::WebControls::WebParts::WebPartZoneCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zones : System.Web.UI.WebControls.WebParts.WebPartZoneCollection" Usage="System.Web.UI.WebControls.WebParts.WebPartManager.Zones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページ上のすべての <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンのコレクションへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneCollection" /> ゾーンのセットを参照する <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>プロパティを使って、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールを追跡する、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Web ページ上のゾーン。 プロパティがすべての種類のゾーンを参照していないことに注意してください。派生するゾーンのみを参照して、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>クラスを含む<xref:System.Web.UI.WebControls.WebParts.WebPartZone>ゾーン。  
  
 プロパティによって参照されるコレクションが読み取り専用が、コレクション内の個々 のオブジェクトにアクセスし、プログラムで操作を使用できます。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>プロパティ個々 のアクセスをプログラムで<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン コントロール。 Web ページの宣言型のマークアップでは 2 つ`<asp:webpartzone>`サーバー コントロールを含む要素。 `<script>`コードは、ページのセクション、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>すべてのゾーン Id を一覧表示し、2 番目のゾーンの背景色を変更し、個別のゾーンにアクセスするプロパティ。  
  
 [!code-aspx-csharp[WebParts_WebPartManager_Zones#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/CS/wpmgrzonescs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartManager_Zones#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_Zones/VB/wpmgrzonesvb.aspx#1)]  
  
 あるコード例を動作させるには、する必要があります設定を追加する Web パーツの説明ファイルをエクスポートするのには、Web.config ファイルに注意してください。 このコード例については、Web ページと同じディレクトリに Web.config ファイルがあることを確認します。 内で、`<system.web>`セクションがあるかどうかを確認してください、`<webParts>`を持つ要素を`enableExport`属性に設定`true`マークアップを次のようにします。  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 クリックすると、ブラウザーにページを読み込んだ後、**ゾーン Id の一覧**ボタン コードを使用して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>プロパティをコレクション内のすべてのゾーンの Id を一覧表示します。 クリックすると、**ゾーンの背景色を変更**ボタン コードは、2 番目のゾーンの背景色を変更します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>