<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3820b1d28d7d0da147eee2b14823ff6256fc47f1" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70690454" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Web パーツ接続で、コンシューマー コントロールとプロバイダー コントロールがデータを共有できるようにするコネクション ポイント オブジェクトを定義するための基本クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべての Web パーツ接続は、データを共有する2つのサーバーコントロールで構成されます。1つはコンシューマー、もう1つはプロバイダーです。 Web パーツ接続の重要なコンポーネントと接続オブジェクト自体の詳細については、クラスの概要<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>に関する記事を参照してください。 すべての Web パーツ接続には接続ポイントが必要です。 プロバイダーとコンシューマーコントロールには、コントロールが別のコントロールに<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>接続する方法と共有できるデータの種類の詳細を含む定義済みのオブジェクト (それぞれに、必要に応じて複数の接続ポイントを持つことができます) を持つ必要があります。 実際の接続では、プロバイダーは独自の種類の接続ポイントオブジェクト (基底<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスから派生) <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 、インスタンス、およびコンシューマーに独自のオブジェクト<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> (インスタンス) があります。  
  
 プロバイダー接続ポイントを作成するには、実装されたインターフェイスインスタンスをコンシューマーに返すコールバックメソッドをプロバイダーに追加する必要があります。 コード属性を`ConnectionProvider`使用してソースコードのコールバックメソッドをマークする必要が<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>あります (クラスを参照してください)。 同様に、コンシューマー接続ポイントを作成するには、インターフェイスインスタンスを受け取るコンシューマーにメソッドを追加し、そのメソッドを`ConnectionConsumer`属性でマークする必要があります (クラスを<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>参照してください)。  
  
 開発者が Web ページに接続を作成する場合は、静的な接続または動的接続として作成できます。 静的接続は、Web ページのマークアップで宣言されます。 静的接続が宣言されている場合、開発者は、 `ProviderConnectionPointID` `<asp:webpartconnection>`要素タグ内の属性と`ConsumerConnectionPointID`属性に値を割り当てることによって、コンシューマーとプロバイダーの両方に使用される接続ポイントを指定できます。 この方法は、コンシューマーコントロールとプロバイダーコントロール内で複数の接続ポイントが定義されている場合に特に便利です。これは、接続に使用する接続ポイントを静的接続で識別できるようにするためです。  
  
 動的接続は、開発者のコードによって、または<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールによって提供されるユーザーインターフェイス (UI) を介してユーザーがプログラムによって作成されます。 コードで接続を作成するには、開発者は、 <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッドを呼び出して、オブジェクトのインスタンスを取得する必要があります。 開発者は、このメソッドを呼び出す前に、コンシューマーおよびプロバイダーのサーバーコントロールと、それぞれの接続ポイントオブジェクトを参照する必要があります。 プロバイダーとコンシューマーコントロールの接続ポイントへの参照を取得するには、開発者は<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>まず<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> 、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールのメソッドとメソッドを呼び出します。 これらのメソッドは、適切な接続ポイントオブジェクトを返します。これらのオブジェクトは、接続を作成するためにメソッドに渡すことができます。  
  
 プロバイダーとコンシューマーのコネクションポイントオブジェクトは、どちらも同じ種類のインターフェイスで動作する場合、互換性があり、データを共有する直接接続を形成できます。 同じインターフェイス型を使用しない場合は、オブジェクトを<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>使用して、プロバイダーからのインターフェイスインスタンスをコンシューマーが使用できる型に変換する必要があります。  
  
 抽象<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスは、コンシューマーコントロールとプロバイダーコントロールの両方で共有されるコネクションポイントの基本情報を提供します。 これらの詳細を含むプロパティがいくつかあります。 プロパティ<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>は、接続ポイントが一度に複数の接続に参加できるかどうかを示します。 既定では、プロバイダー接続ポイントは複数の接続に参加することができ、コンシューマー接続ポイントは使用できません。 プロパティ<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>は、接続ポイントに関連付けられているサーバーコントロールの種類を示します。 コントロールだけ<xref:System.Web.UI.WebControls.WebParts.WebPart>ではなく、接続を形成できることに注意してください。 ASP.NET コントロール、カスタムコントロール、またはユーザーコントロールのいずれでも、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン内に配置されている場合は、接続に参加できるようになります。 プロパティ<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>は、接続を作成しているユーザーを支援するために UI に表示できる接続ポイントのフレンドリ名を提供します。 プロパティ<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>は、接続ポイントオブジェクト自体の文字列識別子として機能します。 プロパティ<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>は、コネクションポイントが認識するインターフェイスインスタンスの種類を示します。 特定の接続ポイントがそのインターフェイスのインスタンスを提供または使用するかどうかは、 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトであるかオブジェクトであるかによって決まります。  
  
 クラス<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>には1つのメソッドがあります。 メソッド<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>は、接続ポイントが現在接続に参加できるかどうかを示すブール値を返します。  
  
 クラス<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>には、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>パブリックフィールドも1つあります。 このフィールドには、接続の既定の接続ポイントを識別するために使用される値が含まれます。  
  
> [!NOTE]
>  コネクションポイントメソッドを指定するための属性には、必須`displayName`パラメーターが1つだけあるため、ID を指定せずに既定の接続ポイント属性を作成することができます。 このような場合、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールドは使用するベース値を指定します。  
  
   
  
## Examples  
 次のコード例は、必要な<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>オブジェクトを含む Web パーツ接続を作成する方法を示しています。 クラスは抽象基本クラスであるため、その子クラス<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>のインスタンス (と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>) は、接続を形成するために使用される実際のオブジェクトです。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>  
  
 この例には、次の4つの部分があります。  
  
-   ページの Web パーツ表示モードを変更できるユーザーコントロール。  
  
-   インターフェイスのソースコードと、プロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart>として機能する2つのコントロールと、接続のコンシューマー。  
  
-   すべてのコントロールをホストし、コード例を実行するための Web ページ。  
  
-   例ページを実行する方法について説明します。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。 次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの`Src` `Register`ディレクティブの属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。 このコントロールの表示モードとソースコードの説明の詳細については、「[チュートリアル: Web パーツページの表示モードの変更](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)」を参照してください。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 コード例の2番目の部分は、インターフェイスとコントロールのソースコードです。 ソースファイルには、という名前`IZipCode`の単純なインターフェイスが含まれています。 インターフェイスを実装し<xref:System.Web.UI.WebControls.WebParts.WebPart> 、プロバイダー `ZipCodeWebPart`コントロールとして機能するという名前のクラスもあります。 この`ProvideIZipCode`メソッドは、インターフェイスの唯一のメンバーを実装するコールバックメソッドです。 メソッドは、単にインターフェイスのインスタンスを返します。 メソッドは、そのメタデータ内の`ConnectionProvider`属性でマークされていることに注意してください。 これは、プロバイダーのコネクションポイントのコールバックメソッドとしてメソッドを識別するための機構です。 もう 1 <xref:System.Web.UI.WebControls.WebParts.WebPart>つのクラス`WeatherWebPart`はという名前で、接続のコンシューマーとして機能します。 このクラスには、プロバイダー `GetZipCode`コントロールから`IZipCode`インターフェイスのインスタンスを取得するという名前のメソッドがあります。 このメソッドは、メタデータの属性を`ConnectionConsumer`使用して、コンシューマーの接続ポイントメソッドとしてマークされていることに注意してください。 これは、コンシューマーコントロールのコネクションポイントメソッドを識別するための機構です。  
  
 コード例を実行するには、このソースコードをコンパイルする必要があります。 これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。 または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。 このコード例では、動的コンパイルを使用します。 のコンパイル方法を示すチュートリアルについては、「[チュートリアル: カスタム Web サーバーコントロールの開発と使用](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)」を参照してください。  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 コード例の3番目の部分は、Web ページです。 上部の近くに`Register`は、接続を形成するカスタムコントロールを登録するためのディレクティブと、ユーザーがページの表示モードを変更できるようにするユーザーコントロールがあります。 接続自体は、ページ上の`<staticconnections>`要素内で宣言によって作成されます。 接続はプログラムによって作成することもできます。これを行うためのコードは、 `Button1_Click`メソッドに含まれています。 接続が宣言によって作成されるか、プログラムによって作成されるかにかかわらず、接続ポイントはプロバイダーとコンシューマーの両方に対して常に指定する必要があります。 メソッド`Button2_Click`は、プロバイダー <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>とコンシューマーの両方のオブジェクトにアクセスし、そのプロパティ値の一部をページのラベルに書き込みます。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ブラウザーでページを読み込んだ後、**[接続ポイントの詳細]** ボタンをクリックします。 宣言型接続で確立されたプロバイダーおよびコンシューマー接続ポイントに関する情報が表示されます。 次に、**[表示モード]** ドロップダウンコントロールを使用して、ページを接続モードに切り替えます。 <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールの1つ (タイトルバーの下向き矢印で表されます) の動詞メニューで、connect 動詞をクリックします。 接続 UI が表示され、ページで`<asp:connectionszone>`宣言されたコントロールによって自動的に作成されます。 **[切断]** ボタンをクリックして、既存の接続を終了します。 **[表示モード]** コントロールを使用して、ページをブラウズモードに戻します。 次に、**[動的接続]** ボタンをクリックして、プログラムによって接続を作成します。 2つの接続ポイントオブジェクトの詳細を示すには、もう一度 **[接続ポイントの詳細]** ボタンをクリックします。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Web パーツ接続の概要</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントが同時に複数の接続をサポートするかどうかを示す値を取得します。</summary>
        <value>コネクション ポイントが複数の接続をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>オブジェクトの<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティ値が ( <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>クラス`true`によって) に設定されています。これは、Web パーツコントロールが既定で設定され、プロバイダー接続ポイントが複数のコンシューマーに接続を形成できるためです。  
  
 これに対し<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>て、オブジェクト<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>のプロパティ値は`false` 、 <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>クラスによってに設定されます。これは、Web パーツコントロールセットが既定では、コンシューマー接続ポイントが1つのプロバイダーにのみ接続を確立できるためです。ごと.  
  
 複数の接続に関する既定の動作を変更するには、 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>プロパティ (プロバイダーの場合) <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>またはプロパティ (コンシューマーの場合) に、 <xref:System.Attribute>接続属性に使用する2つのクラスのプロパティを割り当てます。 コンシューマー接続ポイントが同時に複数のプロバイダーに接続できるようにする場合は、コードで同期の問題が発生したときに対処する必要があります。  
  
   
  
## Examples  
 次のコード例は、オブジェクトと<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトの両方<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>でプロパティを使用する方法を示しています。 このコード例では、プロパティにアクセスするコードが含まれている Web ページのみを示しています。例を実行するために必要な完全なコードについては、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要の「例」セクションを参照してください。  
  
 Web ページの`Button2_Click`メソッドのコードは、各接続ポイント<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>オブジェクトのプロパティにアクセスし、各値をラベルに書き込みます。 ページがブラウザーに読み込まれた後に **[接続ポイントの詳細]** ボタンをクリックして、コードを実行します。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントが関連付けられているサーバー コントロールの <see cref="T:System.Type" /> を取得します。</summary>
        <value>コントロールの種類を表す <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 多くの場合、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティの値は型です。 <xref:System.Web.UI.WebControls.WebParts.WebPart> ただし、ユーザーコントロールまたはサーバーコントロールが適切に有効になっていて<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーンに配置されている場合は、接続に参加できるため、プロパティは<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> 、これらの他の種類のサーバーコントロールも返すことができます。  
  
 コントロール<xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> では <xref:System.Web.UI.WebControls.WebParts.WebPart> ないサーバーコントロールがゾーンに配置されている場合は、実行時にオブジェクトを使用してラップされるので、コントロールとして機能し、接続に参加できます。 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ただし、このようなコントロールが接続に関係<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>している場合、プロパティ<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>値は型を返しません。 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>これは、サーバーまたはユーザーコントロールの型であるオブジェクトの子コントロールの型を返します。  
  
   
  
## Examples  
 次のコード例は、オブジェクトと<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトの両方<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>でプロパティを使用する方法を示しています。 このコード例では、プロパティにアクセスするコードが含まれている Web ページのみを示しています。例を実行するために必要な完全なコードについては、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要の「例」セクションを参照してください。  
  
 Web ページの`Button2_Click`メソッドのコードは、各接続ポイント<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>オブジェクトのプロパティにアクセスし、各値をラベルに書き込みます。 ページがブラウザーに読み込まれた後に **[接続ポイントの詳細]** ボタンをクリックして、コードを実行します。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー コントロールに関連付けられているコネクション ポイントのコレクション内で、既定のコネクション ポイントを識別するために使用される文字列を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接続ポイントを作成すると、 <xref:System.Web.UI.WebControls.WebParts.WebPart> <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>または<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性を使用して、コンシューマーコントロールまたはプロバイダーコントロールのソースコードに接続ポイントの ID を指定できます。 ただし、ソースコード`ID`のコネクションポイントに属性が追加された場合、パラメーターは省略可能です。 属性で ID が指定されていない場合<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>は、既定の接続ポイントを識別するために使用される文字列がフィールドによって提供されます。  
  
 コンシューマーコントロールまたはプロバイダーコントロールで複数の接続ポイントが定義されている場合は、接続の作成時に接続ポイントを区別できるように、各接続ポイントに ID を指定する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー インターフェイス (UI) でコネクション ポイントを表す表示名として使用される文字列を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> オブジェクトの表示名を含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web パーツ接続を作成するには、接続のプロバイダーとコンシューマーコントロールが、それぞれ少なくとも1つのコネクションポイントを指定する必要があります。これは、データの通信と共有を可能にするメソッドです。 これらの接続ポイントメソッドを識別するために、開発者は、選択したメソッドの属性を指定します。 プロバイダー `ConnectionProvider`では、選択したコールバックメソッドに属性が設定されます。コンシューマー `ConnectionConsumer`は、プロバイダーからのデータを格納するインターフェイスのインスタンスを受け取るメソッドに対して属性を設定します。 どちらの属性でも、属性`displayName`を作成するためにどのオーバーロードが宣言されているかに関係なく、常に必要なパラメーターはパラメーターです。 開発者は、接続ポイントの表示名として使用する文字列を割り当てる必要があります。この文字列は、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティの値になります。  
  
 プロパティ<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>値は、ユーザーが接続を作成するときに Web ページの UI に表示されます。 たとえば、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールがページに追加されると、ユーザーがコントロール間の接続を作成するための UI が作成されます。 ユーザーがページを接続表示モードに切り替え、 <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールで connect 動詞をクリックすると、接続 UI が表示されます。 接続に参加できる各コントロールは UI に表示されます。各コントロールの横には、使用可能な接続ポイントの表示名を表示するドロップダウンリストコントロールが表示されます。 ユーザーは接続を確立するために、少なくとも1つの接続ポイントを選択する必要があります。 コネクションポイントの一覧に表示される値は、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティから取得されます。 接続を作成するためのカスタム UI を開発者が作成する<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>場合は、接続ポイントを表すわかりやすい名前を指定するのと同様の方法でプロパティを使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">コネクション ポイントに関連付けられている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> またはその他のサーバー コントロール。</param>
        <summary>コネクション ポイントが接続に参加できるかどうかを示す値を取得します。</summary>
        <returns>コントロールが接続に参加するためのコネクション ポイントを作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 基本<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> `control` `true` `false` `true`クラスのメソッドは常にを返しますが、派生クラスはメソッドをオーバーライドして、の状態に基づいて、または異なる時刻にメソッドを返すことができます。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>  
  
   
  
## Examples  
 次のコード例は、オブジェクトと<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトの両方<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>でメソッドを使用する方法を示しています。 このコード例では、プロパティにアクセスするコードが含まれている Web ページのみを示しています。例を実行するために必要な完全なコードについては、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要の「例」セクションを参照してください。  
  
 Web ページの`Button2_Click`メソッドのコードは、各接続ポイント<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>オブジェクトのメソッドにアクセスし、各値をラベルに書き込みます。 ページがブラウザーに読み込まれた後に **[接続ポイントの詳細]** ボタンをクリックして、コードを実行します。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントの識別子を含む文字列を取得します。</summary>
        <value>コネクション ポイントの識別子を含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 開発者がコントロールの<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>ソースコード<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>内のメソッドに対してまたは属性を宣言するときに、メソッドをコネクションポイントとして使用できるようにするには、接続`ID`ポイント属性のパラメーターを宣言する必要はありません。 必須の属性`displayName`はパラメーターだけです。 既定の ID は、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールドの値を使用して接続ポイントに割り当てられます。  
  
 コネクションポイントとして使用されているコントロールにメソッドが1つしかない場合は、コネクションポイントの ID を指定する必要はありません。 複数のメソッドがコネクションポイントとして指定されている場合は、それぞれに対して ID を指定する必要があります。それ以外の場合は、例外がスローされます。 各接続ポイントに ID を割り当てることにより、Web ページで接続を宣言するとき、またはコードで接続を作成するときに使用する接続ポイントを指定することもできます。  
  
   
  
## Examples  
 次のコード例は、オブジェクトと<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトの両方<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>でプロパティを使用する方法を示しています。 このコード例では、プロパティにアクセスするコードが含まれている Web ページのみを示しています。例を実行するために必要な完全なコードについては、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要の「例」セクションを参照してください。  
  
 Web ページの`Button2_Click`メソッドのコードは、各接続ポイント<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>オブジェクトのプロパティにアクセスし、各値をラベルに書き込みます。 ページがブラウザーに読み込まれた後に **[接続ポイントの詳細]** ボタンをクリックして、コードを実行します。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントによって使用されるインターフェイスの型を取得します。</summary>
        <value>コントロールによって提供または使用されるインターフェイスに対応する <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>は、コネクションポイントが使用するインターフェイスの種類を示します。 これは、2つのコントロールが互換性を持ち、接続を形成できるかどうかを判断するのに役立ちます。 プロバイダー接続ポイント<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>がコンシューマー接続<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>ポイントのと異なる場合、2つのコントロールに互換性がありません (つまり、 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>トランスフォーマーを使用せずに直接接続することはできません)。接続を確立するために使用します。  
  
   
  
## Examples  
 次のコード例は、オブジェクトと<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトの両方<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>でプロパティを使用する方法を示しています。 このコード例では、プロパティにアクセスするコードが含まれている Web ページのみを示しています。例を実行するために必要な完全なコードについては、 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要の「例」セクションを参照してください。  
  
 Web ページの`Button2_Click`メソッドのコードは、各接続ポイント<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>オブジェクトのプロパティにアクセスし、各値をラベルに書き込みます。 ページがブラウザーに読み込まれた後に **[接続ポイントの詳細]** ボタンをクリックして、コードを実行します。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>
