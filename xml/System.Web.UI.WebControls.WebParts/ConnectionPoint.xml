<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c9d88a6c241a950566c01496d5804d56c63813f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fe66f-101">Web パーツ接続で、コンシューマー コントロールとプロバイダー コントロールがデータを共有できるようにするコネクション ポイント オブジェクトを定義するための基本クラスとして機能します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe66f-101">Serves as the base class for defining connection point objects that enable the consumer control and the provider control in a Web Parts connection to share data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe66f-102">データを共有する 2 つのサーバー コントロールのすべての Web パーツ接続で構成されます。 1 つのコントロール、コンシューマーは、もう 1 つは、プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="fe66f-102">Every Web Parts connection consists of two server controls sharing data: one control is the consumer, the other is the provider.</span></span> <span data-ttu-id="fe66f-103">Web パーツの接続および接続オブジェクト自体の不可欠なコンポーネントの詳細については、次を参照してください。、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-103">For a discussion of the essential components of a Web Parts connection, and the connection object itself, see the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class overview.</span></span> <span data-ttu-id="fe66f-104">すべての Web パーツ接続には、接続ポイントが必要です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-104">Every Web Parts connection requires connection points.</span></span> <span data-ttu-id="fe66f-105">プロバイダーおよびコンシューマー コントロールそれぞれ必要がありますには、少なくとも 1 つの定義<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>(それぞれ、必要に応じて、複数のコネクション ポイント) 方法、コントロールに接続できる別のコントロールとデータの種類の詳細を格納しているオブジェクトを共有できます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-105">The provider and the consumer control must each have at least one defined <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> object (each of them can optionally have multiple connection points) that contains the details for how a control can connect to another control and the type of data it can share.</span></span> <span data-ttu-id="fe66f-106">実際の接続のプロバイダーは、接続ポイント オブジェクトの独自の型を持つ (ベースから派生した<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラス)、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>インスタンス、およびコンシューマーが独自のオブジェクト、<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="fe66f-106">In an actual connection, the provider has its own type of connection point object (derived from the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class), a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> instance, and the consumer has its own object, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> instance.</span></span>  
  
 <span data-ttu-id="fe66f-107">プロバイダー接続ポイントを作成するには、開発者は、コンシューマーに実装されたインターフェイス インスタンスが返されますが、プロバイダーにコールバック メソッドを追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fe66f-107">To create a provider connection point, developers must add a callback method to the provider that will return an implemented interface instance to a consumer.</span></span> <span data-ttu-id="fe66f-108">ソース コードとのコールバック メソッドをマークする必要があります、`ConnectionProvider`コード属性 (を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>クラス)。</span><span class="sxs-lookup"><span data-stu-id="fe66f-108">They must mark the callback method in the source code with a `ConnectionProvider` code attribute (see the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class).</span></span> <span data-ttu-id="fe66f-109">同様に、コンシューマー接続ポイントを作成する開発者は、インターフェイス インスタンスを受け取ることがコンシューマーにメソッドを追加する必要があり、そのメソッドをマークする必要があります、`ConnectionConsumer`属性 (を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>クラス)。</span><span class="sxs-lookup"><span data-stu-id="fe66f-109">Similarly, to create a consumer connection point, developers must add a method to the consumer that receives an interface instance, and they must mark that method with a `ConnectionConsumer` attribute (see the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class).</span></span>  
  
 <span data-ttu-id="fe66f-110">開発者は、Web ページ上の接続を作成するときに、静的または動的な接続として作成できます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-110">When developers create connections on a Web page, they can be created as static or dynamic connections.</span></span> <span data-ttu-id="fe66f-111">静的な接続は、Web ページのマークアップで宣言されます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-111">Static connections are declared in the markup of a Web page.</span></span> <span data-ttu-id="fe66f-112">静的な接続が宣言されると、開発者がどの接続ポイントを使用コンシューマーおよびプロバイダーの両方に値を割り当てることによってを指定することができます、`ProviderConnectionPointID`と`ConsumerConnectionPointID`内の属性、`<asp:webpartconnection>`要素のタグ。</span><span class="sxs-lookup"><span data-stu-id="fe66f-112">When a static connection is declared, developers can designate which connection points are used for both the consumer and provider by assigning values to the `ProviderConnectionPointID` and `ConsumerConnectionPointID` attributes within the `<asp:webpartconnection>` element tag.</span></span> <span data-ttu-id="fe66f-113">この方法は、接続に使用するには、どの接続ポイントを識別する静的な接続を有効にするため、コンシューマーとプロバイダー、コントロール内で定義された複数の接続ポイントがある場合に特に便利です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-113">This approach is especially useful if there are multiple connection points defined within the consumer and provider controls, because it enables the static connection to identify which connection points to use for the connection.</span></span>  
  
 <span data-ttu-id="fe66f-114">動的接続作成するにはプログラムでは、開発者のコードでユーザーによって提供される、ユーザー インターフェイス (UI) を使用して、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fe66f-114">Dynamic connections are created programmatically, either by a developer's code or by users through the user interface (UI) provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span> <span data-ttu-id="fe66f-115">コードで接続を作成するには、開発者がのインスタンスを取得する必要があります、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクトを呼び出して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッドを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fe66f-115">To create a connection in code, developers must get an instance of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="fe66f-116">このメソッドを呼び出すことができます、前に開発者がコンシューマーとプロバイダー サーバー コントロールと、それぞれの接続ポイント オブジェクトへの参照に必要です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-116">Before they can call this method, developers must have references to the consumer and provider server controls and their respective connection point objects.</span></span> <span data-ttu-id="fe66f-117">開発者の最初の呼び出しに、プロバイダーとコンシューマー コントロールの接続ポイントへの参照を取得する、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>と<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>のメソッド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fe66f-117">To get references to the connection points for a provider and a consumer control, developers first call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> methods on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="fe66f-118">これらのメソッドは、適切な接続ポイント オブジェクトは、さらに、接続を作成するメソッドに渡すことができますを返します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-118">These methods return the appropriate connection point objects, which in turn can be passed to the method for creating a connection.</span></span>  
  
 <span data-ttu-id="fe66f-119">ときに、プロバイダーおよびコンシューマーの接続ポイント オブジェクトの両方のインターフェイスの同じ型を持つは互換性のあるし、データを共有に直接接続を形成できます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-119">When the provider's and the consumer's connection point objects both work with the same type of interface, they are compatible and can form a direct connection to share data.</span></span> <span data-ttu-id="fe66f-120">同じインターフェイスの種類、それらが機能しない場合、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトは、コンシューマーが使用できる型に、プロバイダーからインターフェイスのインスタンスの変換に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fe66f-120">If they do not work with the same interface type, a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to translate the interface instance from the provider into a type that the consumer can work with.</span></span>  
  
 <span data-ttu-id="fe66f-121">抽象<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスは、コンシューマーおよびプロバイダーの両方のコントロールによって共有されている接続ポイントの基本の詳細を提供します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-121">The abstract <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class provides the base details of connection points that are shared by both consumer and provider controls.</span></span> <span data-ttu-id="fe66f-122">いくつかのプロパティには、これらの詳細が含まれます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-122">Several properties contain these details.</span></span> <span data-ttu-id="fe66f-123"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティは、接続ポイントが、一度に 1 つ以上の接続に参加できるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-123">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property indicates whether a connection point can participate in more than one connection at a time.</span></span> <span data-ttu-id="fe66f-124">既定では、プロバイダー接続ポイントは、複数の接続に参加できるし、コンシューマー接続ポイントことはできません。</span><span class="sxs-lookup"><span data-stu-id="fe66f-124">By default, provider connection points can participate in multiple connections, and consumer connection points cannot.</span></span> <span data-ttu-id="fe66f-125"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティは、接続ポイントに関連付けられたサーバー コントロールの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-125">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property indicates the type of the server control associated with a connection point.</span></span> <span data-ttu-id="fe66f-126">そのだけでなくに注意してください<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは、接続を構成できる; 任意のサーバー コントロールでは、ASP.NET コントロール、カスタム コントロールまたはユーザー コントロールかどうかできます有効にできませんに配置されている場合、接続に参加する、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーンです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-126">Note that not only <xref:System.Web.UI.WebControls.WebParts.WebPart> controls can form connections; any server control, whether an ASP.NET control, a custom control, or a user control, can be enabled to participate in connections if placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone.</span></span> <span data-ttu-id="fe66f-127"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティは接続を作成しているユーザーを支援するために UI に表示可能な接続ポイントのフレンドリ名を提供します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-127">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property provides a friendly name for the connection point that can be displayed in the UI to assist users who are creating connections.</span></span> <span data-ttu-id="fe66f-128"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>プロパティは、接続ポイント オブジェクト自体の文字列識別子として機能します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-128">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property serves as a string identifier for the connection point object itself.</span></span> <span data-ttu-id="fe66f-129"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>プロパティは、インターフェイスのインスタンスの種類、接続ポイントが認識することを示します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-129">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property indicates what type of interface instance the connection point understands.</span></span> <span data-ttu-id="fe66f-130">指定したコネクション ポイントを提供またはそのインターフェイスのインスタンスを使用するかどうかがあるかどうかによって決定されます、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>または<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fe66f-130">Whether a given connection point provides or consumes an instance of that interface is determined by whether it is a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> or a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span>  
  
 <span data-ttu-id="fe66f-131"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスには 1 つのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-131">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class has one method.</span></span> <span data-ttu-id="fe66f-132"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>メソッド接続ポイントが現在の接続に参加できないかどうかを示すブール値を返します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-132">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method returns a Boolean value indicating whether a connection point is currently able to participate in connections.</span></span>  
  
 <span data-ttu-id="fe66f-133"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスに 1 つのパブリック フィールドもあります<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-133">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class also has one public field, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>.</span></span> <span data-ttu-id="fe66f-134">このフィールドには、接続の既定の接続ポイントの識別に使用される値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="fe66f-134">This field contains a value used to identify the default connection point in a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe66f-135">メソッドは、1 つだけの必要なパラメーターを持つ接続ポイントを指定する属性`displayName`ID を指定せず、既定の接続ポイントの属性を作成することは、</span><span class="sxs-lookup"><span data-stu-id="fe66f-135">The attributes for specifying connection point methods have only one required parameter, `displayName`, so it is possible to create the default connection point attribute without specifying an ID.</span></span> <span data-ttu-id="fe66f-136">このような場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールドが使用する基本の値を提供します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-136">In such cases, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field supplies a base value to use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe66f-137">次のコード例は、必要なが含まれる Web パーツ接続の作成を示します<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fe66f-137">The following code example demonstrates the creation of a Web Parts connection that includes the required <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects.</span></span> <span data-ttu-id="fe66f-138"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスは抽象基本クラス、その子クラスのインスタンス<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--は実際のオブジェクトの接続を構成するために使用します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-138">Because the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class is an abstract base class, instances of its child classes--<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--are the actual objects used to form a connection.</span></span>  
  
 <span data-ttu-id="fe66f-139">この例では、4 つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="fe66f-139">The example has four parts:</span></span>  
  
-   <span data-ttu-id="fe66f-140">Web パーツを変更することができますユーザー コントロールは、ページのモードを表示します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-140">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="fe66f-141">ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーとの接続のコンシューマーとしての動作を制御します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-141">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="fe66f-142">すべてのコントロールをホストし、コード例を実行する Web ページ。</span><span class="sxs-lookup"><span data-stu-id="fe66f-142">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="fe66f-143">ページの例を実行する方法の説明。</span><span class="sxs-lookup"><span data-stu-id="fe66f-143">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="fe66f-144">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-144">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="fe66f-145">次のソース コード、ファイルを保存 .ascx、それにに割り当てられているファイルの名前、`Src`の属性、`Register`ホストする Web ページの上部にあるディレクティブは、このユーザー コントロールをします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-145">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="fe66f-146">詳細については、このコントロールでモードと、ソース コードの説明を表示を参照してください[チュートリアル: Web パーツ ページの表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-146">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="fe66f-147">コード例の 2 番目の部分では、インターフェイスとコントロールのソース コードを示します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-147">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="fe66f-148">ソース ファイルには、という名前の単純なインターフェイスが含まれています。`IZipCode`です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-148">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="fe66f-149"><xref:System.Web.UI.WebControls.WebParts.WebPart>という名前のクラス`ZipCodeWebPart`インターフェイスを実装して、プロバイダー コントロールとして機能します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-149">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="fe66f-150">その`ProvideIZipCode`インターフェイスの唯一のメンバーを実装するコールバック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-150">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="fe66f-151">このメソッドは、単に、インターフェイスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-151">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="fe66f-152">メソッドが付いている、`ConnectionProvider`メタデータ内の属性です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-152">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="fe66f-153">これは、プロバイダーの接続ポイントのコールバック メソッドとしてメソッドを識別するためのメカニズムです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-153">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="fe66f-154">他の<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスの名前は`WeatherWebPart`、し、接続のコンシューマーとして機能します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-154">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="fe66f-155">このクラスは、という名前のメソッドを持つ`GetZipCode`のインスタンスを取得する、`IZipCode`プロバイダー コントロールからのインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-155">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="fe66f-156">このメソッドが、コンシューマーの接続ポイント メソッドとしてマークされていることに注意してください、`ConnectionConsumer`メタデータ内の属性です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-156">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span> <span data-ttu-id="fe66f-157">これは、コンシューマー コントロールの接続ポイント メソッドを識別するためのメカニズムです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-157">This is the mechanism for identifying the connection point method in the consumer control.</span></span>  
  
 <span data-ttu-id="fe66f-158">コード例を実行するには、このソース コードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="fe66f-158">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="fe66f-159">コンパイルするには明示的にし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに結果として得られるアセンブリを配置できます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-159">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="fe66f-160">またはを動的にコンパイルされる実行時に、サイトの App_Code フォルダー内のソース コードを配置することができます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-160">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="fe66f-161">このコード例では、動的なコンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-161">This code example uses dynamic compilation.</span></span> <span data-ttu-id="fe66f-162">コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-162">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="fe66f-163">コード例の 3 番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-163">The third part of the code example is the Web page.</span></span> <span data-ttu-id="fe66f-164">上部にある、 `Register`  ページで、接続を構成するカスタム コントロールおよび変更できるようにするユーザー コントロールを登録するためのディレクティブの表示モード。</span><span class="sxs-lookup"><span data-stu-id="fe66f-164">Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</span></span> <span data-ttu-id="fe66f-165">接続自体が内で宣言によって作成された、`<staticconnections>`ページ上の要素。</span><span class="sxs-lookup"><span data-stu-id="fe66f-165">The connection itself is created declaratively within the `<staticconnections>` element on the page.</span></span> <span data-ttu-id="fe66f-166">プログラムからの接続を作成することもできます。これを行うためのコードが含まれている、`Button1_Click`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-166">You can also create the connection programmatically; the code for doing that is contained in the `Button1_Click` method.</span></span> <span data-ttu-id="fe66f-167">宣言またはプログラムによって、接続が作成されるかどうかの接続ポイントはコンシューマーとプロバイダーの常に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fe66f-167">Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</span></span> <span data-ttu-id="fe66f-168">`Button2_Click`メソッドへのアクセス、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>コンシューマーとプロバイダーの両方のオブジェクトし、ページ内のラベルに、プロパティ値の一部を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-168">The `Button2_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 <span data-ttu-id="fe66f-169">ブラウザーでページを読み込んだ後、**コネクション ポイントの詳細**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-169">After you load the page in a browser, click the **Connection Point Details** button.</span></span> <span data-ttu-id="fe66f-170">宣言型の接続で確立されているプロバイダーおよびコンシューマー接続ポイントに関する情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-170">Information about the provider and consumer connection points established in the declarative connection appears.</span></span> <span data-ttu-id="fe66f-171">次に、使用、**表示モード**接続モードのドロップダウン コントロールをページに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-171">Next, use the **Display Mode** drop-down control to switch the page into connect mode.</span></span> <span data-ttu-id="fe66f-172">いずれかの動詞メニューを開き、 <xref:System.Web.UI.WebControls.WebParts.WebPart> (タイトル バーに下向きの矢印で表される)、コントロールは、connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-172">On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (represented by a downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="fe66f-173">UI が表示されたら、接続はによって自動的に作成された、`<asp:connectionszone>`コントロール、ページで宣言します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-173">The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page.</span></span> <span data-ttu-id="fe66f-174">クリックして、**切断**を既存の接続を終了するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-174">Click the **Disconnect** button to terminate the existing connection.</span></span> <span data-ttu-id="fe66f-175">使用して、**表示モード**コントロールをページをブラウズ モードを返します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-175">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="fe66f-176">次をクリックして、**動的接続**プログラムで接続を作成するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-176">Next, click the **Dynamic Connection** button to create a connection programmatically.</span></span> <span data-ttu-id="fe66f-177">クリックして、**接続ポイントの詳細**ボタンをもう一度、2 つの接続ポイント オブジェクトに関する詳細を示すためにします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-177">Click the **Connection Point Details** button again, to indicate details about the two connection point objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe66f-178">コネクション ポイントが同時に複数の接続をサポートするかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-178">Gets a value that indicates whether a connection point supports multiple simultaneous connections.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe66f-179">コネクション ポイントが複数の接続をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-179">
              <see langword="true" /> if the connection point supports multiple connections; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe66f-180"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> オブジェクトが、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティ値に設定`true`(によって、<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>クラス) であるため、既定の設定、Web パーツ コントロールへの複数のコンシューマー接続フォームにプロバイダー接続ポイントを有効にします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-180"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> objects have their <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property value set to `true` (by the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class), because the Web Parts control set by default enables provider connection points to form connections to multiple consumers.</span></span>  
  
 <span data-ttu-id="fe66f-181">これに対し、<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトがその<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティ値に設定`false`(によって、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>クラス)、Web パーツ コントロールの既定の設定は、コンシューマー接続を許可しているので、一度に 1 つのプロバイダーへの接続を確立するためにポイントします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-181">In contrast, <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects have their <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property value set to `false` (by the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class) because the Web Parts control set by default allows consumer connection points to establish a connection to only one provider at a time.</span></span>  
  
 <span data-ttu-id="fe66f-182">複数の異なる値を割り当てることによって複数の接続に関連する既定の動作を変更することができます、<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>プロパティ (プロバイダー) または<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>プロパティ (消費者)、2 つの<xref:System.Attribute>接続属性に使用するクラス。</span><span class="sxs-lookup"><span data-stu-id="fe66f-182">You can change the default behavior concerning multiple connections by assigning different values to the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> property (for providers) or the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> property (for consumers) on the two <xref:System.Attribute> classes used for connection attributes.</span></span> <span data-ttu-id="fe66f-183">同時に複数のプロバイダーに接続するコンシューマー接続ポイントを有効にした場合、コードは結果として得られる同期に関する問題を扱う必要があります。</span><span class="sxs-lookup"><span data-stu-id="fe66f-183">If you enable consumer connection points to connect to multiple providers at the same time, your code must deal with any resulting synchronization issues.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe66f-184">使用を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティを両方とも<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fe66f-184">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="fe66f-185">このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-185">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="fe66f-186">内のコード、 `Button2_Click` 、Web ページ アクセス方法、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>各接続ポイントのプロパティがオブジェクトし、ラベルにそれぞれの値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-186">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="fe66f-187">クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-187">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe66f-188">コネクション ポイントが関連付けられているサーバー コントロールの <see cref="T:System.Type" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-188">Gets the <see cref="T:System.Type" /> of the server control with which a connection point is associated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe66f-189">コントロールの種類を表す <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-189">A <see cref="T:System.Type" /> representing the control type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe66f-190">値、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティは、多くの場合、<xref:System.Web.UI.WebControls.WebParts.WebPart>型です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-190">The value of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property is often the <xref:System.Web.UI.WebControls.WebParts.WebPart> type.</span></span> <span data-ttu-id="fe66f-191">ただし、正しく有効化および配置の場合、ユーザー コントロールまたはサーバー コントロールの任意の型が接続に参加できるため、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティは、これらの他のサーバー コントロールの種類ものいずれかを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-191">However, because any type of user control or server control can participate in connections if it is properly enabled and placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property can return one of these other server control types as well.</span></span>  
  
 <span data-ttu-id="fe66f-192">サーバーをコントロールはないとき<xref:System.Web.UI.WebControls.WebParts.WebPart>でコントロールを配置している、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>でラップされる、ゾーン、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>として機能させることができますので、実行時にオブジェクト<xref:System.Web.UI.WebControls.WebParts.WebPart>を制御し、接続に参加します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-192">When server controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls are placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, they are wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time so they can function as <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and participate in connections.</span></span> <span data-ttu-id="fe66f-193">接続で、このようなコントロールが含まれている場合は、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティの値を返さない、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>入力; の型が返されます、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクトの子コントロールは、サーバーまたはユーザー コントロールの種類です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-193">But when such controls are involved in connections, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property value does not return the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> type; it returns the type of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object's child control, which is the type of the server or user control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe66f-194">使用を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティを両方とも<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fe66f-194">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="fe66f-195">このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-195">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="fe66f-196">内のコード、 `Button2_Click` 、Web ページ アクセス方法、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>各接続ポイントのプロパティがオブジェクトし、ラベルにそれぞれの値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-196">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="fe66f-197">クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-197">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe66f-198">サーバー コントロールに関連付けられているコネクション ポイントのコレクション内で、既定のコネクション ポイントを識別するために使用される文字列を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-198">Represents a string used to identify the default connection point within a collection of connection points associated with a server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe66f-199">接続ポイントを作成すると、コンシューマーまたはプロバイダーのソース コード内の接続ポイントの ID を指定することは<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを使用して、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>または<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性。</span><span class="sxs-lookup"><span data-stu-id="fe66f-199">When a connection point is created, it is possible to specify an ID for the connection point in the source code of a consumer or provider <xref:System.Web.UI.WebControls.WebParts.WebPart> control, using a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> or a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute.</span></span> <span data-ttu-id="fe66f-200">ただし、属性が加わった時点をソース コードでの接続ポイント、`ID`パラメーターは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-200">However, when an attribute is added to a connection point in the source code, the `ID` parameter is optional.</span></span> <span data-ttu-id="fe66f-201">属性には、ID が指定されていない場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールドが既定の接続ポイントの識別に使用する文字列を提供します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-201">If the ID is not specified in the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field provides a string that is used to identify the default connection point.</span></span>  
  
 <span data-ttu-id="fe66f-202">コンシューマーまたはプロバイダーのコントロールでは、複数の接続ポイントが定義されている、接続を作成するときに、接続ポイントを識別できるようには各接続ポイントの ID を指定するために必要です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-202">If multiple connection points are defined in a consumer or provider control, it is necessary to specify an ID for each connection point, so that the connection points can be distinguished when creating connections.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe66f-203">ユーザー インターフェイス (UI) でコネクション ポイントを表す表示名として使用される文字列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-203">Gets a string that serves as a friendly display name to represent a connection point in the user interface (UI).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe66f-204">
            <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> オブジェクトの表示名を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-204">A string that contains a friendly display name for a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe66f-205">Web パーツ接続を作成するには、接続のプロバイダーとコンシューマー コントロールする必要がありますをそれぞれ指定には、少なくとも 1 つのコネクション ポイントと通信してデータを共有できるようにするメソッド。</span><span class="sxs-lookup"><span data-stu-id="fe66f-205">To create a Web Parts connection, the provider and consumer controls for the connection must each specify at least one connection point, a method that enables them to communicate and share data.</span></span> <span data-ttu-id="fe66f-206">これらの接続ポイント メソッドを識別するのには、開発者は、選択したメソッドの属性を指定します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-206">To identify these connection point methods, a developer specifies an attribute on the selected methods.</span></span> <span data-ttu-id="fe66f-207">プロバイダーで、`ConnectionProvider`属性は、選択したコールバック メソッド、および、コンシューマーが設定、`ConnectionConsumer`属性がプロバイダーからのデータを格納しているインターフェイスのインスタンスを受信するメソッドに設定します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-207">In the provider, a `ConnectionProvider` attribute is set on the selected callback method, and in the consumer, a `ConnectionConsumer` attribute is set on the method that receives an instance of an interface that contains data from the provider.</span></span> <span data-ttu-id="fe66f-208">必須の属性を作成するどのオーバー ロードを宣言に関係なく、常に 1 つのパラメーターは、これらの属性の両方に、`displayName`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="fe66f-208">For both of these attributes, the one parameter that is always required, regardless of which overload is declared to create the attribute, is the `displayName` parameter.</span></span> <span data-ttu-id="fe66f-209">開発者は、接続ポイントの表示名として使用する文字列を割り当てる必要がありますになり、その文字列の値、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-209">The developer must assign a string to be used as a friendly display name for the connection point, and that string becomes the value of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property.</span></span>  
  
 <span data-ttu-id="fe66f-210"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>ユーザーが接続を作成するときに、Web ページの UI にプロパティ値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-210">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property value is displayed in the UI of a Web page when users create connections.</span></span> <span data-ttu-id="fe66f-211">たとえば、ときに、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールがページにコントロール間の接続を作成する UI を作成します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-211">For example, when the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control is added to the page, it creates a UI for users to create connections between controls.</span></span> <span data-ttu-id="fe66f-212">ユーザーが接続の表示モードを切り替えますで connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.WebPart> UI 表示される接続を制御します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-212">After a user switches a page into connect display mode and clicks a connect verb on a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the connection UI appears.</span></span> <span data-ttu-id="fe66f-213">各コントロールの接続に参加できるはおよび表示される UI では、各コントロールの横にあるドロップダウン リスト コントロールを使用可能な接続ポイントのフレンドリ名が表示されます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-213">Each control that can participate in a connection is listed in the UI, and next to each control is a drop-down list control that displays the friendly names of its available connection points.</span></span> <span data-ttu-id="fe66f-214">ユーザーには、接続を確立するには、少なくとも 1 つの接続ポイントを選択する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fe66f-214">Users must select at least one connection point to establish a connection.</span></span> <span data-ttu-id="fe66f-215">接続ポイントの一覧に表示される値がから取得した、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-215">The values that appear in the list of connection points are obtained from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property.</span></span> <span data-ttu-id="fe66f-216">開発者は、接続を作成するためのカスタム UI を構築を使用して、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティと同様の方法で、接続ポイントを表すフレンドリ名を指定します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-216">If developers build a custom UI for creating connections, they can use the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property in a similar way to provide a friendly name that represents a connection point.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="fe66f-217">コネクション ポイントに関連付けられている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> またはその他のサーバー コントロール。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-217">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control that is associated with a connection point.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe66f-218">コネクション ポイントが接続に参加できるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-218">Returns a value that indicates whether a connection point can participate in connections.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe66f-219">コントロールが接続に参加するためのコネクション ポイントを作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-219">
              <see langword="true" /> if the control can create a connection point to participate in a connection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe66f-220"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> 、ベースのメソッドに<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスを返しますでは常に`true`、派生クラスを返すメソッドをオーバーライドできますが、`true`または`false`の状態に基づいて、異なるタイミングで`control`です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-220">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method in the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class always returns `true`, but derived classes can override the method to return `true` or `false` at different times, based on the state of `control`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe66f-221">使用を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>両方のメソッド<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fe66f-221">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="fe66f-222">このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-222">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="fe66f-223">内のコード、 `Button2_Click` 、Web ページ アクセス方法、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>接続ポイントの各メソッドがオブジェクトし、ラベルにそれぞれの値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-223">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="fe66f-224">クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-224">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe66f-225">コネクション ポイントの識別子を含む文字列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-225">Gets a string that contains the identifier for a connection point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe66f-226">コネクション ポイントの識別子を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-226">A string that contains the identifier for a connection point.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe66f-227">開発者が宣言して、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>または<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性上のコントロールのソース コード内のメソッド、メソッドは、接続ポイントとして使用できるようにする必要はありませんを宣言する、`ID`接続ポイントの属性のパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-227">When a developer declares a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> or a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute on a method in the source code of a control, so that the method can be used as a connection point, it is not required to declare the `ID` parameter for the connection point attribute.</span></span> <span data-ttu-id="fe66f-228">唯一の必須の属性が、`displayName`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="fe66f-228">The only required attribute is the `displayName` parameter.</span></span> <span data-ttu-id="fe66f-229">値を使用して、接続ポイントに、既定の ID が割り当てられた、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="fe66f-229">A default ID is assigned to the connection point, using the value from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field.</span></span>  
  
 <span data-ttu-id="fe66f-230">接続ポイントとして使用されているコントロールに 1 つのメソッドがある場合、接続ポイントの ID を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="fe66f-230">If there is only one method in a control being used as a connection point, it is unnecessary to specify an ID for the connection point.</span></span> <span data-ttu-id="fe66f-231">接続ポイントとして指定された複数のメソッドがある場合は、です。 それぞれの ID を指定する必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-231">If there are multiple methods specified as connection points, you must specify an ID for each one; otherwise, an exception will be thrown.</span></span> <span data-ttu-id="fe66f-232">各接続ポイントを割り当てると、ID、行うも、Web ページ内の接続を宣言するか、コード内に作成するときに使用する接続ポイントを指定することできます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-232">By assigning an ID to each connection point, you also make it possible to specify which connection point to use when you declare connections in Web pages or create them in code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe66f-233">使用を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>プロパティを両方とも<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fe66f-233">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="fe66f-234">このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-234">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="fe66f-235">内のコード、 `Button2_Click` 、Web ページ アクセス方法、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>各接続ポイントのプロパティがオブジェクトし、ラベルにそれぞれの値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-235">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="fe66f-236">クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-236">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe66f-237">コネクション ポイントによって使用されるインターフェイスの型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-237">Gets the type of the interface used by a connection point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe66f-238">コントロールによって提供または使用されるインターフェイスに対応する <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe66f-238">A <see cref="T:System.Type" /> that corresponds to the interface type provided or consumed by a control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe66f-239"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>インターフェイスの種類の接続ポイントを使用してプロパティを示します。</span><span class="sxs-lookup"><span data-stu-id="fe66f-239">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property indicates what type of interface a connection point uses.</span></span> <span data-ttu-id="fe66f-240">これにより、2 つのコントロールは互換性があり、接続を構成できるかどうかを決定するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-240">This can help to determine whether two controls are compatible and able to form a connection.</span></span> <span data-ttu-id="fe66f-241">場合、プロバイダー接続ポイントの<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>コンシューマー接続ポイントのとは異なる<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>、2 つのコントロールは互換性がありません (つまり、こと、直接接続できませんトランスフォーマーなし)、および<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトは、接続を確立するために使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fe66f-241">If the provider connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> is different from the consumer connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, then the two controls are incompatible (meaning that they cannot be directly connected without a transformer), and a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to establish a connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe66f-242">使用を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>プロパティを両方とも<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fe66f-242">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="fe66f-243">このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="fe66f-243">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="fe66f-244">内のコード、 `Button2_Click` 、Web ページ アクセス方法、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>各接続ポイントのプロパティがオブジェクトし、ラベルにそれぞれの値を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="fe66f-244">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="fe66f-245">クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="fe66f-245">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
  </Members>
</Type>