<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="933a91474069425f37e5a116c1e3cdb3be8d6f67" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585350" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Web パーツ接続で、コンシューマー コントロールとプロバイダー コントロールがデータを共有できるようにするコネクション ポイント オブジェクトを定義するための基本クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データを共有する 2 つのサーバー コントロールのすべての Web パーツ接続で構成されます。 1 つのコントロール、コンシューマーは、もう 1 つは、プロバイダー。 Web パーツの接続および接続オブジェクト自体の不可欠なコンポーネントの詳細については、次を参照してください。、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>クラスの概要です。 すべての Web パーツ接続には、接続ポイントが必要です。 プロバイダーおよびコンシューマー コントロールそれぞれ必要がありますには、少なくとも 1 つの定義<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>(それぞれ、必要に応じて、複数のコネクション ポイント) 方法、コントロールに接続できる別のコントロールとデータの種類の詳細を格納しているオブジェクトを共有できます。 実際の接続のプロバイダーは、接続ポイント オブジェクトの独自の型を持つ (ベースから派生した<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラス)、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>インスタンス、およびコンシューマーが独自のオブジェクト、<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>インスタンス。  
  
 プロバイダー接続ポイントを作成するには、開発者は、コンシューマーに実装されたインターフェイス インスタンスが返されますが、プロバイダーにコールバック メソッドを追加する必要があります。 ソース コードとのコールバック メソッドをマークする必要があります、`ConnectionProvider`コード属性 (を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>クラス)。 同様に、コンシューマー接続ポイントを作成する開発者は、インターフェイス インスタンスを受け取ることがコンシューマーにメソッドを追加する必要があり、そのメソッドをマークする必要があります、`ConnectionConsumer`属性 (を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>クラス)。  
  
 開発者は、Web ページ上の接続を作成するときに、静的または動的な接続として作成できます。 静的な接続は、Web ページのマークアップで宣言されます。 静的な接続が宣言されると、開発者がどの接続ポイントを使用コンシューマーおよびプロバイダーの両方に値を割り当てることによってを指定することができます、`ProviderConnectionPointID`と`ConsumerConnectionPointID`内の属性、`<asp:webpartconnection>`要素のタグ。 この方法は、接続に使用するには、どの接続ポイントを識別する静的な接続を有効にするため、コンシューマーとプロバイダー、コントロール内で定義された複数の接続ポイントがある場合に特に便利です。  
  
 動的接続作成するにはプログラムでは、開発者のコードでユーザーによって提供される、ユーザー インターフェイス (UI) を使用して、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロール。 コードで接続を作成するには、開発者がのインスタンスを取得する必要があります、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクトを呼び出して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッドを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 このメソッドを呼び出すことができます、前に開発者がコンシューマーとプロバイダー サーバー コントロールと、それぞれの接続ポイント オブジェクトへの参照に必要です。 開発者の最初の呼び出しに、プロバイダーとコンシューマー コントロールの接続ポイントへの参照を取得する、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>と<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>のメソッド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 これらのメソッドは、適切な接続ポイント オブジェクトは、さらに、接続を作成するメソッドに渡すことができますを返します。  
  
 ときに、プロバイダーおよびコンシューマーの接続ポイント オブジェクトの両方のインターフェイスの同じ型を持つは互換性のあるし、データを共有に直接接続を形成できます。 同じインターフェイスの種類、それらが機能しない場合、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトは、コンシューマーが使用できる型に、プロバイダーからインターフェイスのインスタンスの変換に使用する必要があります。  
  
 抽象<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスは、コンシューマーおよびプロバイダーの両方のコントロールによって共有されている接続ポイントの基本の詳細を提供します。 いくつかのプロパティには、これらの詳細が含まれます。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティは、接続ポイントが、一度に 1 つ以上の接続に参加できるかどうかを示します。 既定では、プロバイダー接続ポイントは、複数の接続に参加できるし、コンシューマー接続ポイントことはできません。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティは、接続ポイントに関連付けられたサーバー コントロールの種類を示します。 そのだけでなくに注意してください<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは、接続を構成できる; 任意のサーバー コントロールでは、ASP.NET コントロール、カスタム コントロールまたはユーザー コントロールかどうかできます有効にできませんに配置されている場合、接続に参加する、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーンです。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティは接続を作成しているユーザーを支援するために UI に表示可能な接続ポイントのフレンドリ名を提供します。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>プロパティは、接続ポイント オブジェクト自体の文字列識別子として機能します。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>プロパティは、インターフェイスのインスタンスの種類、接続ポイントが認識することを示します。 指定したコネクション ポイントを提供またはそのインターフェイスのインスタンスを使用するかどうかがあるかどうかによって決定されます、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>または<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスには 1 つのメソッドです。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>メソッド接続ポイントが現在の接続に参加できないかどうかを示すブール値を返します。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスに 1 つのパブリック フィールドもあります<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>です。 このフィールドには、接続の既定の接続ポイントの識別に使用される値が含まれています。  
  
> [!NOTE]
>  メソッドは、1 つだけの必要なパラメーターを持つ接続ポイントを指定する属性`displayName`ID を指定せず、既定の接続ポイントの属性を作成することは、 このような場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールドが使用する基本の値を提供します。  
  
   
  
## Examples  
 次のコード例は、必要なが含まれる Web パーツ接続の作成を示します<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>オブジェクト。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスは抽象基本クラス、その子クラスのインスタンス<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--は実際のオブジェクトの接続を構成するために使用します。  
  
 この例では、4 つの部分があります。  
  
-   Web パーツを変更することができますユーザー コントロールは、ページのモードを表示します。  
  
-   ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーとの接続のコンシューマーとしての動作を制御します。  
  
-   すべてのコントロールをホストし、コード例を実行する Web ページ。  
  
-   ページの例を実行する方法の説明。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。 次のソース コード、ファイルを保存 .ascx、それにに割り当てられているファイルの名前、`Src`の属性、`Register`ホストする Web ページの上部にあるディレクティブは、このユーザー コントロールをします。 詳細については、このコントロールでモードと、ソース コードの説明を表示を参照してください[チュートリアル: Web パーツ ページの表示モードの変更](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)です。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 コード例の 2 番目の部分では、インターフェイスとコントロールのソース コードを示します。 ソース ファイルには、という名前の単純なインターフェイスが含まれています。`IZipCode`です。 <xref:System.Web.UI.WebControls.WebParts.WebPart>という名前のクラス`ZipCodeWebPart`インターフェイスを実装して、プロバイダー コントロールとして機能します。 その`ProvideIZipCode`インターフェイスの唯一のメンバーを実装するコールバック メソッドです。 このメソッドは、単に、インターフェイスのインスタンスを返します。 メソッドが付いている、`ConnectionProvider`メタデータ内の属性です。 これは、プロバイダーの接続ポイントのコールバック メソッドとしてメソッドを識別するためのメカニズムです。 他の<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスの名前は`WeatherWebPart`、し、接続のコンシューマーとして機能します。 このクラスは、という名前のメソッドを持つ`GetZipCode`のインスタンスを取得する、`IZipCode`プロバイダー コントロールからのインターフェイスです。 このメソッドが、コンシューマーの接続ポイント メソッドとしてマークされていることに注意してください、`ConnectionConsumer`メタデータ内の属性です。 これは、コンシューマー コントロールの接続ポイント メソッドを識別するためのメカニズムです。  
  
 コード例を実行するには、このソース コードをコンパイルする必要があります。 コンパイルするには明示的にし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに結果として得られるアセンブリを配置できます。 またはを動的にコンパイルされる実行時に、サイトの App_Code フォルダー内のソース コードを配置することができます。 このコード例では、動的なコンパイルを使用します。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル: カスタム Web サーバー コントロールの開発と](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)です。  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 コード例の 3 番目の部分は、Web ページです。 上部にある、 `Register`  ページで、接続を構成するカスタム コントロールおよび変更できるようにするユーザー コントロールを登録するためのディレクティブの表示モード。 接続自体が内で宣言によって作成された、`<staticconnections>`ページ上の要素。 プログラムからの接続を作成することもできます。これを行うためのコードが含まれている、`Button1_Click`メソッドです。 宣言またはプログラムによって、接続が作成されるかどうかの接続ポイントはコンシューマーとプロバイダーの常に指定する必要があります。 `Button2_Click`メソッドへのアクセス、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>コンシューマーとプロバイダーの両方のオブジェクトし、ページ内のラベルに、プロパティ値の一部を書き込みます。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ブラウザーでページを読み込んだ後、**コネクション ポイントの詳細**ボタンをクリックします。 宣言型の接続で確立されているプロバイダーおよびコンシューマー接続ポイントに関する情報が表示されます。 次に、使用、**表示モード**接続モードのドロップダウン コントロールをページに切り替えます。 いずれかの動詞メニューを開き、 <xref:System.Web.UI.WebControls.WebParts.WebPart> (タイトル バーに下向きの矢印で表される)、コントロールは、connect 動詞をクリックします。 UI が表示されたら、接続はによって自動的に作成された、`<asp:connectionszone>`コントロール、ページで宣言します。 クリックして、**切断**を既存の接続を終了するボタンをクリックします。 使用して、**表示モード**コントロールをページをブラウズ モードを返します。 次をクリックして、**動的接続**プログラムで接続を作成するボタンをクリックします。 クリックして、**接続ポイントの詳細**ボタンをもう一度、2 つの接続ポイント オブジェクトに関する詳細を示すためにします。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントが同時に複数の接続をサポートするかどうかを示す値を取得します。</summary>
        <value>コネクション ポイントが複数の接続をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> オブジェクトが、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティ値に設定`true`(によって、<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>クラス) であるため、既定の設定、Web パーツ コントロールへの複数のコンシューマー接続フォームにプロバイダー接続ポイントを有効にします。  
  
 これに対し、<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトが、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティ値に設定`false`(によって、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>クラス) ため、Web パーツ コントロールの既定の設定により、コンシューマー接続ポイントで 1 つのプロバイダーへの接続を確立するために、時間です。  
  
 複数の異なる値を割り当てることによって複数の接続に関連する既定の動作を変更することができます、<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>プロパティ (プロバイダー) または<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>プロパティ (消費者)、2 つの<xref:System.Attribute>接続属性に使用するクラス。 同時に複数のプロバイダーに接続するコンシューマー接続ポイントを有効にした場合、コードは結果として得られる同期に関する問題を扱う必要があります。  
  
   
  
## Examples  
 使用を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティを両方とも<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要です。  
  
 内のコード、 `Button2_Click` 、Web ページ アクセス方法、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>各接続ポイントのプロパティがオブジェクトし、ラベルにそれぞれの値を書き込みます。 クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントが関連付けられているサーバー コントロールの <see cref="T:System.Type" /> を取得します。</summary>
        <value>コントロールの種類を表す <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティは、多くの場合、<xref:System.Web.UI.WebControls.WebParts.WebPart>型です。 ただし、正しく有効化および配置の場合、ユーザー コントロールまたはサーバー コントロールの任意の型が接続に参加できるため、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティは、これらの他のサーバー コントロールの種類ものいずれかを返すことができます。  
  
 サーバーをコントロールはないとき<xref:System.Web.UI.WebControls.WebParts.WebPart>でコントロールを配置している、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>でラップされる、ゾーン、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>として機能させることができますので、実行時にオブジェクト<xref:System.Web.UI.WebControls.WebParts.WebPart>を制御し、接続に参加します。 接続で、このようなコントロールが含まれている場合は、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティの値を返さない、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>入力; の型が返されます、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクトの子コントロールは、サーバーまたはユーザー コントロールの種類です。  
  
   
  
## Examples  
 使用を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティを両方とも<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要です。  
  
 内のコード、 `Button2_Click` 、Web ページ アクセス方法、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>各接続ポイントのプロパティがオブジェクトし、ラベルにそれぞれの値を書き込みます。 クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー コントロールに関連付けられているコネクション ポイントのコレクション内で、既定のコネクション ポイントを識別するために使用される文字列を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接続ポイントを作成すると、コンシューマーまたはプロバイダーのソース コード内の接続ポイントの ID を指定することは<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールを使用して、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>または<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性。 ただし、属性が加わった時点をソース コードでの接続ポイント、`ID`パラメーターは省略可能です。 属性には、ID が指定されていない場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールドが既定の接続ポイントの識別に使用する文字列を提供します。  
  
 コンシューマーまたはプロバイダーのコントロールでは、複数の接続ポイントが定義されている、接続を作成するときに、接続ポイントを識別できるようには各接続ポイントの ID を指定するために必要です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー インターフェイス (UI) でコネクション ポイントを表す表示名として使用される文字列を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> オブジェクトの表示名を含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web パーツ接続を作成するには、接続のプロバイダーとコンシューマー コントロールする必要がありますをそれぞれ指定には、少なくとも 1 つのコネクション ポイントと通信してデータを共有できるようにするメソッド。 これらの接続ポイント メソッドを識別するのには、開発者は、選択したメソッドの属性を指定します。 プロバイダーで、`ConnectionProvider`属性は、選択したコールバック メソッド、および、コンシューマーが設定、`ConnectionConsumer`属性がプロバイダーからのデータを格納しているインターフェイスのインスタンスを受信するメソッドに設定します。 必須の属性を作成するどのオーバー ロードを宣言に関係なく、常に 1 つのパラメーターは、これらの属性の両方に、`displayName`パラメーター。 開発者は、接続ポイントの表示名として使用する文字列を割り当てる必要がありますになり、その文字列の値、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティです。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>ユーザーが接続を作成するときに、Web ページの UI にプロパティ値が表示されます。 たとえば、ときに、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールがページにコントロール間の接続を作成する UI を作成します。 ユーザーが接続の表示モードを切り替えますで connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.WebPart> UI 表示される接続を制御します。 各コントロールの接続に参加できるはおよび表示される UI では、各コントロールの横にあるドロップダウン リスト コントロールを使用可能な接続ポイントのフレンドリ名が表示されます。 ユーザーには、接続を確立するには、少なくとも 1 つの接続ポイントを選択する必要があります。 接続ポイントの一覧に表示される値がから取得した、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティです。 開発者は、接続を作成するためのカスタム UI を構築を使用して、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティと同様の方法で、接続ポイントを表すフレンドリ名を指定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">コネクション ポイントに関連付けられている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> またはその他のサーバー コントロール。</param>
        <summary>コネクション ポイントが接続に参加できるかどうかを示す値を取得します。</summary>
        <returns>コントロールが接続に参加するためのコネクション ポイントを作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> 、ベースのメソッドに<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスを返しますでは常に`true`、派生クラスを返すメソッドをオーバーライドできますが、`true`または`false`の状態に基づいて、異なるタイミングで`control`です。  
  
   
  
## Examples  
 使用を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>両方のメソッド<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要です。  
  
 内のコード、 `Button2_Click` 、Web ページ アクセス方法、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>接続ポイントの各メソッドがオブジェクトし、ラベルにそれぞれの値を書き込みます。 クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントの識別子を含む文字列を取得します。</summary>
        <value>コネクション ポイントの識別子を含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 開発者が宣言して、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>または<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性上のコントロールのソース コード内のメソッド、メソッドは、接続ポイントとして使用できるようにする必要はありませんを宣言する、`ID`接続ポイントの属性のパラメーターです。 唯一の必須の属性が、`displayName`パラメーター。 値を使用して、接続ポイントに、既定の ID が割り当てられた、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールドです。  
  
 接続ポイントとして使用されているコントロールに 1 つのメソッドがある場合、接続ポイントの ID を指定する必要はありません。 接続ポイントとして指定された複数のメソッドがある場合は、です。 それぞれの ID を指定する必要があります。それ以外の場合は、例外がスローされます。 各接続ポイントを割り当てると、ID、行うも、Web ページ内の接続を宣言するか、コード内に作成するときに使用する接続ポイントを指定することできます。  
  
   
  
## Examples  
 使用を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>プロパティを両方とも<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要です。  
  
 内のコード、 `Button2_Click` 、Web ページ アクセス方法、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>各接続ポイントのプロパティがオブジェクトし、ラベルにそれぞれの値を書き込みます。 クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントによって使用されるインターフェイスの型を取得します。</summary>
        <value>コントロールによって提供または使用されるインターフェイスに対応する <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>インターフェイスの種類の接続ポイントを使用してプロパティを示します。 これにより、2 つのコントロールは互換性があり、接続を構成できるかどうかを決定するのに役立ちます。 場合、プロバイダー接続ポイントの<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>コンシューマー接続ポイントのとは異なる<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>、2 つのコントロールは互換性がないし (つまり、こと、直接接続できませんトランスフォーマーなし)、および<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトの必要があります接続を確立するために使用します。  
  
   
  
## Examples  
 使用を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>プロパティを両方とも<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。例を実行するために必要な完全なコードのセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要です。  
  
 内のコード、 `Button2_Click` 、Web ページ アクセス方法、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>各接続ポイントのプロパティがオブジェクトし、ラベルにそれぞれの値を書き込みます。 クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
  </Members>
</Type>