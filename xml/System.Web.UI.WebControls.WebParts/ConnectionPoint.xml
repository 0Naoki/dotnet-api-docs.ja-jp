<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="465db885a33f9ef597bef0f29434260c08c2172a" /><Meta Name="ms.sourcegitcommit" Value="2982b8c4cce02c2542285fcaf172f7544d6b80bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/09/2019" /><Meta Name="ms.locfileid" Value="59353838" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Web パーツ接続で、コンシューマー コントロールとプロバイダー コントロールがデータを共有できるようにするコネクション ポイント オブジェクトを定義するための基本クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データを共有する 2 つのサーバー コントロールのすべての Web パーツ接続で構成されます。 1 つのコントロールは、コンシューマー、他のプロバイダー。 Web パーツの接続および接続オブジェクト自体の重要なコンポーネントの詳細については、次を参照してください。、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>クラスの概要。 すべての Web パーツ接続では、接続ポイントが必要です。 プロバイダーとコンシューマー コントロールする必要があります各が定義されている少なくとも 1 つ<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>(それぞれのオプションが複数の接続ポイント) 方法、コントロールに接続できる別のコントロールとデータの種類の詳細を格納しているオブジェクトを共有できます。 実際の接続でプロバイダーが独自の接続ポイント オブジェクトの型 (基本から派生した<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラス)、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>インスタンス、およびコンシューマーが独自のオブジェクトを<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>インスタンス。  
  
 プロバイダー コネクション ポイントを作成するには、開発者は、プロバイダーをコンシューマーに実装されたインターフェイス インスタンスを返すをコールバック メソッドを追加する必要があります。 ソース コードにコールバック メソッドをマークする必要があります、`ConnectionProvider`コード属性 (を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>クラス)。 同様に、コンシューマー接続ポイントを作成する開発者は、コンシューマーが、インターフェイス インスタンスを受信するメソッドを追加する必要があり、そのメソッドをマークする必要があります、`ConnectionConsumer`属性 (を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>クラス)。  
  
 開発者は、Web ページ上の接続を作成するときに、静的または動的な接続として作成できます。 静的な接続は、Web ページのマークアップで宣言されます。 静的な接続が宣言されると、開発者がどの接続ポイントは、値を割り当てることで、コンシューマーとプロバイダーの使用を指定することができます、`ProviderConnectionPointID`と`ConsumerConnectionPointID`内の属性、`<asp:webpartconnection>`要素タグ。 この方法は、接続に使用するには、どの接続ポイントを識別するために静的な接続を有効になるので、コンシューマーとプロバイダー コントロール内で定義されている複数の接続ポイントがある場合に特に便利です。  
  
 開発者のコードまたはによって提供されるユーザー インターフェイス (UI) を使用してユーザーのいずれか、動的な接続がプログラムでは、作成、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロール。 コードで接続を作成するには、開発者がのインスタンスを取得する必要があります、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>オブジェクトを呼び出すことによって、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>メソッドを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 このメソッドを呼び出すことができますが、開発者、コンシューマーとプロバイダーのサーバー コントロールと、それぞれのコネクション ポイント オブジェクトへの参照が必要です。 開発者の最初の呼び出しに、プロバイダーとコンシューマー コントロールの接続ポイントへの参照を取得する、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>と<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>メソッド、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール。 これらのメソッドは、適切な接続ポイント オブジェクトは、さらに、接続を作成するためのメソッドに渡すことができますを返します。  
  
 ときにプロバイダーとコンシューマーの接続ポイント オブジェクトの両方のインターフェイスと同じ型で、互換性のあるされ、共有データへの直接接続を形成できます。 これらのインターフェイスの同じ型では動作しない場合、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトは、コンシューマーが使用できる型には、プロバイダーからインターフェイス インスタンスを変換するために使用する必要があります。  
  
 抽象<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスは、コンシューマーとプロバイダーの両方のコントロールによって共有されている接続ポイントの基本の詳細を提供します。 いくつかのプロパティには、これらの詳細が含まれます。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティは、接続ポイントが、一度に 1 つ以上の接続に参加できるかどうかを示します。 既定では、プロバイダー接続ポイントは、複数の接続に参加できるし、コンシューマー接続ポイントのことはできません。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティは、接続ポイントに関連付けられたサーバー コントロールの種類を示します。 そのだけでなくに注意してください<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールは、接続を構成できる、任意のサーバー コントロールでは、ASP.NET コントロール、カスタム コントロール、またはユーザー コントロールでは、有効にできるで配置されている場合、接続に参加する、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティは、接続を作成するユーザーを支援するために UI で表示可能な接続ポイントのフレンドリ名を提供します。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>プロパティ自体コネクション ポイント オブジェクトの文字列識別子として機能します。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>インターフェイス インスタンスの種類、接続ポイントを理解してプロパティを示します。 指定したコネクション ポイントを提供またはそのインターフェイスのインスタンスを利用するかどうかがかどうかによって決まりますが、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>または<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスが 1 つのメソッド。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>メソッドは、接続ポイントが現在接続に参加できないかどうかを示すブール値を返します。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスも 1 つのパブリック フィールドを持つ<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>します。 このフィールドには、接続の既定のコネクション ポイントを識別するために使用される値が含まれています。  
  
> [!NOTE]
>  接続ポイント メソッドの 1 つだけの必須パラメーターを指定する属性`displayName`で ID を指定せず、既定の接続ポイントの属性を作成することがあるため、 このような場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールドが使用する基本の値を提供します。  
  
   
  
## Examples  
 次のコード例は、必要なが含まれる Web パーツ接続の作成を示して<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>オブジェクト。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスは抽象基本クラス、その子クラスのインスタンス<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--実際のオブジェクトの接続を構成するために使用されます。  
  
 この例では、4 つの部分があります。  
  
-   ページのモードを表示するユーザー コントロール Web パーツを変更することができます。  
  
-   ソース インターフェイスと 2 つのコード<xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーと接続のコンシューマーとしての動作を制御します。  
  
-   すべてのコントロールをホストし、コード例を実行する Web ページ。  
  
-   ページの例を実行する方法の説明です。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。 割り当てられているファイル名を付けることを .ascx ファイルでは、次のソース コードを保存、`Src`の属性、`Register`これはこのユーザー コントロールのディレクティブをホストする Web ページの上部にあります。 詳細については、このコントロールのモードと、ソース コードの説明を表示するを参照してください。[チュートリアル。ページのパーツを Web 上の表示モードを変更する](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 コード例の 2 番目の部分では、インターフェイスとコントロールのソース コードを示します。 ソース ファイルには、という名前の単純なインターフェイスが含まれています。`IZipCode`します。 <xref:System.Web.UI.WebControls.WebParts.WebPart>という名前のクラス`ZipCodeWebPart`するインターフェイスを実装し、プロバイダー コントロールとして機能します。 その`ProvideIZipCode`メソッドは、インターフェイスの唯一のメンバーを実装するコールバック メソッドです。 メソッドは、単に、インターフェイスのインスタンスを返します。 メソッドが設定されている、`ConnectionProvider`そのメタデータ内の属性。 これは、プロバイダーのコネクション ポイントのコールバック メソッドとしてメソッドを識別するための機構です。 他の<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスの名前が`WeatherWebPart`、および接続のコンシューマーとして機能します。 このクラスは、という名前のメソッドを持つ`GetZipCode`のインスタンスを取得する、`IZipCode`プロバイダー コントロールからのインターフェイス。 コンシューマーのコネクション ポイントのメソッドとしてこのメソッドがマークされていることに注意してください、`ConnectionConsumer`そのメタデータ内の属性。 これは、コンシューマー コントロールの接続ポイント メソッドを識別するためのメカニズムです。  
  
 実行するコード例は、このソース コードをコンパイルする必要があります。 明示的にコンパイルでき、結果として得られるアセンブリを Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに格納できます。 または、場所に動的にコンパイルされる実行時に、サイトの App_Code フォルダーにソース コードを配置することができます。 このコード例では、動的なコンパイルを使用します。 コンパイルする方法について説明するチュートリアルでは、次を参照してください。[チュートリアル。カスタムの開発と Web サーバー コントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 コード例の 3 番目の部分は、Web ページです。 上部にある、 `Register`  ページの表示モードを接続を形成するカスタム コントロールおよび変更できるようにするユーザー コントロールを登録するためのディレクティブ。 宣言内自体の接続が作成された、`<staticconnections>`ページ上の要素。 プログラムでは、接続を作成することもできます。これを行うためのコードが含まれている、`Button1_Click`メソッド。 宣言またはプログラムによって、接続が作成されるかどうか接続ポイントは、プロバイダーとコンシューマーの両方に対して常に指定する必要があります。 `Button2_Click`メソッドへのアクセス、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>プロバイダーとコンシューマーの両方のオブジェクトし、そのプロパティ値の一部のページでは、ラベルに書き込みます。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ブラウザーでページを読み込んだ後、**コネクション ポイントの詳細**ボタンをクリックします。 宣言型の接続で確立されているプロバイダーとコンシューマーのコネクション ポイントに関する情報が表示されます。 次に、使用、**表示モード**接続モードのドロップダウン コントロールをページに切り替えます。 いずれかの動詞メニューで、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール (タイトル バーの下向きの矢印で表される)、接続の動詞をクリックします。 UI が表示されたら、接続はによって自動的に作成された、`<asp:connectionszone>`コントロール、ページで宣言します。 をクリックして、**切断**を既存の接続を終了するボタンをクリックします。 使用して、**表示モード**コントロールをページをブラウズ モードを返します。 次に、クリックして、**動的接続**プログラムで接続を作成するボタンをクリックします。 をクリックして、**接続ポイントの詳細**を 2 つの接続ポイント オブジェクトに関する詳細を示すために、もう一度ボタン。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Web パーツ接続の概要</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツ コントロール</related>
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントが同時に複数の接続をサポートするかどうかを示す値を取得します。</summary>
        <value><see langword="true" /> 接続ポイントは、複数の接続をサポートしている場合それ以外の場合、<see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> オブジェクトがその<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティ値に設定`true`(によって、<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>クラス) Web パーツ コントロールが既定で設定できるプロバイダーのコネクション ポイントを複数のコンシューマーに接続を作成するため、します。  
  
 これに対し、<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクトがその<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティ値に設定`false`(によって、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>クラス) Web パーツ コントロールが既定で設定できるコンシューマー接続ポイントで 1 つだけのプロバイダーへの接続を確立するために、時間です。  
  
 複数の異なる値を割り当てることで複数の接続に関連する既定の動作を変更することができます、 <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> (プロバイダー) のプロパティまたは<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>(コンシューマー) の 2 つのプロパティ<xref:System.Attribute>接続属性に使用されるクラス。 同時に複数のプロバイダーに接続するコンシューマー接続ポイントを有効にした場合、コードは、結果として得られる同期の問題を扱う必要があります。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>プロパティを両方<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。完全なコード例を実行するために必要なセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要。  
  
 内のコード、 `Button2_Click` Web ページ アクセスのメソッド、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>コネクション ポイントの各プロパティがオブジェクトし、ラベルに各値を書き込みます。 クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツ コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントが関連付けられているサーバー コントロールの <see cref="T:System.Type" /> を取得します。</summary>
        <value>コントロールの種類を表す <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティは、多くの場合、<xref:System.Web.UI.WebControls.WebParts.WebPart>型。 ただし、正しく有効化および配置の場合、あらゆる種類のユーザー コントロールまたはサーバー コントロールが接続に参加できるため、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティは、その他のサーバー コントロールの種類ものいずれかを返すことができます。  
  
 サーバーがコントロールはない<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールに配置されます、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>でラップされる、ゾーン、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>果たすことができますので、実行時にオブジェクト<xref:System.Web.UI.WebControls.WebParts.WebPart>を制御し、接続に参加します。 接続 で、このようなコントロールが含まれている場合は、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティの値は返されません、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> ; 入力の型が返されます、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクトの子コントロールは、サーバーまたはユーザー コントロールの種類です。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>プロパティを両方<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。完全なコード例を実行するために必要なセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要。  
  
 内のコード、 `Button2_Click` Web ページ アクセスのメソッド、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>コネクション ポイントの各プロパティがオブジェクトし、ラベルに各値を書き込みます。 クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツ コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー コントロールに関連付けられているコネクション ポイントのコレクション内で、既定のコネクション ポイントを識別するために使用される文字列を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 接続ポイントが作成されると、コンシューマーまたはプロバイダーのソース コードのコネクション ポイントの ID を指定することは<xref:System.Web.UI.WebControls.WebParts.WebPart>を使用して、制御、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>または<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性。 ただし、属性が加わった時点をソース コードでの接続ポイント、`ID`パラメーターは省略可能です。 属性には、ID が指定されていない場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールドが既定のコネクション ポイントを識別するために使用される文字列を提供します。  
  
 コンシューマーまたはプロバイダー コントロールでは、複数の接続ポイントが定義されている、接続を作成するときに、コネクション ポイントを識別できるようには各接続ポイントの ID を指定するために必要です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー インターフェイス (UI) でコネクション ポイントを表す表示名として使用される文字列を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> オブジェクトの表示名を含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web パーツ接続を作成するには、接続のプロバイダーとコンシューマー コントロールする必要があります指定ごとに少なくとも 1 つの接続ポイントと通信し、データを共有できるようにするメソッドされます。 これらの接続ポイント メソッドを識別するためには、開発者は、選択したメソッドの属性を指定します。 プロバイダーで、`ConnectionProvider`属性が設定されて、選択したコールバック メソッドでは、コンシューマーの`ConnectionConsumer`プロバイダーからのデータを格納しているインターフェイスのインスタンスを受け取るメソッドに属性を設定します。 どのオーバー ロードは、属性を作成する宣言に関係なく、必須では常に 1 つのパラメーターは、これらの属性の両方の、`displayName`パラメーター。 開発者は、接続ポイントのわかりやすい表示名として使用する文字列を割り当てる必要があり、その文字列の値になります、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティ。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>ユーザーが接続を作成するときに、Web ページの UI でプロパティ値が表示されます。 たとえば、ときに、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>コントロールはユーザー コントロール間の接続を作成するための UI を作成します ページに追加します。 ユーザーが接続の表示モードを切り替えます、connect の動詞をクリックして後、 <xref:System.Web.UI.WebControls.WebParts.WebPart> UI が表示される接続を制御します。 接続に参加できる各コントロールは、UI が表示され、各コントロールの横には、使用可能な接続ポイントのフレンドリ名を表示するドロップダウン リスト コントロール。 ユーザーは、接続を確立するには少なくとも 1 つの接続ポイントを選択する必要があります。 コネクション ポイントの一覧に表示される値がから取得した、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>プロパティ。 開発者は、接続を作成するためのカスタム UI を構築場合、使用すること、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>接続ポイントを表すフレンドリ名を指定する同様の方法でプロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツ コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">コネクション ポイントに関連付けられている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> またはその他のサーバー コントロール。</param>
        <summary>コネクション ポイントが接続に参加できるかどうかを示す値を取得します。</summary>
        <returns><see langword="true" /> コントロールが接続に参加するためのコネクション ポイントを作成できる場合は true。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> 、ベースのメソッドに<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスを返しますでは常に`true`、派生クラスを返すメソッドをオーバーライドできますが、`true`または`false`の状態に基づいて、異なるタイミングで`control`します。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>両方のメソッド<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。完全なコード例を実行するために必要なセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要。  
  
 内のコード、 `Button2_Click` Web ページ アクセスのメソッド、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>コネクション ポイントの各メソッドがオブジェクトし、ラベルに各値を書き込みます。 クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツ コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントの識別子を含む文字列を取得します。</summary>
        <value>コネクション ポイントの識別子を含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 開発者が宣言して、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>または<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>属性にコントロールのソース コード内のメソッド、接続ポイントとしてメソッドを使用できます必要はありませんを宣言する、`ID`接続ポイントの属性のパラメーター。 唯一の必須の属性が、`displayName`パラメーター。 値を使用して、接続ポイントに既定の ID が割り当てられた、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>フィールド。  
  
 接続ポイントとして使用されているコントロールに 1 つのメソッドがある場合は、接続ポイントの ID を指定する必要はありません。 コネクション ポイントとして指定された複数のメソッドがある場合は、それぞれ; の ID を指定する必要があります。それ以外の場合、例外がスローされます。 各接続ポイントに割り当てると ID、することも、Web ページ内の接続を宣言するか、コードで作成するときに使用するには、どの接続ポイントを指定すること。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>プロパティを両方<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。完全なコード例を実行するために必要なセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要。  
  
 内のコード、 `Button2_Click` Web ページ アクセスのメソッド、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>コネクション ポイントの各プロパティがオブジェクトし、ラベルに各値を書き込みます。 クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツ コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コネクション ポイントによって使用されるインターフェイスの型を取得します。</summary>
        <value>コントロールによって提供または使用されるインターフェイスに対応する <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>プロパティは、接続ポイントを使用するインターフェイスのタイプを示します。 これについては、2 つのコントロールは、互換性のあるおよび接続を構成できるかどうかを判断に役立ちます。 場合、プロバイダー接続ポイントの<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>コンシューマー接続ポイントのとは異なる<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>、2 つのコントロールは互換性がありません (つまりすることはできませんが直接接続されているトランスフォーマーなし)、および<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>オブジェクトの必要があります接続を確立するために使用します。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>プロパティを両方<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>と<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>オブジェクト。 このコード例は、プロパティにアクセスするコードを含む Web ページのみを示しています。完全なコード例を実行するために必要なセクションの例を参照してください、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>クラスの概要。  
  
 内のコード、 `Button2_Click` Web ページ アクセスのメソッド、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>コネクション ポイントの各プロパティがオブジェクトし、ラベルに各値を書き込みます。 クリックして、コードを実行、**コネクション ポイントの詳細**ページがブラウザーで読み込まれた後にボタンをクリックします。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツ コントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>