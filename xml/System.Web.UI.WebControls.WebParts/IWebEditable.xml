<Type Name="IWebEditable" FullName="System.Web.UI.WebControls.WebParts.IWebEditable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c18cbb4e672593a1a3f7e4b34c2af4868f6d8261" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70466248" /></Metadata><TypeSignature Language="C#" Value="public interface IWebEditable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebEditable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebEditable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebEditable" />
  <TypeSignature Language="F#" Value="type IWebEditable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールに関連付けられているカスタムの編集コントロールを開発者が指定するためのインターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インターフェイスを使用すると、カスタム<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールをサーバーコントロール ( <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、ユーザーコントロール、カスタムサーバーコントロールなど) に関連付けることができます。 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> コントロールは<xref:System.Web.UI.WebControls.WebParts.EditorZone>コントロールに含まれており、編集コントロールを持つこのゾーンは、エンドユーザーに対して、関連付けられた<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールのプロパティ、外観、および動作を変更するためのユーザーインターフェイス (UI) を提供します。 <xref:System.Web.UI.WebControls.WebParts.EditorPart>  
  
 この<xref:System.Web.UI.WebControls.WebParts.IWebEditable>インターフェイスには、2つの公開メンバーが含まれています。 プロパティ<xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A>は、コントロールが関連<xref:System.Web.UI.WebControls.WebParts.EditorPart>付けられたサーバーコントロールへの参照を取得するための手段を提供します。 メソッド<xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>は、サーバーコントロールに関連付けられた<xref:System.Web.UI.WebControls.WebParts.EditorPart>各カスタムコントロールのインスタンスを作成し、コレクションとして返すために使用されます。  
  
 インターフェイスは基本<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスに既に実装されていますが、既定では、この<xref:System.Web.UI.WebControls.WebParts.EditorPart>実装では<xref:System.Web.UI.WebControls.WebParts.WebPart>カスタムコントロールがクラスに関連付けられません。 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 派生<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールをカスタム<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールに関連付けるには、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>メソッドをオーバーライドします。  
  
   
  
## Examples  
 次のコード<xref:System.Web.UI.WebControls.WebParts.IWebEditable>例は、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール内のインターフェイスのメソッドをオーバーライドし、コントロールが<xref:System.Web.UI.WebControls.WebParts.WebPart>編集モードになるとカスタム<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールのインスタンスを作成する方法を示しています。  
  
 この例には、次の4つの部分があります。  
  
-   カスタムクラスのコード。  
  
-   カスタムコントロールをホストする Web ページ。  
  
-   ページを編集モードに切り替えるユーザーコントロール。  
  
-   ブラウザーでのこの例の動作について説明します。  
  
 コード例の最初の部分はカスタム`TextDisplayWebPart`クラスです。 クラスが<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスから派生し、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable>インターフェイスを実装して、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>メソッドと<xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A>プロパティの特定の実装を提供していることに注意してください。 `TextDisplayWebPart`クラス内で入れ子になっているは、基本<xref:System.Web.UI.WebControls.WebParts.EditorPart>クラス`TextDisplayEditorPart`から派生したプライベートなカスタムクラスでもあることに注意してください。 コード例を実行するには、このソースコードをコンパイルする必要があります。 これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。 または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。 コンパイルの両方の方法を示すチュートリアルについては、「[チュートリアル: カスタム Web サーバーコントロールの開発と使用](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)」を参照してください。  
  
 [!code-csharp[WebParts_IWebEditable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts_IWebEditable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#1)]  
  
 コード例の2番目の部分は、カスタムコントロールをホストする Web ページです。 コントロールはページのマークアップで宣言されていますが、カスタム<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールは実行時にプログラムによって追加される可能性があるため、そこで参照する必要はありません。 <xref:System.Web.UI.WebControls.WebParts.EditorZone>  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/editorpart_overview_cs.aspx#7)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/editorpart_overview_vb.aspx#7)]  
  
 コード例の3番目の部分は、ユーザーがページを編集モードに切り替えることができるようにするユーザーコントロールです。 ホストしている Web ページでユーザーコントロールが参照されていることに注意してください。 このユーザーコントロールを作成する方法の詳細については、「[チュートリアル: Web パーツページでの表示モードの変更](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)」を参照してください。  
  
 [!code-aspx-csharp[WebParts_IWebEditable_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/displaymodeuccs.ascx#8)]
 [!code-aspx-vb[WebParts_IWebEditable_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/displaymodeucvb.ascx#8)]  
  
 コード例を実行するには、ホスト Web ページをブラウザーに読み込んで、テキストボックスにテキストを追加し、**[ラベルコンテンツの設定]** ボタンをクリックしてコントロールのラベルを更新します。 ページを編集モードに切り替えるには、表示モードを含むドロップダウンリストから **[編集]** を選択します。 カスタム`TextDisplayEditorPart`コントロールの UI を表示するには、 `TextDisplayWebPart`コントロールの動詞メニューのドロップダウン矢印をクリックし、**[編集]** を選択します。 編集 UI では、フォントスタイルを含むドロップダウンリストを使用して、 `TextDisplayWebPart`コントロールのラベルのテキストスタイルを更新できます。 表示モード ドロップダウンリストの **参照モード** をクリックして、ページを標準ビューに戻し、ラベル内のテキストの編集モード中に選択したフォントスタイルが使用されていることを確認する必要があります。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Web パーツアプリケーションで制御されていない<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />サーバーコントロール (つまり、これらのコントロール<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />をゾーンに追加する場合) を使用する場合に、カスタム<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />コントロールをそのようなサーバーコントロールに関連付けるには、次の操作を行う必要があります。インターフェイスを<see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />実装します。 派生<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />コントロールは、インターフェイスを実装してはなり<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />ません。これは、基底クラスが既にそれを実行しているためです。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
  </Docs>
  <Members>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="iWebEditable.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> インターフェイスを実装するサーバー コントロールに関連付けられているカスタム <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> コントロールのコレクションを返します。</summary>
        <returns>サーバー コントロールに関連付けられているカスタム <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> コントロールのコレクションを格納する <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドを使用すると、カスタムコントロール<xref:System.Web.UI.WebControls.WebParts.WebPart> 、コントロール、また<xref:System.Web.UI.WebControls.WebParts.EditorPart>は<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>ユーザーコントロールに関連付けられているすべてのカスタムコントロールのコレクションを作成し、それらをオブジェクトとして返すことができます。 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> コントロール<xref:System.Web.UI.WebControls.WebParts.WebPartManager>は、サーバーコントロールが編集モードに切り替わるたび<xref:System.Web.UI.WebControls.WebParts.EditorPart>に、コレクションを取得し、すべてのコントロールのインスタンスを作成します。  
  
 通常は、 <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A>メソッドをオーバーライドすること<xref:System.Web.UI.WebControls.WebParts.WebPart>によって、カスタムコントロールにこのメソッドを実装します。 メソッドでは、コントロールに関連付けるカスタム<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールのインスタンスを作成し、それら<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>をオブジェクトに追加してから、そのオブジェクトを返します。 次<xref:System.Web.UI.WebControls.WebParts.EditorPart> に、コントロールの <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> コレクションがゾーンのプロパティに割り当てられます。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>  
  
> [!NOTE]
>  メソッドの実装<xref:System.Web.UI.WebControls.WebParts.EditorPart> <xref:System.Web.UI.WebControls.WebParts.EditorPart>内のコントロールのコレクションに追加されるには、その ID プロパティに値が割り当てられている必要があります。それ以外の場合、コレクションがに割り当てられると、例外がスローされます。 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>  <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例は、カスタム<xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールのメソッドをオーバーライドする方法を示しています。 サンプルを実行するために必要な完全なソースコードについては、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> 「クラスの概要」トピックの「例」セクションを参照してください。  
  
 このコード例には、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable>インターフェイスの両方のメンバーが含まれています。 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>メソッドをオーバーライドすると、1つ以上<xref:System.Collections.ArrayList>のカスタム<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールを収集するためのが作成され、その後リスト<xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>を使用してオブジェクトが作成されることに注意してください。  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>メソッドによって返されるオブジェクトは読み取り専用であり、個々のコントロールを追加するためのアクセス可能なメソッドを持っていません。 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> <see cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" /> ただし、メソッドのオーバーライドまたは実装では、などの別の種類の<see cref="T:System.Collections.ICollection" />オブジェクトを作成し<see cref="T:System.Collections.ArrayList" />て、すべてのカスタム<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />コントロールを格納し、新しい<see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" />オブジェクトを作成するときにそれをコンストラクターに渡すことができます。. コード例については、「例」のセクションを参照してください。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebBrowsableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ WebBrowsableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebBrowsableObject : obj" Usage="System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールによって編集される <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロール、ユーザー コントロール、またはカスタム コントロールへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールに関連付けられているコントロールへのオブジェクト参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A>は、コントロールが関連付け<xref:System.Web.UI.WebControls.WebParts.EditorPart>られているサーバーコントロールへの参照を取得するための方法を提供します。  
  
 プロパティ自体は読み取り専用ですが、返されるオブジェクト参照によって、 <xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールがサーバーコントロールの値を変更できるようになります。  
  
   
  
## Examples  
 次のコード例は、カスタム<xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールでプロパティをオーバーライドする方法を示しています。 この例を実行するために必要な完全なソースコードは、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable>クラスの概要に関するトピックの「例」セクションにあります。  
  
 このコード例では、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable>インターフェイスの両方のメンバーをオーバーライドします。  
  
 [!code-csharp[WebParts_IWebEditable_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts_IWebEditable_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>通常、サーバーコントロールに<see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />プロパティを実装する場合は、サーバーコントロール自体への参照を返すだけです。 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />クラスの場合は、子コントロールをラップして<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />コントロールとして機能させることができるので、 <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />プロパティの実装は子コントロールへの参照を返します。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>
