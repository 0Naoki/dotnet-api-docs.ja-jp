<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="244f2d3d456f34e730d468b1cf8b57cee486f32c" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70664884" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPart" />
  <TypeSignature Language="F#" Value="type IWebPart = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>ASP.NET <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールによって使用される共通のユーザー インターフェイス (UI) プロパティを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インターフェイスには、コントロールを<xref:System.Web.UI.WebControls.WebParts.WebPart>操作するユーザーエクスペリエンスを向上させる UI 指向のプロパティがいくつか用意されています。 <xref:System.Web.UI.WebControls.WebParts.IWebPart> 基本<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスから派生するコントロールを作成すると、基底クラスが<xref:System.Web.UI.WebControls.WebParts.WebPart>このインターフェイスを実装するため、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイス内のすべてのプロパティの実装が得られます。  
  
 Web パーツアプリケーションの一部として<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスから継承しない既存のユーザーコントロール、ASP.NET コントロール、またはカスタムサーバーコントロールを使用できます。また、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスで宣言されたこれらの UI 指向プロパティを使用することもできます。 既存のサーバーコントロールを<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーンに配置する場合、実行時には<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクトでラップされます。 クラスは<xref:System.Web.UI.WebControls.WebParts.GenericWebPart> <xref:System.Web.UI.WebControls.WebParts.WebPart>基本クラスから継承されるため、既存のサーバーコントロールは true <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールとして機能し、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスのプロパティに追加されます。  
  
 ゾーン内のコントロールではない<xref:System.Web.UI.WebControls.WebParts.WebPart>サーバーコントロールを配置する場合は、実行時に<xref:System.Web.UI.WebControls.WebParts.IWebPart>プロパティを使用できます。また、ページのマークアップ (ページの永続化形式) で、サーバーコントロールのこれらのプロパティの値を宣言することもできます。 ただし、これらのプロパティは実行時にサーバーコントロールでのみ使用できるため、IntelliSense などのデザイン時のコーディング機能では<xref:System.Web.UI.WebControls.WebParts.IWebPart> 、サーバーコントロールで宣言されたプロパティを認識しません。 これらのコントロールで宣言されたプロパティは、ページを読み込むときにも機能しますが、Microsoft Visual Studio はデザイン時に有効としてプロパティを認識しません。 デザイン時のユーザーエクスペリエンスを<xref:System.Web.UI.WebControls.WebParts.IWebPart>向上させるために、既存のサーバーコントロールとユーザーコントロールにプロパティを追加する場合は<xref:System.Web.UI.WebControls.WebParts.IWebPart> 、サーバーコントロールにインターフェイスを実装できます。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスを実装する主な理由として、expando (カスタム) プロパティの使用をサポートしないコントロールが考えられます。 Expando プロパティは、 <xref:System.Web.UI.IAttributeAccessor>インターフェイスを使用して、クラスにプロパティとして動的に追加できる文字列です。 このインターフェイスを実装するコントロール ( <xref:System.Web.UI.WebControls.WebControl>クラスとその子を含む) は、expando プロパティを使用できます。 そのため、すべての ASP.NET サーバーコントロール、それらから派生するカスタムコントロール、Web ユーザーコントロール<xref:System.Web.UI.WebControls.WebParts.WebPart> 、およびコントロールは、expando プロパティの使用をサポートしています。 ただし、基本<xref:System.Web.UI.Control>クラスから直接継承するカスタムコントロールでは、expando プロパティはサポートされません。 したがって、これらのコントロールを内で<xref:System.Web.UI.WebControls.WebParts.WebPartZone>宣言すると、や<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>など<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>のコントロールの共通<xref:System.Web.UI.WebControls.WebParts.IWebPart>プロパティを宣言することはできません。 これらのコントロールでこれらのプロパティを使用する場合は、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスを実装する必要があります。  
  
   
  
## Examples  
 次のコード例は、ユーザーコントロールに<xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスを実装する方法を示しています。 これは、プロパティの実装方法を最小限に示す単純な実装です。  
  
 コード例の最初の部分は、ユーザーコントロールを示しています。 ユーザーコントロールは、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスのすべてのプロパティに加えて、ユーザーインターフェイスのコントロールに関連付けられた2つの追加のパブリックプロパティを実装します。 2つのカスタムプロパティでは`Personalizable` 、属性を使用します。これにより、これらのプロパティの値をブラウザーセッション間で保存できます。 基底<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスの実装では、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスのすべてのプロパティは、このコード例には含まれていませんが、パーソナル化として実装されることに注意してください。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]  
  
 コード例の2番目の部分は、ユーザーコントロールをホストする Web ページを示しています。 このページには<xref:System.Web.UI.WebControls.WebParts.WebPartZone> 、ユーザーコントロールが参照されているコントロールがあります。 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスのプロパティ値のいくつかは、ユーザーコントロールのマークアップで宣言によって設定されることに注意してください。これに<xref:System.Web.UI.WebControls.WebParts.WebPart>より、デザイン時および実行時にコントロールと同様に動作し、表示されるようになります。 ブラウザーにページを読み込む場合は、ページの UI を使用して、実装<xref:System.Web.UI.WebControls.WebParts.IWebPart>されているプロパティの値を実行時にプログラムで変更する機能を示すことができます。 プロパティ値の一部を変更しても、ページの変更は反映されませんが、ページソース ( <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>プロパティ) に表示されるか、アプリケーションの状態データ<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> (プロパティ) に格納されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>基本<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> クラスは既にインターフェイスを実装しているため、インターフェイスをカスタムコントロールまたはサーバーコントロールに実装する必要は通常ありません。 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> カスタム<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />コントロールや、ゾーンに<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />配置されているその他のサーバーコントロールは<see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> 、すべてのプロパティを使用できます。  
  
<see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" />インターフェイスを独自に実装する主な理由は、カスタム<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />コントロールでも別のサーバーコントロールでも、既定の実装を変更する場合です。 たとえば、一部のプロパティに既定値を指定することができます。 ユーザーまたはサーバーコントロールにインターフェイスを実装するもう1つの理由は、コントロールでこれらのプロパティを操作するためのデザイン時のエクスペリエンスが強化されるようにするためです。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのカタログで <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを表すイメージの URL を取得または設定します。</summary>
        <value>カタログ内でコントロールを表すために使用されるイメージへの URL を表す文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web パーツアプリケーションは、多くの場合、ユーザーがページに追加できるコントロールのカタログ (または一覧) を提供します。 コントロール<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>のプロパティには、コントロールがカタログに表示されるときにそのコントロールを表すイメージの URL が格納されます。  
  
   
  
## Examples  
 次のコード例は、宣言型の<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>プロパティとプログラムによるプロパティの使用方法を示しています。 この例の完全なソースコードについては、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>クラスの概要の「例」セクションを参照してください。  
  
 コード例の最初の部分では、ユーザーコントロールがプロパティを<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>実装する方法を示します。  
  
 [!code-csharp[WebParts_IWebPart_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts_IWebPart_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]  
  
 コード例の2番目の部分では、ユーザーがページのオプションボタンから適切なプロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>名を選択し、テキストボックスに新しい値を設定したときに、プログラムによってプロパティの値を設定するユーザーコントロールのメソッドを示します。次に、**[更新]** ボタンをクリックします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 コード例の3番目の部分では、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスを実装するユーザーコントロールが<xref:System.Web.UI.WebControls.WebParts.WebPartZone> <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>コントロールで参照される方法、およびコントロールでプロパティが宣言によって設定される方法を示します。 この例で提供されている Web パーツコントロールのカタログがないため、このプロパティを設定した場合の実際の効果を確認できないことに注意してください。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールのツールヒントやカタログで使用する、コントロールの動作をまとめた短い語句を取得または設定します。</summary>
        <value>コントロールの機能を簡潔にまとめた文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ値は、通常、コントロールの<xref:System.Web.UI.WebControls.WebParts.WebPart>リストと、コントロールのタイトルバーのツールヒントとして、カタログ内のコントロールについて説明する文字列として使用されます。 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> ユーザーがコントロールのタイトルバーのタイトルテキストの上にマウスポインターを置くと、プロパティの内容がツールヒントに表示されます。  
  
   
  
## Examples  
 次のコード例は、宣言型の<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>プロパティとプログラムによるプロパティの使用方法を示しています。 この例の完全なソースコードについては、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>クラスの概要の「例」セクションを参照してください。  
  
 コード例の最初の部分では、ユーザーコントロールがプロパティを<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>実装する方法を示します。  
  
 [!code-csharp[WebParts_IWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts_IWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]  
  
 コード例の2番目の部分では、ユーザーがページのオプションボタンから適切なプロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>名を選択し、テキストボックスに新しい値を設定したときに、プログラムによってプロパティの値を設定するユーザーコントロールのメソッドを示します。次に、**[更新]** ボタンをクリックします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 コード例の3番目の部分では、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスを実装するユーザーコントロールが<xref:System.Web.UI.WebControls.WebParts.WebPartZone> <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>コントロールで参照される方法、およびコントロールでプロパティが宣言によって設定される方法を示します。 このプロパティの値を確認するには、ブラウザーでページを読み込んだ後に、コントロールのタイトルバーのタイトルテキストの上にマウスポインターを置きます。 また、Web ページを読み込み、提供されたユーザーインターフェイス (UI) を使用してプロパティ値を変更することにより、実行時にプログラムによってプロパティ値を変更することもできます。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> プロパティ値と連結されて <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの完全なタイトルを形成する文字列を取得します。</summary>
        <value>コントロールのサブタイトルとして機能する文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>は、タイトルバー内のコントロールのタイトルに追加<xref:System.Web.UI.WebControls.WebParts.WebPart>されるコントロールの既定のサブタイトル文字列を返すために使用されます。  
  
 インターフェイスを<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> <xref:System.Web.UI.WebControls.WebParts.IWebPart>実装するコントロールのプロパティに既定値を指定すると、Web パーツコントロールセットによって、実行時にコントロールのプロパティの値に自動的に追加されます。  
  
   
  
## Examples  
 次のコード例は、宣言型の<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>プロパティとプログラムによるプロパティの使用方法を示しています。 この例の完全なソースコードについては、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>クラスの概要の「例」セクションを参照してください。  
  
 コード例の最初の部分では、ユーザーコントロールがプロパティを<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>実装する方法を示します。 プロパティは読み取り専用であり、コントロールのメインタイトルに追加される既定のサブタイトルを指定するために使用されることに注意してください。  
  
 [!code-csharp[WebParts_IWebPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts_IWebPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]  
  
 コード例の2番目の部分は、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスを実装するユーザーコントロールが<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールでどのように参照されているか<xref:System.Web.UI.WebControls.WebParts.IWebPart> 、およびの書き込み可能なプロパティがコントロールで宣言によってどのように設定されるかを示しています。 ブラウザーにページを読み込むと、ユーザーコントロールの実装コードで設定され<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>たプロパティの既定値がコントロールのタイトルバーのタイトルに追加されることに注意してください。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールのタイトルを取得または設定します。</summary>
        <value>コントロールのタイトルを含む文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールのタイトルバーに表示されるタイトルテキストは、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>プロパティによって設定されます。  
  
 コントロールのタイトルを指定しない場合は、Web パーツコントロールセットによって、タイトルとして使用する既定の文字列が自動的に計算されます。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>」を参照してください。 また、タイトル文字列に追加される既定のサブタイトルを指定することもできます。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>」を参照してください。  
  
   
  
## Examples  
 次のコード例は、宣言型の<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>プロパティとプログラムによるプロパティの使用方法を示しています。 この例の完全なソースコードについては、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>クラスの概要の「例」セクションを参照してください。  
  
 コード例の最初の部分では、ユーザーコントロールがプロパティを<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>実装する方法を示します。  
  
 [!code-csharp[WebParts_IWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts_IWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]  
  
 コード例の2番目の部分では、ユーザーがページのオプションボタンから適切なプロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>名を選択し、テキストボックスに新しい値を設定したときに、プログラムによってプロパティの値を設定するユーザーコントロールのメソッドを示します。次に、**[更新]** ボタンをクリックします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 コード例の3番目の部分では、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスを実装するユーザーコントロールが<xref:System.Web.UI.WebControls.WebParts.WebPartZone> <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>コントロールで参照される方法、およびコントロールでプロパティが宣言によって設定される方法を示します。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web パーツ コントロールのタイトル バーでそのコントロールを表すために使用されるイメージへの URL を取得または設定します。</summary>
        <value>イメージの URL を表す文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>は、アイコンを<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールに関連付ける方法を提供します。 このアイコンは、コントロール自体のタイトルバーに表示されます。 テーマの一貫性を確保するために、アプリケーション開発者は、Web パーツコントロール ( <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>プロパティで参照されるイメージ) のカタログ内のコントロールを表すイメージと同様のアイコンを作成することができます。  
  
 Web パーツコントロールセットに実装されているため、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>プロパティをエンドユーザーがカスタマイズして、コントロールのタイトルバーに表示されるイメージやアイコンを変更することができます。  
  
   
  
## Examples  
 次のコード例は、宣言型の<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>プロパティとプログラムによるプロパティの使用方法を示しています。 この例の完全なソースコードについては、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>クラスの概要の「例」セクションを参照してください。  
  
 コード例の最初の部分では、ユーザーコントロールがプロパティを<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>実装する方法を示します。  
  
 [!code-csharp[WebParts_IWebPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts_IWebPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]  
  
 コード例の2番目の部分では、ユーザーがページのオプションボタンから適切なプロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>名を選択し、テキストボックスに新しい値を設定したときに、プログラムによってプロパティの値を設定するユーザーコントロールのメソッドを示します。次に、**[更新]** ボタンをクリックします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 コード例の3番目の部分では、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスを実装するユーザーコントロールが<xref:System.Web.UI.WebControls.WebParts.WebPartZone> <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>コントロールで参照される方法、およびコントロールでプロパティが宣言によって設定される方法を示します。 実際の画像の URL を指定しない場合は、アイコンのプレースホルダーがタイトルバーに表示されます。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールに関する補足情報の URL を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールに関する補足情報の URL を表す文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>プロパティに URL を割り当てると、コントロールのタイトルがリンクになります。 このプロパティの目的は、エンドユーザーがコントロールに関する追加情報にアクセスするための便利な手段を提供することです。 追加情報は、著作権データ、連絡先データ、コントロールの作成者の詳細、またはコントロールの目的の概要を提供します。  
  
> [!NOTE]
>  通常、ヘルプコンテンツにリンクする<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>ためにプロパティを使用することはありません。 コントロールのヘルプへのリンクを提供する最善の方法は、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>プロパティを使用することです。  
  
   
  
## Examples  
 次のコード例は、宣言型の<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>プロパティとプログラムによるプロパティの使用方法を示しています。 この例の完全なソースコードについては、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>クラスの概要の「例」セクションを参照してください。  
  
 コード例の最初の部分では、ユーザーコントロールがプロパティを<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>実装する方法を示します。  
  
 [!code-csharp[WebParts_IWebPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts_IWebPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]  
  
 コード例の2番目の部分では、ユーザーがページのオプションボタンから適切なプロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>名を選択し、テキストボックスに新しい値を設定したときに、プログラムによってプロパティの値を設定するユーザーコントロールのメソッドを示します。次に、**[更新]** ボタンをクリックします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 コード例の3番目の部分では、 <xref:System.Web.UI.WebControls.WebParts.IWebPart>インターフェイスを実装するユーザーコントロールが<xref:System.Web.UI.WebControls.WebParts.WebPartZone> <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>コントロールで参照される方法、およびコントロールでプロパティが宣言によって設定される方法を示します。 実際のページの URL を指定せず、ユーザーがタイトルバーのリンクをクリックすると、エラーメッセージが表示されることに注意してください。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>
