<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9762519573962218a7aa1fc2c8df4ccce38aea70" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395369" /></Metadata><TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <TypeSignature Language="F#" Value="type IPersonalizable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>パーソナル化状態の適用や抽出を行うための追加管理機能を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールは、コントロールの`Personalizable`プロパティの属性を使用するだけでなく、 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>アプリケーションを追加したり、パーソナル化状態を抽出したりするための追加の管理機能を実装することもできます。 たとえば、プライベート状態情報を管理する必要があるコントロールは、このインターフェイスを実装する必要があります。 カスタムキャッシュソリューション、メインフレームへのデータ永続化、XML Web サービスなど、複雑なメカニズムによってカスタマイズされたデータにアクセスするコントロールは、このインターフェイスも実装する必要があります。  
  
> [!IMPORTANT]
>  App_Code ディレクトリに定義されているクラスに基づいて型を追加して、既定のバイナリシリアル化機構に依存させることはできません。 App_Code ベースの成果物は、ランダムな時点でアセンブリ名が変更される可能性があるため、一貫してバイナリシリアル化できません。  
  
   
  
## Examples  
 次のコード例は、インターフェイスの<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>使用方法を示しています。 この例は、という名前`UrlListWebPart`の Web パーツコントロールを参照する .aspx ページで構成されています。 次のコードは、この例の .aspx ファイルです。  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 次のコードは、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールのソースです。 このファイルは、App_Code ディレクトリに配置する必要があります。  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ブラウザーにページを読み込みます。 Url を表す名前を入力し、で`http://`始まる実際の url を追加して、**[追加]** ボタンをクリックして url を追加します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが管理するカスタム データが変更されていないかどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> インターフェイスで管理されるカスタム データが変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールによって管理されるデータが変更された場合、コントロールは "ダーティ" と見なされます。 コントロールは、 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>インターフェイス`true`を介して管理するカスタムデータが変更された場合にを返す必要があります。 コントロールがこのプロパティ`true`から戻る場合、コントロールのインターフェイス<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>メソッドの実装は、プロパティ値の抽出中に呼び出されます。  
  
> [!NOTE]
>  このプロパティは、POST 要求の処理の後のフェーズで、パーソナル化インフラストラクチャによって自動的にチェックされます。 ただし、GET 要求では、 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティから返される値はチェックされません。 他のイベントによっては、管理者<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>が管理するデータだけでなく、コントロールの状態が "ダーティ" であると見なされ、保存されます。 Get 要求中にコントロールが自身を "ダーティ" としてマークできる場合、または特定の境界条件下のパーソナル化インフラストラクチャで get 要求中にコントロールが "ダーティ<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> " と見なされる場合、は常に呼び出されます。  
  
 コントロールは、関連付けら<xref:System.Web.UI.WebControls.WebParts.WebPartManager>れているコントロール<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A>を参照し、プロパティをチェックして現在のスコープを判断できます。 コントロールのカスタムデータの "ダーティ" 状態は、現在のスコープに適している必要があります。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティの使用方法を示しています。 この例の最初の部分は、コントロールを<xref:System.Web.UI.WebControls.WebParts.WebPart>ホストする Web ページです。  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 この例の2番目の部分は、という<xref:System.Web.UI.WebControls.WebParts.WebPart> `UrlListWebPart`カスタムコントロールのコードです。 この例を実行するには、このファイルを App_Code ディレクトリに配置する必要があります。 ソースコードではプロパティが<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>実装されていることに注意してください。  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ブラウザーにページを読み込みます。 Url を表す名前を入力し、で`http://`始まる実際の url を追加して、**[追加]** ボタンをクリックして url を追加します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Load state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">基になるデータ ストアから読み込まれた、スコープが指定されているカスタム データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</param>
        <summary>カスタム データをコントロールに読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、カスタムデータを自身に読み込むことを許可するために、コントロールで呼び出されます。 また、ページ上の他のパーソナル化データが変更されたかどうかに関係なく、コントロールのカスタム状態を基になるデータストアに書き戻す必要があるかどうかを示す値を返すこともできます。 コントロールは、独自のカスタムプロパティを設定し、パーソナル化ディクショナリに含まれる値に基づいて追加の内部ロジックを実行できます。 このメソッドは、コントロールにパーソナル化データを適用しているときに、Web パーツコントロールセットによって呼び出されます。  
  
 また、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>オブジェクトに格納されている<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>スコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>のプロパティとスコープを持つプロパティのマージ動作にも注意する必要があります。 パラメーター `state`には、基になるデータストアから読み込まれたカスタムデータのマージされた表現が含まれています。 スコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>では、ページ自体がスコープ内<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>にあったときに以前に追加されたすべての値を使用できます。 スコープでは、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>パーソナル化スコープに関連付けられている値に、ページが<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>スコープ内にあるときに1つの値が<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>追加され、ページがスコープ内にあるときに別の値が設定されている場合、パーソナル化インフラストラクチャは次のようになります。 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>( <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>スコープ値<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>ではなく) スコープ値のみをパラメーター内に含めます。`state`  
  
   
  
## Examples  
 次のコード例は、カスタム<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールでのメソッドの実装を示しています。 この例を実行するために必要な完全なコードについては<xref:System.Web.UI.WebControls.WebParts.IPersonalizable> 、クラスの概要の「例」セクションを参照してください。  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Save state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">基になるデータ ストアから読み込まれた、スコープが指定されているカスタム データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</param>
        <summary>コントロールの <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> オブジェクトのカスタム プロパティと内部状態情報を保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サーバーコントロールは、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> `state`パラメーターに指定されている独自のカスタムプロパティと内部状態情報を格納できます。 この情報は、一連の名前と値のペアとして格納されます。 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>メソッドを通じてコントロールに対して行われた後続の呼び出し中に認識できる名前と値のペアを使用するのは、コントロールの役割です。  
  
 コントロールは、関連付けら<xref:System.Web.UI.WebControls.WebParts.WebPartManager>れているコントロール<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>を参照し、オブジェクトをチェックして現在のスコープを判断できます。 カスタム状態情報は、現在のスコープに適している必要があります。 オブジェクトに追加<xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>される各値は、適切なスコープ値に関連付けられている必要があることに注意して<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>ください<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>。これは、パーソナル化インフラストラクチャが、カスタムデータをマージするときにこれに依存するためです。 <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary><xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>メソッドに渡す前。  
  
 Web パーツの標準の ASP.NET 実装を使用する場合、コントロールは、状態ディクショナリに配置されたオブジェクトが ASP.NET <xref:System.Web.UI.ObjectStateFormatter>クラスによってシリアル化できることを保証する必要があります。 実際には、次のことを意味します。  
  
-   プリミティブ .NET Framework 型、文字列、コレクション指向の .NET Framework 型 (配列、配列リスト、ハッシュテーブル、ハイブリッドディクショナリなど) は自動的にシリアル化可能です。  
  
-   文字列との間でシリアル<xref:System.ComponentModel.TypeConverter>化または逆シリアル化できる独自のクラスを提供するカスタム型は、シリアル化可能と見なされます。  
  
-   クラスによってシリアル化できるカスタム<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>型は、シリアル化可能と見なされます。  
  
> [!IMPORTANT]
>  App_Code ディレクトリに定義されているクラスに基づいて型を追加して、既定のバイナリシリアル化機構に依存させることはできません。 App_Code ベースの成果物は、ランダムな時点でアセンブリ名が変更される可能性があるため、一貫してバイナリシリアル化できません。  
  
   
  
## Examples  
 次のコード例は、カスタム<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールにメソッドを実装する方法を示しています。 この例を実行するために必要な完全なコードについては<xref:System.Web.UI.WebControls.WebParts.IPersonalizable> 、クラスの概要の「例」セクションを参照してください。  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
