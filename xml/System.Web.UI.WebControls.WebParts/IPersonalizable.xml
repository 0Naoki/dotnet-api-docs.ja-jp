<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9762519573962218a7aa1fc2c8df4ccce38aea70" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395369" /></Metadata><TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <TypeSignature Language="F#" Value="type IPersonalizable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9f13b-101">パーソナル化状態の適用や抽出を行うための追加管理機能を定義します。</span><span class="sxs-lookup"><span data-stu-id="9f13b-101">Defines additional management capabilities for the application and extraction of personalization state.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f13b-102">コントロールは、コントロールの`Personalizable`プロパティの属性を使用するだけでなく、 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>アプリケーションを追加したり、パーソナル化状態を抽出したりするための追加の管理機能を実装することもできます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-102">In addition to using the `Personalizable` attribute on control properties, a control can also implement <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> for additional management capabilities for the application and extraction of personalization state.</span></span> <span data-ttu-id="9f13b-103">たとえば、プライベート状態情報を管理する必要があるコントロールは、このインターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f13b-103">For example, controls that need to manage private state information should implement this interface.</span></span> <span data-ttu-id="9f13b-104">カスタムキャッシュソリューション、メインフレームへのデータ永続化、XML Web サービスなど、複雑なメカニズムによってカスタマイズされたデータにアクセスするコントロールは、このインターフェイスも実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f13b-104">Controls that access personalized data through complex mechanisms, such as custom cache solutions, data persistence to mainframes, or XML Web services, should also implement this interface.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f13b-105">App_Code ディレクトリに定義されているクラスに基づいて型を追加して、既定のバイナリシリアル化機構に依存させることはできません。</span><span class="sxs-lookup"><span data-stu-id="9f13b-105">You should not add types based on classes defined in the App_Code directory and then depend on the default binary serialization mechanism.</span></span> <span data-ttu-id="9f13b-106">App_Code ベースの成果物は、ランダムな時点でアセンブリ名が変更される可能性があるため、一貫してバイナリシリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="9f13b-106">App_Code-based artifacts are not consistently binary-serializable due to the fact that they can have their assembly names changed at random points in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f13b-107">次のコード例は、インターフェイスの<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="9f13b-107">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interface.</span></span> <span data-ttu-id="9f13b-108">この例は、という名前`UrlListWebPart`の Web パーツコントロールを参照する .aspx ページで構成されています。</span><span class="sxs-lookup"><span data-stu-id="9f13b-108">The example consists of an .aspx page that references a Web Part control named `UrlListWebPart`.</span></span> <span data-ttu-id="9f13b-109">次のコードは、この例の .aspx ファイルです。</span><span class="sxs-lookup"><span data-stu-id="9f13b-109">The following code is the .aspx file for the example.</span></span>  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 <span data-ttu-id="9f13b-110">次のコードは、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールのソースです。</span><span class="sxs-lookup"><span data-stu-id="9f13b-110">The following code is the source for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span> <span data-ttu-id="9f13b-111">このファイルは、App_Code ディレクトリに配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f13b-111">This file should be placed in the App_Code directory.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 <span data-ttu-id="9f13b-112">ブラウザーにページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-112">Load the page in a browser.</span></span> <span data-ttu-id="9f13b-113">Url を表す名前を入力し、で`http://`始まる実際の url を追加して、**[追加]** ボタンをクリックして url を追加します。</span><span class="sxs-lookup"><span data-stu-id="9f13b-113">Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f13b-114">コントロールが管理するカスタム データが変更されていないかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="9f13b-114">Gets a value that indicates whether the custom data that a control manages has changed.</span></span></summary>
        <value><span data-ttu-id="9f13b-115"><see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> インターフェイスで管理されるカスタム データが変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="9f13b-115"><see langword="true" /> if the custom data managed with the <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> interface has changed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f13b-116">コントロールによって管理されるデータが変更された場合、コントロールは "ダーティ" と見なされます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-116">When data managed by a control has changed, the control is considered "dirty."</span></span> <span data-ttu-id="9f13b-117">コントロールは、 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>インターフェイス`true`を介して管理するカスタムデータが変更された場合にを返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f13b-117">A control should return `true` if the custom data that it manages through the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interface has changed.</span></span> <span data-ttu-id="9f13b-118">コントロールがこのプロパティ`true`から戻る場合、コントロールのインターフェイス<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>メソッドの実装は、プロパティ値の抽出中に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-118">If a control returns `true` from this property, the control's <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> interface method implementation is called during property value extraction.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9f13b-119">このプロパティは、POST 要求の処理の後のフェーズで、パーソナル化インフラストラクチャによって自動的にチェックされます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-119">This property is checked automatically by the personalization infrastructure during the latter phases of processing a POST request.</span></span> <span data-ttu-id="9f13b-120">ただし、GET 要求では、 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティから返される値はチェックされません。</span><span class="sxs-lookup"><span data-stu-id="9f13b-120">However, for GET requests, the value returned from the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> property is not checked.</span></span> <span data-ttu-id="9f13b-121">他のイベントによっては、管理者<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>が管理するデータだけでなく、コントロールの状態が "ダーティ" であると見なされ、保存されます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-121">Some other event has to have caused the control to be considered "dirty" for any control state--not just data managed by <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>--to be saved.</span></span> <span data-ttu-id="9f13b-122">Get 要求中にコントロールが自身を "ダーティ" としてマークできる場合、または特定の境界条件下のパーソナル化インフラストラクチャで get 要求中にコントロールが "ダーティ<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> " と見なされる場合、は常に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-122">If a control can mark itself as "dirty" during a GET request, or if the personalization infrastructure under some very specific boundary conditions considers a control "dirty" during a GET request, then <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> will always be called.</span></span>  
  
 <span data-ttu-id="9f13b-123">コントロールは、関連付けら<xref:System.Web.UI.WebControls.WebParts.WebPartManager>れているコントロール<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A>を参照し、プロパティをチェックして現在のスコープを判断できます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-123">A control can reference its associated <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control and check the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property to determine the current scope.</span></span> <span data-ttu-id="9f13b-124">コントロールのカスタムデータの "ダーティ" 状態は、現在のスコープに適している必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f13b-124">The "dirty" state of a control's custom data should be appropriate for the current scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f13b-125">次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="9f13b-125">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> property.</span></span> <span data-ttu-id="9f13b-126">この例の最初の部分は、コントロールを<xref:System.Web.UI.WebControls.WebParts.WebPart>ホストする Web ページです。</span><span class="sxs-lookup"><span data-stu-id="9f13b-126">The first part of the example is the Web page that hosts a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span>  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 <span data-ttu-id="9f13b-127">この例の2番目の部分は、という<xref:System.Web.UI.WebControls.WebParts.WebPart> `UrlListWebPart`カスタムコントロールのコードです。</span><span class="sxs-lookup"><span data-stu-id="9f13b-127">The second part of the example is the code for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control called `UrlListWebPart`.</span></span> <span data-ttu-id="9f13b-128">この例を実行するには、このファイルを App_Code ディレクトリに配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f13b-128">This file should be placed in the App_Code directory to run the example.</span></span> <span data-ttu-id="9f13b-129">ソースコードではプロパティが<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>実装されていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="9f13b-129">Note that the source code implements the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> property.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 <span data-ttu-id="9f13b-130">ブラウザーにページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-130">Load the page in a browser.</span></span> <span data-ttu-id="9f13b-131">Url を表す名前を入力し、で`http://`始まる実際の url を追加して、**[追加]** ボタンをクリックして url を追加します。</span><span class="sxs-lookup"><span data-stu-id="9f13b-131">Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Load state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="9f13b-132">基になるデータ ストアから読み込まれた、スコープが指定されているカスタム データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="9f13b-132">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains custom scoped data that was loaded from the underlying data store.</span></span></param>
        <summary><span data-ttu-id="9f13b-133">カスタム データをコントロールに読み込みます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-133">Loads custom data into a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f13b-134">このメソッドは、カスタムデータを自身に読み込むことを許可するために、コントロールで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-134">This method is called on a control to allow it to load custom data into itself.</span></span> <span data-ttu-id="9f13b-135">また、ページ上の他のパーソナル化データが変更されたかどうかに関係なく、コントロールのカスタム状態を基になるデータストアに書き戻す必要があるかどうかを示す値を返すこともできます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-135">It can also return a value that indicates whether a control's custom state must be written back to the underlying data store, regardless of whether any other personalization data on the page has changed.</span></span> <span data-ttu-id="9f13b-136">コントロールは、独自のカスタムプロパティを設定し、パーソナル化ディクショナリに含まれる値に基づいて追加の内部ロジックを実行できます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-136">A control can set its own custom properties and carry out additional internal logic based on the values contained in the personalization dictionary.</span></span> <span data-ttu-id="9f13b-137">このメソッドは、コントロールにパーソナル化データを適用しているときに、Web パーツコントロールセットによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-137">This method is called by the Web Parts control set while applying personalization data to a control.</span></span>  
  
 <span data-ttu-id="9f13b-138">また、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>オブジェクトに格納されている<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>スコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>のプロパティとスコープを持つプロパティのマージ動作にも注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f13b-138">You should also be aware of the merge behavior of <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-scoped versus <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>-scoped properties contained in the <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> object.</span></span> <span data-ttu-id="9f13b-139">パラメーター `state`には、基になるデータストアから読み込まれたカスタムデータのマージされた表現が含まれています。</span><span class="sxs-lookup"><span data-stu-id="9f13b-139">The `state` parameter contains a merged representation of custom data that was loaded from the underlying data store.</span></span> <span data-ttu-id="9f13b-140">スコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>では、ページ自体がスコープ内<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>にあったときに以前に追加されたすべての値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-140">In <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope, all the values that were previously added when the page itself was in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope would be available.</span></span> <span data-ttu-id="9f13b-141">スコープでは、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>パーソナル化スコープに関連付けられている値に、ページが<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>スコープ内にあるときに1つの値が<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>追加され、ページがスコープ内にあるときに別の値が設定されている場合、パーソナル化インフラストラクチャは次のようになります。 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>( <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>スコープ値<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>ではなく) スコープ値のみをパラメーター内に含めます。`state`</span><span class="sxs-lookup"><span data-stu-id="9f13b-141">In <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> scope, if a value associated with <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> personalization scope had one value added when the page was in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope, and a different value when the page was in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> scope, then the personalization infrastructure would only include the <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-scoped value (as opposed to the <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope value) within the `state` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f13b-142">次のコード例は、カスタム<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールでのメソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="9f13b-142">The following code example demonstrates an implementation of the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span> <span data-ttu-id="9f13b-143">この例を実行するために必要な完全なコードについては<xref:System.Web.UI.WebControls.WebParts.IPersonalizable> 、クラスの概要の「例」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f13b-143">For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Save state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="9f13b-144">基になるデータ ストアから読み込まれた、スコープが指定されているカスタム データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="9f13b-144">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains custom scoped data that was loaded from the underlying data store.</span></span></param>
        <summary><span data-ttu-id="9f13b-145">コントロールの <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> オブジェクトのカスタム プロパティと内部状態情報を保存します。</span><span class="sxs-lookup"><span data-stu-id="9f13b-145">Saves custom properties and internal state information in the control's <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f13b-146">サーバーコントロールは、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> `state`パラメーターに指定されている独自のカスタムプロパティと内部状態情報を格納できます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-146">A server control can store its own custom properties and internal state information the <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> specified in the `state` parameter.</span></span> <span data-ttu-id="9f13b-147">この情報は、一連の名前と値のペアとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-147">The information is stored as a series of name/value pairs.</span></span> <span data-ttu-id="9f13b-148"><xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>メソッドを通じてコントロールに対して行われた後続の呼び出し中に認識できる名前と値のペアを使用するのは、コントロールの役割です。</span><span class="sxs-lookup"><span data-stu-id="9f13b-148">It is the responsibility of the control to use name/value pairs that it can recognize during subsequent calls made to the control through the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> method.</span></span>  
  
 <span data-ttu-id="9f13b-149">コントロールは、関連付けら<xref:System.Web.UI.WebControls.WebParts.WebPartManager>れているコントロール<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>を参照し、オブジェクトをチェックして現在のスコープを判断できます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-149">A control can reference its associated <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control and check the <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> object to determine the current scope.</span></span> <span data-ttu-id="9f13b-150">カスタム状態情報は、現在のスコープに適している必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f13b-150">Custom state information should be appropriate for the current scope.</span></span> <span data-ttu-id="9f13b-151">オブジェクトに追加<xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>される各値は、適切なスコープ値に関連付けられている必要があることに注意して<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>ください<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>。これは、パーソナル化インフラストラクチャが、カスタムデータをマージするときにこれに依存するためです。 <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary><xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>メソッドに渡す前。</span><span class="sxs-lookup"><span data-stu-id="9f13b-151">Note that each <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry> value that is added to the <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> object should be associated with the appropriate scope value, because the personalization infrastructure depends on this when merging <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> and <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-scoped custom data prior to passing it to the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> method.</span></span>  
  
 <span data-ttu-id="9f13b-152">Web パーツの標準の ASP.NET 実装を使用する場合、コントロールは、状態ディクショナリに配置されたオブジェクトが ASP.NET <xref:System.Web.UI.ObjectStateFormatter>クラスによってシリアル化できることを保証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9f13b-152">When using the standard ASP.NET implementation of Web Parts, controls must ensure that objects placed in the state dictionary can be serialized by the ASP.NET <xref:System.Web.UI.ObjectStateFormatter> class.</span></span> <span data-ttu-id="9f13b-153">実際には、次のことを意味します。</span><span class="sxs-lookup"><span data-stu-id="9f13b-153">In practice, this means the following:</span></span>  
  
-   <span data-ttu-id="9f13b-154">プリミティブ .NET Framework 型、文字列、コレクション指向の .NET Framework 型 (配列、配列リスト、ハッシュテーブル、ハイブリッドディクショナリなど) は自動的にシリアル化可能です。</span><span class="sxs-lookup"><span data-stu-id="9f13b-154">Primitive .NET Framework types, strings, and collection-oriented .NET Framework types such as arrays, array lists, hash tables, and hybrid dictionaries, are automatically serializable.</span></span>  
  
-   <span data-ttu-id="9f13b-155">文字列との間でシリアル<xref:System.ComponentModel.TypeConverter>化または逆シリアル化できる独自のクラスを提供するカスタム型は、シリアル化可能と見なされます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-155">Custom types that supply their own <xref:System.ComponentModel.TypeConverter> classes capable of serializing to and deserializing from strings are considered serializable.</span></span>  
  
-   <span data-ttu-id="9f13b-156">クラスによってシリアル化できるカスタム<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>型は、シリアル化可能と見なされます。</span><span class="sxs-lookup"><span data-stu-id="9f13b-156">Custom types that can be serialized by the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class are considered serializable.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9f13b-157">App_Code ディレクトリに定義されているクラスに基づいて型を追加して、既定のバイナリシリアル化機構に依存させることはできません。</span><span class="sxs-lookup"><span data-stu-id="9f13b-157">You should not add types based on classes defined in the App_Code directory and then depend on the default binary serialization mechanism.</span></span> <span data-ttu-id="9f13b-158">App_Code ベースの成果物は、ランダムな時点でアセンブリ名が変更される可能性があるため、一貫してバイナリシリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="9f13b-158">App_Code-based artifacts are not consistently binary-serializable due to the fact that they can have their assembly names changed at random points in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9f13b-159">次のコード例は、カスタム<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールにメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="9f13b-159">The following code example demonstrates implementing the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span> <span data-ttu-id="9f13b-160">この例を実行するために必要な完全なコードについては<xref:System.Web.UI.WebControls.WebParts.IPersonalizable> 、クラスの概要の「例」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="9f13b-160">For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
