<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1f89e-101">パーソナル化状態の適用や抽出を行うための追加管理機能を定義します。</span><span class="sxs-lookup"><span data-stu-id="1f89e-101">Defines additional management capabilities for the application and extraction of personalization state.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f89e-102">使用するだけでなく、`Personalizable`属性コントロールのプロパティ、コントロールを実装できますも<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>のパーソナル化状態の抽出とアプリケーションの追加の管理機能。</span><span class="sxs-lookup"><span data-stu-id="1f89e-102">In addition to using the `Personalizable` attribute on control properties, a control can also implement <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> for additional management capabilities for the application and extraction of personalization state.</span></span> <span data-ttu-id="1f89e-103">たとえば、プライベートな状態情報を管理する必要があるコントロールでは、このインターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f89e-103">For example, controls that need to manage private state information should implement this interface.</span></span> <span data-ttu-id="1f89e-104">カスタム キャッシュ ソリューション、メインフレーム、または XML Web サービス、データの永続性などの複雑なメカニズムを個人用に設定されたデータにアクセスするためのコントロールは、このインターフェイスを実装もする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f89e-104">Controls that access personalized data through complex mechanisms, such as custom cache solutions, data persistence to mainframes, or XML Web services, should also implement this interface.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f89e-105">既定のバイナリのシリアル化機構に依存しと App_Code ディレクトリに定義されているクラスに基づいて型が追加する必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="1f89e-105">You should not add types based on classes defined in the App_Code directory and then depend on the default binary serialization mechanism.</span></span> <span data-ttu-id="1f89e-106">App_Code ベースのアイテムは一貫してバイナリ シリアル化するという事実よります、アセンブリ名にランダムなポイントで変更されたことがあるできます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-106">App_Code-based artifacts are not consistently binary-serializable due to the fact that they can have their assembly names changed at random points in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f89e-107">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="1f89e-107">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interface.</span></span> <span data-ttu-id="1f89e-108">例では、という名前の Web パーツ コントロールを参照する .aspx ページから成る`UrlListWebPart`です。</span><span class="sxs-lookup"><span data-stu-id="1f89e-108">The example consists of an .aspx page that references a Web Part control named `UrlListWebPart`.</span></span> <span data-ttu-id="1f89e-109">次のコードは、たとえば、.aspx ファイルです。</span><span class="sxs-lookup"><span data-stu-id="1f89e-109">The following code is the .aspx file for the example.</span></span>  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 <span data-ttu-id="1f89e-110">次のコードは、カスタムの基になる<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="1f89e-110">The following code is the source for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span> <span data-ttu-id="1f89e-111">このファイルは、App_Code ディレクトリに配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f89e-111">This file should be placed in the App_Code directory.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 <span data-ttu-id="1f89e-112">ブラウザーでページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-112">Load the page in a browser.</span></span> <span data-ttu-id="1f89e-113">URL を表すで始まるされて、実際の URL を追加し、名前を入力`http://`、 をクリックし、**追加**URL を追加するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="1f89e-113">Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f89e-114">コントロールが管理するカスタム データが変更されていないかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1f89e-114">Gets a value that indicates whether the custom data that a control manages has changed.</span></span></summary>
        <value>
          <span data-ttu-id="1f89e-115"><see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> インターフェイスで管理されるカスタム データが変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1f89e-115"><see langword="true" /> if the custom data managed with the <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> interface has changed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f89e-116">コントロールによって管理されているデータが変更されたときに、コントロールと見なされます「ダーティ」です。</span><span class="sxs-lookup"><span data-stu-id="1f89e-116">When data managed by a control has changed, the control is considered "dirty."</span></span> <span data-ttu-id="1f89e-117">コントロールを返す必要があります`true`かどうか、カスタム データが管理を通じて、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>インターフェイスが変更されました。</span><span class="sxs-lookup"><span data-stu-id="1f89e-117">A control should return `true` if the custom data that it manages through the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interface has changed.</span></span> <span data-ttu-id="1f89e-118">コントロールを返す場合`true`からこのプロパティは、コントロールの<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>インターフェイス メソッドの実装は、プロパティ値の抽出中に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-118">If a control returns `true` from this property, the control's <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> interface method implementation is called during property value extraction.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f89e-119">後者のフェーズの POST 要求を処理中に、パーソナル化インフラストラクチャによって、自動的にこのプロパティがチェックされます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-119">This property is checked automatically by the personalization infrastructure during the latter phases of processing a POST request.</span></span> <span data-ttu-id="1f89e-120">ただし、GET 要求に対して返される値から、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティはチェックされません。</span><span class="sxs-lookup"><span data-stu-id="1f89e-120">However, for GET requests, the value returned from the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> property is not checked.</span></span> <span data-ttu-id="1f89e-121">原因で、コントロールの状態: によって管理されるデータだけでなく、「ダーティ」と見なされるコントロールの他のイベントが<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>--を保存します。</span><span class="sxs-lookup"><span data-stu-id="1f89e-121">Some other event has to have caused the control to be considered "dirty" for any control state--not just data managed by <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>--to be saved.</span></span> <span data-ttu-id="1f89e-122">コントロールのマークを付ける自体「ダーティ」GET 要求中に場合、またはインフラストラクチャは、パーソナル化非常に特定する境界条件下で扱いますコントロール「ダーティ」GET 要求中に、場合<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>が常に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-122">If a control can mark itself as "dirty" during a GET request, or if the personalization infrastructure under some very specific boundary conditions considers a control "dirty" during a GET request, then <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> will always be called.</span></span>  
  
 <span data-ttu-id="1f89e-123">コントロールをそれに関連する参照できます<xref:System.Web.UI.WebControls.WebParts.WebPartManager>を制御し、確認、<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A>プロパティを現在のスコープを決定します。</span><span class="sxs-lookup"><span data-stu-id="1f89e-123">A control can reference its associated <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control and check the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property to determine the current scope.</span></span> <span data-ttu-id="1f89e-124">コントロールのカスタム データの「ダーティ」の状態を現在のスコープに対して適切にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f89e-124">The "dirty" state of a control's custom data should be appropriate for the current scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f89e-125">次のコード例に示しますの使用、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="1f89e-125">The following code example demonstrates use of the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> property.</span></span> <span data-ttu-id="1f89e-126">この例の最初の部分がホストする Web ページ、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="1f89e-126">The first part of the example is the Web page that hosts a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span>  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 <span data-ttu-id="1f89e-127">例の 2 番目の部分は、カスタム コード<xref:System.Web.UI.WebControls.WebParts.WebPart>と呼ばれるコントロール`UrlListWebPart`です。</span><span class="sxs-lookup"><span data-stu-id="1f89e-127">The second part of the example is the code for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control called `UrlListWebPart`.</span></span> <span data-ttu-id="1f89e-128">このファイルは、例を実行する App_Code ディレクトリに配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f89e-128">This file should be placed in the App_Code directory to run the example.</span></span> <span data-ttu-id="1f89e-129">ソース コードを実装することに注意してください、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="1f89e-129">Note that the source code implements the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> property.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 <span data-ttu-id="1f89e-130">ブラウザーでページを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-130">Load the page in a browser.</span></span> <span data-ttu-id="1f89e-131">URL を表すで始まるされて、実際の URL を追加し、名前を入力`http://`、 をクリックし、**追加**URL を追加するボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="1f89e-131">Type in a name to represent a URL, then add an actual URL beginning with `http://`, and click the **Add** button to add the URL.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="1f89e-132">基になるデータ ストアから読み込まれた、スコープが指定されているカスタム データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="1f89e-132">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains custom scoped data that was loaded from the underlying data store.</span></span></param>
        <summary><span data-ttu-id="1f89e-133">カスタム データをコントロールに読み込みます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-133">Loads custom data into a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f89e-134">このメソッドはそれ自体にカスタム データを読み込むことができるコントロールに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-134">This method is called on a control to allow it to load custom data into itself.</span></span> <span data-ttu-id="1f89e-135">コントロールのカスタム状態をページで、他のパーソナル化データが変更されたかどうかに関係なく、基になるデータ ストアに戻る書き込む必要があるかどうかを示す値を返すこともできます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-135">It can also return a value that indicates whether a control's custom state must be written back to the underlying data store, regardless of whether any other personalization data on the page has changed.</span></span> <span data-ttu-id="1f89e-136">コントロールでは、独自のカスタム プロパティを設定でき、パーソナル化ディクショナリに含まれる値に基づく追加の内部ロジックを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-136">A control can set its own custom properties and carry out additional internal logic based on the values contained in the personalization dictionary.</span></span> <span data-ttu-id="1f89e-137">このメソッドは、Web パーツ コントロールのパーソナル化データをコントロールに適用するときに設定します。</span><span class="sxs-lookup"><span data-stu-id="1f89e-137">This method is called by the Web Parts control set while applying personalization data to a control.</span></span>  
  
 <span data-ttu-id="1f89e-138">マージの動作の対応する必要があります<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-とスコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>-に含まれるプロパティのスコープ、<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f89e-138">You should also be aware of the merge behavior of <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-scoped versus <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>-scoped properties contained in the <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> object.</span></span> <span data-ttu-id="1f89e-139">`state`パラメーターには、基になるデータ ストアから読み込まれたカスタム データのマージされた表現が含まれています。</span><span class="sxs-lookup"><span data-stu-id="1f89e-139">The `state` parameter contains a merged representation of custom data that was loaded from the underlying data store.</span></span> <span data-ttu-id="1f89e-140"><xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>ページ自体が以前に追加されたすべての値のスコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>スコープすることができます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-140">In <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope, all the values that were previously added when the page itself was in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope would be available.</span></span> <span data-ttu-id="1f89e-141"><xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>値に関連付けられている場合、スコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>パーソナル化スコープが追加されたときに 1 つの値を持っていた<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>スコープ、および別の値を使用しているページが<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>スコープ、パーソナル化インフラストラクチャがのみを含めるし、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-値のスコープ (はなく、<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>値の範囲) 内で、`state`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1f89e-141">In <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> scope, if a value associated with <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> personalization scope had one value added when the page was in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope, and a different value when the page was in <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> scope, then the personalization infrastructure would only include the <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-scoped value (as opposed to the <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> scope value) within the `state` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f89e-142">実装を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>カスタム メソッド<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="1f89e-142">The following code example demonstrates an implementation of the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span> <span data-ttu-id="1f89e-143">この例を実行するために必要な完全なコード例」セクションを参照してください、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="1f89e-143">For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="1f89e-144">基になるデータ ストアから読み込まれた、スコープが指定されているカスタム データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="1f89e-144">A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> that contains custom scoped data that was loaded from the underlying data store.</span></span></param>
        <summary><span data-ttu-id="1f89e-145">コントロールの <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> オブジェクトのカスタム プロパティと内部状態情報を保存します。</span><span class="sxs-lookup"><span data-stu-id="1f89e-145">Saves custom properties and internal state information in the control's <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f89e-146">サーバー コントロールは、独自のカスタム プロパティと内部の状態情報を格納できます、<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>で指定されている、`state`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1f89e-146">A server control can store its own custom properties and internal state information the <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> specified in the `state` parameter.</span></span> <span data-ttu-id="1f89e-147">情報は、一連の名前と値のペアとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-147">The information is stored as a series of name/value pairs.</span></span> <span data-ttu-id="1f89e-148">使用してコントロールに対する後続の呼び出し中には認識できる名前/値ペアを使用するコントロールの役割です、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f89e-148">It is the responsibility of the control to use name/value pairs that it can recognize during subsequent calls made to the control through the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> method.</span></span>  
  
 <span data-ttu-id="1f89e-149">コントロールをそれに関連する参照できます<xref:System.Web.UI.WebControls.WebParts.WebPartManager>を制御し、確認、<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>オブジェクトを現在のスコープを決定します。</span><span class="sxs-lookup"><span data-stu-id="1f89e-149">A control can reference its associated <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control and check the <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> object to determine the current scope.</span></span> <span data-ttu-id="1f89e-150">カスタム状態情報は、現在のスコープに対して適切にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f89e-150">Custom state information should be appropriate for the current scope.</span></span> <span data-ttu-id="1f89e-151"><xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>に追加される値、<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>をマージする場合に、パーソナル化インフラストラクチャがこれに依存するための適切なスコープ値に関連付けられるオブジェクト<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>と<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-に渡す前にカスタム データのスコープ、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f89e-151">Note that each <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry> value that is added to the <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> object should be associated with the appropriate scope value, because the personalization infrastructure depends on this when merging <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> and <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-scoped custom data prior to passing it to the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> method.</span></span>  
  
 <span data-ttu-id="1f89e-152">コントロールが、ASP.NET によって状態ディクショナリに配置されるオブジェクトをシリアル化できることを確認する必要があります Web パーツの標準の ASP.NET の実装を使用する場合<xref:System.Web.UI.ObjectStateFormatter>クラスです。</span><span class="sxs-lookup"><span data-stu-id="1f89e-152">When using the standard ASP.NET implementation of Web Parts, controls must ensure that objects placed in the state dictionary can be serialized by the ASP.NET <xref:System.Web.UI.ObjectStateFormatter> class.</span></span> <span data-ttu-id="1f89e-153">実際には、これは、次の意味を。</span><span class="sxs-lookup"><span data-stu-id="1f89e-153">In practice, this means the following:</span></span>  
  
-   <span data-ttu-id="1f89e-154">.NET Framework のプリミティブ型、文字列、および配列、配列のリスト、ハッシュ テーブル、および、ハイブリッド ディクショナリなどの .NET Framework 型のコレクション指向は、自動的にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="1f89e-154">Primitive .NET Framework types, strings, and collection-oriented .NET Framework types such as arrays, array lists, hash tables, and hybrid dictionaries, are automatically serializable.</span></span>  
  
-   <span data-ttu-id="1f89e-155">独自に提供するカスタム型<xref:System.ComponentModel.TypeConverter>にシリアル化して、文字列から逆シリアル化できるクラスがシリアル化可能と見なされます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-155">Custom types that supply their own <xref:System.ComponentModel.TypeConverter> classes capable of serializing to and deserializing from strings are considered serializable.</span></span>  
  
-   <span data-ttu-id="1f89e-156">シリアル化できるカスタムの型、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>クラスがシリアル化可能と見なされます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-156">Custom types that can be serialized by the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class are considered serializable.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f89e-157">既定のバイナリのシリアル化機構に依存しと App_Code ディレクトリに定義されているクラスに基づいて型が追加する必要がありますされません。</span><span class="sxs-lookup"><span data-stu-id="1f89e-157">You should not add types based on classes defined in the App_Code directory and then depend on the default binary serialization mechanism.</span></span> <span data-ttu-id="1f89e-158">App_Code ベースのアイテムは一貫してバイナリ シリアル化するという事実よります、アセンブリ名にランダムなポイントで変更されたことがあるできます。</span><span class="sxs-lookup"><span data-stu-id="1f89e-158">App_Code-based artifacts are not consistently binary-serializable due to the fact that they can have their assembly names changed at random points in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f89e-159">次のコード例では、実装することを示しています、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>カスタム メソッド<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。</span><span class="sxs-lookup"><span data-stu-id="1f89e-159">The following code example demonstrates implementing the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.</span></span> <span data-ttu-id="1f89e-160">この例を実行するために必要な完全なコード例」セクションを参照してください、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="1f89e-160">For the full code required to run this example, see the Example section in the <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> class overview.</span></span>  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>