<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f16c2b1e76c9b648c236812e7491d0fd55179e0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37595519" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <TypeSignature Language="F#" Value="type IPersonalizable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>パーソナル化状態の適用や抽出を行うための追加管理機能を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用する以外、`Personalizable`属性コントロールも実装するコントロールのプロパティで<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>のアプリケーションおよびパーソナル化状態を抽出するための追加の管理機能。 たとえば、プライベートな状態情報を管理する必要があるコントロールでは、このインターフェイスを実装する必要があります。 コントロール、カスタム キャッシュ ソリューション、メインフレーム、または XML Web サービス、データの永続化などの複雑なメカニズムを個人用に設定されたデータにアクセスするには、このインターフェイスも実装する必要があります。  
  
> [!IMPORTANT]
>  App_Code ディレクトリに定義されているクラスに基づいて型が追加されず、既定のバイナリ シリアル化機構に依存しする必要があります。 時間でランダムなポイントで変更されて、アセンブリ名を持つことにするため、App_Code ベースのアイテムは一貫してバイナリ シリアル化できません。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>インターフェイス。 例では、という名前の Web パーツ コントロールを参照する .aspx ページから成る`UrlListWebPart`します。 次のコードは、たとえば、.aspx ファイルです。  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 次のコードは、カスタム ソース<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 このファイルは、App_Code ディレクトリに配置する必要があります。  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ブラウザーでページを読み込みます。 名前を入力し、URL を表すと実際の URL の先頭に追加`http://`、 をクリックし、**追加**URL を追加するボタンをクリックします。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが管理するカスタム データが変更されていないかどうかを示す値を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" /> インターフェイスで管理されるカスタム データが変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールによって管理されるデータが変更されたとき、コントロールは「ダーティ」と見なさ コントロールを返す必要があります`true`かどうか、カスタム データを管理を通じて、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>インターフェイスが変更されました。 コントロールを返す場合`true`からこのプロパティは、コントロールの<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>インターフェイス メソッドの実装は、プロパティ値の抽出中に呼び出されます。  
  
> [!NOTE]
>  POST 要求の処理の後半で、パーソナル化インフラストラクチャによって、自動的にこのプロパティがチェックされます。 ただし、GET 要求に対して返される値から、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティはチェックされません。 原因で、コントロールの状態 - によって管理されるデータだけでなく、「ダーティ」と見なされるコントロールの他のイベントが<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>--を保存します。 コントロールは自体「ダーティ」、GET 要求中にまたはマークいくつか非常に特定の境界条件下で、パーソナル化インフラストラクチャと見なしますコントロール"ダーティになった"、GET 要求中に、場合<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>常に呼び出されます。  
  
 コントロールは、関連する参照できます<xref:System.Web.UI.WebControls.WebParts.WebPartManager>を制御し、確認、<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A>プロパティを現在のスコープを決定します。 コントロールのカスタム データの「ダーティ」の状態は、現在のスコープに対して適切であるか。  
  
   
  
## Examples  
 次のコード例に示しますを使用、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティ。 この例の最初の部分がホストする Web ページ、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 例では、2 番目の部分は、カスタム コード<xref:System.Web.UI.WebControls.WebParts.WebPart>というコントロール`UrlListWebPart`します。 このファイルは、例を実行する App_Code ディレクトリに配置する必要があります。 ソース コードを実装するメモ、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティ。  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ブラウザーでページを読み込みます。 名前を入力し、URL を表すと実際の URL の先頭に追加`http://`、 をクリックし、**追加**URL を追加するボタンをクリックします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Load state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">基になるデータ ストアから読み込まれた、スコープが指定されているカスタム データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</param>
        <summary>カスタム データをコントロールに読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、それ自体にカスタム データを読み込むことができるコントロールに呼び出されます。 コントロールのカスタム状態をページの他のパーソナル化データが変更されたかどうかに関係なく、基になるデータ ストアに戻る書き込む必要があるかどうかを示す値を返すこともできます。 コントロールでは、独自のカスタム プロパティを設定でき、パーソナル化ディクショナリに含まれる値に基づく追加の内部ロジックを実行することができます。 このメソッドは、Web パーツ コントロールのパーソナル化データをコントロールに適用するときに設定します。  
  
 マージ動作を意識する必要があります<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-とスコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>-に含まれるプロパティのスコープ、<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>オブジェクト。 `state`パラメーターには、基になるデータ ストアから読み込まれているカスタム データのマージされた表現が含まれています。 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>ページ自体が以前に追加されたすべての値のスコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>スコープは使用できます。 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>値に関連付けられている場合、スコープ<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>パーソナル化スコープに含まれる 1 つの値が追加されたときに<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>スコープ、および別の値を使用しているページが<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>スコープのパーソナル化インフラストラクチャは、のみを含める、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-値のスコープ (ではなく、<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>スコープの値) 内で、`state`パラメーター。  
  
   
  
## Examples  
 実装を次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>カスタム メソッド<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 この例を実行するために必要な完全なコード例」セクションを参照してください、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>クラスの概要。  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Save state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">基になるデータ ストアから読み込まれた、スコープが指定されているカスタム データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />。</param>
        <summary>コントロールの <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> オブジェクトのカスタム プロパティと内部状態情報を保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サーバー コントロールは、独自のカスタム プロパティと内部の状態情報を格納できる、<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>で指定されている、`state`パラメーター。 情報は、一連の名前/値ペアとして格納されます。 使用してコントロールへの後続の呼び出し中にそれを認識できる名前/値ペアを使用するコントロールの役割です、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>メソッド。  
  
 それに関連付けられたコントロールを参照できます<xref:System.Web.UI.WebControls.WebParts.WebPartManager>を制御し、確認、<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope>オブジェクトを現在のスコープを決定します。 カスタム状態情報は、現在のスコープに適している必要があります。 各に注意してください<xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry>に追加される値、<xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>をマージする場合に、パーソナル化インフラストラクチャがこれに依存するためにオブジェクトが適切なスコープの値を関連付ける必要があります<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>と<xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-カスタム データのスコープ渡す前に、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A>メソッド。  
  
 コントロールが、ASP.NET で状態ディクショナリに配置されるオブジェクトをシリアル化できることを確認する必要があります Web パーツの標準の ASP.NET の実装を使用して、<xref:System.Web.UI.ObjectStateFormatter>クラス。 実際には、これは、次の意味を。  
  
-   .NET Framework のプリミティブ型、文字列、および配列や配列リスト、ハッシュ テーブルをハイブリッド ディクショナリなどの .NET Framework 型のコレクション指向は自動的にシリアル化可能です。  
  
-   独自に提供するカスタム型<xref:System.ComponentModel.TypeConverter>へのシリアル化して、文字列から逆シリアル化できるクラスがシリアル化可能と見なされます。  
  
-   カスタムの型をシリアル化できる、<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>クラスがシリアル化可能と見なされます。  
  
> [!IMPORTANT]
>  App_Code ディレクトリに定義されているクラスに基づいて型が追加されず、既定のバイナリ シリアル化機構に依存しする必要があります。 時間でランダムなポイントで変更されて、アセンブリ名を持つことにするため、App_Code ベースのアイテムは一貫してバイナリ シリアル化できません。  
  
   
  
## Examples  
 実装する次のコード例に示します、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A>カスタム メソッド<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール。 この例を実行するために必要な完全なコード例」セクションを参照してください、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable>クラスの概要。  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>