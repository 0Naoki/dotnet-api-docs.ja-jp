<Type Name="WebPartZone" FullName="System.Web.UI.WebControls.WebParts.WebPartZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6635fcffcb191c499add225a849328b1c4d77a46" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69394093" /></Metadata><TypeSignature Language="C#" Value="public class WebPartZone : System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartZone extends System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
  <TypeSignature Language="VB.NET" Value="Public Class WebPartZone&#xA;Inherits WebPartZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPartZone : System::Web::UI::WebControls::WebParts::WebPartZoneBase" />
  <TypeSignature Language="F#" Value="type WebPartZone = class&#xA;    inherit WebPartZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebPartZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web ページ上の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールをホストするための、Web パーツ コントロール セットの主なコントロールとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web パーツ機能では、ゾーンは、Web パーツコントロールを含む Web ページ上に定義された領域です。 ゾーンの主な機能は、含まれるコントロールをレイアウトし、それらのコントロールに共通のユーザーインターフェイス (UI) を提供することです。 ゾーンに関する一般的な情報と、それらが Web パーツアプリケーションでどのように使用されるかに<xref:System.Web.UI.WebControls.WebParts.WebZone>つい<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ては、基本クラスとクラスのリファレンスドキュメント、および[Web パーツコントロールセットの概要](https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100))」を参照してください。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールの特殊な機能には、Web パーツ<xref:System.Web.UI.WebControls.WebParts.WebPart>アプリケーションのメイン UI を形成するコントロールが含まれます。 コントロール<xref:System.Web.UI.WebControls.WebParts.WebPartZone>は、Web ページ上で永続化形式で宣言することができます。これにより、開発者はこれをテンプレートと`<asp:webpartzone>`して使用したり、要素内に他のサーバーコントロールを追加したりできます。 サーバーコントロールは、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>ゾーンに追加される<xref:System.Web.UI.WebControls.WebParts.WebPart>と、実行時にコントロールとして機能することができます。 これは、追加されたコントロールが<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、ユーザーコントロール、カスタムコントロール、または ASP.NET コントロールのいずれであるかに関係なく当てはまります。 詳細については、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>クラスのトピックを参照してください。  
  
 コントロールに<xref:System.Web.UI.WebControls.WebParts.WebPartZone>は、コントロールが含まれるコントロールに共通の UI も用意されています。 <xref:System.Web.UI.WebControls.WebParts.WebPart> この一般的な UI は chrome として知られており、境界、タイトル、ヘッダーとフッター、スタイル特性、動詞 (ユーザーがコントロールで実行できる UI 操作 (close や最小化など) など、すべてのコントロールの周辺 UI 要素で構成されています。  
  
> [!NOTE]
>  Internet Explorer で<xref:System.Web.UI.WebControls.WebParts.WebPartZone>は、ゾーンの向きに応じて、またはそれに含まれるコントロールの高さが予期しない方法で表示されることがあります。 詳細について<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A>は、またはプロパティのドキュメントを参照してください。  
  
 クラス<xref:System.Web.UI.WebControls.WebParts.WebPartZone>は、基本<xref:System.Web.UI.WebControls.WebParts.WebZone>クラスと<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>クラスからほとんどの動作を派生さ<xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A>せます。1つの一意のメンバー (プロパティ) だけを追加します。 このプロパティは、 <xref:System.Web.UI.ITemplate>オブジェクトを参照します。これは、ページ開発者が .aspx ページの宣言型マークアップ内`<zonetemplate>`の要素を使用して、静的にゾーン内のコントロールを定義できるようにするテンプレートです。  
  
## <a name="accessibility"></a>ユーザー補助  
 このコントロールに既定で表示されるマークアップは、Web コンテンツアクセシビリティガイドライン 1.0 (WCAG) 優先度1のガイドラインなどのユーザー補助の標準に準拠していない可能性があります。 このコントロールのアクセシビリティサポートの詳細については、「 [ASP.NET Controls And accessibility](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、Web パーツページで<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールを使用する方法を示しています。 コード例を実行するには、このソースコードをコンパイルする必要があります。 これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。 または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。 コンパイルの両方の方法を示すチュートリアルについて[は、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用  
  
 この例の最初の部分では、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>クラスを継承し、コンストラクターの2つの基本ゾーンプロパティを設定するカスタムクラスを示します。  
  
 [!code-csharp[WebParts_WebPartZone_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/mywebpartzone.cs#3)]
 [!code-vb[WebParts_WebPartZone_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/mywebpartzone.vb#3)]  
  
 この例の2番目の部分は、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールを含むページを示しています。 このページでは、カスタムゾーン`Register`を含むアセンブリを参照するために、ページの上部付近に特別なディレクティブが必要です。 ページには、各`<asp:webpartmanager>` Web パーツページに必要な要素も含まれています。 <xref:System.Web.UI.WebControls.Calendar>カスタム`<cc1:MyWebPartZone>` コントロールを表す要素は、標準のASP.NETコントロールを含みます。<xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールは、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>ゾーン<xref:System.Web.UI.WebControls.Calendar>内に含まれているため、コントロールとし<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>て実行時にコントロールとしてラップされ<xref:System.Web.UI.WebControls.WebParts.WebPart> 、コントロールとして機能することができます。  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#1)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#1)]  
  
 カスタム<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールの宣言型マークアップを確認します。 次のコード例に示すように、マークアップにはさまざまなゾーンレベルのプロパティを設定できます。  
  
> [!NOTE]
>  `<zonetemplate>`要素の使用に注意することが非常に重要です。 この要素は、「解説」で説明されているよう<xref:System.Web.UI.WebControls.WebParts.WebPartZone>に、ページで宣言<xref:System.Web.UI.WebControls.WebParts.WebPart>されている静的コントロールをラップするためにゾーン内で必要になります。  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)">Web パーツコントロールセットの概要</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/hhy9ewf1(v=vs.100)">ASP.NET Web パーツの概要</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPartZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.%23ctor%2A>メソッドはパラメーターなしのコンストラクターであり、値は設定されません。 ただし、派生クラスでは、コンストラクターを使用して基本ゾーンプロパティを設定し、カスタムゾーンコントロールの標準の動作と外観を作成できます。  
  
   
  
## Examples  
 次のコード例は、カスタム<xref:System.Web.UI.WebControls.WebParts.WebPartZone>クラスでコンストラクターを使用して、ゾーンのいくつかの基本プロパティを設定する方法を示しています。 この方法は、特定の動作と外観を持つカスタム<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールを作成する場合に便利です。 この例の完全なコード (カスタムクラスとコントロールをホストする .aspx ページの両方を含む) については、「 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>クラスの概要」トピックの「例」セクションを参照してください。  
  
 [!code-csharp[WebParts_WebPartZone_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/mywebpartzone.cs#3)]
 [!code-vb[WebParts_WebPartZone_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/mywebpartzone.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="GetInitialWebParts">
      <MemberSignature Language="C#" Value="protected internal override System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetInitialWebParts () As WebPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartCollection ^ GetInitialWebParts();" />
      <MemberSignature Language="F#" Value="override this.GetInitialWebParts : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartCollection" Usage="webPartZone.GetInitialWebParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>抽象基本メソッドをオーバーライドして、ゾーンのテンプレート内に格納されている静的な <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの初期セットを取得します。</summary>
        <returns>ゾーンのテンプレート内に格納されているすべての <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> または他のサーバー コントロールが含まれている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A>は、抽象基本<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts%2A>メソッドの実装を提供します。 基本メソッドは実装を提供しませんが、派生クラスが、パーソナル化の変更を考慮することなく、ゾーンに属するコントロールの初期セットを取得する方法をカスタマイズできるように、メソッドを宣言します。  
  
 ゾーンで見つかった各サーバーコントロールに対して<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> 、メソッドが呼び出されます。 コントロールが<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスから直接継承した場合、そのコントロールは単にゾーンの<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>コレクション (および<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの同様のコレクション) に追加されます。 コントロールがから<xref:System.Web.UI.WebControls.WebParts.WebPart>直接継承していない場合、Web パーツコントロールセットは<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>オブジェクトを使用してコントロールをラップします。これに<xref:System.Web.UI.WebControls.WebParts.WebPart>より、コントロールを実行時にコントロールとして動作させることができます。  
  
 クラス<xref:System.Web.UI.WebControls.WebParts.WebPartZone>は、Web パーツページのマークアップ内のタグの`<zonetemplate>`セット内で静的に宣言されるコントロールのセット (存在する場合) を返すことによって、基本メソッドを実装します。 <xref:System.Web.UI.WebControls.PlaceHolder>コントロールがゾーン内で宣言されている場合、コントロール自体ではなく、そのコントロールの子コントロールが追加されます。 この実装により、たとえば、マスターページでゾーン<xref:System.Web.UI.WebControls.WebParts.WebPartZone>を作成し、コンテンツページで個々<xref:System.Web.UI.WebControls.WebParts.WebPart>のコントロールまたはサーバーコントロールを宣言できます。 ゾーン内で<xref:System.Web.UI.WebControls.Literal>コントロールを宣言した場合、それらは無視されます。 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A>メソッドによって返されるコントロールの初期コレクションは、パーソナル化が行われた後の、ゾーン内のコントロールの実際の実行時コレクションとは異なる場合があります。 たとえば、2つ<xref:System.Web.UI.WebControls.WebParts.WebPartZone>のコントロールを持つ Web ページがあり、最初のページには、 `<zonetemplate>`タグ内`User1`で静的に宣言されるという名前のユーザーコントロールが含まれているとします。 ユーザーがページを読み込み、2番`User1`目のゾーンにドラッグし`User1`た場合、はそのゾーンで宣言されている<xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A>ため、最初のゾーンに対してメソッドを呼び出すことによって返されるコレクションの一部になります。 ただし、実行時には、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールがパーソナル化データを`User1`読み込んだときに、ユーザーがドラッグした2番目のゾーンに実際に表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="webPartZone.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>基本メソッドをオーバーライドして、ゾーンが <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールに正常に登録されたことを示します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web ページのマークアップで宣言されるコントロールが含まれている <see cref="T:System.Web.UI.ITemplate" /> のインスタンスへの参照を取得または設定します。</summary>
        <value>ゾーン内の <see cref="T:System.Web.UI.ITemplate" /> コントロールが含まれている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A>は、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロール内<xref:System.Web.UI.ITemplate>のインスタンスを参照します。 このテンプレートには、コントロール、ユーザーコントロール、カスタムコントロール<xref:System.Web.UI.WebControls.WebParts.WebPartZone> 、ASP.NET コントロール<xref:System.Web.UI.WebControls.WebParts.WebPart>など、コントロール内で宣言できる静的サーバーコントロールが含まれています。  
  
 Web ページの宣言<xref:System.Web.UI.WebControls.WebParts.WebPart>型マークアップ<xref:System.Web.UI.WebControls.WebParts.WebPartZone>内のに静的または他のサーバーコントロールを追加する場合、コントロールのタグをタグの`<zonetemplate>`ペア内に配置する必要があります。 タグ内で`<zonetemplate>`コントロールを宣言しない場合は、例外がスローされます。  
  
   
  
## Examples  
 次のコード例は、Web パーツページの<xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A>宣言型マークアップでプロパティを使用する方法を示しています。 この例の完全なコード (カスタムクラスとコントロールをホストする .aspx ページを含む) は、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>クラスの概要に関するトピックの「例」セクションにあります。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールのマークアップに`<zonetemplate>`は、Calendar コントロールへの参照を含む要素があることに注意してください。 追加の<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールやその他のサーバーコントロールをゾーンに追加する場合は、 `<zonetemplate>`タグ内に追加することもできます。  
  
 [!code-aspx-csharp[WebParts_WebPartZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_WebPartZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ゾーン内の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの登録は既に完了しています。</exception>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Web パーツパーソナル化の概要</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>
