<Type Name="IWebPartTable" FullName="System.Web.UI.WebControls.WebParts.IWebPartTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9162460bfa31b38311f9eccb017b952a67a78d6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69395167" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartTable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartTable" />
  <TypeSignature Language="F#" Value="type IWebPartTable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>データ テーブル全体を使用して 2 つのサーバー コントロールを接続するためのプロバイダー インターフェイスを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスは Web パーツ接続で使用するように設計されています。 Web パーツ接続では、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>ゾーン内に存在する2つのサーバーコントロールが接続を確立し、データを共有します。1つのコントロールがコンシューマーとして機能し、もう一方のコントロールがプロバイダーとして動作します。 Web パーツ接続でデータを共有するためのメカニズムはインターフェイスインスタンスであり、プロバイダーはコールバックメソッドを使用してコンシューマーに提供します。 接続を確立するには、コンシューマーとプロバイダーの両方が、データを共有するために同じインターフェイス型を使用する必要があります。 コンシューマーがプロバイダーによって送信されたインターフェイスの型を認識しない場合でも、プロバイダーによって送信された<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>インターフェイスインスタンスをコンシューマーが使用する型に変換するトランスフォーマー (オブジェクト) によって、コントロールを接続することができます。判断. 接続の詳細について<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>は、「」および「 [Web パーツ接続の概要](https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100))」を参照してください。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>インターフェイスは、データテーブルに基づいて接続を作成するための標準インターフェイスとして、Web パーツコントロールセットに含まれるプロバイダーインターフェイスです。 Web パーツ接続で使用するカスタムインターフェイスを作成することもできますが、多くのデータドリブン Web アプリケーションでは、共通フィールド (詳細については、 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>インターフェイスを参照) に基づいて接続を作成すると便利です (詳細については、 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> 「」を参照してください)。インターフェイス)、またはデータソースのテーブル。 通常の接続では、 <xref:System.Web.UI.WebControls.WebParts.WebPart>プロバイダーとして機能するコントロールは<xref:System.Web.UI.WebControls.WebParts.IWebPartTable> 、インターフェイスを実装し、特殊なコールバックメソッドでコンシューマーにインターフェイスのインスタンスを提供します。 たとえば、財務実績データを含むテーブル<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>のインターフェイスをプロバイダーが実装する場合があります。 コンシューマー <xref:System.Web.UI.WebControls.WebParts.WebPart>として動作する別のコントロールは、インターフェイスインスタンスを受け取る特別なメソッドを定義し、その後、データを抽出してグラフを表示し、結果の情報を表示することができます。  
  
 インターフェイス<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>には、公開されている2つのメンバーがあります。 プロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>は、 <xref:System.ComponentModel.PropertyDescriptorCollection>オブジェクトにカプセル化されたデータテーブルに関するスキーマ情報を返します。 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>メソッドは、コールバックメソッドが呼び出されたときにインターフェイスインスタンスのテーブルデータを取得するために、実装側 (プロバイダーコントロールなど) が使用するメソッドを宣言します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>インターフェイスを使用して2つのコントロール間に静的接続を作成する方法を示しています。 このコード例には、次の3つの部分があります。  
  
-   インターフェイス<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>を使用して<xref:System.Web.UI.WebControls.WebParts.WebPart>接続を形成できる2つのカスタムコントロールのソースコードです。1つのコントロールがプロバイダーとして機能し、もう一方のコントロールがコンシューマーとして動作します。  
  
-   コントロールをホストし、静的な接続を永続化形式で宣言する Web ページ。  
  
-   コード例を実行したときの動作について説明します。  
  
 コード例の最初の部分は、2つのカスタムコントロールのソースコードです。 最初のコードは、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>インターフェイスを実装するプロバイダーのコードです。 この例ではわかりやすくするために、プロバイダーはデータベースに接続するのではなく、いくつかのデータを含むテーブルを作成します。 メソッド`GetConnectionInterface`は、プロバイダーのコネクションポイントとして機能します。このコールバックメソッドは、インターフェイスインスタンスをコンシューマーに返します。 コンシューマーの場合と同様に、 `SetConnectionInterface` `ConnectionConsumer`属性でマークされたという名前のメソッドでプロバイダーからインターフェイスインスタンスを取得します。 コンシューマー `OnPreRender`は、インターフェイスのインスタンスを取得した後、プロバイダーの<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>メソッドの実装を呼び出して、実際のデータを取得してページに書き込みます。  
  
 コード例を実行するには、このソースコードをコンパイルする必要があります。 これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。 または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。 このコード例では、動的コンパイルを使用します。 のコンパイル方法を示すチュートリアルについては[、「チュートリアル:カスタム Web サーバーコントロール](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)の開発と使用  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 コード例の2番目の部分は、静的接続を宣言し、コントロールをホストする Web ページです。 ページの上部付近には、App_Code `Register`ディレクトリに格納されているソースコードの名前空間を宣言するディレクティブがあります。 接続は、 `<asp:webpartconnection>`要素を使用して宣言されています。 カスタムコンシューマーコントロールとプロバイダーコントロールは、 `<zonetemplate>` `<asp:webpartzone>`要素内の要素で宣言されます。これは、接続できるようにするために必要です ( <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>クラスを継承するゾーン内に存在する必要があります)。  
  
 [!code-aspx-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  
  
 ブラウザーにページを読み込みます。 コンシューマーコントロールは、指定されたテーブルから提供されるデータを表示します。プロバイダーは、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>インターフェイスのインスタンスを介して使用できます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)">Web パーツ接続の概要</related>
  </Docs>
  <Members>
    <Member MemberName="GetTableData">
      <MemberSignature Language="C#" Value="public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTableData(class System.Web.UI.WebControls.WebParts.TableCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTableData (callback As TableCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTableData(System::Web::UI::WebControls::WebParts::TableCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetTableData : System.Web.UI.WebControls.WebParts.TableCallback -&gt; unit" Usage="iWebPartTable.GetTableData callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.TableCallback" />
      </Parameters>
      <Docs>
        <param name="callback">データを取得するメソッドのアドレスが格納された <see cref="T:System.Web.UI.WebControls.WebParts.TableCallback" /> デリゲート。</param>
        <summary>インターフェイスで 2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール間の接続の基礎として使用されているテーブルのデータを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、インターフェイスによって渡されるデータテーブルの値を取得します。 プロバイダーはこのメソッドを実装し、コンシューマーがデータを処理または表示する準備ができた時点で、コンシューマーがそれを呼び出します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>メソッドの実装と使用方法を示しています。 完全な例については、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>インターフェイスのクラスの概要を参照してください。 プロバイダーコントロールは、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>メソッドを実装し、指定されたテーブル内のデータを返します。 コンシューマーコントロールは、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> `OnPreRender`メソッド内のメソッドを呼び出して、データの値をページに書き込むことができるようにします。  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Schema { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptorCollection" Usage="System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>2 つの <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール間でデータを共有するために使用されるデータ テーブルのスキーマ情報を取得します。</summary>
        <value>データについて説明する <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>インスタンス内のデータに関するプロパティ情報を提供します。 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>プロパティによって参照されるスキーマとテーブルのデータとの間には、暗黙的なコントラクトがあります。 コントラクトは、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>プロパティ内の<xref:System.ComponentModel.PropertyDescriptor>各オブジェクトに対して、テーブルデータ<xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>の要素に対してを呼び出して、列またはテーブルの行の値を取得できることを示します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>プロパティの実装と使用方法を示しています。 完全な例については、 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>インターフェイスのクラスの概要を参照してください。 プロバイダーコントロールは、プロパティ<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>を実装します。 その後、コンシューマーコントロールは、 `RenderContents`メソッドで<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>プロパティを照会して、テーブルデータをページに書き込むときにテーブルに関する情報を取得します。  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
  </Members>
</Type>
