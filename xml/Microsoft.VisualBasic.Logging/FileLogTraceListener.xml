<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="78cc1b5b2fdd6e02efea469bb7ec414d6f4ba417" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="54a4c-101">ログ出力をファイルに転送する簡単なリスナーを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="54a4c-101">Provides a simple listener that directs logging output to file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-102"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスには、必要に応じて、毎日ごとまたはアプリケーションごとに、ログ ファイルをアーカイブする自動メンテナンス機能が用意されています。</span><span class="sxs-lookup"><span data-stu-id="54a4c-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="54a4c-103">この自動アーカイブ機能により、開発者および管理者の保守作業の負担を軽減できます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="54a4c-104">インスタンス<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>に追加することができます、<xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType>または<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>をテキスト ファイルにログ記録からの出力にリダイレクトするコレクション。</span><span class="sxs-lookup"><span data-stu-id="54a4c-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="54a4c-105">このクラスのインスタンスを追加することも`My.Application.Log`または`My.Log`(用 Web アプリケーション) で[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]アプリケーションです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] applications.</span></span> <span data-ttu-id="54a4c-106">詳細については、次を参照してください[チュートリアル: 変更場所 My.Application.Log 書き込みます情報。](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span><span class="sxs-lookup"><span data-stu-id="54a4c-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span></span>  
  
 <span data-ttu-id="54a4c-107">このクラスの主な機能は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="54a4c-108">*アーカイブ機能*します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-108">*Archival functionality*.</span></span> <span data-ttu-id="54a4c-109">このクラスで生成されるログ ファイルは、基本名と、ログの連続するバージョンのログ ファイルを区別するための番号と共に、日付に従ってという名前です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="54a4c-110">新しいログ ファイルは、必要に応じてごとに作成されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="54a4c-111">ファイル名の明示的な形式は`baseName`[-`dateStamp`] [-`version`] .log、場所。</span><span class="sxs-lookup"><span data-stu-id="54a4c-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="54a4c-112">`baseName`要素は、基本的なログ名で指定された、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="54a4c-113">`dateStamp`ときに表示され、一部が、形式"YYYY MM DD"、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>は<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>または<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="54a4c-114">同じ 2 つ以上のログ ファイルが必要な場合は`baseName`と`dateStamp`、`version`パート、正の値`Integer`ファイル名に追加されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="54a4c-115">*複数のクラス インスタンス*です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-115">*Multiple class instances*.</span></span> <span data-ttu-id="54a4c-116">インスタンスの場合、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスが使用されているファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="54a4c-117">クラスは、別のインスタンスで使用されている場合にファイルを共有、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>同じプロセス内のクラスです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="54a4c-118">クラスでは、ファイルが別のプロセスによって使用されている場合は、[次へ] の使用可能な名前を使用して、新しいログ ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="54a4c-119">*スレッド セーフ*です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-119">*Thread safety*.</span></span> <span data-ttu-id="54a4c-120"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスはスレッド セーフであります。</span><span class="sxs-lookup"><span data-stu-id="54a4c-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="54a4c-121">これにより、安全なメッセージ ログに書き込む、複数のスレッドからロックを使用せずにできます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="54a4c-122">**ログ ファイルの場所**</span><span class="sxs-lookup"><span data-stu-id="54a4c-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="54a4c-123"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>プロパティが受け取る、<xref:Microsoft.VisualBasic.Logging.LogFileLocation>にログ ファイルを書き込むための一般的なディレクトリのいずれかを指定する列挙体です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="54a4c-124">ログに書き込まれる別の場所に、設定、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>プロパティをその場所にします。</span><span class="sxs-lookup"><span data-stu-id="54a4c-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="54a4c-125">**ログ ファイル名**</span><span class="sxs-lookup"><span data-stu-id="54a4c-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="54a4c-126">ログ ファイルのベース名が指定された、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="54a4c-127">現在のログ ファイル名を読み取ることができます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="54a4c-128">これについては、ファイル システムにその他のいくつかのプロパティと、ログの現在の状態から派生します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="54a4c-129">**ログのメンテナンス**</span><span class="sxs-lookup"><span data-stu-id="54a4c-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="54a4c-130">新しいログ ファイルを作成するための最低限の頻度によって決まります、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="54a4c-131">値が<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>または<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>、日または週ごとに少なくとも 1 回、新しいログ ファイルが作成され、日付スタンプに組み込まれます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名。</span><span class="sxs-lookup"><span data-stu-id="54a4c-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="54a4c-132">によって決まりますが、最大サイズ (バイト単位)、ログ ファイルの<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="54a4c-133">ログに書き込まれた追加のメッセージは破棄され、に応じてログ ファイルのサイズがこのサイズを超える場合、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>プロパティ、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="54a4c-134"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>プロパティは、どの程度空き容量 (バイト単位) を使用する必要がありますを決定します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="54a4c-135">こうことを確認、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスはすべての利用可能なディスク領域を消費していません。</span><span class="sxs-lookup"><span data-stu-id="54a4c-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="54a4c-136">使用して、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>があるときにログの動作を指定するプロパティに書き込むより小さい<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>空きバイト数。</span><span class="sxs-lookup"><span data-stu-id="54a4c-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="54a4c-137">**ログ ファイルの出力設定**</span><span class="sxs-lookup"><span data-stu-id="54a4c-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="54a4c-138"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>かどうか、基になるストリームをフラッシュする自動的にそれぞれの書き込み後に、ログ ファイルにプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="54a4c-139"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>プロパティでは、許可された場合、メッセージを現在のログ ファイルに追加したり、新しいログ ファイルに書き込むかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="54a4c-140"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティ ログ メッセージ内のフィールドの区切り記号として使用する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="54a4c-141"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>プロパティは、新しいログ ファイルを作成するときに使用するエンコーディングを指定します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="54a4c-142">**ログ ファイルの出力**</span><span class="sxs-lookup"><span data-stu-id="54a4c-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="54a4c-143"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>と<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>メソッドは、ログ ファイルにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="54a4c-144">これらのメソッドを確認して、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>と共に、新しいログを作成するかどうかを判断する同じ基本名を持つ既存のログのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="54a4c-145"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>メソッドは、ログ ファイルに出力バッファーに現在あるメッセージをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="54a4c-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="54a4c-146"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>メソッドは、他のプロセスで使用できるように、ログ ファイルを閉じます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="54a4c-147">**出力を有効にします。**</span><span class="sxs-lookup"><span data-stu-id="54a4c-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="54a4c-148">トレースまたはトレース リスナーを使用してデバッグを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="54a4c-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="54a4c-149">次の構文は、コンパイラに固有です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="54a4c-150">C# 以外のコンパイラを使用する場合または[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]コンパイラのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="54a4c-150">If you use compilers other than C# or [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="54a4c-151">C# でのデバッグを有効にするには追加、`/d:DEBUG`するを追加したり、コードをコンパイルするときに、コンパイラのコマンドラインにフラグ`#define DEBUG`ファイルの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="54a4c-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="54a4c-152">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]、追加、`/d:DEBUG=True`フラグをコンパイラ コマンドライン。</span><span class="sxs-lookup"><span data-stu-id="54a4c-152">In [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="54a4c-153">C# でのトレースを有効にするには追加、`/d:TRACE`フラグを追加したり、コードをコンパイルすると、コンパイラのコマンドライン`#define TRACE`ファイルの先頭にします。</span><span class="sxs-lookup"><span data-stu-id="54a4c-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="54a4c-154">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]、追加、`/d:TRACE=True`フラグをコンパイラ コマンドライン。</span><span class="sxs-lookup"><span data-stu-id="54a4c-154">In [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="54a4c-155">リスナーのレベルを設定するには、アプリケーションの構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="54a4c-156">このファイル内でことができます、リスナーを追加、その型およびパラメーターの設定、リスナーの削除またはオフにするアプリケーションで設定したすべてのリスナーです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="54a4c-157">構成ファイルは、次の例のようにフォーマットされている必要があります。</span><span class="sxs-lookup"><span data-stu-id="54a4c-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="54a4c-158">この例を実行するには、完全修飾アセンブリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="54a4c-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="54a4c-159">アセンブリの完全修飾名を取得する方法については、次を参照してください。[アセンブリ名](~/docs/framework/app-domains/assembly-names.md)です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
```  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-160">
            <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化し、その名前を設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-160">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-161">既定の名前を使用して、<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-162">このメソッドのインスタンス名を設定、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> FileLogTraceListener するクラス。</span><span class="sxs-lookup"><span data-stu-id="54a4c-162">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="54a4c-163">使って、インスタンス名にアクセスすることができます、<xref:System.Diagnostics.TraceListener.Name%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-163">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="54a4c-164">
            <see langword="String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-164">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="54a4c-165">インスタンス オブジェクトの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-165">The name of the instance object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54a4c-166">指定された名前を使用して、<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-166">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-167">このメソッドのインスタンス名を設定、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスを`name`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-167">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="54a4c-168">考えるインスタンス名にアクセスすることができます、<xref:System.Diagnostics.TraceListener.Name%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-168">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-169">現在のファイルに追記するか、新しいファイルに出力するかを決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-169">Determines whether to append the output to the current file or write it to a new file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-170">
            <see langword="Boolean" /> 値。現在のファイルに追記する場合は <see langword="True" />。新しいファイルに出力する場合は <see langword="False" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-170">
              <see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span>
          </span>
          <span data-ttu-id="54a4c-171">このプロパティの既定の設定は <see langword="True" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-171">The default setting for this property is <see langword="True" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-172">ときに、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>プロパティは`False`、新しいファイルに出力が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-172">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file.</span></span> <span data-ttu-id="54a4c-173">このプロパティが`True`、しない限り、現在のファイルに出力が追加されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-173">When the property is `True`, the output is appended to the current file, unless:</span></span>  
  
-   <span data-ttu-id="54a4c-174">出力ファイルは、別のプロセスによってロックされています。</span><span class="sxs-lookup"><span data-stu-id="54a4c-174">The output file is locked by another process.</span></span> <span data-ttu-id="54a4c-175">このような状況に組み込まれているバージョン番号を持つ、新しいログ ファイルを作成、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名。</span><span class="sxs-lookup"><span data-stu-id="54a4c-175">In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="54a4c-176">現在のファイル サイズがどのようなより大きい、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-176">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span> <span data-ttu-id="54a4c-177">この場合、追加のメッセージは破棄され、に応じて、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>プロパティ、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-177">In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="54a4c-178">既存のファイル名がで指定されたログの作成のスケジュールに従って期限切れ、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-178">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="54a4c-179">このような状況で、新しいログ ファイルが作成され、日付スタンプに組み込まれます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名。</span><span class="sxs-lookup"><span data-stu-id="54a4c-179">In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-180">ログ ファイル ストリームに書き込むたびに、バッファーをフラッシュするかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-180">Indicates whether or not the writing to the log file stream flushes the buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-181">
            <see langword="Boolean" /> 値。書き込みのたびにストリームがフラッシュされる場合は <see langword="True" />。それ以外の場合、ログ エントリはバッファーに格納されて、より効率よく出力されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-181">
              <see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span>
          </span>
          <span data-ttu-id="54a4c-182">このプロパティの既定の設定は <see langword="False" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-182">The default setting for this property is <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-183">`False`の設定、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>プロパティは、ログ ファイルに同時に複数のメッセージを記述する方が効率的になっているため、ほとんどのアプリケーションのパフォーマンスを最高を提供します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-183">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="54a4c-184">使用することができます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>ログ ファイルに現在あるメッセージをフラッシュするメソッドのバッファーを出力します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-184">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="54a4c-185">使用することも、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>メソッドで、暗黙的に、ログ ファイルを閉じる前に、ストリームをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="54a4c-185">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-186">ログ ファイルの基本名を取得または設定します。ログ ファイルの完全名を生成するときに使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-186">Gets or sets the base name for the log files, which is used to create the full log-file name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-187">
            <see langword="String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-187">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="54a4c-188">ログ ファイルの基本名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-188">The base name for the log files.</span>
          </span>
          <span data-ttu-id="54a4c-189">既定では、アプリケーションの製品名になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-189">The default is the application's product name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-190"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>プロパティをログ ファイルのベース名を決定、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-190">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="54a4c-191"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>プロパティの現在のログ ファイルの完全名を示します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-191">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="54a4c-192">ログの異なるバージョンを区別するためにログのパス、基本名、日付、および数値に基づいて生成されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-192">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="54a4c-193">新しいログ ファイルは、必要に応じてごとに作成されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-193">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="54a4c-194">完全なログ ファイル名の明示的な形式は`path` \\ `baseName`[-`dateStamp`] [-`iteration`] .log、場所</span><span class="sxs-lookup"><span data-stu-id="54a4c-194">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="54a4c-195">`path`部分はによって決定されます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>プロパティと、そのプロパティの値に設定されている場合<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-195">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="54a4c-196">`baseName`要素は、基本的なログ名で指定された、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-196">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="54a4c-197">`dateStamp`ときに表示され、一部が、形式"YYYY MM DD"、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>に設定されている<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>または<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-197">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="54a4c-198">同じ 2 つ以上のログ ファイルが必要な場合は`baseName`と`dateStamp`、`iteration`パート、正の値`Integer`ファイル名に追加されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-198">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-199">現在のログ ファイルに使用されているストリームを閉じ、現在のストリームに関連付けられたすべてのリソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-199">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-200">呼び出す必要はありません、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>メソッドを明示的にため、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスは、基になるストリームを管理します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-200">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-201">
            <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> プロパティが <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /> に設定されている場合に、ログ ファイルのディレクトリを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-201">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-202">ログ ファイルのディレクトリ名を表す <see langword="String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-202">
              <see langword="String" />, which is the name of the log-file directory.</span>
          </span>
          <span data-ttu-id="54a4c-203">このプロパティの既定の設定は、アプリケーション データ用のユーザー ディレクトリです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-203">The default setting for this property is the user's directory for application data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-204">ときに、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>プロパティが設定されており、また、設定、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>プロパティを<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-204">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="54a4c-205"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>プロパティ ディレクトリは解決できない場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-205">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-206">ログ メッセージに使用されているフィールド区切り記号を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-206">Gets or sets the delimiter used to delimit fields within a log message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-207">ログ メッセージのフィールド区切り記号を表す <see langword="String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-207">
              <see langword="String" />, which is the delimiter used for fields within a log message.</span>
          </span>
          <span data-ttu-id="54a4c-208">このプロパティの既定の設定はタブ文字です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-208">The default setting for this property is the TAB character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-209"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティでは、既定の区切り記号を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-209">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-210">ログ ファイルへの出力時に、空きディスク容量が <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> プロパティに指定された値を下回っていた場合の動作を決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-210">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-211">
            <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-211">
              <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span>
          </span>
          <span data-ttu-id="54a4c-212">ログ ファイルへの出力時に、空きディスク容量が <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> プロパティに指定された値を下回っていた場合、または、ログ ファイルのサイズが <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> プロパティの値を超えていた場合の動作を決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-212">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span>
          </span>
          <span data-ttu-id="54a4c-213">既定値は <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-213">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-214">ときに、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>プロパティに設定されている<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>、十分な予約済みのディスク領域がない場合、サイレント モードで、ログ メッセージは破棄されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-214">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="54a4c-215">これは、既定の動作であり、ディスクが十分な空き領域を取得する場合に失敗したことによる単純なアプリケーションが妨げられるため。</span><span class="sxs-lookup"><span data-stu-id="54a4c-215">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="54a4c-216">堅牢なアプリケーションを設定できます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>プロパティを<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>、し、追加`Try...Catch`ブロックですべてのコードをログに書き込みますを囲みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-216">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="54a4c-217">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="True" />。アンマネージ リソースだけを解放する場合は <see langword="False" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-217">
              <see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54a4c-218">使用しているストリームを閉じ、選択されたオプションに従って、マネージ リソースを解放します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-218">Closes the underlying stream and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-219">`disposing` パラメーターが `True` の場合、このメソッドは、この <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> が参照しているすべてのマネージ オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-219">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="54a4c-220">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-220">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="54a4c-221">
              <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span>
            <span class="sxs-lookup">
              <span data-stu-id="54a4c-221">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="54a4c-222">
              <see langword="Dispose" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span>
            <span class="sxs-lookup">
              <span data-stu-id="54a4c-222">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="54a4c-223">このメソッドは、 <see langword="Dispose" /> 、基底クラスのメソッド<see langword="Dispose" />です。</span>
            <span class="sxs-lookup">
              <span data-stu-id="54a4c-223">This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-224">新しいログ ファイルを作成する際に使用するエンコーディングを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-224">Gets or sets the encoding to use when creating a new log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-225">新しいログ ファイルを作成する際のエンコーディングを表す <see cref="T:System.Text.Encoding" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-225">
              <see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span>
          </span>
          <span data-ttu-id="54a4c-226">このプロパティの既定値は <see cref="T:System.Text.UTF8Encoding" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-226">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-227">によって指定されたエンコーディングの代わりにそのファイルのエンコーディングを使用する既存のログ ファイルにテキストを追加するときに、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-227">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-228">現在のログ ファイルへの書き込みに使用しているストリームをフラッシュします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-228">Flushes the underlying stream that writes to the current log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-229">使用して、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>にバッファリングされているすべてのデータを現在のログ ファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-229">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-230">現在のログ ファイルの完全名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-230">Gets the current full log-file name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-231">現在のログ ファイルの完全名を表す <see langword="String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-231">
              <see langword="String" />, which is the current full log-file name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-232"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>プロパティの現在のログ ファイルの完全名を示します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-232">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="54a4c-233">ログの異なるバージョンを区別するためにログのパス、基本名、日付、および数値に基づいて生成されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-233">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="54a4c-234">新しいログ ファイルは、必要に応じてごとに作成されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-234">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="54a4c-235">ログ ファイルの完全名の明示的な形式は`path` \\ `baseName`[-`dateStamp`] [-`iteration`] .log、場所。</span><span class="sxs-lookup"><span data-stu-id="54a4c-235">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="54a4c-236">`path`部分はによって決定されます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>プロパティと、そのプロパティの値に設定されている場合<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-236">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="54a4c-237">`baseName`要素は、基本的なログ名で指定された、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-237">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="54a4c-238">`dateStamp`ときに表示され、一部が形式 YYYY MM DD、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>は<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>または<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-238">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="54a4c-239">同じ 2 つ以上のログ ファイルが必要な場合は`baseName`と`dateStamp`、`iteration`パート、正の値`Integer`ファイル名に追加されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-239">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-240">トレース リスナーによってサポートされるカスタムの XML 構成属性を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-240">Gets the custom XML configuration attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54a4c-241">このリスナーで認識可能な XML 構成属性を保持する <see langword="String" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-241">
              <see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-242">カスタム属性、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>のインスタンスの動作を制御するための XML 構成ファイルで使用できます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-242">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="54a4c-243">他の属性を使用して、構成例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-243">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-244">ログを記録しているコンピューターのホスト名を出力に含めるかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-244">Indicates whether or not the host name of the logging machine should be included in the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-245">
            <see langword="Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-245">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="54a4c-246">ホストの識別子を含める場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-246">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span>
          </span>
          <span data-ttu-id="54a4c-247">既定値は <see langword="False" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-247">The default value is <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-248">動作を構成するプロパティを使用して、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>と<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-248">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-249">ログ ファイルの場所を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-249">Gets or sets location for the log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-250">ログ ファイルの場所を表す <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-250">
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span>
          </span>
          <span data-ttu-id="54a4c-251">既定値は <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-251">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-252">使用して、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>によって決定されます、定義済みパスのいずれかにログのパスを設定するプロパティ、<xref:Microsoft.VisualBasic.Logging.LogFileLocation>列挙値。</span><span class="sxs-lookup"><span data-stu-id="54a4c-252">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="54a4c-253">**場所の値**</span><span class="sxs-lookup"><span data-stu-id="54a4c-253">**Location value**</span></span>|<span data-ttu-id="54a4c-254">**Path**</span><span class="sxs-lookup"><span data-stu-id="54a4c-254">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="54a4c-255">形式で、すべてのユーザーが共有するアプリケーション データのパス。</span><span class="sxs-lookup"><span data-stu-id="54a4c-255">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="54a4c-256">一般的な値`BasePath`は。</span><span class="sxs-lookup"><span data-stu-id="54a4c-256">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="54a4c-257">C:\Documents and settings \all \all データ</span><span class="sxs-lookup"><span data-stu-id="54a4c-257">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="54a4c-258">値`CompanyName`、 `ProductName`、および`ProductVersion`アセンブリから取得します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-258">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="54a4c-259">アプリケーションを開始した実行可能ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="54a4c-259">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="54a4c-260">形式を持つ、ユーザーのアプリケーション データのパス。</span><span class="sxs-lookup"><span data-stu-id="54a4c-260">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="54a4c-261">一般的な値`BasePath`は。</span><span class="sxs-lookup"><span data-stu-id="54a4c-261">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="54a4c-262">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="54a4c-262">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="54a4c-263">値`CompanyName`、 `ProductName`、および`ProductVersion`アセンブリのフォームを取得します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-263">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="54a4c-264">現在のシステムの一時フォルダーのパス。</span><span class="sxs-lookup"><span data-stu-id="54a4c-264">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="54a4c-265">文字列を指定して場合<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>いない空の場合、し、パスとして使用。 それ以外の場合、ユーザーのアプリケーション データのパスを使用します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-265">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-266">ログ ファイルの名前に追加する日付を決定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-266">Determines which date to include in the names of the log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-267">
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-267">
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span>
          </span>
          <span data-ttu-id="54a4c-268">ログ ファイルの名前に追加される日付を示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-268">This indicates which date to include in the log-file names.</span>
          </span>
          <span data-ttu-id="54a4c-269">既定値は <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-269">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-270">いずれかに割り当てます、<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>列挙の値を<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>プロパティをログ ファイルの名前に含める日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-270">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="54a4c-271">日付の形式は、YYYY-MM-DD です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-271">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="54a4c-272">ログ ファイル名の形式の詳細については、次を参照してください。<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-272">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="54a4c-273">**LogFileCreationSchedule 値**</span><span class="sxs-lookup"><span data-stu-id="54a4c-273">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="54a4c-274">**ログ ファイル名を日付します。**</span><span class="sxs-lookup"><span data-stu-id="54a4c-274">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="54a4c-275">ログ ファイルの名前に現在の日付を追加します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-275">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="54a4c-276">ログ ファイルの名前に日付を追加しません。</span><span class="sxs-lookup"><span data-stu-id="54a4c-276">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="54a4c-277">現在の週の最初の曜日をログ ファイルの名前に追加します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-277">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="54a4c-278">週開始日は土曜日です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-278">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-279">ログ ファイルの最大サイズ (バイト単位) を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-279">Gets or sets the maximum allowed size of the log file, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-280">
            <see langword="Long" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-280">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="54a4c-281">ログ ファイルの最大サイズ (バイト単位) を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-281">This is the maximum allowed log-file size, in bytes.</span>
          </span>
          <span data-ttu-id="54a4c-282">既定値は、5000000 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-282">The default value is 5000000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-283">あるログ ファイルは大きくなりすぎないかどうかを確認するには、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-283">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="54a4c-284">場合は、ログ ファイルのサイズ (バイト単位) が、このプロパティの値よりも大きい場合、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>の値に応じて、メッセージは破棄され、障害がサイレント モードまたは例外をログにメッセージを書き込むクラス試行がスローされます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-284">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="54a4c-285">それ以外の場合、メッセージを記述、ログに空きディスク領域 (バイト単位) の量がある場合より小さい<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-285">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54a4c-286">このプロパティが、1000 未満の値に設定されている場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-286">When this property is set to a value less than 1000.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-287">確保する空きディスク容量 (バイト単位) を取得または設定します。この容量を下回ると、ログ ファイルにメッセージを出力できなくなります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-287">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54a4c-288">
            <see langword="Long" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-288">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="54a4c-289">必要な空きディスク容量を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-289">This is the amount of free disk space necessary.</span>
          </span>
          <span data-ttu-id="54a4c-290">既定値は 10000000 です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-290">The default value is 10000000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-291">あるログ ファイルに完全に収まらないディスクかどうかを確認するには、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-291">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="54a4c-292">空きディスク容量 (バイト単位) の領域の場合は、このプロパティの値よりも小さい、ときに、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>の値に応じて、メッセージは破棄され、障害がサイレント モードまたは例外をログにメッセージを書き込むクラス試行がスローされます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-292">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="54a4c-293">それ以外の場合、メッセージがログに書き込まれます、ログ ファイル サイズ (バイト単位) がより大きい場合<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-293">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="54a4c-294">このプロパティが 0 未満の値に設定されている場合に発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-294">When this property is set to a value less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-295">出力ファイルにトレース データを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-295">Writes trace data to the output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-296"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> メソッドは、アプリケーション コードによって呼び出されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="54a4c-296"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="54a4c-297">メンバーによってこれらのメソッドが呼び出される、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>を出力するトレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-297">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="54a4c-298">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-298">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="54a4c-299">このメソッドを呼び出したトレース ソースの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-299">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="54a4c-300">
            <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-300">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="54a4c-301">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-301">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="54a4c-302">出力するトレース データ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-302">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54a4c-303">トレース情報、データ オブジェクト、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-303">Writes trace information, a data object, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-304">この方法では:</span><span class="sxs-lookup"><span data-stu-id="54a4c-304">This method:</span></span>  
  
1.  <span data-ttu-id="54a4c-305">出力のデータとコンテキスト情報を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-305">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="54a4c-306">必要な場合は、新しいログ ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-306">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="54a4c-307">ログ ファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-307">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="54a4c-308">新しいログ ファイルを作成する方法の詳細については、次を参照してください。<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-308">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="54a4c-309">次の表では、出力フィールドを出現順に一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-309">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="54a4c-310">フィールドは文字列で区切られますを<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティを指定すると、および行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-310">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="54a4c-311">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="54a4c-311">**Field**</span></span>|<span data-ttu-id="54a4c-312">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="54a4c-312">**Output condition**</span></span>|<span data-ttu-id="54a4c-313">**説明**</span><span class="sxs-lookup"><span data-stu-id="54a4c-313">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="54a4c-314">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-314">Always</span></span>|<span data-ttu-id="54a4c-315">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="54a4c-315">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="54a4c-316">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-316">Always</span></span>|<span data-ttu-id="54a4c-317">列挙値の名前`eventType`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-317">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="54a4c-318">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-318">Always</span></span>|<span data-ttu-id="54a4c-319">`id` の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="54a4c-319">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="54a4c-320">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-320">Always</span></span>|<span data-ttu-id="54a4c-321">`data` の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="54a4c-321">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="54a4c-322">ときに、<xref:System.Diagnostics.TraceOptions.Callstack>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-322">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-323"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-323">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="54a4c-324">ときに、<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-324">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-325"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-325">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="54a4c-326">ときに、<xref:System.Diagnostics.TraceOptions.DateTime>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-326">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-327">文字列形式を、<xref:System.Diagnostics.TraceEventCache.DateTime%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-327">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-328">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-328">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="54a4c-329">ときに、<xref:System.Diagnostics.TraceOptions.ProcessId>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-329">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-330">文字列形式を、<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-330">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-331">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-331">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="54a4c-332">ときに、<xref:System.Diagnostics.TraceOptions.ThreadId>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-332">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-333"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-333">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="54a4c-334">ときに、<xref:System.Diagnostics.TraceOptions.Timestamp>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-334">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-335">文字列形式を、<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-335">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-336">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-336">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="54a4c-337">ときに、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>プロパティは`True`します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-337">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="54a4c-338">コンピューターの名前。</span><span class="sxs-lookup"><span data-stu-id="54a4c-338">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="54a4c-339">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-339">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="54a4c-340">このメソッドを呼び出したトレース ソースの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-340">The name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="54a4c-341">
            <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-341">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="54a4c-342">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-342">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="54a4c-343">データとして出力するオブジェクトの配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-343">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54a4c-344">トレース情報、データ オブジェクトの配列、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-344">Writes trace information, an array of data objects, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-345">この方法では:</span><span class="sxs-lookup"><span data-stu-id="54a4c-345">This method:</span></span>  
  
1.  <span data-ttu-id="54a4c-346">出力のデータとコンテキスト情報を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-346">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="54a4c-347">必要に応じて、新しいログ ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-347">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="54a4c-348">ログ ファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-348">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="54a4c-349">新しいログ ファイルを作成する方法の詳細については、次を参照してください。<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-349">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="54a4c-350">次の表では、出力フィールドを出現順に一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-350">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="54a4c-351">フィールドは文字列で区切られますを<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティを指定すると、および行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-351">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="54a4c-352">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="54a4c-352">**Field**</span></span>|<span data-ttu-id="54a4c-353">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="54a4c-353">**Output condition**</span></span>|<span data-ttu-id="54a4c-354">**説明**</span><span class="sxs-lookup"><span data-stu-id="54a4c-354">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="54a4c-355">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-355">Always</span></span>|<span data-ttu-id="54a4c-356">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="54a4c-356">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="54a4c-357">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-357">Always</span></span>|<span data-ttu-id="54a4c-358">列挙値の名前`eventType`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-358">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="54a4c-359">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-359">Always</span></span>|<span data-ttu-id="54a4c-360">`id` の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="54a4c-360">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="54a4c-361">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-361">Always</span></span>|<span data-ttu-id="54a4c-362">内の各要素の文字列形式から成る文字列`data`各区切って<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-362">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="54a4c-363">ときに、<xref:System.Diagnostics.TraceOptions.Callstack>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-363">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-364"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-364">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="54a4c-365">ときに、<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-365">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-366"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-366">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="54a4c-367">ときに、<xref:System.Diagnostics.TraceOptions.DateTime>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-367">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-368">文字列形式を、<xref:System.Diagnostics.TraceEventCache.DateTime%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-368">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-369">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-369">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="54a4c-370">ときに、<xref:System.Diagnostics.TraceOptions.ProcessId>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-370">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-371">文字列形式を、<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-371">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-372">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-372">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="54a4c-373">ときに、<xref:System.Diagnostics.TraceOptions.ThreadId>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-373">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-374"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-374">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="54a4c-375">ときに、<xref:System.Diagnostics.TraceOptions.Timestamp>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-375">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-376">文字列形式を、<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-376">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-377">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-377">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="54a4c-378">ときに、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>プロパティは`True`します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-378">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="54a4c-379">コンピューターの名前。</span><span class="sxs-lookup"><span data-stu-id="54a4c-379">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54a4c-380">トレース情報とイベント情報を出力ファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-380">Writes trace and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-381"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> メソッドは、アプリケーション コードによって呼び出されるものではありません。</span><span class="sxs-lookup"><span data-stu-id="54a4c-381"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="54a4c-382">メンバーによってこれらのメソッドが呼び出される、 <xref:System.Diagnostics.Debug>、 <xref:System.Diagnostics.Trace>、および<xref:System.Diagnostics.TraceSource>を出力するトレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-382">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="54a4c-383">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-383">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="54a4c-384">このメソッドを呼び出したトレース ソースの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-384">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="54a4c-385">
            <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-385">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="54a4c-386">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-386">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="54a4c-387">書き込むメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-387">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54a4c-388">トレース情報、メッセージ、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-388">Writes trace information, a message and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-389">この方法では:</span><span class="sxs-lookup"><span data-stu-id="54a4c-389">This method:</span></span>  
  
1.  <span data-ttu-id="54a4c-390">出力のデータとコンテキスト情報を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-390">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="54a4c-391">必要な場合は、新しいログ ファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-391">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="54a4c-392">ログ ファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-392">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="54a4c-393">新しいログ ファイルを作成する方法の詳細については、次を参照してください。<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-393">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="54a4c-394">次の表は、表示される順序で出力フィールドを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-394">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="54a4c-395">フィールドは文字列で区切られますを<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティを指定すると、および行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-395">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="54a4c-396">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="54a4c-396">**Field**</span></span>|<span data-ttu-id="54a4c-397">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="54a4c-397">**Output condition**</span></span>|<span data-ttu-id="54a4c-398">**説明**</span><span class="sxs-lookup"><span data-stu-id="54a4c-398">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="54a4c-399">常に。</span><span class="sxs-lookup"><span data-stu-id="54a4c-399">Always.</span></span>|<span data-ttu-id="54a4c-400">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="54a4c-400">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="54a4c-401">常に。</span><span class="sxs-lookup"><span data-stu-id="54a4c-401">Always.</span></span>|<span data-ttu-id="54a4c-402">列挙値の名前`eventType`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-402">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="54a4c-403">常に。</span><span class="sxs-lookup"><span data-stu-id="54a4c-403">Always.</span></span>|<span data-ttu-id="54a4c-404">`id` の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="54a4c-404">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="54a4c-405">常に。</span><span class="sxs-lookup"><span data-stu-id="54a4c-405">Always.</span></span>|<span data-ttu-id="54a4c-406">`message` の値。</span><span class="sxs-lookup"><span data-stu-id="54a4c-406">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="54a4c-407">ときに、<xref:System.Diagnostics.TraceOptions.Callstack>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-407">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-408"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-408">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="54a4c-409">ときに、<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-409">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-410"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-410">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="54a4c-411">ときに、<xref:System.Diagnostics.TraceOptions.DateTime>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-411">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-412">文字列形式を、<xref:System.Diagnostics.TraceEventCache.DateTime%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-412">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-413">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-413">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="54a4c-414">ときに、<xref:System.Diagnostics.TraceOptions.ProcessId>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-414">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-415">文字列形式を、<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-415">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-416">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-416">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="54a4c-417">ときに、<xref:System.Diagnostics.TraceOptions.ThreadId>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-417">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-418"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-418">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="54a4c-419">ときに、<xref:System.Diagnostics.TraceOptions.Timestamp>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-419">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-420">文字列形式を、<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-420">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-421">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-421">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="54a4c-422">ときに、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>プロパティは`True`します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-422">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="54a4c-423">コンピューターの名前。</span><span class="sxs-lookup"><span data-stu-id="54a4c-423">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="54a4c-424">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-424">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="54a4c-425">このメソッドを呼び出したトレース ソースの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-425">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="54a4c-426">
            <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-426">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="54a4c-427">イベントの数値識別子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-427">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="54a4c-428">0 個以上の書式項目を格納している書式指定文字列。<c>args</c> 配列内のオブジェクトに対応します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-428">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="54a4c-429">0 個以上の書式設定対象オブジェクトを含んだ <see langword="Object" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-429">An <see langword="Object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54a4c-430">トレース情報、書式設定されたオブジェクトの配列、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-430">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-431">この方法では:</span><span class="sxs-lookup"><span data-stu-id="54a4c-431">This method:</span></span>  
  
1.  <span data-ttu-id="54a4c-432">出力のデータとコンテキスト情報を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-432">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="54a4c-433">新しい新しいログ ファイルでは、必要に応じて作成します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-433">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="54a4c-434">ログ ファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-434">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="54a4c-435">新しいログ ファイルを作成する方法の詳細については、次を参照してください。<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-435">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="54a4c-436">次の表は、表示される順序で出力フィールドを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-436">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="54a4c-437">フィールドは文字列で区切られますを<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティを指定し、続けて行終端記号です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-437">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="54a4c-438">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="54a4c-438">**Field**</span></span>|<span data-ttu-id="54a4c-439">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="54a4c-439">**Output condition**</span></span>|<span data-ttu-id="54a4c-440">**説明**</span><span class="sxs-lookup"><span data-stu-id="54a4c-440">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="54a4c-441">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-441">Always</span></span>|<span data-ttu-id="54a4c-442">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="54a4c-442">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="54a4c-443">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-443">Always</span></span>|<span data-ttu-id="54a4c-444">列挙値の名前`eventType`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-444">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="54a4c-445">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-445">Always</span></span>|<span data-ttu-id="54a4c-446">`id` の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="54a4c-446">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="54a4c-447">Always</span><span class="sxs-lookup"><span data-stu-id="54a4c-447">Always</span></span>|<span data-ttu-id="54a4c-448">内のデータ`args`でフォーマットされている、`format`文字列および文字列変換にインバリアント カルチャを使用します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-448">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="54a4c-449">ときに、<xref:System.Diagnostics.TraceOptions.Callstack>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-449">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-450"><xref:System.Diagnostics.TraceEventCache.Callstack%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-450">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="54a4c-451">ときに、<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-451">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-452"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-452">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="54a4c-453">ときに、<xref:System.Diagnostics.TraceOptions.DateTime>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-453">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-454">文字列形式を、<xref:System.Diagnostics.TraceEventCache.DateTime%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-454">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-455">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-455">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="54a4c-456">ときに、<xref:System.Diagnostics.TraceOptions.ProcessId>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-456">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-457">文字列形式を、<xref:System.Diagnostics.TraceEventCache.ProcessId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-457">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-458">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-458">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="54a4c-459">ときに、<xref:System.Diagnostics.TraceOptions.ThreadId>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-459">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-460"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-460">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="54a4c-461">ときに、<xref:System.Diagnostics.TraceOptions.Timestamp>フラグが設定されて、<xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="54a4c-461">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="54a4c-462">文字列形式を、<xref:System.Diagnostics.TraceEventCache.Timestamp%2A>プロパティ`eventCache`です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-462">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="54a4c-463">文字列変換、インバリアント カルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-463">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="54a4c-464">ときに、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>プロパティは`True`します。</span><span class="sxs-lookup"><span data-stu-id="54a4c-464">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="54a4c-465">コンピューターの名前。</span><span class="sxs-lookup"><span data-stu-id="54a4c-465">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="54a4c-466">
            <see langword="String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-466">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="54a4c-467">書き込むカスタム メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-467">The custom message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54a4c-468">文脈情報を付加せずに、メッセージを逐一ディスクに出力します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-468">Writes a verbatim message to disk, without any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-469"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A>メソッドは、ログ ファイルは、追加のコンテキスト情報なしに、特定のメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-469">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="54a4c-470">いずれかを使用して、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>ログの出力にコンテキスト情報を含める方法です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-470">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="54a4c-471">
            <see langword="String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-471">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="54a4c-472">書き込むカスタム メッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-472">The custom message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54a4c-473">文脈情報を追加せずに、メッセージを逐一ディスクに出力します。現在行の最後に終端記号が追加されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54a4c-473">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54a4c-474"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A>メソッドは、ログ ファイルは、追加のコンテキスト情報なしに、特定のメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="54a4c-474">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="54a4c-475">いずれかを使用して、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>ログの出力にコンテキスト情報を含める方法です。</span><span class="sxs-lookup"><span data-stu-id="54a4c-475">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>