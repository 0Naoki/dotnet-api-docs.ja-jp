<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5d5c4a5ae4ffe210b4038268798670fa923f0f1" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70345851" /></Metadata><TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type FileLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e6063-101">ログ出力をファイルに転送する簡単なリスナーを提供します。</span><span class="sxs-lookup"><span data-stu-id="e6063-101">Provides a simple listener that directs logging output to file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-102">クラス<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>は、毎日またはアプリケーションごとに、必要に応じてログファイルをアーカイブするための自動化されたメンテナンス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="e6063-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="e6063-103">この自動アーカイブ機能により、開発者と管理者の責任を軽減できます。</span><span class="sxs-lookup"><span data-stu-id="e6063-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="e6063-104">の<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>インスタンスをコレクションまたは<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>コレクションに<xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType>追加して、出力をテキストファイルにリダイレクトすることができます。</span><span class="sxs-lookup"><span data-stu-id="e6063-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="e6063-105">このクラスのインスタンスは、Visual Basic アプリケーションの`My.Application.Log`また`My.Log`は (Web アプリケーションの場合) に追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="e6063-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="e6063-106">詳細については、「[チュートリアル:.Log が情報を書き込む場所の変更](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span><span class="sxs-lookup"><span data-stu-id="e6063-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span></span>  
  
 <span data-ttu-id="e6063-107">このクラスの主な特徴は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e6063-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="e6063-108">*アーカイブ機能*。</span><span class="sxs-lookup"><span data-stu-id="e6063-108">*Archival functionality*.</span></span> <span data-ttu-id="e6063-109">このクラスによって生成されるログファイルには、ベース名と日付に基づいて名前が付けられ、ログファイルを連続したバージョンのログと区別するための数値も指定されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="e6063-110">新しいログファイルは、必要に応じて作成されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="e6063-111">ファイル名の明示的な形式は`baseName`[-`dateStamp`] [-`version`] .log です。この場合、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="e6063-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="e6063-112">部分は、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>プロパティによって指定される基本的なログ名です。 `baseName`</span><span class="sxs-lookup"><span data-stu-id="e6063-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="e6063-113">この`dateStamp`部分の形式は "yyyy-mm-dd" で、が<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>または<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>の場合<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>に表示されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="e6063-114">同じ`baseName`と`dateStamp`で複数のログファイルが必要な場合は、ファイル名に正`Integer`の値が追加されます。 `version`</span><span class="sxs-lookup"><span data-stu-id="e6063-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="e6063-115">*複数のクラスインスタンス*。</span><span class="sxs-lookup"><span data-stu-id="e6063-115">*Multiple class instances*.</span></span> <span data-ttu-id="e6063-116"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスのインスタンスが、使用中のファイルに書き込みを行う場合は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="e6063-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="e6063-117">クラスは、同じプロセスで<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスの別のインスタンスによって使用されている場合に、ファイルを共有します。</span><span class="sxs-lookup"><span data-stu-id="e6063-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="e6063-118">クラスは、ファイルが別のプロセスによって使用されている場合に、次に使用可能な名前を使用して新しいログファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="e6063-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="e6063-119">*スレッドセーフ*。</span><span class="sxs-lookup"><span data-stu-id="e6063-119">*Thread safety*.</span></span> <span data-ttu-id="e6063-120"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスはスレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="e6063-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="e6063-121">これにより、ロックを使用せずに、複数のスレッドからログにメッセージを安全に書き込むことができます。</span><span class="sxs-lookup"><span data-stu-id="e6063-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="e6063-122">**ログファイルの場所**</span><span class="sxs-lookup"><span data-stu-id="e6063-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="e6063-123">プロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>は、ログ<xref:Microsoft.VisualBasic.Logging.LogFileLocation>ファイルの書き込み先となる一般的なディレクトリの1つを指定する列挙体を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="e6063-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="e6063-124">別の場所にログを書き込むには、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>プロパティをその場所に設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="e6063-125">**ログファイル名**</span><span class="sxs-lookup"><span data-stu-id="e6063-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="e6063-126">ログファイルの基本名は、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>プロパティによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="e6063-127">現在のログファイル名は、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>プロパティから読み取ることができます。</span><span class="sxs-lookup"><span data-stu-id="e6063-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="e6063-128">これは、他のいくつかのプロパティと、ファイルシステム内のログの現在の状態から派生します。</span><span class="sxs-lookup"><span data-stu-id="e6063-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="e6063-129">**ログのメンテナンス**</span><span class="sxs-lookup"><span data-stu-id="e6063-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="e6063-130">新しいログファイルを作成する頻度の最小値は、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>プロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="e6063-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="e6063-131">値が<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>または<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>の場合は、新しいログファイルが1日または1週間に1回以上作成され、その<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名前に日付スタンプが組み込まれます。</span><span class="sxs-lookup"><span data-stu-id="e6063-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="e6063-132">ログファイルの最大サイズ (バイト単位) は、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>プロパティによって決まります。</span><span class="sxs-lookup"><span data-stu-id="e6063-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="e6063-133">ログファイルのサイズがこのサイズを超えると、ログに書き込まれた追加のメッセージは破棄さ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>れ、プロパティによっては例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e6063-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="e6063-134">プロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>は、使用可能な空き領域のサイズ (バイト単位) を決定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="e6063-135">これにより、使用<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>可能なすべてのディスク領域をクラスで使用しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="e6063-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="e6063-136">プロパティを使用して、空き<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>バイト数が不足している場合のログ書き込みの動作を指定します。 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="e6063-137">**ログファイルの出力設定**</span><span class="sxs-lookup"><span data-stu-id="e6063-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="e6063-138">プロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A>は、ログファイルへの書き込みのたびに、基になるストリームを自動的にフラッシュするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="e6063-139">プロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>は、メッセージを現在のログファイルに追加するか (許可されている場合)、新しいログファイルに書き込むかを指定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="e6063-140">プロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>は、ログメッセージ内のフィールドを区切るために使用する文字列を指定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="e6063-141">プロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>は、新しいログファイルを作成するときに使用するエンコーディングを指定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="e6063-142">**ログファイルの出力**</span><span class="sxs-lookup"><span data-stu-id="e6063-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="e6063-143">メソッド<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> と<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>メソッドは、ログファイルにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="e6063-144">これらのメソッドは<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> 、新しいログを作成する必要があるかどうかを判断するために、同じ基本名を持つ既存のログと共に、プロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="e6063-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="e6063-145">メソッド<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>は、出力バッファー内の現在のすべてのメッセージをログファイルにフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="e6063-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="e6063-146">メソッド<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>は、他のプロセスで使用できるようにログファイルを閉じます。</span><span class="sxs-lookup"><span data-stu-id="e6063-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="e6063-147">**出力の有効化**</span><span class="sxs-lookup"><span data-stu-id="e6063-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="e6063-148">トレースリスナーを使用するには、トレースまたはデバッグを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e6063-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="e6063-149">次の構文はコンパイラ固有です。</span><span class="sxs-lookup"><span data-stu-id="e6063-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="e6063-150">または Visual Basic 以外C#のコンパイラを使用する場合は、コンパイラのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e6063-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="e6063-151">でC#デバッグを有効にするに`/d:DEBUG`は、コードのコンパイル時にコンパイラのコマンドラインにフラグを追加する`#define DEBUG`か、ファイルの先頭にを追加します。</span><span class="sxs-lookup"><span data-stu-id="e6063-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="e6063-152">Visual Basic で、コンパイラの`/d:DEBUG=True`コマンドラインにフラグを追加します。</span><span class="sxs-lookup"><span data-stu-id="e6063-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="e6063-153">でC#トレースを有効にするに`/d:TRACE`は、コードをコンパイルするときにコンパイラのコマンドラインにフラグ`#define TRACE`を追加するか、ファイルの先頭にを追加します。</span><span class="sxs-lookup"><span data-stu-id="e6063-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="e6063-154">Visual Basic で、コンパイラの`/d:TRACE=True`コマンドラインにフラグを追加します。</span><span class="sxs-lookup"><span data-stu-id="e6063-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="e6063-155">リスナーのレベルを設定するには、アプリケーションの構成ファイルを編集します。</span><span class="sxs-lookup"><span data-stu-id="e6063-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="e6063-156">このファイル内で、リスナーを追加したり、その型を設定したり、パラメーターを設定したり、リスナーを削除したり、アプリケーションによって以前に設定されたすべてのリスナーをクリアしたりできます。</span><span class="sxs-lookup"><span data-stu-id="e6063-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="e6063-157">構成ファイルは、次の例のように書式設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e6063-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="e6063-158">この例を実行するには、完全修飾アセンブリ名を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e6063-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="e6063-159">完全修飾アセンブリ名を取得する方法については、「[アセンブリ名](~/docs/framework/app-domains/assembly-names.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e6063-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
    <related type="Article" href="https://msdn.microsoft.com/library/ecc74f95-743c-450d-93f6-09a30db0fe4a"><span data-ttu-id="e6063-160">チュートリアル: My.Application.Log による情報の書き込み先の変更</span><span class="sxs-lookup"><span data-stu-id="e6063-160">Walkthrough: Changing Where My.Application.Log Writes Information</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6063-161"><see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化し、その名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6063-162">既定の名前を使用して、<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e6063-162">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-163">このメソッドは、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスのインスタンス名を microsoft.visualbasic.logging.filelogtracelistener に設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-163">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="e6063-164">インスタンス名には、プロパティを<xref:System.Diagnostics.TraceListener.Name%2A>使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="e6063-164">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e6063-165">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e6063-165">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.FileLogTraceListener : string -&gt; Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="new Microsoft.VisualBasic.Logging.FileLogTraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="e6063-166"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-166"><see langword="String" />.</span></span> <span data-ttu-id="e6063-167">インスタンス オブジェクトの名前。</span><span class="sxs-lookup"><span data-stu-id="e6063-167">The name of the instance object.</span></span></param>
        <summary><span data-ttu-id="e6063-168">指定された名前を使用して、<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e6063-168">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-169">このメソッドは、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスのインスタンス名をに`name`設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-169">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="e6063-170">インスタンス名には、プロパティを<xref:System.Diagnostics.TraceListener.Name%2A>使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="e6063-170">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="e6063-171">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="e6063-171">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Append : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-172">現在のファイルに追記するか、新しいファイルに出力するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-172">Determines whether to append the output to the current file or write it to a new file.</span></span></summary>
        <value><span data-ttu-id="e6063-173"><see langword="Boolean" /> 値。現在のファイルに追記する場合は <see langword="True" />。新しいファイルに出力する場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-173"><see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span></span> <span data-ttu-id="e6063-174">このプロパティの既定の設定は <see langword="True" /> です。</span><span class="sxs-lookup"><span data-stu-id="e6063-174">The default setting for this property is <see langword="True" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-175"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A>プロパティが`False`の場合、出力は新しいファイルに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="e6063-175">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file.</span></span> <span data-ttu-id="e6063-176">プロパティが`True`の場合、次の場合を除き、出力は現在のファイルに追加されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-176">When the property is `True`, the output is appended to the current file, unless:</span></span>  
  
-   <span data-ttu-id="e6063-177">出力ファイルは別のプロセスによってロックされています。</span><span class="sxs-lookup"><span data-stu-id="e6063-177">The output file is locked by another process.</span></span> <span data-ttu-id="e6063-178">この場合、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名前に組み込まれているバージョン番号を使用して新しいログファイルが作成されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-178">In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="e6063-179">現在のファイルサイズが、プロパティで許可<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>されている値を超えています。</span><span class="sxs-lookup"><span data-stu-id="e6063-179">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span> <span data-ttu-id="e6063-180">この状況では、追加のメッセージは破棄され、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>プロパティによっては例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e6063-180">In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="e6063-181"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>プロパティで指定されたログ作成スケジュールに従って、既存のファイル名が最新ではありません。</span><span class="sxs-lookup"><span data-stu-id="e6063-181">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="e6063-182">この状況では、新しいログファイルが作成され、その<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>名前に日付スタンプが組み込まれます。</span><span class="sxs-lookup"><span data-stu-id="e6063-182">In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-183">ログ ファイル ストリームに書き込むたびに、バッファーをフラッシュするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="e6063-183">Indicates whether or not the writing to the log file stream flushes the buffer.</span></span></summary>
        <value><span data-ttu-id="e6063-184"><see langword="Boolean" /> 値。書き込みのたびにストリームがフラッシュされる場合は <see langword="True" />。それ以外の場合、ログ エントリはバッファーに格納されて、より効率よく出力されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-184"><see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span></span> <span data-ttu-id="e6063-185">このプロパティの既定の設定は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="e6063-185">The default setting for this property is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-186">プロパティの設定は`False` 、多くのアプリケーションに対して最適なパフォーマンスを提供します。これは、ログファイルに複数のメッセージを一度に書き込む方が効率的であるためです。 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-186">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="e6063-187"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>メソッドを使用して、ログファイルの出力バッファーに現在格納されているすべてのメッセージをフラッシュすることができます。</span><span class="sxs-lookup"><span data-stu-id="e6063-187">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="e6063-188"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A>メソッドを使用することもできます。このメソッドは、ログファイルを閉じる前にストリームを暗黙的にフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="e6063-188">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseFileName : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-189">ログ ファイルの基本名を取得または設定します。ログ ファイルの完全名を生成するときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-189">Gets or sets the base name for the log files, which is used to create the full log-file name.</span></span></summary>
        <value><span data-ttu-id="e6063-190"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-190"><see langword="String" />.</span></span> <span data-ttu-id="e6063-191">ログ ファイルの基本名。</span><span class="sxs-lookup"><span data-stu-id="e6063-191">The base name for the log files.</span></span> <span data-ttu-id="e6063-192">既定では、アプリケーションの製品名になります。</span><span class="sxs-lookup"><span data-stu-id="e6063-192">The default is the application's product name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-193">プロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>は、クラスが<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>書き込むログファイルの基本名を決定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-193">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="e6063-194">プロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>は、現在の完全なログファイル名を示します。</span><span class="sxs-lookup"><span data-stu-id="e6063-194">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="e6063-195">ログのパス、基本名、日付、および異なるバージョンのログと区別するための数値に基づいて生成されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-195">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="e6063-196">新しいログファイルは、必要に応じて作成されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-196">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="e6063-197">完全なログファイル名の明示的な形式`path`は\\ `baseName`[`dateStamp`-] [`iteration`-] .log です。ここで、</span><span class="sxs-lookup"><span data-stu-id="e6063-197">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="e6063-198">パーツはプロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>によって決定され、プロパティ値<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>がに<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>設定されている場合はプロパティになります。 `path`</span><span class="sxs-lookup"><span data-stu-id="e6063-198">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="e6063-199">部分は、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>プロパティによって指定される基本的なログ名です。 `baseName`</span><span class="sxs-lookup"><span data-stu-id="e6063-199">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="e6063-200">この`dateStamp`部分の形式は "yyyy-mm-dd" で、がまたは<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>に<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>設定されて<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>いる場合に表示されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-200">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="e6063-201">同じ`baseName`と`dateStamp`で複数のログファイルが必要な場合は、ファイル名に正`Integer`の値が追加されます。 `iteration`</span><span class="sxs-lookup"><span data-stu-id="e6063-201">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void Close() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="fileLogTraceListener.Close " />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6063-202">現在のログ ファイルに使用されているストリームを閉じ、現在のストリームに関連付けられたすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="e6063-202">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-203">クラスは<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>基になるストリームを管理するため、メソッドを明示的に呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="e6063-203">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomLocation : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-204"><see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> プロパティが <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" /> に設定されている場合に、ログ ファイルのディレクトリを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-204">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span></span></summary>
        <value><span data-ttu-id="e6063-205">ログ ファイルのディレクトリ名を表す <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-205"><see langword="String" />, which is the name of the log-file directory.</span></span> <span data-ttu-id="e6063-206">このプロパティの既定の設定は、アプリケーション データ用のユーザー ディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="e6063-206">The default setting for this property is the user's directory for application data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-207">プロパティが設定されている場合は、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>プロパティも<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>に設定されます。 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-207">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="e6063-208">ディレクトリを解決できない場合、プロパティは例外をスローします。<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-208">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-209">ログ メッセージに使用されているフィールド区切り記号を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-209">Gets or sets the delimiter used to delimit fields within a log message.</span></span></summary>
        <value><span data-ttu-id="e6063-210">ログ メッセージのフィールド区切り記号を表す <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-210"><see langword="String" />, which is the delimiter used for fields within a log message.</span></span> <span data-ttu-id="e6063-211">このプロパティの既定の設定はタブ文字です。</span><span class="sxs-lookup"><span data-stu-id="e6063-211">The default setting for this property is the TAB character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-212"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティを使用すると、既定の区切り記号を変更できます。</span><span class="sxs-lookup"><span data-stu-id="e6063-212">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberSignature Language="F#" Value="member this.DiskSpaceExhaustedBehavior : Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-213">ログ ファイルへの出力時に、空きディスク容量が <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> プロパティに指定された値を下回っていた場合の動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-213">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span></span></summary>
        <value><span data-ttu-id="e6063-214"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-214"><see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span></span> <span data-ttu-id="e6063-215">ログ ファイルへの出力時に、空きディスク容量が <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> プロパティに指定された値を下回っていた場合、または、ログ ファイルのサイズが <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> プロパティの値を超えていた場合の動作を決定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-215">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span></span> <span data-ttu-id="e6063-216">既定値は <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" /> です。</span><span class="sxs-lookup"><span data-stu-id="e6063-216">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-217">プロパティがに<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>設定されている場合、予約済みのディスク領域が不足していると、ログメッセージは警告なしに破棄されます。 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-217">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="e6063-218">これは既定の動作であり、ディスクがいっぱいになった場合に単純なアプリケーションが失敗するのを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="e6063-218">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="e6063-219">より堅牢なアプリケーションでは<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> 、プロパティ<xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>をに設定`Try...Catch`し、ログに書き込むすべてのコードの周囲にブロックを追加することができます。</span><span class="sxs-lookup"><span data-stu-id="e6063-219">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="fileLogTraceListener.Dispose disposing" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="e6063-220">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="True" />。アンマネージド リソースだけを解放する場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-220"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="e6063-221">使用しているストリームを閉じ、選択されたオプションに従って、マネージド リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="e6063-221">Closes the underlying stream and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-222">`disposing` パラメーターが `True` の場合、このメソッドは、この <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="e6063-222">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="e6063-223">このメソッドは、参照される各オブジェクトの `Dispose` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e6063-223">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e6063-224">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e6063-224">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="e6063-225"><see langword="Dispose" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e6063-225">When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span>  
  
<span data-ttu-id="e6063-226">このメソッドは<see langword="Dispose" /> 、基本クラスのメソッドを<see langword="Dispose" />呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e6063-226">This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-227">新しいログ ファイルを作成する際に使用するエンコーディングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-227">Gets or sets the encoding to use when creating a new log file.</span></span></summary>
        <value><span data-ttu-id="e6063-228">新しいログ ファイルを作成する際のエンコーディングを表す <see cref="T:System.Text.Encoding" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-228"><see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span></span> <span data-ttu-id="e6063-229">このプロパティの既定値は <see cref="T:System.Text.UTF8Encoding" /> です。</span><span class="sxs-lookup"><span data-stu-id="e6063-229">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-230">既存のログファイルにテキストを追加すると、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A>プロパティによって指定されたエンコーディングではなく、そのファイルのエンコーディングが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-230">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void Flush() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="fileLogTraceListener.Flush " />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6063-231">現在のログ ファイルへの書き込みに使用しているストリームをフラッシュします。</span><span class="sxs-lookup"><span data-stu-id="e6063-231">Flushes the underlying stream that writes to the current log file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-232"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A>メソッドを使用して、バッファー内のすべてのデータを現在のログファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-232">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullLogFileName : string" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-233">現在のログ ファイルの完全名を取得します。</span><span class="sxs-lookup"><span data-stu-id="e6063-233">Gets the current full log-file name.</span></span></summary>
        <value><span data-ttu-id="e6063-234">現在のログ ファイルの完全名を表す <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-234"><see langword="String" />, which is the current full log-file name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-235">プロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>は、現在の完全なログファイル名を示します。</span><span class="sxs-lookup"><span data-stu-id="e6063-235">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="e6063-236">ログのパス、基本名、日付、および異なるバージョンのログと区別するための数値に基づいて生成されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-236">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="e6063-237">新しいログファイルは、必要に応じて作成されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-237">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="e6063-238">完全なログファイル名の明示的な形式は`path` \\ `baseName`[-`dateStamp`] [-`iteration`] .log です。この場合、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="e6063-238">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="e6063-239">パーツはプロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A>によって決定され、プロパティ値<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>がに<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>設定されている場合はプロパティになります。 `path`</span><span class="sxs-lookup"><span data-stu-id="e6063-239">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="e6063-240">部分は、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A>プロパティによって指定される基本的なログ名です。 `baseName`</span><span class="sxs-lookup"><span data-stu-id="e6063-240">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="e6063-241">この`dateStamp`部分の形式は yyyy-mm-dd で、が<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>または<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>の場合<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>に表示されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-241">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="e6063-242">同じ`baseName`と`dateStamp`で複数のログファイルが必要な場合は、ファイル名に正`Integer`の値が追加されます。 `iteration`</span><span class="sxs-lookup"><span data-stu-id="e6063-242">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyvirtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="fileLogTraceListener.GetSupportedAttributes " />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6063-243">トレース リスナーによってサポートされるカスタムの XML 構成属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="e6063-243">Gets the custom XML configuration attributes supported by the trace listener.</span></span></summary>
        <returns><span data-ttu-id="e6063-244">このリスナーで認識可能な XML 構成属性を保持する <see langword="String" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="e6063-244"><see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-245">のカスタム属性<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>は、XML 構成ファイルで<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>クラスのインスタンスの動作を制御するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="e6063-245">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="e6063-246">他の属性を使用すると、構成の例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="e6063-246">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostName : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-247">ログを記録しているコンピューターのホスト名を出力に含めるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="e6063-247">Indicates whether or not the host name of the logging machine should be included in the output.</span></span></summary>
        <value><span data-ttu-id="e6063-248"><see langword="Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-248"><see langword="Boolean" />.</span></span> <span data-ttu-id="e6063-249">ホストの識別子を含める場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-249">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span></span> <span data-ttu-id="e6063-250">既定値は <see langword="False" /> です。</span><span class="sxs-lookup"><span data-stu-id="e6063-250">The default value is <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-251">プロパティを使用して、メソッド<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>と<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>メソッドの動作を構成します。</span><span class="sxs-lookup"><span data-stu-id="e6063-251">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.VisualBasic.Logging.LogFileLocation with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-252">ログ ファイルの場所を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-252">Gets or sets location for the log files.</span></span></summary>
        <value><span data-ttu-id="e6063-253">ログ ファイルの場所を表す <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-253"><see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span></span> <span data-ttu-id="e6063-254">既定値は <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" /> です。</span><span class="sxs-lookup"><span data-stu-id="e6063-254">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-255">プロパティを使用し<xref:Microsoft.VisualBasic.Logging.LogFileLocation>て、定義済みのパスのいずれかにログパスを設定します。列挙値によって決定されます。 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-255">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="e6063-256">**場所の値**</span><span class="sxs-lookup"><span data-stu-id="e6063-256">**Location value**</span></span>|<span data-ttu-id="e6063-257">**パス**</span><span class="sxs-lookup"><span data-stu-id="e6063-257">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="e6063-258">すべてのユーザー間で共有されるアプリケーションデータのパス。次の形式で指定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-258">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="e6063-259">の`BasePath`一般的な値は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e6063-259">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="e6063-260">C:\documents and および Settings\All Users\Application データ</span><span class="sxs-lookup"><span data-stu-id="e6063-260">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="e6063-261">、 `CompanyName` 、`ProductName`およびの値は、アセンブリから取得`ProductVersion`されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-261">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="e6063-262">アプリケーションを開始した実行可能ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="e6063-262">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="e6063-263">ユーザーのアプリケーションデータのパス。次の形式で指定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-263">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="e6063-264">の`BasePath`一般的な値は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e6063-264">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="e6063-265">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="e6063-265">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="e6063-266">、 `CompanyName` 、`ProductName`およびの値は、アセンブリを`ProductVersion`形成します。</span><span class="sxs-lookup"><span data-stu-id="e6063-266">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="e6063-267">現在のシステムの一時フォルダーのパス。</span><span class="sxs-lookup"><span data-stu-id="e6063-267">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="e6063-268">によって<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A>指定された文字列が空でない場合は、パスとして使用します。それ以外の場合は、ユーザーのアプリケーションデータのパスを使用します。</span><span class="sxs-lookup"><span data-stu-id="e6063-268">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileCreationSchedule : Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-269">ログ ファイルの名前に追加する日付を決定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-269">Determines which date to include in the names of the log files.</span></span></summary>
        <value><span data-ttu-id="e6063-270"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-270"><see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span></span> <span data-ttu-id="e6063-271">ログ ファイルの名前に追加される日付を示します。</span><span class="sxs-lookup"><span data-stu-id="e6063-271">This indicates which date to include in the log-file names.</span></span> <span data-ttu-id="e6063-272">既定値は <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="e6063-272">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-273"><xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption>列挙値の1つを<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A>プロパティに割り当てて、ログファイルの名前に含める日付を指定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-273">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="e6063-274">日付の形式は YYYY-MM-DD です。</span><span class="sxs-lookup"><span data-stu-id="e6063-274">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="e6063-275">ログファイル名の形式の詳細については、「 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e6063-275">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="e6063-276">**LogFileCreationSchedule 値**</span><span class="sxs-lookup"><span data-stu-id="e6063-276">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="e6063-277">**ログファイル名の日付**</span><span class="sxs-lookup"><span data-stu-id="e6063-277">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="e6063-278">ログ ファイルの名前に現在の日付を追加します。</span><span class="sxs-lookup"><span data-stu-id="e6063-278">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="e6063-279">ログ ファイルの名前に日付を追加しません。</span><span class="sxs-lookup"><span data-stu-id="e6063-279">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="e6063-280">現在の週の最初の曜日をログ ファイルの名前に追加します。</span><span class="sxs-lookup"><span data-stu-id="e6063-280">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="e6063-281">週は土曜日に始まります。</span><span class="sxs-lookup"><span data-stu-id="e6063-281">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxFileSize : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-282">ログ ファイルの最大サイズ (バイト単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-282">Gets or sets the maximum allowed size of the log file, in bytes.</span></span></summary>
        <value><span data-ttu-id="e6063-283"><see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-283"><see langword="Long" />.</span></span> <span data-ttu-id="e6063-284">ログ ファイルの最大サイズ (バイト単位) を表します。</span><span class="sxs-lookup"><span data-stu-id="e6063-284">This is the maximum allowed log-file size, in bytes.</span></span> <span data-ttu-id="e6063-285">既定値は500万です。</span><span class="sxs-lookup"><span data-stu-id="e6063-285">The default value is 5000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-286">このプロパティを使用して、ログファイルが大きくなっていないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="e6063-286">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="e6063-287">ログファイルのサイズ (バイト単位) がこのプロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>の値よりも大きい場合、クラスがログにメッセージを書き込もうとすると、メッセージは破棄され、エラーがサイレントになるか、またはの<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>値に応じて例外がスローされます。プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-287">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="e6063-288">それ以外の場合は、空きディスク領域の容量 (バイト単位) が<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>未満の場合、メッセージがログに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="e6063-288">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e6063-289">このプロパティが、1000 未満の値に設定されている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="e6063-289">When this property is set to a value less than 1000.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ReserveDiskSpace : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e6063-290">確保する空きディスク容量 (バイト単位) を取得または設定します。この容量を下回ると、ログ ファイルにメッセージを出力できなくなります。</span><span class="sxs-lookup"><span data-stu-id="e6063-290">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span></span></summary>
        <value><span data-ttu-id="e6063-291"><see langword="Long" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-291"><see langword="Long" />.</span></span> <span data-ttu-id="e6063-292">必要な空きディスク容量を表します。</span><span class="sxs-lookup"><span data-stu-id="e6063-292">This is the amount of free disk space necessary.</span></span> <span data-ttu-id="e6063-293">既定値は1000万です。</span><span class="sxs-lookup"><span data-stu-id="e6063-293">The default value is 10000000.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-294">このプロパティを使用して、ログファイルがディスクに完全に格納されないようにします。</span><span class="sxs-lookup"><span data-stu-id="e6063-294">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="e6063-295">空きディスク領域の容量 (バイト単位) がこのプロパティ<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>の値よりも小さい場合、クラスがログにメッセージを書き込もうとすると、メッセージは破棄され、エラーはサイレントになるか、または次の値に応じて例外がスローされます。c2 > <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-295">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="e6063-296">それ以外の場合は、ログファイルのサイズ (バイト単位) が<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>を超えると、メッセージがログに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="e6063-296">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e6063-297">このプロパティが 0 未満の値に設定されている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="e6063-297">When this property is set to a value less than 0.</span></span></exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6063-298">出力ファイルにトレース データを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-298">Writes trace data to the output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-299"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>メソッドは、アプリケーションコードから呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="e6063-299"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="e6063-300">これらのメソッドは<xref:System.Diagnostics.Debug>、、、および<xref:System.Diagnostics.TraceSource>クラス<xref:System.Diagnostics.Trace>のメンバーによって、出力するトレースデータを書き込むために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-300">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="e6063-301">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e6063-301">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="e6063-302">このメソッドを呼び出したトレース ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="e6063-302">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="e6063-303"><see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="e6063-303">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="e6063-304">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="e6063-304">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="e6063-305">出力するトレース データ。</span><span class="sxs-lookup"><span data-stu-id="e6063-305">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="e6063-306">トレース情報、データ オブジェクト、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-306">Writes trace information, a data object, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-307">このメソッドは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e6063-307">This method:</span></span>  
  
1.  <span data-ttu-id="e6063-308">出力のデータとコンテキスト情報を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-308">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="e6063-309">必要に応じて、新しいログファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="e6063-309">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="e6063-310">ログファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-310">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="e6063-311">新しいログファイルの作成の詳細について<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>は、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e6063-311">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="e6063-312">次の表に、出力フィールドの表示順の一覧を示します。</span><span class="sxs-lookup"><span data-stu-id="e6063-312">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="e6063-313">フィールドは、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティによって指定された文字列によって区切られ、その後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="e6063-313">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="e6063-314">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="e6063-314">**Field**</span></span>|<span data-ttu-id="e6063-315">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="e6063-315">**Output condition**</span></span>|<span data-ttu-id="e6063-316">**説明**</span><span class="sxs-lookup"><span data-stu-id="e6063-316">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="e6063-317">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-317">Always</span></span>|<span data-ttu-id="e6063-318">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="e6063-318">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="e6063-319">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-319">Always</span></span>|<span data-ttu-id="e6063-320">の`eventType`列挙値の名前。</span><span class="sxs-lookup"><span data-stu-id="e6063-320">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="e6063-321">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-321">Always</span></span>|<span data-ttu-id="e6063-322">`id` の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-322">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="e6063-323">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-323">Always</span></span>|<span data-ttu-id="e6063-324">`data` の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-324">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="e6063-325">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.Callstack>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-325">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-326"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-326">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="e6063-327">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-327">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-328"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-328">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="e6063-329">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.DateTime>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-329">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-330"><xref:System.Diagnostics.TraceEventCache.DateTime%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-330">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-331">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-331">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="e6063-332">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.ProcessId>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-332">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-333"><xref:System.Diagnostics.TraceEventCache.ProcessId%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-333">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-334">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-334">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="e6063-335">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.ThreadId>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-335">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-336"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-336">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="e6063-337">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.Timestamp>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-337">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-338"><xref:System.Diagnostics.TraceEventCache.Timestamp%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-338">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-339">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-339">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="e6063-340"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>プロパティが`True`の場合。</span><span class="sxs-lookup"><span data-stu-id="e6063-340">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="e6063-341">コンピューターの名前です。</span><span class="sxs-lookup"><span data-stu-id="e6063-341">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="e6063-342">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e6063-342">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="e6063-343">このメソッドを呼び出したトレース ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="e6063-343">The name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="e6063-344"><see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="e6063-344">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="e6063-345">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="e6063-345">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="e6063-346">データとして出力するオブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="e6063-346">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="e6063-347">トレース情報、データ オブジェクトの配列、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-347">Writes trace information, an array of data objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-348">このメソッドは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e6063-348">This method:</span></span>  
  
1.  <span data-ttu-id="e6063-349">出力のデータとコンテキスト情報の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-349">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="e6063-350">必要に応じて、新しいログファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="e6063-350">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="e6063-351">ログファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-351">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="e6063-352">新しいログファイルの作成の詳細について<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>は、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e6063-352">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="e6063-353">次の表に、出力フィールドの表示順序を示します。</span><span class="sxs-lookup"><span data-stu-id="e6063-353">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="e6063-354">フィールドは、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティによって指定された文字列によって区切られ、その後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="e6063-354">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="e6063-355">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="e6063-355">**Field**</span></span>|<span data-ttu-id="e6063-356">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="e6063-356">**Output condition**</span></span>|<span data-ttu-id="e6063-357">**説明**</span><span class="sxs-lookup"><span data-stu-id="e6063-357">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="e6063-358">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-358">Always</span></span>|<span data-ttu-id="e6063-359">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="e6063-359">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="e6063-360">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-360">Always</span></span>|<span data-ttu-id="e6063-361">の`eventType`列挙値の名前。</span><span class="sxs-lookup"><span data-stu-id="e6063-361">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="e6063-362">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-362">Always</span></span>|<span data-ttu-id="e6063-363">`id` の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-363">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="e6063-364">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-364">Always</span></span>|<span data-ttu-id="e6063-365">内`data`の各要素の文字列形式で構成される文字列<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>。各要素はで区切られます。</span><span class="sxs-lookup"><span data-stu-id="e6063-365">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="e6063-366">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.Callstack>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-366">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-367"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-367">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="e6063-368">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-368">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-369"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-369">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="e6063-370">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.DateTime>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-370">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-371"><xref:System.Diagnostics.TraceEventCache.DateTime%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-371">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-372">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-372">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="e6063-373">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.ProcessId>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-373">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-374"><xref:System.Diagnostics.TraceEventCache.ProcessId%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-374">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-375">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-375">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="e6063-376">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.ThreadId>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-376">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-377"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-377">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="e6063-378">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.Timestamp>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-378">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-379"><xref:System.Diagnostics.TraceEventCache.Timestamp%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-379">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-380">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-380">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="e6063-381"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>プロパティが`True`の場合。</span><span class="sxs-lookup"><span data-stu-id="e6063-381">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="e6063-382">コンピューターの名前です。</span><span class="sxs-lookup"><span data-stu-id="e6063-382">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6063-383">トレース情報とイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-383">Writes trace and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-384"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A>メソッドは、アプリケーションコードから呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="e6063-384"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="e6063-385">これらのメソッドは<xref:System.Diagnostics.Debug>、、、および<xref:System.Diagnostics.TraceSource>クラス<xref:System.Diagnostics.Trace>のメンバーによって、出力するトレースデータを書き込むために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-385">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="e6063-386">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e6063-386">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="e6063-387">このメソッドを呼び出したトレース ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="e6063-387">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="e6063-388"><see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="e6063-388">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="e6063-389">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="e6063-389">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="e6063-390">書き込むメッセージ。</span><span class="sxs-lookup"><span data-stu-id="e6063-390">A message to write.</span></span></param>
        <summary><span data-ttu-id="e6063-391">トレース情報、メッセージ、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-391">Writes trace information, a message and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-392">このメソッドは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e6063-392">This method:</span></span>  
  
1.  <span data-ttu-id="e6063-393">出力のデータとコンテキスト情報を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-393">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="e6063-394">必要に応じて、新しいログファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="e6063-394">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="e6063-395">ログファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-395">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="e6063-396">新しいログファイルの作成の詳細について<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>は、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e6063-396">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="e6063-397">次の表は、出力フィールドの表示順を示しています。</span><span class="sxs-lookup"><span data-stu-id="e6063-397">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="e6063-398">フィールドは、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティによって指定された文字列によって区切られ、その後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="e6063-398">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="e6063-399">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="e6063-399">**Field**</span></span>|<span data-ttu-id="e6063-400">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="e6063-400">**Output condition**</span></span>|<span data-ttu-id="e6063-401">**説明**</span><span class="sxs-lookup"><span data-stu-id="e6063-401">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="e6063-402">常に。</span><span class="sxs-lookup"><span data-stu-id="e6063-402">Always.</span></span>|<span data-ttu-id="e6063-403">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="e6063-403">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="e6063-404">常に。</span><span class="sxs-lookup"><span data-stu-id="e6063-404">Always.</span></span>|<span data-ttu-id="e6063-405">の`eventType`列挙値の名前。</span><span class="sxs-lookup"><span data-stu-id="e6063-405">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="e6063-406">常に。</span><span class="sxs-lookup"><span data-stu-id="e6063-406">Always.</span></span>|<span data-ttu-id="e6063-407">`id` の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-407">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="e6063-408">常に。</span><span class="sxs-lookup"><span data-stu-id="e6063-408">Always.</span></span>|<span data-ttu-id="e6063-409">`message` の値。</span><span class="sxs-lookup"><span data-stu-id="e6063-409">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="e6063-410">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.Callstack>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-410">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-411"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-411">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="e6063-412">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-412">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-413"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-413">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="e6063-414">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.DateTime>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-414">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-415"><xref:System.Diagnostics.TraceEventCache.DateTime%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-415">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-416">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-416">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="e6063-417">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.ProcessId>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-417">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-418"><xref:System.Diagnostics.TraceEventCache.ProcessId%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-418">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-419">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-419">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="e6063-420">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.ThreadId>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-420">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-421"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-421">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="e6063-422">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.Timestamp>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-422">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-423"><xref:System.Diagnostics.TraceEventCache.Timestamp%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-423">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-424">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-424">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="e6063-425"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>プロパティが`True`の場合。</span><span class="sxs-lookup"><span data-stu-id="e6063-425">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="e6063-426">コンピューターの名前です。</span><span class="sxs-lookup"><span data-stu-id="e6063-426">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="e6063-427">現在のプロセス ID、スレッド ID、およびスタック トレース情報を格納している <see cref="T:System.Diagnostics.TraceEventCache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e6063-427">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="e6063-428">このメソッドを呼び出したトレース ソースの名前。</span><span class="sxs-lookup"><span data-stu-id="e6063-428">A name of the trace source that invoked this method.</span></span></param>
        <param name="eventType"><span data-ttu-id="e6063-429"><see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="e6063-429">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></param>
        <param name="id"><span data-ttu-id="e6063-430">イベントの数値識別子。</span><span class="sxs-lookup"><span data-stu-id="e6063-430">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="e6063-431">0 個以上の書式項目を格納している書式指定文字列。<paramref name="args" /> 配列内のオブジェクトに対応します。</span><span class="sxs-lookup"><span data-stu-id="e6063-431">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="e6063-432">0 個以上の書式設定対象オブジェクトを含んだ <see langword="Object" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="e6063-432">An <see langword="Object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="e6063-433">トレース情報、書式設定されたオブジェクトの配列、およびイベント情報を出力ファイルまたはストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-433">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-434">このメソッドは次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="e6063-434">This method:</span></span>  
  
1.  <span data-ttu-id="e6063-435">出力のデータとコンテキスト情報を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="e6063-435">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="e6063-436">必要に応じて、新しいログファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="e6063-436">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="e6063-437">ログファイルに情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-437">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="e6063-438">新しいログファイルの作成の詳細について<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>は、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e6063-438">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="e6063-439">次の表は、出力フィールドの表示順を示しています。</span><span class="sxs-lookup"><span data-stu-id="e6063-439">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="e6063-440">フィールドは、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>プロパティによって指定された文字列によって区切られ、その後に行終端記号が続きます。</span><span class="sxs-lookup"><span data-stu-id="e6063-440">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="e6063-441">**フィールド**</span><span class="sxs-lookup"><span data-stu-id="e6063-441">**Field**</span></span>|<span data-ttu-id="e6063-442">**出力条件**</span><span class="sxs-lookup"><span data-stu-id="e6063-442">**Output condition**</span></span>|<span data-ttu-id="e6063-443">**説明**</span><span class="sxs-lookup"><span data-stu-id="e6063-443">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="e6063-444">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-444">Always</span></span>|<span data-ttu-id="e6063-445">`name` の値。</span><span class="sxs-lookup"><span data-stu-id="e6063-445">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="e6063-446">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-446">Always</span></span>|<span data-ttu-id="e6063-447">の`eventType`列挙値の名前。</span><span class="sxs-lookup"><span data-stu-id="e6063-447">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="e6063-448">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-448">Always</span></span>|<span data-ttu-id="e6063-449">`id` の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-449">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="e6063-450">Always</span><span class="sxs-lookup"><span data-stu-id="e6063-450">Always</span></span>|<span data-ttu-id="e6063-451">文字列を使用`args`して書式`format`設定され、文字列変換にインバリアントカルチャを使用するデータ。</span><span class="sxs-lookup"><span data-stu-id="e6063-451">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="e6063-452">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.Callstack>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-452">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-453"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-453">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="e6063-454">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.LogicalOperationStack>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-454">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-455"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-455">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="e6063-456">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.DateTime>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-456">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-457"><xref:System.Diagnostics.TraceEventCache.DateTime%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-457">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-458">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-458">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="e6063-459">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.ProcessId>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-459">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-460"><xref:System.Diagnostics.TraceEventCache.ProcessId%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-460">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-461">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-461">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="e6063-462">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.ThreadId>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-462">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-463"><xref:System.Diagnostics.TraceEventCache.ThreadId%2A> の`eventCache`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e6063-463">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="e6063-464">プロパティでフラグが設定されて<xref:System.Diagnostics.TraceOptions.Timestamp>いる場合。 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A></span><span class="sxs-lookup"><span data-stu-id="e6063-464">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="e6063-465"><xref:System.Diagnostics.TraceEventCache.Timestamp%2A> の`eventCache`プロパティの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="e6063-465">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="e6063-466">文字列変換には、インバリアントカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-466">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="e6063-467"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A>プロパティが`True`の場合。</span><span class="sxs-lookup"><span data-stu-id="e6063-467">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="e6063-468">コンピューターの名前です。</span><span class="sxs-lookup"><span data-stu-id="e6063-468">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="fileLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e6063-469"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-469"><see langword="String" />.</span></span> <span data-ttu-id="e6063-470">書き込むカスタム メッセージ。</span><span class="sxs-lookup"><span data-stu-id="e6063-470">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="e6063-471">文脈情報を付加せずに、メッセージを逐一ディスクに出力します。</span><span class="sxs-lookup"><span data-stu-id="e6063-471">Writes a verbatim message to disk, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-472">メソッド<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A>は、コンテキスト情報を追加せずに、特定のメッセージをログファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-472">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="e6063-473"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>メソッドのいずれかを使用して、ログ出力にコンテキスト情報を含めます。</span><span class="sxs-lookup"><span data-stu-id="e6063-473">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="fileLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="e6063-474"><see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="e6063-474"><see langword="String" />.</span></span> <span data-ttu-id="e6063-475">書き込むカスタム メッセージ。</span><span class="sxs-lookup"><span data-stu-id="e6063-475">The custom message to write.</span></span></param>
        <summary><span data-ttu-id="e6063-476">文脈情報を追加せずに、メッセージを逐一ディスクに出力します。現在行の最後に終端記号が追加されます。</span><span class="sxs-lookup"><span data-stu-id="e6063-476">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6063-477">メソッド<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A>は、コンテキスト情報を追加せずに、特定のメッセージをログファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="e6063-477">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="e6063-478"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A>メソッドのいずれかを使用して、ログ出力にコンテキスト情報を含めます。</span><span class="sxs-lookup"><span data-stu-id="e6063-478">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
