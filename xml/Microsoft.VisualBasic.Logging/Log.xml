<Type Name="Log" FullName="Microsoft.VisualBasic.Logging.Log">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4d0b73d33e0efbb41a5d96a42ea4dbe6e5c16767" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48611030" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Log" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Log extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="VB.NET" Value="Public Class Log" />
  <TypeSignature Language="C++ CLI" Value="public ref class Log" />
  <TypeSignature Language="F#" Value="type Log = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="33679-101">イベントや例外の情報をアプリケーションのログ リスナーに出力するためのプロパティおよびメソッドを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="33679-101">Provides a property and methods for writing event and exception information to the application's log listeners.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33679-102">`My.Application.Log`オブジェクトからにアクセスするための簡単なエントリ ポイントを提供する、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]サービスのログ記録します。</span><span class="sxs-lookup"><span data-stu-id="33679-102">The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services.</span></span> <span data-ttu-id="33679-103">`WriteEntry`と`WriteException`メソッドは、アプリケーションのログ リスナーにメッセージを記述します。</span><span class="sxs-lookup"><span data-stu-id="33679-103">The `WriteEntry` and `WriteException` methods write messages to the application's log listeners.</span></span> <span data-ttu-id="33679-104">リスナーは、アプリケーションの構成ファイルで構成できます。</span><span class="sxs-lookup"><span data-stu-id="33679-104">The listeners can be configured by the application's configuration file.</span></span> <span data-ttu-id="33679-105">詳細については、次を参照してください。[チュートリアル: 変更 Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)と[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-105">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="33679-106">`My.Application.Log`オブジェクトはクライアント アプリケーションでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="33679-106">The `My.Application.Log` object is available only for client applications.</span></span> <span data-ttu-id="33679-107">Web アプリケーションを使用して`My.Log`します。</span><span class="sxs-lookup"><span data-stu-id="33679-107">For Web applications, use `My.Log`.</span></span> <span data-ttu-id="33679-108">詳細については、「<xref:Microsoft.VisualBasic.Logging.AspLog>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="33679-108">For more information, see <xref:Microsoft.VisualBasic.Logging.AspLog>.</span></span>  
  
 <span data-ttu-id="33679-109">次の表に、関連するタスクの例については、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-109">The following table lists examples of tasks involving the `My.Application.Log` object.</span></span>  
  
|<span data-ttu-id="33679-110">終了</span><span class="sxs-lookup"><span data-stu-id="33679-110">To</span></span>|<span data-ttu-id="33679-111">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33679-111">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="33679-112">イベント情報をアプリケーションのログ リスナーに書き込む</span><span class="sxs-lookup"><span data-stu-id="33679-112">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="33679-113">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="33679-113">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="33679-114">アプリケーションのログ リスナーに例外情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="33679-114">Write exception information to the application's log listeners</span></span>|[<span data-ttu-id="33679-115">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="33679-115">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="33679-116">場所を決定する`My.Application.Log`情報の書き込み</span><span class="sxs-lookup"><span data-stu-id="33679-116">Determine where `My.Application.Log` writes information</span></span>|[<span data-ttu-id="33679-117">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="33679-117">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
   
  
## Examples  
 <span data-ttu-id="33679-118">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="33679-118">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="33679-119">詳細については、次を参照してください。[方法: ログ メッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-119">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
      <span data-ttu-id="33679-120">オブジェクト (Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="33679-120">Objects (Visual Basic)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33679-121">
            <see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-121">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-122">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-122">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Log ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Log();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33679-123">
            <see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-123">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-124">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-124">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Log (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Log(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.Log : string -&gt; Microsoft.VisualBasic.Logging.Log" Usage="new Microsoft.VisualBasic.Logging.Log name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="33679-125">
            <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-125">
              <see cref="T:System.String" />.</span>
          </span>
          <span data-ttu-id="33679-126">
            <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> プロパティ オブジェクトに割り当てる名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-126">The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33679-127">
            <see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-127">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-128">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-128">Objects (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFileLogWriter">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultFileLogWriter As FileLogTraceListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::FileLogTraceListener ^ DefaultFileLogWriter { Microsoft::VisualBasic::Logging::FileLogTraceListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFileLogWriter : Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.FileLogTraceListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33679-129">
            <see langword="Log" /> オブジェクトの基になるファイル (<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクト) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-129">Gets the file the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="33679-130">
            <see langword="Log" /> オブジェクトの基になる <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-130">Returns the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33679-131">このプロパティを使用しての現在の構成を確認することができます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-131">You can use this property to determine the current configuration of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object.</span></span>  
  
 <span data-ttu-id="33679-132">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-132">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="33679-133">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-133">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="33679-134">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-134">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="33679-135">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-135">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-136">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-136">Objects (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/ac6eb760-3d5d-461e-aedd-40599ee22e49">
          <span data-ttu-id="33679-137">トラブルシューティング : ログ リスナー</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-137">Troubleshooting: Log Listeners</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithDefaultsSinceNoConfigExists">
      <MemberSignature Language="C#" Value="protected internal virtual void InitializeWithDefaultsSinceNoConfigExists ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblynewslot virtual instance void InitializeWithDefaultsSinceNoConfigExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub InitializeWithDefaultsSinceNoConfigExists ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void InitializeWithDefaultsSinceNoConfigExists();" />
      <MemberSignature Language="F#" Value="abstract member InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit&#xA;override this.InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit" Usage="log.InitializeWithDefaultsSinceNoConfigExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="33679-138">新しい <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクトを作成し、それを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-138">Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33679-139">このメソッドは、新しい作成<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>、その名前を設定`FileLog`を重大度レベルでメッセージを記録するように構成<xref:System.Diagnostics.SourceLevels.Information>以降。</span><span class="sxs-lookup"><span data-stu-id="33679-139">This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels.Information> and greater.</span></span> <span data-ttu-id="33679-140">新しい<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>オブジェクトに追加し、<xref:System.Diagnostics.TraceSource.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="33679-140">The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="33679-141"><xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A>メソッドを呼び出す場合、<xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A>プロパティが構成されていません。</span><span class="sxs-lookup"><span data-stu-id="33679-141">The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured.</span></span> <span data-ttu-id="33679-142">トレース ソースは、アプリケーションの構成ファイルで構成できます。</span><span class="sxs-lookup"><span data-stu-id="33679-142">The trace source can be configured in the application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="TraceSource">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceSource TraceSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceSource TraceSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceSource As TraceSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceSource ^ TraceSource { System::Diagnostics::TraceSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceSource : System.Diagnostics.TraceSource" Usage="Microsoft.VisualBasic.Logging.Log.TraceSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33679-143">
            <see langword="Log" /> オブジェクトの基になる <see cref="T:System.Diagnostics.TraceSource" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-143">Gets to the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="33679-144">
            <see langword="Log" /> オブジェクトの基になる <see cref="T:System.Diagnostics.TraceSource" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-144">Returns the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33679-145">このプロパティを使用しての現在の構成を確認することができます、`Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-145">You can use this property to determine the current configuration of the `Log` object.</span></span>  
  
 <span data-ttu-id="33679-146">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-146">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="33679-147">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-147">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="33679-148">これは、高度なメンバーの場合。選択しないと、IntelliSense に表示されない、**すべて**タブ。</span><span class="sxs-lookup"><span data-stu-id="33679-148">This is an advanced member; it does not show in IntelliSense unless you select the **All** tab.</span></span>  
  
 <span data-ttu-id="33679-149">次の表に、関連するタスクの例、`TraceSource`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33679-149">The following table lists an example of a task involving the `TraceSource` property.</span></span>  
  
|<span data-ttu-id="33679-150">終了</span><span class="sxs-lookup"><span data-stu-id="33679-150">To</span></span>|<span data-ttu-id="33679-151">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33679-151">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="33679-152">それぞれの情報を取得、`Log`オブジェクトのログ リスナー。</span><span class="sxs-lookup"><span data-stu-id="33679-152">Get information for each of the `Log` object's log listeners.</span></span>|[<span data-ttu-id="33679-153">トラブルシューティング : ログ リスナー</span><span class="sxs-lookup"><span data-stu-id="33679-153">Troubleshooting: Log Listeners</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/troubleshooting-log-listeners.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33679-154">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33679-154">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33679-155">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33679-155">Project type</span></span>|<span data-ttu-id="33679-156">使用可能</span><span class="sxs-lookup"><span data-stu-id="33679-156">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="33679-157">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-157">Windows Application</span></span>|<span data-ttu-id="33679-158">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-158">**Yes**</span></span>|  
|<span data-ttu-id="33679-159">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-159">Class Library</span></span>|<span data-ttu-id="33679-160">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-160">**Yes**</span></span>|  
|<span data-ttu-id="33679-161">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-161">Console Application</span></span>|<span data-ttu-id="33679-162">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-162">**Yes**</span></span>|  
|<span data-ttu-id="33679-163">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-163">Windows Control Library</span></span>|<span data-ttu-id="33679-164">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-164">**Yes**</span></span>|  
|<span data-ttu-id="33679-165">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-165">Web Control Library</span></span>|<span data-ttu-id="33679-166">×</span><span class="sxs-lookup"><span data-stu-id="33679-166">No</span></span>|  
|<span data-ttu-id="33679-167">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33679-167">Windows Service</span></span>|<span data-ttu-id="33679-168">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-168">**Yes**</span></span>|  
|<span data-ttu-id="33679-169">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33679-169">Web Site</span></span>|<span data-ttu-id="33679-170">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-170">**Yes**</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSource" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-171">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-171">Objects (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/ac6eb760-3d5d-461e-aedd-40599ee22e49">
          <span data-ttu-id="33679-172">トラブルシューティング : ログ リスナー</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-172">Troubleshooting: Log Listeners</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEntry">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33679-173">アプリケーションのログ リスナーにメッセージを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-173">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string -&gt; unit" Usage="log.WriteEntry message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="33679-174">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-174">Required.</span>
          </span>
          <span data-ttu-id="33679-175">記録するメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-175">The message to log.</span>
          </span>
          <span data-ttu-id="33679-176">
            <c>message</c> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-176">If <c>message</c> is <see langword="Nothing" />, an empty string is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33679-177">アプリケーションのログ リスナーにメッセージを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-177">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33679-178">`WriteEntry`メソッドは、アプリケーションのイベント ログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="33679-178">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="33679-179">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-179">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="33679-180">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-180">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="33679-181">リスナーが受信するにはどのログについて説明します、 `WriteEntry` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-181">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="33679-182">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="33679-182">You can change default log listeners.</span></span> <span data-ttu-id="33679-183">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="33679-183">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="33679-184">受け取らないオーバー ロードの場合、`id`引数、`id`に書き込まれたログが次の表で定義されています。</span><span class="sxs-lookup"><span data-stu-id="33679-184">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="33679-185">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="33679-185">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="33679-186">0</span><span class="sxs-lookup"><span data-stu-id="33679-186">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="33679-187">1</span><span class="sxs-lookup"><span data-stu-id="33679-187">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="33679-188">2</span><span class="sxs-lookup"><span data-stu-id="33679-188">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="33679-189">3</span><span class="sxs-lookup"><span data-stu-id="33679-189">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="33679-190">4</span><span class="sxs-lookup"><span data-stu-id="33679-190">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="33679-191">5</span><span class="sxs-lookup"><span data-stu-id="33679-191">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="33679-192">6</span><span class="sxs-lookup"><span data-stu-id="33679-192">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="33679-193">7</span><span class="sxs-lookup"><span data-stu-id="33679-193">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="33679-194">8</span><span class="sxs-lookup"><span data-stu-id="33679-194">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="33679-195">9</span><span class="sxs-lookup"><span data-stu-id="33679-195">9</span></span>|  
  
 <span data-ttu-id="33679-196">次の表に、関連するタスクの例については、`WriteEntry`メソッド。</span><span class="sxs-lookup"><span data-stu-id="33679-196">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="33679-197">終了</span><span class="sxs-lookup"><span data-stu-id="33679-197">To</span></span>|<span data-ttu-id="33679-198">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33679-198">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="33679-199">イベント情報をアプリケーションのログ リスナーに書き込む</span><span class="sxs-lookup"><span data-stu-id="33679-199">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="33679-200">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="33679-200">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="33679-201">場所を決定する`Log`情報の書き込み</span><span class="sxs-lookup"><span data-stu-id="33679-201">Determine where `Log` writes information</span></span>|[<span data-ttu-id="33679-202">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="33679-202">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33679-203">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33679-203">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33679-204">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33679-204">Project type</span></span>|<span data-ttu-id="33679-205">使用可能</span><span class="sxs-lookup"><span data-stu-id="33679-205">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="33679-206">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-206">Windows Application</span></span>|<span data-ttu-id="33679-207">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-207">**Yes**</span></span>|  
|<span data-ttu-id="33679-208">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-208">Class Library</span></span>|<span data-ttu-id="33679-209">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-209">**Yes**</span></span>|  
|<span data-ttu-id="33679-210">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-210">Console Application</span></span>|<span data-ttu-id="33679-211">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-211">**Yes**</span></span>|  
|<span data-ttu-id="33679-212">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-212">Windows Control Library</span></span>|<span data-ttu-id="33679-213">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-213">**Yes**</span></span>|  
|<span data-ttu-id="33679-214">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-214">Web Control Library</span></span>|<span data-ttu-id="33679-215">×</span><span class="sxs-lookup"><span data-stu-id="33679-215">No</span></span>|  
|<span data-ttu-id="33679-216">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33679-216">Windows Service</span></span>|<span data-ttu-id="33679-217">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-217">**Yes**</span></span>|  
|<span data-ttu-id="33679-218">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33679-218">Web Site</span></span>|<span data-ttu-id="33679-219">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-219">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33679-220">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="33679-220">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="33679-221">詳細については、次を参照してください。[方法: ログ メッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-221">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="33679-222">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="33679-222">This code example can run only within a client application.</span></span> <span data-ttu-id="33679-223">変更`My.Application.Log.WriteEntry`に`My.Log.WriteEntry`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="33679-223">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="33679-224">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-224">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="33679-225">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-225">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="33679-226">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-226">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-227">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-227">Objects (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468">
          <span data-ttu-id="33679-228">Visual Basic でのアプリケーション ログの使用</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-228">Working with Application Logs in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/972a3e0c-2996-4623-a7a9-d7ebc4d207f8">
          <span data-ttu-id="33679-229">方法: ログ メッセージを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-229">How to: Write Log Messages</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189">
          <span data-ttu-id="33679-230">チュートリアル : My.Application.Log による情報の書き込み先の確認</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-230">Walkthrough: Determining Where My.Application.Log Writes Information</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.TraceEventType severity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message, valuetype System.Diagnostics.TraceEventType severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, severity As TraceEventType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::TraceEventType severity);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.TraceEventType -&gt; unit" Usage="log.WriteEntry (message, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="33679-231">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-231">Required.</span>
          </span>
          <span data-ttu-id="33679-232">記録するメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-232">The message to log.</span>
          </span>
          <span data-ttu-id="33679-233">
            <c>message</c> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-233">If <c>message</c> is <see langword="Nothing" />, an empty string is used.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="33679-234">メッセージの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-234">The type of message.</span>
          </span>
          <span data-ttu-id="33679-235">既定では、<see langword="TraceEventType.Information" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-235">By default, <see langword="TraceEventType.Information" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33679-236">アプリケーションのログ リスナーにメッセージを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-236">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33679-237">`WriteEntry`メソッドは、アプリケーションのイベント ログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="33679-237">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="33679-238">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-238">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="33679-239">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-239">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="33679-240">リスナーが受信するにはどのログについて説明します、 `WriteEntry` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-240">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="33679-241">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="33679-241">You can change default log listeners.</span></span> <span data-ttu-id="33679-242">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="33679-242">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="33679-243">受け取らないオーバー ロードの場合、`id`引数、`id`に書き込まれたログが次の表で定義されています。</span><span class="sxs-lookup"><span data-stu-id="33679-243">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="33679-244">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="33679-244">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="33679-245">0</span><span class="sxs-lookup"><span data-stu-id="33679-245">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="33679-246">1</span><span class="sxs-lookup"><span data-stu-id="33679-246">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="33679-247">2</span><span class="sxs-lookup"><span data-stu-id="33679-247">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="33679-248">3</span><span class="sxs-lookup"><span data-stu-id="33679-248">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="33679-249">4</span><span class="sxs-lookup"><span data-stu-id="33679-249">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="33679-250">5</span><span class="sxs-lookup"><span data-stu-id="33679-250">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="33679-251">6</span><span class="sxs-lookup"><span data-stu-id="33679-251">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="33679-252">7</span><span class="sxs-lookup"><span data-stu-id="33679-252">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="33679-253">8</span><span class="sxs-lookup"><span data-stu-id="33679-253">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="33679-254">9</span><span class="sxs-lookup"><span data-stu-id="33679-254">9</span></span>|  
  
 <span data-ttu-id="33679-255">次の表に、関連するタスクの例については、`WriteEntry`メソッド。</span><span class="sxs-lookup"><span data-stu-id="33679-255">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="33679-256">終了</span><span class="sxs-lookup"><span data-stu-id="33679-256">To</span></span>|<span data-ttu-id="33679-257">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33679-257">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="33679-258">イベント情報をアプリケーションのログ リスナーに書き込む</span><span class="sxs-lookup"><span data-stu-id="33679-258">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="33679-259">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="33679-259">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="33679-260">場所を決定する`Log`情報の書き込み</span><span class="sxs-lookup"><span data-stu-id="33679-260">Determine where `Log` writes information</span></span>|[<span data-ttu-id="33679-261">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="33679-261">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33679-262">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33679-262">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33679-263">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33679-263">Project type</span></span>|<span data-ttu-id="33679-264">使用可能</span><span class="sxs-lookup"><span data-stu-id="33679-264">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="33679-265">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-265">Windows Application</span></span>|<span data-ttu-id="33679-266">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-266">**Yes**</span></span>|  
|<span data-ttu-id="33679-267">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-267">Class Library</span></span>|<span data-ttu-id="33679-268">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-268">**Yes**</span></span>|  
|<span data-ttu-id="33679-269">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-269">Console Application</span></span>|<span data-ttu-id="33679-270">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-270">**Yes**</span></span>|  
|<span data-ttu-id="33679-271">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-271">Windows Control Library</span></span>|<span data-ttu-id="33679-272">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-272">**Yes**</span></span>|  
|<span data-ttu-id="33679-273">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-273">Web Control Library</span></span>|<span data-ttu-id="33679-274">×</span><span class="sxs-lookup"><span data-stu-id="33679-274">No</span></span>|  
|<span data-ttu-id="33679-275">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33679-275">Windows Service</span></span>|<span data-ttu-id="33679-276">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-276">**Yes**</span></span>|  
|<span data-ttu-id="33679-277">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33679-277">Web Site</span></span>|<span data-ttu-id="33679-278">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-278">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33679-279">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="33679-279">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="33679-280">詳細については、次を参照してください。[方法: ログ メッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-280">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="33679-281">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="33679-281">This code example can run only within a client application.</span></span> <span data-ttu-id="33679-282">変更`My.Application.Log.WriteEntry`に`My.Log.WriteEntry`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="33679-282">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="33679-283">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-283">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="33679-284">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-284">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="33679-285">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-285">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="33679-286">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-286">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-287">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-287">Objects (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468">
          <span data-ttu-id="33679-288">Visual Basic でのアプリケーション ログの使用</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-288">Working with Application Logs in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/972a3e0c-2996-4623-a7a9-d7ebc4d207f8">
          <span data-ttu-id="33679-289">方法: ログ メッセージを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-289">How to: Write Log Messages</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189">
          <span data-ttu-id="33679-290">チュートリアル : My.Application.Log による情報の書き込み先の確認</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-290">Walkthrough: Determining Where My.Application.Log Writes Information</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.TraceEventType severity, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message, valuetype System.Diagnostics.TraceEventType severity, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, severity As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::TraceEventType severity, int id);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="log.WriteEntry (message, severity, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="33679-291">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-291">Required.</span>
          </span>
          <span data-ttu-id="33679-292">記録するメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-292">The message to log.</span>
          </span>
          <span data-ttu-id="33679-293">
            <c>message</c> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-293">If <c>message</c> is <see langword="Nothing" />, an empty string is used.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="33679-294">メッセージの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-294">The type of message.</span>
          </span>
          <span data-ttu-id="33679-295">既定では、<see langword="TraceEventType.Information" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-295">By default, <see langword="TraceEventType.Information" />.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="33679-296">メッセージ ID。一般に、メッセージの相関関係を示すために使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-296">Message identifier, typically used for correlation.</span>
          </span>
          <span data-ttu-id="33679-297">既定では、表に示した <c>entryType</c> と関連付けられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-297">By default, related to <c>entryType</c> as described in the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33679-298">アプリケーションのログ リスナーにメッセージを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-298">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33679-299">`WriteEntry`メソッドは、アプリケーションのイベント ログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="33679-299">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="33679-300">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-300">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="33679-301">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-301">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="33679-302">リスナーが受信するにはどのログについて説明します、 `WriteEntry` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-302">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="33679-303">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="33679-303">You can change default log listeners.</span></span> <span data-ttu-id="33679-304">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="33679-304">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="33679-305">受け取らないオーバー ロードの場合、`id`引数、`id`に書き込まれたログが次の表で定義されています。</span><span class="sxs-lookup"><span data-stu-id="33679-305">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="33679-306">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="33679-306">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="33679-307">0</span><span class="sxs-lookup"><span data-stu-id="33679-307">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="33679-308">1</span><span class="sxs-lookup"><span data-stu-id="33679-308">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="33679-309">2</span><span class="sxs-lookup"><span data-stu-id="33679-309">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="33679-310">3</span><span class="sxs-lookup"><span data-stu-id="33679-310">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="33679-311">4</span><span class="sxs-lookup"><span data-stu-id="33679-311">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="33679-312">5</span><span class="sxs-lookup"><span data-stu-id="33679-312">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="33679-313">6</span><span class="sxs-lookup"><span data-stu-id="33679-313">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="33679-314">7</span><span class="sxs-lookup"><span data-stu-id="33679-314">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="33679-315">8</span><span class="sxs-lookup"><span data-stu-id="33679-315">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="33679-316">9</span><span class="sxs-lookup"><span data-stu-id="33679-316">9</span></span>|  
  
 <span data-ttu-id="33679-317">次の表に、関連するタスクの例については、`WriteEntry`メソッド。</span><span class="sxs-lookup"><span data-stu-id="33679-317">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="33679-318">終了</span><span class="sxs-lookup"><span data-stu-id="33679-318">To</span></span>|<span data-ttu-id="33679-319">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33679-319">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="33679-320">イベント情報をアプリケーションのログ リスナーに書き込む</span><span class="sxs-lookup"><span data-stu-id="33679-320">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="33679-321">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="33679-321">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="33679-322">場所を決定する`Log`情報の書き込み</span><span class="sxs-lookup"><span data-stu-id="33679-322">Determine where `Log` writes information</span></span>|[<span data-ttu-id="33679-323">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="33679-323">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33679-324">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33679-324">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33679-325">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33679-325">Project type</span></span>|<span data-ttu-id="33679-326">使用可能</span><span class="sxs-lookup"><span data-stu-id="33679-326">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="33679-327">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-327">Windows Application</span></span>|<span data-ttu-id="33679-328">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-328">**Yes**</span></span>|  
|<span data-ttu-id="33679-329">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-329">Class Library</span></span>|<span data-ttu-id="33679-330">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-330">**Yes**</span></span>|  
|<span data-ttu-id="33679-331">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-331">Console Application</span></span>|<span data-ttu-id="33679-332">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-332">**Yes**</span></span>|  
|<span data-ttu-id="33679-333">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-333">Windows Control Library</span></span>|<span data-ttu-id="33679-334">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-334">**Yes**</span></span>|  
|<span data-ttu-id="33679-335">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-335">Web Control Library</span></span>|<span data-ttu-id="33679-336">×</span><span class="sxs-lookup"><span data-stu-id="33679-336">No</span></span>|  
|<span data-ttu-id="33679-337">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33679-337">Windows Service</span></span>|<span data-ttu-id="33679-338">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-338">**Yes**</span></span>|  
|<span data-ttu-id="33679-339">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33679-339">Web Site</span></span>|<span data-ttu-id="33679-340">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-340">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33679-341">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="33679-341">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="33679-342">詳細については、次を参照してください。[方法: ログ メッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-342">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="33679-343">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="33679-343">This code example can run only within a client application.</span></span> <span data-ttu-id="33679-344">変更`My.Application.Log.WriteEntry`に`My.Log.WriteEntry`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="33679-344">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="33679-345">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-345">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="33679-346">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-346">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="33679-347">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-347">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="33679-348">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-348">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-349">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-349">Objects (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468">
          <span data-ttu-id="33679-350">Visual Basic でのアプリケーション ログの使用</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-350">Working with Application Logs in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/972a3e0c-2996-4623-a7a9-d7ebc4d207f8">
          <span data-ttu-id="33679-351">方法: ログ メッセージを書き込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-351">How to: Write Log Messages</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189">
          <span data-ttu-id="33679-352">チュートリアル : My.Application.Log による情報の書き込み先の確認</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-352">Walkthrough: Determining Where My.Application.Log Writes Information</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteException">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33679-353">アプリケーションのログ リスナーに例外情報を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-353">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception -&gt; unit" Usage="log.WriteException ex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ex">
          <span data-ttu-id="33679-354">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-354">Required.</span>
          </span>
          <span data-ttu-id="33679-355">記録する例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-355">Exception to log.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33679-356">アプリケーションのログ リスナーに例外情報を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-356">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33679-357">`WriteException`メソッドは、アプリケーションのイベント ログ リスナーに例外に含まれる情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="33679-357">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="33679-358">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-358">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="33679-359">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-359">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="33679-360">リスナーが受信するにはどのログについて説明します、 `WriteException` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-360">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="33679-361">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="33679-361">You can change default log listeners.</span></span> <span data-ttu-id="33679-362">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="33679-362">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="33679-363">受け取らないオーバー ロードの場合、`id`引数、ログに書き込まれた識別子は、次の表に、によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="33679-363">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="33679-364">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="33679-364">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="33679-365">0</span><span class="sxs-lookup"><span data-stu-id="33679-365">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="33679-366">1</span><span class="sxs-lookup"><span data-stu-id="33679-366">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="33679-367">2</span><span class="sxs-lookup"><span data-stu-id="33679-367">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="33679-368">3</span><span class="sxs-lookup"><span data-stu-id="33679-368">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="33679-369">4</span><span class="sxs-lookup"><span data-stu-id="33679-369">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="33679-370">5</span><span class="sxs-lookup"><span data-stu-id="33679-370">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="33679-371">6</span><span class="sxs-lookup"><span data-stu-id="33679-371">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="33679-372">7</span><span class="sxs-lookup"><span data-stu-id="33679-372">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="33679-373">8</span><span class="sxs-lookup"><span data-stu-id="33679-373">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="33679-374">9</span><span class="sxs-lookup"><span data-stu-id="33679-374">9</span></span>|  
  
 <span data-ttu-id="33679-375">次の表に、関連するタスクの例については、`WriteException`メソッド。</span><span class="sxs-lookup"><span data-stu-id="33679-375">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="33679-376">終了</span><span class="sxs-lookup"><span data-stu-id="33679-376">To</span></span>|<span data-ttu-id="33679-377">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33679-377">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="33679-378">アプリケーションのイベント ログ リスナーに例外情報を記述します。</span><span class="sxs-lookup"><span data-stu-id="33679-378">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="33679-379">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="33679-379">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="33679-380">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="33679-380">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="33679-381">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="33679-381">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33679-382">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33679-382">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33679-383">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33679-383">Project type</span></span>|<span data-ttu-id="33679-384">使用可能</span><span class="sxs-lookup"><span data-stu-id="33679-384">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="33679-385">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-385">Windows Application</span></span>|<span data-ttu-id="33679-386">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-386">**Yes**</span></span>|  
|<span data-ttu-id="33679-387">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-387">Class Library</span></span>|<span data-ttu-id="33679-388">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-388">**Yes**</span></span>|  
|<span data-ttu-id="33679-389">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-389">Console Application</span></span>|<span data-ttu-id="33679-390">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-390">**Yes**</span></span>|  
|<span data-ttu-id="33679-391">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-391">Windows Control Library</span></span>|<span data-ttu-id="33679-392">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-392">**Yes**</span></span>|  
|<span data-ttu-id="33679-393">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-393">Web Control Library</span></span>|<span data-ttu-id="33679-394">×</span><span class="sxs-lookup"><span data-stu-id="33679-394">No</span></span>|  
|<span data-ttu-id="33679-395">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33679-395">Windows Service</span></span>|<span data-ttu-id="33679-396">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-396">**Yes**</span></span>|  
|<span data-ttu-id="33679-397">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33679-397">Web Site</span></span>|<span data-ttu-id="33679-398">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-398">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33679-399">この例は、使用する方法を示します、`My.Application.Log.WriteException`例外ログに記録するメソッド。</span><span class="sxs-lookup"><span data-stu-id="33679-399">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="33679-400">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="33679-400">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="33679-401">詳細については、次を参照してください。[方法: 例外をログ出力](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-401">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="33679-402">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="33679-402">This code example can run only within a client application.</span></span> <span data-ttu-id="33679-403">変更`My.Application.Log.WriteException`に`My.Log.WriteException`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="33679-403">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="33679-404">
            <paramref name="ex" /> は <see langword="Nothing" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-404">
              <paramref name="ex" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="33679-405">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-405">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="33679-406">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-406">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="33679-407">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-407">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-408">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-408">Objects (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468">
          <span data-ttu-id="33679-409">Visual Basic でのアプリケーション ログの使用</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-409">Working with Application Logs in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/a26c60e2-ae39-444a-aebb-33eccadc0eeb">
          <span data-ttu-id="33679-410">方法: Visual Basic で例外をログに記録する</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-410">How to: Log Exceptions in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189">
          <span data-ttu-id="33679-411">チュートリアル : My.Application.Log による情報の書き込み先の確認</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-411">Walkthrough: Determining Where My.Application.Log Writes Information</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex, valuetype System.Diagnostics.TraceEventType severity, string additionalInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception, severity As TraceEventType, additionalInfo As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex, System::Diagnostics::TraceEventType severity, System::String ^ additionalInfo);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception * System.Diagnostics.TraceEventType * string -&gt; unit" Usage="log.WriteException (ex, severity, additionalInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="additionalInfo" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ex">
          <span data-ttu-id="33679-412">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-412">Required.</span>
          </span>
          <span data-ttu-id="33679-413">記録する例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-413">Exception to log.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="33679-414">メッセージの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-414">The type of message.</span>
          </span>
          <span data-ttu-id="33679-415">既定では、<see cref="F:System.Diagnostics.TraceEventType.Error" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-415">By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</span>
          </span>
        </param>
        <param name="additionalInfo">
          <span data-ttu-id="33679-416">メッセージに追加する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-416">String to append to the message.</span>
          </span>
          <span data-ttu-id="33679-417">既定では空の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-417">By default, this is an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33679-418">アプリケーションのログ リスナーに例外情報を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-418">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33679-419">`WriteException`メソッドは、アプリケーションのイベント ログ リスナーに例外に含まれる情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="33679-419">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="33679-420">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-420">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="33679-421">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-421">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="33679-422">リスナーが受信するにはどのログについて説明します、 `WriteException` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-422">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="33679-423">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="33679-423">You can change default log listeners.</span></span> <span data-ttu-id="33679-424">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="33679-424">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="33679-425">受け取らないオーバー ロードの場合、`id`引数、ログに書き込まれた識別子は、次の表に、によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="33679-425">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="33679-426">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="33679-426">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="33679-427">0</span><span class="sxs-lookup"><span data-stu-id="33679-427">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="33679-428">1</span><span class="sxs-lookup"><span data-stu-id="33679-428">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="33679-429">2</span><span class="sxs-lookup"><span data-stu-id="33679-429">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="33679-430">3</span><span class="sxs-lookup"><span data-stu-id="33679-430">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="33679-431">4</span><span class="sxs-lookup"><span data-stu-id="33679-431">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="33679-432">5</span><span class="sxs-lookup"><span data-stu-id="33679-432">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="33679-433">6</span><span class="sxs-lookup"><span data-stu-id="33679-433">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="33679-434">7</span><span class="sxs-lookup"><span data-stu-id="33679-434">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="33679-435">8</span><span class="sxs-lookup"><span data-stu-id="33679-435">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="33679-436">9</span><span class="sxs-lookup"><span data-stu-id="33679-436">9</span></span>|  
  
 <span data-ttu-id="33679-437">次の表に、関連するタスクの例については、`WriteException`メソッド。</span><span class="sxs-lookup"><span data-stu-id="33679-437">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="33679-438">終了</span><span class="sxs-lookup"><span data-stu-id="33679-438">To</span></span>|<span data-ttu-id="33679-439">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33679-439">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="33679-440">アプリケーションのイベント ログ リスナーに例外情報を記述します。</span><span class="sxs-lookup"><span data-stu-id="33679-440">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="33679-441">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="33679-441">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="33679-442">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="33679-442">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="33679-443">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="33679-443">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33679-444">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33679-444">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33679-445">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33679-445">Project type</span></span>|<span data-ttu-id="33679-446">使用可能</span><span class="sxs-lookup"><span data-stu-id="33679-446">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="33679-447">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-447">Windows Application</span></span>|<span data-ttu-id="33679-448">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-448">**Yes**</span></span>|  
|<span data-ttu-id="33679-449">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-449">Class Library</span></span>|<span data-ttu-id="33679-450">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-450">**Yes**</span></span>|  
|<span data-ttu-id="33679-451">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-451">Console Application</span></span>|<span data-ttu-id="33679-452">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-452">**Yes**</span></span>|  
|<span data-ttu-id="33679-453">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-453">Windows Control Library</span></span>|<span data-ttu-id="33679-454">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-454">**Yes**</span></span>|  
|<span data-ttu-id="33679-455">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-455">Web Control Library</span></span>|<span data-ttu-id="33679-456">×</span><span class="sxs-lookup"><span data-stu-id="33679-456">No</span></span>|  
|<span data-ttu-id="33679-457">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33679-457">Windows Service</span></span>|<span data-ttu-id="33679-458">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-458">**Yes**</span></span>|  
|<span data-ttu-id="33679-459">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33679-459">Web Site</span></span>|<span data-ttu-id="33679-460">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-460">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33679-461">この例は、使用する方法を示します、`My.Application.Log.WriteException`例外ログに記録するメソッド。</span><span class="sxs-lookup"><span data-stu-id="33679-461">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="33679-462">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="33679-462">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="33679-463">詳細については、次を参照してください。[方法: 例外をログ出力](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-463">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="33679-464">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="33679-464">This code example can run only within a client application.</span></span> <span data-ttu-id="33679-465">変更`My.Application.Log.WriteException`に`My.Log.WriteException`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="33679-465">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="33679-466">
            <paramref name="ex" /> は <see langword="Nothing" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-466">
              <paramref name="ex" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="33679-467">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-467">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="33679-468">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-468">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="33679-469">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-469">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="33679-470">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-470">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-471">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-471">Objects (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468">
          <span data-ttu-id="33679-472">Visual Basic でのアプリケーション ログの使用</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-472">Working with Application Logs in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/a26c60e2-ae39-444a-aebb-33eccadc0eeb">
          <span data-ttu-id="33679-473">方法: Visual Basic で例外をログに記録する</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-473">How to: Log Exceptions in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189">
          <span data-ttu-id="33679-474">チュートリアル : My.Application.Log による情報の書き込み先の確認</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-474">Walkthrough: Determining Where My.Application.Log Writes Information</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex, valuetype System.Diagnostics.TraceEventType severity, string additionalInfo, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception, severity As TraceEventType, additionalInfo As String, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex, System::Diagnostics::TraceEventType severity, System::String ^ additionalInfo, int id);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception * System.Diagnostics.TraceEventType * string * int -&gt; unit" Usage="log.WriteException (ex, severity, additionalInfo, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="additionalInfo" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ex">
          <span data-ttu-id="33679-475">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-475">Required.</span>
          </span>
          <span data-ttu-id="33679-476">記録する例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-476">Exception to log.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="33679-477">メッセージの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-477">The type of message.</span>
          </span>
          <span data-ttu-id="33679-478">既定では、<see cref="F:System.Diagnostics.TraceEventType.Error" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-478">By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</span>
          </span>
        </param>
        <param name="additionalInfo">
          <span data-ttu-id="33679-479">メッセージに追加する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-479">String to append to the message.</span>
          </span>
          <span data-ttu-id="33679-480">既定では空の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-480">By default, this is an empty string.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="33679-481">メッセージ ID。一般に、メッセージの相関関係を示すために使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-481">Message identifier, typically used for correlation.</span>
          </span>
          <span data-ttu-id="33679-482">既定では、「解説」の表に示した <c>entryType</c> と関連付けられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-482">By default, related to <c>entryType</c> as described in the table in the Remarks section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33679-483">アプリケーションのログ リスナーに例外情報を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-483">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33679-484">`WriteException`メソッドは、アプリケーションのイベント ログ リスナーに例外に含まれる情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="33679-484">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="33679-485">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-485">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="33679-486">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="33679-486">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="33679-487">リスナーが受信するにはどのログについて説明します、 `WriteException` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-487">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="33679-488">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="33679-488">You can change default log listeners.</span></span> <span data-ttu-id="33679-489">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="33679-489">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="33679-490">受け取らないオーバー ロードの場合、`id`引数、ログに書き込まれた識別子は、次の表に、によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="33679-490">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="33679-491">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="33679-491">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="33679-492">0</span><span class="sxs-lookup"><span data-stu-id="33679-492">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="33679-493">1</span><span class="sxs-lookup"><span data-stu-id="33679-493">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="33679-494">2</span><span class="sxs-lookup"><span data-stu-id="33679-494">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="33679-495">3</span><span class="sxs-lookup"><span data-stu-id="33679-495">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="33679-496">4</span><span class="sxs-lookup"><span data-stu-id="33679-496">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="33679-497">5</span><span class="sxs-lookup"><span data-stu-id="33679-497">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="33679-498">6</span><span class="sxs-lookup"><span data-stu-id="33679-498">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="33679-499">7</span><span class="sxs-lookup"><span data-stu-id="33679-499">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="33679-500">8</span><span class="sxs-lookup"><span data-stu-id="33679-500">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="33679-501">9</span><span class="sxs-lookup"><span data-stu-id="33679-501">9</span></span>|  
  
 <span data-ttu-id="33679-502">次の表に、関連するタスクの例については、`WriteException`メソッド。</span><span class="sxs-lookup"><span data-stu-id="33679-502">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="33679-503">終了</span><span class="sxs-lookup"><span data-stu-id="33679-503">To</span></span>|<span data-ttu-id="33679-504">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="33679-504">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="33679-505">アプリケーションのイベント ログ リスナーに例外情報を記述します。</span><span class="sxs-lookup"><span data-stu-id="33679-505">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="33679-506">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="33679-506">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="33679-507">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="33679-507">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="33679-508">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="33679-508">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="33679-509">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="33679-509">Availability by Project Type</span></span>  
  
|<span data-ttu-id="33679-510">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="33679-510">Project type</span></span>|<span data-ttu-id="33679-511">使用可能</span><span class="sxs-lookup"><span data-stu-id="33679-511">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="33679-512">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-512">Windows Application</span></span>|<span data-ttu-id="33679-513">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-513">**Yes**</span></span>|  
|<span data-ttu-id="33679-514">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-514">Class Library</span></span>|<span data-ttu-id="33679-515">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-515">**Yes**</span></span>|  
|<span data-ttu-id="33679-516">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="33679-516">Console Application</span></span>|<span data-ttu-id="33679-517">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-517">**Yes**</span></span>|  
|<span data-ttu-id="33679-518">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-518">Windows Control Library</span></span>|<span data-ttu-id="33679-519">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-519">**Yes**</span></span>|  
|<span data-ttu-id="33679-520">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="33679-520">Web Control Library</span></span>|<span data-ttu-id="33679-521">×</span><span class="sxs-lookup"><span data-stu-id="33679-521">No</span></span>|  
|<span data-ttu-id="33679-522">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="33679-522">Windows Service</span></span>|<span data-ttu-id="33679-523">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-523">**Yes**</span></span>|  
|<span data-ttu-id="33679-524">Web サイト</span><span class="sxs-lookup"><span data-stu-id="33679-524">Web Site</span></span>|<span data-ttu-id="33679-525">**はい**</span><span class="sxs-lookup"><span data-stu-id="33679-525">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="33679-526">この例は、使用する方法を示します、`My.Application.Log.WriteException`例外ログに記録するメソッド。</span><span class="sxs-lookup"><span data-stu-id="33679-526">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="33679-527">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="33679-527">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="33679-528">詳細については、次を参照してください。[方法: 例外をログ出力](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)します。</span><span class="sxs-lookup"><span data-stu-id="33679-528">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="33679-529">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="33679-529">This code example can run only within a client application.</span></span> <span data-ttu-id="33679-530">変更`My.Application.Log.WriteException`に`My.Log.WriteException`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="33679-530">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="33679-531">
            <paramref name="ex" /> は <see langword="Nothing" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-531">
              <paramref name="ex" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="33679-532">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-532">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="33679-533">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-533">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="33679-534">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-534">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="33679-535">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-535">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">
          <span data-ttu-id="33679-536">オブジェクト (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-536">Objects (Visual Basic)</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468">
          <span data-ttu-id="33679-537">Visual Basic でのアプリケーション ログの使用</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-537">Working with Application Logs in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/a26c60e2-ae39-444a-aebb-33eccadc0eeb">
          <span data-ttu-id="33679-538">方法: Visual Basic で例外をログに記録する</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-538">How to: Log Exceptions in Visual Basic</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189">
          <span data-ttu-id="33679-539">チュートリアル : My.Application.Log による情報の書き込み先の確認</span>
          <span class="sxs-lookup">
            <span data-stu-id="33679-539">Walkthrough: Determining Where My.Application.Log Writes Information</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>