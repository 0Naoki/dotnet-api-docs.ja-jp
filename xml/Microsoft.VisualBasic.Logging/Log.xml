<Type Name="Log" FullName="Microsoft.VisualBasic.Logging.Log">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8646535c9d333361a0a1fa4a44a40e45e16c5e67" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37710559" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Log" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Log extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="VB.NET" Value="Public Class Log" />
  <TypeSignature Language="C++ CLI" Value="public ref class Log" />
  <TypeSignature Language="F#" Value="type Log = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="11a4b-101">イベントや例外の情報をアプリケーションのログ リスナーに出力するためのプロパティおよびメソッドを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="11a4b-101">Provides a property and methods for writing event and exception information to the application's log listeners.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11a4b-102">`My.Application.Log`オブジェクトからにアクセスするための簡単なエントリ ポイントを提供する、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]サービスのログ記録します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-102">The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services.</span></span> <span data-ttu-id="11a4b-103">`WriteEntry`と`WriteException`メソッドは、アプリケーションのログ リスナーにメッセージを記述します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-103">The `WriteEntry` and `WriteException` methods write messages to the application's log listeners.</span></span> <span data-ttu-id="11a4b-104">リスナーは、アプリケーションの構成ファイルで構成できます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-104">The listeners can be configured by the application's configuration file.</span></span> <span data-ttu-id="11a4b-105">詳細については、次を参照してください。[チュートリアル: 変更 Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)と[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-105">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="11a4b-106">`My.Application.Log`オブジェクトはクライアント アプリケーションでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-106">The `My.Application.Log` object is available only for client applications.</span></span> <span data-ttu-id="11a4b-107">Web アプリケーションを使用して`My.Log`します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-107">For Web applications, use `My.Log`.</span></span> <span data-ttu-id="11a4b-108">詳細については、「<xref:Microsoft.VisualBasic.Logging.AspLog>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="11a4b-108">For more information, see <xref:Microsoft.VisualBasic.Logging.AspLog>.</span></span>  
  
 <span data-ttu-id="11a4b-109">次の表に、関連するタスクの例については、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-109">The following table lists examples of tasks involving the `My.Application.Log` object.</span></span>  
  
|<span data-ttu-id="11a4b-110">終了</span><span class="sxs-lookup"><span data-stu-id="11a4b-110">To</span></span>|<span data-ttu-id="11a4b-111">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="11a4b-111">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="11a4b-112">イベント情報をアプリケーションのログ リスナーに書き込む</span><span class="sxs-lookup"><span data-stu-id="11a4b-112">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="11a4b-113">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="11a4b-113">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="11a4b-114">アプリケーションのログ リスナーに例外情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="11a4b-114">Write exception information to the application's log listeners</span></span>|[<span data-ttu-id="11a4b-115">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="11a4b-115">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="11a4b-116">場所を決定する`My.Application.Log`情報の書き込み</span><span class="sxs-lookup"><span data-stu-id="11a4b-116">Determine where `My.Application.Log` writes information</span></span>|[<span data-ttu-id="11a4b-117">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="11a4b-117">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
   
  
## Examples  
 <span data-ttu-id="11a4b-118">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-118">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="11a4b-119">詳細については、次を参照してください。[方法: ログ メッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-119">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="11a4b-120">
            <see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-120">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Log ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Log();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="11a4b-121">
            <see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-121">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Log (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Log(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.Log : string -&gt; Microsoft.VisualBasic.Logging.Log" Usage="new Microsoft.VisualBasic.Logging.Log name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="11a4b-122">
            <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-122">
              <see cref="T:System.String" />.</span>
          </span>
          <span data-ttu-id="11a4b-123">
            <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> プロパティ オブジェクトに割り当てる名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-123">The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11a4b-124">
            <see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-124">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFileLogWriter">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultFileLogWriter As FileLogTraceListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::FileLogTraceListener ^ DefaultFileLogWriter { Microsoft::VisualBasic::Logging::FileLogTraceListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFileLogWriter : Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.FileLogTraceListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11a4b-125">
            <see langword="Log" /> オブジェクトの基になるファイル (<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクト) を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-125">Gets the file the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11a4b-126">
            <see langword="Log" /> オブジェクトの基になる <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-126">Returns the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11a4b-127">このプロパティを使用しての現在の構成を確認することができます、<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-127">You can use this property to determine the current configuration of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object.</span></span>  
  
 <span data-ttu-id="11a4b-128">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-128">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="11a4b-129">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-129">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="11a4b-130">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-130">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="11a4b-131">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-131">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="InitializeWithDefaultsSinceNoConfigExists">
      <MemberSignature Language="C#" Value="protected internal virtual void InitializeWithDefaultsSinceNoConfigExists ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblynewslot virtual instance void InitializeWithDefaultsSinceNoConfigExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub InitializeWithDefaultsSinceNoConfigExists ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void InitializeWithDefaultsSinceNoConfigExists();" />
      <MemberSignature Language="F#" Value="abstract member InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit&#xA;override this.InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit" Usage="log.InitializeWithDefaultsSinceNoConfigExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="11a4b-132">新しい <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクトを作成し、それを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-132">Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11a4b-133">このメソッドは、新しい作成<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>、その名前を設定`FileLog`を重大度レベルでメッセージを記録するように構成<xref:System.Diagnostics.SourceLevels.Information>以降。</span><span class="sxs-lookup"><span data-stu-id="11a4b-133">This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels.Information> and greater.</span></span> <span data-ttu-id="11a4b-134">新しい<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>オブジェクトに追加し、<xref:System.Diagnostics.TraceSource.Listeners%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="11a4b-134">The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="11a4b-135"><xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A>メソッドを呼び出す場合、<xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A>プロパティが構成されていません。</span><span class="sxs-lookup"><span data-stu-id="11a4b-135">The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured.</span></span> <span data-ttu-id="11a4b-136">トレース ソースは、アプリケーションの構成ファイルで構成できます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-136">The trace source can be configured in the application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="TraceSource">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceSource TraceSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceSource TraceSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceSource As TraceSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceSource ^ TraceSource { System::Diagnostics::TraceSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceSource : System.Diagnostics.TraceSource" Usage="Microsoft.VisualBasic.Logging.Log.TraceSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="11a4b-137">
            <see langword="Log" /> オブジェクトの基になる <see cref="T:System.Diagnostics.TraceSource" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-137">Gets to the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="11a4b-138">
            <see langword="Log" /> オブジェクトの基になる <see cref="T:System.Diagnostics.TraceSource" /> オブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-138">Returns the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the <see langword="Log" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11a4b-139">このプロパティを使用しての現在の構成を確認することができます、`Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-139">You can use this property to determine the current configuration of the `Log` object.</span></span>  
  
 <span data-ttu-id="11a4b-140">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-140">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="11a4b-141">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-141">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="11a4b-142">これは、高度なメンバーの場合。選択しないと、IntelliSense に表示されない、**すべて**タブ。</span><span class="sxs-lookup"><span data-stu-id="11a4b-142">This is an advanced member; it does not show in IntelliSense unless you select the **All** tab.</span></span>  
  
 <span data-ttu-id="11a4b-143">次の表に、関連するタスクの例、`TraceSource`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="11a4b-143">The following table lists an example of a task involving the `TraceSource` property.</span></span>  
  
|<span data-ttu-id="11a4b-144">終了</span><span class="sxs-lookup"><span data-stu-id="11a4b-144">To</span></span>|<span data-ttu-id="11a4b-145">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="11a4b-145">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="11a4b-146">それぞれの情報を取得、`Log`オブジェクトのログ リスナー。</span><span class="sxs-lookup"><span data-stu-id="11a4b-146">Get information for each of the `Log` object's log listeners.</span></span>|[<span data-ttu-id="11a4b-147">トラブルシューティング : ログ リスナー</span><span class="sxs-lookup"><span data-stu-id="11a4b-147">Troubleshooting: Log Listeners</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/troubleshooting-log-listeners.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="11a4b-148">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="11a4b-148">Availability by Project Type</span></span>  
  
|<span data-ttu-id="11a4b-149">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="11a4b-149">Project type</span></span>|<span data-ttu-id="11a4b-150">使用可能</span><span class="sxs-lookup"><span data-stu-id="11a4b-150">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="11a4b-151">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-151">Windows Application</span></span>|<span data-ttu-id="11a4b-152">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-152">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-153">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-153">Class Library</span></span>|<span data-ttu-id="11a4b-154">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-154">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-155">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-155">Console Application</span></span>|<span data-ttu-id="11a4b-156">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-156">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-157">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-157">Windows Control Library</span></span>|<span data-ttu-id="11a4b-158">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-158">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-159">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-159">Web Control Library</span></span>|<span data-ttu-id="11a4b-160">×</span><span class="sxs-lookup"><span data-stu-id="11a4b-160">No</span></span>|  
|<span data-ttu-id="11a4b-161">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="11a4b-161">Windows Service</span></span>|<span data-ttu-id="11a4b-162">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-162">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-163">Web サイト</span><span class="sxs-lookup"><span data-stu-id="11a4b-163">Web Site</span></span>|<span data-ttu-id="11a4b-164">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-164">**Yes**</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSource" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEntry">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="11a4b-165">アプリケーションのログ リスナーにメッセージを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-165">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string -&gt; unit" Usage="log.WriteEntry message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="11a4b-166">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-166">Required.</span>
          </span>
          <span data-ttu-id="11a4b-167">記録するメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-167">The message to log.</span>
          </span>
          <span data-ttu-id="11a4b-168">
            <c>message</c> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-168">If <c>message</c> is <see langword="Nothing" />, an empty string is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11a4b-169">アプリケーションのログ リスナーにメッセージを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-169">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11a4b-170">`WriteEntry`メソッドは、アプリケーションのイベント ログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-170">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="11a4b-171">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-171">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="11a4b-172">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-172">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="11a4b-173">リスナーが受信するにはどのログについて説明します、 `WriteEntry` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-173">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="11a4b-174">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-174">You can change default log listeners.</span></span> <span data-ttu-id="11a4b-175">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="11a4b-175">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="11a4b-176">受け取らないオーバー ロードの場合、`id`引数、`id`に書き込まれたログが次の表で定義されています。</span><span class="sxs-lookup"><span data-stu-id="11a4b-176">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="11a4b-177">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="11a4b-177">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="11a4b-178">0</span><span class="sxs-lookup"><span data-stu-id="11a4b-178">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="11a4b-179">1</span><span class="sxs-lookup"><span data-stu-id="11a4b-179">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="11a4b-180">2</span><span class="sxs-lookup"><span data-stu-id="11a4b-180">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="11a4b-181">3</span><span class="sxs-lookup"><span data-stu-id="11a4b-181">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="11a4b-182">4</span><span class="sxs-lookup"><span data-stu-id="11a4b-182">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="11a4b-183">5</span><span class="sxs-lookup"><span data-stu-id="11a4b-183">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="11a4b-184">6</span><span class="sxs-lookup"><span data-stu-id="11a4b-184">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="11a4b-185">7</span><span class="sxs-lookup"><span data-stu-id="11a4b-185">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="11a4b-186">8</span><span class="sxs-lookup"><span data-stu-id="11a4b-186">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="11a4b-187">9</span><span class="sxs-lookup"><span data-stu-id="11a4b-187">9</span></span>|  
  
 <span data-ttu-id="11a4b-188">次の表に、関連するタスクの例については、`WriteEntry`メソッド。</span><span class="sxs-lookup"><span data-stu-id="11a4b-188">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="11a4b-189">終了</span><span class="sxs-lookup"><span data-stu-id="11a4b-189">To</span></span>|<span data-ttu-id="11a4b-190">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="11a4b-190">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="11a4b-191">イベント情報をアプリケーションのログ リスナーに書き込む</span><span class="sxs-lookup"><span data-stu-id="11a4b-191">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="11a4b-192">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="11a4b-192">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="11a4b-193">場所を決定する`Log`情報の書き込み</span><span class="sxs-lookup"><span data-stu-id="11a4b-193">Determine where `Log` writes information</span></span>|[<span data-ttu-id="11a4b-194">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="11a4b-194">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="11a4b-195">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="11a4b-195">Availability by Project Type</span></span>  
  
|<span data-ttu-id="11a4b-196">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="11a4b-196">Project type</span></span>|<span data-ttu-id="11a4b-197">使用可能</span><span class="sxs-lookup"><span data-stu-id="11a4b-197">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="11a4b-198">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-198">Windows Application</span></span>|<span data-ttu-id="11a4b-199">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-199">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-200">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-200">Class Library</span></span>|<span data-ttu-id="11a4b-201">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-201">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-202">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-202">Console Application</span></span>|<span data-ttu-id="11a4b-203">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-203">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-204">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-204">Windows Control Library</span></span>|<span data-ttu-id="11a4b-205">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-205">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-206">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-206">Web Control Library</span></span>|<span data-ttu-id="11a4b-207">×</span><span class="sxs-lookup"><span data-stu-id="11a4b-207">No</span></span>|  
|<span data-ttu-id="11a4b-208">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="11a4b-208">Windows Service</span></span>|<span data-ttu-id="11a4b-209">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-209">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-210">Web サイト</span><span class="sxs-lookup"><span data-stu-id="11a4b-210">Web Site</span></span>|<span data-ttu-id="11a4b-211">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-211">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="11a4b-212">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-212">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="11a4b-213">詳細については、次を参照してください。[方法: ログ メッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-213">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="11a4b-214">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-214">This code example can run only within a client application.</span></span> <span data-ttu-id="11a4b-215">変更`My.Application.Log.WriteEntry`に`My.Log.WriteEntry`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="11a4b-215">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="11a4b-216">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-216">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="11a4b-217">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-217">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="11a4b-218">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-218">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.TraceEventType severity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message, valuetype System.Diagnostics.TraceEventType severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, severity As TraceEventType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::TraceEventType severity);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.TraceEventType -&gt; unit" Usage="log.WriteEntry (message, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="11a4b-219">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-219">Required.</span>
          </span>
          <span data-ttu-id="11a4b-220">記録するメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-220">The message to log.</span>
          </span>
          <span data-ttu-id="11a4b-221">
            <c>message</c> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-221">If <c>message</c> is <see langword="Nothing" />, an empty string is used.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="11a4b-222">メッセージの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-222">The type of message.</span>
          </span>
          <span data-ttu-id="11a4b-223">既定では、<see langword="TraceEventType.Information" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-223">By default, <see langword="TraceEventType.Information" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11a4b-224">アプリケーションのログ リスナーにメッセージを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-224">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11a4b-225">`WriteEntry`メソッドは、アプリケーションのイベント ログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-225">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="11a4b-226">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-226">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="11a4b-227">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-227">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="11a4b-228">リスナーが受信するにはどのログについて説明します、 `WriteEntry` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-228">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="11a4b-229">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-229">You can change default log listeners.</span></span> <span data-ttu-id="11a4b-230">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="11a4b-230">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="11a4b-231">受け取らないオーバー ロードの場合、`id`引数、`id`に書き込まれたログが次の表で定義されています。</span><span class="sxs-lookup"><span data-stu-id="11a4b-231">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="11a4b-232">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="11a4b-232">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="11a4b-233">0</span><span class="sxs-lookup"><span data-stu-id="11a4b-233">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="11a4b-234">1</span><span class="sxs-lookup"><span data-stu-id="11a4b-234">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="11a4b-235">2</span><span class="sxs-lookup"><span data-stu-id="11a4b-235">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="11a4b-236">3</span><span class="sxs-lookup"><span data-stu-id="11a4b-236">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="11a4b-237">4</span><span class="sxs-lookup"><span data-stu-id="11a4b-237">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="11a4b-238">5</span><span class="sxs-lookup"><span data-stu-id="11a4b-238">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="11a4b-239">6</span><span class="sxs-lookup"><span data-stu-id="11a4b-239">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="11a4b-240">7</span><span class="sxs-lookup"><span data-stu-id="11a4b-240">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="11a4b-241">8</span><span class="sxs-lookup"><span data-stu-id="11a4b-241">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="11a4b-242">9</span><span class="sxs-lookup"><span data-stu-id="11a4b-242">9</span></span>|  
  
 <span data-ttu-id="11a4b-243">次の表に、関連するタスクの例については、`WriteEntry`メソッド。</span><span class="sxs-lookup"><span data-stu-id="11a4b-243">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="11a4b-244">終了</span><span class="sxs-lookup"><span data-stu-id="11a4b-244">To</span></span>|<span data-ttu-id="11a4b-245">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="11a4b-245">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="11a4b-246">イベント情報をアプリケーションのログ リスナーに書き込む</span><span class="sxs-lookup"><span data-stu-id="11a4b-246">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="11a4b-247">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="11a4b-247">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="11a4b-248">場所を決定する`Log`情報の書き込み</span><span class="sxs-lookup"><span data-stu-id="11a4b-248">Determine where `Log` writes information</span></span>|[<span data-ttu-id="11a4b-249">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="11a4b-249">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="11a4b-250">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="11a4b-250">Availability by Project Type</span></span>  
  
|<span data-ttu-id="11a4b-251">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="11a4b-251">Project type</span></span>|<span data-ttu-id="11a4b-252">使用可能</span><span class="sxs-lookup"><span data-stu-id="11a4b-252">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="11a4b-253">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-253">Windows Application</span></span>|<span data-ttu-id="11a4b-254">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-254">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-255">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-255">Class Library</span></span>|<span data-ttu-id="11a4b-256">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-256">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-257">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-257">Console Application</span></span>|<span data-ttu-id="11a4b-258">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-258">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-259">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-259">Windows Control Library</span></span>|<span data-ttu-id="11a4b-260">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-260">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-261">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-261">Web Control Library</span></span>|<span data-ttu-id="11a4b-262">×</span><span class="sxs-lookup"><span data-stu-id="11a4b-262">No</span></span>|  
|<span data-ttu-id="11a4b-263">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="11a4b-263">Windows Service</span></span>|<span data-ttu-id="11a4b-264">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-264">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-265">Web サイト</span><span class="sxs-lookup"><span data-stu-id="11a4b-265">Web Site</span></span>|<span data-ttu-id="11a4b-266">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-266">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="11a4b-267">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-267">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="11a4b-268">詳細については、次を参照してください。[方法: ログ メッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-268">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="11a4b-269">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-269">This code example can run only within a client application.</span></span> <span data-ttu-id="11a4b-270">変更`My.Application.Log.WriteEntry`に`My.Log.WriteEntry`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="11a4b-270">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="11a4b-271">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-271">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="11a4b-272">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-272">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="11a4b-273">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-273">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="11a4b-274">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-274">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.TraceEventType severity, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message, valuetype System.Diagnostics.TraceEventType severity, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, severity As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::TraceEventType severity, int id);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="log.WriteEntry (message, severity, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="11a4b-275">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-275">Required.</span>
          </span>
          <span data-ttu-id="11a4b-276">記録するメッセージ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-276">The message to log.</span>
          </span>
          <span data-ttu-id="11a4b-277">
            <c>message</c> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-277">If <c>message</c> is <see langword="Nothing" />, an empty string is used.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="11a4b-278">メッセージの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-278">The type of message.</span>
          </span>
          <span data-ttu-id="11a4b-279">既定では、<see langword="TraceEventType.Information" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-279">By default, <see langword="TraceEventType.Information" />.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="11a4b-280">メッセージ ID。一般に、メッセージの相関関係を示すために使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-280">Message identifier, typically used for correlation.</span>
          </span>
          <span data-ttu-id="11a4b-281">既定では、表に示した <c>entryType</c> と関連付けられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-281">By default, related to <c>entryType</c> as described in the table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11a4b-282">アプリケーションのログ リスナーにメッセージを書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-282">Writes a message to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11a4b-283">`WriteEntry`メソッドは、アプリケーションのイベント ログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-283">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="11a4b-284">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-284">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="11a4b-285">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-285">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="11a4b-286">リスナーが受信するにはどのログについて説明します、 `WriteEntry` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-286">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="11a4b-287">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-287">You can change default log listeners.</span></span> <span data-ttu-id="11a4b-288">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="11a4b-288">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="11a4b-289">受け取らないオーバー ロードの場合、`id`引数、`id`に書き込まれたログが次の表で定義されています。</span><span class="sxs-lookup"><span data-stu-id="11a4b-289">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="11a4b-290">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="11a4b-290">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="11a4b-291">0</span><span class="sxs-lookup"><span data-stu-id="11a4b-291">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="11a4b-292">1</span><span class="sxs-lookup"><span data-stu-id="11a4b-292">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="11a4b-293">2</span><span class="sxs-lookup"><span data-stu-id="11a4b-293">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="11a4b-294">3</span><span class="sxs-lookup"><span data-stu-id="11a4b-294">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="11a4b-295">4</span><span class="sxs-lookup"><span data-stu-id="11a4b-295">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="11a4b-296">5</span><span class="sxs-lookup"><span data-stu-id="11a4b-296">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="11a4b-297">6</span><span class="sxs-lookup"><span data-stu-id="11a4b-297">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="11a4b-298">7</span><span class="sxs-lookup"><span data-stu-id="11a4b-298">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="11a4b-299">8</span><span class="sxs-lookup"><span data-stu-id="11a4b-299">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="11a4b-300">9</span><span class="sxs-lookup"><span data-stu-id="11a4b-300">9</span></span>|  
  
 <span data-ttu-id="11a4b-301">次の表に、関連するタスクの例については、`WriteEntry`メソッド。</span><span class="sxs-lookup"><span data-stu-id="11a4b-301">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="11a4b-302">終了</span><span class="sxs-lookup"><span data-stu-id="11a4b-302">To</span></span>|<span data-ttu-id="11a4b-303">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="11a4b-303">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="11a4b-304">イベント情報をアプリケーションのログ リスナーに書き込む</span><span class="sxs-lookup"><span data-stu-id="11a4b-304">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="11a4b-305">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="11a4b-305">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="11a4b-306">場所を決定する`Log`情報の書き込み</span><span class="sxs-lookup"><span data-stu-id="11a4b-306">Determine where `Log` writes information</span></span>|[<span data-ttu-id="11a4b-307">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="11a4b-307">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="11a4b-308">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="11a4b-308">Availability by Project Type</span></span>  
  
|<span data-ttu-id="11a4b-309">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="11a4b-309">Project type</span></span>|<span data-ttu-id="11a4b-310">使用可能</span><span class="sxs-lookup"><span data-stu-id="11a4b-310">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="11a4b-311">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-311">Windows Application</span></span>|<span data-ttu-id="11a4b-312">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-312">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-313">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-313">Class Library</span></span>|<span data-ttu-id="11a4b-314">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-314">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-315">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-315">Console Application</span></span>|<span data-ttu-id="11a4b-316">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-316">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-317">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-317">Windows Control Library</span></span>|<span data-ttu-id="11a4b-318">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-318">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-319">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-319">Web Control Library</span></span>|<span data-ttu-id="11a4b-320">×</span><span class="sxs-lookup"><span data-stu-id="11a4b-320">No</span></span>|  
|<span data-ttu-id="11a4b-321">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="11a4b-321">Windows Service</span></span>|<span data-ttu-id="11a4b-322">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-322">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-323">Web サイト</span><span class="sxs-lookup"><span data-stu-id="11a4b-323">Web Site</span></span>|<span data-ttu-id="11a4b-324">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-324">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="11a4b-325">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-325">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="11a4b-326">詳細については、次を参照してください。[方法: ログ メッセージを書き込む](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-326">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="11a4b-327">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-327">This code example can run only within a client application.</span></span> <span data-ttu-id="11a4b-328">変更`My.Application.Log.WriteEntry`に`My.Log.WriteEntry`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="11a4b-328">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="11a4b-329">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-329">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="11a4b-330">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-330">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="11a4b-331">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-331">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="11a4b-332">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-332">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteException">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="11a4b-333">アプリケーションのログ リスナーに例外情報を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-333">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception -&gt; unit" Usage="log.WriteException ex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ex">
          <span data-ttu-id="11a4b-334">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-334">Required.</span>
          </span>
          <span data-ttu-id="11a4b-335">記録する例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-335">Exception to log.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11a4b-336">アプリケーションのログ リスナーに例外情報を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-336">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11a4b-337">`WriteException`メソッドは、アプリケーションのイベント ログ リスナーに例外に含まれる情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-337">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="11a4b-338">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-338">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="11a4b-339">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-339">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="11a4b-340">リスナーが受信するにはどのログについて説明します、 `WriteException` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-340">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="11a4b-341">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-341">You can change default log listeners.</span></span> <span data-ttu-id="11a4b-342">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="11a4b-342">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="11a4b-343">受け取らないオーバー ロードの場合、`id`引数、ログに書き込まれた識別子は、次の表に、によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-343">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="11a4b-344">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="11a4b-344">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="11a4b-345">0</span><span class="sxs-lookup"><span data-stu-id="11a4b-345">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="11a4b-346">1</span><span class="sxs-lookup"><span data-stu-id="11a4b-346">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="11a4b-347">2</span><span class="sxs-lookup"><span data-stu-id="11a4b-347">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="11a4b-348">3</span><span class="sxs-lookup"><span data-stu-id="11a4b-348">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="11a4b-349">4</span><span class="sxs-lookup"><span data-stu-id="11a4b-349">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="11a4b-350">5</span><span class="sxs-lookup"><span data-stu-id="11a4b-350">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="11a4b-351">6</span><span class="sxs-lookup"><span data-stu-id="11a4b-351">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="11a4b-352">7</span><span class="sxs-lookup"><span data-stu-id="11a4b-352">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="11a4b-353">8</span><span class="sxs-lookup"><span data-stu-id="11a4b-353">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="11a4b-354">9</span><span class="sxs-lookup"><span data-stu-id="11a4b-354">9</span></span>|  
  
 <span data-ttu-id="11a4b-355">次の表に、関連するタスクの例については、`WriteException`メソッド。</span><span class="sxs-lookup"><span data-stu-id="11a4b-355">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="11a4b-356">終了</span><span class="sxs-lookup"><span data-stu-id="11a4b-356">To</span></span>|<span data-ttu-id="11a4b-357">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="11a4b-357">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="11a4b-358">アプリケーションのイベント ログ リスナーに例外情報を記述します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-358">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="11a4b-359">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="11a4b-359">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="11a4b-360">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-360">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="11a4b-361">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="11a4b-361">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="11a4b-362">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="11a4b-362">Availability by Project Type</span></span>  
  
|<span data-ttu-id="11a4b-363">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="11a4b-363">Project type</span></span>|<span data-ttu-id="11a4b-364">使用可能</span><span class="sxs-lookup"><span data-stu-id="11a4b-364">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="11a4b-365">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-365">Windows Application</span></span>|<span data-ttu-id="11a4b-366">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-366">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-367">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-367">Class Library</span></span>|<span data-ttu-id="11a4b-368">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-368">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-369">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-369">Console Application</span></span>|<span data-ttu-id="11a4b-370">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-370">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-371">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-371">Windows Control Library</span></span>|<span data-ttu-id="11a4b-372">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-372">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-373">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-373">Web Control Library</span></span>|<span data-ttu-id="11a4b-374">×</span><span class="sxs-lookup"><span data-stu-id="11a4b-374">No</span></span>|  
|<span data-ttu-id="11a4b-375">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="11a4b-375">Windows Service</span></span>|<span data-ttu-id="11a4b-376">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-376">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-377">Web サイト</span><span class="sxs-lookup"><span data-stu-id="11a4b-377">Web Site</span></span>|<span data-ttu-id="11a4b-378">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-378">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="11a4b-379">この例は、使用する方法を示します、`My.Application.Log.WriteException`例外ログに記録するメソッド。</span><span class="sxs-lookup"><span data-stu-id="11a4b-379">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="11a4b-380">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-380">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="11a4b-381">詳細については、次を参照してください。[方法: 例外をログ出力](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-381">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="11a4b-382">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-382">This code example can run only within a client application.</span></span> <span data-ttu-id="11a4b-383">変更`My.Application.Log.WriteException`に`My.Log.WriteException`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="11a4b-383">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="11a4b-384">
            <paramref name="ex" /> は <see langword="Nothing" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-384">
              <paramref name="ex" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="11a4b-385">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-385">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="11a4b-386">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-386">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="11a4b-387">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-387">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex, valuetype System.Diagnostics.TraceEventType severity, string additionalInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception, severity As TraceEventType, additionalInfo As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex, System::Diagnostics::TraceEventType severity, System::String ^ additionalInfo);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception * System.Diagnostics.TraceEventType * string -&gt; unit" Usage="log.WriteException (ex, severity, additionalInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="additionalInfo" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ex">
          <span data-ttu-id="11a4b-388">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-388">Required.</span>
          </span>
          <span data-ttu-id="11a4b-389">記録する例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-389">Exception to log.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="11a4b-390">メッセージの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-390">The type of message.</span>
          </span>
          <span data-ttu-id="11a4b-391">既定では、<see cref="F:System.Diagnostics.TraceEventType.Error" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-391">By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</span>
          </span>
        </param>
        <param name="additionalInfo">
          <span data-ttu-id="11a4b-392">メッセージに追加する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-392">String to append to the message.</span>
          </span>
          <span data-ttu-id="11a4b-393">既定では空の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-393">By default, this is an empty string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11a4b-394">アプリケーションのログ リスナーに例外情報を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-394">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11a4b-395">`WriteException`メソッドは、アプリケーションのイベント ログ リスナーに例外に含まれる情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-395">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="11a4b-396">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-396">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="11a4b-397">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-397">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="11a4b-398">リスナーが受信するにはどのログについて説明します、 `WriteException` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-398">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="11a4b-399">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-399">You can change default log listeners.</span></span> <span data-ttu-id="11a4b-400">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="11a4b-400">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="11a4b-401">受け取らないオーバー ロードの場合、`id`引数、ログに書き込まれた識別子は、次の表に、によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-401">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="11a4b-402">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="11a4b-402">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="11a4b-403">0</span><span class="sxs-lookup"><span data-stu-id="11a4b-403">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="11a4b-404">1</span><span class="sxs-lookup"><span data-stu-id="11a4b-404">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="11a4b-405">2</span><span class="sxs-lookup"><span data-stu-id="11a4b-405">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="11a4b-406">3</span><span class="sxs-lookup"><span data-stu-id="11a4b-406">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="11a4b-407">4</span><span class="sxs-lookup"><span data-stu-id="11a4b-407">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="11a4b-408">5</span><span class="sxs-lookup"><span data-stu-id="11a4b-408">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="11a4b-409">6</span><span class="sxs-lookup"><span data-stu-id="11a4b-409">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="11a4b-410">7</span><span class="sxs-lookup"><span data-stu-id="11a4b-410">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="11a4b-411">8</span><span class="sxs-lookup"><span data-stu-id="11a4b-411">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="11a4b-412">9</span><span class="sxs-lookup"><span data-stu-id="11a4b-412">9</span></span>|  
  
 <span data-ttu-id="11a4b-413">次の表に、関連するタスクの例については、`WriteException`メソッド。</span><span class="sxs-lookup"><span data-stu-id="11a4b-413">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="11a4b-414">終了</span><span class="sxs-lookup"><span data-stu-id="11a4b-414">To</span></span>|<span data-ttu-id="11a4b-415">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="11a4b-415">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="11a4b-416">アプリケーションのイベント ログ リスナーに例外情報を記述します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-416">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="11a4b-417">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="11a4b-417">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="11a4b-418">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-418">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="11a4b-419">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="11a4b-419">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="11a4b-420">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="11a4b-420">Availability by Project Type</span></span>  
  
|<span data-ttu-id="11a4b-421">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="11a4b-421">Project type</span></span>|<span data-ttu-id="11a4b-422">使用可能</span><span class="sxs-lookup"><span data-stu-id="11a4b-422">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="11a4b-423">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-423">Windows Application</span></span>|<span data-ttu-id="11a4b-424">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-424">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-425">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-425">Class Library</span></span>|<span data-ttu-id="11a4b-426">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-426">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-427">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-427">Console Application</span></span>|<span data-ttu-id="11a4b-428">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-428">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-429">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-429">Windows Control Library</span></span>|<span data-ttu-id="11a4b-430">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-430">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-431">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-431">Web Control Library</span></span>|<span data-ttu-id="11a4b-432">×</span><span class="sxs-lookup"><span data-stu-id="11a4b-432">No</span></span>|  
|<span data-ttu-id="11a4b-433">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="11a4b-433">Windows Service</span></span>|<span data-ttu-id="11a4b-434">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-434">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-435">Web サイト</span><span class="sxs-lookup"><span data-stu-id="11a4b-435">Web Site</span></span>|<span data-ttu-id="11a4b-436">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-436">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="11a4b-437">この例は、使用する方法を示します、`My.Application.Log.WriteException`例外ログに記録するメソッド。</span><span class="sxs-lookup"><span data-stu-id="11a4b-437">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="11a4b-438">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-438">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="11a4b-439">詳細については、次を参照してください。[方法: 例外をログ出力](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-439">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="11a4b-440">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-440">This code example can run only within a client application.</span></span> <span data-ttu-id="11a4b-441">変更`My.Application.Log.WriteException`に`My.Log.WriteException`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="11a4b-441">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="11a4b-442">
            <paramref name="ex" /> は <see langword="Nothing" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-442">
              <paramref name="ex" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="11a4b-443">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-443">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="11a4b-444">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-444">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="11a4b-445">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-445">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="11a4b-446">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-446">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex, valuetype System.Diagnostics.TraceEventType severity, string additionalInfo, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception, severity As TraceEventType, additionalInfo As String, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex, System::Diagnostics::TraceEventType severity, System::String ^ additionalInfo, int id);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception * System.Diagnostics.TraceEventType * string * int -&gt; unit" Usage="log.WriteException (ex, severity, additionalInfo, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="additionalInfo" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ex">
          <span data-ttu-id="11a4b-447">必須。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-447">Required.</span>
          </span>
          <span data-ttu-id="11a4b-448">記録する例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-448">Exception to log.</span>
          </span>
        </param>
        <param name="severity">
          <span data-ttu-id="11a4b-449">メッセージの種類。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-449">The type of message.</span>
          </span>
          <span data-ttu-id="11a4b-450">既定では、<see cref="F:System.Diagnostics.TraceEventType.Error" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-450">By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</span>
          </span>
        </param>
        <param name="additionalInfo">
          <span data-ttu-id="11a4b-451">メッセージに追加する文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-451">String to append to the message.</span>
          </span>
          <span data-ttu-id="11a4b-452">既定では空の文字列です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-452">By default, this is an empty string.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="11a4b-453">メッセージ ID。一般に、メッセージの相関関係を示すために使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-453">Message identifier, typically used for correlation.</span>
          </span>
          <span data-ttu-id="11a4b-454">既定では、「解説」の表に示した <c>entryType</c> と関連付けられます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-454">By default, related to <c>entryType</c> as described in the table in the Remarks section.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="11a4b-455">アプリケーションのログ リスナーに例外情報を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-455">Writes exception information to the application's log listeners.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11a4b-456">`WriteException`メソッドは、アプリケーションのイベント ログ リスナーに例外に含まれる情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-456">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="11a4b-457">クライアント アプリケーションで、`Log`オブジェクトを利用、`My.Application.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-457">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="11a4b-458">Web アプリケーションで、`Log`オブジェクトを利用、`My.Log`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="11a4b-458">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="11a4b-459">リスナーが受信するにはどのログについて説明します、 `WriteException` 、メソッドのメッセージを参照してください[チュートリアル: を決定する Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-459">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="11a4b-460">既定のログ リスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-460">You can change default log listeners.</span></span> <span data-ttu-id="11a4b-461">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="11a4b-461">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="11a4b-462">受け取らないオーバー ロードの場合、`id`引数、ログに書き込まれた識別子は、次の表に、によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-462">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="11a4b-463">既定値 `id`</span><span class="sxs-lookup"><span data-stu-id="11a4b-463">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="11a4b-464">0</span><span class="sxs-lookup"><span data-stu-id="11a4b-464">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="11a4b-465">1</span><span class="sxs-lookup"><span data-stu-id="11a4b-465">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="11a4b-466">2</span><span class="sxs-lookup"><span data-stu-id="11a4b-466">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="11a4b-467">3</span><span class="sxs-lookup"><span data-stu-id="11a4b-467">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="11a4b-468">4</span><span class="sxs-lookup"><span data-stu-id="11a4b-468">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="11a4b-469">5</span><span class="sxs-lookup"><span data-stu-id="11a4b-469">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="11a4b-470">6</span><span class="sxs-lookup"><span data-stu-id="11a4b-470">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="11a4b-471">7</span><span class="sxs-lookup"><span data-stu-id="11a4b-471">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="11a4b-472">8</span><span class="sxs-lookup"><span data-stu-id="11a4b-472">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="11a4b-473">9</span><span class="sxs-lookup"><span data-stu-id="11a4b-473">9</span></span>|  
  
 <span data-ttu-id="11a4b-474">次の表に、関連するタスクの例については、`WriteException`メソッド。</span><span class="sxs-lookup"><span data-stu-id="11a4b-474">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="11a4b-475">終了</span><span class="sxs-lookup"><span data-stu-id="11a4b-475">To</span></span>|<span data-ttu-id="11a4b-476">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="11a4b-476">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="11a4b-477">アプリケーションのイベント ログ リスナーに例外情報を記述します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-477">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="11a4b-478">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="11a4b-478">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="11a4b-479">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-479">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="11a4b-480">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="11a4b-480">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="11a4b-481">プロジェクトの種類ごとの可用性</span><span class="sxs-lookup"><span data-stu-id="11a4b-481">Availability by Project Type</span></span>  
  
|<span data-ttu-id="11a4b-482">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="11a4b-482">Project type</span></span>|<span data-ttu-id="11a4b-483">使用可能</span><span class="sxs-lookup"><span data-stu-id="11a4b-483">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="11a4b-484">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-484">Windows Application</span></span>|<span data-ttu-id="11a4b-485">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-485">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-486">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-486">Class Library</span></span>|<span data-ttu-id="11a4b-487">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-487">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-488">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="11a4b-488">Console Application</span></span>|<span data-ttu-id="11a4b-489">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-489">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-490">Windows コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-490">Windows Control Library</span></span>|<span data-ttu-id="11a4b-491">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-491">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-492">Web コントロール ライブラリ</span><span class="sxs-lookup"><span data-stu-id="11a4b-492">Web Control Library</span></span>|<span data-ttu-id="11a4b-493">×</span><span class="sxs-lookup"><span data-stu-id="11a4b-493">No</span></span>|  
|<span data-ttu-id="11a4b-494">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="11a4b-494">Windows Service</span></span>|<span data-ttu-id="11a4b-495">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-495">**Yes**</span></span>|  
|<span data-ttu-id="11a4b-496">Web サイト</span><span class="sxs-lookup"><span data-stu-id="11a4b-496">Web Site</span></span>|<span data-ttu-id="11a4b-497">**はい**</span><span class="sxs-lookup"><span data-stu-id="11a4b-497">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="11a4b-498">この例は、使用する方法を示します、`My.Application.Log.WriteException`例外ログに記録するメソッド。</span><span class="sxs-lookup"><span data-stu-id="11a4b-498">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="11a4b-499">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-499">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="11a4b-500">詳細については、次を参照してください。[方法: 例外をログ出力](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)します。</span><span class="sxs-lookup"><span data-stu-id="11a4b-500">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="11a4b-501">このコード例は、クライアント アプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="11a4b-501">This code example can run only within a client application.</span></span> <span data-ttu-id="11a4b-502">変更`My.Application.Log.WriteException`に`My.Log.WriteException`Web アプリケーション。</span><span class="sxs-lookup"><span data-stu-id="11a4b-502">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="11a4b-503">
            <paramref name="ex" /> は <see langword="Nothing" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-503">
              <paramref name="ex" /> is <see langword="Nothing" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="11a4b-504">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-504">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="11a4b-505">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-505">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="11a4b-506">ファイルとフォルダーにアクセスする機能を制御します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-506">Controls the ability to access files and folders.</span>
          </span>
          <span data-ttu-id="11a4b-507">
            <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span>
          <span class="sxs-lookup">
            <span data-stu-id="11a4b-507">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
  </Members>
</Type>