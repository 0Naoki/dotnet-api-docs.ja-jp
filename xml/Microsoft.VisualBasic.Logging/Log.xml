<Type Name="Log" FullName="Microsoft.VisualBasic.Logging.Log">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d5ea75c108ff9f90bf6aeb0e7bb261e3d43aec0e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69318608" /></Metadata><TypeSignature Language="C#" Value="public class Log" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Log extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.Log" />
  <TypeSignature Language="VB.NET" Value="Public Class Log" />
  <TypeSignature Language="C++ CLI" Value="public ref class Log" />
  <TypeSignature Language="F#" Value="type Log = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3aec4-101">イベントや例外の情報をアプリケーションのログ リスナーに出力するためのプロパティおよびメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-101">Provides a property and methods for writing event and exception information to the application's log listeners.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aec4-102">オブジェクト`My.Application.Log`は、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]のログサービスにアクセスするための簡単なエントリポイントを提供します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-102">The `My.Application.Log` object provides a straightforward entry point from which to access the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]'s logging services.</span></span> <span data-ttu-id="3aec4-103">メソッド`WriteEntry` と`WriteException`メソッドは、アプリケーションのログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-103">The `WriteEntry` and `WriteException` methods write messages to the application's log listeners.</span></span> <span data-ttu-id="3aec4-104">リスナーは、アプリケーションの構成ファイルによって構成できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-104">The listeners can be configured by the application's configuration file.</span></span> <span data-ttu-id="3aec4-105">詳細については、「[チュートリアル:アプリケーション[ログを使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)して、.log が](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)情報を書き込む場所を変更します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-105">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md) and [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="3aec4-106">オブジェクト`My.Application.Log`は、クライアントアプリケーションでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-106">The `My.Application.Log` object is available only for client applications.</span></span> <span data-ttu-id="3aec4-107">Web アプリケーションの場合は`My.Log`、を使用します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-107">For Web applications, use `My.Log`.</span></span> <span data-ttu-id="3aec4-108">詳細については、「<xref:Microsoft.VisualBasic.Logging.AspLog>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-108">For more information, see <xref:Microsoft.VisualBasic.Logging.AspLog>.</span></span>  
  
 <span data-ttu-id="3aec4-109">次の表に、オブジェクトに関連する`My.Application.Log`タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-109">The following table lists examples of tasks involving the `My.Application.Log` object.</span></span>  
  
|<span data-ttu-id="3aec4-110">終了</span><span class="sxs-lookup"><span data-stu-id="3aec4-110">To</span></span>|<span data-ttu-id="3aec4-111">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="3aec4-111">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="3aec4-112">アプリケーションのログリスナーにイベント情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-112">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="3aec4-113">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-113">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="3aec4-114">アプリケーションのログリスナーに例外情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-114">Write exception information to the application's log listeners</span></span>|[<span data-ttu-id="3aec4-115">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="3aec4-115">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="3aec4-116">`My.Application.Log`書き込み情報の決定</span><span class="sxs-lookup"><span data-stu-id="3aec4-116">Determine where `My.Application.Log` writes information</span></span>|[<span data-ttu-id="3aec4-117">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-117">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
   
  
## Examples  
 <span data-ttu-id="3aec4-118">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-118">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="3aec4-119">詳細については、「[方法 :ログメッセージ](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-119">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-120">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-120">Objects (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3aec4-121"><see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-121">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span></span></summary>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-122">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-122">Objects (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Log ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Log();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3aec4-123"><see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-123">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-124">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-124">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Log (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Log(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.Log : string -&gt; Microsoft.VisualBasic.Logging.Log" Usage="new Microsoft.VisualBasic.Logging.Log name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3aec4-125"><see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3aec4-125"><see cref="T:System.String" />.</span></span> <span data-ttu-id="3aec4-126"><see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> プロパティ オブジェクトに割り当てる名前。</span><span class="sxs-lookup"><span data-stu-id="3aec4-126">The name to give to the <see cref="P:Microsoft.VisualBasic.Logging.Log.TraceSource" /> property object.</span></span></param>
        <summary><span data-ttu-id="3aec4-127"><see cref="T:Microsoft.VisualBasic.Logging.Log" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-127">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.Log" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-128">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-128">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultFileLogWriter">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.VisualBasic.Logging.FileLogTraceListener DefaultFileLogWriter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultFileLogWriter As FileLogTraceListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::FileLogTraceListener ^ DefaultFileLogWriter { Microsoft::VisualBasic::Logging::FileLogTraceListener ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFileLogWriter : Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="Microsoft.VisualBasic.Logging.Log.DefaultFileLogWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.FileLogTraceListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3aec4-129"><see langword="Log" /> オブジェクトの基になるファイル (<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクト) を取得します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-129">Gets the file the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the <see langword="Log" /> object.</span></span></summary>
        <value><span data-ttu-id="3aec4-130">オブジェクトの<see langword="Log" />基になるオブジェクト。<see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /></span><span class="sxs-lookup"><span data-stu-id="3aec4-130">The <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object that underlies the <see langword="Log" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aec4-131">このプロパティを使用すると、 <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>オブジェクトの現在の構成を確認できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-131">You can use this property to determine the current configuration of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object.</span></span>  
  
 <span data-ttu-id="3aec4-132">クライアントアプリケーション`Log`では、オブジェクトを`My.Application.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-132">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="3aec4-133">Web アプリケーション`Log`では、オブジェクトを`My.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-133">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="3aec4-134">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-134">Controls the ability to access files and folders.</span></span> <span data-ttu-id="3aec4-135"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="3aec4-135">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-136">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-136">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ac6eb760-3d5d-461e-aedd-40599ee22e49"><span data-ttu-id="3aec4-137">トラブルシューティング : ログ リスナー</span><span class="sxs-lookup"><span data-stu-id="3aec4-137">Troubleshooting: Log Listeners</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeWithDefaultsSinceNoConfigExists">
      <MemberSignature Language="C#" Value="protected internal virtual void InitializeWithDefaultsSinceNoConfigExists ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblynewslot virtual instance void InitializeWithDefaultsSinceNoConfigExists() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.InitializeWithDefaultsSinceNoConfigExists" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub InitializeWithDefaultsSinceNoConfigExists ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void InitializeWithDefaultsSinceNoConfigExists();" />
      <MemberSignature Language="F#" Value="abstract member InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit&#xA;override this.InitializeWithDefaultsSinceNoConfigExists : unit -&gt; unit" Usage="log.InitializeWithDefaultsSinceNoConfigExists " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3aec4-138">新しい <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> オブジェクトを作成し、それを <see cref="P:System.Diagnostics.TraceSource.Listeners" /> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-138">Creates a new <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> object and adds it to the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aec4-139">このメソッドは、新しい<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>を作成し、その`FileLog`名前をに設定し、重大度レベル<xref:System.Diagnostics.SourceLevels.Information>以上のメッセージをログに記録するように構成します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-139">This method creates a new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>, sets its name to `FileLog`, and configures it to log messages with severity level <xref:System.Diagnostics.SourceLevels.Information> and greater.</span></span> <span data-ttu-id="3aec4-140">その後<xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> 、新しいオブジェクトが<xref:System.Diagnostics.TraceSource.Listeners%2A>コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-140">The new <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> object is then added to the <xref:System.Diagnostics.TraceSource.Listeners%2A> collection.</span></span>  
  
 <span data-ttu-id="3aec4-141">プロパティが構成されていない<xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A>場合、はメソッドを呼び出します。 <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A></span><span class="sxs-lookup"><span data-stu-id="3aec4-141">The <xref:Microsoft.VisualBasic.Logging.Log.%23ctor%2A> calls the method if the <xref:Microsoft.VisualBasic.Logging.Log.TraceSource%2A> property has not been configured.</span></span> <span data-ttu-id="3aec4-142">トレースソースは、アプリケーションの構成ファイルで構成できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-142">The trace source can be configured in the application's configuration file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="TraceSource">
      <MemberSignature Language="C#" Value="public System.Diagnostics.TraceSource TraceSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.TraceSource TraceSource" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.Log.TraceSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TraceSource As TraceSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::TraceSource ^ TraceSource { System::Diagnostics::TraceSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TraceSource : System.Diagnostics.TraceSource" Usage="Microsoft.VisualBasic.Logging.Log.TraceSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.TraceSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3aec4-143"><see langword="Log" /> オブジェクトの基になる <see cref="T:System.Diagnostics.TraceSource" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-143">Gets to the <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the <see langword="Log" /> object.</span></span></summary>
        <value><span data-ttu-id="3aec4-144">オブジェクトの<see langword="Log" />基になるオブジェクト。<see cref="T:System.Diagnostics.TraceSource" /></span><span class="sxs-lookup"><span data-stu-id="3aec4-144">The <see cref="T:System.Diagnostics.TraceSource" /> object that underlies the <see langword="Log" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aec4-145">このプロパティを使用すると、 `Log`オブジェクトの現在の構成を確認できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-145">You can use this property to determine the current configuration of the `Log` object.</span></span>  
  
 <span data-ttu-id="3aec4-146">クライアントアプリケーション`Log`では、オブジェクトを`My.Application.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-146">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="3aec4-147">Web アプリケーション`Log`では、オブジェクトを`My.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-147">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="3aec4-148">これは上級メンバーです。**[すべて]** タブを選択しないと、IntelliSense に表示されません。</span><span class="sxs-lookup"><span data-stu-id="3aec4-148">This is an advanced member; it does not show in IntelliSense unless you select the **All** tab.</span></span>  
  
 <span data-ttu-id="3aec4-149">次の表に、プロパティに`TraceSource`関連するタスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-149">The following table lists an example of a task involving the `TraceSource` property.</span></span>  
  
|<span data-ttu-id="3aec4-150">終了</span><span class="sxs-lookup"><span data-stu-id="3aec4-150">To</span></span>|<span data-ttu-id="3aec4-151">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="3aec4-151">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="3aec4-152">各`Log`オブジェクトのログリスナーに関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-152">Get information for each of the `Log` object's log listeners.</span></span>|[<span data-ttu-id="3aec4-153">トラブルシューティング : ログ リスナー</span><span class="sxs-lookup"><span data-stu-id="3aec4-153">Troubleshooting: Log Listeners</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/troubleshooting-log-listeners.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="3aec4-154">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="3aec4-154">Availability by Project Type</span></span>  
  
|<span data-ttu-id="3aec4-155">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="3aec4-155">Project type</span></span>|<span data-ttu-id="3aec4-156">使用可能</span><span class="sxs-lookup"><span data-stu-id="3aec4-156">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="3aec4-157">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-157">Windows Application</span></span>|<span data-ttu-id="3aec4-158">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-158">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-159">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-159">Class Library</span></span>|<span data-ttu-id="3aec4-160">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-160">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-161">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-161">Console Application</span></span>|<span data-ttu-id="3aec4-162">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-162">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-163">Windows コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-163">Windows Control Library</span></span>|<span data-ttu-id="3aec4-164">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-164">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-165">Web コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-165">Web Control Library</span></span>|<span data-ttu-id="3aec4-166">いいえ</span><span class="sxs-lookup"><span data-stu-id="3aec4-166">No</span></span>|  
|<span data-ttu-id="3aec4-167">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="3aec4-167">Windows Service</span></span>|<span data-ttu-id="3aec4-168">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-168">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-169">Web サイト</span><span class="sxs-lookup"><span data-stu-id="3aec4-169">Web Site</span></span>|<span data-ttu-id="3aec4-170">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-170">**Yes**</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceSource" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-171">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-171">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ac6eb760-3d5d-461e-aedd-40599ee22e49"><span data-ttu-id="3aec4-172">トラブルシューティング : ログ リスナー</span><span class="sxs-lookup"><span data-stu-id="3aec4-172">Troubleshooting: Log Listeners</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteEntry">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3aec4-173">アプリケーションのログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-173">Writes a message to the application's log listeners.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string -&gt; unit" Usage="log.WriteEntry message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3aec4-174">必須です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-174">Required.</span></span> <span data-ttu-id="3aec4-175">記録するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="3aec4-175">The message to log.</span></span> <span data-ttu-id="3aec4-176"><paramref name="message" /> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-176">If <paramref name="message" /> is <see langword="Nothing" />, an empty string is used.</span></span></param>
        <summary><span data-ttu-id="3aec4-177">アプリケーションのログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-177">Writes a message to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aec4-178">メソッド`WriteEntry`は、アプリケーションのイベントログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-178">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="3aec4-179">クライアントアプリケーション`Log`では、オブジェクトを`My.Application.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-179">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="3aec4-180">Web アプリケーション`Log`では、オブジェクトを`My.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-180">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="3aec4-181">`WriteEntry`メソッドのメッセージを受信するログリスナーについては[、「チュートリアル:My.Application.Log による情報の書き込み先の確認](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-181">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="3aec4-182">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-182">You can change default log listeners.</span></span> <span data-ttu-id="3aec4-183">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-183">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="3aec4-184">`id`引数を受け取らないオーバーロードの場合、ログに`id`書き込まれたは次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-184">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="3aec4-185">標準`id`</span><span class="sxs-lookup"><span data-stu-id="3aec4-185">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="3aec4-186">0</span><span class="sxs-lookup"><span data-stu-id="3aec4-186">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="3aec4-187">1</span><span class="sxs-lookup"><span data-stu-id="3aec4-187">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="3aec4-188">2</span><span class="sxs-lookup"><span data-stu-id="3aec4-188">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="3aec4-189">3</span><span class="sxs-lookup"><span data-stu-id="3aec4-189">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="3aec4-190">4</span><span class="sxs-lookup"><span data-stu-id="3aec4-190">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="3aec4-191">5</span><span class="sxs-lookup"><span data-stu-id="3aec4-191">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="3aec4-192">6</span><span class="sxs-lookup"><span data-stu-id="3aec4-192">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="3aec4-193">7</span><span class="sxs-lookup"><span data-stu-id="3aec4-193">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="3aec4-194">8</span><span class="sxs-lookup"><span data-stu-id="3aec4-194">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="3aec4-195">9</span><span class="sxs-lookup"><span data-stu-id="3aec4-195">9</span></span>|  
  
 <span data-ttu-id="3aec4-196">次の表に、メソッドに関連する`WriteEntry`タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-196">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="3aec4-197">終了</span><span class="sxs-lookup"><span data-stu-id="3aec4-197">To</span></span>|<span data-ttu-id="3aec4-198">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="3aec4-198">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="3aec4-199">アプリケーションのログリスナーにイベント情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-199">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="3aec4-200">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-200">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="3aec4-201">`Log`書き込み情報の決定</span><span class="sxs-lookup"><span data-stu-id="3aec4-201">Determine where `Log` writes information</span></span>|[<span data-ttu-id="3aec4-202">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-202">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="3aec4-203">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="3aec4-203">Availability by Project Type</span></span>  
  
|<span data-ttu-id="3aec4-204">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="3aec4-204">Project type</span></span>|<span data-ttu-id="3aec4-205">使用可能</span><span class="sxs-lookup"><span data-stu-id="3aec4-205">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="3aec4-206">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-206">Windows Application</span></span>|<span data-ttu-id="3aec4-207">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-207">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-208">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-208">Class Library</span></span>|<span data-ttu-id="3aec4-209">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-209">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-210">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-210">Console Application</span></span>|<span data-ttu-id="3aec4-211">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-211">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-212">Windows コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-212">Windows Control Library</span></span>|<span data-ttu-id="3aec4-213">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-213">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-214">Web コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-214">Web Control Library</span></span>|<span data-ttu-id="3aec4-215">いいえ</span><span class="sxs-lookup"><span data-stu-id="3aec4-215">No</span></span>|  
|<span data-ttu-id="3aec4-216">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="3aec4-216">Windows Service</span></span>|<span data-ttu-id="3aec4-217">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-217">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-218">Web サイト</span><span class="sxs-lookup"><span data-stu-id="3aec4-218">Web Site</span></span>|<span data-ttu-id="3aec4-219">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-219">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3aec4-220">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-220">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="3aec4-221">詳細については、「[方法 :ログメッセージ](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-221">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="3aec4-222">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-222">This code example can run only within a client application.</span></span> <span data-ttu-id="3aec4-223">Web `My.Application.Log.WriteEntry`アプリケーション`My.Log.WriteEntry`の場合は、をに変更します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-223">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3aec4-224">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="3aec4-224">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="3aec4-225">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-225">Controls the ability to access files and folders.</span></span> <span data-ttu-id="3aec4-226"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="3aec4-226">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-227">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-227">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="3aec4-228">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="3aec4-228">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/972a3e0c-2996-4623-a7a9-d7ebc4d207f8"><span data-ttu-id="3aec4-229">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-229">How to: Write Log Messages</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="3aec4-230">チュートリアル: My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-230">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.TraceEventType severity);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message, valuetype System.Diagnostics.TraceEventType severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, severity As TraceEventType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::TraceEventType severity);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.TraceEventType -&gt; unit" Usage="log.WriteEntry (message, severity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3aec4-231">必須です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-231">Required.</span></span> <span data-ttu-id="3aec4-232">記録するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="3aec4-232">The message to log.</span></span> <span data-ttu-id="3aec4-233"><paramref name="message" /> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-233">If <paramref name="message" /> is <see langword="Nothing" />, an empty string is used.</span></span></param>
        <param name="severity"><span data-ttu-id="3aec4-234">メッセージの種類。</span><span class="sxs-lookup"><span data-stu-id="3aec4-234">The type of message.</span></span> <span data-ttu-id="3aec4-235">既定では、<see langword="TraceEventType.Information" /> になります。</span><span class="sxs-lookup"><span data-stu-id="3aec4-235">By default, <see langword="TraceEventType.Information" />.</span></span></param>
        <summary><span data-ttu-id="3aec4-236">アプリケーションのログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-236">Writes a message to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aec4-237">メソッド`WriteEntry`は、アプリケーションのイベントログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-237">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="3aec4-238">クライアントアプリケーション`Log`では、オブジェクトを`My.Application.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-238">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="3aec4-239">Web アプリケーション`Log`では、オブジェクトを`My.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-239">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="3aec4-240">`WriteEntry`メソッドのメッセージを受信するログリスナーについては[、「チュートリアル:My.Application.Log による情報の書き込み先の確認](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-240">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="3aec4-241">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-241">You can change default log listeners.</span></span> <span data-ttu-id="3aec4-242">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-242">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="3aec4-243">`id`引数を受け取らないオーバーロードの場合、ログに`id`書き込まれたは次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-243">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="3aec4-244">標準`id`</span><span class="sxs-lookup"><span data-stu-id="3aec4-244">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="3aec4-245">0</span><span class="sxs-lookup"><span data-stu-id="3aec4-245">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="3aec4-246">1</span><span class="sxs-lookup"><span data-stu-id="3aec4-246">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="3aec4-247">2</span><span class="sxs-lookup"><span data-stu-id="3aec4-247">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="3aec4-248">3</span><span class="sxs-lookup"><span data-stu-id="3aec4-248">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="3aec4-249">4</span><span class="sxs-lookup"><span data-stu-id="3aec4-249">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="3aec4-250">5</span><span class="sxs-lookup"><span data-stu-id="3aec4-250">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="3aec4-251">6</span><span class="sxs-lookup"><span data-stu-id="3aec4-251">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="3aec4-252">7</span><span class="sxs-lookup"><span data-stu-id="3aec4-252">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="3aec4-253">8</span><span class="sxs-lookup"><span data-stu-id="3aec4-253">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="3aec4-254">9</span><span class="sxs-lookup"><span data-stu-id="3aec4-254">9</span></span>|  
  
 <span data-ttu-id="3aec4-255">次の表に、メソッドに関連する`WriteEntry`タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-255">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="3aec4-256">終了</span><span class="sxs-lookup"><span data-stu-id="3aec4-256">To</span></span>|<span data-ttu-id="3aec4-257">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="3aec4-257">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="3aec4-258">アプリケーションのログリスナーにイベント情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-258">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="3aec4-259">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-259">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="3aec4-260">`Log`書き込み情報の決定</span><span class="sxs-lookup"><span data-stu-id="3aec4-260">Determine where `Log` writes information</span></span>|[<span data-ttu-id="3aec4-261">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-261">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="3aec4-262">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="3aec4-262">Availability by Project Type</span></span>  
  
|<span data-ttu-id="3aec4-263">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="3aec4-263">Project type</span></span>|<span data-ttu-id="3aec4-264">使用可能</span><span class="sxs-lookup"><span data-stu-id="3aec4-264">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="3aec4-265">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-265">Windows Application</span></span>|<span data-ttu-id="3aec4-266">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-266">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-267">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-267">Class Library</span></span>|<span data-ttu-id="3aec4-268">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-268">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-269">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-269">Console Application</span></span>|<span data-ttu-id="3aec4-270">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-270">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-271">Windows コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-271">Windows Control Library</span></span>|<span data-ttu-id="3aec4-272">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-272">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-273">Web コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-273">Web Control Library</span></span>|<span data-ttu-id="3aec4-274">いいえ</span><span class="sxs-lookup"><span data-stu-id="3aec4-274">No</span></span>|  
|<span data-ttu-id="3aec4-275">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="3aec4-275">Windows Service</span></span>|<span data-ttu-id="3aec4-276">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-276">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-277">Web サイト</span><span class="sxs-lookup"><span data-stu-id="3aec4-277">Web Site</span></span>|<span data-ttu-id="3aec4-278">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-278">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3aec4-279">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-279">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="3aec4-280">詳細については、「[方法 :ログメッセージ](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-280">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="3aec4-281">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-281">This code example can run only within a client application.</span></span> <span data-ttu-id="3aec4-282">Web `My.Application.Log.WriteEntry`アプリケーション`My.Log.WriteEntry`の場合は、をに変更します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-282">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="3aec4-283">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span><span class="sxs-lookup"><span data-stu-id="3aec4-283">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3aec4-284">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="3aec4-284">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="3aec4-285">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-285">Controls the ability to access files and folders.</span></span> <span data-ttu-id="3aec4-286"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="3aec4-286">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-287">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-287">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="3aec4-288">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="3aec4-288">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/972a3e0c-2996-4623-a7a9-d7ebc4d207f8"><span data-ttu-id="3aec4-289">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-289">How to: Write Log Messages</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="3aec4-290">チュートリアル: My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-290">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteEntry">
      <MemberSignature Language="C#" Value="public void WriteEntry (string message, System.Diagnostics.TraceEventType severity, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteEntry(string message, valuetype System.Diagnostics.TraceEventType severity, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteEntry(System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEntry (message As String, severity As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEntry(System::String ^ message, System::Diagnostics::TraceEventType severity, int id);" />
      <MemberSignature Language="F#" Value="member this.WriteEntry : string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="log.WriteEntry (message, severity, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3aec4-291">必須です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-291">Required.</span></span> <span data-ttu-id="3aec4-292">記録するメッセージ。</span><span class="sxs-lookup"><span data-stu-id="3aec4-292">The message to log.</span></span> <span data-ttu-id="3aec4-293"><paramref name="message" /> が <see langword="Nothing" /> の場合は、空の文字列が使用されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-293">If <paramref name="message" /> is <see langword="Nothing" />, an empty string is used.</span></span></param>
        <param name="severity"><span data-ttu-id="3aec4-294">メッセージの種類。</span><span class="sxs-lookup"><span data-stu-id="3aec4-294">The type of message.</span></span> <span data-ttu-id="3aec4-295">既定では、<see langword="TraceEventType.Information" /> になります。</span><span class="sxs-lookup"><span data-stu-id="3aec4-295">By default, <see langword="TraceEventType.Information" />.</span></span></param>
        <param name="id"><span data-ttu-id="3aec4-296">メッセージ ID。一般に、メッセージの相関関係を示すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-296">Message identifier, typically used for correlation.</span></span> <span data-ttu-id="3aec4-297">既定では、表に示した <c>entryType</c> と関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-297">By default, related to <c>entryType</c> as described in the table.</span></span></param>
        <summary><span data-ttu-id="3aec4-298">アプリケーションのログ リスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-298">Writes a message to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aec4-299">メソッド`WriteEntry`は、アプリケーションのイベントログリスナーにメッセージを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-299">The `WriteEntry` method writes a message to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="3aec4-300">クライアントアプリケーション`Log`では、オブジェクトを`My.Application.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-300">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="3aec4-301">Web アプリケーション`Log`では、オブジェクトを`My.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-301">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="3aec4-302">`WriteEntry`メソッドのメッセージを受信するログリスナーについては[、「チュートリアル:My.Application.Log による情報の書き込み先の確認](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-302">To learn which log listeners receive the `WriteEntry` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="3aec4-303">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-303">You can change default log listeners.</span></span> <span data-ttu-id="3aec4-304">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-304">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="3aec4-305">`id`引数を受け取らないオーバーロードの場合、ログに`id`書き込まれたは次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-305">For overloads that do not take the `id` argument, the `id` written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="3aec4-306">標準`id`</span><span class="sxs-lookup"><span data-stu-id="3aec4-306">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="3aec4-307">0</span><span class="sxs-lookup"><span data-stu-id="3aec4-307">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="3aec4-308">1</span><span class="sxs-lookup"><span data-stu-id="3aec4-308">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="3aec4-309">2</span><span class="sxs-lookup"><span data-stu-id="3aec4-309">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="3aec4-310">3</span><span class="sxs-lookup"><span data-stu-id="3aec4-310">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="3aec4-311">4</span><span class="sxs-lookup"><span data-stu-id="3aec4-311">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="3aec4-312">5</span><span class="sxs-lookup"><span data-stu-id="3aec4-312">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="3aec4-313">6</span><span class="sxs-lookup"><span data-stu-id="3aec4-313">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="3aec4-314">7</span><span class="sxs-lookup"><span data-stu-id="3aec4-314">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="3aec4-315">8</span><span class="sxs-lookup"><span data-stu-id="3aec4-315">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="3aec4-316">9</span><span class="sxs-lookup"><span data-stu-id="3aec4-316">9</span></span>|  
  
 <span data-ttu-id="3aec4-317">次の表に、メソッドに関連する`WriteEntry`タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-317">The following table lists examples of tasks involving the `WriteEntry` method.</span></span>  
  
|<span data-ttu-id="3aec4-318">終了</span><span class="sxs-lookup"><span data-stu-id="3aec4-318">To</span></span>|<span data-ttu-id="3aec4-319">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="3aec4-319">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="3aec4-320">アプリケーションのログリスナーにイベント情報を書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-320">Write event information to the application's log listeners</span></span>|[<span data-ttu-id="3aec4-321">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-321">How to: Write Log Messages</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)|  
|<span data-ttu-id="3aec4-322">`Log`書き込み情報の決定</span><span class="sxs-lookup"><span data-stu-id="3aec4-322">Determine where `Log` writes information</span></span>|[<span data-ttu-id="3aec4-323">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-323">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="3aec4-324">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="3aec4-324">Availability by Project Type</span></span>  
  
|<span data-ttu-id="3aec4-325">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="3aec4-325">Project type</span></span>|<span data-ttu-id="3aec4-326">使用可能</span><span class="sxs-lookup"><span data-stu-id="3aec4-326">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="3aec4-327">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-327">Windows Application</span></span>|<span data-ttu-id="3aec4-328">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-328">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-329">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-329">Class Library</span></span>|<span data-ttu-id="3aec4-330">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-330">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-331">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-331">Console Application</span></span>|<span data-ttu-id="3aec4-332">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-332">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-333">Windows コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-333">Windows Control Library</span></span>|<span data-ttu-id="3aec4-334">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-334">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-335">Web コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-335">Web Control Library</span></span>|<span data-ttu-id="3aec4-336">いいえ</span><span class="sxs-lookup"><span data-stu-id="3aec4-336">No</span></span>|  
|<span data-ttu-id="3aec4-337">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="3aec4-337">Windows Service</span></span>|<span data-ttu-id="3aec4-338">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-338">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-339">Web サイト</span><span class="sxs-lookup"><span data-stu-id="3aec4-339">Web Site</span></span>|<span data-ttu-id="3aec4-340">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-340">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3aec4-341">この例では、 `My.Application.Log.WriteEntry` メソッドを使用してトレース情報をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-341">This example shows how to use the `My.Application.Log.WriteEntry` method to log tracing information.</span></span> <span data-ttu-id="3aec4-342">詳細については、「[方法 :ログメッセージ](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md)を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-342">For more information, see [How to: Write Log Messages](~/docs/visual-basic/developing-apps/programming/log-info/how-to-write-log-messages.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#11)]  
  
 <span data-ttu-id="3aec4-343">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-343">This code example can run only within a client application.</span></span> <span data-ttu-id="3aec4-344">Web `My.Application.Log.WriteEntry`アプリケーション`My.Log.WriteEntry`の場合は、をに変更します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-344">Change `My.Application.Log.WriteEntry` to `My.Log.WriteEntry` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="3aec4-345">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span><span class="sxs-lookup"><span data-stu-id="3aec4-345">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3aec4-346">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="3aec4-346">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="3aec4-347">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-347">Controls the ability to access files and folders.</span></span> <span data-ttu-id="3aec4-348"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="3aec4-348">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-349">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-349">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="3aec4-350">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="3aec4-350">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/972a3e0c-2996-4623-a7a9-d7ebc4d207f8"><span data-ttu-id="3aec4-351">方法: ログ メッセージを書き込む</span><span class="sxs-lookup"><span data-stu-id="3aec4-351">How to: Write Log Messages</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="3aec4-352">チュートリアル: My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-352">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteException">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3aec4-353">アプリケーションのログ リスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-353">Writes exception information to the application's log listeners.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception -&gt; unit" Usage="log.WriteException ex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ex"><span data-ttu-id="3aec4-354">必須です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-354">Required.</span></span> <span data-ttu-id="3aec4-355">記録する例外。</span><span class="sxs-lookup"><span data-stu-id="3aec4-355">Exception to log.</span></span></param>
        <summary><span data-ttu-id="3aec4-356">アプリケーションのログ リスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-356">Writes exception information to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aec4-357">メソッド`WriteException`は、例外に含まれている情報をアプリケーションのイベントログリスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-357">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="3aec4-358">クライアントアプリケーション`Log`では、オブジェクトを`My.Application.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-358">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="3aec4-359">Web アプリケーション`Log`では、オブジェクトを`My.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-359">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="3aec4-360">`WriteException`メソッドのメッセージを受信するログリスナーについては[、「チュートリアル:My.Application.Log による情報の書き込み先の確認](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-360">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="3aec4-361">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-361">You can change default log listeners.</span></span> <span data-ttu-id="3aec4-362">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-362">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="3aec4-363">`id`引数を受け取らないオーバーロードでは、ログに書き込まれる識別子は次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-363">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="3aec4-364">標準`id`</span><span class="sxs-lookup"><span data-stu-id="3aec4-364">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="3aec4-365">0</span><span class="sxs-lookup"><span data-stu-id="3aec4-365">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="3aec4-366">1</span><span class="sxs-lookup"><span data-stu-id="3aec4-366">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="3aec4-367">2</span><span class="sxs-lookup"><span data-stu-id="3aec4-367">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="3aec4-368">3</span><span class="sxs-lookup"><span data-stu-id="3aec4-368">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="3aec4-369">4</span><span class="sxs-lookup"><span data-stu-id="3aec4-369">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="3aec4-370">5</span><span class="sxs-lookup"><span data-stu-id="3aec4-370">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="3aec4-371">6</span><span class="sxs-lookup"><span data-stu-id="3aec4-371">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="3aec4-372">7</span><span class="sxs-lookup"><span data-stu-id="3aec4-372">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="3aec4-373">8</span><span class="sxs-lookup"><span data-stu-id="3aec4-373">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="3aec4-374">9</span><span class="sxs-lookup"><span data-stu-id="3aec4-374">9</span></span>|  
  
 <span data-ttu-id="3aec4-375">次の表に、メソッドに関連する`WriteException`タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-375">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="3aec4-376">終了</span><span class="sxs-lookup"><span data-stu-id="3aec4-376">To</span></span>|<span data-ttu-id="3aec4-377">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="3aec4-377">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="3aec4-378">アプリケーションのイベントログリスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-378">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="3aec4-379">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="3aec4-379">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="3aec4-380">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-380">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="3aec4-381">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-381">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="3aec4-382">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="3aec4-382">Availability by Project Type</span></span>  
  
|<span data-ttu-id="3aec4-383">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="3aec4-383">Project type</span></span>|<span data-ttu-id="3aec4-384">使用可能</span><span class="sxs-lookup"><span data-stu-id="3aec4-384">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="3aec4-385">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-385">Windows Application</span></span>|<span data-ttu-id="3aec4-386">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-386">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-387">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-387">Class Library</span></span>|<span data-ttu-id="3aec4-388">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-388">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-389">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-389">Console Application</span></span>|<span data-ttu-id="3aec4-390">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-390">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-391">Windows コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-391">Windows Control Library</span></span>|<span data-ttu-id="3aec4-392">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-392">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-393">Web コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-393">Web Control Library</span></span>|<span data-ttu-id="3aec4-394">いいえ</span><span class="sxs-lookup"><span data-stu-id="3aec4-394">No</span></span>|  
|<span data-ttu-id="3aec4-395">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="3aec4-395">Windows Service</span></span>|<span data-ttu-id="3aec4-396">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-396">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-397">Web サイト</span><span class="sxs-lookup"><span data-stu-id="3aec4-397">Web Site</span></span>|<span data-ttu-id="3aec4-398">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-398">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3aec4-399">この例では、メソッドを`My.Application.Log.WriteException`使用して例外をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-399">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="3aec4-400">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-400">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="3aec4-401">詳細については、「[方法 :例外をログに記録する](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-401">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="3aec4-402">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-402">This code example can run only within a client application.</span></span> <span data-ttu-id="3aec4-403">Web `My.Application.Log.WriteException`アプリケーション`My.Log.WriteException`の場合は、をに変更します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-403">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3aec4-404"><paramref name="ex" /> は <see langword="Nothing" />です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-404"><paramref name="ex" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3aec4-405">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="3aec4-405">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="3aec4-406">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-406">Controls the ability to access files and folders.</span></span> <span data-ttu-id="3aec4-407"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="3aec4-407">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-408">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-408">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="3aec4-409">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="3aec4-409">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/a26c60e2-ae39-444a-aebb-33eccadc0eeb"><span data-ttu-id="3aec4-410">方法: Visual Basic で例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="3aec4-410">How to: Log Exceptions in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="3aec4-411">チュートリアル: My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-411">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex, valuetype System.Diagnostics.TraceEventType severity, string additionalInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception, severity As TraceEventType, additionalInfo As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex, System::Diagnostics::TraceEventType severity, System::String ^ additionalInfo);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception * System.Diagnostics.TraceEventType * string -&gt; unit" Usage="log.WriteException (ex, severity, additionalInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="additionalInfo" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ex"><span data-ttu-id="3aec4-412">必須です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-412">Required.</span></span> <span data-ttu-id="3aec4-413">記録する例外。</span><span class="sxs-lookup"><span data-stu-id="3aec4-413">Exception to log.</span></span></param>
        <param name="severity"><span data-ttu-id="3aec4-414">メッセージの種類。</span><span class="sxs-lookup"><span data-stu-id="3aec4-414">The type of message.</span></span> <span data-ttu-id="3aec4-415">既定では、<see cref="F:System.Diagnostics.TraceEventType.Error" /> になります。</span><span class="sxs-lookup"><span data-stu-id="3aec4-415">By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</span></span></param>
        <param name="additionalInfo"><span data-ttu-id="3aec4-416">メッセージに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="3aec4-416">String to append to the message.</span></span> <span data-ttu-id="3aec4-417">既定では空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-417">By default, this is an empty string.</span></span></param>
        <summary><span data-ttu-id="3aec4-418">アプリケーションのログ リスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-418">Writes exception information to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aec4-419">メソッド`WriteException`は、例外に含まれている情報をアプリケーションのイベントログリスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-419">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="3aec4-420">クライアントアプリケーション`Log`では、オブジェクトを`My.Application.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-420">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="3aec4-421">Web アプリケーション`Log`では、オブジェクトを`My.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-421">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="3aec4-422">`WriteException`メソッドのメッセージを受信するログリスナーについては[、「チュートリアル:My.Application.Log による情報の書き込み先の確認](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-422">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="3aec4-423">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-423">You can change default log listeners.</span></span> <span data-ttu-id="3aec4-424">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-424">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="3aec4-425">`id`引数を受け取らないオーバーロードでは、ログに書き込まれる識別子は次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-425">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="3aec4-426">標準`id`</span><span class="sxs-lookup"><span data-stu-id="3aec4-426">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="3aec4-427">0</span><span class="sxs-lookup"><span data-stu-id="3aec4-427">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="3aec4-428">1</span><span class="sxs-lookup"><span data-stu-id="3aec4-428">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="3aec4-429">2</span><span class="sxs-lookup"><span data-stu-id="3aec4-429">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="3aec4-430">3</span><span class="sxs-lookup"><span data-stu-id="3aec4-430">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="3aec4-431">4</span><span class="sxs-lookup"><span data-stu-id="3aec4-431">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="3aec4-432">5</span><span class="sxs-lookup"><span data-stu-id="3aec4-432">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="3aec4-433">6</span><span class="sxs-lookup"><span data-stu-id="3aec4-433">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="3aec4-434">7</span><span class="sxs-lookup"><span data-stu-id="3aec4-434">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="3aec4-435">8</span><span class="sxs-lookup"><span data-stu-id="3aec4-435">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="3aec4-436">9</span><span class="sxs-lookup"><span data-stu-id="3aec4-436">9</span></span>|  
  
 <span data-ttu-id="3aec4-437">次の表に、メソッドに関連する`WriteException`タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-437">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="3aec4-438">終了</span><span class="sxs-lookup"><span data-stu-id="3aec4-438">To</span></span>|<span data-ttu-id="3aec4-439">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="3aec4-439">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="3aec4-440">アプリケーションのイベントログリスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-440">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="3aec4-441">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="3aec4-441">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="3aec4-442">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-442">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="3aec4-443">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-443">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="3aec4-444">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="3aec4-444">Availability by Project Type</span></span>  
  
|<span data-ttu-id="3aec4-445">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="3aec4-445">Project type</span></span>|<span data-ttu-id="3aec4-446">使用可能</span><span class="sxs-lookup"><span data-stu-id="3aec4-446">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="3aec4-447">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-447">Windows Application</span></span>|<span data-ttu-id="3aec4-448">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-448">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-449">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-449">Class Library</span></span>|<span data-ttu-id="3aec4-450">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-450">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-451">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-451">Console Application</span></span>|<span data-ttu-id="3aec4-452">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-452">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-453">Windows コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-453">Windows Control Library</span></span>|<span data-ttu-id="3aec4-454">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-454">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-455">Web コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-455">Web Control Library</span></span>|<span data-ttu-id="3aec4-456">いいえ</span><span class="sxs-lookup"><span data-stu-id="3aec4-456">No</span></span>|  
|<span data-ttu-id="3aec4-457">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="3aec4-457">Windows Service</span></span>|<span data-ttu-id="3aec4-458">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-458">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-459">Web サイト</span><span class="sxs-lookup"><span data-stu-id="3aec4-459">Web Site</span></span>|<span data-ttu-id="3aec4-460">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-460">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3aec4-461">この例では、メソッドを`My.Application.Log.WriteException`使用して例外をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-461">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="3aec4-462">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-462">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="3aec4-463">詳細については、「[方法 :例外をログに記録する](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-463">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="3aec4-464">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-464">This code example can run only within a client application.</span></span> <span data-ttu-id="3aec4-465">Web `My.Application.Log.WriteException`アプリケーション`My.Log.WriteException`の場合は、をに変更します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-465">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3aec4-466"><paramref name="ex" /> は <see langword="Nothing" />です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-466"><paramref name="ex" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="3aec4-467">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span><span class="sxs-lookup"><span data-stu-id="3aec4-467">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3aec4-468">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="3aec4-468">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="3aec4-469">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-469">Controls the ability to access files and folders.</span></span> <span data-ttu-id="3aec4-470"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="3aec4-470">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-471">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-471">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="3aec4-472">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="3aec4-472">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/a26c60e2-ae39-444a-aebb-33eccadc0eeb"><span data-ttu-id="3aec4-473">方法: Visual Basic で例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="3aec4-473">How to: Log Exceptions in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="3aec4-474">チュートリアル: My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-474">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteException">
      <MemberSignature Language="C#" Value="public void WriteException (Exception ex, System.Diagnostics.TraceEventType severity, string additionalInfo, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void WriteException(class System.Exception ex, valuetype System.Diagnostics.TraceEventType severity, string additionalInfo, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.Log.WriteException(System.Exception,System.Diagnostics.TraceEventType,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteException (ex As Exception, severity As TraceEventType, additionalInfo As String, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteException(Exception ^ ex, System::Diagnostics::TraceEventType severity, System::String ^ additionalInfo, int id);" />
      <MemberSignature Language="F#" Value="member this.WriteException : Exception * System.Diagnostics.TraceEventType * string * int -&gt; unit" Usage="log.WriteException (ex, severity, additionalInfo, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ex" Type="System.Exception" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="additionalInfo" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ex"><span data-ttu-id="3aec4-475">必須です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-475">Required.</span></span> <span data-ttu-id="3aec4-476">記録する例外。</span><span class="sxs-lookup"><span data-stu-id="3aec4-476">Exception to log.</span></span></param>
        <param name="severity"><span data-ttu-id="3aec4-477">メッセージの種類。</span><span class="sxs-lookup"><span data-stu-id="3aec4-477">The type of message.</span></span> <span data-ttu-id="3aec4-478">既定では、<see cref="F:System.Diagnostics.TraceEventType.Error" /> になります。</span><span class="sxs-lookup"><span data-stu-id="3aec4-478">By default, <see cref="F:System.Diagnostics.TraceEventType.Error" />.</span></span></param>
        <param name="additionalInfo"><span data-ttu-id="3aec4-479">メッセージに追加する文字列。</span><span class="sxs-lookup"><span data-stu-id="3aec4-479">String to append to the message.</span></span> <span data-ttu-id="3aec4-480">既定では空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-480">By default, this is an empty string.</span></span></param>
        <param name="id"><span data-ttu-id="3aec4-481">メッセージ ID。一般に、メッセージの相関関係を示すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-481">Message identifier, typically used for correlation.</span></span> <span data-ttu-id="3aec4-482">既定では、「解説」の表に示した <c>entryType</c> と関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-482">By default, related to <c>entryType</c> as described in the table in the Remarks section.</span></span></param>
        <summary><span data-ttu-id="3aec4-483">アプリケーションのログ リスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-483">Writes exception information to the application's log listeners.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3aec4-484">メソッド`WriteException`は、例外に含まれている情報をアプリケーションのイベントログリスナーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-484">The `WriteException` method writes the information contained in an exception to the application's event log listeners.</span></span>  
  
 <span data-ttu-id="3aec4-485">クライアントアプリケーション`Log`では、オブジェクトを`My.Application.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-485">In client applications, the `Log` object is available through the `My.Application.Log` object.</span></span> <span data-ttu-id="3aec4-486">Web アプリケーション`Log`では、オブジェクトを`My.Log`介してオブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-486">In Web applications, the `Log` object is available through the `My.Log` object.</span></span>  
  
 <span data-ttu-id="3aec4-487">`WriteException`メソッドのメッセージを受信するログリスナーについては[、「チュートリアル:My.Application.Log による情報の書き込み先の確認](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-487">To learn which log listeners receive the `WriteException` method's messages, see [Walkthrough: Determining Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md).</span></span> <span data-ttu-id="3aec4-488">既定のログリスナーを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-488">You can change default log listeners.</span></span> <span data-ttu-id="3aec4-489">詳しくは、「[アプリケーション ログの使用](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-489">For more information, see [Working with Application Logs](~/docs/visual-basic/developing-apps/programming/log-info/working-with-application-logs.md).</span></span>  
  
 <span data-ttu-id="3aec4-490">`id`引数を受け取らないオーバーロードでは、ログに書き込まれる識別子は次の表によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-490">For overloads that do not take the `id` argument, the identifier written to the log is defined by the following table.</span></span>  
  
|`severity`|<span data-ttu-id="3aec4-491">標準`id`</span><span class="sxs-lookup"><span data-stu-id="3aec4-491">Default `id`</span></span>|  
|----------------|------------------|  
|<xref:System.Diagnostics.TraceEventType.Information>|<span data-ttu-id="3aec4-492">0</span><span class="sxs-lookup"><span data-stu-id="3aec4-492">0</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Warning>|<span data-ttu-id="3aec4-493">1</span><span class="sxs-lookup"><span data-stu-id="3aec4-493">1</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Error>|<span data-ttu-id="3aec4-494">2</span><span class="sxs-lookup"><span data-stu-id="3aec4-494">2</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Critical>|<span data-ttu-id="3aec4-495">3</span><span class="sxs-lookup"><span data-stu-id="3aec4-495">3</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Start>|<span data-ttu-id="3aec4-496">4</span><span class="sxs-lookup"><span data-stu-id="3aec4-496">4</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Stop>|<span data-ttu-id="3aec4-497">5</span><span class="sxs-lookup"><span data-stu-id="3aec4-497">5</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Suspend>|<span data-ttu-id="3aec4-498">6</span><span class="sxs-lookup"><span data-stu-id="3aec4-498">6</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Resume>|<span data-ttu-id="3aec4-499">7</span><span class="sxs-lookup"><span data-stu-id="3aec4-499">7</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Verbose>|<span data-ttu-id="3aec4-500">8</span><span class="sxs-lookup"><span data-stu-id="3aec4-500">8</span></span>|  
|<xref:System.Diagnostics.TraceEventType.Transfer>|<span data-ttu-id="3aec4-501">9</span><span class="sxs-lookup"><span data-stu-id="3aec4-501">9</span></span>|  
  
 <span data-ttu-id="3aec4-502">次の表に、メソッドに関連する`WriteException`タスクの例を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-502">The following table lists examples of tasks involving the `WriteException` method.</span></span>  
  
|<span data-ttu-id="3aec4-503">終了</span><span class="sxs-lookup"><span data-stu-id="3aec4-503">To</span></span>|<span data-ttu-id="3aec4-504">解決方法については、</span><span class="sxs-lookup"><span data-stu-id="3aec4-504">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="3aec4-505">アプリケーションのイベントログリスナーに例外情報を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-505">Write exception information to the application's event log listeners.</span></span>|[<span data-ttu-id="3aec4-506">方法 : 例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="3aec4-506">How to: Log Exceptions</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)|  
|<span data-ttu-id="3aec4-507">`Log` が情報を書き込む場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-507">Determine where `Log` writes information.</span></span>|[<span data-ttu-id="3aec4-508">チュートリアル : My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-508">Walkthrough: Determining Where My.Application.Log Writes Information</span></span>](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-determining-where-my-application-log-writes-information.md)|  
  
## <a name="availability-by-project-type"></a><span data-ttu-id="3aec4-509">プロジェクトの種類別の可用性</span><span class="sxs-lookup"><span data-stu-id="3aec4-509">Availability by Project Type</span></span>  
  
|<span data-ttu-id="3aec4-510">プロジェクトの種類</span><span class="sxs-lookup"><span data-stu-id="3aec4-510">Project type</span></span>|<span data-ttu-id="3aec4-511">使用可能</span><span class="sxs-lookup"><span data-stu-id="3aec4-511">Available</span></span>|  
|------------------|---------------|  
|<span data-ttu-id="3aec4-512">Windows アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-512">Windows Application</span></span>|<span data-ttu-id="3aec4-513">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-513">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-514">クラス ライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-514">Class Library</span></span>|<span data-ttu-id="3aec4-515">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-515">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-516">コンソール アプリケーション</span><span class="sxs-lookup"><span data-stu-id="3aec4-516">Console Application</span></span>|<span data-ttu-id="3aec4-517">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-517">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-518">Windows コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-518">Windows Control Library</span></span>|<span data-ttu-id="3aec4-519">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-519">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-520">Web コントロールライブラリ</span><span class="sxs-lookup"><span data-stu-id="3aec4-520">Web Control Library</span></span>|<span data-ttu-id="3aec4-521">いいえ</span><span class="sxs-lookup"><span data-stu-id="3aec4-521">No</span></span>|  
|<span data-ttu-id="3aec4-522">Windows サービス</span><span class="sxs-lookup"><span data-stu-id="3aec4-522">Windows Service</span></span>|<span data-ttu-id="3aec4-523">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-523">**Yes**</span></span>|  
|<span data-ttu-id="3aec4-524">Web サイト</span><span class="sxs-lookup"><span data-stu-id="3aec4-524">Web Site</span></span>|<span data-ttu-id="3aec4-525">**はい**</span><span class="sxs-lookup"><span data-stu-id="3aec4-525">**Yes**</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3aec4-526">この例では、メソッドを`My.Application.Log.WriteException`使用して例外をログに記録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-526">This example shows how to use the `My.Application.Log.WriteException` method to log exceptions.</span></span> <span data-ttu-id="3aec4-527">`Dim` 行と `MsgBox` 行のコメントを解除すると、<xref:System.NullReferenceException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-527">Uncomment the `Dim` and `MsgBox` lines to cause a <xref:System.NullReferenceException> exception.</span></span> <span data-ttu-id="3aec4-528">詳細については、「[方法 :例外をログに記録する](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3aec4-528">For more information, see [How to: Log Exceptions](~/docs/visual-basic/developing-apps/programming/log-info/how-to-log-exceptions.md).</span></span>  
  
 [!code-vb[VbVbalrMyApplicationLog#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplicationLog/VB/Form1.vb#10)]  
  
 <span data-ttu-id="3aec4-529">このコード例は、クライアントアプリケーション内でのみ実行できます。</span><span class="sxs-lookup"><span data-stu-id="3aec4-529">This code example can run only within a client application.</span></span> <span data-ttu-id="3aec4-530">Web `My.Application.Log.WriteException`アプリケーション`My.Log.WriteException`の場合は、をに変更します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-530">Change `My.Application.Log.WriteException` to `My.Log.WriteException` for Web applications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3aec4-531"><paramref name="ex" /> は <see langword="Nothing" />です。</span><span class="sxs-lookup"><span data-stu-id="3aec4-531"><paramref name="ex" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="3aec4-532">メッセージの種類が <see cref="T:System.Diagnostics.TraceEventType" /> 列挙値のどれでもありません。</span><span class="sxs-lookup"><span data-stu-id="3aec4-532">The message type is not one of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3aec4-533">部分信頼を持つコードがこのメソッドを呼び出して、完全信頼を必要とするイベント ログ リスナーに書き込みを行っています。</span><span class="sxs-lookup"><span data-stu-id="3aec4-533">Code with partial trust calls the method, but writes to an event log listener that requires full trust.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="3aec4-534">ファイルとフォルダーにアクセスする機能を制御します。</span><span class="sxs-lookup"><span data-stu-id="3aec4-534">Controls the ability to access files and folders.</span></span> <span data-ttu-id="3aec4-535"><see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="3aec4-535">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <altmember cref="T:System.Exception" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="3aec4-536">オブジェクト (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="3aec4-536">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2581afd1-5791-4bc4-86b2-46244e9fe468"><span data-ttu-id="3aec4-537">Visual Basic でのアプリケーション ログの使用</span><span class="sxs-lookup"><span data-stu-id="3aec4-537">Working with Application Logs in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/a26c60e2-ae39-444a-aebb-33eccadc0eeb"><span data-ttu-id="3aec4-538">方法: Visual Basic で例外をログに記録する</span><span class="sxs-lookup"><span data-stu-id="3aec4-538">How to: Log Exceptions in Visual Basic</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/5b70143a-7741-45f2-ae1d-03324a3a4189"><span data-ttu-id="3aec4-539">チュートリアル: My.Application.Log による情報の書き込み先の確認</span><span class="sxs-lookup"><span data-stu-id="3aec4-539">Walkthrough: Determining Where My.Application.Log Writes Information</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
