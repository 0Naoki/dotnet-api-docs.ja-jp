<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1090d44d40e28b0d29477f2237034a9f61aeea09" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37711913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides a property, event, and methods for interacting with the network to which the computer is connected.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、関連するタスクの例については、`My.Computer.Network`オブジェクト。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|接続の状態を確認してください。|[方法 : 接続ステータスをチェックする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`にhttp://www.cohowinery.com/uploadsします。  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Devices.Network" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コピー先ファイルが既に存在する場合、`DownloadFile`メソッドでは、既存のファイルは上書きされません。 その他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>既存のファイルを上書きするように指定するメソッドは、ユーザーの資格情報を入力または、特定のタイムアウト値を指定します。  
  
 `DownloadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  `DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが不足している場合は、一部のサーバーは 500 (Internal Server Error) を返す可能性があります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、<xref:System.Net.WebClient>クラス。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コピー先ファイルが既に存在する場合、`DownloadFile`メソッドでは、既存のファイルは上書きされません。 その他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>既存のファイルを上書きするように指定するメソッドは、ユーザーの資格情報を入力または、特定のタイムアウト値を指定します。 `DownloadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  `DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが不足している場合は、一部のサーバーは 500 (Internal Server Error) を返す可能性があります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、<xref:System.Net.WebClient>クラス。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コピー先ファイルが既に存在する場合、`DownloadFile`メソッドでは、既存のファイルは上書きされません。 その他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>メソッドを既存のファイルを上書きまたは特定のタイムアウト値を指定するように指定します。  
  
 `DownloadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  `DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが不足している場合は、一部のサーバーは 500 (Internal Server Error) を返す可能性があります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、<xref:System.Net.WebClient>クラス。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コピー先ファイルが既に存在する場合、`DownloadFile`メソッドでは、既存のファイルは上書きされません。 その他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>メソッドを既存のファイルを上書きまたは特定のタイムアウト値を指定するように指定します。  
  
 `DownloadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  `DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが不足している場合は、一部のサーバーは 500 (Internal Server Error) を返す可能性があります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、<xref:System.Net.WebClient>クラス。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">
          <see langword="String" /> or <see cref="T:System.Uri" />. Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">
          <see langword="String" />. File name and path of the downloaded file.</param>
        <param name="networkCredentials">
          <see cref="T:System.Net.ICredentials" />. Credentials to be supplied.</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、**キャンセル**操作をキャンセルするために使用できるボタンをクリックします。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合`connectionTimeout`操作が取り消された場合、および例外がスローされます。  
  
 `DownloadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  `DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが不足している場合は、一部のサーバーは 500 (Internal Server Error) を返す可能性があります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、<xref:System.Net.WebClient>クラス。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">
          <see cref="T:System.Int32" />. Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、**キャンセル**操作をキャンセルするために使用できるボタンをクリックします。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合`connectionTimeout`操作が取り消された場合、および例外がスローされます。  
  
 `DownloadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  `DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが不足している場合は、一部のサーバーは 500 (Internal Server Error) を返す可能性があります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、<xref:System.Net.WebClient>クラス。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="networkCredentials">Credentials to be supplied.</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="onUserCancel">Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <c>showUI</c> set to <see langword="True" />. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、**キャンセル**操作をキャンセルするために使用できるボタンをクリックします。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合`connectionTimeout`操作が取り消された場合、および例外がスローされます。  
  
 `DownloadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  `DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが不足している場合は、一部のサーバーは 500 (Internal Server Error) を返す可能性があります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、<xref:System.Net.WebClient>クラス。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、**キャンセル**操作をキャンセルするために使用できるボタンをクリックします。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合`connectionTimeout`操作が取り消された場合、および例外がスローされます。  
  
 `DownloadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  `DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが不足している場合は、一部のサーバーは 500 (Internal Server Error) を返す可能性があります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、<xref:System.Net.WebClient>クラス。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="onUserCancel">Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <c>ShowUI</c> set to <see langword="True" />. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、**キャンセル**操作をキャンセルするために使用できるボタンをクリックします。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合`connectionTimeout`操作が取り消された場合、および例外がスローされます。  
  
 `DownloadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  `DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが不足している場合は、一部のサーバーは 500 (Internal Server Error) を返す可能性があります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、<xref:System.Net.WebClient>クラス。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">Path of the file to download, including file name and host address.</param>
        <param name="destinationFileName">File name and path of the downloaded file.</param>
        <param name="userName">User name to authenticate. Default is an empty string, "".</param>
        <param name="password">Password to authenticate. Default is an empty string, "".</param>
        <param name="showUI">
          <see langword="True" /> to display the progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval, in milliseconds. Default is 100 seconds.</param>
        <param name="overwrite">
          <see langword="True" /> to overwrite existing files; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="onUserCancel">Specifies behavior when the user clicks **Cancel** or **No** on the dialog box shown as a result of <c>ShowUI</c> set to <see langword="True" />. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Downloads the specified remote file and saves it in the specified location.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、操作の進行状況を示すダイアログ ボックスが表示されます。 ダイアログ ボックスには、**キャンセル**操作をキャンセルするために使用できるボタンをクリックします。 ダイアログ ボックスはモーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。  
  
 指定したサーバーが応答しない場合`connectionTimeout`操作が取り消された場合、および例外がスローされます。  
  
 `DownloadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  `DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェント ヘッダーが不足している場合は、一部のサーバーは 500 (Internal Server Error) を返す可能性があります。 省略可能なヘッダーを送信するを使用して要求を作成する必要があります、<xref:System.Net.WebClient>クラス。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをダウンロードします。|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例は、ファイルをダウンロード`WineList.txt`から`http://www.cohowinery.com/downloads`に保存`C:\Documents and Settings\All Users\Documents`、500 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="destinationFileName" /> ends with a trailing slash.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="overwrite" /> is set to <see langword="False" /> and the destination file already exists.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether a computer is connected to a network.</summary>
        <value>
          <see langword="True" /> コンピューターがネットワークに接続されている場合それ以外の場合<see langword="False" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` 常に返します`False`から呼び出されたときに、`Click Once`アプリケーションまたはユーザーがいないかどうか<xref:System.Net.NetworkInformation.NetworkInformationPermission>します。  
  
 次の表に、関連するタスクの例については、`My.Computer.Network.IsAvailable`プロパティ。  
  
|終了|解決方法については、|  
|-|-|  
|コンピューターがネットワークに接続されているかどうかを確認します。|[方法 : 接続ステータスをチェックする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 この例では、プロパティの状態をチェックし、報告します。  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the network availability changes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションは、`NetworkAvailabilityChanged`ネットワークの可用性が変更されるたびにイベント。 使用することができます、<xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A>のプロパティ、`e`新しいネットワーク接続の状態を取得するパラメーター。 ネットワーク接続の現在の状態を取得する、<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>プロパティ。  
  
 Windows フォーム アプリケーションでは、このイベントは、他のユーザー インターフェイスのイベントと、アプリケーションのメイン スレッドで発生します。 これにより、イベント ハンドラーは、アプリケーションのユーザー インターフェイスに直接アクセスできます。 ただし、アプリケーションがこのイベントが発生したときに、別のユーザー インターフェイス イベントを処理する場合は、このイベントことはできませんを処理するその他のイベント ハンドラーが完了するかを呼び出すまで、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>メソッド。  
  
 使用することはできません、`Handles`ステートメントを処理するために、`NetworkAvailabilityChanged`イベントです。 使用する必要があります、`AddHandler`ステートメント。  
  
 Windows フォーム アプリケーションで、`MyApplication`オブジェクトの公開、`NetworkAvailabilityChanged`が、このイベントと同じ機能を提供するイベントが処理して、`Handles`ステートメント。  
  
> [!NOTE]
>  ハブがより大きなネットワークから切断されている場合でも、多くのネットワーク ハブは、ネットワーク接続を提供します。 その結果、ワイヤード (有線) 接続は、このイベントは、コンピューターとハブ間の接続の変更を示します。  
  
> [!NOTE]
>  `NetworkAvailabilityChanged` Windows 95 および Windows 98 で実行されるアプリケーションや Windows 2000 で非管理者によって実行されるアプリケーションによって、イベントは発生しません。 これらのプラットフォームでのアプリケーションの実行される場合、は、使用、<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>プロパティ。  
  
   
  
## Examples  
 この例では、`My.Computer.Network.NetworkAvailabilityChanged`フォームまたはコントロールのユーザー インターフェイスを更新するイベントです。  
  
 このコードは、フォームまたはコントロールを持つ必要があります、<xref:System.Windows.Forms.Label>という`Label1`します。  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Pings the specified server.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">The URL, computer name, or IP number of the server to ping.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`メソッドはリモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターの ping のポートをオフにすることがありますまたは ping 要求をファイアウォールまたはルーターによってブロックされる可能性があります。  
  
 渡される、アドレス、`Ping`メソッドは、DNS を解決できる必要があり、"http://"を付けることはできません。  
  
   
  
## Examples  
 この例は、決定することにより、サーバーの ping を実行できるかどうかを報告するかどうか、`Ping`メソッドを返します。`True`します。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 置換`"198.01.01.01"`に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 この例は、決定することにより、サーバーの ping を実行できるかどうかを報告するかどうか、`Ping`メソッドが返されます`True`を 1000 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 置換`"www.cohowinery.com"`に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">コードに適用されるセキュリティのアクセス許可のセットについて説明します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.SocketPermission">トランスポート アドレスで接続を受け入れるかに対する権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Windows NT パフォーマンス カウンター コンポーネントへのアクセスを制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ローカル コンピューターのネットワーク情報とトラフィック統計情報へのアクセスを制御します。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">The URI of the server to ping.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`メソッドはリモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターの ping のポートをオフにすることがありますまたは ping 要求をファイアウォールまたはルーターによってブロックされる可能性があります。  
  
 渡される、アドレス、`Ping`メソッドは、DNS を解決できる必要があり、"http://"を付けることはできません。  
  
   
  
## Examples  
 この例は、決定することにより、サーバーの ping を実行できるかどうかを報告するかどうか、`Ping`メソッドを返します。`True`します。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 置換`"198.01.01.01"`に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 この例は、決定することにより、サーバーの ping を実行できるかどうかを報告するかどうか、`Ping`メソッドが返されます`True`を 1000 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 置換`"www.cohowinery.com"`に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">コードに適用されるセキュリティのアクセス許可のセットについて説明します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.SocketPermission">トランスポート アドレスで接続を受け入れるかに対する権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Windows NT パフォーマンス カウンター コンポーネントへのアクセスを制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ローカル コンピューターのネットワーク情報とトラフィック統計情報へのアクセスを制御します。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">The URL, computer name, or IP number of the server to ping.</param>
        <param name="timeout">Time threshold in milliseconds for contacting the destination. Default is 500.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`メソッドはリモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターの ping のポートをオフにすることがありますまたは ping 要求をファイアウォールまたはルーターによってブロックされる可能性があります。  
  
 渡される、アドレス、`Ping`メソッドは、DNS を解決できる必要があり、"http://"を付けることはできません。  
  
   
  
## Examples  
 この例は、決定することにより、サーバーの ping を実行できるかどうかを報告するかどうか、`Ping`メソッドを返します。`True`します。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 置換`"198.01.01.01"`に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 この例は、決定することにより、サーバーの ping を実行できるかどうかを報告するかどうか、`Ping`メソッドが返されます`True`を 1000 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 置換`"www.cohowinery.com"`に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">コードに適用されるセキュリティのアクセス許可のセットについて説明します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.SocketPermission">トランスポート アドレスで接続を受け入れるかに対する権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Windows NT パフォーマンス カウンター コンポーネントへのアクセスを制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ローカル コンピューターのネットワーク情報とトラフィック統計情報へのアクセスを制御します。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">The URI of the server to ping.</param>
        <param name="timeout">Time threshold in milliseconds for contacting the destination. Default is 500.</param>
        <summary>Pings the specified server.</summary>
        <returns>
          <see langword="True" /> if the operation was successful; otherwise <see langword="False" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping`メソッドはリモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターの ping のポートをオフにすることがありますまたは ping 要求をファイアウォールまたはルーターによってブロックされる可能性があります。  
  
 渡される、アドレス、`Ping`メソッドは、DNS を解決できる必要があり、"http://"を付けることはできません。  
  
   
  
## Examples  
 この例は、決定することにより、サーバーの ping を実行できるかどうかを報告するかどうか、`Ping`メソッドを返します。`True`します。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 置換`"198.01.01.01"`に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 この例は、決定することにより、サーバーの ping を実行できるかどうかを報告するかどうか、`Ping`メソッドが返されます`True`を 1000 ミリ秒のタイムアウト間隔を指定します。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 置換`"www.cohowinery.com"`に ping を実行するサーバーの IP アドレス、URL、またはコンピューター名にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">No network connection is available.</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL was not valid.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission">コードに適用されるセキュリティのアクセス許可のセットについて説明します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.SocketPermission">トランスポート アドレスで接続を受け入れるかに対する権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Diagnostics.PerformanceCounterPermission">Windows NT パフォーマンス カウンター コンポーネントへのアクセスを制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.NetworkInformation.NetworkInformationPermission">ローカル コンピューターのネットワーク情報とトラフィック統計情報へのアクセスを制御します。 <see cref="F:System.Net.NetworkInformation.NetworkInformationAccess.Ping" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sends the specified file to the specified host address.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 その他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>メソッドをユーザーの資格情報を指定するか、特定のタイムアウト値を指定します。  
  
 `My.Computer.Network.UploadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`に`http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 その他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>メソッドをユーザーの資格情報を指定するか、特定のタイムアウト値を指定します。  
  
 `My.Computer.Network.UploadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`に`http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The source file path is not valid.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 その他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>特定のタイムアウト値を指定します。  
  
 `My.Computer.Network.UploadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`に`http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 その他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>特定のタイムアウト値を指定します。  
  
 `My.Computer.Network.UploadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`に`http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the default timeout (100 seconds).</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="networkCredentials">Credentials for authentication.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示されが含まれています、**キャンセル**ユーザーがクリックして、操作をキャンセル ボタン。 ダイアログ ボックスがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。  
  
 指定した間隔内では、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`に`http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示されが含まれています、**キャンセル**ユーザーがクリックして、操作をキャンセル ボタン。 ダイアログ ボックスがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。  
  
 指定した間隔内では、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`に`http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="networkCredentials">Credentials for authentication.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <param name="onUserCancel">Action to be taken when the user clicks **Cancel**. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示されが含まれています、**キャンセル**ユーザーがクリックして、操作をキャンセル ボタン。 ダイアログ ボックスがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。  
  
 指定した間隔内では、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`に`http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">
          <see langword="True" /> to display progress of the operation; otherwise <see langword="False" />. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示されが含まれています、**キャンセル**ユーザーがクリックして、操作をキャンセル ボタン。 ダイアログ ボックスがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。  
  
 指定した間隔内では、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`に`http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">Whether to display progress of the operation. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <param name="onUserCancel">Action to be taken when the user clicks **Cancel**. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示されが含まれています、**キャンセル**ユーザーがクリックして、操作をキャンセル ボタン。 ダイアログ ボックスがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。  
  
 指定した間隔内では、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`に`http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Path and name of file to upload.</param>
        <param name="address">URL, IP address, or URI of destination server.</param>
        <param name="userName">User name to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="password">Password to authenticate. Default is an empty string: <c>""</c>.</param>
        <param name="showUI">Whether to display progress of the operation. Default is <see langword="False" />.</param>
        <param name="connectionTimeout">Timeout interval in milliseconds. Default is 100 seconds.</param>
        <param name="onUserCancel">Action to be taken when the user clicks **Cancel**. Default is <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />.</param>
        <summary>Sends the specified file to the specified host address.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示されが含まれています、**キャンセル**ユーザーがクリックして、操作をキャンセル ボタン。 ダイアログ ボックスがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。  
  
 指定した間隔内では、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。  
  
 `My.Computer.Network.UploadFile` 出力は、アプリケーションでネットワークのトレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワークのトレースを有効にする](~/docs/framework/network-programming/enabling-network-tracing.md)します。  
  
> [!NOTE]
>  FTP プロトコルは、プレーン テキストでパスワードを含む情報を送信し、機密情報を送信するのには使用しない必要があります。  
  
 次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッド。  
  
|終了|解決方法については、|  
|-|-|  
|ファイルをアップロードします。|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例は、ファイルをアップロード`Order.txt`に`http://www.cohowinery.com/uploads`します。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="connectionTimeout" /> is less than or equal to zero.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="address" /> does not include a file name.</exception>
        <exception cref="T:System.Security.SecurityException">User lacks necessary permissions to perform a network operation.</exception>
        <exception cref="T:System.TimeoutException">The server does not respond within the specified <paramref name="connectionTimeout" />.</exception>
        <exception cref="T:System.Net.WebException">The request is denied by the target web server.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザー インターフェイスと、クリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <permission cref="T:System.Net.WebPermission">HTTP インターネット リソースにアクセスする権限を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Docs>
    </Member>
  </Members>
</Type>