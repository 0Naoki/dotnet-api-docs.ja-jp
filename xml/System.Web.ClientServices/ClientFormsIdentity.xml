<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="aed36-101">フォーム認証を使用してクライアント アプリケーション サービスに対して認証されたユーザー ID を表します。</span><span class="sxs-lookup"><span data-stu-id="aed36-101">Represents a user identity authenticated for client application services by using forms authentication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aed36-102">クライアント アプリケーション サービスの機能では、このクラスを使用して、認証されたユーザーを表します。</span><span class="sxs-lookup"><span data-stu-id="aed36-102">The client application services feature uses this class to represent an authenticated user.</span></span> <span data-ttu-id="aed36-103">クライアント アプリケーション サービスとフォーム認証を使用するアプリケーションを構成するときに呼び出すことによってユーザーを認証することができます、 `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="aed36-103">When you configure your application to use client application services and forms authentication, you can authenticate a user by calling the `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="aed36-104">認証後、現在への参照を取得することができます<xref:System.Web.ClientServices.ClientFormsIdentity>を通じてインスタンス、<xref:System.Security.Principal.IPrincipal.Identity%2A>のプロパティ、<xref:System.Security.Principal.IPrincipal>を介して取得、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="aed36-104">After authentication, you can retrieve a reference to the current <xref:System.Web.ClientServices.ClientFormsIdentity> instance through the <xref:System.Security.Principal.IPrincipal.Identity%2A> property of the <xref:System.Security.Principal.IPrincipal> retrieved through the `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="aed36-105">詳細については、「[クライアント アプリケーション サービス](~/docs/framework/common-client-technologies/client-application-services.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aed36-105">For more information, see [Client Application Services](~/docs/framework/common-client-technologies/client-application-services.md).</span></span>  
  
 <span data-ttu-id="aed36-106">通常、アクセス、<xref:System.Web.ClientServices.ClientFormsIdentity>オブジェクトとして、<xref:System.Security.Principal.IIdentity>このクラスに直接依存関係を避けるために参照します。</span><span class="sxs-lookup"><span data-stu-id="aed36-106">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="aed36-107">チェックして、ユーザーが認証されるかどうかを決定できます、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> id のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="aed36-107">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="aed36-108">ただし、windows の場合は、クライアント アプリケーション サービスではなく、ユーザーは認証可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aed36-108">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="aed36-109">クライアント アプリケーション サービスのユーザーが認証されたかどうかを判断するのにはまたことを確認して、<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>プロパティの値は"ClientForms"です。</span><span class="sxs-lookup"><span data-stu-id="aed36-109">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span>  
  
 <span data-ttu-id="aed36-110">明示的な使用する必要があります<xref:System.Web.ClientServices.ClientFormsIdentity>呼び出しへの参照、<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>メソッドで、によって定義されていない、<xref:System.Security.Principal.IIdentity>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="aed36-110">You must use an explicit <xref:System.Web.ClientServices.ClientFormsIdentity> reference to call the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method, which is not defined by the <xref:System.Security.Principal.IIdentity> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aed36-111">次のコード例では、このクラスを使用して、アプリケーションがオフライン状態になったときに、ユーザーを自動的に再検証する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="aed36-111">The following example code demonstrates how to use this class to silently revalidate a user when the application leaves the offline state.</span></span> <span data-ttu-id="aed36-112">この例では、<xref:System.Windows.Forms.CheckBox.CheckedChanged>イベント ハンドラーは、チェック ボックスの値に一致するオフラインの状態を更新します。</span><span class="sxs-lookup"><span data-stu-id="aed36-112">In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value.</span></span> <span data-ttu-id="aed36-113">イベント ハンドラーが呼び出すことによってユーザーの再検証しようとした場合は、ユーザーがアプリケーションをオンライン状態を設定、<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="aed36-113">If the user sets the application to the online state, the event handler attempts to revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method.</span></span> <span data-ttu-id="aed36-114">ただし、認証サーバーが使用できない場合、イベント ハンドラーは、アプリケーションをオフラインの状態を返します。</span><span class="sxs-lookup"><span data-stu-id="aed36-114">However, if the authentication server is unavailable, the event handler returns the application to the offline state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aed36-115"><xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドは便宜的なものに過ぎません。</span><span class="sxs-lookup"><span data-stu-id="aed36-115">The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only.</span></span> <span data-ttu-id="aed36-116">このメソッドには戻り値がないため、再検証が失敗したかどうかを示すことはできません。</span><span class="sxs-lookup"><span data-stu-id="aed36-116">Because it does not have a return value, it cannot indicate whether revalidation has failed.</span></span> <span data-ttu-id="aed36-117">再検証は失敗することがあります。たとえば、サーバーでユーザーの資格情報が変更された場合などです。</span><span class="sxs-lookup"><span data-stu-id="aed36-117">Revalidation can fail, for example, if the user credentials have changed on the server.</span></span> <span data-ttu-id="aed36-118">この場合、サービスの呼び出しが失敗した後に、明示的にユーザーを検証するコードを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="aed36-118">In this case, you might want to include code that explicitly validates users after a service call fails.</span></span> <span data-ttu-id="aed36-119">詳細については、Web 設定へのアクセス」セクションを参照してください。[チュートリアル: クライアント アプリケーション サービスを使用する](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md)です。</span><span class="sxs-lookup"><span data-stu-id="aed36-119">For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="aed36-120">認証済みユーザーの名前。</span><span class="sxs-lookup"><span data-stu-id="aed36-120">The name of the authenticated user.</span></span></param>
        <param name="password"><span data-ttu-id="aed36-121">認証済みユーザーのパスワード。</span><span class="sxs-lookup"><span data-stu-id="aed36-121">The password of the authenticated user.</span></span></param>
        <param name="provider"><span data-ttu-id="aed36-122">ユーザーの認証に使用したメンバーシップ プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="aed36-122">The membership provider used to authenticate the user.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="aed36-123">使用した認証の種類。</span><span class="sxs-lookup"><span data-stu-id="aed36-123">The type of authentication that is used.</span></span></param>
        <param name="isAuthenticated">
          <span data-ttu-id="aed36-124">ユーザーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aed36-124"><see langword="true" /> if the user has been authenticated; otherwise, <see langword="false" />.</span></span></param>
        <param name="authenticationCookies"><span data-ttu-id="aed36-125">認証サーバーから取得したクッキー。</span><span class="sxs-lookup"><span data-stu-id="aed36-125">The cookies retrieved from the authentication service.</span></span></param>
        <summary><span data-ttu-id="aed36-126"><see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="aed36-126">Initializes a new instance of the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aed36-127">認証サーバーから取得したクッキーのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="aed36-127">Gets a collection of the cookies retrieved from the authentication service.</span></span></summary>
        <value><span data-ttu-id="aed36-128">認証サーバーから取得したクッキー。</span><span class="sxs-lookup"><span data-stu-id="aed36-128">The cookies retrieved from the authentication service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aed36-129">このプロパティは、アプリケーション コードで使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="aed36-129">This property is not meant for use in your application code.</span></span> <span data-ttu-id="aed36-130">このプロパティを介して取得された cookie を変更することはできません明確と有用な情報がないです。</span><span class="sxs-lookup"><span data-stu-id="aed36-130">You cannot meaningfully modify the cookies retrieved through this property, and they contain no useful information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aed36-131">ユーザーの認証に使用した認証の種類を取得します。</span><span class="sxs-lookup"><span data-stu-id="aed36-131">Gets the type of authentication that is used to authenticate the user.</span></span></summary>
        <value><span data-ttu-id="aed36-132">ユーザーの認証に使用した認証の種類。</span><span class="sxs-lookup"><span data-stu-id="aed36-132">The type of authentication that is used to authenticate the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aed36-133">通常、アクセス、<xref:System.Web.ClientServices.ClientFormsIdentity>オブジェクトとして、<xref:System.Security.Principal.IIdentity>このクラスに直接依存関係を避けるために参照します。</span><span class="sxs-lookup"><span data-stu-id="aed36-133">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="aed36-134">チェックして、ユーザーが認証されるかどうかを決定できます、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> id のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="aed36-134">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="aed36-135">ただし、windows の場合は、クライアント アプリケーション サービスではなく、ユーザーは認証可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aed36-135">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="aed36-136">クライアント アプリケーション サービスのユーザーが認証されたかどうかを判断するのにはまたことを確認して、<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>プロパティの値は"ClientForms"です。</span><span class="sxs-lookup"><span data-stu-id="aed36-136">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span> <span data-ttu-id="aed36-137">詳細については、次を参照してください。、<xref:System.Web.ClientServices.ClientFormsIdentity>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="aed36-137">For more information, see the <xref:System.Web.ClientServices.ClientFormsIdentity> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aed36-138">次のコード例を使用してこのプロパティを使用する方法を示します、<xref:System.Security.Principal.IIdentity>クライアント アプリケーション サービスのユーザーが現在認証されているかどうかを決定する参照。</span><span class="sxs-lookup"><span data-stu-id="aed36-138">The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services.</span></span> <span data-ttu-id="aed36-139">この例では、アプリケーションが、既定の構成、ユーザーは、もう一度認証 cookie 期限が切れたときにログインする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="aed36-139">This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires.</span></span> <span data-ttu-id="aed36-140">それ以外の場合、<xref:System.Net.WebException>ユーザー ログインの有効期限が切れている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aed36-140">Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired.</span></span> <span data-ttu-id="aed36-141">詳細については、「 [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aed36-141">For more information, see [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="aed36-142">
          <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> で使用したリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="aed36-142">Releases the resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aed36-143">
          <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="aed36-143">Releases all resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aed36-144"><xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> を使い終わったら <xref:System.Web.ClientServices.ClientFormsIdentity> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="aed36-144">Call <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> when you are finished using the <xref:System.Web.ClientServices.ClientFormsIdentity>.</span></span> <span data-ttu-id="aed36-145"><xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> メソッドによって、<xref:System.Web.ClientServices.ClientFormsIdentity> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="aed36-145">The <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> method leaves the <xref:System.Web.ClientServices.ClientFormsIdentity> in an unusable state.</span></span> <span data-ttu-id="aed36-146">呼び出した後<xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Web.ClientServices.ClientFormsIdentity>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Web.ClientServices.ClientFormsIdentity>占有されていた。</span><span class="sxs-lookup"><span data-stu-id="aed36-146">After calling <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>, you must release all references to the <xref:System.Web.ClientServices.ClientFormsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Web.ClientServices.ClientFormsIdentity> was occupying.</span></span> <span data-ttu-id="aed36-147">詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="aed36-147">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aed36-148"><xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Web.ClientServices.ClientFormsIdentity> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="aed36-148">Always call <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Web.ClientServices.ClientFormsIdentity>.</span></span> <span data-ttu-id="aed36-149">そうしないと、ガベージ コレクターが <xref:System.Web.ClientServices.ClientFormsIdentity> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="aed36-149">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Web.ClientServices.ClientFormsIdentity> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="aed36-150">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aed36-150"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="aed36-151"><see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="aed36-151">Releases the unmanaged resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aed36-152">このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="aed36-152">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="aed36-153">`Dispose()` プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。</span><span class="sxs-lookup"><span data-stu-id="aed36-153">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="aed36-154"><xref:System.Object.Finalize%2A> 呼び出す`Dispose`で`disposing`'éý'`false`です。</span><span class="sxs-lookup"><span data-stu-id="aed36-154"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="aed36-155">ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放します。 この<xref:System.Web.ClientServices.ClientFormsIdentity>参照します。</span><span class="sxs-lookup"><span data-stu-id="aed36-155">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Web.ClientServices.ClientFormsIdentity> references.</span></span> <span data-ttu-id="aed36-156">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="aed36-156">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="aed36-157"><see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="aed36-157"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="aed36-158">オーバーライドする場合<see langword="Dispose(Boolean)" />既に破棄されているを以前の呼び出しでオブジェクトを参照しないように注意する<see langword="Dispose" />です。</span><span class="sxs-lookup"><span data-stu-id="aed36-158">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="aed36-159">実装する方法の詳細についての<see langword="Dispose(Boolean)" />を参照してください[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)です。</span><span class="sxs-lookup"><span data-stu-id="aed36-159">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="aed36-160">詳細については<see langword="Dispose" />と<see cref="M:System.Object.Finalize" />を参照してください[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)と[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。</span><span class="sxs-lookup"><span data-stu-id="aed36-160">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aed36-161">ユーザーが認証されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="aed36-161">Gets a value indicating whether the user has been authenticated.</span></span></summary>
        <value>
          <span data-ttu-id="aed36-162">ユーザーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="aed36-162"><see langword="true" /> if the user has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aed36-163">通常、アクセス、<xref:System.Web.ClientServices.ClientFormsIdentity>オブジェクトとして、<xref:System.Security.Principal.IIdentity>このクラスに直接依存関係を避けるために参照します。</span><span class="sxs-lookup"><span data-stu-id="aed36-163">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="aed36-164">チェックして、ユーザーが認証されるかどうかを決定できます、 <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> id のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="aed36-164">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="aed36-165">ただし、windows の場合は、クライアント アプリケーション サービスではなく、ユーザーは認証可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aed36-165">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="aed36-166">クライアント アプリケーション サービスのユーザーが認証されたかどうかを判断するのにはまたことを確認して、<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>プロパティの値は"ClientForms"です。</span><span class="sxs-lookup"><span data-stu-id="aed36-166">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span> <span data-ttu-id="aed36-167">詳細については、次を参照してください。、<xref:System.Web.ClientServices.ClientFormsIdentity>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="aed36-167">For more information, see the <xref:System.Web.ClientServices.ClientFormsIdentity> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aed36-168">次のコード例を使用してこのプロパティを使用する方法を示します、<xref:System.Security.Principal.IIdentity>クライアント アプリケーション サービスのユーザーが現在認証されているかどうかを決定する参照。</span><span class="sxs-lookup"><span data-stu-id="aed36-168">The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services.</span></span> <span data-ttu-id="aed36-169">この例では、アプリケーションが、既定の構成、ユーザーは、もう一度認証 cookie 期限が切れたときにログインする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="aed36-169">This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires.</span></span> <span data-ttu-id="aed36-170">それ以外の場合、<xref:System.Net.WebException>ユーザー ログインの有効期限が切れている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="aed36-170">Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired.</span></span> <span data-ttu-id="aed36-171">詳細については、「 [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="aed36-171">For more information, see [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aed36-172">ユーザーの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="aed36-172">Gets the name of the user.</span></span></summary>
        <value><span data-ttu-id="aed36-173">ユーザーの名前。</span><span class="sxs-lookup"><span data-stu-id="aed36-173">The name of the user.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="aed36-174">ユーザーの認証に使用したメンバーシップ プロバイダーを取得します。</span><span class="sxs-lookup"><span data-stu-id="aed36-174">Gets the membership provider that is used to authenticate the user.</span></span></summary>
        <value><span data-ttu-id="aed36-175">ユーザーの認証に使用したメンバーシップ プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="aed36-175">The membership provider that is used to authenticate the user.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="aed36-176">キャッシュされた資格情報を使用してユーザーを自動的に認証します。</span><span class="sxs-lookup"><span data-stu-id="aed36-176">Silently authenticates the user by using cached credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aed36-177">フォーム認証を使用して、現在のユーザーを検証するときに、<xref:System.Web.ClientServices.ClientFormsIdentity>クラスは、アプリケーションが実行されている限り、ユーザーの資格情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="aed36-177">When you use forms authentication to validate the current user, the <xref:System.Web.ClientServices.ClientFormsIdentity> class stores the user credentials as long as the application is running.</span></span> <span data-ttu-id="aed36-178">ただし、認証 cookie の有効期限が切れるまで、ユーザーは認証のみです。</span><span class="sxs-lookup"><span data-stu-id="aed36-178">However, the user is only authenticated until the authentication cookie expires.</span></span> <span data-ttu-id="aed36-179">Cookie が経過すると、リモート ロールまたは Web 設定サービスにアクセスするには、ユーザーを再検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="aed36-179">After the cookie expires, the user must be revalidated to access the remote roles or Web settings services.</span></span> <span data-ttu-id="aed36-180">使用することができます、**サービスの詳細設定**」の説明に従って、ユーザーを自動的に再検証するアプリケーションの構成 ダイアログ ボックス[する方法: クライアント アプリケーション サービスを構成する](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)です。</span><span class="sxs-lookup"><span data-stu-id="aed36-180">You can use the **Advanced Settings for Services** dialog box to configure your application to automatically revalidate the user, as described in [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span> <span data-ttu-id="aed36-181">ただし、cookie の有効期限を優先するアプリケーションを構成する場合は、することができますプログラムでユーザーの再検証を呼び出して、<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="aed36-181">However, if you configure your application to honor the cookie expiration, you can programmatically revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method.</span></span> <span data-ttu-id="aed36-182">このメソッドもオフライン モードからオンライン モードに切り替える際、アプリケーションがシャット ダウンされたため間、オフラインです。</span><span class="sxs-lookup"><span data-stu-id="aed36-182">This method is also useful when switching from offline mode to online mode, because the application may have been shut down while offline.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="aed36-183"><xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドは便宜的なものに過ぎません。</span><span class="sxs-lookup"><span data-stu-id="aed36-183">The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only.</span></span> <span data-ttu-id="aed36-184">このメソッドには戻り値がないため、再検証が失敗したかどうかを示すことはできません。</span><span class="sxs-lookup"><span data-stu-id="aed36-184">Because it does not have a return value, it cannot indicate whether revalidation has failed.</span></span> <span data-ttu-id="aed36-185">再検証は失敗することがあります。たとえば、サーバーでユーザーの資格情報が変更された場合などです。</span><span class="sxs-lookup"><span data-stu-id="aed36-185">Revalidation can fail, for example, if the user credentials have changed on the server.</span></span> <span data-ttu-id="aed36-186">この場合、サービスの呼び出しが失敗した後に、明示的にユーザーを検証するコードを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="aed36-186">In this case, you might want to include code that explicitly validates users after a service call fails.</span></span> <span data-ttu-id="aed36-187">詳細については、Web 設定へのアクセス」セクションを参照してください。[チュートリアル: クライアント アプリケーション サービスを使用する](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md)です。</span><span class="sxs-lookup"><span data-stu-id="aed36-187">For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aed36-188">次のコード例では、このメソッドを使用して、アプリケーションがオフライン状態になったときに、ユーザーを自動的に再検証する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="aed36-188">The following example code demonstrates how to use this method to silently revalidate a user when the application leaves the offline state.</span></span> <span data-ttu-id="aed36-189">この例では、<xref:System.Windows.Forms.CheckBox.CheckedChanged>イベント ハンドラーは、チェック ボックスの値に一致するオフラインの状態を更新します。</span><span class="sxs-lookup"><span data-stu-id="aed36-189">In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value.</span></span> <span data-ttu-id="aed36-190">ユーザーは、アプリケーションをオンライン状態を設定、イベント ハンドラーは、ユーザーの再検証しようとします。</span><span class="sxs-lookup"><span data-stu-id="aed36-190">If the user sets the application to the online state, the event handler attempts to revalidate the user.</span></span> <span data-ttu-id="aed36-191">ただし、認証サーバーが使用できない場合、イベント ハンドラーは、アプリケーションをオフラインの状態を返します。</span><span class="sxs-lookup"><span data-stu-id="aed36-191">However, if the authentication server is unavailable, the event handler returns the application to the offline state.</span></span>  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
      </Docs>
    </Member>
  </Members>
</Type>