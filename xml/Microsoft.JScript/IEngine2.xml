<Type Name="IEngine2" FullName="Microsoft.JScript.IEngine2">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44cda478a953801371c7e3c1dad01bd9ee44d43e" />
    <Meta Name="ms.sourcegitcommit" Value="ad09e88f48ca55b181e8d272cfc3742eadc3f939" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/08/2018" />
    <Meta Name="ms.locfileid" Value="35230330" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEngine2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEngine2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IEngine2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEngine2" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEngine2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("BFF6C97F-0705-4394-88B8-A03A4B8B4CD7")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>IActiveScript ホストで必要な追加の機能を定義します。 <see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> エンジンによって実装されます。</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
  </Docs>
  <Members>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.Vsa.IJSVsaEngine Clone (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.Vsa.IJSVsaEngine Clone(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Clone(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (domain As AppDomain) As IJSVsaEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::Vsa::IJSVsaEngine ^ Clone(AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.Vsa.IJSVsaEngine</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">新しいエンジンを作成するアプリケーション ドメイン。</param>
        <summary>クラスで実装される場合、新しいアプリケーション ドメインで実行される、コンパイル済みの状態および名前付き項目が同一の新しいエンジンを作成します。 これは、JScript では実装されていません。</summary>
        <returns>新しいエンジン。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="CompileEmpty">
      <MemberSignature Language="C#" Value="public bool CompileEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompileEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.CompileEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Function CompileEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompileEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クラスで実装される場合、現在エンジンにあるすべての状態のコンパイルを実行します。 参照、コード項目、ホスト項目、リソースのすべてがコンパイラで処理されます。</summary>
        <returns>コンパイルが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="ConnectEvents">
      <MemberSignature Language="C#" Value="public void ConnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ConnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.ConnectEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub ConnectEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ConnectEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クラスで実装される場合、グローバル イベント ハンドラーに対するイベントが指定された、登録済みのすべてのイベント ソースの接続が可能であることをエンジンに通知します。 これは、JScript では実装されていません。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectEvents">
      <MemberSignature Language="C#" Value="public void DisconnectEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DisconnectEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.DisconnectEvents" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisconnectEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisconnectEvents();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クラスで実装される場合、イベント ハンドラーからエンジンにイベント ソースのアンフックを指示します。 これは、JScript では実装されていません。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クラスで実装される場合、コンパイル手順によって作成されたコンパイル済みのアセンブリを取得します。</summary>
        <returns>コンパイル済みのアセンブリ。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.IVsaScriptScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.IVsaScriptScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As IVsaScriptScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::IVsaScriptScope ^ GetGlobalScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.IVsaScriptScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クラスで実装される場合、グローバル スコープ オブジェクトを取得します。</summary>
        <returns>グローバル スコープ オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.GetModule" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule () As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ GetModule();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クラスで実装される場合、コンパイル済みのアセンブリからコード モジュールを取得します。</summary>
        <returns>コンパイル済みのアセンブリからのコード モジュール。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="InitVsaEngine">
      <MemberSignature Language="C#" Value="public void InitVsaEngine (string rootMoniker, Microsoft.JScript.Vsa.IJSVsaSite site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitVsaEngine(string rootMoniker, class Microsoft.JScript.Vsa.IJSVsaSite site) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.InitVsaEngine(System.String,Microsoft.JScript.Vsa.IJSVsaSite)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitVsaEngine (rootMoniker As String, site As IJSVsaSite)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitVsaEngine(System::String ^ rootMoniker, Microsoft::JScript::Vsa::IJSVsaSite ^ site);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootMoniker" Type="System.String" />
        <Parameter Name="site" Type="Microsoft.JScript.Vsa.IJSVsaSite" />
      </Parameters>
      <Docs>
        <param name="rootMoniker">スクリプト エンジンのルート モニカー。 詳細については、「<see cref="P:Microsoft.JScript.Vsa.IJSVsaEngine.RootMoniker" />」を参照してください。</param>
        <param name="site">スクリプト エンジンがホストと通信するときに使用するホスト実装の <see cref="T:Microsoft.JScript.Vsa.IJSVsaSite" /> オブジェクト。 詳細については、「<see cref="P:Microsoft.JScript.Vsa.IJSVsaEngine.Site" />」を参照してください。</param>
        <summary>クラスで実装される場合、<see cref="T:Microsoft.JScript.Vsa.VsaEngine" /> を初期化します。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="Interrupt">
      <MemberSignature Language="C#" Value="public void Interrupt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Interrupt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Interrupt" />
      <MemberSignature Language="VB.NET" Value="Public Sub Interrupt ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Interrupt();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クラスで実装される場合、スクリプト コードを実行しているスレッドで <see cref="M:System.Threading.Thread.Abort" /> を呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、コードを実行するために使用したスレッドで呼び出すことはできません。 これを行う場合は、独自のスレッドを停止します。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="RegisterEventSource">
      <MemberSignature Language="C#" Value="public void RegisterEventSource (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterEventSource(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.RegisterEventSource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterEventSource (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterEventSource(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">イベントを提供する追加の項目の名前。</param>
        <summary>クラスで実装される場合、接続するイベントを <see cref="M:Microsoft.JScript.IEngine2.ConnectEvents" /> メソッドが認識できるように、イベント ソースとして設定されている項目の名前を指定します。 これは、JScript では実装されていません。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="Restart">
      <MemberSignature Language="C#" Value="public void Restart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Restart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Restart" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restart ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restart();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クラスで実装される場合、このメソッドは、新しい式を評価する前にエンジンを初期状態にリセットする必要があるときにデバッガーによって呼び出されます。 このメソッドは、追加した項目とグローバル スコープを元の状態にリセットします。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public void Run (AppDomain domain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Run(class System.AppDomain domain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.Run(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Run (domain As AppDomain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Run(AppDomain ^ domain);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <param name="domain">コンパイル済みのコードを実行するアプリケーション ドメイン。</param>
        <summary>クラスで実装される場合、指定したアプリケーション ドメイン内でコンパイル済みのコードを実行します。 マネージ エンジンはユーザー指定のアプリケーション ドメイン内でのコードの実行をサポートしていないため、これは JScript では実装されていません。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
    <Member MemberName="RunEmpty">
      <MemberSignature Language="C#" Value="public void RunEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RunEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IEngine2.RunEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunEmpty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クラスで実装される場合、現在の <see cref="T:System.AppDomain" /> 内のコンパイル済みのコードを実行します。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.Vsa.VsaEngine" />
      </Docs>
    </Member>
  </Members>
</Type>