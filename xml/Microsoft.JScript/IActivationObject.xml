<Type Name="IActivationObject" FullName="Microsoft.JScript.IActivationObject">
  <TypeSignature Language="C#" Value="public interface IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivationObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9d6d8-101">スコープを解決するためのメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-101">Defines methods for resolving scope.</span></span> <span data-ttu-id="9d6d8-102">このインターフェイスは、スコープの階層に参加しているすべてのオブジェクトによって実装されます。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-102">This interface is implemented by all objects that take part in a scope hierarchy.</span></span></summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ActivationObject" />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
  </Docs>
  <Members>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDefaultThisObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d6d8-103">クラスで実装される場合、現在の既定のスコープを取得します。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-103">When implemented in a class, gets the current default scope.</span></span> <span data-ttu-id="9d6d8-104">これは、<see langword="with" /> ステートメントのスコープに含まれるオブジェクトまたはグローバル スコープのどちらかになります。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-104">Either the contained object of a <see langword="with" /> statement scope, or the global scope.</span></span></summary>
        <returns><span data-ttu-id="9d6d8-105">現在の既定のスコープ。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-105">The current default scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d6d8-106">検索するフィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-106">The name of the field to search for.</span></span></param>
        <param name="lexLevel"><span data-ttu-id="9d6d8-107">検索する構文レベル。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-107">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="9d6d8-108">クラスで実装される場合、スコープの階層を検索して、指定した名前のフィールドを返します。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-108">When implemented in a class, returns a field that has the specified name by searching the scope hierarchy.</span></span> <span data-ttu-id="9d6d8-109">このメソッドは、構文レベルで指定されたスコープのみを検索します。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-109">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="9d6d8-110">指定した名前の <see cref="T:System.Reflection.FieldInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-110">A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6d8-111">このメソッドは、コンパイル時に解決できないフィールドに適用されます。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-111">This method applies to fields that cannot be resolved at compile time.</span></span> <span data-ttu-id="9d6d8-112">これは、ようなときに、`eval`外側のスコープ内のフィールドを式で参照します。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-112">This happens when an `eval` expression refers to a field in the outer scope.</span></span> <span data-ttu-id="9d6d8-113">`eval`式は、同じ名前を持つローカル フィールドを宣言できる、フィールドは、外側のスコープのフィールドに事前バインドをすることはできません。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-113">Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9d6d8-114">クラスで実装される場合、静的変数を含むスコープ (モジュール スコープなど) が見つかるまでスコープの階層を検索して、グローバル スコープを取得します。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-114">When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</span></span></summary>
        <returns><span data-ttu-id="9d6d8-115">グローバル スコープ。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-115">The global scope.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d6d8-116">フィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-116">The name of the field.</span></span></param>
        <summary><span data-ttu-id="9d6d8-117">クラスで実装される場合、指定した名前のフィールドのローカル宣言を取得します。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-117">When implemented in a class, gets the local declaration of a field that has the specified name.</span></span> <span data-ttu-id="9d6d8-118">これは、コンパイル時のエラー チェックに使用されます。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-118">This is used at compile time for error checking.</span></span></summary>
        <returns><span data-ttu-id="9d6d8-119">フィールドのローカル宣言。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-119">The local declaration of the field.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="9d6d8-120">検索するメンバーの名前。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-120">The name of the member to search for.</span></span></param>
        <param name="lexlevel"><span data-ttu-id="9d6d8-121">検索する構文レベル。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-121">The lexical level to search.</span></span></param>
        <summary><span data-ttu-id="9d6d8-122">クラスで実装される場合、スコープの階層を検索して、指定したメンバーの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-122">When implemented in a class, gets the value of the specified member by searching the scope hierarchy.</span></span> <span data-ttu-id="9d6d8-123">このメソッドは、構文レベルで指定されたスコープのみを検索します。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-123">This method searches only the scope that is specified by the lexical level.</span></span></summary>
        <returns><span data-ttu-id="9d6d8-124">メンバー <paramref name="name" /> の値。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-124">The value of the member <paramref name="name" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d6d8-125">このメソッドは、コンパイル時に解決できないメンバーに適用されます。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-125">This method applies to members that cannot be resolved at compile time.</span></span> <span data-ttu-id="9d6d8-126">これが発生したときに、`eval`外側のスコープ内のメンバーを式で参照します。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-126">This occurs when an `eval` expression refers to a member in the outer scope.</span></span> <span data-ttu-id="9d6d8-127">`eval`式は、同じ名前のローカルのメンバーを宣言できる、外部スコープのメンバーに事前バインディングをメンバーにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="9d6d8-127">Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
  </Members>
</Type>