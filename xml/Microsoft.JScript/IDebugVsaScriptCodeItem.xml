<Type Name="IDebugVsaScriptCodeItem" FullName="Microsoft.JScript.IDebugVsaScriptCodeItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66e914a30fcef7a41bbb9be46f214cbcc40fd42e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39832498" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDebugVsaScriptCodeItem" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IDebugVsaScriptCodeItem" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDebugVsaScriptCodeItem" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDebugVsaScriptCodeItem" />
  <TypeSignature Language="F#" Value="type IDebugVsaScriptCodeItem = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f00f5-101">式の評価および文字列の解析を行うメソッドを定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f00f5-101">Defines methods that evaluate expressions and parse strings.</span>
      </span>
      <span data-ttu-id="f00f5-102">このインターフェイスは、通常、コード ブロックを表すオブジェクトによって実装され、デバッガーによって呼び出されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f00f5-102">This interface is typically implemented by an object that represents a code block, and it is typically called by a debugger.</span>
      </span>
      <span data-ttu-id="f00f5-103">このインターフェイスは、IActiveScript ホストで必要な追加の機能を提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f00f5-103">This interface provides extra functionality that is needed by an IActiveScript host.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public object Evaluate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Evaluate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate" />
      <MemberSignature Language="VB.NET" Value="Public Function Evaluate () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Evaluate();" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : unit -&gt; obj" Usage="iDebugVsaScriptCodeItem.Evaluate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f00f5-104">クラスで実装される場合には、コード項目で表現されるブロック、式、またはステートメントを評価し、値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-104">When implemented in a class, evaluates the block, expression, or statement represented by the code item and returns the value.</span>
          </span>
          <span data-ttu-id="f00f5-105">一般にこれは、ウォッチ ウィンドウ内などで、式の評価が必要になるデバッガーによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-105">It is typically called by a debugger that needs to evaluate an expression (in a Watch window, for example).</span>
          </span>
          <span data-ttu-id="f00f5-106">式の場合、この値はその式の戻り値になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-106">For expressions, the value is the result of the expression.</span>
          </span>
          <span data-ttu-id="f00f5-107">ブロックとステートメントの場合、結果の式はそのブロックまたはステートメントで計算された最終的な式になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-107">For blocks and statements, the resulting expression is the last expression calculated by the block or statement.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f00f5-108">ステートメント、式、またはブロックの評価結果を表す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-108">Returns a value that represents the evaluation of the statement, expression, or block.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f00f5-109">なお、<xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A>メソッドはコードと同じように、<xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f00f5-109">Note that the <xref:Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate%2A> method is functionally identical to the <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> method.</span></span> <span data-ttu-id="f00f5-110">マーシャ リング属性のみが異なります。</span><span class="sxs-lookup"><span data-stu-id="f00f5-110">Only the marshaling attributes differ.</span></span> <span data-ttu-id="f00f5-111">このバージョンのインターフェイスを使用すると、として戻り値を取得する管理されていないデバッガー、`IUnknown`ポインターではなく`VARIANT`します。</span><span class="sxs-lookup"><span data-stu-id="f00f5-111">This version of the interface allows an unmanaged debugger to obtain the return value as an `IUnknown` pointer rather than a `VARIANT`.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ParseNamedBreakPoint">
      <MemberSignature Language="C#" Value="public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ParseNamedBreakPoint(string input, [out] string&amp; functionName, [out] int32&amp; nargs, [out] string&amp; arguments, [out] string&amp; returnType, [out] unsigned int64&amp; offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ParseNamedBreakPoint (input As String, ByRef functionName As String, ByRef nargs As Integer, ByRef arguments As String, ByRef returnType As String, ByRef offset As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ParseNamedBreakPoint(System::String ^ input, [Runtime::InteropServices::Out] System::String ^ % functionName, [Runtime::InteropServices::Out] int % nargs, [Runtime::InteropServices::Out] System::String ^ % arguments, [Runtime::InteropServices::Out] System::String ^ % returnType, [Runtime::InteropServices::Out] System::UInt64 % offset);" />
      <MemberSignature Language="F#" Value="abstract member ParseNamedBreakPoint : string *  *  *  *  *  -&gt; bool" Usage="iDebugVsaScriptCodeItem.ParseNamedBreakPoint (input, functionName, nargs, arguments, returnType, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="functionName" Type="System.String" RefType="out" />
        <Parameter Name="nargs" Type="System.Int32" RefType="out" />
        <Parameter Name="arguments" Type="System.String" RefType="out" />
        <Parameter Name="returnType" Type="System.String" RefType="out" />
        <Parameter Name="offset" Type="System.UInt64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="f00f5-112">関数、省略可能な引数リスト、および省略可能な IL オフセットを指定する、整形式の名前付きブレークポイント文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-112">A well-formed named breakpoint string giving a function, optional argument list, and optional IL offset.</span>
          </span>
        </param>
        <param name="functionName">
          <span data-ttu-id="f00f5-113">入力文字列を解析した結果の関数の名前を返すか、または入力文字列が整形式でない場合に空の文字列を返す出力パラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-113">Out parameter returning the name of the function parsed out of the input string, or the empty string if the input string is not well formed.</span>
          </span>
        </param>
        <param name="nargs">
          <span data-ttu-id="f00f5-114">省略可能な引数リスト内の引数の数を返す出力パラメーター。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-114">Out parameter returning the number of arguments in the optional argument list.</span>
          </span>
          <span data-ttu-id="f00f5-115">引数リストがないかまたは文字列が整形式でない場合は 0 を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-115">Returns zero if there is no arguments list or if the string is not well formed.</span>
          </span>
        </param>
        <param name="arguments">
          <span data-ttu-id="f00f5-116">引数リスト内にあるすべての引数の型名をスペースで区切ったリストとして返す出力パラメーター。引数リストが見つからないか入力文字列が整形式でない場合は空の文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-116">Out parameter returning a space-separated list of the names of the types of all the arguments in the arguments list, or an empty string if the arguments list was missing or the input string was not well formed.</span>
          </span>
        </param>
        <param name="returnType">
          <span data-ttu-id="f00f5-117">入力で指定された関数の戻り値の型が含まれた文字列を返す出力パラメーター。戻り値の型が見つからないか入力文字列が整形式でない場合は空の文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-117">Out parameter returning a string containing the return type of the function named in the input, or the empty string if the return type was missing or the input string was not well formed.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="f00f5-118">入力文字列から IL オフセットを指定する符号なしの長整数。IL オフセットがないか文字列が整形式でない場合は 0 を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-118">Unsigned long integer giving the IL offset from the input string, or zero if there was no IL offset or the string was not well formed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f00f5-119">クラスで実装される場合、文字列を解析し、解析された出力情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-119">When implemented in a class, parses strings and returns the parsed-out information.</span>
          </span>
          <span data-ttu-id="f00f5-120">一般にこのメソッドは、<see langword="string" /> として表現されるブレークポイントについての情報を解析する必要があるデバッガーによって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-120">This method is typically called by a debugger that needs to parse information about a breakpoint that is represented as a <see langword="string" />.</span>
          </span>
          <span data-ttu-id="f00f5-121">デバッガーには、ユーザーが *functionname-arguments-ILoffset* の形式で入力したブレークポイントが設定されている場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-121">The debugger might have a breakpoint typed in by the user in the form *functionname-arguments-ILoffset*.</span>
          </span>
          <span data-ttu-id="f00f5-122">名前付きブレークポイント文字には、<c>F.B(C.D[], int, arg : double ) : C.Abc + 123</c> のような複雑な形式を与えることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-122">A named breakpoint string can have a complex format, for example, <c>F.B(C.D[], int, arg : double ) : C.Abc + 123.</c></span>
          </span>
          <span data-ttu-id="f00f5-123">パラメーター一覧は、IL オフセットと同様に、オプションです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-123">The parameter list is optional, as is the IL offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f00f5-124">名前付きブレークポイントが正常に解析される場合は <see langword="true" /> を返します。それ以外の場合は <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f00f5-124">Returns <see langword="true" /> if the named breakpoint is successfully parsed, <see langword="false" /> otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>